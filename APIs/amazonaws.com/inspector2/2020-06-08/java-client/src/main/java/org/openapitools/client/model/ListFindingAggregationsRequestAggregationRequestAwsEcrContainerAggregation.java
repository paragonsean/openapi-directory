/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AwsEcrContainerSortBy;
import org.openapitools.client.model.SortOrder;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation {
  public static final String SERIALIZED_NAME_ARCHITECTURES = "architectures";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURES)
  private List architectures;

  public static final String SERIALIZED_NAME_IMAGE_SHAS = "imageShas";
  @SerializedName(SERIALIZED_NAME_IMAGE_SHAS)
  private List imageShas;

  public static final String SERIALIZED_NAME_IMAGE_TAGS = "imageTags";
  @SerializedName(SERIALIZED_NAME_IMAGE_TAGS)
  private List imageTags;

  public static final String SERIALIZED_NAME_REPOSITORIES = "repositories";
  @SerializedName(SERIALIZED_NAME_REPOSITORIES)
  private List repositories;

  public static final String SERIALIZED_NAME_RESOURCE_IDS = "resourceIds";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDS)
  private List resourceIds;

  public static final String SERIALIZED_NAME_SORT_BY = "sortBy";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private AwsEcrContainerSortBy sortBy;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private SortOrder sortOrder;

  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation() {
  }

  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation architectures(List architectures) {
    this.architectures = architectures;
    return this;
  }

  /**
   * Get architectures
   * @return architectures
   */
  @javax.annotation.Nullable
  public List getArchitectures() {
    return architectures;
  }

  public void setArchitectures(List architectures) {
    this.architectures = architectures;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation imageShas(List imageShas) {
    this.imageShas = imageShas;
    return this;
  }

  /**
   * Get imageShas
   * @return imageShas
   */
  @javax.annotation.Nullable
  public List getImageShas() {
    return imageShas;
  }

  public void setImageShas(List imageShas) {
    this.imageShas = imageShas;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation imageTags(List imageTags) {
    this.imageTags = imageTags;
    return this;
  }

  /**
   * Get imageTags
   * @return imageTags
   */
  @javax.annotation.Nullable
  public List getImageTags() {
    return imageTags;
  }

  public void setImageTags(List imageTags) {
    this.imageTags = imageTags;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation repositories(List repositories) {
    this.repositories = repositories;
    return this;
  }

  /**
   * Get repositories
   * @return repositories
   */
  @javax.annotation.Nullable
  public List getRepositories() {
    return repositories;
  }

  public void setRepositories(List repositories) {
    this.repositories = repositories;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation resourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

  /**
   * Get resourceIds
   * @return resourceIds
   */
  @javax.annotation.Nullable
  public List getResourceIds() {
    return resourceIds;
  }

  public void setResourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation sortBy(AwsEcrContainerSortBy sortBy) {
    this.sortBy = sortBy;
    return this;
  }

  /**
   * Get sortBy
   * @return sortBy
   */
  @javax.annotation.Nullable
  public AwsEcrContainerSortBy getSortBy() {
    return sortBy;
  }

  public void setSortBy(AwsEcrContainerSortBy sortBy) {
    this.sortBy = sortBy;
  }


  public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation sortOrder(SortOrder sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public SortOrder getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(SortOrder sortOrder) {
    this.sortOrder = sortOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation = (ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation) o;
    return Objects.equals(this.architectures, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.architectures) &&
        Objects.equals(this.imageShas, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.imageShas) &&
        Objects.equals(this.imageTags, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.imageTags) &&
        Objects.equals(this.repositories, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.repositories) &&
        Objects.equals(this.resourceIds, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.resourceIds) &&
        Objects.equals(this.sortBy, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.sortBy) &&
        Objects.equals(this.sortOrder, listFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architectures, imageShas, imageTags, repositories, resourceIds, sortBy, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation {\n");
    sb.append("    architectures: ").append(toIndentedString(architectures)).append("\n");
    sb.append("    imageShas: ").append(toIndentedString(imageShas)).append("\n");
    sb.append("    imageTags: ").append(toIndentedString(imageTags)).append("\n");
    sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("architectures");
    openapiFields.add("imageShas");
    openapiFields.add("imageTags");
    openapiFields.add("repositories");
    openapiFields.add("resourceIds");
    openapiFields.add("sortBy");
    openapiFields.add("sortOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation is not found in the empty JSON string", ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `architectures`
      if (jsonObj.get("architectures") != null && !jsonObj.get("architectures").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("architectures"));
      }
      // validate the optional field `imageShas`
      if (jsonObj.get("imageShas") != null && !jsonObj.get("imageShas").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("imageShas"));
      }
      // validate the optional field `imageTags`
      if (jsonObj.get("imageTags") != null && !jsonObj.get("imageTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("imageTags"));
      }
      // validate the optional field `repositories`
      if (jsonObj.get("repositories") != null && !jsonObj.get("repositories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("repositories"));
      }
      // validate the optional field `resourceIds`
      if (jsonObj.get("resourceIds") != null && !jsonObj.get("resourceIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceIds"));
      }
      // validate the optional field `sortBy`
      if (jsonObj.get("sortBy") != null && !jsonObj.get("sortBy").isJsonNull()) {
        AwsEcrContainerSortBy.validateJsonElement(jsonObj.get("sortBy"));
      }
      // validate the optional field `sortOrder`
      if (jsonObj.get("sortOrder") != null && !jsonObj.get("sortOrder").isJsonNull()) {
        SortOrder.validateJsonElement(jsonObj.get("sortOrder"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.class));

       return (TypeAdapter<T>) new TypeAdapter<ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation>() {
           @Override
           public void write(JsonWriter out, ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation
   * @throws IOException if the JSON string is invalid with respect to ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation
   */
  public static ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation.class);
  }

  /**
   * Convert an instance of ListFindingAggregationsRequestAggregationRequestAwsEcrContainerAggregation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

