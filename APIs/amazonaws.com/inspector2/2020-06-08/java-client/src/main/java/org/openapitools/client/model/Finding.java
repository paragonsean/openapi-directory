/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ExploitAvailable;
import org.openapitools.client.model.FindingCodeVulnerabilityDetails;
import org.openapitools.client.model.FindingEpss;
import org.openapitools.client.model.FindingExploitabilityDetails;
import org.openapitools.client.model.FindingInspectorScoreDetails;
import org.openapitools.client.model.FindingNetworkReachabilityDetails;
import org.openapitools.client.model.FindingPackageVulnerabilityDetails;
import org.openapitools.client.model.FindingRemediation;
import org.openapitools.client.model.FindingStatus;
import org.openapitools.client.model.FindingType;
import org.openapitools.client.model.FixAvailable;
import org.openapitools.client.model.Severity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Details about an Amazon Inspector finding.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Finding {
  public static final String SERIALIZED_NAME_AWS_ACCOUNT_ID = "awsAccountId";
  @SerializedName(SERIALIZED_NAME_AWS_ACCOUNT_ID)
  private String awsAccountId;

  public static final String SERIALIZED_NAME_CODE_VULNERABILITY_DETAILS = "codeVulnerabilityDetails";
  @SerializedName(SERIALIZED_NAME_CODE_VULNERABILITY_DETAILS)
  private FindingCodeVulnerabilityDetails codeVulnerabilityDetails;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EPSS = "epss";
  @SerializedName(SERIALIZED_NAME_EPSS)
  private FindingEpss epss;

  public static final String SERIALIZED_NAME_EXPLOIT_AVAILABLE = "exploitAvailable";
  @SerializedName(SERIALIZED_NAME_EXPLOIT_AVAILABLE)
  private ExploitAvailable exploitAvailable;

  public static final String SERIALIZED_NAME_EXPLOITABILITY_DETAILS = "exploitabilityDetails";
  @SerializedName(SERIALIZED_NAME_EXPLOITABILITY_DETAILS)
  private FindingExploitabilityDetails exploitabilityDetails;

  public static final String SERIALIZED_NAME_FINDING_ARN = "findingArn";
  @SerializedName(SERIALIZED_NAME_FINDING_ARN)
  private String findingArn;

  public static final String SERIALIZED_NAME_FIRST_OBSERVED_AT = "firstObservedAt";
  @SerializedName(SERIALIZED_NAME_FIRST_OBSERVED_AT)
  private OffsetDateTime firstObservedAt;

  public static final String SERIALIZED_NAME_FIX_AVAILABLE = "fixAvailable";
  @SerializedName(SERIALIZED_NAME_FIX_AVAILABLE)
  private FixAvailable fixAvailable;

  public static final String SERIALIZED_NAME_INSPECTOR_SCORE = "inspectorScore";
  @SerializedName(SERIALIZED_NAME_INSPECTOR_SCORE)
  private Double inspectorScore;

  public static final String SERIALIZED_NAME_INSPECTOR_SCORE_DETAILS = "inspectorScoreDetails";
  @SerializedName(SERIALIZED_NAME_INSPECTOR_SCORE_DETAILS)
  private FindingInspectorScoreDetails inspectorScoreDetails;

  public static final String SERIALIZED_NAME_LAST_OBSERVED_AT = "lastObservedAt";
  @SerializedName(SERIALIZED_NAME_LAST_OBSERVED_AT)
  private OffsetDateTime lastObservedAt;

  public static final String SERIALIZED_NAME_NETWORK_REACHABILITY_DETAILS = "networkReachabilityDetails";
  @SerializedName(SERIALIZED_NAME_NETWORK_REACHABILITY_DETAILS)
  private FindingNetworkReachabilityDetails networkReachabilityDetails;

  public static final String SERIALIZED_NAME_PACKAGE_VULNERABILITY_DETAILS = "packageVulnerabilityDetails";
  @SerializedName(SERIALIZED_NAME_PACKAGE_VULNERABILITY_DETAILS)
  private FindingPackageVulnerabilityDetails packageVulnerabilityDetails;

  public static final String SERIALIZED_NAME_REMEDIATION = "remediation";
  @SerializedName(SERIALIZED_NAME_REMEDIATION)
  private FindingRemediation remediation;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List resources;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private Severity severity;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private FindingStatus status;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private FindingType type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public Finding() {
  }

  public Finding awsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

  /**
   * Get awsAccountId
   * @return awsAccountId
   */
  @javax.annotation.Nonnull
  public String getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
  }


  public Finding codeVulnerabilityDetails(FindingCodeVulnerabilityDetails codeVulnerabilityDetails) {
    this.codeVulnerabilityDetails = codeVulnerabilityDetails;
    return this;
  }

  /**
   * Get codeVulnerabilityDetails
   * @return codeVulnerabilityDetails
   */
  @javax.annotation.Nullable
  public FindingCodeVulnerabilityDetails getCodeVulnerabilityDetails() {
    return codeVulnerabilityDetails;
  }

  public void setCodeVulnerabilityDetails(FindingCodeVulnerabilityDetails codeVulnerabilityDetails) {
    this.codeVulnerabilityDetails = codeVulnerabilityDetails;
  }


  public Finding description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Finding epss(FindingEpss epss) {
    this.epss = epss;
    return this;
  }

  /**
   * Get epss
   * @return epss
   */
  @javax.annotation.Nullable
  public FindingEpss getEpss() {
    return epss;
  }

  public void setEpss(FindingEpss epss) {
    this.epss = epss;
  }


  public Finding exploitAvailable(ExploitAvailable exploitAvailable) {
    this.exploitAvailable = exploitAvailable;
    return this;
  }

  /**
   * Get exploitAvailable
   * @return exploitAvailable
   */
  @javax.annotation.Nullable
  public ExploitAvailable getExploitAvailable() {
    return exploitAvailable;
  }

  public void setExploitAvailable(ExploitAvailable exploitAvailable) {
    this.exploitAvailable = exploitAvailable;
  }


  public Finding exploitabilityDetails(FindingExploitabilityDetails exploitabilityDetails) {
    this.exploitabilityDetails = exploitabilityDetails;
    return this;
  }

  /**
   * Get exploitabilityDetails
   * @return exploitabilityDetails
   */
  @javax.annotation.Nullable
  public FindingExploitabilityDetails getExploitabilityDetails() {
    return exploitabilityDetails;
  }

  public void setExploitabilityDetails(FindingExploitabilityDetails exploitabilityDetails) {
    this.exploitabilityDetails = exploitabilityDetails;
  }


  public Finding findingArn(String findingArn) {
    this.findingArn = findingArn;
    return this;
  }

  /**
   * Get findingArn
   * @return findingArn
   */
  @javax.annotation.Nonnull
  public String getFindingArn() {
    return findingArn;
  }

  public void setFindingArn(String findingArn) {
    this.findingArn = findingArn;
  }


  public Finding firstObservedAt(OffsetDateTime firstObservedAt) {
    this.firstObservedAt = firstObservedAt;
    return this;
  }

  /**
   * Get firstObservedAt
   * @return firstObservedAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getFirstObservedAt() {
    return firstObservedAt;
  }

  public void setFirstObservedAt(OffsetDateTime firstObservedAt) {
    this.firstObservedAt = firstObservedAt;
  }


  public Finding fixAvailable(FixAvailable fixAvailable) {
    this.fixAvailable = fixAvailable;
    return this;
  }

  /**
   * Get fixAvailable
   * @return fixAvailable
   */
  @javax.annotation.Nullable
  public FixAvailable getFixAvailable() {
    return fixAvailable;
  }

  public void setFixAvailable(FixAvailable fixAvailable) {
    this.fixAvailable = fixAvailable;
  }


  public Finding inspectorScore(Double inspectorScore) {
    this.inspectorScore = inspectorScore;
    return this;
  }

  /**
   * Get inspectorScore
   * @return inspectorScore
   */
  @javax.annotation.Nullable
  public Double getInspectorScore() {
    return inspectorScore;
  }

  public void setInspectorScore(Double inspectorScore) {
    this.inspectorScore = inspectorScore;
  }


  public Finding inspectorScoreDetails(FindingInspectorScoreDetails inspectorScoreDetails) {
    this.inspectorScoreDetails = inspectorScoreDetails;
    return this;
  }

  /**
   * Get inspectorScoreDetails
   * @return inspectorScoreDetails
   */
  @javax.annotation.Nullable
  public FindingInspectorScoreDetails getInspectorScoreDetails() {
    return inspectorScoreDetails;
  }

  public void setInspectorScoreDetails(FindingInspectorScoreDetails inspectorScoreDetails) {
    this.inspectorScoreDetails = inspectorScoreDetails;
  }


  public Finding lastObservedAt(OffsetDateTime lastObservedAt) {
    this.lastObservedAt = lastObservedAt;
    return this;
  }

  /**
   * Get lastObservedAt
   * @return lastObservedAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastObservedAt() {
    return lastObservedAt;
  }

  public void setLastObservedAt(OffsetDateTime lastObservedAt) {
    this.lastObservedAt = lastObservedAt;
  }


  public Finding networkReachabilityDetails(FindingNetworkReachabilityDetails networkReachabilityDetails) {
    this.networkReachabilityDetails = networkReachabilityDetails;
    return this;
  }

  /**
   * Get networkReachabilityDetails
   * @return networkReachabilityDetails
   */
  @javax.annotation.Nullable
  public FindingNetworkReachabilityDetails getNetworkReachabilityDetails() {
    return networkReachabilityDetails;
  }

  public void setNetworkReachabilityDetails(FindingNetworkReachabilityDetails networkReachabilityDetails) {
    this.networkReachabilityDetails = networkReachabilityDetails;
  }


  public Finding packageVulnerabilityDetails(FindingPackageVulnerabilityDetails packageVulnerabilityDetails) {
    this.packageVulnerabilityDetails = packageVulnerabilityDetails;
    return this;
  }

  /**
   * Get packageVulnerabilityDetails
   * @return packageVulnerabilityDetails
   */
  @javax.annotation.Nullable
  public FindingPackageVulnerabilityDetails getPackageVulnerabilityDetails() {
    return packageVulnerabilityDetails;
  }

  public void setPackageVulnerabilityDetails(FindingPackageVulnerabilityDetails packageVulnerabilityDetails) {
    this.packageVulnerabilityDetails = packageVulnerabilityDetails;
  }


  public Finding remediation(FindingRemediation remediation) {
    this.remediation = remediation;
    return this;
  }

  /**
   * Get remediation
   * @return remediation
   */
  @javax.annotation.Nonnull
  public FindingRemediation getRemediation() {
    return remediation;
  }

  public void setRemediation(FindingRemediation remediation) {
    this.remediation = remediation;
  }


  public Finding resources(List resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nonnull
  public List getResources() {
    return resources;
  }

  public void setResources(List resources) {
    this.resources = resources;
  }


  public Finding severity(Severity severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nonnull
  public Severity getSeverity() {
    return severity;
  }

  public void setSeverity(Severity severity) {
    this.severity = severity;
  }


  public Finding status(FindingStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public FindingStatus getStatus() {
    return status;
  }

  public void setStatus(FindingStatus status) {
    this.status = status;
  }


  public Finding title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Finding type(FindingType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public FindingType getType() {
    return type;
  }

  public void setType(FindingType type) {
    this.type = type;
  }


  public Finding updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Finding finding = (Finding) o;
    return Objects.equals(this.awsAccountId, finding.awsAccountId) &&
        Objects.equals(this.codeVulnerabilityDetails, finding.codeVulnerabilityDetails) &&
        Objects.equals(this.description, finding.description) &&
        Objects.equals(this.epss, finding.epss) &&
        Objects.equals(this.exploitAvailable, finding.exploitAvailable) &&
        Objects.equals(this.exploitabilityDetails, finding.exploitabilityDetails) &&
        Objects.equals(this.findingArn, finding.findingArn) &&
        Objects.equals(this.firstObservedAt, finding.firstObservedAt) &&
        Objects.equals(this.fixAvailable, finding.fixAvailable) &&
        Objects.equals(this.inspectorScore, finding.inspectorScore) &&
        Objects.equals(this.inspectorScoreDetails, finding.inspectorScoreDetails) &&
        Objects.equals(this.lastObservedAt, finding.lastObservedAt) &&
        Objects.equals(this.networkReachabilityDetails, finding.networkReachabilityDetails) &&
        Objects.equals(this.packageVulnerabilityDetails, finding.packageVulnerabilityDetails) &&
        Objects.equals(this.remediation, finding.remediation) &&
        Objects.equals(this.resources, finding.resources) &&
        Objects.equals(this.severity, finding.severity) &&
        Objects.equals(this.status, finding.status) &&
        Objects.equals(this.title, finding.title) &&
        Objects.equals(this.type, finding.type) &&
        Objects.equals(this.updatedAt, finding.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsAccountId, codeVulnerabilityDetails, description, epss, exploitAvailable, exploitabilityDetails, findingArn, firstObservedAt, fixAvailable, inspectorScore, inspectorScoreDetails, lastObservedAt, networkReachabilityDetails, packageVulnerabilityDetails, remediation, resources, severity, status, title, type, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Finding {\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    codeVulnerabilityDetails: ").append(toIndentedString(codeVulnerabilityDetails)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    epss: ").append(toIndentedString(epss)).append("\n");
    sb.append("    exploitAvailable: ").append(toIndentedString(exploitAvailable)).append("\n");
    sb.append("    exploitabilityDetails: ").append(toIndentedString(exploitabilityDetails)).append("\n");
    sb.append("    findingArn: ").append(toIndentedString(findingArn)).append("\n");
    sb.append("    firstObservedAt: ").append(toIndentedString(firstObservedAt)).append("\n");
    sb.append("    fixAvailable: ").append(toIndentedString(fixAvailable)).append("\n");
    sb.append("    inspectorScore: ").append(toIndentedString(inspectorScore)).append("\n");
    sb.append("    inspectorScoreDetails: ").append(toIndentedString(inspectorScoreDetails)).append("\n");
    sb.append("    lastObservedAt: ").append(toIndentedString(lastObservedAt)).append("\n");
    sb.append("    networkReachabilityDetails: ").append(toIndentedString(networkReachabilityDetails)).append("\n");
    sb.append("    packageVulnerabilityDetails: ").append(toIndentedString(packageVulnerabilityDetails)).append("\n");
    sb.append("    remediation: ").append(toIndentedString(remediation)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("awsAccountId");
    openapiFields.add("codeVulnerabilityDetails");
    openapiFields.add("description");
    openapiFields.add("epss");
    openapiFields.add("exploitAvailable");
    openapiFields.add("exploitabilityDetails");
    openapiFields.add("findingArn");
    openapiFields.add("firstObservedAt");
    openapiFields.add("fixAvailable");
    openapiFields.add("inspectorScore");
    openapiFields.add("inspectorScoreDetails");
    openapiFields.add("lastObservedAt");
    openapiFields.add("networkReachabilityDetails");
    openapiFields.add("packageVulnerabilityDetails");
    openapiFields.add("remediation");
    openapiFields.add("resources");
    openapiFields.add("severity");
    openapiFields.add("status");
    openapiFields.add("title");
    openapiFields.add("type");
    openapiFields.add("updatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("awsAccountId");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("findingArn");
    openapiRequiredFields.add("firstObservedAt");
    openapiRequiredFields.add("lastObservedAt");
    openapiRequiredFields.add("remediation");
    openapiRequiredFields.add("resources");
    openapiRequiredFields.add("severity");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Finding
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Finding.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Finding is not found in the empty JSON string", Finding.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Finding.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Finding` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Finding.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `awsAccountId`
      String.validateJsonElement(jsonObj.get("awsAccountId"));
      // validate the optional field `codeVulnerabilityDetails`
      if (jsonObj.get("codeVulnerabilityDetails") != null && !jsonObj.get("codeVulnerabilityDetails").isJsonNull()) {
        FindingCodeVulnerabilityDetails.validateJsonElement(jsonObj.get("codeVulnerabilityDetails"));
      }
      // validate the required field `description`
      String.validateJsonElement(jsonObj.get("description"));
      // validate the optional field `epss`
      if (jsonObj.get("epss") != null && !jsonObj.get("epss").isJsonNull()) {
        FindingEpss.validateJsonElement(jsonObj.get("epss"));
      }
      // validate the optional field `exploitAvailable`
      if (jsonObj.get("exploitAvailable") != null && !jsonObj.get("exploitAvailable").isJsonNull()) {
        ExploitAvailable.validateJsonElement(jsonObj.get("exploitAvailable"));
      }
      // validate the optional field `exploitabilityDetails`
      if (jsonObj.get("exploitabilityDetails") != null && !jsonObj.get("exploitabilityDetails").isJsonNull()) {
        FindingExploitabilityDetails.validateJsonElement(jsonObj.get("exploitabilityDetails"));
      }
      // validate the required field `findingArn`
      String.validateJsonElement(jsonObj.get("findingArn"));
      // validate the required field `firstObservedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("firstObservedAt"));
      // validate the optional field `fixAvailable`
      if (jsonObj.get("fixAvailable") != null && !jsonObj.get("fixAvailable").isJsonNull()) {
        FixAvailable.validateJsonElement(jsonObj.get("fixAvailable"));
      }
      // validate the optional field `inspectorScore`
      if (jsonObj.get("inspectorScore") != null && !jsonObj.get("inspectorScore").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("inspectorScore"));
      }
      // validate the optional field `inspectorScoreDetails`
      if (jsonObj.get("inspectorScoreDetails") != null && !jsonObj.get("inspectorScoreDetails").isJsonNull()) {
        FindingInspectorScoreDetails.validateJsonElement(jsonObj.get("inspectorScoreDetails"));
      }
      // validate the required field `lastObservedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("lastObservedAt"));
      // validate the optional field `networkReachabilityDetails`
      if (jsonObj.get("networkReachabilityDetails") != null && !jsonObj.get("networkReachabilityDetails").isJsonNull()) {
        FindingNetworkReachabilityDetails.validateJsonElement(jsonObj.get("networkReachabilityDetails"));
      }
      // validate the optional field `packageVulnerabilityDetails`
      if (jsonObj.get("packageVulnerabilityDetails") != null && !jsonObj.get("packageVulnerabilityDetails").isJsonNull()) {
        FindingPackageVulnerabilityDetails.validateJsonElement(jsonObj.get("packageVulnerabilityDetails"));
      }
      // validate the required field `remediation`
      FindingRemediation.validateJsonElement(jsonObj.get("remediation"));
      // validate the required field `resources`
      List.validateJsonElement(jsonObj.get("resources"));
      // validate the required field `severity`
      Severity.validateJsonElement(jsonObj.get("severity"));
      // validate the required field `status`
      FindingStatus.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `title`
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("title"));
      }
      // validate the required field `type`
      FindingType.validateJsonElement(jsonObj.get("type"));
      // validate the optional field `updatedAt`
      if (jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("updatedAt"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Finding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Finding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Finding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Finding.class));

       return (TypeAdapter<T>) new TypeAdapter<Finding>() {
           @Override
           public void write(JsonWriter out, Finding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Finding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Finding given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Finding
   * @throws IOException if the JSON string is invalid with respect to Finding
   */
  public static Finding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Finding.class);
  }

  /**
   * Convert an instance of Finding to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

