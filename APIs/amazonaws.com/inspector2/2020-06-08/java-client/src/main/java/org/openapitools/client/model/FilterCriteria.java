/*
 * Inspector2
 * Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2 and Amazon ECR environments.
 *
 * The version of the OpenAPI document: 2020-06-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FilterCriteria
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:02.844521-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FilterCriteria {
  public static final String SERIALIZED_NAME_AWS_ACCOUNT_ID = "awsAccountId";
  @SerializedName(SERIALIZED_NAME_AWS_ACCOUNT_ID)
  private List awsAccountId;

  public static final String SERIALIZED_NAME_CODE_VULNERABILITY_DETECTOR_NAME = "codeVulnerabilityDetectorName";
  @SerializedName(SERIALIZED_NAME_CODE_VULNERABILITY_DETECTOR_NAME)
  private List codeVulnerabilityDetectorName;

  public static final String SERIALIZED_NAME_CODE_VULNERABILITY_DETECTOR_TAGS = "codeVulnerabilityDetectorTags";
  @SerializedName(SERIALIZED_NAME_CODE_VULNERABILITY_DETECTOR_TAGS)
  private List codeVulnerabilityDetectorTags;

  public static final String SERIALIZED_NAME_CODE_VULNERABILITY_FILE_PATH = "codeVulnerabilityFilePath";
  @SerializedName(SERIALIZED_NAME_CODE_VULNERABILITY_FILE_PATH)
  private List codeVulnerabilityFilePath;

  public static final String SERIALIZED_NAME_COMPONENT_ID = "componentId";
  @SerializedName(SERIALIZED_NAME_COMPONENT_ID)
  private List componentId;

  public static final String SERIALIZED_NAME_COMPONENT_TYPE = "componentType";
  @SerializedName(SERIALIZED_NAME_COMPONENT_TYPE)
  private List componentType;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_IMAGE_ID = "ec2InstanceImageId";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_IMAGE_ID)
  private List ec2InstanceImageId;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_SUBNET_ID = "ec2InstanceSubnetId";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_SUBNET_ID)
  private List ec2InstanceSubnetId;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_VPC_ID = "ec2InstanceVpcId";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_VPC_ID)
  private List ec2InstanceVpcId;

  public static final String SERIALIZED_NAME_ECR_IMAGE_ARCHITECTURE = "ecrImageArchitecture";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_ARCHITECTURE)
  private List ecrImageArchitecture;

  public static final String SERIALIZED_NAME_ECR_IMAGE_HASH = "ecrImageHash";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_HASH)
  private List ecrImageHash;

  public static final String SERIALIZED_NAME_ECR_IMAGE_PUSHED_AT = "ecrImagePushedAt";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_PUSHED_AT)
  private List ecrImagePushedAt;

  public static final String SERIALIZED_NAME_ECR_IMAGE_REGISTRY = "ecrImageRegistry";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_REGISTRY)
  private List ecrImageRegistry;

  public static final String SERIALIZED_NAME_ECR_IMAGE_REPOSITORY_NAME = "ecrImageRepositoryName";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_REPOSITORY_NAME)
  private List ecrImageRepositoryName;

  public static final String SERIALIZED_NAME_ECR_IMAGE_TAGS = "ecrImageTags";
  @SerializedName(SERIALIZED_NAME_ECR_IMAGE_TAGS)
  private List ecrImageTags;

  public static final String SERIALIZED_NAME_EPSS_SCORE = "epssScore";
  @SerializedName(SERIALIZED_NAME_EPSS_SCORE)
  private List epssScore;

  public static final String SERIALIZED_NAME_EXPLOIT_AVAILABLE = "exploitAvailable";
  @SerializedName(SERIALIZED_NAME_EXPLOIT_AVAILABLE)
  private List exploitAvailable;

  public static final String SERIALIZED_NAME_FINDING_ARN = "findingArn";
  @SerializedName(SERIALIZED_NAME_FINDING_ARN)
  private List findingArn;

  public static final String SERIALIZED_NAME_FINDING_STATUS = "findingStatus";
  @SerializedName(SERIALIZED_NAME_FINDING_STATUS)
  private List findingStatus;

  public static final String SERIALIZED_NAME_FINDING_TYPE = "findingType";
  @SerializedName(SERIALIZED_NAME_FINDING_TYPE)
  private List findingType;

  public static final String SERIALIZED_NAME_FIRST_OBSERVED_AT = "firstObservedAt";
  @SerializedName(SERIALIZED_NAME_FIRST_OBSERVED_AT)
  private List firstObservedAt;

  public static final String SERIALIZED_NAME_FIX_AVAILABLE = "fixAvailable";
  @SerializedName(SERIALIZED_NAME_FIX_AVAILABLE)
  private List fixAvailable;

  public static final String SERIALIZED_NAME_INSPECTOR_SCORE = "inspectorScore";
  @SerializedName(SERIALIZED_NAME_INSPECTOR_SCORE)
  private List inspectorScore;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_EXECUTION_ROLE_ARN = "lambdaFunctionExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_EXECUTION_ROLE_ARN)
  private List lambdaFunctionExecutionRoleArn;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_LAST_MODIFIED_AT = "lambdaFunctionLastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_LAST_MODIFIED_AT)
  private List lambdaFunctionLastModifiedAt;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_LAYERS = "lambdaFunctionLayers";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_LAYERS)
  private List lambdaFunctionLayers;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_NAME = "lambdaFunctionName";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_NAME)
  private List lambdaFunctionName;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_RUNTIME = "lambdaFunctionRuntime";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_RUNTIME)
  private List lambdaFunctionRuntime;

  public static final String SERIALIZED_NAME_LAST_OBSERVED_AT = "lastObservedAt";
  @SerializedName(SERIALIZED_NAME_LAST_OBSERVED_AT)
  private List lastObservedAt;

  public static final String SERIALIZED_NAME_NETWORK_PROTOCOL = "networkProtocol";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROTOCOL)
  private List networkProtocol;

  public static final String SERIALIZED_NAME_PORT_RANGE = "portRange";
  @SerializedName(SERIALIZED_NAME_PORT_RANGE)
  private List portRange;

  public static final String SERIALIZED_NAME_RELATED_VULNERABILITIES = "relatedVulnerabilities";
  @SerializedName(SERIALIZED_NAME_RELATED_VULNERABILITIES)
  private List relatedVulnerabilities;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "resourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private List resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_TAGS = "resourceTags";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TAGS)
  private List resourceTags;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private List resourceType;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private List severity;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private List title;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private List updatedAt;

  public static final String SERIALIZED_NAME_VENDOR_SEVERITY = "vendorSeverity";
  @SerializedName(SERIALIZED_NAME_VENDOR_SEVERITY)
  private List vendorSeverity;

  public static final String SERIALIZED_NAME_VULNERABILITY_ID = "vulnerabilityId";
  @SerializedName(SERIALIZED_NAME_VULNERABILITY_ID)
  private List vulnerabilityId;

  public static final String SERIALIZED_NAME_VULNERABILITY_SOURCE = "vulnerabilitySource";
  @SerializedName(SERIALIZED_NAME_VULNERABILITY_SOURCE)
  private List vulnerabilitySource;

  public static final String SERIALIZED_NAME_VULNERABLE_PACKAGES = "vulnerablePackages";
  @SerializedName(SERIALIZED_NAME_VULNERABLE_PACKAGES)
  private List vulnerablePackages;

  public FilterCriteria() {
  }

  public FilterCriteria awsAccountId(List awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

  /**
   * Get awsAccountId
   * @return awsAccountId
   */
  @javax.annotation.Nullable
  public List getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(List awsAccountId) {
    this.awsAccountId = awsAccountId;
  }


  public FilterCriteria codeVulnerabilityDetectorName(List codeVulnerabilityDetectorName) {
    this.codeVulnerabilityDetectorName = codeVulnerabilityDetectorName;
    return this;
  }

  /**
   * Get codeVulnerabilityDetectorName
   * @return codeVulnerabilityDetectorName
   */
  @javax.annotation.Nullable
  public List getCodeVulnerabilityDetectorName() {
    return codeVulnerabilityDetectorName;
  }

  public void setCodeVulnerabilityDetectorName(List codeVulnerabilityDetectorName) {
    this.codeVulnerabilityDetectorName = codeVulnerabilityDetectorName;
  }


  public FilterCriteria codeVulnerabilityDetectorTags(List codeVulnerabilityDetectorTags) {
    this.codeVulnerabilityDetectorTags = codeVulnerabilityDetectorTags;
    return this;
  }

  /**
   * Get codeVulnerabilityDetectorTags
   * @return codeVulnerabilityDetectorTags
   */
  @javax.annotation.Nullable
  public List getCodeVulnerabilityDetectorTags() {
    return codeVulnerabilityDetectorTags;
  }

  public void setCodeVulnerabilityDetectorTags(List codeVulnerabilityDetectorTags) {
    this.codeVulnerabilityDetectorTags = codeVulnerabilityDetectorTags;
  }


  public FilterCriteria codeVulnerabilityFilePath(List codeVulnerabilityFilePath) {
    this.codeVulnerabilityFilePath = codeVulnerabilityFilePath;
    return this;
  }

  /**
   * Get codeVulnerabilityFilePath
   * @return codeVulnerabilityFilePath
   */
  @javax.annotation.Nullable
  public List getCodeVulnerabilityFilePath() {
    return codeVulnerabilityFilePath;
  }

  public void setCodeVulnerabilityFilePath(List codeVulnerabilityFilePath) {
    this.codeVulnerabilityFilePath = codeVulnerabilityFilePath;
  }


  public FilterCriteria componentId(List componentId) {
    this.componentId = componentId;
    return this;
  }

  /**
   * Get componentId
   * @return componentId
   */
  @javax.annotation.Nullable
  public List getComponentId() {
    return componentId;
  }

  public void setComponentId(List componentId) {
    this.componentId = componentId;
  }


  public FilterCriteria componentType(List componentType) {
    this.componentType = componentType;
    return this;
  }

  /**
   * Get componentType
   * @return componentType
   */
  @javax.annotation.Nullable
  public List getComponentType() {
    return componentType;
  }

  public void setComponentType(List componentType) {
    this.componentType = componentType;
  }


  public FilterCriteria ec2InstanceImageId(List ec2InstanceImageId) {
    this.ec2InstanceImageId = ec2InstanceImageId;
    return this;
  }

  /**
   * Get ec2InstanceImageId
   * @return ec2InstanceImageId
   */
  @javax.annotation.Nullable
  public List getEc2InstanceImageId() {
    return ec2InstanceImageId;
  }

  public void setEc2InstanceImageId(List ec2InstanceImageId) {
    this.ec2InstanceImageId = ec2InstanceImageId;
  }


  public FilterCriteria ec2InstanceSubnetId(List ec2InstanceSubnetId) {
    this.ec2InstanceSubnetId = ec2InstanceSubnetId;
    return this;
  }

  /**
   * Get ec2InstanceSubnetId
   * @return ec2InstanceSubnetId
   */
  @javax.annotation.Nullable
  public List getEc2InstanceSubnetId() {
    return ec2InstanceSubnetId;
  }

  public void setEc2InstanceSubnetId(List ec2InstanceSubnetId) {
    this.ec2InstanceSubnetId = ec2InstanceSubnetId;
  }


  public FilterCriteria ec2InstanceVpcId(List ec2InstanceVpcId) {
    this.ec2InstanceVpcId = ec2InstanceVpcId;
    return this;
  }

  /**
   * Get ec2InstanceVpcId
   * @return ec2InstanceVpcId
   */
  @javax.annotation.Nullable
  public List getEc2InstanceVpcId() {
    return ec2InstanceVpcId;
  }

  public void setEc2InstanceVpcId(List ec2InstanceVpcId) {
    this.ec2InstanceVpcId = ec2InstanceVpcId;
  }


  public FilterCriteria ecrImageArchitecture(List ecrImageArchitecture) {
    this.ecrImageArchitecture = ecrImageArchitecture;
    return this;
  }

  /**
   * Get ecrImageArchitecture
   * @return ecrImageArchitecture
   */
  @javax.annotation.Nullable
  public List getEcrImageArchitecture() {
    return ecrImageArchitecture;
  }

  public void setEcrImageArchitecture(List ecrImageArchitecture) {
    this.ecrImageArchitecture = ecrImageArchitecture;
  }


  public FilterCriteria ecrImageHash(List ecrImageHash) {
    this.ecrImageHash = ecrImageHash;
    return this;
  }

  /**
   * Get ecrImageHash
   * @return ecrImageHash
   */
  @javax.annotation.Nullable
  public List getEcrImageHash() {
    return ecrImageHash;
  }

  public void setEcrImageHash(List ecrImageHash) {
    this.ecrImageHash = ecrImageHash;
  }


  public FilterCriteria ecrImagePushedAt(List ecrImagePushedAt) {
    this.ecrImagePushedAt = ecrImagePushedAt;
    return this;
  }

  /**
   * Get ecrImagePushedAt
   * @return ecrImagePushedAt
   */
  @javax.annotation.Nullable
  public List getEcrImagePushedAt() {
    return ecrImagePushedAt;
  }

  public void setEcrImagePushedAt(List ecrImagePushedAt) {
    this.ecrImagePushedAt = ecrImagePushedAt;
  }


  public FilterCriteria ecrImageRegistry(List ecrImageRegistry) {
    this.ecrImageRegistry = ecrImageRegistry;
    return this;
  }

  /**
   * Get ecrImageRegistry
   * @return ecrImageRegistry
   */
  @javax.annotation.Nullable
  public List getEcrImageRegistry() {
    return ecrImageRegistry;
  }

  public void setEcrImageRegistry(List ecrImageRegistry) {
    this.ecrImageRegistry = ecrImageRegistry;
  }


  public FilterCriteria ecrImageRepositoryName(List ecrImageRepositoryName) {
    this.ecrImageRepositoryName = ecrImageRepositoryName;
    return this;
  }

  /**
   * Get ecrImageRepositoryName
   * @return ecrImageRepositoryName
   */
  @javax.annotation.Nullable
  public List getEcrImageRepositoryName() {
    return ecrImageRepositoryName;
  }

  public void setEcrImageRepositoryName(List ecrImageRepositoryName) {
    this.ecrImageRepositoryName = ecrImageRepositoryName;
  }


  public FilterCriteria ecrImageTags(List ecrImageTags) {
    this.ecrImageTags = ecrImageTags;
    return this;
  }

  /**
   * Get ecrImageTags
   * @return ecrImageTags
   */
  @javax.annotation.Nullable
  public List getEcrImageTags() {
    return ecrImageTags;
  }

  public void setEcrImageTags(List ecrImageTags) {
    this.ecrImageTags = ecrImageTags;
  }


  public FilterCriteria epssScore(List epssScore) {
    this.epssScore = epssScore;
    return this;
  }

  /**
   * Get epssScore
   * @return epssScore
   */
  @javax.annotation.Nullable
  public List getEpssScore() {
    return epssScore;
  }

  public void setEpssScore(List epssScore) {
    this.epssScore = epssScore;
  }


  public FilterCriteria exploitAvailable(List exploitAvailable) {
    this.exploitAvailable = exploitAvailable;
    return this;
  }

  /**
   * Get exploitAvailable
   * @return exploitAvailable
   */
  @javax.annotation.Nullable
  public List getExploitAvailable() {
    return exploitAvailable;
  }

  public void setExploitAvailable(List exploitAvailable) {
    this.exploitAvailable = exploitAvailable;
  }


  public FilterCriteria findingArn(List findingArn) {
    this.findingArn = findingArn;
    return this;
  }

  /**
   * Get findingArn
   * @return findingArn
   */
  @javax.annotation.Nullable
  public List getFindingArn() {
    return findingArn;
  }

  public void setFindingArn(List findingArn) {
    this.findingArn = findingArn;
  }


  public FilterCriteria findingStatus(List findingStatus) {
    this.findingStatus = findingStatus;
    return this;
  }

  /**
   * Get findingStatus
   * @return findingStatus
   */
  @javax.annotation.Nullable
  public List getFindingStatus() {
    return findingStatus;
  }

  public void setFindingStatus(List findingStatus) {
    this.findingStatus = findingStatus;
  }


  public FilterCriteria findingType(List findingType) {
    this.findingType = findingType;
    return this;
  }

  /**
   * Get findingType
   * @return findingType
   */
  @javax.annotation.Nullable
  public List getFindingType() {
    return findingType;
  }

  public void setFindingType(List findingType) {
    this.findingType = findingType;
  }


  public FilterCriteria firstObservedAt(List firstObservedAt) {
    this.firstObservedAt = firstObservedAt;
    return this;
  }

  /**
   * Get firstObservedAt
   * @return firstObservedAt
   */
  @javax.annotation.Nullable
  public List getFirstObservedAt() {
    return firstObservedAt;
  }

  public void setFirstObservedAt(List firstObservedAt) {
    this.firstObservedAt = firstObservedAt;
  }


  public FilterCriteria fixAvailable(List fixAvailable) {
    this.fixAvailable = fixAvailable;
    return this;
  }

  /**
   * Get fixAvailable
   * @return fixAvailable
   */
  @javax.annotation.Nullable
  public List getFixAvailable() {
    return fixAvailable;
  }

  public void setFixAvailable(List fixAvailable) {
    this.fixAvailable = fixAvailable;
  }


  public FilterCriteria inspectorScore(List inspectorScore) {
    this.inspectorScore = inspectorScore;
    return this;
  }

  /**
   * Get inspectorScore
   * @return inspectorScore
   */
  @javax.annotation.Nullable
  public List getInspectorScore() {
    return inspectorScore;
  }

  public void setInspectorScore(List inspectorScore) {
    this.inspectorScore = inspectorScore;
  }


  public FilterCriteria lambdaFunctionExecutionRoleArn(List lambdaFunctionExecutionRoleArn) {
    this.lambdaFunctionExecutionRoleArn = lambdaFunctionExecutionRoleArn;
    return this;
  }

  /**
   * Get lambdaFunctionExecutionRoleArn
   * @return lambdaFunctionExecutionRoleArn
   */
  @javax.annotation.Nullable
  public List getLambdaFunctionExecutionRoleArn() {
    return lambdaFunctionExecutionRoleArn;
  }

  public void setLambdaFunctionExecutionRoleArn(List lambdaFunctionExecutionRoleArn) {
    this.lambdaFunctionExecutionRoleArn = lambdaFunctionExecutionRoleArn;
  }


  public FilterCriteria lambdaFunctionLastModifiedAt(List lambdaFunctionLastModifiedAt) {
    this.lambdaFunctionLastModifiedAt = lambdaFunctionLastModifiedAt;
    return this;
  }

  /**
   * Get lambdaFunctionLastModifiedAt
   * @return lambdaFunctionLastModifiedAt
   */
  @javax.annotation.Nullable
  public List getLambdaFunctionLastModifiedAt() {
    return lambdaFunctionLastModifiedAt;
  }

  public void setLambdaFunctionLastModifiedAt(List lambdaFunctionLastModifiedAt) {
    this.lambdaFunctionLastModifiedAt = lambdaFunctionLastModifiedAt;
  }


  public FilterCriteria lambdaFunctionLayers(List lambdaFunctionLayers) {
    this.lambdaFunctionLayers = lambdaFunctionLayers;
    return this;
  }

  /**
   * Get lambdaFunctionLayers
   * @return lambdaFunctionLayers
   */
  @javax.annotation.Nullable
  public List getLambdaFunctionLayers() {
    return lambdaFunctionLayers;
  }

  public void setLambdaFunctionLayers(List lambdaFunctionLayers) {
    this.lambdaFunctionLayers = lambdaFunctionLayers;
  }


  public FilterCriteria lambdaFunctionName(List lambdaFunctionName) {
    this.lambdaFunctionName = lambdaFunctionName;
    return this;
  }

  /**
   * Get lambdaFunctionName
   * @return lambdaFunctionName
   */
  @javax.annotation.Nullable
  public List getLambdaFunctionName() {
    return lambdaFunctionName;
  }

  public void setLambdaFunctionName(List lambdaFunctionName) {
    this.lambdaFunctionName = lambdaFunctionName;
  }


  public FilterCriteria lambdaFunctionRuntime(List lambdaFunctionRuntime) {
    this.lambdaFunctionRuntime = lambdaFunctionRuntime;
    return this;
  }

  /**
   * Get lambdaFunctionRuntime
   * @return lambdaFunctionRuntime
   */
  @javax.annotation.Nullable
  public List getLambdaFunctionRuntime() {
    return lambdaFunctionRuntime;
  }

  public void setLambdaFunctionRuntime(List lambdaFunctionRuntime) {
    this.lambdaFunctionRuntime = lambdaFunctionRuntime;
  }


  public FilterCriteria lastObservedAt(List lastObservedAt) {
    this.lastObservedAt = lastObservedAt;
    return this;
  }

  /**
   * Get lastObservedAt
   * @return lastObservedAt
   */
  @javax.annotation.Nullable
  public List getLastObservedAt() {
    return lastObservedAt;
  }

  public void setLastObservedAt(List lastObservedAt) {
    this.lastObservedAt = lastObservedAt;
  }


  public FilterCriteria networkProtocol(List networkProtocol) {
    this.networkProtocol = networkProtocol;
    return this;
  }

  /**
   * Get networkProtocol
   * @return networkProtocol
   */
  @javax.annotation.Nullable
  public List getNetworkProtocol() {
    return networkProtocol;
  }

  public void setNetworkProtocol(List networkProtocol) {
    this.networkProtocol = networkProtocol;
  }


  public FilterCriteria portRange(List portRange) {
    this.portRange = portRange;
    return this;
  }

  /**
   * Get portRange
   * @return portRange
   */
  @javax.annotation.Nullable
  public List getPortRange() {
    return portRange;
  }

  public void setPortRange(List portRange) {
    this.portRange = portRange;
  }


  public FilterCriteria relatedVulnerabilities(List relatedVulnerabilities) {
    this.relatedVulnerabilities = relatedVulnerabilities;
    return this;
  }

  /**
   * Get relatedVulnerabilities
   * @return relatedVulnerabilities
   */
  @javax.annotation.Nullable
  public List getRelatedVulnerabilities() {
    return relatedVulnerabilities;
  }

  public void setRelatedVulnerabilities(List relatedVulnerabilities) {
    this.relatedVulnerabilities = relatedVulnerabilities;
  }


  public FilterCriteria resourceId(List resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public List getResourceId() {
    return resourceId;
  }

  public void setResourceId(List resourceId) {
    this.resourceId = resourceId;
  }


  public FilterCriteria resourceTags(List resourceTags) {
    this.resourceTags = resourceTags;
    return this;
  }

  /**
   * Get resourceTags
   * @return resourceTags
   */
  @javax.annotation.Nullable
  public List getResourceTags() {
    return resourceTags;
  }

  public void setResourceTags(List resourceTags) {
    this.resourceTags = resourceTags;
  }


  public FilterCriteria resourceType(List resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public List getResourceType() {
    return resourceType;
  }

  public void setResourceType(List resourceType) {
    this.resourceType = resourceType;
  }


  public FilterCriteria severity(List severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nullable
  public List getSeverity() {
    return severity;
  }

  public void setSeverity(List severity) {
    this.severity = severity;
  }


  public FilterCriteria title(List title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public List getTitle() {
    return title;
  }

  public void setTitle(List title) {
    this.title = title;
  }


  public FilterCriteria updatedAt(List updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public List getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(List updatedAt) {
    this.updatedAt = updatedAt;
  }


  public FilterCriteria vendorSeverity(List vendorSeverity) {
    this.vendorSeverity = vendorSeverity;
    return this;
  }

  /**
   * Get vendorSeverity
   * @return vendorSeverity
   */
  @javax.annotation.Nullable
  public List getVendorSeverity() {
    return vendorSeverity;
  }

  public void setVendorSeverity(List vendorSeverity) {
    this.vendorSeverity = vendorSeverity;
  }


  public FilterCriteria vulnerabilityId(List vulnerabilityId) {
    this.vulnerabilityId = vulnerabilityId;
    return this;
  }

  /**
   * Get vulnerabilityId
   * @return vulnerabilityId
   */
  @javax.annotation.Nullable
  public List getVulnerabilityId() {
    return vulnerabilityId;
  }

  public void setVulnerabilityId(List vulnerabilityId) {
    this.vulnerabilityId = vulnerabilityId;
  }


  public FilterCriteria vulnerabilitySource(List vulnerabilitySource) {
    this.vulnerabilitySource = vulnerabilitySource;
    return this;
  }

  /**
   * Get vulnerabilitySource
   * @return vulnerabilitySource
   */
  @javax.annotation.Nullable
  public List getVulnerabilitySource() {
    return vulnerabilitySource;
  }

  public void setVulnerabilitySource(List vulnerabilitySource) {
    this.vulnerabilitySource = vulnerabilitySource;
  }


  public FilterCriteria vulnerablePackages(List vulnerablePackages) {
    this.vulnerablePackages = vulnerablePackages;
    return this;
  }

  /**
   * Get vulnerablePackages
   * @return vulnerablePackages
   */
  @javax.annotation.Nullable
  public List getVulnerablePackages() {
    return vulnerablePackages;
  }

  public void setVulnerablePackages(List vulnerablePackages) {
    this.vulnerablePackages = vulnerablePackages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterCriteria filterCriteria = (FilterCriteria) o;
    return Objects.equals(this.awsAccountId, filterCriteria.awsAccountId) &&
        Objects.equals(this.codeVulnerabilityDetectorName, filterCriteria.codeVulnerabilityDetectorName) &&
        Objects.equals(this.codeVulnerabilityDetectorTags, filterCriteria.codeVulnerabilityDetectorTags) &&
        Objects.equals(this.codeVulnerabilityFilePath, filterCriteria.codeVulnerabilityFilePath) &&
        Objects.equals(this.componentId, filterCriteria.componentId) &&
        Objects.equals(this.componentType, filterCriteria.componentType) &&
        Objects.equals(this.ec2InstanceImageId, filterCriteria.ec2InstanceImageId) &&
        Objects.equals(this.ec2InstanceSubnetId, filterCriteria.ec2InstanceSubnetId) &&
        Objects.equals(this.ec2InstanceVpcId, filterCriteria.ec2InstanceVpcId) &&
        Objects.equals(this.ecrImageArchitecture, filterCriteria.ecrImageArchitecture) &&
        Objects.equals(this.ecrImageHash, filterCriteria.ecrImageHash) &&
        Objects.equals(this.ecrImagePushedAt, filterCriteria.ecrImagePushedAt) &&
        Objects.equals(this.ecrImageRegistry, filterCriteria.ecrImageRegistry) &&
        Objects.equals(this.ecrImageRepositoryName, filterCriteria.ecrImageRepositoryName) &&
        Objects.equals(this.ecrImageTags, filterCriteria.ecrImageTags) &&
        Objects.equals(this.epssScore, filterCriteria.epssScore) &&
        Objects.equals(this.exploitAvailable, filterCriteria.exploitAvailable) &&
        Objects.equals(this.findingArn, filterCriteria.findingArn) &&
        Objects.equals(this.findingStatus, filterCriteria.findingStatus) &&
        Objects.equals(this.findingType, filterCriteria.findingType) &&
        Objects.equals(this.firstObservedAt, filterCriteria.firstObservedAt) &&
        Objects.equals(this.fixAvailable, filterCriteria.fixAvailable) &&
        Objects.equals(this.inspectorScore, filterCriteria.inspectorScore) &&
        Objects.equals(this.lambdaFunctionExecutionRoleArn, filterCriteria.lambdaFunctionExecutionRoleArn) &&
        Objects.equals(this.lambdaFunctionLastModifiedAt, filterCriteria.lambdaFunctionLastModifiedAt) &&
        Objects.equals(this.lambdaFunctionLayers, filterCriteria.lambdaFunctionLayers) &&
        Objects.equals(this.lambdaFunctionName, filterCriteria.lambdaFunctionName) &&
        Objects.equals(this.lambdaFunctionRuntime, filterCriteria.lambdaFunctionRuntime) &&
        Objects.equals(this.lastObservedAt, filterCriteria.lastObservedAt) &&
        Objects.equals(this.networkProtocol, filterCriteria.networkProtocol) &&
        Objects.equals(this.portRange, filterCriteria.portRange) &&
        Objects.equals(this.relatedVulnerabilities, filterCriteria.relatedVulnerabilities) &&
        Objects.equals(this.resourceId, filterCriteria.resourceId) &&
        Objects.equals(this.resourceTags, filterCriteria.resourceTags) &&
        Objects.equals(this.resourceType, filterCriteria.resourceType) &&
        Objects.equals(this.severity, filterCriteria.severity) &&
        Objects.equals(this.title, filterCriteria.title) &&
        Objects.equals(this.updatedAt, filterCriteria.updatedAt) &&
        Objects.equals(this.vendorSeverity, filterCriteria.vendorSeverity) &&
        Objects.equals(this.vulnerabilityId, filterCriteria.vulnerabilityId) &&
        Objects.equals(this.vulnerabilitySource, filterCriteria.vulnerabilitySource) &&
        Objects.equals(this.vulnerablePackages, filterCriteria.vulnerablePackages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsAccountId, codeVulnerabilityDetectorName, codeVulnerabilityDetectorTags, codeVulnerabilityFilePath, componentId, componentType, ec2InstanceImageId, ec2InstanceSubnetId, ec2InstanceVpcId, ecrImageArchitecture, ecrImageHash, ecrImagePushedAt, ecrImageRegistry, ecrImageRepositoryName, ecrImageTags, epssScore, exploitAvailable, findingArn, findingStatus, findingType, firstObservedAt, fixAvailable, inspectorScore, lambdaFunctionExecutionRoleArn, lambdaFunctionLastModifiedAt, lambdaFunctionLayers, lambdaFunctionName, lambdaFunctionRuntime, lastObservedAt, networkProtocol, portRange, relatedVulnerabilities, resourceId, resourceTags, resourceType, severity, title, updatedAt, vendorSeverity, vulnerabilityId, vulnerabilitySource, vulnerablePackages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterCriteria {\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    codeVulnerabilityDetectorName: ").append(toIndentedString(codeVulnerabilityDetectorName)).append("\n");
    sb.append("    codeVulnerabilityDetectorTags: ").append(toIndentedString(codeVulnerabilityDetectorTags)).append("\n");
    sb.append("    codeVulnerabilityFilePath: ").append(toIndentedString(codeVulnerabilityFilePath)).append("\n");
    sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
    sb.append("    componentType: ").append(toIndentedString(componentType)).append("\n");
    sb.append("    ec2InstanceImageId: ").append(toIndentedString(ec2InstanceImageId)).append("\n");
    sb.append("    ec2InstanceSubnetId: ").append(toIndentedString(ec2InstanceSubnetId)).append("\n");
    sb.append("    ec2InstanceVpcId: ").append(toIndentedString(ec2InstanceVpcId)).append("\n");
    sb.append("    ecrImageArchitecture: ").append(toIndentedString(ecrImageArchitecture)).append("\n");
    sb.append("    ecrImageHash: ").append(toIndentedString(ecrImageHash)).append("\n");
    sb.append("    ecrImagePushedAt: ").append(toIndentedString(ecrImagePushedAt)).append("\n");
    sb.append("    ecrImageRegistry: ").append(toIndentedString(ecrImageRegistry)).append("\n");
    sb.append("    ecrImageRepositoryName: ").append(toIndentedString(ecrImageRepositoryName)).append("\n");
    sb.append("    ecrImageTags: ").append(toIndentedString(ecrImageTags)).append("\n");
    sb.append("    epssScore: ").append(toIndentedString(epssScore)).append("\n");
    sb.append("    exploitAvailable: ").append(toIndentedString(exploitAvailable)).append("\n");
    sb.append("    findingArn: ").append(toIndentedString(findingArn)).append("\n");
    sb.append("    findingStatus: ").append(toIndentedString(findingStatus)).append("\n");
    sb.append("    findingType: ").append(toIndentedString(findingType)).append("\n");
    sb.append("    firstObservedAt: ").append(toIndentedString(firstObservedAt)).append("\n");
    sb.append("    fixAvailable: ").append(toIndentedString(fixAvailable)).append("\n");
    sb.append("    inspectorScore: ").append(toIndentedString(inspectorScore)).append("\n");
    sb.append("    lambdaFunctionExecutionRoleArn: ").append(toIndentedString(lambdaFunctionExecutionRoleArn)).append("\n");
    sb.append("    lambdaFunctionLastModifiedAt: ").append(toIndentedString(lambdaFunctionLastModifiedAt)).append("\n");
    sb.append("    lambdaFunctionLayers: ").append(toIndentedString(lambdaFunctionLayers)).append("\n");
    sb.append("    lambdaFunctionName: ").append(toIndentedString(lambdaFunctionName)).append("\n");
    sb.append("    lambdaFunctionRuntime: ").append(toIndentedString(lambdaFunctionRuntime)).append("\n");
    sb.append("    lastObservedAt: ").append(toIndentedString(lastObservedAt)).append("\n");
    sb.append("    networkProtocol: ").append(toIndentedString(networkProtocol)).append("\n");
    sb.append("    portRange: ").append(toIndentedString(portRange)).append("\n");
    sb.append("    relatedVulnerabilities: ").append(toIndentedString(relatedVulnerabilities)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceTags: ").append(toIndentedString(resourceTags)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    vendorSeverity: ").append(toIndentedString(vendorSeverity)).append("\n");
    sb.append("    vulnerabilityId: ").append(toIndentedString(vulnerabilityId)).append("\n");
    sb.append("    vulnerabilitySource: ").append(toIndentedString(vulnerabilitySource)).append("\n");
    sb.append("    vulnerablePackages: ").append(toIndentedString(vulnerablePackages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("awsAccountId");
    openapiFields.add("codeVulnerabilityDetectorName");
    openapiFields.add("codeVulnerabilityDetectorTags");
    openapiFields.add("codeVulnerabilityFilePath");
    openapiFields.add("componentId");
    openapiFields.add("componentType");
    openapiFields.add("ec2InstanceImageId");
    openapiFields.add("ec2InstanceSubnetId");
    openapiFields.add("ec2InstanceVpcId");
    openapiFields.add("ecrImageArchitecture");
    openapiFields.add("ecrImageHash");
    openapiFields.add("ecrImagePushedAt");
    openapiFields.add("ecrImageRegistry");
    openapiFields.add("ecrImageRepositoryName");
    openapiFields.add("ecrImageTags");
    openapiFields.add("epssScore");
    openapiFields.add("exploitAvailable");
    openapiFields.add("findingArn");
    openapiFields.add("findingStatus");
    openapiFields.add("findingType");
    openapiFields.add("firstObservedAt");
    openapiFields.add("fixAvailable");
    openapiFields.add("inspectorScore");
    openapiFields.add("lambdaFunctionExecutionRoleArn");
    openapiFields.add("lambdaFunctionLastModifiedAt");
    openapiFields.add("lambdaFunctionLayers");
    openapiFields.add("lambdaFunctionName");
    openapiFields.add("lambdaFunctionRuntime");
    openapiFields.add("lastObservedAt");
    openapiFields.add("networkProtocol");
    openapiFields.add("portRange");
    openapiFields.add("relatedVulnerabilities");
    openapiFields.add("resourceId");
    openapiFields.add("resourceTags");
    openapiFields.add("resourceType");
    openapiFields.add("severity");
    openapiFields.add("title");
    openapiFields.add("updatedAt");
    openapiFields.add("vendorSeverity");
    openapiFields.add("vulnerabilityId");
    openapiFields.add("vulnerabilitySource");
    openapiFields.add("vulnerablePackages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FilterCriteria
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FilterCriteria.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FilterCriteria is not found in the empty JSON string", FilterCriteria.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FilterCriteria.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FilterCriteria` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `awsAccountId`
      if (jsonObj.get("awsAccountId") != null && !jsonObj.get("awsAccountId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("awsAccountId"));
      }
      // validate the optional field `codeVulnerabilityDetectorName`
      if (jsonObj.get("codeVulnerabilityDetectorName") != null && !jsonObj.get("codeVulnerabilityDetectorName").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("codeVulnerabilityDetectorName"));
      }
      // validate the optional field `codeVulnerabilityDetectorTags`
      if (jsonObj.get("codeVulnerabilityDetectorTags") != null && !jsonObj.get("codeVulnerabilityDetectorTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("codeVulnerabilityDetectorTags"));
      }
      // validate the optional field `codeVulnerabilityFilePath`
      if (jsonObj.get("codeVulnerabilityFilePath") != null && !jsonObj.get("codeVulnerabilityFilePath").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("codeVulnerabilityFilePath"));
      }
      // validate the optional field `componentId`
      if (jsonObj.get("componentId") != null && !jsonObj.get("componentId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("componentId"));
      }
      // validate the optional field `componentType`
      if (jsonObj.get("componentType") != null && !jsonObj.get("componentType").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("componentType"));
      }
      // validate the optional field `ec2InstanceImageId`
      if (jsonObj.get("ec2InstanceImageId") != null && !jsonObj.get("ec2InstanceImageId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ec2InstanceImageId"));
      }
      // validate the optional field `ec2InstanceSubnetId`
      if (jsonObj.get("ec2InstanceSubnetId") != null && !jsonObj.get("ec2InstanceSubnetId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ec2InstanceSubnetId"));
      }
      // validate the optional field `ec2InstanceVpcId`
      if (jsonObj.get("ec2InstanceVpcId") != null && !jsonObj.get("ec2InstanceVpcId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ec2InstanceVpcId"));
      }
      // validate the optional field `ecrImageArchitecture`
      if (jsonObj.get("ecrImageArchitecture") != null && !jsonObj.get("ecrImageArchitecture").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImageArchitecture"));
      }
      // validate the optional field `ecrImageHash`
      if (jsonObj.get("ecrImageHash") != null && !jsonObj.get("ecrImageHash").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImageHash"));
      }
      // validate the optional field `ecrImagePushedAt`
      if (jsonObj.get("ecrImagePushedAt") != null && !jsonObj.get("ecrImagePushedAt").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImagePushedAt"));
      }
      // validate the optional field `ecrImageRegistry`
      if (jsonObj.get("ecrImageRegistry") != null && !jsonObj.get("ecrImageRegistry").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImageRegistry"));
      }
      // validate the optional field `ecrImageRepositoryName`
      if (jsonObj.get("ecrImageRepositoryName") != null && !jsonObj.get("ecrImageRepositoryName").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImageRepositoryName"));
      }
      // validate the optional field `ecrImageTags`
      if (jsonObj.get("ecrImageTags") != null && !jsonObj.get("ecrImageTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ecrImageTags"));
      }
      // validate the optional field `epssScore`
      if (jsonObj.get("epssScore") != null && !jsonObj.get("epssScore").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("epssScore"));
      }
      // validate the optional field `exploitAvailable`
      if (jsonObj.get("exploitAvailable") != null && !jsonObj.get("exploitAvailable").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("exploitAvailable"));
      }
      // validate the optional field `findingArn`
      if (jsonObj.get("findingArn") != null && !jsonObj.get("findingArn").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("findingArn"));
      }
      // validate the optional field `findingStatus`
      if (jsonObj.get("findingStatus") != null && !jsonObj.get("findingStatus").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("findingStatus"));
      }
      // validate the optional field `findingType`
      if (jsonObj.get("findingType") != null && !jsonObj.get("findingType").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("findingType"));
      }
      // validate the optional field `firstObservedAt`
      if (jsonObj.get("firstObservedAt") != null && !jsonObj.get("firstObservedAt").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("firstObservedAt"));
      }
      // validate the optional field `fixAvailable`
      if (jsonObj.get("fixAvailable") != null && !jsonObj.get("fixAvailable").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("fixAvailable"));
      }
      // validate the optional field `inspectorScore`
      if (jsonObj.get("inspectorScore") != null && !jsonObj.get("inspectorScore").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("inspectorScore"));
      }
      // validate the optional field `lambdaFunctionExecutionRoleArn`
      if (jsonObj.get("lambdaFunctionExecutionRoleArn") != null && !jsonObj.get("lambdaFunctionExecutionRoleArn").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lambdaFunctionExecutionRoleArn"));
      }
      // validate the optional field `lambdaFunctionLastModifiedAt`
      if (jsonObj.get("lambdaFunctionLastModifiedAt") != null && !jsonObj.get("lambdaFunctionLastModifiedAt").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lambdaFunctionLastModifiedAt"));
      }
      // validate the optional field `lambdaFunctionLayers`
      if (jsonObj.get("lambdaFunctionLayers") != null && !jsonObj.get("lambdaFunctionLayers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lambdaFunctionLayers"));
      }
      // validate the optional field `lambdaFunctionName`
      if (jsonObj.get("lambdaFunctionName") != null && !jsonObj.get("lambdaFunctionName").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lambdaFunctionName"));
      }
      // validate the optional field `lambdaFunctionRuntime`
      if (jsonObj.get("lambdaFunctionRuntime") != null && !jsonObj.get("lambdaFunctionRuntime").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lambdaFunctionRuntime"));
      }
      // validate the optional field `lastObservedAt`
      if (jsonObj.get("lastObservedAt") != null && !jsonObj.get("lastObservedAt").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("lastObservedAt"));
      }
      // validate the optional field `networkProtocol`
      if (jsonObj.get("networkProtocol") != null && !jsonObj.get("networkProtocol").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("networkProtocol"));
      }
      // validate the optional field `portRange`
      if (jsonObj.get("portRange") != null && !jsonObj.get("portRange").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("portRange"));
      }
      // validate the optional field `relatedVulnerabilities`
      if (jsonObj.get("relatedVulnerabilities") != null && !jsonObj.get("relatedVulnerabilities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("relatedVulnerabilities"));
      }
      // validate the optional field `resourceId`
      if (jsonObj.get("resourceId") != null && !jsonObj.get("resourceId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceId"));
      }
      // validate the optional field `resourceTags`
      if (jsonObj.get("resourceTags") != null && !jsonObj.get("resourceTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceTags"));
      }
      // validate the optional field `resourceType`
      if (jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("resourceType"));
      }
      // validate the optional field `severity`
      if (jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("severity"));
      }
      // validate the optional field `title`
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("title"));
      }
      // validate the optional field `updatedAt`
      if (jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("updatedAt"));
      }
      // validate the optional field `vendorSeverity`
      if (jsonObj.get("vendorSeverity") != null && !jsonObj.get("vendorSeverity").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vendorSeverity"));
      }
      // validate the optional field `vulnerabilityId`
      if (jsonObj.get("vulnerabilityId") != null && !jsonObj.get("vulnerabilityId").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vulnerabilityId"));
      }
      // validate the optional field `vulnerabilitySource`
      if (jsonObj.get("vulnerabilitySource") != null && !jsonObj.get("vulnerabilitySource").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vulnerabilitySource"));
      }
      // validate the optional field `vulnerablePackages`
      if (jsonObj.get("vulnerablePackages") != null && !jsonObj.get("vulnerablePackages").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vulnerablePackages"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FilterCriteria.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FilterCriteria' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FilterCriteria> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FilterCriteria.class));

       return (TypeAdapter<T>) new TypeAdapter<FilterCriteria>() {
           @Override
           public void write(JsonWriter out, FilterCriteria value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FilterCriteria read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FilterCriteria given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FilterCriteria
   * @throws IOException if the JSON string is invalid with respect to FilterCriteria
   */
  public static FilterCriteria fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FilterCriteria.class);
  }

  /**
   * Convert an instance of FilterCriteria to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

