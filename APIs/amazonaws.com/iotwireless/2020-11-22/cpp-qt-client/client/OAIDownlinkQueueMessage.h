/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDownlinkQueueMessage.h
 *
 * The message in the downlink queue.
 */

#ifndef OAIDownlinkQueueMessage_H
#define OAIDownlinkQueueMessage_H

#include <QJsonObject>

#include "OAILoRaWANSendDataToDevice.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoRaWANSendDataToDevice;

class OAIDownlinkQueueMessage : public OAIObject {
public:
    OAIDownlinkQueueMessage();
    OAIDownlinkQueueMessage(QString json);
    ~OAIDownlinkQueueMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    qint32 getTransmitMode() const;
    void setTransmitMode(const qint32 &transmit_mode);
    bool is_transmit_mode_Set() const;
    bool is_transmit_mode_Valid() const;

    QString getReceivedAt() const;
    void setReceivedAt(const QString &received_at);
    bool is_received_at_Set() const;
    bool is_received_at_Valid() const;

    OAILoRaWANSendDataToDevice getLoRaWan() const;
    void setLoRaWan(const OAILoRaWANSendDataToDevice &lo_ra_wan);
    bool is_lo_ra_wan_Set() const;
    bool is_lo_ra_wan_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    qint32 m_transmit_mode;
    bool m_transmit_mode_isSet;
    bool m_transmit_mode_isValid;

    QString m_received_at;
    bool m_received_at_isSet;
    bool m_received_at_isValid;

    OAILoRaWANSendDataToDevice m_lo_ra_wan;
    bool m_lo_ra_wan_isSet;
    bool m_lo_ra_wan_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDownlinkQueueMessage)

#endif // OAIDownlinkQueueMessage_H
