/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventNotificationItemConfigurations.h
 *
 * Object of all event configurations and the status of the event topics.
 */

#ifndef OAIEventNotificationItemConfigurations_H
#define OAIEventNotificationItemConfigurations_H

#include <QJsonObject>

#include "OAIEventNotificationItemConfigurations_ConnectionStatus.h"
#include "OAIEventNotificationItemConfigurations_DeviceRegistrationState.h"
#include "OAIEventNotificationItemConfigurations_Join.h"
#include "OAIEventNotificationItemConfigurations_MessageDeliveryStatus.h"
#include "OAIEventNotificationItemConfigurations_Proximity.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventNotificationItemConfigurations_DeviceRegistrationState;
class OAIEventNotificationItemConfigurations_Proximity;
class OAIEventNotificationItemConfigurations_Join;
class OAIEventNotificationItemConfigurations_ConnectionStatus;
class OAIEventNotificationItemConfigurations_MessageDeliveryStatus;

class OAIEventNotificationItemConfigurations : public OAIObject {
public:
    OAIEventNotificationItemConfigurations();
    OAIEventNotificationItemConfigurations(QString json);
    ~OAIEventNotificationItemConfigurations() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEventNotificationItemConfigurations_DeviceRegistrationState getDeviceRegistrationState() const;
    void setDeviceRegistrationState(const OAIEventNotificationItemConfigurations_DeviceRegistrationState &device_registration_state);
    bool is_device_registration_state_Set() const;
    bool is_device_registration_state_Valid() const;

    OAIEventNotificationItemConfigurations_Proximity getProximity() const;
    void setProximity(const OAIEventNotificationItemConfigurations_Proximity &proximity);
    bool is_proximity_Set() const;
    bool is_proximity_Valid() const;

    OAIEventNotificationItemConfigurations_Join getJoin() const;
    void setJoin(const OAIEventNotificationItemConfigurations_Join &join);
    bool is_join_Set() const;
    bool is_join_Valid() const;

    OAIEventNotificationItemConfigurations_ConnectionStatus getConnectionStatus() const;
    void setConnectionStatus(const OAIEventNotificationItemConfigurations_ConnectionStatus &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    OAIEventNotificationItemConfigurations_MessageDeliveryStatus getMessageDeliveryStatus() const;
    void setMessageDeliveryStatus(const OAIEventNotificationItemConfigurations_MessageDeliveryStatus &message_delivery_status);
    bool is_message_delivery_status_Set() const;
    bool is_message_delivery_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEventNotificationItemConfigurations_DeviceRegistrationState m_device_registration_state;
    bool m_device_registration_state_isSet;
    bool m_device_registration_state_isValid;

    OAIEventNotificationItemConfigurations_Proximity m_proximity;
    bool m_proximity_isSet;
    bool m_proximity_isValid;

    OAIEventNotificationItemConfigurations_Join m_join;
    bool m_join_isSet;
    bool m_join_isValid;

    OAIEventNotificationItemConfigurations_ConnectionStatus m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;

    OAIEventNotificationItemConfigurations_MessageDeliveryStatus m_message_delivery_status;
    bool m_message_delivery_status_isSet;
    bool m_message_delivery_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventNotificationItemConfigurations)

#endif // OAIEventNotificationItemConfigurations_H
