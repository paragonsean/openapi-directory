/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoRaWANGatewayMetadata.h
 *
 * LoRaWAN gateway metatdata.
 */

#ifndef OAILoRaWANGatewayMetadata_H
#define OAILoRaWANGatewayMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoRaWANGatewayMetadata : public OAIObject {
public:
    OAILoRaWANGatewayMetadata();
    OAILoRaWANGatewayMetadata(QString json);
    ~OAILoRaWANGatewayMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayEui() const;
    void setGatewayEui(const QString &gateway_eui);
    bool is_gateway_eui_Set() const;
    bool is_gateway_eui_Valid() const;

    double getSnr() const;
    void setSnr(const double &snr);
    bool is_snr_Set() const;
    bool is_snr_Valid() const;

    double getRssi() const;
    void setRssi(const double &rssi);
    bool is_rssi_Set() const;
    bool is_rssi_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_eui;
    bool m_gateway_eui_isSet;
    bool m_gateway_eui_isValid;

    double m_snr;
    bool m_snr_isSet;
    bool m_snr_isValid;

    double m_rssi;
    bool m_rssi_isSet;
    bool m_rssi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoRaWANGatewayMetadata)

#endif // OAILoRaWANGatewayMetadata_H
