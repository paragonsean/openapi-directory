/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1.h
 *
 * 
 */

#ifndef OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1_H
#define OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1_H

#include <QJsonObject>

#include "OAIAbpV1_1_SessionKeys.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAbpV1_1_SessionKeys;

class OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1 : public OAIObject {
public:
    OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1();
    OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1(QString json);
    ~OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDevAddr() const;
    void setDevAddr(const QString &dev_addr);
    bool is_dev_addr_Set() const;
    bool is_dev_addr_Valid() const;

    OAIAbpV1_1_SessionKeys getSessionKeys() const;
    void setSessionKeys(const OAIAbpV1_1_SessionKeys &session_keys);
    bool is_session_keys_Set() const;
    bool is_session_keys_Valid() const;

    qint32 getFCntStart() const;
    void setFCntStart(const qint32 &f_cnt_start);
    bool is_f_cnt_start_Set() const;
    bool is_f_cnt_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dev_addr;
    bool m_dev_addr_isSet;
    bool m_dev_addr_isValid;

    OAIAbpV1_1_SessionKeys m_session_keys;
    bool m_session_keys_isSet;
    bool m_session_keys_isValid;

    qint32 m_f_cnt_start;
    bool m_f_cnt_start_isSet;
    bool m_f_cnt_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1)

#endif // OAICreateWirelessDevice_request_LoRaWAN_AbpV1_1_H
