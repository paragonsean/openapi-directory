/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateWirelessDevice_request_LoRaWAN.h
 *
 * LoRaWAN object for update functions.
 */

#ifndef OAIUpdateWirelessDevice_request_LoRaWAN_H
#define OAIUpdateWirelessDevice_request_LoRaWAN_H

#include <QJsonObject>

#include "OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x.h"
#include "OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_1.h"
#include "OAIUpdateWirelessDevice_request_LoRaWAN_FPorts.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_1;
class OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x;
class OAIUpdateWirelessDevice_request_LoRaWAN_FPorts;

class OAIUpdateWirelessDevice_request_LoRaWAN : public OAIObject {
public:
    OAIUpdateWirelessDevice_request_LoRaWAN();
    OAIUpdateWirelessDevice_request_LoRaWAN(QString json);
    ~OAIUpdateWirelessDevice_request_LoRaWAN() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceProfileId() const;
    void setDeviceProfileId(const QString &device_profile_id);
    bool is_device_profile_id_Set() const;
    bool is_device_profile_id_Valid() const;

    QString getServiceProfileId() const;
    void setServiceProfileId(const QString &service_profile_id);
    bool is_service_profile_id_Set() const;
    bool is_service_profile_id_Valid() const;

    OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_1 getAbpV11() const;
    void setAbpV11(const OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_1 &abp_v1_1);
    bool is_abp_v1_1_Set() const;
    bool is_abp_v1_1_Valid() const;

    OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x getAbpV10X() const;
    void setAbpV10X(const OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x &abp_v1_0_x);
    bool is_abp_v1_0_x_Set() const;
    bool is_abp_v1_0_x_Valid() const;

    OAIUpdateWirelessDevice_request_LoRaWAN_FPorts getFPorts() const;
    void setFPorts(const OAIUpdateWirelessDevice_request_LoRaWAN_FPorts &f_ports);
    bool is_f_ports_Set() const;
    bool is_f_ports_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_profile_id;
    bool m_device_profile_id_isSet;
    bool m_device_profile_id_isValid;

    QString m_service_profile_id;
    bool m_service_profile_id_isSet;
    bool m_service_profile_id_isValid;

    OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_1 m_abp_v1_1;
    bool m_abp_v1_1_isSet;
    bool m_abp_v1_1_isValid;

    OAIUpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x m_abp_v1_0_x;
    bool m_abp_v1_0_x_isSet;
    bool m_abp_v1_0_x_isValid;

    OAIUpdateWirelessDevice_request_LoRaWAN_FPorts m_f_ports;
    bool m_f_ports_isSet;
    bool m_f_ports_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateWirelessDevice_request_LoRaWAN)

#endif // OAIUpdateWirelessDevice_request_LoRaWAN_H
