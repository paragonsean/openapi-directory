/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateNetworkAnalyzerConfiguration_request.h
 *
 * 
 */

#ifndef OAICreateNetworkAnalyzerConfiguration_request_H
#define OAICreateNetworkAnalyzerConfiguration_request_H

#include <QJsonObject>

#include "OAICreateNetworkAnalyzerConfiguration_request_TraceContent.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNetworkAnalyzerConfiguration_request_TraceContent;
class OAITag;

class OAICreateNetworkAnalyzerConfiguration_request : public OAIObject {
public:
    OAICreateNetworkAnalyzerConfiguration_request();
    OAICreateNetworkAnalyzerConfiguration_request(QString json);
    ~OAICreateNetworkAnalyzerConfiguration_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateNetworkAnalyzerConfiguration_request_TraceContent getTraceContent() const;
    void setTraceContent(const OAICreateNetworkAnalyzerConfiguration_request_TraceContent &trace_content);
    bool is_trace_content_Set() const;
    bool is_trace_content_Valid() const;

    QList<QString> getWirelessDevices() const;
    void setWirelessDevices(const QList<QString> &wireless_devices);
    bool is_wireless_devices_Set() const;
    bool is_wireless_devices_Valid() const;

    QList<QString> getWirelessGateways() const;
    void setWirelessGateways(const QList<QString> &wireless_gateways);
    bool is_wireless_gateways_Set() const;
    bool is_wireless_gateways_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QList<QString> getMulticastGroups() const;
    void setMulticastGroups(const QList<QString> &multicast_groups);
    bool is_multicast_groups_Set() const;
    bool is_multicast_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateNetworkAnalyzerConfiguration_request_TraceContent m_trace_content;
    bool m_trace_content_isSet;
    bool m_trace_content_isValid;

    QList<QString> m_wireless_devices;
    bool m_wireless_devices_isSet;
    bool m_wireless_devices_isValid;

    QList<QString> m_wireless_gateways;
    bool m_wireless_gateways_isSet;
    bool m_wireless_gateways_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QList<QString> m_multicast_groups;
    bool m_multicast_groups_isSet;
    bool m_multicast_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateNetworkAnalyzerConfiguration_request)

#endif // OAICreateNetworkAnalyzerConfiguration_request_H
