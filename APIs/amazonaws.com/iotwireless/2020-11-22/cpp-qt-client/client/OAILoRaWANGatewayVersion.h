/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoRaWANGatewayVersion.h
 *
 * LoRaWANGatewayVersion object.
 */

#ifndef OAILoRaWANGatewayVersion_H
#define OAILoRaWANGatewayVersion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoRaWANGatewayVersion : public OAIObject {
public:
    OAILoRaWANGatewayVersion();
    OAILoRaWANGatewayVersion(QString json);
    ~OAILoRaWANGatewayVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getStation() const;
    void setStation(const QString &station);
    bool is_station_Set() const;
    bool is_station_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_station;
    bool m_station_isSet;
    bool m_station_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoRaWANGatewayVersion)

#endif // OAILoRaWANGatewayVersion_H
