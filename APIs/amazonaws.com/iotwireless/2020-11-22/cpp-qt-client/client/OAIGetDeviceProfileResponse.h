/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeviceProfileResponse.h
 *
 * 
 */

#ifndef OAIGetDeviceProfileResponse_H
#define OAIGetDeviceProfileResponse_H

#include <QJsonObject>

#include "OAIGetDeviceProfileResponse_LoRaWAN.h"
#include "OAIGetDeviceProfileResponse_Sidewalk.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDeviceProfileResponse_LoRaWAN;
class OAIGetDeviceProfileResponse_Sidewalk;

class OAIGetDeviceProfileResponse : public OAIObject {
public:
    OAIGetDeviceProfileResponse();
    OAIGetDeviceProfileResponse(QString json);
    ~OAIGetDeviceProfileResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGetDeviceProfileResponse_LoRaWAN getLoRaWan() const;
    void setLoRaWan(const OAIGetDeviceProfileResponse_LoRaWAN &lo_ra_wan);
    bool is_lo_ra_wan_Set() const;
    bool is_lo_ra_wan_Valid() const;

    OAIGetDeviceProfileResponse_Sidewalk getSidewalk() const;
    void setSidewalk(const OAIGetDeviceProfileResponse_Sidewalk &sidewalk);
    bool is_sidewalk_Set() const;
    bool is_sidewalk_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGetDeviceProfileResponse_LoRaWAN m_lo_ra_wan;
    bool m_lo_ra_wan_isSet;
    bool m_lo_ra_wan_isValid;

    OAIGetDeviceProfileResponse_Sidewalk m_sidewalk;
    bool m_sidewalk_isSet;
    bool m_sidewalk_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeviceProfileResponse)

#endif // OAIGetDeviceProfileResponse_H
