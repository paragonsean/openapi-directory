/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetWirelessDeviceImportTaskResponse_Sidewalk.h
 *
 * 
 */

#ifndef OAIGetWirelessDeviceImportTaskResponse_Sidewalk_H
#define OAIGetWirelessDeviceImportTaskResponse_Sidewalk_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetWirelessDeviceImportTaskResponse_Sidewalk : public OAIObject {
public:
    OAIGetWirelessDeviceImportTaskResponse_Sidewalk();
    OAIGetWirelessDeviceImportTaskResponse_Sidewalk(QString json);
    ~OAIGetWirelessDeviceImportTaskResponse_Sidewalk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDeviceCreationFileList() const;
    void setDeviceCreationFileList(const QList &device_creation_file_list);
    bool is_device_creation_file_list_Set() const;
    bool is_device_creation_file_list_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_device_creation_file_list;
    bool m_device_creation_file_list_isSet;
    bool m_device_creation_file_list_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetWirelessDeviceImportTaskResponse_Sidewalk)

#endif // OAIGetWirelessDeviceImportTaskResponse_Sidewalk_H
