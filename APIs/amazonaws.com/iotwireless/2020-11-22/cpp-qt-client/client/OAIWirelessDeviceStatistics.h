/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWirelessDeviceStatistics.h
 *
 * Information about a wireless device&#39;s operation.
 */

#ifndef OAIWirelessDeviceStatistics_H
#define OAIWirelessDeviceStatistics_H

#include <QJsonObject>

#include "OAIFuotaDeviceStatus.h"
#include "OAIWirelessDeviceStatistics_LoRaWAN.h"
#include "OAIWirelessDeviceStatistics_Sidewalk.h"
#include "OAIWirelessDeviceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWirelessDeviceStatistics_LoRaWAN;
class OAIWirelessDeviceStatistics_Sidewalk;

class OAIWirelessDeviceStatistics : public OAIObject {
public:
    OAIWirelessDeviceStatistics();
    OAIWirelessDeviceStatistics(QString json);
    ~OAIWirelessDeviceStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIWirelessDeviceType getType() const;
    void setType(const OAIWirelessDeviceType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDestinationName() const;
    void setDestinationName(const QString &destination_name);
    bool is_destination_name_Set() const;
    bool is_destination_name_Valid() const;

    QString getLastUplinkReceivedAt() const;
    void setLastUplinkReceivedAt(const QString &last_uplink_received_at);
    bool is_last_uplink_received_at_Set() const;
    bool is_last_uplink_received_at_Valid() const;

    OAIWirelessDeviceStatistics_LoRaWAN getLoRaWan() const;
    void setLoRaWan(const OAIWirelessDeviceStatistics_LoRaWAN &lo_ra_wan);
    bool is_lo_ra_wan_Set() const;
    bool is_lo_ra_wan_Valid() const;

    OAIWirelessDeviceStatistics_Sidewalk getSidewalk() const;
    void setSidewalk(const OAIWirelessDeviceStatistics_Sidewalk &sidewalk);
    bool is_sidewalk_Set() const;
    bool is_sidewalk_Valid() const;

    OAIFuotaDeviceStatus getFuotaDeviceStatus() const;
    void setFuotaDeviceStatus(const OAIFuotaDeviceStatus &fuota_device_status);
    bool is_fuota_device_status_Set() const;
    bool is_fuota_device_status_Valid() const;

    QString getMulticastDeviceStatus() const;
    void setMulticastDeviceStatus(const QString &multicast_device_status);
    bool is_multicast_device_status_Set() const;
    bool is_multicast_device_status_Valid() const;

    qint32 getMcGroupId() const;
    void setMcGroupId(const qint32 &mc_group_id);
    bool is_mc_group_id_Set() const;
    bool is_mc_group_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIWirelessDeviceType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_destination_name;
    bool m_destination_name_isSet;
    bool m_destination_name_isValid;

    QString m_last_uplink_received_at;
    bool m_last_uplink_received_at_isSet;
    bool m_last_uplink_received_at_isValid;

    OAIWirelessDeviceStatistics_LoRaWAN m_lo_ra_wan;
    bool m_lo_ra_wan_isSet;
    bool m_lo_ra_wan_isValid;

    OAIWirelessDeviceStatistics_Sidewalk m_sidewalk;
    bool m_sidewalk_isSet;
    bool m_sidewalk_isValid;

    OAIFuotaDeviceStatus m_fuota_device_status;
    bool m_fuota_device_status_isSet;
    bool m_fuota_device_status_isValid;

    QString m_multicast_device_status;
    bool m_multicast_device_status_isSet;
    bool m_multicast_device_status_isValid;

    qint32 m_mc_group_id;
    bool m_mc_group_id_isSet;
    bool m_mc_group_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWirelessDeviceStatistics)

#endif // OAIWirelessDeviceStatistics_H
