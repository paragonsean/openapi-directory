/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNetworkAnalyzerConfigurationRequest.h
 *
 * 
 */

#ifndef OAIUpdateNetworkAnalyzerConfigurationRequest_H
#define OAIUpdateNetworkAnalyzerConfigurationRequest_H

#include <QJsonObject>

#include "OAITraceContent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITraceContent;

class OAIUpdateNetworkAnalyzerConfigurationRequest : public OAIObject {
public:
    OAIUpdateNetworkAnalyzerConfigurationRequest();
    OAIUpdateNetworkAnalyzerConfigurationRequest(QString json);
    ~OAIUpdateNetworkAnalyzerConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITraceContent getTraceContent() const;
    void setTraceContent(const OAITraceContent &trace_content);
    bool is_trace_content_Set() const;
    bool is_trace_content_Valid() const;

    QList getWirelessDevicesToAdd() const;
    void setWirelessDevicesToAdd(const QList &wireless_devices_to_add);
    bool is_wireless_devices_to_add_Set() const;
    bool is_wireless_devices_to_add_Valid() const;

    QList getWirelessDevicesToRemove() const;
    void setWirelessDevicesToRemove(const QList &wireless_devices_to_remove);
    bool is_wireless_devices_to_remove_Set() const;
    bool is_wireless_devices_to_remove_Valid() const;

    QList getWirelessGatewaysToAdd() const;
    void setWirelessGatewaysToAdd(const QList &wireless_gateways_to_add);
    bool is_wireless_gateways_to_add_Set() const;
    bool is_wireless_gateways_to_add_Valid() const;

    QList getWirelessGatewaysToRemove() const;
    void setWirelessGatewaysToRemove(const QList &wireless_gateways_to_remove);
    bool is_wireless_gateways_to_remove_Set() const;
    bool is_wireless_gateways_to_remove_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getMulticastGroupsToAdd() const;
    void setMulticastGroupsToAdd(const QList &multicast_groups_to_add);
    bool is_multicast_groups_to_add_Set() const;
    bool is_multicast_groups_to_add_Valid() const;

    QList getMulticastGroupsToRemove() const;
    void setMulticastGroupsToRemove(const QList &multicast_groups_to_remove);
    bool is_multicast_groups_to_remove_Set() const;
    bool is_multicast_groups_to_remove_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITraceContent m_trace_content;
    bool m_trace_content_isSet;
    bool m_trace_content_isValid;

    QList m_wireless_devices_to_add;
    bool m_wireless_devices_to_add_isSet;
    bool m_wireless_devices_to_add_isValid;

    QList m_wireless_devices_to_remove;
    bool m_wireless_devices_to_remove_isSet;
    bool m_wireless_devices_to_remove_isValid;

    QList m_wireless_gateways_to_add;
    bool m_wireless_gateways_to_add_isSet;
    bool m_wireless_gateways_to_add_isValid;

    QList m_wireless_gateways_to_remove;
    bool m_wireless_gateways_to_remove_isSet;
    bool m_wireless_gateways_to_remove_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_multicast_groups_to_add;
    bool m_multicast_groups_to_add_isSet;
    bool m_multicast_groups_to_add_isValid;

    QList m_multicast_groups_to_remove;
    bool m_multicast_groups_to_remove_isSet;
    bool m_multicast_groups_to_remove_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNetworkAnalyzerConfigurationRequest)

#endif // OAIUpdateNetworkAnalyzerConfigurationRequest_H
