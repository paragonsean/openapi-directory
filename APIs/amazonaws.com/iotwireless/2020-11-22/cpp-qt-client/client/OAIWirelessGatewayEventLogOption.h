/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWirelessGatewayEventLogOption.h
 *
 * &lt;p&gt;The log options for a wireless gateway event and can be used to set log levels for a specific wireless gateway event.&lt;/p&gt; &lt;p&gt;For a LoRaWAN gateway, possible events for a log message are &lt;code&gt;CUPS_Request&lt;/code&gt; and &lt;code&gt;Certificate&lt;/code&gt;.&lt;/p&gt;
 */

#ifndef OAIWirelessGatewayEventLogOption_H
#define OAIWirelessGatewayEventLogOption_H

#include <QJsonObject>

#include "OAILogLevel.h"
#include "OAIWirelessGatewayEvent.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWirelessGatewayEventLogOption : public OAIObject {
public:
    OAIWirelessGatewayEventLogOption();
    OAIWirelessGatewayEventLogOption(QString json);
    ~OAIWirelessGatewayEventLogOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWirelessGatewayEvent getEvent() const;
    void setEvent(const OAIWirelessGatewayEvent &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    OAILogLevel getLogLevel() const;
    void setLogLevel(const OAILogLevel &log_level);
    bool is_log_level_Set() const;
    bool is_log_level_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWirelessGatewayEvent m_event;
    bool m_event_isSet;
    bool m_event_isValid;

    OAILogLevel m_log_level;
    bool m_log_level_isSet;
    bool m_log_level_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWirelessGatewayEventLogOption)

#endif // OAIWirelessGatewayEventLogOption_H
