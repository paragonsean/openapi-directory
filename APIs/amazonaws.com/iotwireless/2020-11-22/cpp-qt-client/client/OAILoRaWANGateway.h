/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoRaWANGateway.h
 *
 * LoRaWANGateway object.
 */

#ifndef OAILoRaWANGateway_H
#define OAILoRaWANGateway_H

#include <QJsonObject>

#include "OAICreateWirelessGateway_request_LoRaWAN_Beaconing.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateWirelessGateway_request_LoRaWAN_Beaconing;

class OAILoRaWANGateway : public OAIObject {
public:
    OAILoRaWANGateway();
    OAILoRaWANGateway(QString json);
    ~OAILoRaWANGateway() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayEui() const;
    void setGatewayEui(const QString &gateway_eui);
    bool is_gateway_eui_Set() const;
    bool is_gateway_eui_Valid() const;

    QString getRfRegion() const;
    void setRfRegion(const QString &rf_region);
    bool is_rf_region_Set() const;
    bool is_rf_region_Valid() const;

    QList<QList> getJoinEuiFilters() const;
    void setJoinEuiFilters(const QList<QList> &join_eui_filters);
    bool is_join_eui_filters_Set() const;
    bool is_join_eui_filters_Valid() const;

    QList<QString> getNetIdFilters() const;
    void setNetIdFilters(const QList<QString> &net_id_filters);
    bool is_net_id_filters_Set() const;
    bool is_net_id_filters_Valid() const;

    QList<qint32> getSubBands() const;
    void setSubBands(const QList<qint32> &sub_bands);
    bool is_sub_bands_Set() const;
    bool is_sub_bands_Valid() const;

    OAICreateWirelessGateway_request_LoRaWAN_Beaconing getBeaconing() const;
    void setBeaconing(const OAICreateWirelessGateway_request_LoRaWAN_Beaconing &beaconing);
    bool is_beaconing_Set() const;
    bool is_beaconing_Valid() const;

    float getMaxEirp() const;
    void setMaxEirp(const float &max_eirp);
    bool is_max_eirp_Set() const;
    bool is_max_eirp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_eui;
    bool m_gateway_eui_isSet;
    bool m_gateway_eui_isValid;

    QString m_rf_region;
    bool m_rf_region_isSet;
    bool m_rf_region_isValid;

    QList<QList> m_join_eui_filters;
    bool m_join_eui_filters_isSet;
    bool m_join_eui_filters_isValid;

    QList<QString> m_net_id_filters;
    bool m_net_id_filters_isSet;
    bool m_net_id_filters_isValid;

    QList<qint32> m_sub_bands;
    bool m_sub_bands_isSet;
    bool m_sub_bands_isValid;

    OAICreateWirelessGateway_request_LoRaWAN_Beaconing m_beaconing;
    bool m_beaconing_isSet;
    bool m_beaconing_isValid;

    float m_max_eirp;
    bool m_max_eirp_isSet;
    bool m_max_eirp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoRaWANGateway)

#endif // OAILoRaWANGateway_H
