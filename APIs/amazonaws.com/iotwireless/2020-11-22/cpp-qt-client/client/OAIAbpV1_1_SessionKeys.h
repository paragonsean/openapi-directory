/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAbpV1_1_SessionKeys.h
 *
 * 
 */

#ifndef OAIAbpV1_1_SessionKeys_H
#define OAIAbpV1_1_SessionKeys_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAbpV1_1_SessionKeys : public OAIObject {
public:
    OAIAbpV1_1_SessionKeys();
    OAIAbpV1_1_SessionKeys(QString json);
    ~OAIAbpV1_1_SessionKeys() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFNwkSIntKey() const;
    void setFNwkSIntKey(const QString &f_nwk_s_int_key);
    bool is_f_nwk_s_int_key_Set() const;
    bool is_f_nwk_s_int_key_Valid() const;

    QString getSNwkSIntKey() const;
    void setSNwkSIntKey(const QString &s_nwk_s_int_key);
    bool is_s_nwk_s_int_key_Set() const;
    bool is_s_nwk_s_int_key_Valid() const;

    QString getNwkSEncKey() const;
    void setNwkSEncKey(const QString &nwk_s_enc_key);
    bool is_nwk_s_enc_key_Set() const;
    bool is_nwk_s_enc_key_Valid() const;

    QString getAppSKey() const;
    void setAppSKey(const QString &app_s_key);
    bool is_app_s_key_Set() const;
    bool is_app_s_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_f_nwk_s_int_key;
    bool m_f_nwk_s_int_key_isSet;
    bool m_f_nwk_s_int_key_isValid;

    QString m_s_nwk_s_int_key;
    bool m_s_nwk_s_int_key_isSet;
    bool m_s_nwk_s_int_key_isValid;

    QString m_nwk_s_enc_key;
    bool m_nwk_s_enc_key_isSet;
    bool m_nwk_s_enc_key_isValid;

    QString m_app_s_key;
    bool m_app_s_key_isSet;
    bool m_app_s_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAbpV1_1_SessionKeys)

#endif // OAIAbpV1_1_SessionKeys_H
