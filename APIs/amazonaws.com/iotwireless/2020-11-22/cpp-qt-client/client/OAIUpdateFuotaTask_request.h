/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateFuotaTask_request.h
 *
 * 
 */

#ifndef OAIUpdateFuotaTask_request_H
#define OAIUpdateFuotaTask_request_H

#include <QJsonObject>

#include "OAICreateFuotaTask_request_LoRaWAN.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateFuotaTask_request_LoRaWAN;

class OAIUpdateFuotaTask_request : public OAIObject {
public:
    OAIUpdateFuotaTask_request();
    OAIUpdateFuotaTask_request(QString json);
    ~OAIUpdateFuotaTask_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateFuotaTask_request_LoRaWAN getLoRaWan() const;
    void setLoRaWan(const OAICreateFuotaTask_request_LoRaWAN &lo_ra_wan);
    bool is_lo_ra_wan_Set() const;
    bool is_lo_ra_wan_Valid() const;

    QString getFirmwareUpdateImage() const;
    void setFirmwareUpdateImage(const QString &firmware_update_image);
    bool is_firmware_update_image_Set() const;
    bool is_firmware_update_image_Valid() const;

    QString getFirmwareUpdateRole() const;
    void setFirmwareUpdateRole(const QString &firmware_update_role);
    bool is_firmware_update_role_Set() const;
    bool is_firmware_update_role_Valid() const;

    qint32 getRedundancyPercent() const;
    void setRedundancyPercent(const qint32 &redundancy_percent);
    bool is_redundancy_percent_Set() const;
    bool is_redundancy_percent_Valid() const;

    qint32 getFragmentSizeBytes() const;
    void setFragmentSizeBytes(const qint32 &fragment_size_bytes);
    bool is_fragment_size_bytes_Set() const;
    bool is_fragment_size_bytes_Valid() const;

    qint32 getFragmentIntervalMs() const;
    void setFragmentIntervalMs(const qint32 &fragment_interval_ms);
    bool is_fragment_interval_ms_Set() const;
    bool is_fragment_interval_ms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateFuotaTask_request_LoRaWAN m_lo_ra_wan;
    bool m_lo_ra_wan_isSet;
    bool m_lo_ra_wan_isValid;

    QString m_firmware_update_image;
    bool m_firmware_update_image_isSet;
    bool m_firmware_update_image_isValid;

    QString m_firmware_update_role;
    bool m_firmware_update_role_isSet;
    bool m_firmware_update_role_isValid;

    qint32 m_redundancy_percent;
    bool m_redundancy_percent_isSet;
    bool m_redundancy_percent_isValid;

    qint32 m_fragment_size_bytes;
    bool m_fragment_size_bytes_isSet;
    bool m_fragment_size_bytes_isValid;

    qint32 m_fragment_interval_ms;
    bool m_fragment_interval_ms_isSet;
    bool m_fragment_interval_ms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateFuotaTask_request)

#endif // OAIUpdateFuotaTask_request_H
