/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionStatusEventConfiguration.h
 *
 * Connection status event configuration object for enabling or disabling topic.
 */

#ifndef OAIConnectionStatusEventConfiguration_H
#define OAIConnectionStatusEventConfiguration_H

#include <QJsonObject>

#include "OAIEventNotificationTopicStatus.h"
#include "OAIUpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN;

class OAIConnectionStatusEventConfiguration : public OAIObject {
public:
    OAIConnectionStatusEventConfiguration();
    OAIConnectionStatusEventConfiguration(QString json);
    ~OAIConnectionStatusEventConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN getLoRaWan() const;
    void setLoRaWan(const OAIUpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN &lo_ra_wan);
    bool is_lo_ra_wan_Set() const;
    bool is_lo_ra_wan_Valid() const;

    OAIEventNotificationTopicStatus getWirelessGatewayIdEventTopic() const;
    void setWirelessGatewayIdEventTopic(const OAIEventNotificationTopicStatus &wireless_gateway_id_event_topic);
    bool is_wireless_gateway_id_event_topic_Set() const;
    bool is_wireless_gateway_id_event_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN m_lo_ra_wan;
    bool m_lo_ra_wan_isSet;
    bool m_lo_ra_wan_isValid;

    OAIEventNotificationTopicStatus m_wireless_gateway_id_event_topic;
    bool m_wireless_gateway_id_event_topic_isSet;
    bool m_wireless_gateway_id_event_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionStatusEventConfiguration)

#endif // OAIConnectionStatusEventConfiguration_H
