/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventConfigurationItem.h
 *
 * Event configuration object for a single resource.
 */

#ifndef OAIEventConfigurationItem_H
#define OAIEventConfigurationItem_H

#include <QJsonObject>

#include "OAIEventNotificationItemConfigurations.h"
#include "OAIEventNotificationPartnerType.h"
#include "OAIIdentifierType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventNotificationItemConfigurations;

class OAIEventConfigurationItem : public OAIObject {
public:
    OAIEventConfigurationItem();
    OAIEventConfigurationItem(QString json);
    ~OAIEventConfigurationItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    OAIIdentifierType getIdentifierType() const;
    void setIdentifierType(const OAIIdentifierType &identifier_type);
    bool is_identifier_type_Set() const;
    bool is_identifier_type_Valid() const;

    OAIEventNotificationPartnerType getPartnerType() const;
    void setPartnerType(const OAIEventNotificationPartnerType &partner_type);
    bool is_partner_type_Set() const;
    bool is_partner_type_Valid() const;

    OAIEventNotificationItemConfigurations getEvents() const;
    void setEvents(const OAIEventNotificationItemConfigurations &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    OAIIdentifierType m_identifier_type;
    bool m_identifier_type_isSet;
    bool m_identifier_type_isValid;

    OAIEventNotificationPartnerType m_partner_type;
    bool m_partner_type_isSet;
    bool m_partner_type_isValid;

    OAIEventNotificationItemConfigurations m_events;
    bool m_events_isSet;
    bool m_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventConfigurationItem)

#endif // OAIEventConfigurationItem_H
