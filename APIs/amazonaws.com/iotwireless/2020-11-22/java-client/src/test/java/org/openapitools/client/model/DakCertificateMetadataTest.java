/*
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DakCertificateMetadata
 */
public class DakCertificateMetadataTest {
    private final DakCertificateMetadata model = new DakCertificateMetadata();

    /**
     * Model tests for DakCertificateMetadata
     */
    @Test
    public void testDakCertificateMetadata() {
        // TODO: test DakCertificateMetadata
    }

    /**
     * Test the property 'certificateId'
     */
    @Test
    public void certificateIdTest() {
        // TODO: test certificateId
    }

    /**
     * Test the property 'maxAllowedSignature'
     */
    @Test
    public void maxAllowedSignatureTest() {
        // TODO: test maxAllowedSignature
    }

    /**
     * Test the property 'factorySupport'
     */
    @Test
    public void factorySupportTest() {
        // TODO: test factorySupport
    }

    /**
     * Test the property 'apId'
     */
    @Test
    public void apIdTest() {
        // TODO: test apId
    }

    /**
     * Test the property 'deviceTypeId'
     */
    @Test
    public void deviceTypeIdTest() {
        // TODO: test deviceTypeId
    }

}
