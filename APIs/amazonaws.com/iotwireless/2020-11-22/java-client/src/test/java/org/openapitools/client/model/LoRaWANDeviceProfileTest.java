/*
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LoRaWANDeviceProfile
 */
public class LoRaWANDeviceProfileTest {
    private final LoRaWANDeviceProfile model = new LoRaWANDeviceProfile();

    /**
     * Model tests for LoRaWANDeviceProfile
     */
    @Test
    public void testLoRaWANDeviceProfile() {
        // TODO: test LoRaWANDeviceProfile
    }

    /**
     * Test the property 'supportsClassB'
     */
    @Test
    public void supportsClassBTest() {
        // TODO: test supportsClassB
    }

    /**
     * Test the property 'classBTimeout'
     */
    @Test
    public void classBTimeoutTest() {
        // TODO: test classBTimeout
    }

    /**
     * Test the property 'pingSlotPeriod'
     */
    @Test
    public void pingSlotPeriodTest() {
        // TODO: test pingSlotPeriod
    }

    /**
     * Test the property 'pingSlotDr'
     */
    @Test
    public void pingSlotDrTest() {
        // TODO: test pingSlotDr
    }

    /**
     * Test the property 'pingSlotFreq'
     */
    @Test
    public void pingSlotFreqTest() {
        // TODO: test pingSlotFreq
    }

    /**
     * Test the property 'supportsClassC'
     */
    @Test
    public void supportsClassCTest() {
        // TODO: test supportsClassC
    }

    /**
     * Test the property 'classCTimeout'
     */
    @Test
    public void classCTimeoutTest() {
        // TODO: test classCTimeout
    }

    /**
     * Test the property 'macVersion'
     */
    @Test
    public void macVersionTest() {
        // TODO: test macVersion
    }

    /**
     * Test the property 'regParamsRevision'
     */
    @Test
    public void regParamsRevisionTest() {
        // TODO: test regParamsRevision
    }

    /**
     * Test the property 'rxDelay1'
     */
    @Test
    public void rxDelay1Test() {
        // TODO: test rxDelay1
    }

    /**
     * Test the property 'rxDrOffset1'
     */
    @Test
    public void rxDrOffset1Test() {
        // TODO: test rxDrOffset1
    }

    /**
     * Test the property 'rxDataRate2'
     */
    @Test
    public void rxDataRate2Test() {
        // TODO: test rxDataRate2
    }

    /**
     * Test the property 'rxFreq2'
     */
    @Test
    public void rxFreq2Test() {
        // TODO: test rxFreq2
    }

    /**
     * Test the property 'factoryPresetFreqsList'
     */
    @Test
    public void factoryPresetFreqsListTest() {
        // TODO: test factoryPresetFreqsList
    }

    /**
     * Test the property 'maxEirp'
     */
    @Test
    public void maxEirpTest() {
        // TODO: test maxEirp
    }

    /**
     * Test the property 'maxDutyCycle'
     */
    @Test
    public void maxDutyCycleTest() {
        // TODO: test maxDutyCycle
    }

    /**
     * Test the property 'rfRegion'
     */
    @Test
    public void rfRegionTest() {
        // TODO: test rfRegion
    }

    /**
     * Test the property 'supportsJoin'
     */
    @Test
    public void supportsJoinTest() {
        // TODO: test supportsJoin
    }

    /**
     * Test the property 'supports32BitFCnt'
     */
    @Test
    public void supports32BitFCntTest() {
        // TODO: test supports32BitFCnt
    }

}
