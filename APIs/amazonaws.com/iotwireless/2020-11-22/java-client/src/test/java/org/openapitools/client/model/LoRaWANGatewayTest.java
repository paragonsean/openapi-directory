/*
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateWirelessGatewayRequestLoRaWANBeaconing;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LoRaWANGateway
 */
public class LoRaWANGatewayTest {
    private final LoRaWANGateway model = new LoRaWANGateway();

    /**
     * Model tests for LoRaWANGateway
     */
    @Test
    public void testLoRaWANGateway() {
        // TODO: test LoRaWANGateway
    }

    /**
     * Test the property 'gatewayEui'
     */
    @Test
    public void gatewayEuiTest() {
        // TODO: test gatewayEui
    }

    /**
     * Test the property 'rfRegion'
     */
    @Test
    public void rfRegionTest() {
        // TODO: test rfRegion
    }

    /**
     * Test the property 'joinEuiFilters'
     */
    @Test
    public void joinEuiFiltersTest() {
        // TODO: test joinEuiFilters
    }

    /**
     * Test the property 'netIdFilters'
     */
    @Test
    public void netIdFiltersTest() {
        // TODO: test netIdFilters
    }

    /**
     * Test the property 'subBands'
     */
    @Test
    public void subBandsTest() {
        // TODO: test subBands
    }

    /**
     * Test the property 'beaconing'
     */
    @Test
    public void beaconingTest() {
        // TODO: test beaconing
    }

    /**
     * Test the property 'maxEirp'
     */
    @Test
    public void maxEirpTest() {
        // TODO: test maxEirp
    }

}
