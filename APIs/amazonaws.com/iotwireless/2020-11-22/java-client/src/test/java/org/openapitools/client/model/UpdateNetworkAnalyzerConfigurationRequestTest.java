/*
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateNetworkAnalyzerConfigurationRequestTraceContent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateNetworkAnalyzerConfigurationRequest
 */
public class UpdateNetworkAnalyzerConfigurationRequestTest {
    private final UpdateNetworkAnalyzerConfigurationRequest model = new UpdateNetworkAnalyzerConfigurationRequest();

    /**
     * Model tests for UpdateNetworkAnalyzerConfigurationRequest
     */
    @Test
    public void testUpdateNetworkAnalyzerConfigurationRequest() {
        // TODO: test UpdateNetworkAnalyzerConfigurationRequest
    }

    /**
     * Test the property 'traceContent'
     */
    @Test
    public void traceContentTest() {
        // TODO: test traceContent
    }

    /**
     * Test the property 'wirelessDevicesToAdd'
     */
    @Test
    public void wirelessDevicesToAddTest() {
        // TODO: test wirelessDevicesToAdd
    }

    /**
     * Test the property 'wirelessDevicesToRemove'
     */
    @Test
    public void wirelessDevicesToRemoveTest() {
        // TODO: test wirelessDevicesToRemove
    }

    /**
     * Test the property 'wirelessGatewaysToAdd'
     */
    @Test
    public void wirelessGatewaysToAddTest() {
        // TODO: test wirelessGatewaysToAdd
    }

    /**
     * Test the property 'wirelessGatewaysToRemove'
     */
    @Test
    public void wirelessGatewaysToRemoveTest() {
        // TODO: test wirelessGatewaysToRemove
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'multicastGroupsToAdd'
     */
    @Test
    public void multicastGroupsToAddTest() {
        // TODO: test multicastGroupsToAdd
    }

    /**
     * Test the property 'multicastGroupsToRemove'
     */
    @Test
    public void multicastGroupsToRemoveTest() {
        // TODO: test multicastGroupsToRemove
    }

}
