/*
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateWirelessGatewayRequestLoRaWANBeaconing;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetWirelessGatewayResponseLoRaWAN
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:05:29.819634-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetWirelessGatewayResponseLoRaWAN {
  public static final String SERIALIZED_NAME_GATEWAY_EUI = "GatewayEui";
  @SerializedName(SERIALIZED_NAME_GATEWAY_EUI)
  private String gatewayEui;

  public static final String SERIALIZED_NAME_RF_REGION = "RfRegion";
  @SerializedName(SERIALIZED_NAME_RF_REGION)
  private String rfRegion;

  public static final String SERIALIZED_NAME_JOIN_EUI_FILTERS = "JoinEuiFilters";
  @SerializedName(SERIALIZED_NAME_JOIN_EUI_FILTERS)
  private List<List<String>> joinEuiFilters = new ArrayList<>();

  public static final String SERIALIZED_NAME_NET_ID_FILTERS = "NetIdFilters";
  @SerializedName(SERIALIZED_NAME_NET_ID_FILTERS)
  private List<String> netIdFilters = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUB_BANDS = "SubBands";
  @SerializedName(SERIALIZED_NAME_SUB_BANDS)
  private List<Integer> subBands = new ArrayList<>();

  public static final String SERIALIZED_NAME_BEACONING = "Beaconing";
  @SerializedName(SERIALIZED_NAME_BEACONING)
  private CreateWirelessGatewayRequestLoRaWANBeaconing beaconing;

  public static final String SERIALIZED_NAME_MAX_EIRP = "MaxEirp";
  @SerializedName(SERIALIZED_NAME_MAX_EIRP)
  private Float maxEirp;

  public GetWirelessGatewayResponseLoRaWAN() {
  }

  public GetWirelessGatewayResponseLoRaWAN gatewayEui(String gatewayEui) {
    this.gatewayEui = gatewayEui;
    return this;
  }

  /**
   * Get gatewayEui
   * @return gatewayEui
   */
  @javax.annotation.Nullable
  public String getGatewayEui() {
    return gatewayEui;
  }

  public void setGatewayEui(String gatewayEui) {
    this.gatewayEui = gatewayEui;
  }


  public GetWirelessGatewayResponseLoRaWAN rfRegion(String rfRegion) {
    this.rfRegion = rfRegion;
    return this;
  }

  /**
   * Get rfRegion
   * @return rfRegion
   */
  @javax.annotation.Nullable
  public String getRfRegion() {
    return rfRegion;
  }

  public void setRfRegion(String rfRegion) {
    this.rfRegion = rfRegion;
  }


  public GetWirelessGatewayResponseLoRaWAN joinEuiFilters(List<List<String>> joinEuiFilters) {
    this.joinEuiFilters = joinEuiFilters;
    return this;
  }

  public GetWirelessGatewayResponseLoRaWAN addJoinEuiFiltersItem(List<String> joinEuiFiltersItem) {
    if (this.joinEuiFilters == null) {
      this.joinEuiFilters = new ArrayList<>();
    }
    this.joinEuiFilters.add(joinEuiFiltersItem);
    return this;
  }

  /**
   * A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
   * @return joinEuiFilters
   */
  @javax.annotation.Nullable
  public List<List<String>> getJoinEuiFilters() {
    return joinEuiFilters;
  }

  public void setJoinEuiFilters(List<List<String>> joinEuiFilters) {
    this.joinEuiFilters = joinEuiFilters;
  }


  public GetWirelessGatewayResponseLoRaWAN netIdFilters(List<String> netIdFilters) {
    this.netIdFilters = netIdFilters;
    return this;
  }

  public GetWirelessGatewayResponseLoRaWAN addNetIdFiltersItem(String netIdFiltersItem) {
    if (this.netIdFilters == null) {
      this.netIdFilters = new ArrayList<>();
    }
    this.netIdFilters.add(netIdFiltersItem);
    return this;
  }

  /**
   * A list of NetId values that are used by LoRa gateways to filter the uplink frames.
   * @return netIdFilters
   */
  @javax.annotation.Nullable
  public List<String> getNetIdFilters() {
    return netIdFilters;
  }

  public void setNetIdFilters(List<String> netIdFilters) {
    this.netIdFilters = netIdFilters;
  }


  public GetWirelessGatewayResponseLoRaWAN subBands(List<Integer> subBands) {
    this.subBands = subBands;
    return this;
  }

  public GetWirelessGatewayResponseLoRaWAN addSubBandsItem(Integer subBandsItem) {
    if (this.subBands == null) {
      this.subBands = new ArrayList<>();
    }
    this.subBands.add(subBandsItem);
    return this;
  }

  /**
   * A list of integer indicating which sub bands are supported by LoRa gateway.
   * @return subBands
   */
  @javax.annotation.Nullable
  public List<Integer> getSubBands() {
    return subBands;
  }

  public void setSubBands(List<Integer> subBands) {
    this.subBands = subBands;
  }


  public GetWirelessGatewayResponseLoRaWAN beaconing(CreateWirelessGatewayRequestLoRaWANBeaconing beaconing) {
    this.beaconing = beaconing;
    return this;
  }

  /**
   * Get beaconing
   * @return beaconing
   */
  @javax.annotation.Nullable
  public CreateWirelessGatewayRequestLoRaWANBeaconing getBeaconing() {
    return beaconing;
  }

  public void setBeaconing(CreateWirelessGatewayRequestLoRaWANBeaconing beaconing) {
    this.beaconing = beaconing;
  }


  public GetWirelessGatewayResponseLoRaWAN maxEirp(Float maxEirp) {
    this.maxEirp = maxEirp;
    return this;
  }

  /**
   * Get maxEirp
   * @return maxEirp
   */
  @javax.annotation.Nullable
  public Float getMaxEirp() {
    return maxEirp;
  }

  public void setMaxEirp(Float maxEirp) {
    this.maxEirp = maxEirp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetWirelessGatewayResponseLoRaWAN getWirelessGatewayResponseLoRaWAN = (GetWirelessGatewayResponseLoRaWAN) o;
    return Objects.equals(this.gatewayEui, getWirelessGatewayResponseLoRaWAN.gatewayEui) &&
        Objects.equals(this.rfRegion, getWirelessGatewayResponseLoRaWAN.rfRegion) &&
        Objects.equals(this.joinEuiFilters, getWirelessGatewayResponseLoRaWAN.joinEuiFilters) &&
        Objects.equals(this.netIdFilters, getWirelessGatewayResponseLoRaWAN.netIdFilters) &&
        Objects.equals(this.subBands, getWirelessGatewayResponseLoRaWAN.subBands) &&
        Objects.equals(this.beaconing, getWirelessGatewayResponseLoRaWAN.beaconing) &&
        Objects.equals(this.maxEirp, getWirelessGatewayResponseLoRaWAN.maxEirp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gatewayEui, rfRegion, joinEuiFilters, netIdFilters, subBands, beaconing, maxEirp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetWirelessGatewayResponseLoRaWAN {\n");
    sb.append("    gatewayEui: ").append(toIndentedString(gatewayEui)).append("\n");
    sb.append("    rfRegion: ").append(toIndentedString(rfRegion)).append("\n");
    sb.append("    joinEuiFilters: ").append(toIndentedString(joinEuiFilters)).append("\n");
    sb.append("    netIdFilters: ").append(toIndentedString(netIdFilters)).append("\n");
    sb.append("    subBands: ").append(toIndentedString(subBands)).append("\n");
    sb.append("    beaconing: ").append(toIndentedString(beaconing)).append("\n");
    sb.append("    maxEirp: ").append(toIndentedString(maxEirp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GatewayEui");
    openapiFields.add("RfRegion");
    openapiFields.add("JoinEuiFilters");
    openapiFields.add("NetIdFilters");
    openapiFields.add("SubBands");
    openapiFields.add("Beaconing");
    openapiFields.add("MaxEirp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetWirelessGatewayResponseLoRaWAN
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetWirelessGatewayResponseLoRaWAN.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetWirelessGatewayResponseLoRaWAN is not found in the empty JSON string", GetWirelessGatewayResponseLoRaWAN.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetWirelessGatewayResponseLoRaWAN.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetWirelessGatewayResponseLoRaWAN` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `GatewayEui`
      if (jsonObj.get("GatewayEui") != null && !jsonObj.get("GatewayEui").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayEui"));
      }
      // validate the optional field `RfRegion`
      if (jsonObj.get("RfRegion") != null && !jsonObj.get("RfRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RfRegion"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("JoinEuiFilters") != null && !jsonObj.get("JoinEuiFilters").isJsonNull() && !jsonObj.get("JoinEuiFilters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `JoinEuiFilters` to be an array in the JSON string but got `%s`", jsonObj.get("JoinEuiFilters").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("NetIdFilters") != null && !jsonObj.get("NetIdFilters").isJsonNull() && !jsonObj.get("NetIdFilters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `NetIdFilters` to be an array in the JSON string but got `%s`", jsonObj.get("NetIdFilters").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SubBands") != null && !jsonObj.get("SubBands").isJsonNull() && !jsonObj.get("SubBands").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SubBands` to be an array in the JSON string but got `%s`", jsonObj.get("SubBands").toString()));
      }
      // validate the optional field `Beaconing`
      if (jsonObj.get("Beaconing") != null && !jsonObj.get("Beaconing").isJsonNull()) {
        CreateWirelessGatewayRequestLoRaWANBeaconing.validateJsonElement(jsonObj.get("Beaconing"));
      }
      // validate the optional field `MaxEirp`
      if (jsonObj.get("MaxEirp") != null && !jsonObj.get("MaxEirp").isJsonNull()) {
        Float.validateJsonElement(jsonObj.get("MaxEirp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetWirelessGatewayResponseLoRaWAN.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetWirelessGatewayResponseLoRaWAN' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetWirelessGatewayResponseLoRaWAN> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetWirelessGatewayResponseLoRaWAN.class));

       return (TypeAdapter<T>) new TypeAdapter<GetWirelessGatewayResponseLoRaWAN>() {
           @Override
           public void write(JsonWriter out, GetWirelessGatewayResponseLoRaWAN value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetWirelessGatewayResponseLoRaWAN read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetWirelessGatewayResponseLoRaWAN given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetWirelessGatewayResponseLoRaWAN
   * @throws IOException if the JSON string is invalid with respect to GetWirelessGatewayResponseLoRaWAN
   */
  public static GetWirelessGatewayResponseLoRaWAN fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetWirelessGatewayResponseLoRaWAN.class);
  }

  /**
   * Convert an instance of GetWirelessGatewayResponseLoRaWAN to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

