openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS IoT Wireless provides bi-directional communication between\
    \ internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN\
    \ and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices\
    \ use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate\
    \ with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and\
    \ delete operations for your wireless devices, gateways, destinations, and profiles.\
    \ After onboarding your devices, you can use the API operations to set log levels\
    \ and monitor your devices with CloudWatch.</p> <p>You can also use the API operations\
    \ to create multicast groups and schedule a multicast session for sending a downlink\
    \ message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA)\
    \ API operations, you can create a FUOTA task and schedule a session to update\
    \ the firmware of individual devices or an entire group of devices in a multicast\
    \ group.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Wireless
  version: 2020-11-22
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iotwireless
  x-aws-signingName: iotwireless
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotwireless-2020-11-22.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotwireless/
servers:
- description: The AWS IoT Wireless multi-region endpoint
  url: "http://api.iotwireless.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Wireless multi-region endpoint
  url: "https://api.iotwireless.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
  url: "http://api.iotwireless.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
  url: "https://api.iotwireless.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /partner-accounts:
    get:
      description: Lists the partner accounts associated with your AWS account.
      operationId: ListPartnerAccounts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartnerAccountsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Associates a partner account with your AWS account.
      operationId: AssociateAwsAccountWithPartnerAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccount_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /fuota-tasks/{Id}/multicast-group:
    put:
      description: Associate a multicast group with a FUOTA task.
      operationId: AssociateMulticastGroupWithFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateMulticastGroupWithFuotaTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateMulticastGroupWithFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /fuota-tasks/{Id}/wireless-device:
    put:
      description: Associate a wireless device with a FUOTA task.
      operationId: AssociateWirelessDeviceWithFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWirelessDeviceWithFuotaTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessDeviceWithFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /multicast-groups/{Id}/wireless-device:
    put:
      description: Associates a wireless device with a multicast group.
      operationId: AssociateWirelessDeviceWithMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWirelessDeviceWithFuotaTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessDeviceWithMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-devices/{Id}/thing:
    delete:
      description: Disassociates a wireless device from its currently associated thing.
      operationId: DisassociateWirelessDeviceFromThing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessDeviceFromThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    put:
      description: Associates a wireless device with a thing.
      operationId: AssociateWirelessDeviceWithThing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWirelessDeviceWithThing_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessDeviceWithThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateways/{Id}/certificate:
    delete:
      description: Disassociates a wireless gateway from its currently associated
        certificate.
      operationId: DisassociateWirelessGatewayFromCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessGatewayFromCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets the ID of the certificate that is currently associated with
        a wireless gateway.
      operationId: GetWirelessGatewayCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    put:
      description: Associates a wireless gateway with a certificate.
      operationId: AssociateWirelessGatewayWithCertificate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWirelessGatewayWithCertificate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessGatewayWithCertificateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateways/{Id}/thing:
    delete:
      description: Disassociates a wireless gateway from its currently associated
        thing.
      operationId: DisassociateWirelessGatewayFromThing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessGatewayFromThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    put:
      description: Associates a wireless gateway with a thing.
      operationId: AssociateWirelessGatewayWithThing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWirelessGatewayWithThing_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWirelessGatewayWithThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /multicast-groups/{Id}/session:
    delete:
      description: Cancels an existing multicast group session.
      operationId: CancelMulticastGroupSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelMulticastGroupSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a multicast group session.
      operationId: GetMulticastGroupSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMulticastGroupSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    put:
      description: Starts a multicast group session.
      operationId: StartMulticastGroupSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMulticastGroupSession_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMulticastGroupSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /destinations:
    get:
      description: Lists the destinations registered to your AWS account.
      operationId: ListDestinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a new destination that maps a device message to an AWS
        IoT rule.
      operationId: CreateDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestination_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /device-profiles:
    get:
      description: Lists the device profiles registered to your AWS account.
      operationId: ListDeviceProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "A filter to list only device profiles that use this type, which\
          \ can be <code>LoRaWAN</code> or <code>Sidewalk</code>."
        explode: true
        in: query
        name: deviceProfileType
        required: false
        schema:
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a new device profile.
      operationId: CreateDeviceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceProfile_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeviceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /fuota-tasks:
    get:
      description: Lists the FUOTA tasks registered to your AWS account.
      operationId: ListFuotaTasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFuotaTasksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a FUOTA task.
      operationId: CreateFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFuotaTask_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /multicast-groups:
    get:
      description: Lists the multicast groups registered to your AWS account.
      operationId: ListMulticastGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMulticastGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a multicast group.
      operationId: CreateMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMulticastGroup_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /network-analyzer-configurations:
    get:
      description: Lists the network analyzer configurations.
      operationId: ListNetworkAnalyzerConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkAnalyzerConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a new network analyzer configuration.
      operationId: CreateNetworkAnalyzerConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkAnalyzerConfiguration_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkAnalyzerConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-profiles:
    get:
      description: Lists the service profiles registered to your AWS account.
      operationId: ListServiceProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a new service profile.
      operationId: CreateServiceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceProfile_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-devices:
    get:
      description: Lists the wireless devices registered to your AWS account.
      operationId: ListWirelessDevices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: A filter to list only the wireless devices that use this destination.
        explode: true
        in: query
        name: destinationName
        required: false
        schema:
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: form
      - description: A filter to list only the wireless devices that use this device
          profile.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          maxLength: 256
          type: string
        style: form
      - description: A filter to list only the wireless devices that use this service
          profile.
        explode: true
        in: query
        name: serviceProfileId
        required: false
        schema:
          maxLength: 256
          type: string
        style: form
      - description: A filter to list only the wireless devices that use this wireless
          device type.
        explode: true
        in: query
        name: wirelessDeviceType
        required: false
        schema:
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: fuotaTaskId
        required: false
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: multicastGroupId
        required: false
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Provisions a wireless device.
      operationId: CreateWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWirelessDevice_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateways:
    get:
      description: Lists the wireless gateways registered to your AWS account.
      operationId: ListWirelessGateways
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessGatewaysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Provisions a wireless gateway.
      operationId: CreateWirelessGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWirelessGateway_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateways/{Id}/tasks:
    delete:
      description: Deletes a wireless gateway task.
      operationId: DeleteWirelessGatewayTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a wireless gateway task.
      operationId: GetWirelessGatewayTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a task for a wireless gateway.
      operationId: CreateWirelessGatewayTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWirelessGatewayTask_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateway-task-definitions:
    get:
      description: List the wireless gateway tasks definitions registered to your
        AWS account.
      operationId: ListWirelessGatewayTaskDefinitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: A filter to list only the wireless gateway task definitions that
          use this task definition type.
        explode: true
        in: query
        name: taskDefinitionType
        required: false
        schema:
          enum:
          - UPDATE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessGatewayTaskDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a gateway task definition.
      operationId: CreateWirelessGatewayTaskDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinition_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /destinations/{Name}:
    delete:
      description: Deletes a destination.
      operationId: DeleteDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the resource to delete.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a destination.
      operationId: GetDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the resource to get.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a destination.
      operationId: UpdateDestination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The new name of the resource.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestination_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /device-profiles/{Id}:
    delete:
      description: Deletes a device profile.
      operationId: DeleteDeviceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a device profile.
      operationId: GetDeviceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /fuota-tasks/{Id}:
    delete:
      description: Deletes a FUOTA task.
      operationId: DeleteFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a FUOTA task.
      operationId: GetFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a FUOTA task.
      operationId: UpdateFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFuotaTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Starts a FUOTA task.
      operationId: StartFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFuotaTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /multicast-groups/{Id}:
    delete:
      description: Deletes a multicast group if it is not in use by a fuota task.
      operationId: DeleteMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a multicast group.
      operationId: GetMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a multicast group session.
      operationId: UpdateMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMulticastGroup_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /network-analyzer-configurations/{ConfigurationName}:
    delete:
      description: Deletes a network analyzer configuration.
      operationId: DeleteNetworkAnalyzerConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ConfigurationName
        required: true
        schema:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkAnalyzerConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Get network analyzer configuration.
      operationId: GetNetworkAnalyzerConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ConfigurationName
        required: true
        schema:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkAnalyzerConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Update network analyzer configuration.
      operationId: UpdateNetworkAnalyzerConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ConfigurationName
        required: true
        schema:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkAnalyzerConfiguration_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkAnalyzerConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-devices/{Id}/data#messageId:
    delete:
      description: Remove queued messages from the downlink queue.
      operationId: DeleteQueuedMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a given wireless device for which downlink messages
          will be deleted.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      - description: "If message ID is <code>\"*\"</code>, it cleares the entire downlink\
          \ queue for a given device, specified by the wireless device ID. Otherwise,\
          \ the downlink message with the specified message ID will be deleted."
        explode: true
        in: query
        name: messageId
        required: true
        schema:
          type: string
        style: form
      - description: "The wireless device type, which can be either Sidewalk or LoRaWAN."
        explode: true
        in: query
        name: WirelessDeviceType
        required: false
        schema:
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteQueuedMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /service-profiles/{Id}:
    delete:
      description: Deletes a service profile.
      operationId: DeleteServiceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServiceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a service profile.
      operationId: GetServiceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-devices/{Id}:
    delete:
      description: Deletes a wireless device.
      operationId: DeleteWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a wireless device.
      operationId: UpdateWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWirelessDevice_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless_device_import_task/{Id}:
    delete:
      description: Delete an import task.
      operationId: DeleteWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the import task to be deleted.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Get information about an import task and count of device onboarding
        summary information for the import task.
      operationId: GetWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the import task for which information is requested.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Update an import task to add more devices to the task.
      operationId: UpdateWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the import task to be updated.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWirelessDeviceImportTask_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateways/{Id}:
    delete:
      description: Deletes a wireless gateway.
      operationId: DeleteWirelessGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a wireless gateway.
      operationId: UpdateWirelessGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to update.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWirelessGateway_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWirelessGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-gateway-task-definitions/{Id}:
    delete:
      description: Deletes a wireless gateway task definition. Deleting this task
        definition does not affect tasks that are currently in progress.
      operationId: DeleteWirelessGatewayTaskDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to delete.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 36
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWirelessGatewayTaskDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Gets information about a wireless gateway task definition.
      operationId: GetWirelessGatewayTaskDefinition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 36
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayTaskDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-devices/{Identifier}/deregister:
    patch:
      description: Deregister a wireless device from AWS IoT Wireless.
      operationId: DeregisterWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the wireless device to deregister from AWS
          IoT Wireless.
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: "The type of wireless device to deregister from AWS IoT Wireless,\
          \ which can be <code>LoRaWAN</code> or <code>Sidewalk</code>."
        explode: true
        in: query
        name: WirelessDeviceType
        required: false
        schema:
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /partner-accounts/{PartnerAccountId}#partnerType:
    delete:
      description: "Disassociates your AWS account from a partner account. If <code>PartnerAccountId</code>\
        \ and <code>PartnerType</code> are <code>null</code>, disassociates your AWS\
        \ account from all partner accounts."
      operationId: DisassociateAwsAccountFromPartnerAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The partner account ID to disassociate from the AWS account.
        explode: false
        in: path
        name: PartnerAccountId
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: The partner type.
        explode: true
        in: query
        name: partnerType
        required: true
        schema:
          enum:
          - Sidewalk
          type: string
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAwsAccountFromPartnerAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: "Gets information about a partner account. If <code>PartnerAccountId</code>\
        \ and <code>PartnerType</code> are <code>null</code>, returns all partner\
        \ accounts."
      operationId: GetPartnerAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The partner account ID to disassociate from the AWS account.
        explode: false
        in: path
        name: PartnerAccountId
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: The partner type.
        explode: true
        in: query
        name: partnerType
        required: true
        schema:
          enum:
          - Sidewalk
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPartnerAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    patch:
      description: Updates properties of a partner account.
      operationId: UpdatePartnerAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the partner account to update.
        explode: false
        in: path
        name: PartnerAccountId
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: The partner type.
        explode: true
        in: query
        name: partnerType
        required: true
        schema:
          enum:
          - Sidewalk
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartnerAccount_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePartnerAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /fuota-tasks/{Id}/multicast-groups/{MulticastGroupId}:
    delete:
      description: Disassociates a multicast group from a fuota task.
      operationId: DisassociateMulticastGroupFromFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: MulticastGroupId
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateMulticastGroupFromFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /fuota-tasks/{Id}/wireless-devices/{WirelessDeviceId}:
    delete:
      description: Disassociates a wireless device from a FUOTA task.
      operationId: DisassociateWirelessDeviceFromFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: WirelessDeviceId
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessDeviceFromFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /multicast-groups/{Id}/wireless-devices/{WirelessDeviceId}:
    delete:
      description: Disassociates a wireless device from a multicast group.
      operationId: DisassociateWirelessDeviceFromMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: WirelessDeviceId
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWirelessDeviceFromMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /event-configurations-resource-types:
    get:
      description: Get the event configuration based on resource types.
      operationId: GetEventConfigurationByResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Update the event configuration based on resource types.
      operationId: UpdateEventConfigurationByResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /log-levels:
    delete:
      description: Removes the log-level overrides for all resources; both wireless
        devices and wireless gateways.
      operationId: ResetAllResourceLogLevels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetAllResourceLogLevelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: "Returns current default log levels or log levels by resource types.\
        \ Based on resource types, log levels can be for wireless device log options\
        \ or wireless gateway log options."
      operationId: GetLogLevelsByResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogLevelsByResourceTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: "Set default log level, or log levels by resource types. This can\
        \ be for wireless device log options or wireless gateways log options and\
        \ is used to control the log messages that'll be displayed in CloudWatch."
      operationId: UpdateLogLevelsByResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLogLevelsByResourceTypes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLogLevelsByResourceTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /positions/{ResourceIdentifier}#resourceType:
    get:
      deprecated: true
      description: <p>Get the position information for a given resource.</p> <important>
        <p>This action is no longer supported. Calls to retrieve the position information
        should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html">GetResourcePosition</a>
        API operation instead.</p> </important>
      operationId: GetPosition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier used to retrieve the position information.
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: Resource type of the resource for which position information
          is retrieved.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      deprecated: true
      description: <p>Update the position information of a resource.</p> <important>
        <p>This action is no longer supported. Calls to update the position information
        should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html">UpdateResourcePosition</a>
        API operation instead.</p> </important>
      operationId: UpdatePosition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier of the resource for which position is updated.
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: Resource type of the resource for which position is updated.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePosition_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePositionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /position-configurations/{ResourceIdentifier}#resourceType:
    get:
      deprecated: true
      description: <p>Get position configuration for a given resource.</p> <important>
        <p>This action is no longer supported. Calls to retrieve the position configuration
        should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html">GetResourcePosition</a>
        API operation instead.</p> </important>
      operationId: GetPositionConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier used in a position configuration.
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: Resource type of the resource for which position configuration
          is retrieved.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositionConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    put:
      deprecated: true
      description: <p>Put position configuration for a given resource.</p> <important>
        <p>This action is no longer supported. Calls to update the position configuration
        should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html">UpdateResourcePosition</a>
        API operation instead.</p> </important>
      operationId: PutPositionConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier used to update the position configuration.
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: Resource type of the resource for which you want to update the
          position configuration.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPositionConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPositionConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /position-estimate:
    post:
      description: Get estimated position information as a payload in GeoJSON format.
        The payload measurement data is resolved using solvers that are provided by
        third-party vendors.
      operationId: GetPositionEstimate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPositionEstimate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositionEstimateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /event-configurations/{Identifier}#identifierType:
    get:
      description: Get the event configuration for a particular resource identifier.
      operationId: GetResourceEventConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier to opt in for event messaging.
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: Identifier type of the particular resource identifier for event
          configuration.
        explode: true
        in: query
        name: identifierType
        required: true
        schema:
          enum:
          - PartnerAccountId
          - DevEui
          - GatewayEui
          - WirelessDeviceId
          - WirelessGatewayId
          type: string
        style: form
      - description: Partner type of the resource if the identifier type is <code>PartnerAccountId</code>.
        explode: true
        in: query
        name: partnerType
        required: false
        schema:
          enum:
          - Sidewalk
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceEventConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Update the event configuration for a particular resource identifier.
      operationId: UpdateResourceEventConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource identifier to opt in for event messaging.
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: Identifier type of the particular resource identifier for event
          configuration.
        explode: true
        in: query
        name: identifierType
        required: true
        schema:
          enum:
          - PartnerAccountId
          - DevEui
          - GatewayEui
          - WirelessDeviceId
          - WirelessGatewayId
          type: string
        style: form
      - description: 'Partner type of the resource if the identifier type is <code>PartnerAccountId</code> '
        explode: true
        in: query
        name: partnerType
        required: false
        schema:
          enum:
          - Sidewalk
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceEventConfiguration_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceEventConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /log-levels/{ResourceIdentifier}#resourceType:
    delete:
      description: "Removes the log-level override, if any, for a specific resource-ID\
        \ and resource-type. It can be used for a wireless device or a wireless gateway."
      operationId: ResetResourceLogLevel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          description: "The identifier of the resource. For a Wireless Device, it\
            \ is the wireless device ID. For a wireless gateway, it is the wireless\
            \ gateway ID."
          maxLength: 256
          type: string
        style: simple
      - description: "The type of the resource, which can be <code>WirelessDevice</code>\
          \ or <code>WirelessGateway</code>."
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetResourceLogLevelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    get:
      description: "Fetches the log-level override, if any, for a given resource-ID\
        \ and resource-type. It can be used for a wireless device or a wireless gateway."
      operationId: GetResourceLogLevel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          description: "The identifier of the resource. For a Wireless Device, it\
            \ is the wireless device ID. For a wireless gateway, it is the wireless\
            \ gateway ID."
          maxLength: 256
          type: string
        style: simple
      - description: "The type of the resource, which can be <code>WirelessDevice</code>\
          \ or <code>WirelessGateway</code>."
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourceLogLevelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    put:
      description: Sets the log-level override for a resource-ID and resource-type.
        This option can be specified for a wireless gateway or a wireless device.
        A limit of 200 log level override can be set per account.
      operationId: PutResourceLogLevel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          description: "The identifier of the resource. For a Wireless Device, it\
            \ is the wireless device ID. For a wireless gateway, it is the wireless\
            \ gateway ID."
          maxLength: 256
          type: string
        style: simple
      - description: "The type of the resource, which can be <code>WirelessDevice</code>\
          \ or <code>WirelessGateway</code>."
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourceLogLevel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourceLogLevelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /resource-positions/{ResourceIdentifier}#resourceType:
    get:
      description: Get the position information for a given wireless device or a wireless
        gateway resource. The position information uses the <a href="https://gisgeography.com/wgs84-world-geodetic-system/">
        World Geodetic System (WGS84)</a>.
      operationId: GetResourcePosition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the resource for which position information\
          \ is retrieved. It can be the wireless device ID or the wireless gateway\
          \ ID, depending on the resource type."
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: "The type of resource for which position information is retrieved,\
          \ which can be a wireless device or a wireless gateway."
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePositionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    patch:
      description: Update the position information of a given wireless device or a
        wireless gateway resource. The position coordinates are based on the <a href="https://gisgeography.com/wgs84-world-geodetic-system/">
        World Geodetic System (WGS84)</a>.
      operationId: UpdateResourcePosition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the resource for which position information\
          \ is updated. It can be the wireless device ID or the wireless gateway ID,\
          \ depending on the resource type."
        explode: false
        in: path
        name: ResourceIdentifier
        required: true
        schema:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        style: simple
      - description: "The type of resource for which position information is updated,\
          \ which can be a wireless device or a wireless gateway."
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourcePosition_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourcePositionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-endpoint:
    get:
      description: Gets the account-specific endpoint for Configuration and Update
        Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
      operationId: GetServiceEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The service type for which to get endpoint information about.\
          \ Can be <code>CUPS</code> for the Configuration and Update Server endpoint,\
          \ or <code>LNS</code> for the LoRaWAN Network Server endpoint or <code>CLAIM</code>\
          \ for the global endpoint."
        explode: true
        in: query
        name: serviceType
        required: false
        schema:
          enum:
          - CUPS
          - LNS
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-devices/{Identifier}#identifierType:
    get:
      description: Gets information about a wireless device.
      operationId: GetWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the wireless device to get.
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: The type of identifier used in <code>identifier</code>.
        explode: true
        in: query
        name: identifierType
        required: true
        schema:
          enum:
          - WirelessDeviceId
          - DevEui
          - ThingName
          - SidewalkManufacturingSn
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-devices/{Id}/statistics:
    get:
      description: Gets operating information about a wireless device.
      operationId: GetWirelessDeviceStatistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the wireless device for which to get the data.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessDeviceStatisticsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-gateways/{Identifier}#identifierType:
    get:
      description: Gets information about a wireless gateway.
      operationId: GetWirelessGateway
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the wireless gateway to get.
        explode: false
        in: path
        name: Identifier
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      - description: The type of identifier used in <code>identifier</code>.
        explode: true
        in: query
        name: identifierType
        required: true
        schema:
          enum:
          - GatewayEui
          - WirelessGatewayId
          - ThingName
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-gateways/{Id}/firmware-information:
    get:
      description: Gets the firmware version and other information about a wireless
        gateway.
      operationId: GetWirelessGatewayFirmwareInformation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource to get.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayFirmwareInformationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless-gateways/{Id}/statistics:
    get:
      description: Gets operating information about a wireless gateway.
      operationId: GetWirelessGatewayStatistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the wireless gateway for which to get the data.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWirelessGatewayStatisticsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /wireless_device_import_task#id:
    get:
      description: List the Sidewalk devices in an import task and their onboarding
        status.
      operationId: ListDevicesForWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier of the import task for which wireless devices
          are listed.
        explode: true
        in: query
        name: id
        required: true
        schema:
          maxLength: 256
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <code>null</code> to receive\
          \ the first set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The status of the devices in the import task.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - INITIALIZED
          - PENDING
          - ONBOARDED
          - FAILED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesForWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /event-configurations#resourceType:
    get:
      description: List event configurations where at least one event topic has been
        enabled.
      operationId: ListEventConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource type to filter event configurations.
        explode: true
        in: query
        name: resourceType
        required: true
        schema:
          enum:
          - SidewalkAccount
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /fuota-tasks/{Id}/multicast-groups:
    get:
      description: List all multicast groups associated with a fuota task.
      operationId: ListMulticastGroupsByFuotaTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMulticastGroupsByFuotaTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /position-configurations:
    get:
      deprecated: true
      description: "<p>List position configurations for a given resource, such as\
        \ positioning solvers.</p> <important> <p>This action is no longer supported.\
        \ Calls to retrieve position information should use the <a href=\"https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html\"\
        >GetResourcePosition</a> API operation instead.</p> </important>"
      operationId: ListPositionConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Resource type for which position configurations are listed.
        explode: true
        in: query
        name: resourceType
        required: false
        schema:
          enum:
          - WirelessDevice
          - WirelessGateway
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPositionConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /wireless-devices/{Id}/data:
    get:
      description: List queued messages in the downlink queue.
      operationId: ListQueuedMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a given wireless device which the downlink message
          packets are being sent.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <b>null</b> to receive the first\
          \ set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      - description: The maximum number of results to return in this operation.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "The wireless device type, whic can be either Sidewalk or LoRaWAN."
        explode: true
        in: query
        name: WirelessDeviceType
        required: false
        schema:
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueuedMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Sends a decrypted application data frame to a device.
      operationId: SendDataToWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the wireless device to receive the data.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDataToWirelessDevice_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDataToWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags#resourceArn:
    get:
      description: Lists the tags (metadata) you have assigned to the resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which you want to list tags.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Adds a tag to a resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource to add tags to.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless_device_import_tasks:
    get:
      description: List wireless devices that have been added to an import task.
      operationId: ListWirelessDeviceImportTasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          description: The maximum number of results to return in this operation.
          maximum: 250
          minimum: 0
          type: integer
        style: form
      - description: "To retrieve the next set of results, the <code>nextToken</code>\
          \ value from a previous response; otherwise <code>null</code> to receive\
          \ the first set of results."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 4096
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWirelessDeviceImportTasksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /multicast-groups/{Id}/data:
    post:
      description: Sends the specified data to a multicast group.
      operationId: SendDataToMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDataToMulticastGroup_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendDataToMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /multicast-groups/{Id}/bulk:
    patch:
      description: Starts a bulk association of all qualifying wireless devices with
        a multicast group.
      operationId: StartBulkAssociateWirelessDeviceWithMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBulkDisassociateWirelessDeviceFromMulticastGroup_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBulkAssociateWirelessDeviceWithMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: Starts a bulk disassociatin of all qualifying wireless devices
        from a multicast group.
      operationId: StartBulkDisassociateWirelessDeviceFromMulticastGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBulkDisassociateWirelessDeviceFromMulticastGroup_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless_single_device_import_task:
    post:
      description: Start import task for a single wireless device.
      operationId: StartSingleWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSingleWirelessDeviceImportTask_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSingleWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless_device_import_task:
    post:
      description: Start import task for provisioning Sidewalk devices in bulk using
        an S3 CSV file.
      operationId: StartWirelessDeviceImportTask
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWirelessDeviceImportTask_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartWirelessDeviceImportTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /wireless-devices/{Id}/test:
    post:
      description: Simulates a provisioned device by sending an uplink data payload
        of <code>Hello</code>.
      operationId: TestWirelessDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the wireless device to test.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestWirelessDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /tags#resourceArn&tagKeys:
    delete:
      description: Removes one or more tags from a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource to remove tags from.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          type: string
        style: form
      - description: A list of the keys of the tags to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateAwsAccountWithPartnerAccountResponse:
      example:
        Sidewalk:
          AppServerPrivateKey: ""
          AmazonId: ""
        Arn: ""
      properties:
        Sidewalk:
          $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse_Sidewalk'
        Arn:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountArn'
          - description: The Amazon Resource Name of the resource.
      type: object
    AmazonId:
      description: The Sidewalk Amazon ID.
      maxLength: 2048
      type: string
    AppServerPrivateKey:
      format: password
      maxLength: 4096
      minLength: 1
      pattern: "[a-fA-F0-9]{64}"
      type: string
    Tag:
      description: A simple label consisting of a customer-defined key-value pair
      example:
        Value: ""
        Key: ""
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag's key value.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag's value.
      required:
      - Key
      - Value
      type: object
    ValidationException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    ThrottlingException: {}
    ConflictException: {}
    AccessDeniedException: {}
    AssociateMulticastGroupWithFuotaTaskResponse:
      properties: {}
      type: object
    AssociateWirelessDeviceWithFuotaTaskResponse:
      properties: {}
      type: object
    AssociateWirelessDeviceWithMulticastGroupResponse:
      properties: {}
      type: object
    AssociateWirelessDeviceWithThingResponse:
      properties: {}
      type: object
    AssociateWirelessGatewayWithCertificateResponse:
      example:
        IotCertificateId: ""
      properties:
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          - description: The ID of the certificate associated with the wireless gateway.
      type: object
    AssociateWirelessGatewayWithThingResponse:
      properties: {}
      type: object
    CancelMulticastGroupSessionResponse:
      properties: {}
      type: object
    CreateDestinationResponse:
      example:
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: The Amazon Resource Name of the new resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the new resource.
      type: object
    CreateDeviceProfileResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the new device profile.
      type: object
    SupportsClassB:
      type: boolean
    ClassBTimeout:
      maximum: 1000
      minimum: 0
      type: integer
    PingSlotPeriod:
      maximum: 4096
      minimum: 32
      type: integer
    PingSlotDr:
      maximum: 15
      minimum: 0
      type: integer
    PingSlotFreq:
      maximum: 16700000
      minimum: 1000000
      type: integer
    SupportsClassC:
      type: boolean
    ClassCTimeout:
      maximum: 1000
      minimum: 0
      type: integer
    MacVersion:
      maxLength: 64
      type: string
    RegParamsRevision:
      maxLength: 64
      type: string
    RxDelay1:
      maximum: 15
      minimum: 0
      type: integer
    RxDrOffset1:
      maximum: 7
      minimum: 0
      type: integer
    RxDataRate2:
      maximum: 15
      minimum: 0
      type: integer
    RxFreq2:
      maximum: 16700000
      minimum: 1000000
      type: integer
    FactoryPresetFreqsList:
      items:
        $ref: '#/components/schemas/PresetFreq'
      maxItems: 20
      minItems: 0
      type: array
    MaxEirp:
      maximum: 15
      minimum: 0
      type: integer
    MaxDutyCycle:
      maximum: 100
      minimum: 0
      type: integer
    RfRegion:
      description: The frequency band (RFRegion) value.
      maxLength: 64
      type: string
    SupportsJoin:
      type: boolean
    Supports32BitFCnt:
      type: boolean
    CreateFuotaTaskResponse:
      example:
        Id: Id
        Arn: Arn
      properties:
        Arn:
          description: The arn of a FUOTA task.
          maxLength: 128
          type: string
        Id:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
      type: object
    SupportedRfRegion:
      description: Supported RfRegions
      enum:
      - EU868
      - US915
      - AU915
      - AS923-1
      - AS923-2
      - AS923-3
      - AS923-4
      - EU433
      - CN470
      - CN779
      - RU864
      - KR920
      - IN865
      type: string
    CreateMulticastGroupResponse:
      example:
        Id: Id
        Arn: Arn
      properties:
        Arn:
          description: The arn of the multicast group.
          maxLength: 128
          type: string
        Id:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
      type: object
    DlClass:
      description: "DlClass for LoRaWAM, valid values are ClassB and ClassC."
      enum:
      - ClassB
      - ClassC
      maxLength: 256
      type: string
    CreateNetworkAnalyzerConfigurationResponse:
      example:
        Arn: ""
        Name: Name
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          - description: The Amazon Resource Name of the new resource.
        Name:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
      type: object
    WirelessDeviceFrameInfo:
      description: ' <code>FrameInfo</code> of your wireless device resources for
        the trace content. Use FrameInfo to debug the communication between your LoRaWAN
        end devices and the network server.'
      enum:
      - ENABLED
      - DISABLED
      type: string
    LogLevel:
      description: "The log level for a log message. The log levels can be disabled,\
        \ or set to <code>ERROR</code> to display less verbose logs containing only\
        \ error information, or to <code>INFO</code> for more detailed logs."
      enum:
      - INFO
      - ERROR
      - DISABLED
      type: string
    MulticastFrameInfo:
      description: ' <code>FrameInfo</code> of your multicast group resources for
        the trace content. Use FrameInfo to debug the multicast communication between
        your LoRaWAN end devices and the network server.'
      enum:
      - ENABLED
      - DISABLED
      type: string
    WirelessDeviceId:
      description: The ID of the wireless device.
      maxLength: 256
      type: string
    WirelessGatewayId:
      maxLength: 256
      type: string
    MulticastGroupId:
      description: The ID of the multicast group.
      maxLength: 256
      type: string
    CreateServiceProfileResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the new service profile.
      type: object
    AddGwMetadata:
      type: boolean
    DrMinBox:
      maximum: 15
      minimum: 0
      type: integer
    DrMaxBox:
      maximum: 15
      minimum: 0
      type: integer
    PrAllowed:
      type: boolean
    RaAllowed:
      type: boolean
    CreateWirelessDeviceResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          - description: The ID of the new wireless device.
      type: object
    DevEui:
      pattern: "[a-fA-F0-9]{16}"
      type: string
    DeviceProfileId:
      maxLength: 256
      type: string
    ServiceProfileId:
      maxLength: 256
      type: string
    OtaaV1_1:
      description: OTAA device object for v1.1
      properties:
        AppKey:
          allOf:
          - $ref: '#/components/schemas/AppKey'
          - description: The AppKey value.
        NwkKey:
          allOf:
          - $ref: '#/components/schemas/NwkKey'
          - description: The NwkKey value.
        JoinEui:
          allOf:
          - $ref: '#/components/schemas/JoinEui'
          - description: The JoinEUI value.
      type: object
    OtaaV1_0_x:
      description: OTAA device object for v1.0.x
      properties:
        AppKey:
          allOf:
          - $ref: '#/components/schemas/AppKey'
          - description: The AppKey value.
        AppEui:
          allOf:
          - $ref: '#/components/schemas/AppEui'
          - description: The AppEUI value.
        GenAppKey:
          allOf:
          - $ref: '#/components/schemas/GenAppKey'
          - description: The GenAppKey value.
      type: object
    AbpV1_1:
      description: ABP device object for LoRaWAN specification v1.1
      properties:
        DevAddr:
          allOf:
          - $ref: '#/components/schemas/DevAddr'
          - description: The DevAddr value.
        SessionKeys:
          $ref: '#/components/schemas/AbpV1_1_SessionKeys'
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          - description: The FCnt init value.
      type: object
    AbpV1_0_x:
      description: ABP device object for LoRaWAN specification v1.0.x
      properties:
        DevAddr:
          allOf:
          - $ref: '#/components/schemas/DevAddr'
          - description: The DevAddr value.
        SessionKeys:
          $ref: '#/components/schemas/AbpV1_0_x_SessionKeys'
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          - description: The FCnt init value.
      type: object
    FPorts:
      description: List of FPort assigned for different LoRaWAN application packages
        to use
      example:
        Multicast: 134
        Positioning:
          Gnss: 52
          Stream: 126
          ClockSync: 133
        Applications: ""
        Fuota: 18
        ClockSync: 33
      properties:
        Fuota:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        Multicast:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        ClockSync:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        Positioning:
          $ref: '#/components/schemas/FPorts_Positioning'
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          - description: "Optional LoRaWAN application information, which can be used\
              \ for geolocation."
      type: object
    CreateWirelessGatewayResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          - description: The ID of the new wireless gateway.
      type: object
    GatewayEui:
      pattern: "^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$"
      type: string
    JoinEuiFilters:
      description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
      items:
        $ref: '#/components/schemas/JoinEuiRange'
      maxItems: 3
      minItems: 0
      type: array
    NetIdFilters:
      description: A list of NetId values that are used by LoRa gateways to filter
        the uplink frames.
      items:
        $ref: '#/components/schemas/NetId'
      maxItems: 10
      minItems: 0
      type: array
    SubBands:
      description: A list of integer indicating which sub bands are supported by LoRa
        gateway.
      items:
        $ref: '#/components/schemas/SubBand'
      maxItems: 8
      minItems: 0
      type: array
    Beaconing:
      description: Beaconing parameters for configuring the wireless gateways.
      properties:
        DataRate:
          allOf:
          - $ref: '#/components/schemas/BeaconingDataRate'
          - description: The data rate for gateways that are sending the beacons.
        Frequencies:
          allOf:
          - $ref: '#/components/schemas/BeaconingFrequencies'
          - description: The frequency list for the gateways to send the beacons.
      type: object
    GatewayMaxEirp:
      format: float
      maximum: 30
      minimum: 0
      type: number
    CreateWirelessGatewayTaskResponse:
      example:
        Status: ""
        WirelessGatewayTaskDefinitionId: ""
      properties:
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTaskDefinition.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          - description: The status of the request.
      type: object
    CreateWirelessGatewayTaskDefinitionResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          - description: The ID of the new wireless gateway task definition.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      type: object
    UpdateDataSource:
      maxLength: 4096
      minLength: 1
      type: string
    LoRaWANUpdateGatewayTaskCreate:
      description: LoRaWANUpdateGatewayTaskCreate object.
      properties:
        UpdateSignature:
          allOf:
          - $ref: '#/components/schemas/UpdateSignature'
          - description: The signature used to verify the update firmware.
        SigKeyCrc:
          allOf:
          - $ref: '#/components/schemas/Crc'
          - description: The CRC of the signature private key to check.
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate_CurrentVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate_UpdateVersion'
      type: object
    DeleteDestinationResponse:
      properties: {}
      type: object
    DeleteDeviceProfileResponse:
      properties: {}
      type: object
    DeleteFuotaTaskResponse:
      properties: {}
      type: object
    DeleteMulticastGroupResponse:
      properties: {}
      type: object
    DeleteNetworkAnalyzerConfigurationResponse:
      properties: {}
      type: object
    DeleteQueuedMessagesResponse:
      properties: {}
      type: object
    DeleteServiceProfileResponse:
      properties: {}
      type: object
    DeleteWirelessDeviceResponse:
      properties: {}
      type: object
    DeleteWirelessDeviceImportTaskResponse:
      properties: {}
      type: object
    DeleteWirelessGatewayResponse:
      properties: {}
      type: object
    DeleteWirelessGatewayTaskResponse:
      properties: {}
      type: object
    DeleteWirelessGatewayTaskDefinitionResponse:
      properties: {}
      type: object
    DeregisterWirelessDeviceResponse:
      properties: {}
      type: object
    DisassociateAwsAccountFromPartnerAccountResponse:
      properties: {}
      type: object
    DisassociateMulticastGroupFromFuotaTaskResponse:
      properties: {}
      type: object
    DisassociateWirelessDeviceFromFuotaTaskResponse:
      properties: {}
      type: object
    DisassociateWirelessDeviceFromMulticastGroupResponse:
      properties: {}
      type: object
    DisassociateWirelessDeviceFromThingResponse:
      properties: {}
      type: object
    DisassociateWirelessGatewayFromCertificateResponse:
      properties: {}
      type: object
    DisassociateWirelessGatewayFromThingResponse:
      properties: {}
      type: object
    GetDestinationResponse:
      example:
        Description: ""
        Expression: ""
        Arn: ""
        ExpressionType: ""
        RoleArn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the resource.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The rule name or topic rule to send messages to.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: The type of value in <code>Expression</code>.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
      type: object
    GetDeviceProfileResponse:
      example:
        LoRaWAN:
          PingSlotPeriod: ""
          ClassCTimeout: ""
          RxFreq2: ""
          RfRegion: ""
          ClassBTimeout: ""
          RxDelay1: ""
          SupportsClassC: ""
          SupportsClassB: ""
          RxDrOffset1: ""
          MaxEirp: ""
          FactoryPresetFreqsList: ""
          SupportsJoin: ""
          PingSlotDr: ""
          MacVersion: ""
          PingSlotFreq: ""
          RegParamsRevision: ""
          RxDataRate2: ""
          Supports32BitFCnt: ""
          MaxDutyCycle: ""
        Id: ""
        Sidewalk:
          ApplicationServerPublicKey: ""
          QualificationStatus: ""
          DakCertificateMetadata: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          - description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile.
        LoRaWAN:
          $ref: '#/components/schemas/GetDeviceProfileResponse_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/GetDeviceProfileResponse_Sidewalk'
      type: object
    GetEventConfigurationByResourceTypesResponse:
      example:
        Proximity:
          Sidewalk:
            WirelessDeviceEventTopic: ""
        MessageDeliveryStatus:
          Sidewalk:
            WirelessDeviceEventTopic: ""
        Join:
          LoRaWAN:
            WirelessDeviceEventTopic: ""
        ConnectionStatus:
          LoRaWAN:
            WirelessGatewayEventTopic: ""
        DeviceRegistrationState:
          Sidewalk:
            WirelessDeviceEventTopic: ""
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse_Proximity'
        Join:
          $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/GetEventConfigurationByResourceTypesResponse_MessageDeliveryStatus'
      type: object
    GetFuotaTaskResponse:
      example:
        Status: Pending
        FragmentSizeBytes: 1
        FirmwareUpdateImage: FirmwareUpdateImage
        Description: Description
        LoRaWAN:
          RfRegion: RfRegion
          StartTime: 2000-01-23T04:56:07.000+00:00
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        FirmwareUpdateRole: FirmwareUpdateRole
        Id: Id
        Arn: Arn
        FragmentIntervalMS: 1
        RedundancyPercent: 8
        Name: Name
      properties:
        Arn:
          description: The arn of a FUOTA task.
          maxLength: 128
          type: string
        Id:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        Status:
          $ref: '#/components/schemas/FuotaTaskStatus'
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTaskGetInfo'
        FirmwareUpdateImage:
          description: The S3 URI points to a firmware update image that is to be
            used with a FUOTA task.
          maxLength: 4096
          minLength: 1
          type: string
        FirmwareUpdateRole:
          description: The firmware update role that is to be used with a FUOTA task.
          maxLength: 2048
          minLength: 1
          type: string
        CreatedAt:
          description: Created at timestamp for the resource.
          format: date-time
          type: string
        RedundancyPercent:
          description: "The percentage of the added fragments that are redundant.\
            \ For example, if the size of the firmware image file is 100 bytes and\
            \ the fragment size is 10 bytes, with <code>RedundancyPercent</code> set\
            \ to 50(%), the final number of encoded fragments is (100 / 10) + (100\
            \ / 10 * 50%) = 15."
          maximum: 100
          minimum: 0
          type: integer
        FragmentSizeBytes:
          description: The size of each fragment in bytes. This parameter is supported
            only for FUOTA tasks with multicast groups.
          minimum: 1
          type: integer
        FragmentIntervalMS:
          description: "<p>The interval for sending fragments in milliseconds, rounded\
            \ to the nearest second.</p> <note> <p>This interval only determines the\
            \ timing for when the Cloud sends down the fragments to yor device. There\
            \ can be a delay for when your device will receive these fragments. This\
            \ delay depends on the device's class and the communication delay with\
            \ the cloud.</p> </note>"
          minimum: 1
          type: integer
      type: object
    GetLogLevelsByResourceTypesResponse:
      example:
        WirelessGatewayLogOptions:
        - Type: LoRaWAN
          Events:
          - Event: CUPS_Request
            LogLevel: null
          - Event: CUPS_Request
            LogLevel: null
          LogLevel: null
        - Type: LoRaWAN
          Events:
          - Event: CUPS_Request
            LogLevel: null
          - Event: CUPS_Request
            LogLevel: null
          LogLevel: null
        WirelessDeviceLogOptions:
        - Type: ""
          Events:
          - Event: Join
            LogLevel: null
          - Event: Join
            LogLevel: null
          LogLevel: null
        - Type: ""
          Events:
          - Event: Join
            LogLevel: null
          - Event: Join
            LogLevel: null
          LogLevel: null
        DefaultLogLevel: INFO
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        WirelessGatewayLogOptions:
          description: The list of wireless gateway log options.
          items:
            $ref: '#/components/schemas/WirelessGatewayLogOption'
          type: array
        WirelessDeviceLogOptions:
          description: The list of wireless device log options.
          items:
            $ref: '#/components/schemas/WirelessDeviceLogOption'
          type: array
      type: object
    GetMulticastGroupResponse:
      example:
        Status: Status
        Description: Description
        LoRaWAN:
          NumberOfDevicesRequested: 0
          NumberOfDevicesInGroup: 6
          RfRegion: EU868
          DlClass: ClassB
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        Id: Id
        Arn: Arn
        Name: Name
      properties:
        Arn:
          description: The arn of the multicast group.
          maxLength: 128
          type: string
        Id:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        Status:
          description: The status of the multicast group.
          maxLength: 256
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastGet'
        CreatedAt:
          description: Created at timestamp for the resource.
          format: date-time
          type: string
      type: object
    GetMulticastGroupSessionResponse:
      example:
        LoRaWAN:
          PingSlotPeriod: ""
          SessionTimeout: 25380
          DlDr: 1
          DlFreq: 642471056
          SessionStartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastSession'
      type: object
    GetNetworkAnalyzerConfigurationResponse:
      example:
        Description: Description
        TraceContent:
          WirelessDeviceFrameInfo: ENABLED
          MulticastFrameInfo: ENABLED
          LogLevel: INFO
        WirelessGateways: ""
        WirelessDevices: ""
        Arn: ""
        MulticastGroups: ""
        Name: Name
      properties:
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevices:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          - description: List of wireless gateway resources that have been added to
              the network analyzer configuration.
        WirelessGateways:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          - description: List of wireless gateway resources that have been added to
              the network analyzer configuration.
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          - description: The Amazon Resource Name of the new resource.
        Name:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        MulticastGroups:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          - description: List of multicast group resources that have been added to
              the network analyzer configuration.
      type: object
    GetPartnerAccountResponse:
      example:
        AccountLinked: ""
        Sidewalk:
          Fingerprint: ""
          AmazonId: ""
          Arn: ""
      properties:
        Sidewalk:
          $ref: '#/components/schemas/GetPartnerAccountResponse_Sidewalk'
        AccountLinked:
          allOf:
          - $ref: '#/components/schemas/AccountLinked'
          - description: Whether the partner account is linked to the AWS account.
      type: object
    GetPositionResponse:
      deprecated: true
      description: This operation is no longer supported.
      example:
        SolverProvider: ""
        Accuracy:
          VerticalAccuracy: ""
          HorizontalAccuracy: ""
        Position: ""
        SolverType: ""
        Timestamp: ""
        SolverVersion: ""
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/PositionCoordinate'
          - description: The position information of the resource.
        Accuracy:
          $ref: '#/components/schemas/GetPositionResponse_Accuracy'
        SolverType:
          allOf:
          - $ref: '#/components/schemas/PositionSolverType'
          - description: The type of solver used to identify the position of the resource.
        SolverProvider:
          allOf:
          - $ref: '#/components/schemas/PositionSolverProvider'
          - description: The vendor of the positioning solver.
        SolverVersion:
          allOf:
          - $ref: '#/components/schemas/PositionSolverVersion'
          - description: The version of the positioning solver.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: The timestamp at which the device's position was determined.
      type: object
    GetPositionConfigurationResponse:
      deprecated: true
      description: This operation is no longer supported.
      example:
        Destination: ""
        Solvers:
          SemtechGnss:
            Status: ""
            Type: ""
            Fec: ""
            Provider: ""
      properties:
        Solvers:
          $ref: '#/components/schemas/GetPositionConfigurationResponse_Solvers'
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The position data destination that describes the AWS IoT
              rule that processes the device's position data for use by AWS IoT Core
              for LoRaWAN.
      type: object
    GetPositionEstimateResponse:
      example:
        GeoJsonPayload: ""
      properties:
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          - description: "The position information of the resource, displayed as a\
              \ JSON payload. The payload uses the GeoJSON format, which a format\
              \ that's used to encode geographic data structures. For more information,\
              \ see <a href=\"https://geojson.org/\">GeoJSON</a>."
      type: object
    WiFiAccessPoint:
      description: Wi-Fi access point.
      properties:
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          - description: Wi-Fi MAC Address.
        Rss:
          allOf:
          - $ref: '#/components/schemas/RSS'
          - description: Received signal strength (dBm) of the WLAN measurement data.
      required:
      - MacAddress
      - Rss
      type: object
    GsmList:
      items:
        $ref: '#/components/schemas/GsmObj'
      maxItems: 16
      minItems: 1
      type: array
    WcdmaList:
      items:
        $ref: '#/components/schemas/WcdmaObj'
      maxItems: 16
      minItems: 1
      type: array
    TdscdmaList:
      items:
        $ref: '#/components/schemas/TdscdmaObj'
      maxItems: 16
      minItems: 1
      type: array
    LteList:
      items:
        $ref: '#/components/schemas/LteObj'
      maxItems: 16
      minItems: 1
      type: array
    CdmaList:
      items:
        $ref: '#/components/schemas/CdmaObj'
      maxItems: 16
      minItems: 1
      type: array
    IPAddress:
      type: string
    GnssNav:
      maxLength: 2048
      type: string
    GPST:
      format: float
      type: number
    CaptureTimeAccuracy:
      format: float
      type: number
    AssistPosition:
      items:
        $ref: '#/components/schemas/Coordinate'
      maxItems: 2
      minItems: 2
      type: array
    Coordinate:
      format: float
      type: number
    Use2DSolver:
      type: boolean
    GetResourceEventConfigurationResponse:
      example:
        Proximity:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
        MessageDeliveryStatus:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
        Join:
          LoRaWAN:
            DevEuiEventTopic: ""
          WirelessDeviceIdEventTopic: ""
        ConnectionStatus:
          LoRaWAN:
            GatewayEuiEventTopic: ""
          WirelessGatewayIdEventTopic: ""
        DeviceRegistrationState:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_Proximity'
        Join:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_MessageDeliveryStatus'
      type: object
    GetResourceLogLevelResponse:
      example:
        LogLevel: INFO
      properties:
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      type: object
    GetResourcePositionResponse:
      example:
        GeoJsonPayload: ""
      properties:
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          - description: "The position information of the resource, displayed as a\
              \ JSON payload. The payload uses the GeoJSON format, which a format\
              \ that's used to encode geographic data structures. For more information,\
              \ see <a href=\"https://geojson.org/\">GeoJSON</a>."
      type: object
    GetServiceEndpointResponse:
      example:
        ServerTrust: ""
        ServiceType: ""
        ServiceEndpoint: ""
      properties:
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayServiceType'
          - description: The endpoint's service type.
        ServiceEndpoint:
          allOf:
          - $ref: '#/components/schemas/EndPoint'
          - description: The service endpoint value.
        ServerTrust:
          allOf:
          - $ref: '#/components/schemas/CertificatePEM'
          - description: The Root CA of the server trust certificate.
      type: object
    GetServiceProfileResponse:
      example:
        LoRaWAN:
          DlBucketSize: ""
          MinGwDiversity: ""
          DrMax: ""
          ReportDevStatusMargin: ""
          PrAllowed: ""
          DlRate: ""
          UlRatePolicy: ""
          ReportDevStatusBattery: ""
          ChannelMask: ""
          UlRate: ""
          AddGwMetadata: ""
          DlRatePolicy: ""
          HrAllowed: ""
          DrMin: ""
          TargetPer: ""
          NwkGeoLoc: ""
          DevStatusReqFreq: ""
          UlBucketSize: ""
          RaAllowed: ""
        Id: ""
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          - description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
        LoRaWAN:
          $ref: '#/components/schemas/GetServiceProfileResponse_LoRaWAN'
      type: object
    GetWirelessDeviceResponse:
      example:
        Positioning: ""
        Type: ""
        Description: ""
        LoRaWAN:
          FPorts:
            Multicast: 134
            Positioning:
              Gnss: 52
              Stream: 126
              ClockSync: 133
            Applications: ""
            Fuota: 18
            ClockSync: 33
          OtaaV1_0_x:
            AppEui: ""
            GenAppKey: ""
            AppKey: ""
          DeviceProfileId: ""
          OtaaV1_1:
            NwkKey: ""
            AppKey: ""
            JoinEui: ""
          AbpV1_0_x:
            FCntStart: ""
            SessionKeys:
              AppSKey: ""
              NwkSKey: ""
            DevAddr: ""
          DevEui: ""
          ServiceProfileId: ""
          AbpV1_1:
            FCntStart: ""
            SessionKeys:
              FNwkSIntKey: ""
              AppSKey: ""
              SNwkSIntKey: ""
              NwkSEncKey: ""
            DevAddr: ""
        DestinationName: ""
        ThingArn: ""
        Id: ""
        ThingName: ""
        Sidewalk:
          Status: ""
          SidewalkManufacturingSn: ""
          DeviceProfileId: ""
          CertificateId: ""
          DeviceCertificates: ""
          AmazonId: AmazonId
          SidewalkId: ""
          PrivateKeys: ""
        Arn: ""
        Name: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          - description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          - description: The name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the destination to which the device is assigned.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          - description: The ID of the wireless device.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          - description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing associated with the wireless device.
              The value is empty if a thing isn't associated with the device.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          - description: The ARN of the thing associated with the wireless device.
        LoRaWAN:
          $ref: '#/components/schemas/GetWirelessDeviceResponse_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/GetWirelessDeviceResponse_Sidewalk'
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          - description: "FPort values for the GNSS, stream, and ClockSync functions\
              \ of the positioning information."
      type: object
    GetWirelessDeviceImportTaskResponse:
      example:
        Status: ""
        StatusReason: ""
        PendingImportedDeviceCount: ""
        OnboardedImportedDeviceCount: ""
        DestinationName: ""
        CreationTime: ""
        InitializedImportedDeviceCount: ""
        Id: ""
        Sidewalk:
          Role: ""
          DeviceCreationFileList: ""
        Arn: ""
        FailedImportedDeviceCount: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          - description: The identifier of the import task for which information is
              retrieved.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          - description: The ARN (Amazon Resource Name) of the import task.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the destination that's assigned to the wireless
              devices in the import task.
        Sidewalk:
          $ref: '#/components/schemas/GetWirelessDeviceImportTaskResponse_Sidewalk'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time at which the import task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportTaskStatus'
          - description: The import task status.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          - description: "The reason for the provided status information, such as\
              \ a validation error that causes the import task to fail."
        InitializedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The number of devices in the import task that are waiting
              for the control log to start processing.
        PendingImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The number of devices in the import task that are waiting
              in the import task queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The number of devices in the import task that have been onboarded
              to the import task.
        FailedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The number of devices in the import task that failed to onboard
              to the import task.
      type: object
    GetWirelessDeviceStatisticsResponse:
      example:
        LastUplinkReceivedAt: ""
        LoRaWAN:
          DataRate: ""
          FPort: ""
          Gateways: ""
          Frequency: ""
          DevEui: ""
          Timestamp: ""
        WirelessDeviceId: ""
        Sidewalk:
          Rssi: ""
          DeviceState: ""
          BatteryLevel: ""
          Event: ""
      properties:
        WirelessDeviceId:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          - description: The ID of the wireless device.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: <p>The date and time when the most recent uplink was received.</p>
              <note> <p>This value is only valid for 3 months.</p> </note>
        LoRaWAN:
          $ref: '#/components/schemas/GetWirelessDeviceStatisticsResponse_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/GetWirelessDeviceStatisticsResponse_Sidewalk'
      type: object
    GetWirelessGatewayResponse:
      example:
        Description: ""
        LoRaWAN:
          RfRegion: ""
          NetIdFilters:
          - null
          - null
          - null
          - null
          - null
          MaxEirp: ""
          JoinEuiFilters:
          - - null
            - null
          - - null
            - null
          - - null
            - null
          Beaconing:
            DataRate: ""
            Frequencies: ""
          SubBands:
          - null
          - null
          - null
          - null
          - null
          GatewayEui: ""
        ThingArn: ""
        Id: ""
        ThingName: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          - description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          - description: The ID of the wireless gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/GetWirelessGatewayResponse_LoRaWAN'
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          - description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing associated with the wireless gateway.
              The value is empty if a thing isn't associated with the gateway.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          - description: The ARN of the thing associated with the wireless gateway.
      type: object
    GetWirelessGatewayCertificateResponse:
      example:
        IotCertificateId: ""
        LoRaWANNetworkServerCertificateId: ""
      properties:
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          - description: The ID of the certificate associated with the wireless gateway.
        LoRaWANNetworkServerCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          - description: The ID of the certificate that is associated with the wireless
              gateway and used for the LoRaWANNetworkServer endpoint.
      type: object
    GetWirelessGatewayFirmwareInformationResponse:
      example:
        LoRaWAN:
          CurrentVersion:
            Station: ""
            Model: ""
            PackageVersion: ""
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/GetWirelessGatewayFirmwareInformationResponse_LoRaWAN'
      type: object
    GetWirelessGatewayStatisticsResponse:
      example:
        LastUplinkReceivedAt: ""
        ConnectionStatus: ""
        WirelessGatewayId: ""
      properties:
        WirelessGatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          - description: The ID of the wireless gateway.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: <p>The date and time when the most recent uplink was received.</p>
              <note> <p>This value is only valid for 3 months.</p> </note>
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          - description: The connection status of the wireless gateway.
      type: object
    GetWirelessGatewayTaskResponse:
      example:
        Status: ""
        LastUplinkReceivedAt: ""
        WirelessGatewayTaskDefinitionId: ""
        WirelessGatewayId: ""
        TaskCreatedAt: ""
      properties:
        WirelessGatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          - description: The ID of the wireless gateway.
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTask.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: <p>The date and time when the most recent uplink was received.</p>
              <note> <p>This value is only valid for 3 months.</p> </note>
        TaskCreatedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: The date and time when the task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          - description: The status of the request.
      type: object
    GetWirelessGatewayTaskDefinitionResponse:
      example:
        AutoCreateTasks: ""
        Update:
          LoRaWAN:
            UpdateSignature: ""
            SigKeyCrc: ""
            UpdateVersion:
              Station: ""
              Model: ""
              PackageVersion: ""
            CurrentVersion:
              Station: ""
              Model: ""
              PackageVersion: ""
          UpdateDataSource: ""
          UpdateDataRole: ""
        Arn: ""
        Name: ""
      properties:
        AutoCreateTasks:
          allOf:
          - $ref: '#/components/schemas/AutoCreateTasks'
          - description: "Whether to automatically create tasks using this task definition\
              \ for all gateways with the specified current version. If <code>false</code>,\
              \ the task must me created by calling <code>CreateWirelessGatewayTask</code>."
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskName'
          - description: The name of the resource.
        Update:
          $ref: '#/components/schemas/GetWirelessGatewayTaskDefinitionResponse_Update'
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      type: object
    ListDestinationsResponse:
      example:
        NextToken: ""
        DestinationList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        DestinationList:
          allOf:
          - $ref: '#/components/schemas/DestinationList'
          - description: The list of destinations.
      type: object
    ListDeviceProfilesResponse:
      example:
        NextToken: ""
        DeviceProfileList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        DeviceProfileList:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileList'
          - description: The list of device profiles.
      type: object
    ListDevicesForWirelessDeviceImportTaskResponse:
      example:
        NextToken: ""
        DestinationName: ""
        ImportedWirelessDeviceList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <code>null</code>\
              \ if there are no additional results."
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the Sidewalk destination that describes the IoT
              rule to route messages received from devices in an import task that
              are onboarded to AWS IoT Wireless.
        ImportedWirelessDeviceList:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceList'
          - description: List of wireless devices in an import task and their onboarding
              status.
      type: object
    ListEventConfigurationsResponse:
      example:
        NextToken: ""
        EventConfigurationsList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "To retrieve the next set of results, the <code>nextToken</code>\
              \ value from a previous response; otherwise <b>null</b> to receive the\
              \ first set of results."
        EventConfigurationsList:
          allOf:
          - $ref: '#/components/schemas/EventConfigurationsList'
          - description: Event configurations of all events for a single resource.
      type: object
    ListFuotaTasksResponse:
      example:
        NextToken: ""
        FuotaTaskList:
        - Id: Id
          Arn: Arn
          Name: Name
        - Id: Id
          Arn: Arn
          Name: Name
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "To retrieve the next set of results, the <code>nextToken</code>\
              \ value from a previous response; otherwise <b>null</b> to receive the\
              \ first set of results."
        FuotaTaskList:
          description: Lists the FUOTA tasks registered to your AWS account.
          items:
            $ref: '#/components/schemas/FuotaTask'
          type: array
      type: object
    ListMulticastGroupsResponse:
      example:
        NextToken: ""
        MulticastGroupList:
        - Id: Id
          Arn: Arn
          Name: Name
        - Id: Id
          Arn: Arn
          Name: Name
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "To retrieve the next set of results, the <code>nextToken</code>\
              \ value from a previous response; otherwise <b>null</b> to receive the\
              \ first set of results."
        MulticastGroupList:
          description: List of multicast groups.
          items:
            $ref: '#/components/schemas/MulticastGroup'
          type: array
      type: object
    ListMulticastGroupsByFuotaTaskResponse:
      example:
        NextToken: ""
        MulticastGroupList:
        - Id: Id
        - Id: Id
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "To retrieve the next set of results, the <code>nextToken</code>\
              \ value from a previous response; otherwise <b>null</b> to receive the\
              \ first set of results."
        MulticastGroupList:
          description: List of multicast groups associated with a FUOTA task.
          items:
            $ref: '#/components/schemas/MulticastGroupByFuotaTask'
          type: array
      type: object
    ListNetworkAnalyzerConfigurationsResponse:
      example:
        NextToken: ""
        NetworkAnalyzerConfigurationList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        NetworkAnalyzerConfigurationList:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationList'
          - description: The list of network analyzer configurations.
      type: object
    ListPartnerAccountsResponse:
      example:
        NextToken: ""
        Sidewalk: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkAccountList'
          - description: The Sidewalk account credentials.
      type: object
    ListPositionConfigurationsResponse:
      deprecated: true
      description: This operation is no longer supported.
      example:
        NextToken: ""
        PositionConfigurationList: ""
      properties:
        PositionConfigurationList:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationList'
          - description: A list of position configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
      type: object
    ListQueuedMessagesResponse:
      example:
        NextToken: ""
        DownlinkQueueMessagesList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "To retrieve the next set of results, the <code>nextToken</code>\
              \ value from a previous response; otherwise <b>null</b> to receive the\
              \ first set of results."
        DownlinkQueueMessagesList:
          allOf:
          - $ref: '#/components/schemas/DownlinkQueueMessagesList'
          - description: The messages in the downlink queue.
      type: object
    ListServiceProfilesResponse:
      example:
        NextToken: ""
        ServiceProfileList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        ServiceProfileList:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileList'
          - description: The list of service profiles.
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
      type: object
    ListWirelessDeviceImportTasksResponse:
      example:
        NextToken: ""
        WirelessDeviceImportTaskList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <code>null</code>\
              \ if there are no additional results."
        WirelessDeviceImportTaskList:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceImportTaskList'
          - description: List of import tasks and summary information of onboarding
              status of devices in each import task.
      type: object
    ListWirelessDevicesResponse:
      example:
        NextToken: ""
        WirelessDeviceList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        WirelessDeviceList:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceStatisticsList'
          - description: The ID of the wireless device.
      type: object
    ListWirelessGatewayTaskDefinitionsResponse:
      example:
        TaskDefinitions: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        TaskDefinitions:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionList'
          - description: The list of task definitions.
      type: object
    ListWirelessGatewaysResponse:
      example:
        NextToken: ""
        WirelessGatewayList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use to get the next set of results, or <b>null</b>\
              \ if there are no additional results."
        WirelessGatewayList:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayStatisticsList'
          - description: The ID of the wireless gateway.
      type: object
    PutPositionConfigurationResponse:
      deprecated: true
      description: This operation is no longer supported.
      properties: {}
      type: object
    SemtechGnssConfiguration:
      description: Information about the Semtech GNSS solver configuration.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationStatus'
          - description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationFec'
          - description: Whether forward error correction is enabled.
      required:
      - Fec
      - Status
      type: object
    PutResourceLogLevelResponse:
      properties: {}
      type: object
    ResetAllResourceLogLevelsResponse:
      properties: {}
      type: object
    ResetResourceLogLevelResponse:
      properties: {}
      type: object
    SendDataToMulticastGroupResponse:
      example:
        MessageId: MessageId
      properties:
        MessageId:
          description: ID of a multicast group message.
          maxLength: 256
          type: string
      type: object
    LoRaWANMulticastMetadata:
      description: The metadata information of the LoRaWAN multicast group.
      example:
        FPort: 18
      properties:
        FPort:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
      type: object
    SendDataToWirelessDeviceResponse:
      example:
        MessageId: ""
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of the message sent to the wireless device.
      type: object
    LoRaWANSendDataToDevice:
      description: LoRaWAN router info.
      properties:
        FPort:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        ParticipatingGateways:
          $ref: '#/components/schemas/LoRaWANSendDataToDevice_ParticipatingGateways'
      type: object
    SidewalkSendDataToDevice:
      description: Information about a Sidewalk router.
      properties:
        Seq:
          allOf:
          - $ref: '#/components/schemas/Seq'
          - description: The sequence number.
        MessageType:
          $ref: '#/components/schemas/MessageType'
        AckModeRetryDurationSecs:
          allOf:
          - $ref: '#/components/schemas/AckModeRetryDurationSecs'
          - description: The duration of time in seconds to retry sending the ACK.
      type: object
    StartBulkAssociateWirelessDeviceWithMulticastGroupResponse:
      properties: {}
      type: object
    StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse:
      properties: {}
      type: object
    StartFuotaTaskResponse:
      properties: {}
      type: object
    StartTime:
      description: Start time of a FUOTA task.
      format: date-time
      type: string
    StartMulticastGroupSessionResponse:
      properties: {}
      type: object
    DlDr:
      description: Downlink data rate.
      maximum: 15
      minimum: 0
      type: integer
    DlFreq:
      description: Downlink frequency.
      maximum: 1000000000
      minimum: 100000000
      type: integer
    SessionStartTimeTimestamp:
      description: Timestamp of when the multicast group session is to start.
      format: date-time
      type: string
    SessionTimeout:
      description: How long before a multicast group session is to timeout.
      maximum: 172800
      minimum: 60
      type: integer
    StartSingleWirelessDeviceImportTaskResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          - description: The import task ID.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          - description: The ARN (Amazon Resource Name) of the import task.
      type: object
    SidewalkManufacturingSn:
      maxLength: 64
      type: string
    StartWirelessDeviceImportTaskResponse:
      example:
        Id: ""
        Arn: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          - description: The import task ID.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          - description: The ARN (Amazon Resource Name) of the import task.
      type: object
    DeviceCreationFile:
      maxLength: 1024
      type: string
    Role:
      maxLength: 2048
      type: string
    TagResourceResponse:
      properties: {}
      type: object
    TooManyTagsException: {}
    TestWirelessDeviceResponse:
      example:
        Result: ""
      properties:
        Result:
          allOf:
          - $ref: '#/components/schemas/Result'
          - description: The result returned by the test.
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateDestinationResponse:
      properties: {}
      type: object
    UpdateEventConfigurationByResourceTypesResponse:
      properties: {}
      type: object
    SidewalkResourceTypeEventConfiguration:
      description: Sidewalk resource type event configuration object for enabling
        or disabling topic.
      example:
        WirelessDeviceEventTopic: ""
      properties:
        WirelessDeviceEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device join event topic is enabled
              or disabled.
      type: object
    LoRaWANJoinResourceTypeEventConfiguration:
      description: Object for LoRaWAN join resource type event configuration.
      properties:
        WirelessDeviceEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device join event topic is enabled
              or disabled.
      type: object
    LoRaWANConnectionStatusResourceTypeEventConfiguration:
      description: Object for LoRaWAN connection status resource type event configuration.
      properties:
        WirelessGatewayEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless gateway connection status event
              topic is enabled or disabled.
      type: object
    UpdateFuotaTaskResponse:
      properties: {}
      type: object
    UpdateLogLevelsByResourceTypesResponse:
      properties: {}
      type: object
    WirelessDeviceLogOption:
      description: The log options for wireless devices and can be used to set log
        levels for a specific type of wireless device.
      example:
        Type: ""
        Events:
        - Event: Join
          LogLevel: null
        - Event: Join
          LogLevel: null
        LogLevel: null
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          - description: The wireless device type.
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          description: The list of wireless device event log options.
          items:
            $ref: '#/components/schemas/WirelessDeviceEventLogOption'
          type: array
      required:
      - LogLevel
      - Type
      type: object
    WirelessGatewayLogOption:
      description: The log options for wireless gateways and can be used to set log
        levels for a specific type of wireless gateway.
      example:
        Type: LoRaWAN
        Events:
        - Event: CUPS_Request
          LogLevel: null
        - Event: CUPS_Request
          LogLevel: null
        LogLevel: null
      properties:
        Type:
          $ref: '#/components/schemas/WirelessGatewayType'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          description: The list of wireless gateway event log options.
          items:
            $ref: '#/components/schemas/WirelessGatewayEventLogOption'
          type: array
      required:
      - LogLevel
      - Type
      type: object
    UpdateMulticastGroupResponse:
      properties: {}
      type: object
    UpdateNetworkAnalyzerConfigurationResponse:
      properties: {}
      type: object
    UpdatePartnerAccountResponse:
      properties: {}
      type: object
    UpdatePositionResponse:
      deprecated: true
      description: This operation is no longer supported.
      properties: {}
      type: object
    PositionCoordinateValue:
      format: float
      type: number
    UpdateResourceEventConfigurationResponse:
      properties: {}
      type: object
    SidewalkEventNotificationConfigurations:
      description: " <code>SidewalkEventNotificationConfigurations</code> object,\
        \ which is the event configuration object for Sidewalk-related event topics."
      example:
        AmazonIdEventTopic: ""
      properties:
        AmazonIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the Amazon ID event topic is enabled or disabled.
      type: object
    EventNotificationTopicStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    LoRaWANJoinEventNotificationConfigurations:
      description: Object for LoRaWAN join resource type event configuration.
      properties:
        DevEuiEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the Dev EUI join event topic is enabled or
              disabled.
      type: object
    LoRaWANConnectionStatusEventNotificationConfigurations:
      description: Object for LoRaWAN connection status resource type event configuration.
      properties:
        GatewayEuiEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the gateway EUI connection status event topic
              is enabled or disabled.
      type: object
    UpdateResourcePositionResponse:
      properties: {}
      type: object
    UpdateWirelessDeviceResponse:
      properties: {}
      type: object
    UpdateAbpV1_1:
      description: ABP device object for LoRaWAN specification v1.1
      properties:
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          - description: The FCnt init value.
      type: object
    UpdateAbpV1_0_x:
      description: ABP device object for LoRaWAN specification v1.0.x
      properties:
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          - description: The FCnt init value.
      type: object
    UpdateFPorts:
      description: Object for updating the FPorts information.
      properties:
        Positioning:
          $ref: '#/components/schemas/UpdateFPorts_Positioning'
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          - description: "LoRaWAN application, which can be used for geolocation by\
              \ activating positioning."
      type: object
    UpdateWirelessDeviceImportTaskResponse:
      properties: {}
      type: object
    UpdateWirelessGatewayResponse:
      properties: {}
      type: object
    JoinEuiRange:
      description: "A pair of join EUI describing a range [BegEui, EndEui], both ends\
        \ are inclusive."
      items:
        $ref: '#/components/schemas/JoinEui'
      maxItems: 2
      minItems: 2
      type: array
    NetId:
      description: LoRaWAN network ID.
      pattern: "[a-fA-F0-9]{6}"
      type: string
    DevAddr:
      pattern: "[a-fA-F0-9]{8}"
      type: string
    SessionKeysAbpV1_0_x:
      description: Session keys for ABP v1.1
      properties:
        NwkSKey:
          allOf:
          - $ref: '#/components/schemas/NwkSKey'
          - description: The NwkSKey value.
        AppSKey:
          allOf:
          - $ref: '#/components/schemas/AppSKey'
          - description: The AppSKey value.
      type: object
    FCntStart:
      description: The FCnt init value.
      maximum: 65535
      minimum: 0
      type: integer
    SessionKeysAbpV1_1:
      description: Session keys for ABP v1.1
      properties:
        FNwkSIntKey:
          allOf:
          - $ref: '#/components/schemas/FNwkSIntKey'
          - description: The FNwkSIntKey value.
        SNwkSIntKey:
          allOf:
          - $ref: '#/components/schemas/SNwkSIntKey'
          - description: The SNwkSIntKey value.
        NwkSEncKey:
          allOf:
          - $ref: '#/components/schemas/NwkSEncKey'
          - description: The NwkSEncKey value.
        AppSKey:
          allOf:
          - $ref: '#/components/schemas/AppSKey'
          - description: The AppSKey value.
      type: object
    AccountLinked:
      type: boolean
    HorizontalAccuracy:
      format: float
      minimum: 0
      type: number
    VerticalAccuracy:
      format: float
      minimum: 0
      type: number
    Accuracy:
      description: The accuracy of the estimated position in meters. An empty value
        indicates that no position data is available. A value of ‘0.0’ value indicates
        that position data is available. This data corresponds to the position information
        that you specified instead of the position computed by solver.
      properties:
        HorizontalAccuracy:
          allOf:
          - $ref: '#/components/schemas/HorizontalAccuracy'
          - description: "The horizontal accuracy of the estimated position, which\
              \ is the difference between the estimated location and the actual device\
              \ location."
        VerticalAccuracy:
          allOf:
          - $ref: '#/components/schemas/VerticalAccuracy'
          - description: "The vertical accuracy of the estimated position, which is\
              \ the difference between the estimated altitude and actual device latitude\
              \ in meters."
      type: object
    AckModeRetryDurationSecs:
      maximum: 604800
      minimum: 0
      type: integer
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      type: string
    ApId:
      maxLength: 256
      type: string
    AppEui:
      pattern: "[a-fA-F0-9]{16}"
      type: string
    AppKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    AppSKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    FPort:
      description: The Fport value.
      maximum: 223
      minimum: 1
      type: integer
    ApplicationConfigType:
      enum:
      - SemtechGeolocation
      type: string
    DestinationName:
      maxLength: 128
      pattern: "[a-zA-Z0-9-_]+"
      type: string
    ApplicationConfig:
      description: "LoRaWAN application configuration, which can be used to perform\
        \ geolocation."
      properties:
        FPort:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationConfigType'
          - description: "Application type, which can be specified to obtain real-time\
              \ position information of your LoRaWAN device."
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the position data destination that describes
              the AWS IoT rule that processes the device's position data for use by
              AWS IoT Core for LoRaWAN.
      type: object
    ApplicationServerPublicKey:
      format: password
      maxLength: 4096
      minLength: 1
      pattern: "[a-fA-F0-9]{64}"
      type: string
    Applications:
      items:
        $ref: '#/components/schemas/ApplicationConfig'
      type: array
    SidewalkAccountInfo:
      description: Information about a Sidewalk account.
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          - description: The Sidewalk Amazon ID.
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          - description: The Sidewalk application server private key.
      type: object
    ClientRequestToken:
      description: "Each resource must have a unique client request token. If you\
        \ try to create a new resource with the same token as a resource that already\
        \ exists, an exception occurs. If you omit this value, AWS SDKs will automatically\
        \ generate a unique client request."
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-_]+$"
      type: string
    TagList:
      description: The tag to attach to the specified resource. Tags are metadata
        that you can use to manage a resource.
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    AssociateAwsAccountWithPartnerAccountRequest:
      example:
        ClientRequestToken: ""
        Sidewalk:
          AppServerPrivateKey: ""
          AmazonId: ""
        Tags: ""
      properties:
        Sidewalk:
          $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse_Sidewalk'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
      required:
      - Sidewalk
      title: AssociateAwsAccountWithPartnerAccountRequest
      type: object
    PartnerAccountArn:
      type: string
    FuotaTaskId:
      description: The ID of a FUOTA task.
      maxLength: 256
      type: string
    AssociateMulticastGroupWithFuotaTaskRequest:
      example:
        MulticastGroupId: MulticastGroupId
      properties:
        MulticastGroupId:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
      required:
      - MulticastGroupId
      title: AssociateMulticastGroupWithFuotaTaskRequest
      type: object
    AssociateWirelessDeviceWithFuotaTaskRequest:
      example:
        WirelessDeviceId: WirelessDeviceId
      properties:
        WirelessDeviceId:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
      required:
      - WirelessDeviceId
      title: AssociateWirelessDeviceWithFuotaTaskRequest
      type: object
    AssociateWirelessDeviceWithMulticastGroupRequest:
      properties:
        WirelessDeviceId:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
      required:
      - WirelessDeviceId
      title: AssociateWirelessDeviceWithMulticastGroupRequest
      type: object
    ThingArn:
      type: string
    AssociateWirelessDeviceWithThingRequest:
      example:
        ThingArn: ""
      properties:
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          - description: The ARN of the thing to associate with the wireless device.
      required:
      - ThingArn
      title: AssociateWirelessDeviceWithThingRequest
      type: object
    IotCertificateId:
      maxLength: 4096
      minLength: 1
      type: string
    AssociateWirelessGatewayWithCertificateRequest:
      example:
        IotCertificateId: ""
      properties:
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          - description: The ID of the certificate to associate with the wireless
              gateway.
      required:
      - IotCertificateId
      title: AssociateWirelessGatewayWithCertificateRequest
      type: object
    AssociateWirelessGatewayWithThingRequest:
      example:
        ThingArn: ""
      properties:
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          - description: The ARN of the thing to associate with the wireless gateway.
      required:
      - ThingArn
      title: AssociateWirelessGatewayWithThingRequest
      type: object
    AutoCreateTasks:
      type: boolean
    BCCH:
      maximum: 1023
      minimum: 0
      type: integer
    BSIC:
      maximum: 63
      minimum: 0
      type: integer
    BaseLat:
      format: float
      maximum: 90
      minimum: -90
      type: number
    BaseLng:
      format: float
      maximum: 180
      minimum: -180
      type: number
    BaseStationId:
      maximum: 65535
      minimum: 0
      type: integer
    BatteryLevel:
      description: Sidewalk device battery level.
      enum:
      - normal
      - low
      - critical
      type: string
    BeaconingDataRate:
      maximum: 15
      minimum: 0
      type: integer
    BeaconingFrequencies:
      items:
        $ref: '#/components/schemas/BeaconingFrequency'
      maxItems: 10
      minItems: 0
      type: array
    BeaconingFrequency:
      maximum: 1000000000
      minimum: 100000000
      type: integer
    CancelMulticastGroupSessionRequest:
      properties: {}
      title: CancelMulticastGroupSessionRequest
      type: object
    CdmaChannel:
      maximum: 4095
      minimum: 0
      type: integer
    CdmaObj:
      description: CDMA (Code-division multiple access) object.
      properties:
        SystemId:
          allOf:
          - $ref: '#/components/schemas/SystemId'
          - description: CDMA system ID (SID).
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/NetworkId'
          - description: CDMA network ID (NID).
        BaseStationId:
          allOf:
          - $ref: '#/components/schemas/BaseStationId'
          - description: CDMA base station ID (BSID).
        RegistrationZone:
          allOf:
          - $ref: '#/components/schemas/RegistrationZone'
          - description: CDMA registration zone (RZ).
        CdmaLocalId:
          $ref: '#/components/schemas/CdmaObj_CdmaLocalId'
        PilotPower:
          allOf:
          - $ref: '#/components/schemas/PilotPower'
          - description: "Transmit power level of the pilot signal, measured in dBm\
              \ (decibel-milliwatts)."
        BaseLat:
          allOf:
          - $ref: '#/components/schemas/BaseLat'
          - description: CDMA base station latitude in degrees.
        BaseLng:
          allOf:
          - $ref: '#/components/schemas/BaseLng'
          - description: CDMA base station longitude in degrees.
        CdmaNmr:
          allOf:
          - $ref: '#/components/schemas/CdmaNmrList'
          - description: CDMA network measurement reports.
      required:
      - BaseStationId
      - NetworkId
      - SystemId
      type: object
    PnOffset:
      maximum: 511
      minimum: 0
      type: integer
    CdmaLocalId:
      description: "CDMA local ID information, which corresponds to the local identification\
        \ parameters of a CDMA cell."
      properties:
        PnOffset:
          allOf:
          - $ref: '#/components/schemas/PnOffset'
          - description: "Pseudo-noise offset, which is a characteristic of the signal\
              \ from a cell on a radio tower."
        CdmaChannel:
          allOf:
          - $ref: '#/components/schemas/CdmaChannel'
          - description: CDMA channel information.
      required:
      - CdmaChannel
      - PnOffset
      type: object
    CdmaNmrObj:
      description: CDMA object for network measurement reports.
      properties:
        PnOffset:
          allOf:
          - $ref: '#/components/schemas/PnOffset'
          - description: "Pseudo-noise offset, which is a characteristic of the signal\
              \ from a cell on a radio tower."
        CdmaChannel:
          allOf:
          - $ref: '#/components/schemas/CdmaChannel'
          - description: CDMA channel information.
        PilotPower:
          allOf:
          - $ref: '#/components/schemas/PilotPower'
          - description: "Transmit power level of the pilot signal, measured in dBm\
              \ (decibel-milliwatts)."
        BaseStationId:
          allOf:
          - $ref: '#/components/schemas/BaseStationId'
          - description: CDMA base station ID (BSID).
      required:
      - CdmaChannel
      - PnOffset
      type: object
    CdmaNmrList:
      items:
        $ref: '#/components/schemas/CdmaNmrObj'
      maxItems: 32
      minItems: 1
      type: array
    PilotPower:
      maximum: -49
      minimum: -142
      type: integer
    SystemId:
      maximum: 32767
      minimum: 1
      type: integer
    NetworkId:
      maximum: 65535
      minimum: 0
      type: integer
    RegistrationZone:
      maximum: 4095
      minimum: 0
      type: integer
    CellParams:
      maximum: 127
      minimum: 0
      type: integer
    CellTowers:
      description: The cell towers that were used to perform the measurements.
      properties:
        Gsm:
          allOf:
          - $ref: '#/components/schemas/GsmList'
          - description: GSM object information.
        Wcdma:
          allOf:
          - $ref: '#/components/schemas/WcdmaList'
          - description: WCDMA object information.
        Tdscdma:
          allOf:
          - $ref: '#/components/schemas/TdscdmaList'
          - description: TD-SCDMA object information.
        Lte:
          allOf:
          - $ref: '#/components/schemas/LteList'
          - description: LTE object information.
        Cdma:
          allOf:
          - $ref: '#/components/schemas/CdmaList'
          - description: CDMA object information.
      type: object
    SigningAlg:
      description: The certificate chain algorithm provided by sidewalk.
      enum:
      - Ed25519
      - P256r1
      type: string
    CertificateValue:
      description: Certificate value.
      maxLength: 2048
      minLength: 0
      type: string
    CertificateList:
      description: List of sidewalk certificates.
      properties:
        SigningAlg:
          allOf:
          - $ref: '#/components/schemas/SigningAlg'
          - description: The certificate chain algorithm provided by sidewalk.
        Value:
          allOf:
          - $ref: '#/components/schemas/CertificateValue'
          - description: The value of the chosen sidewalk certificate.
      required:
      - SigningAlg
      - Value
      type: object
    CertificatePEM:
      maxLength: 4096
      minLength: 1
      pattern: "[^-A-Za-z0-9\\+/=]\\|=[^=]\\|=\\{3,\\}$\\{1,4096\\}"
      type: string
    ChannelMask:
      maxLength: 2048
      type: string
    ConnectionStatus:
      enum:
      - Connected
      - Disconnected
      type: string
    ConnectionStatusEventConfiguration:
      description: Connection status event configuration object for enabling or disabling
        topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN'
        WirelessGatewayIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless gateway ID connection status
              event topic is enabled or disabled.
      type: object
    ConnectionStatusResourceTypeEventConfiguration:
      description: Connection status resource type event configuration object for
        enabling or disabling topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_ConnectionStatus_LoRaWAN'
      type: object
    Crc:
      maximum: 4294967295
      minimum: 1
      type: integer
    ExpressionType:
      enum:
      - RuleName
      - MqttTopic
      type: string
    Expression:
      maxLength: 2048
      type: string
    Description:
      description: The description of the new resource.
      maxLength: 2048
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      type: string
    CreateDestinationRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        Expression: ""
        ExpressionType: ""
        RoleArn: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the new resource.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the new resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new destination. Tags are metadata
              that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
      required:
      - Expression
      - ExpressionType
      - Name
      - RoleArn
      title: CreateDestinationRequest
      type: object
    DestinationArn:
      type: string
    DeviceProfileName:
      maxLength: 256
      type: string
    LoRaWANDeviceProfile:
      description: LoRaWANDeviceProfile object.
      properties:
        SupportsClassB:
          allOf:
          - $ref: '#/components/schemas/SupportsClassB'
          - description: The SupportsClassB value.
        ClassBTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassBTimeout'
          - description: The ClassBTimeout value.
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          - description: The PingSlotPeriod value.
        PingSlotDr:
          allOf:
          - $ref: '#/components/schemas/PingSlotDr'
          - description: The PingSlotDR value.
        PingSlotFreq:
          allOf:
          - $ref: '#/components/schemas/PingSlotFreq'
          - description: The PingSlotFreq value.
        SupportsClassC:
          allOf:
          - $ref: '#/components/schemas/SupportsClassC'
          - description: The SupportsClassC value.
        ClassCTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassCTimeout'
          - description: The ClassCTimeout value.
        MacVersion:
          allOf:
          - $ref: '#/components/schemas/MacVersion'
          - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with
              this device profile.
        RegParamsRevision:
          allOf:
          - $ref: '#/components/schemas/RegParamsRevision'
          - description: The version of regional parameters.
        RxDelay1:
          allOf:
          - $ref: '#/components/schemas/RxDelay1'
          - description: The RXDelay1 value.
        RxDrOffset1:
          allOf:
          - $ref: '#/components/schemas/RxDrOffset1'
          - description: The RXDROffset1 value.
        RxDataRate2:
          allOf:
          - $ref: '#/components/schemas/RxDataRate2'
          - description: The RXDataRate2 value.
        RxFreq2:
          allOf:
          - $ref: '#/components/schemas/RxFreq2'
          - description: The RXFreq2 value.
        FactoryPresetFreqsList:
          allOf:
          - $ref: '#/components/schemas/FactoryPresetFreqsList'
          - description: The list of values that make up the FactoryPresetFreqs value.
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/MaxEirp'
          - description: The MaxEIRP value.
        MaxDutyCycle:
          allOf:
          - $ref: '#/components/schemas/MaxDutyCycle'
          - description: The MaxDutyCycle value.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          - description: The frequency band (RFRegion) value.
        SupportsJoin:
          allOf:
          - $ref: '#/components/schemas/SupportsJoin'
          - description: The SupportsJoin value.
        Supports32BitFCnt:
          allOf:
          - $ref: '#/components/schemas/Supports32BitFCnt'
          - description: The Supports32BitFCnt value.
      type: object
    SidewalkCreateDeviceProfile:
      description: Sidewalk object for creating a device profile.
      properties: {}
      type: object
    CreateDeviceProfileRequest:
      example:
        ClientRequestToken: ""
        LoRaWAN:
          PingSlotPeriod: ""
          ClassCTimeout: ""
          RxFreq2: ""
          RfRegion: ""
          ClassBTimeout: ""
          RxDelay1: ""
          SupportsClassC: ""
          SupportsClassB: ""
          RxDrOffset1: ""
          MaxEirp: ""
          FactoryPresetFreqsList: ""
          SupportsJoin: ""
          PingSlotDr: ""
          MacVersion: ""
          PingSlotFreq: ""
          RegParamsRevision: ""
          RxDataRate2: ""
          Supports32BitFCnt: ""
          MaxDutyCycle: ""
        Sidewalk: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          - description: The name of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/CreateDeviceProfileRequest_LoRaWAN'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new device profile. Tags are metadata
              that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkCreateDeviceProfile'
          - description: The Sidewalk-related information for creating the Sidewalk
              device profile.
      title: CreateDeviceProfileRequest
      type: object
    DeviceProfileArn:
      type: string
    FuotaTaskName:
      description: The name of a FUOTA task.
      maxLength: 256
      type: string
    LoRaWANFuotaTask:
      description: The LoRaWAN information used with a FUOTA task.
      example:
        RfRegion: EU868
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
      type: object
    FirmwareUpdateImage:
      description: The S3 URI points to a firmware update image that is to be used
        with a FUOTA task.
      maxLength: 4096
      minLength: 1
      type: string
    FirmwareUpdateRole:
      description: The firmware update role that is to be used with a FUOTA task.
      maxLength: 2048
      minLength: 1
      type: string
    RedundancyPercent:
      description: "The percentage of the added fragments that are redundant. For\
        \ example, if the size of the firmware image file is 100 bytes and the fragment\
        \ size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the\
        \ final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15."
      maximum: 100
      minimum: 0
      type: integer
    FragmentSizeBytes:
      description: The size of each fragment in bytes. This parameter is supported
        only for FUOTA tasks with multicast groups.
      minimum: 1
      type: integer
    FragmentIntervalMS:
      description: "<p>The interval for sending fragments in milliseconds, rounded\
        \ to the nearest second.</p> <note> <p>This interval only determines the timing\
        \ for when the Cloud sends down the fragments to yor device. There can be\
        \ a delay for when your device will receive these fragments. This delay depends\
        \ on the device's class and the communication delay with the cloud.</p> </note>"
      minimum: 1
      type: integer
    CreateFuotaTaskRequest:
      example:
        FragmentSizeBytes: 1
        ClientRequestToken: ClientRequestToken
        FirmwareUpdateImage: FirmwareUpdateImage
        Description: Description
        LoRaWAN:
          RfRegion: EU868
        FirmwareUpdateRole: FirmwareUpdateRole
        FragmentIntervalMS: 1
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        RedundancyPercent: 8
        Name: Name
      properties:
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTask'
        FirmwareUpdateImage:
          description: The S3 URI points to a firmware update image that is to be
            used with a FUOTA task.
          maxLength: 4096
          minLength: 1
          type: string
        FirmwareUpdateRole:
          description: The firmware update role that is to be used with a FUOTA task.
          maxLength: 2048
          minLength: 1
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        RedundancyPercent:
          description: "The percentage of the added fragments that are redundant.\
            \ For example, if the size of the firmware image file is 100 bytes and\
            \ the fragment size is 10 bytes, with <code>RedundancyPercent</code> set\
            \ to 50(%), the final number of encoded fragments is (100 / 10) + (100\
            \ / 10 * 50%) = 15."
          maximum: 100
          minimum: 0
          type: integer
        FragmentSizeBytes:
          description: The size of each fragment in bytes. This parameter is supported
            only for FUOTA tasks with multicast groups.
          minimum: 1
          type: integer
        FragmentIntervalMS:
          description: "<p>The interval for sending fragments in milliseconds, rounded\
            \ to the nearest second.</p> <note> <p>This interval only determines the\
            \ timing for when the Cloud sends down the fragments to yor device. There\
            \ can be a delay for when your device will receive these fragments. This\
            \ delay depends on the device's class and the communication delay with\
            \ the cloud.</p> </note>"
          minimum: 1
          type: integer
      required:
      - FirmwareUpdateImage
      - FirmwareUpdateRole
      title: CreateFuotaTaskRequest
      type: object
    FuotaTaskArn:
      description: The arn of a FUOTA task.
      maxLength: 128
      type: string
    MulticastGroupName:
      description: The name of the multicast group.
      maxLength: 256
      type: string
    LoRaWANMulticast:
      description: The LoRaWAN information that is to be used with the multicast group.
      example:
        RfRegion: EU868
        DlClass: ClassB
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
        DlClass:
          $ref: '#/components/schemas/DlClass'
      type: object
    CreateMulticastGroupRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        LoRaWAN:
          RfRegion: EU868
          DlClass: ClassB
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: Name
      properties:
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the multicast group.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticast'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - LoRaWAN
      title: CreateMulticastGroupRequest
      type: object
    MulticastGroupArn:
      description: The arn of the multicast group.
      maxLength: 128
      type: string
    NetworkAnalyzerConfigurationName:
      description: Name of the network analyzer configuration.
      maxLength: 1024
      minLength: 1
      pattern: "[a-zA-Z0-9-_]+"
      type: string
    TraceContent:
      description: Trace content for your wireless gateway and wireless device resources.
      example:
        WirelessDeviceFrameInfo: ENABLED
        MulticastFrameInfo: ENABLED
        LogLevel: INFO
      properties:
        WirelessDeviceFrameInfo:
          $ref: '#/components/schemas/WirelessDeviceFrameInfo'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        MulticastFrameInfo:
          $ref: '#/components/schemas/MulticastFrameInfo'
      type: object
    WirelessDeviceList:
      items:
        $ref: '#/components/schemas/WirelessDeviceId'
      maxItems: 250
      minItems: 0
      type: array
    WirelessGatewayList:
      items:
        $ref: '#/components/schemas/WirelessGatewayId'
      type: array
    NetworkAnalyzerMulticastGroupList:
      items:
        $ref: '#/components/schemas/MulticastGroupId'
      maxItems: 10
      minItems: 0
      type: array
    CreateNetworkAnalyzerConfigurationRequest:
      example:
        ClientRequestToken: ClientRequestToken
        Description: Description
        TraceContent:
          WirelessDeviceFrameInfo: ENABLED
          MulticastFrameInfo: ENABLED
          LogLevel: INFO
        WirelessGateways: ""
        WirelessDevices: ""
        MulticastGroups: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        Name: Name
      properties:
        Name:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevices:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          - description: Wireless device resources to add to the network analyzer
              configuration. Provide the <code>WirelessDeviceId</code> of the resource
              to add in the input array.
        WirelessGateways:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          - description: Wireless gateway resources to add to the network analyzer
              configuration. Provide the <code>WirelessGatewayId</code> of the resource
              to add in the input array.
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        MulticastGroups:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          - description: Multicast Group resources to add to the network analyzer
              configruation. Provide the <code>MulticastGroupId</code> of the resource
              to add in the input array.
      required:
      - Name
      title: CreateNetworkAnalyzerConfigurationRequest
      type: object
    NetworkAnalyzerConfigurationArn:
      maxLength: 1124
      type: string
    ServiceProfileName:
      maxLength: 256
      type: string
    LoRaWANServiceProfile:
      description: LoRaWANServiceProfile object.
      properties:
        AddGwMetadata:
          allOf:
          - $ref: '#/components/schemas/AddGwMetadata'
          - description: The AddGWMetaData value.
        DrMin:
          allOf:
          - $ref: '#/components/schemas/DrMinBox'
          - description: The DrMin value.
        DrMax:
          allOf:
          - $ref: '#/components/schemas/DrMaxBox'
          - description: The DrMax value.
        PrAllowed:
          allOf:
          - $ref: '#/components/schemas/PrAllowed'
          - description: The PRAllowed value that describes whether passive roaming
              is allowed.
        RaAllowed:
          allOf:
          - $ref: '#/components/schemas/RaAllowed'
          - description: The RAAllowed value that describes whether roaming activation
              is allowed.
      type: object
    CreateServiceProfileRequest:
      example:
        ClientRequestToken: ""
        LoRaWAN:
          AddGwMetadata: ""
          DrMax: ""
          DrMin: ""
          PrAllowed: ""
          RaAllowed: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          - description: The name of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/CreateServiceProfileRequest_LoRaWAN'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new service profile. Tags are metadata
              that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
      title: CreateServiceProfileRequest
      type: object
    ServiceProfileArn:
      type: string
    WirelessDeviceType:
      enum:
      - Sidewalk
      - LoRaWAN
      type: string
    WirelessDeviceName:
      maxLength: 256
      type: string
    LoRaWANDevice:
      description: LoRaWAN object for create functions.
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          - description: The DevEUI value.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile for the new wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
        OtaaV1_1:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_OtaaV1_1'
        OtaaV1_0_x:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_OtaaV1_0_x'
        AbpV1_1:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_AbpV1_1'
        AbpV1_0_x:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_AbpV1_0_x'
        FPorts:
          $ref: '#/components/schemas/FPorts'
      type: object
    PositioningConfigStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    SidewalkCreateWirelessDevice:
      description: Sidewalk object for creating a wireless device.
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the Sidewalk device profile.
      type: object
    CreateWirelessDeviceRequest:
      example:
        ClientRequestToken: ""
        Positioning: ""
        Type: ""
        Description: ""
        LoRaWAN:
          FPorts:
            Multicast: 134
            Positioning:
              Gnss: 52
              Stream: 126
              ClockSync: 133
            Applications: ""
            Fuota: 18
            ClockSync: 33
          OtaaV1_0_x:
            AppEui: ""
            GenAppKey: ""
            AppKey: ""
          DeviceProfileId: ""
          OtaaV1_1:
            NwkKey: ""
            AppKey: ""
            JoinEui: ""
          AbpV1_0_x:
            FCntStart: ""
            SessionKeys:
              AppSKey: ""
              NwkSKey: ""
            DevAddr: ""
          DevEui: ""
          ServiceProfileId: ""
          AbpV1_1:
            FCntStart: ""
            SessionKeys:
              FNwkSIntKey: ""
              AppSKey: ""
              SNwkSIntKey: ""
              NwkSEncKey: ""
            DevAddr: ""
        DestinationName: ""
        Sidewalk:
          DeviceProfileId: ""
        Tags: ""
        Name: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          - description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          - description: The name of the new resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the new resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the destination to assign to the new wireless
              device.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessDeviceRequest_LoRaWAN'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new wireless device. Tags are metadata
              that you can use to manage a resource.
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          - description: "FPort values for the GNSS, stream, and ClockSync functions\
              \ of the positioning information."
        Sidewalk:
          $ref: '#/components/schemas/CreateWirelessDeviceRequest_Sidewalk'
      required:
      - DestinationName
      - Type
      title: CreateWirelessDeviceRequest
      type: object
    WirelessDeviceArn:
      type: string
    WirelessGatewayName:
      maxLength: 256
      type: string
    LoRaWANGateway:
      description: LoRaWANGateway object.
      properties:
        GatewayEui:
          allOf:
          - $ref: '#/components/schemas/GatewayEui'
          - description: The gateway's EUI value.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          - description: The frequency band (RFRegion) value.
        JoinEuiFilters:
          description: A list of JoinEuiRange used by LoRa gateways to filter LoRa
            frames.
          items:
            $ref: '#/components/schemas/JoinEuiRange'
          maxItems: 3
          minItems: 0
          type: array
        NetIdFilters:
          description: A list of NetId values that are used by LoRa gateways to filter
            the uplink frames.
          items:
            $ref: '#/components/schemas/NetId'
          maxItems: 10
          minItems: 0
          type: array
        SubBands:
          description: A list of integer indicating which sub bands are supported
            by LoRa gateway.
          items:
            $ref: '#/components/schemas/SubBand'
          maxItems: 8
          minItems: 0
          type: array
        Beaconing:
          $ref: '#/components/schemas/CreateWirelessGateway_request_LoRaWAN_Beaconing'
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/GatewayMaxEirp'
          - description: The MaxEIRP value.
      type: object
    CreateWirelessGatewayRequest:
      example:
        ClientRequestToken: ""
        Description: ""
        LoRaWAN:
          RfRegion: ""
          NetIdFilters:
          - null
          - null
          - null
          - null
          - null
          MaxEirp: ""
          JoinEuiFilters:
          - - null
            - null
          - - null
            - null
          - - null
            - null
          Beaconing:
            DataRate: ""
            Frequencies: ""
          SubBands:
          - null
          - null
          - null
          - null
          - null
          GatewayEui: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          - description: The name of the new resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the new resource.
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessGatewayRequest_LoRaWAN'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new wireless gateway. Tags are
              metadata that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
      required:
      - LoRaWAN
      title: CreateWirelessGatewayRequest
      type: object
    WirelessGatewayArn:
      type: string
    WirelessGatewayTaskName:
      maxLength: 2048
      minLength: 1
      type: string
    UpdateWirelessGatewayTaskCreate:
      description: UpdateWirelessGatewayTaskCreate object.
      properties:
        UpdateDataSource:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          - description: The link to the S3 bucket.
        UpdateDataRole:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          - description: The IAM role used to read data from the S3 bucket.
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinition_request_Update_LoRaWAN'
      type: object
    CreateWirelessGatewayTaskDefinitionRequest:
      example:
        AutoCreateTasks: ""
        ClientRequestToken: ""
        Update:
          LoRaWAN:
            UpdateSignature: ""
            SigKeyCrc: ""
            UpdateVersion:
              Station: ""
              Model: ""
              PackageVersion: ""
            CurrentVersion:
              Station: ""
              Model: ""
              PackageVersion: ""
          UpdateDataSource: ""
          UpdateDataRole: ""
        Tags: ""
        Name: ""
      properties:
        AutoCreateTasks:
          allOf:
          - $ref: '#/components/schemas/AutoCreateTasks'
          - description: "Whether to automatically create tasks using this task definition\
              \ for all gateways with the specified current version. If <code>false</code>,\
              \ the task must me created by calling <code>CreateWirelessGatewayTask</code>."
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskName'
          - description: The name of the new resource.
        Update:
          $ref: '#/components/schemas/GetWirelessGatewayTaskDefinitionResponse_Update'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: "Each resource must have a unique client request token. If\
              \ you try to create a new resource with the same token as a resource\
              \ that already exists, an exception occurs. If you omit this value,\
              \ AWS SDKs will automatically generate a unique client request. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the specified resource. Tags are metadata
              that you can use to manage a resource.
      required:
      - AutoCreateTasks
      title: CreateWirelessGatewayTaskDefinitionRequest
      type: object
    WirelessGatewayTaskDefinitionId:
      maxLength: 36
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    WirelessGatewayTaskDefinitionArn:
      type: string
    CreateWirelessGatewayTaskRequest:
      example:
        WirelessGatewayTaskDefinitionId: ""
      properties:
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          - description: The ID of the WirelessGatewayTaskDefinition.
      required:
      - WirelessGatewayTaskDefinitionId
      title: CreateWirelessGatewayTaskRequest
      type: object
    WirelessGatewayTaskStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - FIRST_RETRY
      - SECOND_RETRY
      - COMPLETED
      - FAILED
      type: string
    CreatedAt:
      description: Created at timestamp for the resource.
      format: date-time
      type: string
    CreationDate:
      format: date-time
      type: string
    CreationTime:
      format: date-time
      type: string
    DakCertificateId:
      maxLength: 256
      type: string
    MaxAllowedSignature:
      type: integer
    FactorySupport:
      type: boolean
    DeviceTypeId:
      maxLength: 2048
      type: string
    DakCertificateMetadata:
      description: The device attestation key (DAK) information.
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/DakCertificateId'
          - description: The certificate ID for the DAK.
        MaxAllowedSignature:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedSignature'
          - description: The maximum number of signatures that the DAK can sign. A
              value of <code>-1</code> indicates that there's no device limit.
        FactorySupport:
          allOf:
          - $ref: '#/components/schemas/FactorySupport'
          - description: Whether factory support has been enabled.
        ApId:
          allOf:
          - $ref: '#/components/schemas/ApId'
          - description: The advertised product ID (APID) that's used for pre-production
              and production applications.
        DeviceTypeId:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeId'
          - description: The device type ID that's used for prototyping applications.
      required:
      - CertificateId
      type: object
    DakCertificateMetadataList:
      items:
        $ref: '#/components/schemas/DakCertificateMetadata'
      type: array
    DeleteDestinationRequest:
      properties: {}
      title: DeleteDestinationRequest
      type: object
    DeleteDeviceProfileRequest:
      properties: {}
      title: DeleteDeviceProfileRequest
      type: object
    DeleteFuotaTaskRequest:
      properties: {}
      title: DeleteFuotaTaskRequest
      type: object
    DeleteMulticastGroupRequest:
      properties: {}
      title: DeleteMulticastGroupRequest
      type: object
    DeleteNetworkAnalyzerConfigurationRequest:
      properties: {}
      title: DeleteNetworkAnalyzerConfigurationRequest
      type: object
    MessageId:
      type: string
    DeleteQueuedMessagesRequest:
      properties: {}
      title: DeleteQueuedMessagesRequest
      type: object
    DeleteServiceProfileRequest:
      properties: {}
      title: DeleteServiceProfileRequest
      type: object
    ImportTaskId:
      maxLength: 256
      type: string
    DeleteWirelessDeviceImportTaskRequest:
      properties: {}
      title: DeleteWirelessDeviceImportTaskRequest
      type: object
    DeleteWirelessDeviceRequest:
      properties: {}
      title: DeleteWirelessDeviceRequest
      type: object
    DeleteWirelessGatewayRequest:
      properties: {}
      title: DeleteWirelessGatewayRequest
      type: object
    DeleteWirelessGatewayTaskDefinitionRequest:
      properties: {}
      title: DeleteWirelessGatewayTaskDefinitionRequest
      type: object
    DeleteWirelessGatewayTaskRequest:
      properties: {}
      title: DeleteWirelessGatewayTaskRequest
      type: object
    Identifier:
      maxLength: 256
      type: string
    DeregisterWirelessDeviceRequest:
      properties: {}
      title: DeregisterWirelessDeviceRequest
      type: object
    Destinations:
      description: Describes a destination.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the resource.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
      type: object
    DestinationList:
      items:
        $ref: '#/components/schemas/Destinations'
      type: array
    DevStatusReqFreq:
      maximum: 2147483647
      minimum: 0
      type: integer
    DeviceCertificateList:
      description: List of device certificate chain.
      items:
        $ref: '#/components/schemas/CertificateList'
      type: array
    DeviceCreationFileList:
      items:
        $ref: '#/components/schemas/DeviceCreationFile'
      type: array
    DeviceName:
      type: string
    DeviceProfile:
      description: Describes a device profile.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          - description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile.
      type: object
    DeviceProfileList:
      items:
        $ref: '#/components/schemas/DeviceProfile'
      type: array
    DeviceProfileType:
      enum:
      - Sidewalk
      - LoRaWAN
      type: string
    DeviceRegistrationStateEventConfiguration:
      description: Device registration state event configuration object for enabling
        and disabling relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_DeviceRegistrationState_Sidewalk'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID device registration
              state event topic is enabled or disabled.
      type: object
    DeviceRegistrationStateResourceTypeEventConfiguration:
      description: Device registration state resource type event configuration object
        for enabling or disabling topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_DeviceRegistrationState_Sidewalk'
      type: object
    DeviceState:
      description: Device state defines the device status of sidewalk device.
      enum:
      - Provisioned
      - RegisteredNotSeen
      - RegisteredReachable
      - RegisteredUnreachable
      type: string
    PartnerAccountId:
      maxLength: 256
      type: string
    PartnerType:
      enum:
      - Sidewalk
      type: string
    DisassociateAwsAccountFromPartnerAccountRequest:
      properties: {}
      title: DisassociateAwsAccountFromPartnerAccountRequest
      type: object
    DisassociateMulticastGroupFromFuotaTaskRequest:
      properties: {}
      title: DisassociateMulticastGroupFromFuotaTaskRequest
      type: object
    DisassociateWirelessDeviceFromFuotaTaskRequest:
      properties: {}
      title: DisassociateWirelessDeviceFromFuotaTaskRequest
      type: object
    DisassociateWirelessDeviceFromMulticastGroupRequest:
      properties: {}
      title: DisassociateWirelessDeviceFromMulticastGroupRequest
      type: object
    DisassociateWirelessDeviceFromThingRequest:
      properties: {}
      title: DisassociateWirelessDeviceFromThingRequest
      type: object
    DisassociateWirelessGatewayFromCertificateRequest:
      properties: {}
      title: DisassociateWirelessGatewayFromCertificateRequest
      type: object
    DisassociateWirelessGatewayFromThingRequest:
      properties: {}
      title: DisassociateWirelessGatewayFromThingRequest
      type: object
    DlBucketSize:
      maximum: 2147483647
      minimum: 0
      type: integer
    DlRate:
      maximum: 2147483647
      minimum: 0
      type: integer
    DlRatePolicy:
      maxLength: 256
      type: string
    Double:
      format: double
      type: number
    DownlinkFrequency:
      maximum: 1000000000
      minimum: 100000000
      type: integer
    DownlinkMode:
      enum:
      - SEQUENTIAL
      - CONCURRENT
      - USING_UPLINK_GATEWAY
      type: string
    TransmitMode:
      maximum: 1
      minimum: 0
      type: integer
    ISODateTimeString:
      pattern: "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\\
        d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\\
        s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\\
        d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
      type: string
    DownlinkQueueMessage:
      description: The message in the downlink queue.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: " The message ID assigned by IoT Wireless to each downlink\
              \ message, which helps identify the message."
        TransmitMode:
          allOf:
          - $ref: '#/components/schemas/TransmitMode'
          - description: The transmit mode to use for sending data to the wireless
              device. This can be <code>0</code> for UM (unacknowledge mode) or <code>1</code>
              for AM (acknowledge mode).
        ReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: The time at which Iot Wireless received the downlink message.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANSendDataToDevice'
      type: object
    DownlinkQueueMessagesList:
      items:
        $ref: '#/components/schemas/DownlinkQueueMessage'
      type: array
    DrMax:
      maximum: 15
      minimum: 0
      type: integer
    DrMin:
      maximum: 15
      minimum: 0
      type: integer
    EARFCN:
      maximum: 262143
      minimum: 0
      type: integer
    EndPoint:
      maxLength: 256
      minLength: 1
      type: string
    EutranCid:
      maximum: 268435455
      minimum: 0
      type: integer
    Event:
      description: Sidewalk device status notification.
      enum:
      - discovered
      - lost
      - ack
      - nack
      - passthrough
      type: string
    IdentifierType:
      enum:
      - PartnerAccountId
      - DevEui
      - GatewayEui
      - WirelessDeviceId
      - WirelessGatewayId
      type: string
    EventNotificationPartnerType:
      enum:
      - Sidewalk
      type: string
    EventNotificationItemConfigurations:
      description: Object of all event configurations and the status of the event
        topics.
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/EventNotificationItemConfigurations_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/EventNotificationItemConfigurations_Proximity'
        Join:
          $ref: '#/components/schemas/EventNotificationItemConfigurations_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/EventNotificationItemConfigurations_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/EventNotificationItemConfigurations_MessageDeliveryStatus'
      type: object
    EventConfigurationItem:
      description: Event configuration object for a single resource.
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: Resource identifier opted in for event messaging.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/IdentifierType'
          - description: Identifier type of the particular resource identifier for
              event configuration.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/EventNotificationPartnerType'
          - description: Partner type of the resource if the identifier type is PartnerAccountId.
        Events:
          $ref: '#/components/schemas/EventNotificationItemConfigurations'
      type: object
    EventConfigurationsList:
      items:
        $ref: '#/components/schemas/EventConfigurationItem'
      type: array
    ProximityEventConfiguration:
      description: Proximity event configuration object for enabling and disabling
        relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Proximity_Sidewalk'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID proximity event topic
              is enabled or disabled.
      type: object
    JoinEventConfiguration:
      description: Join event configuration object for enabling or disabling topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Join_LoRaWAN'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID join event topic is
              enabled or disabled.
      type: object
    MessageDeliveryStatusEventConfiguration:
      description: Message delivery status event configuration object for enabling
        and disabling relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID message delivery status
              event topic is enabled or disabled.
      type: object
    EventNotificationResourceType:
      enum:
      - SidewalkAccount
      - WirelessDevice
      - WirelessGateway
      type: string
    FNwkSIntKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    Positioning:
      description: The FPorts for the position information.
      properties:
        ClockSync:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        Stream:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
        Gnss:
          description: The Fport value.
          maximum: 223
          minimum: 1
          type: integer
      type: object
    PresetFreq:
      maximum: 16700000
      minimum: 1000000
      type: integer
    Fingerprint:
      format: password
      maxLength: 64
      minLength: 64
      pattern: "[a-fA-F0-9]{64}"
      type: string
    FuotaDeviceStatus:
      description: The status of a wireless device in a FUOTA task.
      enum:
      - Initial
      - Package_Not_Supported
      - FragAlgo_unsupported
      - Not_enough_memory
      - FragIndex_unsupported
      - Wrong_descriptor
      - SessionCnt_replay
      - MissingFrag
      - MemoryError
      - MICError
      - Successful
      type: string
    FuotaTask:
      description: A FUOTA task.
      example:
        Id: Id
        Arn: Arn
        Name: Name
      properties:
        Id:
          description: The ID of a FUOTA task.
          maxLength: 256
          type: string
        Arn:
          description: The arn of a FUOTA task.
          maxLength: 128
          type: string
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
      type: object
    FuotaTaskList:
      description: Lists the FUOTA tasks registered to your AWS account.
      items:
        $ref: '#/components/schemas/FuotaTask'
      type: array
    FuotaTaskStatus:
      description: The status of a FUOTA task.
      enum:
      - Pending
      - FuotaSession_Waiting
      - In_FuotaSession
      - FuotaDone
      - Delete_Waiting
      type: string
    GatewayListItem:
      description: Gateway list item object that specifies the frequency and list
        of gateways for which the downlink message should be sent.
      properties:
        GatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          - description: The ID of the wireless gateways that you want to add to the
              list of gateways when sending downlink messages.
        DownlinkFrequency:
          allOf:
          - $ref: '#/components/schemas/DownlinkFrequency'
          - description: The frequency to use for the gateways when sending a downlink
              message to the wireless device.
      required:
      - DownlinkFrequency
      - GatewayId
      type: object
    GatewayList:
      items:
        $ref: '#/components/schemas/GatewayListItem'
      type: array
    GenAppKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    GeoJsonPayload:
      type: string
    GeranCid:
      maximum: 65535
      minimum: 0
      type: integer
    GetDestinationRequest:
      properties: {}
      title: GetDestinationRequest
      type: object
    GetDeviceProfileRequest:
      properties: {}
      title: GetDeviceProfileRequest
      type: object
    SidewalkGetDeviceProfile:
      description: Gets information about a Sidewalk device profile.
      properties:
        ApplicationServerPublicKey:
          allOf:
          - $ref: '#/components/schemas/ApplicationServerPublicKey'
          - description: The Sidewalk application server public key.
        QualificationStatus:
          allOf:
          - $ref: '#/components/schemas/QualificationStatus'
          - description: Gets information about the certification status of a Sidewalk
              device profile.
        DakCertificateMetadata:
          allOf:
          - $ref: '#/components/schemas/DakCertificateMetadataList'
          - description: The DAK certificate information of the Sidewalk device profile.
      type: object
    GetEventConfigurationByResourceTypesRequest:
      properties: {}
      title: GetEventConfigurationByResourceTypesRequest
      type: object
    ProximityResourceTypeEventConfiguration:
      description: Proximity resource type event configuration object for enabling
        or disabling topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Proximity_Sidewalk'
      type: object
    JoinResourceTypeEventConfiguration:
      description: Join resource type event configuration object for enabling or disabling
        topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Join_LoRaWAN'
      type: object
    MessageDeliveryStatusResourceTypeEventConfiguration:
      description: Message delivery status resource type event configuration object
        for enabling or disabling relevant topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
      type: object
    GetFuotaTaskRequest:
      properties: {}
      title: GetFuotaTaskRequest
      type: object
    LoRaWANFuotaTaskGetInfo:
      description: The LoRaWAN information returned from getting a FUOTA task.
      example:
        RfRegion: RfRegion
        StartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        RfRegion:
          description: The frequency band (RFRegion) value.
          maxLength: 64
          type: string
        StartTime:
          description: Start time of a FUOTA task.
          format: date-time
          type: string
      type: object
    GetLogLevelsByResourceTypesRequest:
      properties: {}
      title: GetLogLevelsByResourceTypesRequest
      type: object
    WirelessGatewayLogOptionList:
      description: The list of wireless gateway log options.
      items:
        $ref: '#/components/schemas/WirelessGatewayLogOption'
      type: array
    WirelessDeviceLogOptionList:
      description: The list of wireless device log options.
      items:
        $ref: '#/components/schemas/WirelessDeviceLogOption'
      type: array
    GetMulticastGroupRequest:
      properties: {}
      title: GetMulticastGroupRequest
      type: object
    MulticastGroupStatus:
      description: The status of the multicast group.
      maxLength: 256
      type: string
    LoRaWANMulticastGet:
      description: The LoRaWAN information that is to be returned from getting multicast
        group information.
      example:
        NumberOfDevicesRequested: 0
        NumberOfDevicesInGroup: 6
        RfRegion: EU868
        DlClass: ClassB
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
        DlClass:
          $ref: '#/components/schemas/DlClass'
        NumberOfDevicesRequested:
          description: Number of devices that are requested to be associated with
            the multicast group.
          type: integer
        NumberOfDevicesInGroup:
          description: Number of devices that are associated to the multicast group.
          type: integer
      type: object
    GetMulticastGroupSessionRequest:
      properties: {}
      title: GetMulticastGroupSessionRequest
      type: object
    LoRaWANMulticastSession:
      description: The LoRaWAN information used with the multicast session.
      example:
        PingSlotPeriod: ""
        SessionTimeout: 25380
        DlDr: 1
        DlFreq: 642471056
        SessionStartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        DlDr:
          description: Downlink data rate.
          maximum: 15
          minimum: 0
          type: integer
        DlFreq:
          description: Downlink frequency.
          maximum: 1000000000
          minimum: 100000000
          type: integer
        SessionStartTime:
          description: Timestamp of when the multicast group session is to start.
          format: date-time
          type: string
        SessionTimeout:
          description: How long before a multicast group session is to timeout.
          maximum: 172800
          minimum: 60
          type: integer
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          - description: The PingSlotPeriod value.
      type: object
    GetNetworkAnalyzerConfigurationRequest:
      properties: {}
      title: GetNetworkAnalyzerConfigurationRequest
      type: object
    GetPartnerAccountRequest:
      properties: {}
      title: GetPartnerAccountRequest
      type: object
    SidewalkAccountInfoWithFingerprint:
      description: Information about a Sidewalk account.
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          - description: The Sidewalk Amazon ID.
        Fingerprint:
          allOf:
          - $ref: '#/components/schemas/Fingerprint'
          - description: The fingerprint of the Sidewalk application server private
              key.
        Arn:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountArn'
          - description: The Amazon Resource Name of the resource.
      type: object
    PositionResourceIdentifier:
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    PositionResourceType:
      enum:
      - WirelessDevice
      - WirelessGateway
      type: string
    GetPositionConfigurationRequest:
      deprecated: true
      description: This operation is no longer supported.
      properties: {}
      title: GetPositionConfigurationRequest
      type: object
    PositionSolverDetails:
      description: The wrapper for position solver details.
      properties:
        SemtechGnss:
          $ref: '#/components/schemas/PositionSolverDetails_SemtechGnss'
      type: object
    WiFiAccessPoints:
      items:
        $ref: '#/components/schemas/WiFiAccessPoint'
      type: array
    Ip:
      description: IP address used for resolving device location.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          - description: IP address information.
      required:
      - IpAddress
      type: object
    Gnss:
      description: Global navigation satellite system (GNSS) object used for positioning.
      properties:
        Payload:
          allOf:
          - $ref: '#/components/schemas/GnssNav'
          - description: "Payload that contains the GNSS scan result, or NAV message,\
              \ in hexadecimal notation."
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/GPST'
          - description: "Optional parameter that gives an estimate of the time when\
              \ the GNSS scan information is taken, in seconds GPS time (GPST). If\
              \ capture time is not specified, the local server time is used."
        CaptureTimeAccuracy:
          allOf:
          - $ref: '#/components/schemas/CaptureTimeAccuracy'
          - description: "Optional value that gives the capture time estimate accuracy,\
              \ in seconds. If capture time accuracy is not specified, default value\
              \ of 300 is used."
        AssistPosition:
          allOf:
          - $ref: '#/components/schemas/AssistPosition'
          - description: "Optional assistance position information, specified using\
              \ latitude and longitude values in degrees. The coordinates are inside\
              \ the WGS84 reference frame."
        AssistAltitude:
          allOf:
          - $ref: '#/components/schemas/Coordinate'
          - description: "Optional assistance altitude, which is the altitude of the\
              \ device at capture time, specified in meters above the WGS84 reference\
              \ ellipsoid."
        Use2DSolver:
          allOf:
          - $ref: '#/components/schemas/Use2DSolver'
          - description: "Optional parameter that forces 2D solve, which modifies\
              \ the positioning algorithm to a 2D solution problem. When this parameter\
              \ is specified, the assistance altitude should have an accuracy of at\
              \ least 10 meters."
      required:
      - Payload
      type: object
    GetPositionEstimateRequest:
      example:
        Gnss:
          CaptureTimeAccuracy: ""
          AssistPosition: ""
          CaptureTime: ""
          Payload: ""
          Use2DSolver: ""
          AssistAltitude: ""
        WiFiAccessPoints: ""
        Ip:
          IpAddress: ""
        Timestamp: ""
        CellTowers:
          Gsm: ""
          Wcdma: ""
          Cdma: ""
          Tdscdma: ""
          Lte: ""
      properties:
        WiFiAccessPoints:
          allOf:
          - $ref: '#/components/schemas/WiFiAccessPoints'
          - description: Retrieves an estimated device position by resolving WLAN
              measurement data. The position is resolved using HERE's Wi-Fi based
              solver.
        CellTowers:
          $ref: '#/components/schemas/GetPositionEstimateRequest_CellTowers'
        Ip:
          $ref: '#/components/schemas/GetPositionEstimateRequest_Ip'
        Gnss:
          $ref: '#/components/schemas/GetPositionEstimateRequest_Gnss'
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          - description: "Optional information that specifies the time when the position\
              \ information will be resolved. It uses the Unix timestamp format. If\
              \ not specified, the time at which the request was received will be\
              \ used."
      title: GetPositionEstimateRequest
      type: object
    GetPositionRequest:
      deprecated: true
      description: This operation is no longer supported.
      properties: {}
      title: GetPositionRequest
      type: object
    PositionCoordinate:
      items:
        $ref: '#/components/schemas/PositionCoordinateValue'
      type: array
    PositionSolverType:
      enum:
      - GNSS
      type: string
    PositionSolverProvider:
      enum:
      - Semtech
      type: string
    PositionSolverVersion:
      maxLength: 50
      minLength: 0
      type: string
    GetResourceEventConfigurationRequest:
      properties: {}
      title: GetResourceEventConfigurationRequest
      type: object
    ResourceIdentifier:
      description: "The identifier of the resource. For a Wireless Device, it is the\
        \ wireless device ID. For a wireless gateway, it is the wireless gateway ID."
      maxLength: 256
      type: string
    ResourceType:
      type: string
    GetResourceLogLevelRequest:
      properties: {}
      title: GetResourceLogLevelRequest
      type: object
    GetResourcePositionRequest:
      properties: {}
      title: GetResourcePositionRequest
      type: object
    WirelessGatewayServiceType:
      enum:
      - CUPS
      - LNS
      type: string
    GetServiceEndpointRequest:
      properties: {}
      title: GetServiceEndpointRequest
      type: object
    GetServiceProfileRequest:
      properties: {}
      title: GetServiceProfileRequest
      type: object
    LoRaWANGetServiceProfileInfo:
      description: LoRaWANGetServiceProfileInfo object.
      properties:
        UlRate:
          allOf:
          - $ref: '#/components/schemas/UlRate'
          - description: The ULRate value.
        UlBucketSize:
          allOf:
          - $ref: '#/components/schemas/UlBucketSize'
          - description: The ULBucketSize value.
        UlRatePolicy:
          allOf:
          - $ref: '#/components/schemas/UlRatePolicy'
          - description: The ULRatePolicy value.
        DlRate:
          allOf:
          - $ref: '#/components/schemas/DlRate'
          - description: The DLRate value.
        DlBucketSize:
          allOf:
          - $ref: '#/components/schemas/DlBucketSize'
          - description: The DLBucketSize value.
        DlRatePolicy:
          allOf:
          - $ref: '#/components/schemas/DlRatePolicy'
          - description: The DLRatePolicy value.
        AddGwMetadata:
          allOf:
          - $ref: '#/components/schemas/AddGwMetadata'
          - description: The AddGWMetaData value.
        DevStatusReqFreq:
          allOf:
          - $ref: '#/components/schemas/DevStatusReqFreq'
          - description: The DevStatusReqFreq value.
        ReportDevStatusBattery:
          allOf:
          - $ref: '#/components/schemas/ReportDevStatusBattery'
          - description: The ReportDevStatusBattery value.
        ReportDevStatusMargin:
          allOf:
          - $ref: '#/components/schemas/ReportDevStatusMargin'
          - description: The ReportDevStatusMargin value.
        DrMin:
          allOf:
          - $ref: '#/components/schemas/DrMin'
          - description: The DRMin value.
        DrMax:
          allOf:
          - $ref: '#/components/schemas/DrMax'
          - description: The DRMax value.
        ChannelMask:
          allOf:
          - $ref: '#/components/schemas/ChannelMask'
          - description: The ChannelMask value.
        PrAllowed:
          allOf:
          - $ref: '#/components/schemas/PrAllowed'
          - description: The PRAllowed value that describes whether passive roaming
              is allowed.
        HrAllowed:
          allOf:
          - $ref: '#/components/schemas/HrAllowed'
          - description: The HRAllowed value that describes whether handover roaming
              is allowed.
        RaAllowed:
          allOf:
          - $ref: '#/components/schemas/RaAllowed'
          - description: The RAAllowed value that describes whether roaming activation
              is allowed.
        NwkGeoLoc:
          allOf:
          - $ref: '#/components/schemas/NwkGeoLoc'
          - description: The NwkGeoLoc value.
        TargetPer:
          allOf:
          - $ref: '#/components/schemas/TargetPer'
          - description: The TargetPER value.
        MinGwDiversity:
          allOf:
          - $ref: '#/components/schemas/MinGwDiversity'
          - description: The MinGwDiversity value.
      type: object
    GetWirelessDeviceImportTaskRequest:
      properties: {}
      title: GetWirelessDeviceImportTaskRequest
      type: object
    ImportTaskArn:
      maxLength: 128
      type: string
    SidewalkGetStartImportInfo:
      description: Sidewalk-related information for devices in an import task that
        are being onboarded.
      properties:
        DeviceCreationFileList:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFileList'
          - description: List of Sidewalk devices that are added to the import task.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role that allows AWS IoT Wireless to access the CSV
              file in the S3 bucket.
      type: object
    ImportTaskStatus:
      enum:
      - INITIALIZING
      - INITIALIZED
      - PENDING
      - COMPLETE
      - FAILED
      - DELETING
      type: string
    StatusReason:
      type: string
    ImportedWirelessDeviceCount:
      type: integer
    WirelessDeviceIdType:
      enum:
      - WirelessDeviceId
      - DevEui
      - ThingName
      - SidewalkManufacturingSn
      type: string
    GetWirelessDeviceRequest:
      properties: {}
      title: GetWirelessDeviceRequest
      type: object
    ThingName:
      type: string
    SidewalkDevice:
      description: Sidewalk device object.
      properties:
        AmazonId:
          description: The Sidewalk Amazon ID.
          maxLength: 2048
          type: string
        SidewalkId:
          allOf:
          - $ref: '#/components/schemas/SidewalkId'
          - description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
          - $ref: '#/components/schemas/DeviceCertificateList'
          - description: The sidewalk device certificates for Ed25519 and P256r1.
        PrivateKeys:
          allOf:
          - $ref: '#/components/schemas/PrivateKeysList'
          - description: The Sidewalk device private keys that will be used for onboarding
              the device.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the Sidewalk device profile.
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/DakCertificateId'
          - description: The ID of the Sidewalk device profile.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceSidewalkStatus'
          - description: "The Sidewalk device status, such as provisioned or registered."
      type: object
    GetWirelessDeviceStatisticsRequest:
      properties: {}
      title: GetWirelessDeviceStatisticsRequest
      type: object
    LoRaWANDeviceMetadata:
      description: LoRaWAN device metatdata.
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          - description: The DevEUI value.
        FPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The FPort value.
        DataRate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The DataRate value.
        Frequency:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The device's channel frequency in Hz.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: The date and time of the metadata.
        Gateways:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayMetadataList'
          - description: Information about the gateways accessed by the device.
      type: object
    SidewalkDeviceMetadata:
      description: MetaData for Sidewalk device.
      properties:
        Rssi:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The RSSI value.
        BatteryLevel:
          allOf:
          - $ref: '#/components/schemas/BatteryLevel'
          - description: Sidewalk device battery level.
        Event:
          allOf:
          - $ref: '#/components/schemas/Event'
          - description: Sidewalk device status notification.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/DeviceState'
          - description: Device state defines the device status of sidewalk device.
      type: object
    GetWirelessGatewayCertificateRequest:
      properties: {}
      title: GetWirelessGatewayCertificateRequest
      type: object
    GetWirelessGatewayFirmwareInformationRequest:
      properties: {}
      title: GetWirelessGatewayFirmwareInformationRequest
      type: object
    LoRaWANGatewayCurrentVersion:
      description: LoRaWANGatewayCurrentVersion object.
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate_CurrentVersion'
      type: object
    WirelessGatewayIdType:
      enum:
      - GatewayEui
      - WirelessGatewayId
      - ThingName
      type: string
    GetWirelessGatewayRequest:
      properties: {}
      title: GetWirelessGatewayRequest
      type: object
    GetWirelessGatewayStatisticsRequest:
      properties: {}
      title: GetWirelessGatewayStatisticsRequest
      type: object
    GetWirelessGatewayTaskDefinitionRequest:
      properties: {}
      title: GetWirelessGatewayTaskDefinitionRequest
      type: object
    GetWirelessGatewayTaskRequest:
      properties: {}
      title: GetWirelessGatewayTaskRequest
      type: object
    LAC:
      maximum: 65535
      minimum: 1
      type: integer
    GlobalIdentity:
      description: Global identity information.
      properties:
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          - description: Location area code of the global identity.
        GeranCid:
          allOf:
          - $ref: '#/components/schemas/GeranCid'
          - description: GERAN (GSM EDGE Radio Access Network) cell global identifier.
      required:
      - GeranCid
      - Lac
      type: object
    GsmObj:
      description: GSM object.
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          - description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          - description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          - description: Location area code.
        GeranCid:
          allOf:
          - $ref: '#/components/schemas/GeranCid'
          - description: GERAN (GSM EDGE Radio Access Network) Cell Global Identifier.
        GsmLocalId:
          $ref: '#/components/schemas/GsmObj_GsmLocalId'
        GsmTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/GsmTimingAdvance'
          - description: "Timing advance value, which corresponds to the length of\
              \ time a signal takes to reach the base station from a mobile phone."
        RxLevel:
          allOf:
          - $ref: '#/components/schemas/RxLevel'
          - description: "Rx level, which is the received signal power, measured in\
              \ dBm (decibel-milliwatts)."
        GsmNmr:
          allOf:
          - $ref: '#/components/schemas/GsmNmrList'
          - description: GSM object for network measurement reports.
      required:
      - GeranCid
      - Lac
      - Mcc
      - Mnc
      type: object
    GsmLocalId:
      description: "GSM local ID information, which corresponds to the local identification\
        \ parameters of a GSM cell."
      properties:
        Bsic:
          allOf:
          - $ref: '#/components/schemas/BSIC'
          - description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
          - $ref: '#/components/schemas/BCCH'
          - description: GSM broadcast control channel.
      required:
      - Bcch
      - Bsic
      type: object
    GsmNmrObj:
      description: GSM object for network measurement reports.
      properties:
        Bsic:
          allOf:
          - $ref: '#/components/schemas/BSIC'
          - description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
          - $ref: '#/components/schemas/BCCH'
          - description: GSM broadcast control channel.
        RxLevel:
          allOf:
          - $ref: '#/components/schemas/RxLevel'
          - description: "Rx level, which is the received signal power, measured in\
              \ dBm (decibel-milliwatts)."
        GlobalIdentity:
          $ref: '#/components/schemas/GsmNmrObj_GlobalIdentity'
      required:
      - Bcch
      - Bsic
      type: object
    GsmNmrList:
      items:
        $ref: '#/components/schemas/GsmNmrObj'
      maxItems: 32
      minItems: 1
      type: array
    RxLevel:
      maximum: -25
      minimum: -110
      type: integer
    MCC:
      maximum: 999
      minimum: 200
      type: integer
    MNC:
      maximum: 999
      minimum: 0
      type: integer
    GsmTimingAdvance:
      maximum: 63
      minimum: 0
      type: integer
    HrAllowed:
      type: boolean
    OnboardStatus:
      enum:
      - INITIALIZED
      - PENDING
      - ONBOARDED
      - FAILED
      type: string
    OnboardStatusReason:
      type: string
    LastUpdateTime:
      format: date-time
      type: string
    ImportedSidewalkDevice:
      description: Information about a Sidewalk device that has been added to an import
        task.
      properties:
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing serial number (SMSN) of the Sidewalk
              device.
        OnboardingStatus:
          allOf:
          - $ref: '#/components/schemas/OnboardStatus'
          - description: The onboarding status of the Sidewalk device in the import
              task.
        OnboardingStatusReason:
          allOf:
          - $ref: '#/components/schemas/OnboardStatusReason'
          - description: The reason for the onboarding status information for the
              Sidewalk device.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdateTime'
          - description: The time at which the status information was last updated.
      type: object
    ImportedWirelessDevice:
      description: Information about a wireless device that has been added to an import
        task.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/ImportedWirelessDevice_Sidewalk'
      type: object
    ImportedWirelessDeviceList:
      items:
        $ref: '#/components/schemas/ImportedWirelessDevice'
      type: array
    Integer:
      type: integer
    JoinEui:
      pattern: "[a-fA-F0-9]{16}"
      type: string
    MaxResults:
      description: The maximum number of results to return in this operation.
      maximum: 250
      minimum: 0
      type: integer
    NextToken:
      maxLength: 4096
      type: string
    ListDestinationsRequest:
      properties: {}
      title: ListDestinationsRequest
      type: object
    ListDeviceProfilesRequest:
      properties: {}
      title: ListDeviceProfilesRequest
      type: object
    ListDevicesForWirelessDeviceImportTaskRequest:
      properties: {}
      title: ListDevicesForWirelessDeviceImportTaskRequest
      type: object
    ListEventConfigurationsRequest:
      properties: {}
      title: ListEventConfigurationsRequest
      type: object
    ListFuotaTasksRequest:
      properties: {}
      title: ListFuotaTasksRequest
      type: object
    ListMulticastGroupsByFuotaTaskRequest:
      properties: {}
      title: ListMulticastGroupsByFuotaTaskRequest
      type: object
    MulticastGroupListByFuotaTask:
      description: List of multicast groups associated with a FUOTA task.
      items:
        $ref: '#/components/schemas/MulticastGroupByFuotaTask'
      type: array
    ListMulticastGroupsRequest:
      properties: {}
      title: ListMulticastGroupsRequest
      type: object
    MulticastGroupList:
      description: List of multicast groups.
      items:
        $ref: '#/components/schemas/MulticastGroup'
      type: array
    ListNetworkAnalyzerConfigurationsRequest:
      properties: {}
      title: ListNetworkAnalyzerConfigurationsRequest
      type: object
    NetworkAnalyzerConfigurationList:
      items:
        $ref: '#/components/schemas/NetworkAnalyzerConfigurations'
      type: array
    ListPartnerAccountsRequest:
      properties: {}
      title: ListPartnerAccountsRequest
      type: object
    SidewalkAccountList:
      items:
        $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
      type: array
    ListPositionConfigurationsRequest:
      deprecated: true
      description: This operation is no longer supported.
      properties: {}
      title: ListPositionConfigurationsRequest
      type: object
    PositionConfigurationList:
      items:
        $ref: '#/components/schemas/PositionConfigurationItem'
      type: array
    ListQueuedMessagesRequest:
      properties: {}
      title: ListQueuedMessagesRequest
      type: object
    ListServiceProfilesRequest:
      properties: {}
      title: ListServiceProfilesRequest
      type: object
    ServiceProfileList:
      items:
        $ref: '#/components/schemas/ServiceProfile'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListWirelessDeviceImportTasksRequest:
      properties: {}
      title: ListWirelessDeviceImportTasksRequest
      type: object
    WirelessDeviceImportTaskList:
      items:
        $ref: '#/components/schemas/WirelessDeviceImportTask'
      type: array
    ListWirelessDevicesRequest:
      properties: {}
      title: ListWirelessDevicesRequest
      type: object
    WirelessDeviceStatisticsList:
      items:
        $ref: '#/components/schemas/WirelessDeviceStatistics'
      type: array
    WirelessGatewayTaskDefinitionType:
      enum:
      - UPDATE
      type: string
    ListWirelessGatewayTaskDefinitionsRequest:
      properties: {}
      title: ListWirelessGatewayTaskDefinitionsRequest
      type: object
    WirelessGatewayTaskDefinitionList:
      items:
        $ref: '#/components/schemas/UpdateWirelessGatewayTaskEntry'
      type: array
    ListWirelessGatewaysRequest:
      properties: {}
      title: ListWirelessGatewaysRequest
      type: object
    WirelessGatewayStatisticsList:
      items:
        $ref: '#/components/schemas/WirelessGatewayStatistics'
      type: array
    LoRaWANGatewayMetadataList:
      items:
        $ref: '#/components/schemas/LoRaWANGatewayMetadata'
      type: array
    LoRaWANGatewayVersion:
      description: LoRaWANGatewayVersion object.
      properties:
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          - description: The version of the wireless gateway firmware.
        Model:
          allOf:
          - $ref: '#/components/schemas/Model'
          - description: The model number of the wireless gateway.
        Station:
          allOf:
          - $ref: '#/components/schemas/Station'
          - description: The basic station version of the wireless gateway.
      type: object
    LoRaWANGatewayMetadata:
      description: LoRaWAN gateway metatdata.
      properties:
        GatewayEui:
          allOf:
          - $ref: '#/components/schemas/GatewayEui'
          - description: The gateway's EUI value.
        Snr:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The SNR value.
        Rssi:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The RSSI value.
      type: object
    PackageVersion:
      maxLength: 32
      minLength: 1
      type: string
    Model:
      maxLength: 4096
      minLength: 1
      type: string
    Station:
      maxLength: 4096
      minLength: 1
      type: string
    UlRate:
      maximum: 2147483647
      minimum: 0
      type: integer
    UlBucketSize:
      maximum: 2147483647
      minimum: 0
      type: integer
    UlRatePolicy:
      maxLength: 256
      type: string
    ReportDevStatusBattery:
      type: boolean
    ReportDevStatusMargin:
      type: boolean
    NwkGeoLoc:
      type: boolean
    TargetPer:
      maximum: 100
      minimum: 0
      type: integer
    MinGwDiversity:
      maximum: 100
      minimum: 1
      type: integer
    LoRaWANListDevice:
      description: LoRaWAN object for list functions.
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          - description: The DevEUI value.
      type: object
    NumberOfDevicesRequested:
      description: Number of devices that are requested to be associated with the
        multicast group.
      type: integer
    NumberOfDevicesInGroup:
      description: Number of devices that are associated to the multicast group.
      type: integer
    ParticipatingGateways:
      description: Specify the list of gateways to which you want to send downlink
        data traffic when the wireless device is running in class B or class C mode.
      properties:
        DownlinkMode:
          allOf:
          - $ref: '#/components/schemas/DownlinkMode'
          - description: "Indicates whether to send the downlink message in sequential\
              \ mode or concurrent mode, or to use only the chosen gateways from the\
              \ previous uplink message transmission."
        GatewayList:
          allOf:
          - $ref: '#/components/schemas/GatewayList'
          - description: The list of gateways that you want to use for sending the
              downlink data traffic.
        TransmissionInterval:
          allOf:
          - $ref: '#/components/schemas/TransmissionInterval'
          - description: The duration of time for which AWS IoT Core for LoRaWAN will
              wait before transmitting the payload to the next gateway.
      required:
      - DownlinkMode
      - GatewayList
      - TransmissionInterval
      type: object
    LoRaWANStartFuotaTask:
      description: The LoRaWAN information used to start a FUOTA task.
      example:
        StartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        StartTime:
          description: Start time of a FUOTA task.
          format: date-time
          type: string
      type: object
    LoRaWANUpdateDevice:
      description: LoRaWAN object for update functions.
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile for the wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
        AbpV1_1:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_AbpV1_1'
        AbpV1_0_x:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x'
        FPorts:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_FPorts'
      type: object
    UpdateSignature:
      maxLength: 4096
      minLength: 1
      type: string
    LoRaWANUpdateGatewayTaskEntry:
      description: LoRaWANUpdateGatewayTaskEntry object.
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate_CurrentVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate_UpdateVersion'
      type: object
    LteObj:
      description: LTE object.
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          - description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          - description: Mobile Network Code.
        EutranCid:
          allOf:
          - $ref: '#/components/schemas/EutranCid'
          - description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network)
              Cell Global Identifier.
        Tac:
          allOf:
          - $ref: '#/components/schemas/TAC'
          - description: LTE tracking area code.
        LteLocalId:
          $ref: '#/components/schemas/LteObj_LteLocalId'
        LteTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/LteTimingAdvance'
          - description: LTE timing advance.
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/RSRP'
          - description: "Signal power of the reference signal received, measured\
              \ in dBm (decibel-milliwatts)."
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/RSRQ'
          - description: "Signal quality of the reference Signal received, measured\
              \ in decibels (dB)."
        NrCapable:
          allOf:
          - $ref: '#/components/schemas/NRCapable'
          - description: Parameter that determines whether the LTE object is capable
              of supporting NR (new radio).
        LteNmr:
          allOf:
          - $ref: '#/components/schemas/LteNmrList'
          - description: LTE object for network measurement reports.
      required:
      - EutranCid
      - Mcc
      - Mnc
      type: object
    PCI:
      maximum: 503
      minimum: 0
      type: integer
    LteLocalId:
      description: LTE local identification (local ID) information.
      properties:
        Pci:
          allOf:
          - $ref: '#/components/schemas/PCI'
          - description: Physical cell ID.
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/EARFCN'
          - description: Evolved universal terrestrial radio access (E-UTRA) absolute
              radio frequency channel number (FCN).
      required:
      - Earfcn
      - Pci
      type: object
    LteNmrObj:
      description: LTE object for network measurement reports.
      properties:
        Pci:
          allOf:
          - $ref: '#/components/schemas/PCI'
          - description: Physical cell ID.
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/EARFCN'
          - description: E-UTRA (Evolved universal terrestrial Radio Access) absolute
              radio frequency channel Number (EARFCN).
        EutranCid:
          allOf:
          - $ref: '#/components/schemas/EutranCid'
          - description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network)
              cell global identifier (EUTRANCID).
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/RSRP'
          - description: "Signal power of the reference signal received, measured\
              \ in dBm (decibel-milliwatts)."
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/RSRQ'
          - description: "Signal quality of the reference Signal received, measured\
              \ in decibels (dB)."
      required:
      - Earfcn
      - EutranCid
      - Pci
      type: object
    LteNmrList:
      items:
        $ref: '#/components/schemas/LteNmrObj'
      maxItems: 32
      minItems: 1
      type: array
    RSRP:
      maximum: -44
      minimum: -140
      type: integer
    RSRQ:
      format: float
      maximum: -3
      minimum: -19.5
      type: number
    TAC:
      maximum: 65535
      minimum: 0
      type: integer
    LteTimingAdvance:
      maximum: 1282
      minimum: 0
      type: integer
    NRCapable:
      type: boolean
    MacAddress:
      maxLength: 17
      minLength: 12
      pattern: "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$"
      type: string
    McGroupId:
      description: Id of the multicast group.
      maximum: 256
      minimum: 1
      type: integer
    MessageType:
      description: Sidewalk device message type. Default value is <code>CUSTOM_COMMAND_ID_NOTIFY</code>.
      enum:
      - CUSTOM_COMMAND_ID_NOTIFY
      - CUSTOM_COMMAND_ID_GET
      - CUSTOM_COMMAND_ID_SET
      - CUSTOM_COMMAND_ID_RESP
      type: string
    MulticastDeviceStatus:
      maxLength: 256
      type: string
    MulticastGroup:
      description: A multicast group.
      example:
        Id: Id
        Arn: Arn
        Name: Name
      properties:
        Id:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
        Arn:
          description: The arn of the multicast group.
          maxLength: 128
          type: string
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
      type: object
    MulticastGroupByFuotaTask:
      description: A multicast group that is associated with a FUOTA task.
      example:
        Id: Id
      properties:
        Id:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
      type: object
    MulticastGroupMessageId:
      description: ID of a multicast group message.
      maxLength: 256
      type: string
    MulticastWirelessMetadata:
      description: Wireless metadata that is to be sent to multicast group.
      example:
        LoRaWAN:
          FPort: 18
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastMetadata'
      type: object
    NetworkAnalyzerConfigurations:
      description: Network analyzer configurations.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          - description: The Amazon Resource Name of the new resource.
        Name:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
      type: object
    NwkKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    NwkSEncKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    NwkSKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    PSC:
      maximum: 511
      minimum: 0
      type: integer
    TransmissionInterval:
      maximum: 604800
      minimum: 1
      type: integer
    PathLoss:
      maximum: 158
      minimum: 46
      type: integer
    PayloadData:
      description: "The binary to be sent to the end device, encoded in base64."
      maxLength: 2048
      pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
      type: string
    PositionConfigurationFec:
      enum:
      - ROSE
      - NONE
      type: string
    PositionConfigurationItem:
      description: The wrapper for a position configuration.
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          - description: Resource identifier for the position configuration.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          - description: Resource type of the resource for the position configuration.
        Solvers:
          $ref: '#/components/schemas/PositionConfigurationItem_Solvers'
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The position data destination that describes the AWS IoT
              rule that processes the device's position data for use by AWS IoT Core
              for LoRaWAN.
      type: object
    PositionConfigurationStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    PositionSolverConfigurations:
      description: The wrapper for position solver configurations.
      properties:
        SemtechGnss:
          $ref: '#/components/schemas/PutPositionConfiguration_request_Solvers_SemtechGnss'
      type: object
    SemtechGnssDetail:
      description: Details of the Semtech GNSS solver object.
      properties:
        Provider:
          allOf:
          - $ref: '#/components/schemas/PositionSolverProvider'
          - description: The vendor of the solver object.
        Type:
          allOf:
          - $ref: '#/components/schemas/PositionSolverType'
          - description: The type of positioning solver used.
        Status:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationStatus'
          - description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationFec'
          - description: Whether forward error correction is enabled.
      type: object
    PrivateKeysList:
      items:
        $ref: '#/components/schemas/CertificateList'
      type: array
    PutPositionConfigurationRequest:
      deprecated: true
      description: This operation is no longer supported.
      example:
        Destination: ""
        Solvers:
          SemtechGnss:
            Status: ""
            Fec: ""
      properties:
        Solvers:
          $ref: '#/components/schemas/PutPositionConfigurationRequest_Solvers'
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The position data destination that describes the AWS IoT
              rule that processes the device's position data for use by AWS IoT Core
              for LoRaWAN.
      title: PutPositionConfigurationRequest
      type: object
    PutResourceLogLevelRequest:
      example:
        LogLevel: INFO
      properties:
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - LogLevel
      title: PutResourceLogLevelRequest
      type: object
    QualificationStatus:
      type: boolean
    QueryString:
      description: Query string used to search for wireless devices as part of the
        bulk associate and disassociate process.
      maxLength: 4096
      type: string
    RSCP:
      maximum: -25
      minimum: -120
      type: integer
    RSS:
      maximum: 0
      minimum: -128
      type: integer
    ResetAllResourceLogLevelsRequest:
      properties: {}
      title: ResetAllResourceLogLevelsRequest
      type: object
    ResetResourceLogLevelRequest:
      properties: {}
      title: ResetResourceLogLevelRequest
      type: object
    Result:
      maxLength: 2048
      type: string
    SNwkSIntKey:
      pattern: "[a-fA-F0-9]{32}"
      type: string
    SendDataToMulticastGroupRequest:
      example:
        PayloadData: PayloadData
        WirelessMetadata:
          LoRaWAN:
            FPort: 18
      properties:
        PayloadData:
          description: "The binary to be sent to the end device, encoded in base64."
          maxLength: 2048
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        WirelessMetadata:
          $ref: '#/components/schemas/MulticastWirelessMetadata'
      required:
      - PayloadData
      - WirelessMetadata
      title: SendDataToMulticastGroupRequest
      type: object
    WirelessMetadata:
      description: WirelessMetadata object.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/SendDataToWirelessDevice_request_WirelessMetadata_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/SendDataToWirelessDevice_request_WirelessMetadata_Sidewalk'
      type: object
    SendDataToWirelessDeviceRequest:
      example:
        PayloadData: PayloadData
        WirelessMetadata:
          LoRaWAN:
            FPort: 18
            ParticipatingGateways:
              DownlinkMode: ""
              TransmissionInterval: ""
              GatewayList: ""
          Sidewalk:
            AckModeRetryDurationSecs: ""
            Seq: ""
            MessageType: CUSTOM_COMMAND_ID_NOTIFY
        TransmitMode: ""
      properties:
        TransmitMode:
          allOf:
          - $ref: '#/components/schemas/TransmitMode'
          - description: "The transmit mode to use to send data to the wireless device.\
              \ Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code>\
              \ for AM (acknowledge mode)."
        PayloadData:
          description: "The binary to be sent to the end device, encoded in base64."
          maxLength: 2048
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        WirelessMetadata:
          $ref: '#/components/schemas/SendDataToWirelessDeviceRequest_WirelessMetadata'
      required:
      - PayloadData
      - TransmitMode
      title: SendDataToWirelessDeviceRequest
      type: object
    Seq:
      maximum: 16383
      minimum: 0
      type: integer
    ServiceProfile:
      description: Information about a service profile.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          - description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
      type: object
    SidewalkId:
      description: The sidewalk device identification.
      maxLength: 256
      type: string
    WirelessDeviceSidewalkStatus:
      enum:
      - PROVISIONED
      - REGISTERED
      - ACTIVATED
      - UNKNOWN
      type: string
    SidewalkListDevice:
      description: Sidewalk object used by list functions.
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          - description: The Sidewalk Amazon ID.
        SidewalkId:
          allOf:
          - $ref: '#/components/schemas/SidewalkId'
          - description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
          - $ref: '#/components/schemas/DeviceCertificateList'
          - description: The sidewalk device certificates for Ed25519 and P256r1.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: Sidewalk object used by list functions.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceSidewalkStatus'
          - description: "The status of the Sidewalk devices, such as provisioned\
              \ or registered."
      type: object
    SidewalkSingleStartImportInfo:
      description: Information about an import task created for an individual Sidewalk
        device.
      properties:
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing serial number (SMSN) of the device
              added to the import task.
      type: object
    SidewalkStartImportInfo:
      description: Information about an import task created for bulk provisioning.
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          - description: The CSV file contained in an S3 bucket that's used for adding
              devices to an import task.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role that allows AWS IoT Wireless to access the CSV
              file in the S3 bucket.
      type: object
    SidewalkUpdateAccount:
      description: Sidewalk update.
      properties:
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          - description: The new Sidewalk application server private key.
      type: object
    SidewalkUpdateImportInfo:
      description: Sidewalk object information for updating an import task.
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          - description: The CSV file contained in an S3 bucket that's used for appending
              devices to an existing import task.
      type: object
    StartBulkAssociateWirelessDeviceWithMulticastGroupRequest:
      properties:
        QueryString:
          description: Query string used to search for wireless devices as part of
            the bulk associate and disassociate process.
          maxLength: 4096
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      title: StartBulkAssociateWirelessDeviceWithMulticastGroupRequest
      type: object
    StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest:
      example:
        QueryString: QueryString
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
      properties:
        QueryString:
          description: Query string used to search for wireless devices as part of
            the bulk associate and disassociate process.
          maxLength: 4096
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      title: StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest
      type: object
    StartFuotaTaskRequest:
      example:
        LoRaWAN:
          StartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANStartFuotaTask'
      title: StartFuotaTaskRequest
      type: object
    StartMulticastGroupSessionRequest:
      example:
        LoRaWAN:
          PingSlotPeriod: ""
          SessionTimeout: 25380
          DlDr: 1
          DlFreq: 642471056
          SessionStartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastSession'
      required:
      - LoRaWAN
      title: StartMulticastGroupSessionRequest
      type: object
    StartSingleWirelessDeviceImportTaskRequest:
      example:
        ClientRequestToken: ClientRequestToken
        DestinationName: ""
        Sidewalk:
          SidewalkManufacturingSn: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        DeviceName: ""
      properties:
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the Sidewalk destination that describes the IoT
              rule to route messages from the device in the import task that will
              be onboarded to AWS IoT Wireless.
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          - description: The name of the wireless device for which an import task
              is being started.
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        Sidewalk:
          $ref: '#/components/schemas/StartSingleWirelessDeviceImportTaskRequest_Sidewalk'
      required:
      - DestinationName
      - Sidewalk
      title: StartSingleWirelessDeviceImportTaskRequest
      type: object
    StartWirelessDeviceImportTaskRequest:
      example:
        ClientRequestToken: ClientRequestToken
        DestinationName: ""
        Sidewalk:
          Role: ""
          DeviceCreationFile: ""
        Tags:
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
        - Value: ""
          Key: ""
      properties:
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the Sidewalk destination that describes the IoT
              rule to route messages from the devices in the import task that are
              onboarded to AWS IoT Wireless.
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        Sidewalk:
          $ref: '#/components/schemas/StartWirelessDeviceImportTaskRequest_Sidewalk'
      required:
      - DestinationName
      - Sidewalk
      title: StartWirelessDeviceImportTaskRequest
      type: object
    SubBand:
      description: A subset of supported frequency channels in a certain RFRegion.
      maximum: 8
      minimum: 1
      type: integer
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Adds to or modifies the tags of the given resource. Tags
              are metadata that you can use to manage a resource.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    TdscdmaObj:
      description: TD-SCDMA object.
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          - description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          - description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          - description: Location Area Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global
              Identifier.
        TdscdmaLocalId:
          $ref: '#/components/schemas/TdscdmaObj_TdscdmaLocalId'
        TdscdmaTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/TdscdmaTimingAdvance'
          - description: TD-SCDMA Timing advance.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          - description: "Signal power of the received signal (Received Signal Code\
              \ Power), measured in decibel-milliwatts (dBm)."
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          - description: "Path loss, or path attenuation, is the reduction in power\
              \ density of an electromagnetic wave as it propagates through space."
        TdscdmaNmr:
          allOf:
          - $ref: '#/components/schemas/TdscdmaNmrList'
          - description: TD-SCDMA object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - UtranCid
      type: object
    UARFCN:
      maximum: 16383
      minimum: 0
      type: integer
    TdscdmaLocalId:
      description: TD-SCDMA local identification (local Id) information.
      properties:
        Uarfcn:
          allOf:
          - $ref: '#/components/schemas/UARFCN'
          - description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network)
              absolute RF channel number (UARFCN).
        CellParams:
          allOf:
          - $ref: '#/components/schemas/CellParams'
          - description: Cell parameters for TD-SCDMA.
      required:
      - CellParams
      - Uarfcn
      type: object
    TdscdmaNmrObj:
      description: TD-SCDMA object for network measurement reports.
      properties:
        Uarfcn:
          allOf:
          - $ref: '#/components/schemas/UARFCN'
          - description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network)
              absolute RF channel number.
        CellParams:
          allOf:
          - $ref: '#/components/schemas/CellParams'
          - description: Cell parameters for TD-SCDMA network measurement reports
              object.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          - description: UTRAN (UMTS Terrestrial Radio Access Network) cell global
              identifier.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          - description: "Code power of the received signal, measured in decibel-milliwatts\
              \ (dBm)."
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          - description: "Path loss, or path attenuation, is the reduction in power\
              \ density of an electromagnetic wave as it propagates through space."
      required:
      - CellParams
      - Uarfcn
      type: object
    TdscdmaNmrList:
      items:
        $ref: '#/components/schemas/TdscdmaNmrObj'
      maxItems: 32
      minItems: 1
      type: array
    UtranCid:
      maximum: 268435455
      minimum: 0
      type: integer
    TdscdmaTimingAdvance:
      maximum: 1530
      minimum: 0
      type: integer
    TestWirelessDeviceRequest:
      properties: {}
      title: TestWirelessDeviceRequest
      type: object
    UARFCNDL:
      maximum: 16383
      minimum: 0
      type: integer
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateDestinationRequest:
      example:
        Description: ""
        Expression: ""
        ExpressionType: ""
        RoleArn: ""
      properties:
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The new rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A new description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM Role that authorizes the destination.
      title: UpdateDestinationRequest
      type: object
    UpdateEventConfigurationByResourceTypesRequest:
      example:
        Proximity:
          Sidewalk:
            WirelessDeviceEventTopic: ""
        MessageDeliveryStatus:
          Sidewalk:
            WirelessDeviceEventTopic: ""
        Join:
          LoRaWAN:
            WirelessDeviceEventTopic: ""
        ConnectionStatus:
          LoRaWAN:
            WirelessGatewayEventTopic: ""
        DeviceRegistrationState:
          Sidewalk:
            WirelessDeviceEventTopic: ""
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesRequest_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesRequest_Proximity'
        Join:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesRequest_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesRequest_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypesRequest_MessageDeliveryStatus'
      title: UpdateEventConfigurationByResourceTypesRequest
      type: object
    UpdateFuotaTaskRequest:
      example:
        FragmentSizeBytes: 1
        FirmwareUpdateImage: FirmwareUpdateImage
        Description: Description
        LoRaWAN:
          RfRegion: EU868
        FirmwareUpdateRole: FirmwareUpdateRole
        FragmentIntervalMS: 1
        RedundancyPercent: 8
        Name: Name
      properties:
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTask'
        FirmwareUpdateImage:
          description: The S3 URI points to a firmware update image that is to be
            used with a FUOTA task.
          maxLength: 4096
          minLength: 1
          type: string
        FirmwareUpdateRole:
          description: The firmware update role that is to be used with a FUOTA task.
          maxLength: 2048
          minLength: 1
          type: string
        RedundancyPercent:
          description: "The percentage of the added fragments that are redundant.\
            \ For example, if the size of the firmware image file is 100 bytes and\
            \ the fragment size is 10 bytes, with <code>RedundancyPercent</code> set\
            \ to 50(%), the final number of encoded fragments is (100 / 10) + (100\
            \ / 10 * 50%) = 15."
          maximum: 100
          minimum: 0
          type: integer
        FragmentSizeBytes:
          description: The size of each fragment in bytes. This parameter is supported
            only for FUOTA tasks with multicast groups.
          minimum: 1
          type: integer
        FragmentIntervalMS:
          description: "<p>The interval for sending fragments in milliseconds, rounded\
            \ to the nearest second.</p> <note> <p>This interval only determines the\
            \ timing for when the Cloud sends down the fragments to yor device. There\
            \ can be a delay for when your device will receive these fragments. This\
            \ delay depends on the device's class and the communication delay with\
            \ the cloud.</p> </note>"
          minimum: 1
          type: integer
      title: UpdateFuotaTaskRequest
      type: object
    UpdateLogLevelsByResourceTypesRequest:
      example:
        WirelessGatewayLogOptions:
        - Type: LoRaWAN
          Events:
          - Event: CUPS_Request
            LogLevel: null
          - Event: CUPS_Request
            LogLevel: null
          LogLevel: null
        - Type: LoRaWAN
          Events:
          - Event: CUPS_Request
            LogLevel: null
          - Event: CUPS_Request
            LogLevel: null
          LogLevel: null
        WirelessDeviceLogOptions:
        - Type: ""
          Events:
          - Event: Join
            LogLevel: null
          - Event: Join
            LogLevel: null
          LogLevel: null
        - Type: ""
          Events:
          - Event: Join
            LogLevel: null
          - Event: Join
            LogLevel: null
          LogLevel: null
        DefaultLogLevel: INFO
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        WirelessDeviceLogOptions:
          description: The list of wireless device log options.
          items:
            $ref: '#/components/schemas/WirelessDeviceLogOption'
          type: array
        WirelessGatewayLogOptions:
          description: The list of wireless gateway log options.
          items:
            $ref: '#/components/schemas/WirelessGatewayLogOption'
          type: array
      title: UpdateLogLevelsByResourceTypesRequest
      type: object
    UpdateMulticastGroupRequest:
      example:
        Description: Description
        LoRaWAN:
          RfRegion: EU868
          DlClass: ClassB
        Name: Name
      properties:
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticast'
      title: UpdateMulticastGroupRequest
      type: object
    UpdateNetworkAnalyzerConfigurationRequest:
      example:
        WirelessDevicesToAdd: ""
        Description: Description
        WirelessGatewaysToRemove: ""
        TraceContent:
          WirelessDeviceFrameInfo: ENABLED
          MulticastFrameInfo: ENABLED
          LogLevel: INFO
        WirelessDevicesToRemove: ""
        MulticastGroupsToRemove: ""
        WirelessGatewaysToAdd: ""
        MulticastGroupsToAdd: ""
      properties:
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevicesToAdd:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          - description: Wireless device resources to add to the network analyzer
              configuration. Provide the <code>WirelessDeviceId</code> of the resource
              to add in the input array.
        WirelessDevicesToRemove:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          - description: Wireless device resources to remove from the network analyzer
              configuration. Provide the <code>WirelessDeviceId</code> of the resources
              to remove in the input array.
        WirelessGatewaysToAdd:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          - description: Wireless gateway resources to add to the network analyzer
              configuration. Provide the <code>WirelessGatewayId</code> of the resource
              to add in the input array.
        WirelessGatewaysToRemove:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          - description: Wireless gateway resources to remove from the network analyzer
              configuration. Provide the <code>WirelessGatewayId</code> of the resources
              to remove in the input array.
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        MulticastGroupsToAdd:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          - description: Multicast group resources to add to the network analyzer
              configuration. Provide the <code>MulticastGroupId</code> of the resource
              to add in the input array.
        MulticastGroupsToRemove:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          - description: Multicast group resources to remove from the network analyzer
              configuration. Provide the <code>MulticastGroupId</code> of the resource
              to remove in the input array.
      title: UpdateNetworkAnalyzerConfigurationRequest
      type: object
    UpdatePartnerAccountRequest:
      example:
        Sidewalk:
          AppServerPrivateKey: ""
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdatePartnerAccountRequest_Sidewalk'
      required:
      - Sidewalk
      title: UpdatePartnerAccountRequest
      type: object
    UpdatePositionRequest:
      deprecated: true
      description: This operation is no longer supported.
      example:
        Position: ""
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/PositionCoordinate'
          - description: The position information of the resource.
      required:
      - Position
      title: UpdatePositionRequest
      type: object
    UpdateResourceEventConfigurationRequest:
      example:
        Proximity:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
        MessageDeliveryStatus:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
        Join:
          LoRaWAN:
            DevEuiEventTopic: ""
          WirelessDeviceIdEventTopic: ""
        ConnectionStatus:
          LoRaWAN:
            GatewayEuiEventTopic: ""
          WirelessGatewayIdEventTopic: ""
        DeviceRegistrationState:
          WirelessDeviceIdEventTopic: ""
          Sidewalk:
            AmazonIdEventTopic: ""
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_Proximity'
        Join:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/GetResourceEventConfigurationResponse_MessageDeliveryStatus'
      title: UpdateResourceEventConfigurationRequest
      type: object
    UpdateResourcePositionRequest:
      example:
        GeoJsonPayload: ""
      properties:
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          - description: "The position information of the resource, displayed as a\
              \ JSON payload. The payload uses the GeoJSON format, which a format\
              \ that's used to encode geographic data structures. For more information,\
              \ see <a href=\"https://geojson.org/\">GeoJSON</a>."
      title: UpdateResourcePositionRequest
      type: object
    UpdateWirelessDeviceImportTaskRequest:
      example:
        Sidewalk:
          DeviceCreationFile: ""
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateWirelessDeviceImportTaskRequest_Sidewalk'
      required:
      - Sidewalk
      title: UpdateWirelessDeviceImportTaskRequest
      type: object
    UpdateWirelessDeviceRequest:
      example:
        Positioning: ""
        Description: ""
        LoRaWAN:
          FPorts:
            Positioning:
              Gnss: 33
              Stream: 134
              ClockSync: 18
            Applications: ""
          DeviceProfileId: ""
          AbpV1_0_x:
            FCntStart: ""
          ServiceProfileId: ""
          AbpV1_1:
            FCntStart: ""
        DestinationName: ""
        Name: ""
      properties:
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the new destination for the device.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          - description: The new name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A new description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/UpdateWirelessDeviceRequest_LoRaWAN'
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          - description: "FPort values for the GNSS, stream, and ClockSync functions\
              \ of the positioning information."
      title: UpdateWirelessDeviceRequest
      type: object
    UpdateWirelessGatewayRequest:
      example:
        Description: ""
        NetIdFilters:
        - null
        - null
        - null
        - null
        - null
        MaxEirp: ""
        JoinEuiFilters:
        - - null
          - null
        - - null
          - null
        - - null
          - null
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          - description: The new name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A new description of the resource.
        JoinEuiFilters:
          description: A list of JoinEuiRange used by LoRa gateways to filter LoRa
            frames.
          items:
            $ref: '#/components/schemas/JoinEuiRange'
          maxItems: 3
          minItems: 0
          type: array
        NetIdFilters:
          description: A list of NetId values that are used by LoRa gateways to filter
            the uplink frames.
          items:
            $ref: '#/components/schemas/NetId'
          maxItems: 10
          minItems: 0
          type: array
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/GatewayMaxEirp'
          - description: The MaxEIRP value.
      title: UpdateWirelessGatewayRequest
      type: object
    UpdateWirelessGatewayTaskEntry:
      description: UpdateWirelessGatewayTaskEntry object.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          - description: The ID of the new wireless gateway task entry.
        LoRaWAN:
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskEntry_LoRaWAN'
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          - description: The Amazon Resource Name of the resource.
      type: object
    WcdmaObj:
      description: WCDMA.
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          - description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          - description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          - description: Location Area Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global
              Identifier.
        WcdmaLocalId:
          $ref: '#/components/schemas/WcdmaObj_WcdmaLocalId'
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          - description: Received Signal Code Power (signal power) (dBm).
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          - description: "Path loss, or path attenuation, is the reduction in power\
              \ density of an electromagnetic wave as it propagates through space."
        WcdmaNmr:
          allOf:
          - $ref: '#/components/schemas/WcdmaNmrList'
          - description: WCDMA object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - UtranCid
      type: object
    WcdmaLocalId:
      description: WCDMA local identification (local ID) information.
      properties:
        Uarfcndl:
          allOf:
          - $ref: '#/components/schemas/UARFCNDL'
          - description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
          - $ref: '#/components/schemas/PSC'
          - description: Primary Scrambling Code.
      required:
      - Psc
      - Uarfcndl
      type: object
    WcdmaNmrObj:
      description: Network Measurement Reports.
      properties:
        Uarfcndl:
          allOf:
          - $ref: '#/components/schemas/UARFCNDL'
          - description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
          - $ref: '#/components/schemas/PSC'
          - description: Primary Scrambling Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global
              Identifier.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          - description: Received Signal Code Power (signal power) (dBm)
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          - description: "Path loss, or path attenuation, is the reduction in power\
              \ density of an electromagnetic wave as it propagates through space."
      required:
      - Psc
      - Uarfcndl
      - UtranCid
      type: object
    WcdmaNmrList:
      items:
        $ref: '#/components/schemas/WcdmaNmrObj'
      maxItems: 32
      minItems: 1
      type: array
    WirelessDeviceEvent:
      description: "The event for a log message, if the log message is tied to a wireless\
        \ device."
      enum:
      - Join
      - Rejoin
      - Uplink_Data
      - Downlink_Data
      - Registration
      type: string
    WirelessDeviceEventLogOption:
      description: "<p>The log options for a wireless device event and can be used\
        \ to set log levels for a specific wireless device event.</p> <p>For a LoRaWAN\
        \ device, possible events for a log messsage are: <code>Join</code>, <code>Rejoin</code>,\
        \ <code>Downlink_Data</code>, and <code>Uplink_Data</code>. For a Sidewalk\
        \ device, possible events for a log message are <code>Registration</code>,\
        \ <code>Downlink_Data</code>, and <code>Uplink_Data</code>.</p>"
      example:
        Event: Join
        LogLevel: null
      properties:
        Event:
          $ref: '#/components/schemas/WirelessDeviceEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - Event
      - LogLevel
      type: object
    WirelessDeviceEventLogOptionList:
      description: The list of wireless device event log options.
      items:
        $ref: '#/components/schemas/WirelessDeviceEventLogOption'
      type: array
    WirelessDeviceImportTask:
      description: Information about an import task for wireless devices.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          - description: The ID of the wireless device import task.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          - description: The ARN (Amazon Resource Name) of the wireless device import
              task.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the Sidewalk destination that that describes
              the IoT rule to route messages from the device in the import task that
              will be onboarded to AWS IoT Wireless
        Sidewalk:
          $ref: '#/components/schemas/WirelessDeviceImportTask_Sidewalk'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time at which the import task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportTaskStatus'
          - description: The status information of the wireless device import task.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          - description: The reason that provides additional information about the
              import task status.
        InitializedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The summary information of count of wireless devices that
              are waiting for the control log to be added to an import task.
        PendingImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The summary information of count of wireless devices in an
              import task that are waiting in the queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The summary information of count of wireless devices in an
              import task that have been onboarded to the import task.
        FailedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          - description: The summary information of count of wireless devices in an
              import task that failed to onboarded to the import task.
      type: object
    WirelessDeviceStatistics:
      description: Information about a wireless device's operation.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          - description: The Amazon Resource Name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          - description: The ID of the wireless device reporting the data.
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          - description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          - description: The name of the resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          - description: The name of the destination to which the device is assigned.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: <p>The date and time when the most recent uplink was received.</p>
              <note> <p>Theis value is only valid for 3 months.</p> </note>
        LoRaWAN:
          $ref: '#/components/schemas/WirelessDeviceStatistics_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/WirelessDeviceStatistics_Sidewalk'
        FuotaDeviceStatus:
          $ref: '#/components/schemas/FuotaDeviceStatus'
        MulticastDeviceStatus:
          allOf:
          - $ref: '#/components/schemas/MulticastDeviceStatus'
          - description: The status of the wireless device in the multicast group.
        McGroupId:
          description: Id of the multicast group.
          maximum: 256
          minimum: 1
          type: integer
      type: object
    WirelessGatewayEvent:
      description: "The event for a log message, if the log message is tied to a wireless\
        \ gateway."
      enum:
      - CUPS_Request
      - Certificate
      type: string
    WirelessGatewayEventLogOption:
      description: "<p>The log options for a wireless gateway event and can be used\
        \ to set log levels for a specific wireless gateway event.</p> <p>For a LoRaWAN\
        \ gateway, possible events for a log message are <code>CUPS_Request</code>\
        \ and <code>Certificate</code>.</p>"
      example:
        Event: CUPS_Request
        LogLevel: null
      properties:
        Event:
          $ref: '#/components/schemas/WirelessGatewayEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - Event
      - LogLevel
      type: object
    WirelessGatewayEventLogOptionList:
      description: The list of wireless gateway event log options.
      items:
        $ref: '#/components/schemas/WirelessGatewayEventLogOption'
      type: array
    WirelessGatewayType:
      description: The wireless gateway type.
      enum:
      - LoRaWAN
      type: string
    WirelessGatewayStatistics:
      description: Information about a wireless gateway's operation.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          - description: The Amazon Resource Name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          - description: The ID of the wireless gateway reporting the data.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          - description: The name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the resource.
        LoRaWAN:
          $ref: '#/components/schemas/WirelessGatewayStatistics_LoRaWAN'
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          - description: <p>The date and time when the most recent uplink was received.</p>
              <note> <p>This value is only valid for 3 months.</p> </note>
      type: object
    AssociateAwsAccountWithPartnerAccount_request_Sidewalk:
      description: Information about a Sidewalk account.
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          - description: The Sidewalk Amazon ID.
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          - description: The Sidewalk application server private key.
      type: object
    AssociateAwsAccountWithPartnerAccount_request:
      properties:
        Sidewalk:
          $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccount_request_Sidewalk'
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - Sidewalk
      type: object
    AssociateMulticastGroupWithFuotaTask_request:
      properties:
        MulticastGroupId:
          description: The ID of the multicast group.
          maxLength: 256
          type: string
      required:
      - MulticastGroupId
      type: object
    AssociateWirelessDeviceWithFuotaTask_request:
      properties:
        WirelessDeviceId:
          description: The ID of the wireless device.
          maxLength: 256
          type: string
      required:
      - WirelessDeviceId
      type: object
    AssociateWirelessDeviceWithThing_request:
      properties:
        ThingArn:
          description: The ARN of the thing to associate with the wireless device.
          type: string
      required:
      - ThingArn
      type: object
    AssociateWirelessGatewayWithCertificate_request:
      properties:
        IotCertificateId:
          description: The ID of the certificate to associate with the wireless gateway.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - IotCertificateId
      type: object
    AssociateWirelessGatewayWithThing_request:
      properties:
        ThingArn:
          description: The ARN of the thing to associate with the wireless gateway.
          type: string
      required:
      - ThingArn
      type: object
    StartMulticastGroupSession_request_LoRaWAN:
      description: The LoRaWAN information used with the multicast session.
      properties:
        DlDr:
          description: Downlink data rate.
          maximum: 15
          minimum: 0
          type: integer
        DlFreq:
          description: Downlink frequency.
          maximum: 1000000000
          minimum: 100000000
          type: integer
        SessionStartTime:
          description: Timestamp of when the multicast group session is to start.
          format: date-time
          type: string
        SessionTimeout:
          description: How long before a multicast group session is to timeout.
          maximum: 172800
          minimum: 60
          type: integer
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          - description: The PingSlotPeriod value.
      type: object
    StartMulticastGroupSession_request:
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/StartMulticastGroupSession_request_LoRaWAN'
      required:
      - LoRaWAN
      type: object
    CreateDestination_request:
      properties:
        Name:
          description: The name of the new resource.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        ExpressionType:
          description: The type of value in <code>Expression</code>.
          enum:
          - RuleName
          - MqttTopic
          type: string
        Expression:
          description: The rule name or topic rule to send messages to.
          maxLength: 2048
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        RoleArn:
          description: The ARN of the IAM Role that authorizes the destination.
          maxLength: 2048
          minLength: 20
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
      required:
      - Expression
      - ExpressionType
      - Name
      - RoleArn
      type: object
    CreateDeviceProfile_request_LoRaWAN:
      description: LoRaWANDeviceProfile object.
      properties:
        SupportsClassB:
          allOf:
          - $ref: '#/components/schemas/SupportsClassB'
          - description: The SupportsClassB value.
        ClassBTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassBTimeout'
          - description: The ClassBTimeout value.
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          - description: The PingSlotPeriod value.
        PingSlotDr:
          allOf:
          - $ref: '#/components/schemas/PingSlotDr'
          - description: The PingSlotDR value.
        PingSlotFreq:
          allOf:
          - $ref: '#/components/schemas/PingSlotFreq'
          - description: The PingSlotFreq value.
        SupportsClassC:
          allOf:
          - $ref: '#/components/schemas/SupportsClassC'
          - description: The SupportsClassC value.
        ClassCTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassCTimeout'
          - description: The ClassCTimeout value.
        MacVersion:
          allOf:
          - $ref: '#/components/schemas/MacVersion'
          - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with
              this device profile.
        RegParamsRevision:
          allOf:
          - $ref: '#/components/schemas/RegParamsRevision'
          - description: The version of regional parameters.
        RxDelay1:
          allOf:
          - $ref: '#/components/schemas/RxDelay1'
          - description: The RXDelay1 value.
        RxDrOffset1:
          allOf:
          - $ref: '#/components/schemas/RxDrOffset1'
          - description: The RXDROffset1 value.
        RxDataRate2:
          allOf:
          - $ref: '#/components/schemas/RxDataRate2'
          - description: The RXDataRate2 value.
        RxFreq2:
          allOf:
          - $ref: '#/components/schemas/RxFreq2'
          - description: The RXFreq2 value.
        FactoryPresetFreqsList:
          allOf:
          - $ref: '#/components/schemas/FactoryPresetFreqsList'
          - description: The list of values that make up the FactoryPresetFreqs value.
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/MaxEirp'
          - description: The MaxEIRP value.
        MaxDutyCycle:
          allOf:
          - $ref: '#/components/schemas/MaxDutyCycle'
          - description: The MaxDutyCycle value.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          - description: The frequency band (RFRegion) value.
        SupportsJoin:
          allOf:
          - $ref: '#/components/schemas/SupportsJoin'
          - description: The SupportsJoin value.
        Supports32BitFCnt:
          allOf:
          - $ref: '#/components/schemas/Supports32BitFCnt'
          - description: The Supports32BitFCnt value.
      type: object
    CreateDeviceProfile_request:
      properties:
        Name:
          description: The name of the new resource.
          maxLength: 256
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateDeviceProfile_request_LoRaWAN'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        Sidewalk:
          description: Sidewalk object for creating a device profile.
          properties: {}
          type: object
      type: object
    CreateFuotaTask_request_LoRaWAN:
      description: The LoRaWAN information used with a FUOTA task.
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
      type: object
    CreateFuotaTask_request:
      properties:
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateFuotaTask_request_LoRaWAN'
        FirmwareUpdateImage:
          description: The S3 URI points to a firmware update image that is to be
            used with a FUOTA task.
          maxLength: 4096
          minLength: 1
          type: string
        FirmwareUpdateRole:
          description: The firmware update role that is to be used with a FUOTA task.
          maxLength: 2048
          minLength: 1
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        RedundancyPercent:
          description: "The percentage of the added fragments that are redundant.\
            \ For example, if the size of the firmware image file is 100 bytes and\
            \ the fragment size is 10 bytes, with <code>RedundancyPercent</code> set\
            \ to 50(%), the final number of encoded fragments is (100 / 10) + (100\
            \ / 10 * 50%) = 15."
          maximum: 100
          minimum: 0
          type: integer
        FragmentSizeBytes:
          description: The size of each fragment in bytes. This parameter is supported
            only for FUOTA tasks with multicast groups.
          minimum: 1
          type: integer
        FragmentIntervalMS:
          description: "<p>The interval for sending fragments in milliseconds, rounded\
            \ to the nearest second.</p> <note> <p>This interval only determines the\
            \ timing for when the Cloud sends down the fragments to yor device. There\
            \ can be a delay for when your device will receive these fragments. This\
            \ delay depends on the device's class and the communication delay with\
            \ the cloud.</p> </note>"
          minimum: 1
          type: integer
      required:
      - FirmwareUpdateImage
      - FirmwareUpdateRole
      type: object
    CreateMulticastGroup_request_LoRaWAN:
      description: The LoRaWAN information that is to be used with the multicast group.
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
        DlClass:
          $ref: '#/components/schemas/DlClass'
      type: object
    CreateMulticastGroup_request:
      properties:
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateMulticastGroup_request_LoRaWAN'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - LoRaWAN
      type: object
    CreateNetworkAnalyzerConfiguration_request_TraceContent:
      description: Trace content for your wireless gateway and wireless device resources.
      properties:
        WirelessDeviceFrameInfo:
          $ref: '#/components/schemas/WirelessDeviceFrameInfo'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        MulticastFrameInfo:
          $ref: '#/components/schemas/MulticastFrameInfo'
      type: object
    CreateNetworkAnalyzerConfiguration_request:
      properties:
        Name:
          description: Name of the network analyzer configuration.
          maxLength: 1024
          minLength: 1
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        TraceContent:
          $ref: '#/components/schemas/CreateNetworkAnalyzerConfiguration_request_TraceContent'
        WirelessDevices:
          description: Wireless device resources to add to the network analyzer configuration.
            Provide the <code>WirelessDeviceId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/WirelessDeviceId'
          maxItems: 250
          minItems: 0
          type: array
        WirelessGateways:
          description: Wireless gateway resources to add to the network analyzer configuration.
            Provide the <code>WirelessGatewayId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/WirelessGatewayId'
          type: array
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        MulticastGroups:
          description: Multicast Group resources to add to the network analyzer configruation.
            Provide the <code>MulticastGroupId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/MulticastGroupId'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - Name
      type: object
    CreateServiceProfile_request_LoRaWAN:
      description: LoRaWANServiceProfile object.
      properties:
        AddGwMetadata:
          allOf:
          - $ref: '#/components/schemas/AddGwMetadata'
          - description: The AddGWMetaData value.
        DrMin:
          allOf:
          - $ref: '#/components/schemas/DrMinBox'
          - description: The DrMin value.
        DrMax:
          allOf:
          - $ref: '#/components/schemas/DrMaxBox'
          - description: The DrMax value.
        PrAllowed:
          allOf:
          - $ref: '#/components/schemas/PrAllowed'
          - description: The PRAllowed value that describes whether passive roaming
              is allowed.
        RaAllowed:
          allOf:
          - $ref: '#/components/schemas/RaAllowed'
          - description: The RAAllowed value that describes whether roaming activation
              is allowed.
      type: object
    CreateServiceProfile_request:
      properties:
        Name:
          description: The name of the new resource.
          maxLength: 256
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateServiceProfile_request_LoRaWAN'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
      type: object
    CreateWirelessDevice_request_LoRaWAN_OtaaV1_1:
      allOf:
      - $ref: '#/components/schemas/OtaaV1_1'
      - description: OTAA device object for v1.1 for create APIs
      example:
        NwkKey: ""
        AppKey: ""
        JoinEui: ""
    CreateWirelessDevice_request_LoRaWAN_OtaaV1_0_x:
      allOf:
      - $ref: '#/components/schemas/OtaaV1_0_x'
      - description: OTAA device object for create APIs for v1.0.x
      example:
        AppEui: ""
        GenAppKey: ""
        AppKey: ""
    CreateWirelessDevice_request_LoRaWAN_AbpV1_1:
      allOf:
      - $ref: '#/components/schemas/AbpV1_1'
      - description: ABP device object for create APIs for v1.1
      example:
        FCntStart: ""
        SessionKeys:
          FNwkSIntKey: ""
          AppSKey: ""
          SNwkSIntKey: ""
          NwkSEncKey: ""
        DevAddr: ""
    CreateWirelessDevice_request_LoRaWAN_AbpV1_0_x:
      allOf:
      - $ref: '#/components/schemas/AbpV1_0_x'
      - description: LoRaWAN object for create APIs
      example:
        FCntStart: ""
        SessionKeys:
          AppSKey: ""
          NwkSKey: ""
        DevAddr: ""
    CreateWirelessDevice_request_LoRaWAN:
      description: LoRaWAN object for create functions.
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          - description: The DevEUI value.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile for the new wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
        OtaaV1_1:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_OtaaV1_1'
        OtaaV1_0_x:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_OtaaV1_0_x'
        AbpV1_1:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_AbpV1_1'
        AbpV1_0_x:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN_AbpV1_0_x'
        FPorts:
          $ref: '#/components/schemas/FPorts'
      type: object
    CreateWirelessDevice_request_Sidewalk:
      description: Sidewalk object for creating a wireless device.
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the Sidewalk device profile.
      type: object
    CreateWirelessDevice_request:
      properties:
        Type:
          description: The wireless device type.
          enum:
          - Sidewalk
          - LoRaWAN
          type: string
        Name:
          description: The name of the new resource.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        DestinationName:
          description: The name of the destination to assign to the new wireless device.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessDevice_request_LoRaWAN'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        Positioning:
          description: "FPort values for the GNSS, stream, and ClockSync functions\
            \ of the positioning information."
          enum:
          - Enabled
          - Disabled
          type: string
        Sidewalk:
          $ref: '#/components/schemas/CreateWirelessDevice_request_Sidewalk'
      required:
      - DestinationName
      - Type
      type: object
    CreateWirelessGateway_request_LoRaWAN_Beaconing:
      allOf:
      - $ref: '#/components/schemas/Beaconing'
      - description: "Beaconing object information, which consists of the data rate\
          \ and frequency parameters."
      example:
        DataRate: ""
        Frequencies: ""
    CreateWirelessGateway_request_LoRaWAN:
      description: LoRaWANGateway object.
      properties:
        GatewayEui:
          allOf:
          - $ref: '#/components/schemas/GatewayEui'
          - description: The gateway's EUI value.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          - description: The frequency band (RFRegion) value.
        JoinEuiFilters:
          description: A list of JoinEuiRange used by LoRa gateways to filter LoRa
            frames.
          items:
            $ref: '#/components/schemas/JoinEuiRange'
          maxItems: 3
          minItems: 0
          type: array
        NetIdFilters:
          description: A list of NetId values that are used by LoRa gateways to filter
            the uplink frames.
          items:
            $ref: '#/components/schemas/NetId'
          maxItems: 10
          minItems: 0
          type: array
        SubBands:
          description: A list of integer indicating which sub bands are supported
            by LoRa gateway.
          items:
            $ref: '#/components/schemas/SubBand'
          maxItems: 8
          minItems: 0
          type: array
        Beaconing:
          $ref: '#/components/schemas/CreateWirelessGateway_request_LoRaWAN_Beaconing'
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/GatewayMaxEirp'
          - description: The MaxEIRP value.
      type: object
    CreateWirelessGateway_request:
      properties:
        Name:
          description: The name of the new resource.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessGateway_request_LoRaWAN'
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
      required:
      - LoRaWAN
      type: object
    CreateWirelessGatewayTask_request:
      properties:
        WirelessGatewayTaskDefinitionId:
          description: The ID of the WirelessGatewayTaskDefinition.
          maxLength: 36
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      required:
      - WirelessGatewayTaskDefinitionId
      type: object
    CreateWirelessGatewayTaskDefinition_request_Update_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
      - description: The properties that relate to the LoRaWAN wireless gateway.
      example:
        UpdateSignature: ""
        SigKeyCrc: ""
        UpdateVersion:
          Station: ""
          Model: ""
          PackageVersion: ""
        CurrentVersion:
          Station: ""
          Model: ""
          PackageVersion: ""
    CreateWirelessGatewayTaskDefinition_request_Update:
      description: UpdateWirelessGatewayTaskCreate object.
      properties:
        UpdateDataSource:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          - description: The link to the S3 bucket.
        UpdateDataRole:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          - description: The IAM role used to read data from the S3 bucket.
        LoRaWAN:
          $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinition_request_Update_LoRaWAN'
      type: object
    CreateWirelessGatewayTaskDefinition_request:
      properties:
        AutoCreateTasks:
          description: "Whether to automatically create tasks using this task definition\
            \ for all gateways with the specified current version. If <code>false</code>,\
            \ the task must me created by calling <code>CreateWirelessGatewayTask</code>."
          type: boolean
        Name:
          description: The name of the new resource.
          maxLength: 2048
          minLength: 1
          type: string
        Update:
          $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinition_request_Update'
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - AutoCreateTasks
      type: object
    UpdateDestination_request:
      properties:
        ExpressionType:
          description: The type of value in <code>Expression</code>.
          enum:
          - RuleName
          - MqttTopic
          type: string
        Expression:
          description: The new rule name or topic rule to send messages to.
          maxLength: 2048
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        RoleArn:
          description: The ARN of the IAM Role that authorizes the destination.
          maxLength: 2048
          minLength: 20
          type: string
      type: object
    StartFuotaTask_request_LoRaWAN:
      description: The LoRaWAN information used to start a FUOTA task.
      properties:
        StartTime:
          description: Start time of a FUOTA task.
          format: date-time
          type: string
      type: object
    StartFuotaTask_request:
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/StartFuotaTask_request_LoRaWAN'
      type: object
    UpdateFuotaTask_request:
      properties:
        Name:
          description: The name of a FUOTA task.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateFuotaTask_request_LoRaWAN'
        FirmwareUpdateImage:
          description: The S3 URI points to a firmware update image that is to be
            used with a FUOTA task.
          maxLength: 4096
          minLength: 1
          type: string
        FirmwareUpdateRole:
          description: The firmware update role that is to be used with a FUOTA task.
          maxLength: 2048
          minLength: 1
          type: string
        RedundancyPercent:
          description: "The percentage of the added fragments that are redundant.\
            \ For example, if the size of the firmware image file is 100 bytes and\
            \ the fragment size is 10 bytes, with <code>RedundancyPercent</code> set\
            \ to 50(%), the final number of encoded fragments is (100 / 10) + (100\
            \ / 10 * 50%) = 15."
          maximum: 100
          minimum: 0
          type: integer
        FragmentSizeBytes:
          description: The size of each fragment in bytes. This parameter is supported
            only for FUOTA tasks with multicast groups.
          minimum: 1
          type: integer
        FragmentIntervalMS:
          description: "<p>The interval for sending fragments in milliseconds, rounded\
            \ to the nearest second.</p> <note> <p>This interval only determines the\
            \ timing for when the Cloud sends down the fragments to yor device. There\
            \ can be a delay for when your device will receive these fragments. This\
            \ delay depends on the device's class and the communication delay with\
            \ the cloud.</p> </note>"
          minimum: 1
          type: integer
      type: object
    UpdateMulticastGroup_request:
      properties:
        Name:
          description: The name of the multicast group.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/CreateMulticastGroup_request_LoRaWAN'
      type: object
    UpdateNetworkAnalyzerConfiguration_request:
      properties:
        TraceContent:
          $ref: '#/components/schemas/CreateNetworkAnalyzerConfiguration_request_TraceContent'
        WirelessDevicesToAdd:
          description: Wireless device resources to add to the network analyzer configuration.
            Provide the <code>WirelessDeviceId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/WirelessDeviceId'
          maxItems: 250
          minItems: 0
          type: array
        WirelessDevicesToRemove:
          description: Wireless device resources to remove from the network analyzer
            configuration. Provide the <code>WirelessDeviceId</code> of the resources
            to remove in the input array.
          items:
            $ref: '#/components/schemas/WirelessDeviceId'
          maxItems: 250
          minItems: 0
          type: array
        WirelessGatewaysToAdd:
          description: Wireless gateway resources to add to the network analyzer configuration.
            Provide the <code>WirelessGatewayId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/WirelessGatewayId'
          type: array
        WirelessGatewaysToRemove:
          description: Wireless gateway resources to remove from the network analyzer
            configuration. Provide the <code>WirelessGatewayId</code> of the resources
            to remove in the input array.
          items:
            $ref: '#/components/schemas/WirelessGatewayId'
          type: array
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        MulticastGroupsToAdd:
          description: Multicast group resources to add to the network analyzer configuration.
            Provide the <code>MulticastGroupId</code> of the resource to add in the
            input array.
          items:
            $ref: '#/components/schemas/MulticastGroupId'
          maxItems: 10
          minItems: 0
          type: array
        MulticastGroupsToRemove:
          description: Multicast group resources to remove from the network analyzer
            configuration. Provide the <code>MulticastGroupId</code> of the resource
            to remove in the input array.
          items:
            $ref: '#/components/schemas/MulticastGroupId'
          maxItems: 10
          minItems: 0
          type: array
      type: object
    UpdateWirelessDevice_request_LoRaWAN_AbpV1_1:
      allOf:
      - $ref: '#/components/schemas/UpdateAbpV1_1'
      - description: ABP device object for update APIs for v1.1
      example:
        FCntStart: ""
    UpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x:
      allOf:
      - $ref: '#/components/schemas/UpdateAbpV1_0_x'
      - description: ABP device object for update APIs for v1.0.x
      example:
        FCntStart: ""
    UpdateWirelessDevice_request_LoRaWAN_FPorts:
      allOf:
      - $ref: '#/components/schemas/UpdateFPorts'
      - description: FPorts object for the positioning information of the device.
      example:
        Positioning:
          Gnss: 33
          Stream: 134
          ClockSync: 18
        Applications: ""
    UpdateWirelessDevice_request_LoRaWAN:
      description: LoRaWAN object for update functions.
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          - description: The ID of the device profile for the wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          - description: The ID of the service profile.
        AbpV1_1:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_AbpV1_1'
        AbpV1_0_x:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_AbpV1_0_x'
        FPorts:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN_FPorts'
      type: object
    UpdateWirelessDevice_request:
      properties:
        DestinationName:
          description: The name of the new destination for the device.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        Name:
          description: The new name of the resource.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        LoRaWAN:
          $ref: '#/components/schemas/UpdateWirelessDevice_request_LoRaWAN'
        Positioning:
          description: "FPort values for the GNSS, stream, and ClockSync functions\
            \ of the positioning information."
          enum:
          - Enabled
          - Disabled
          type: string
      type: object
    UpdateWirelessDeviceImportTask_request_Sidewalk:
      description: Sidewalk object information for updating an import task.
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          - description: The CSV file contained in an S3 bucket that's used for appending
              devices to an existing import task.
      type: object
    UpdateWirelessDeviceImportTask_request:
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateWirelessDeviceImportTask_request_Sidewalk'
      required:
      - Sidewalk
      type: object
    UpdateWirelessGateway_request:
      properties:
        Name:
          description: The new name of the resource.
          maxLength: 256
          type: string
        Description:
          description: The description of the new resource.
          maxLength: 2048
          type: string
        JoinEuiFilters:
          description: A list of JoinEuiRange used by LoRa gateways to filter LoRa
            frames.
          items:
            $ref: '#/components/schemas/JoinEuiRange'
          maxItems: 3
          minItems: 0
          type: array
        NetIdFilters:
          description: A list of NetId values that are used by LoRa gateways to filter
            the uplink frames.
          items:
            $ref: '#/components/schemas/NetId'
          maxItems: 10
          minItems: 0
          type: array
        MaxEirp:
          description: The MaxEIRP value.
          format: float
          maximum: 30
          minimum: 0
          type: number
      type: object
    UpdatePartnerAccount_request_Sidewalk:
      description: Sidewalk update.
      properties:
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          - description: The new Sidewalk application server private key.
      type: object
    UpdatePartnerAccount_request:
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdatePartnerAccount_request_Sidewalk'
      required:
      - Sidewalk
      type: object
    UpdateEventConfigurationByResourceTypes_request_DeviceRegistrationState_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
      - description: Device registration resource type state event configuration object
          for enabling or disabling Sidewalk related event topics.
      example:
        WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypes_request_DeviceRegistrationState:
      description: Device registration state resource type event configuration object
        for enabling or disabling topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_DeviceRegistrationState_Sidewalk'
      type: object
    UpdateEventConfigurationByResourceTypes_request_Proximity_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
      - description: Proximity resource type event configuration object for enabling
          and disabling wireless device topic.
      example:
        WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypes_request_Proximity:
      description: Proximity resource type event configuration object for enabling
        or disabling topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Proximity_Sidewalk'
      type: object
    UpdateEventConfigurationByResourceTypes_request_Join_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANJoinResourceTypeEventConfiguration'
      - description: Join resource type event configuration object for enabling or
          disabling LoRaWAN related event topics.
      example:
        WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypes_request_Join:
      description: Join resource type event configuration object for enabling or disabling
        topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Join_LoRaWAN'
      type: object
    UpdateEventConfigurationByResourceTypes_request_ConnectionStatus_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANConnectionStatusResourceTypeEventConfiguration'
      - description: Connection status resource type event configuration object for
          enabling or disabling LoRaWAN related event topics.
      example:
        WirelessGatewayEventTopic: ""
    UpdateEventConfigurationByResourceTypes_request_ConnectionStatus:
      description: Connection status resource type event configuration object for
        enabling or disabling topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_ConnectionStatus_LoRaWAN'
      type: object
    UpdateEventConfigurationByResourceTypes_request_MessageDeliveryStatus:
      description: Message delivery status resource type event configuration object
        for enabling or disabling relevant topic.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
      type: object
    UpdateEventConfigurationByResourceTypes_request:
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Proximity'
        Join:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/UpdateEventConfigurationByResourceTypes_request_MessageDeliveryStatus'
      type: object
    UpdateLogLevelsByResourceTypes_request:
      properties:
        DefaultLogLevel:
          description: "The log level for a log message. The log levels can be disabled,\
            \ or set to <code>ERROR</code> to display less verbose logs containing\
            \ only error information, or to <code>INFO</code> for more detailed logs."
          enum:
          - INFO
          - ERROR
          - DISABLED
          type: string
        WirelessDeviceLogOptions:
          description: The list of wireless device log options.
          items:
            $ref: '#/components/schemas/WirelessDeviceLogOption'
          type: array
        WirelessGatewayLogOptions:
          description: The list of wireless gateway log options.
          items:
            $ref: '#/components/schemas/WirelessGatewayLogOption'
          type: array
      type: object
    UpdatePosition_request:
      properties:
        Position:
          description: The position information of the resource.
          items:
            $ref: '#/components/schemas/PositionCoordinateValue'
          type: array
      required:
      - Position
      type: object
    PutPositionConfiguration_request_Solvers_SemtechGnss:
      allOf:
      - $ref: '#/components/schemas/SemtechGnssConfiguration'
      - description: The Semtech GNSS solver configuration object.
      example:
        Status: ""
        Fec: ""
    PutPositionConfiguration_request_Solvers:
      description: The wrapper for position solver configurations.
      properties:
        SemtechGnss:
          $ref: '#/components/schemas/PutPositionConfiguration_request_Solvers_SemtechGnss'
      type: object
    PutPositionConfiguration_request:
      properties:
        Solvers:
          $ref: '#/components/schemas/PutPositionConfiguration_request_Solvers'
        Destination:
          description: The position data destination that describes the AWS IoT rule
            that processes the device's position data for use by AWS IoT Core for
            LoRaWAN.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
      type: object
    GetPositionEstimate_request_CellTowers:
      description: The cell towers that were used to perform the measurements.
      properties:
        Gsm:
          allOf:
          - $ref: '#/components/schemas/GsmList'
          - description: GSM object information.
        Wcdma:
          allOf:
          - $ref: '#/components/schemas/WcdmaList'
          - description: WCDMA object information.
        Tdscdma:
          allOf:
          - $ref: '#/components/schemas/TdscdmaList'
          - description: TD-SCDMA object information.
        Lte:
          allOf:
          - $ref: '#/components/schemas/LteList'
          - description: LTE object information.
        Cdma:
          allOf:
          - $ref: '#/components/schemas/CdmaList'
          - description: CDMA object information.
      type: object
    GetPositionEstimate_request_Ip:
      description: IP address used for resolving device location.
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          - description: IP address information.
      type: object
    GetPositionEstimate_request_Gnss:
      description: Global navigation satellite system (GNSS) object used for positioning.
      properties:
        Payload:
          allOf:
          - $ref: '#/components/schemas/GnssNav'
          - description: "Payload that contains the GNSS scan result, or NAV message,\
              \ in hexadecimal notation."
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/GPST'
          - description: "Optional parameter that gives an estimate of the time when\
              \ the GNSS scan information is taken, in seconds GPS time (GPST). If\
              \ capture time is not specified, the local server time is used."
        CaptureTimeAccuracy:
          allOf:
          - $ref: '#/components/schemas/CaptureTimeAccuracy'
          - description: "Optional value that gives the capture time estimate accuracy,\
              \ in seconds. If capture time accuracy is not specified, default value\
              \ of 300 is used."
        AssistPosition:
          allOf:
          - $ref: '#/components/schemas/AssistPosition'
          - description: "Optional assistance position information, specified using\
              \ latitude and longitude values in degrees. The coordinates are inside\
              \ the WGS84 reference frame."
        AssistAltitude:
          allOf:
          - $ref: '#/components/schemas/Coordinate'
          - description: "Optional assistance altitude, which is the altitude of the\
              \ device at capture time, specified in meters above the WGS84 reference\
              \ ellipsoid."
        Use2DSolver:
          allOf:
          - $ref: '#/components/schemas/Use2DSolver'
          - description: "Optional parameter that forces 2D solve, which modifies\
              \ the positioning algorithm to a 2D solution problem. When this parameter\
              \ is specified, the assistance altitude should have an accuracy of at\
              \ least 10 meters."
      type: object
    GetPositionEstimate_request:
      properties:
        WiFiAccessPoints:
          description: Retrieves an estimated device position by resolving WLAN measurement
            data. The position is resolved using HERE's Wi-Fi based solver.
          items:
            $ref: '#/components/schemas/WiFiAccessPoint'
          type: array
        CellTowers:
          $ref: '#/components/schemas/GetPositionEstimate_request_CellTowers'
        Ip:
          $ref: '#/components/schemas/GetPositionEstimate_request_Ip'
        Gnss:
          $ref: '#/components/schemas/GetPositionEstimate_request_Gnss'
        Timestamp:
          description: "Optional information that specifies the time when the position\
            \ information will be resolved. It uses the Unix timestamp format. If\
            \ not specified, the time at which the request was received will be used."
          format: date-time
          type: string
      type: object
    UpdateResourceEventConfiguration_request_DeviceRegistrationState_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
      - description: Device registration state event configuration object for enabling
          or disabling Sidewalk related event topics.
      example:
        AmazonIdEventTopic: ""
    UpdateResourceEventConfiguration_request_DeviceRegistrationState:
      description: Device registration state event configuration object for enabling
        and disabling relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_DeviceRegistrationState_Sidewalk'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID device registration
              state event topic is enabled or disabled.
      type: object
    UpdateResourceEventConfiguration_request_Proximity_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
      - description: Proximity event configuration object for enabling or disabling
          Sidewalk related event topics.
      example:
        AmazonIdEventTopic: ""
    UpdateResourceEventConfiguration_request_Proximity:
      description: Proximity event configuration object for enabling and disabling
        relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Proximity_Sidewalk'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID proximity event topic
              is enabled or disabled.
      type: object
    UpdateResourceEventConfiguration_request_Join_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANJoinEventNotificationConfigurations'
      - description: Join event configuration object for enabling or disabling LoRaWAN
          related event topics.
      example:
        DevEuiEventTopic: ""
    UpdateResourceEventConfiguration_request_Join:
      description: Join event configuration object for enabling or disabling topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Join_LoRaWAN'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID join event topic is
              enabled or disabled.
      type: object
    UpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANConnectionStatusEventNotificationConfigurations'
      - description: Connection status event configuration object for enabling or
          disabling LoRaWAN related event topics.
      example:
        GatewayEuiEventTopic: ""
    UpdateResourceEventConfiguration_request_ConnectionStatus:
      description: Connection status event configuration object for enabling or disabling
        topic.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_ConnectionStatus_LoRaWAN'
        WirelessGatewayIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless gateway ID connection status
              event topic is enabled or disabled.
      type: object
    UpdateResourceEventConfiguration_request_MessageDeliveryStatus:
      description: Message delivery status event configuration object for enabling
        and disabling relevant topics.
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          - description: Denotes whether the wireless device ID message delivery status
              event topic is enabled or disabled.
      type: object
    UpdateResourceEventConfiguration_request:
      properties:
        DeviceRegistrationState:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_DeviceRegistrationState'
        Proximity:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Proximity'
        Join:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_Join'
        ConnectionStatus:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_ConnectionStatus'
        MessageDeliveryStatus:
          $ref: '#/components/schemas/UpdateResourceEventConfiguration_request_MessageDeliveryStatus'
      type: object
    PutResourceLogLevel_request:
      properties:
        LogLevel:
          description: "The log level for a log message. The log levels can be disabled,\
            \ or set to <code>ERROR</code> to display less verbose logs containing\
            \ only error information, or to <code>INFO</code> for more detailed logs."
          enum:
          - INFO
          - ERROR
          - DISABLED
          type: string
      required:
      - LogLevel
      type: object
    UpdateResourcePosition_request:
      properties:
        GeoJsonPayload:
          description: "The position information of the resource, displayed as a JSON\
            \ payload. The payload uses the GeoJSON format, which a format that's\
            \ used to encode geographic data structures. For more information, see\
            \ <a href=\"https://geojson.org/\">GeoJSON</a>."
          type: string
      type: object
    SendDataToWirelessDevice_request_WirelessMetadata_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANSendDataToDevice'
      - description: LoRaWAN device info.
      example:
        FPort: 18
        ParticipatingGateways:
          DownlinkMode: ""
          TransmissionInterval: ""
          GatewayList: ""
    SendDataToWirelessDevice_request_WirelessMetadata_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkSendDataToDevice'
      - description: The Sidewalk account credentials.
      example:
        AckModeRetryDurationSecs: ""
        Seq: ""
        MessageType: CUSTOM_COMMAND_ID_NOTIFY
    SendDataToWirelessDevice_request_WirelessMetadata:
      description: WirelessMetadata object.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/SendDataToWirelessDevice_request_WirelessMetadata_LoRaWAN'
        Sidewalk:
          $ref: '#/components/schemas/SendDataToWirelessDevice_request_WirelessMetadata_Sidewalk'
      type: object
    SendDataToWirelessDevice_request:
      properties:
        TransmitMode:
          description: "The transmit mode to use to send data to the wireless device.\
            \ Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code>\
            \ for AM (acknowledge mode)."
          maximum: 1
          minimum: 0
          type: integer
        PayloadData:
          description: "The binary to be sent to the end device, encoded in base64."
          maxLength: 2048
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        WirelessMetadata:
          $ref: '#/components/schemas/SendDataToWirelessDevice_request_WirelessMetadata'
      required:
      - PayloadData
      - TransmitMode
      type: object
    TagResource_request:
      properties:
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - Tags
      type: object
    SendDataToMulticastGroup_request_WirelessMetadata:
      description: Wireless metadata that is to be sent to multicast group.
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastMetadata'
      type: object
    SendDataToMulticastGroup_request:
      properties:
        PayloadData:
          description: "The binary to be sent to the end device, encoded in base64."
          maxLength: 2048
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        WirelessMetadata:
          $ref: '#/components/schemas/SendDataToMulticastGroup_request_WirelessMetadata'
      required:
      - PayloadData
      - WirelessMetadata
      type: object
    StartBulkDisassociateWirelessDeviceFromMulticastGroup_request:
      properties:
        QueryString:
          description: Query string used to search for wireless devices as part of
            the bulk associate and disassociate process.
          maxLength: 4096
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      type: object
    StartSingleWirelessDeviceImportTask_request_Sidewalk:
      description: Information about an import task created for an individual Sidewalk
        device.
      properties:
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          - description: The Sidewalk manufacturing serial number (SMSN) of the device
              added to the import task.
      type: object
    StartSingleWirelessDeviceImportTask_request:
      properties:
        DestinationName:
          description: The name of the Sidewalk destination that describes the IoT
            rule to route messages from the device in the import task that will be
            onboarded to AWS IoT Wireless.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        DeviceName:
          description: The name of the wireless device for which an import task is
            being started.
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        Sidewalk:
          $ref: '#/components/schemas/StartSingleWirelessDeviceImportTask_request_Sidewalk'
      required:
      - DestinationName
      - Sidewalk
      type: object
    StartWirelessDeviceImportTask_request_Sidewalk:
      description: Information about an import task created for bulk provisioning.
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          - description: The CSV file contained in an S3 bucket that's used for adding
              devices to an import task.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The IAM role that allows AWS IoT Wireless to access the CSV
              file in the S3 bucket.
      type: object
    StartWirelessDeviceImportTask_request:
      properties:
        DestinationName:
          description: The name of the Sidewalk destination that describes the IoT
            rule to route messages from the devices in the import task that are onboarded
            to AWS IoT Wireless.
          maxLength: 128
          pattern: "[a-zA-Z0-9-_]+"
          type: string
        ClientRequestToken:
          description: "Each resource must have a unique client request token. If\
            \ you try to create a new resource with the same token as a resource that\
            \ already exists, an exception occurs. If you omit this value, AWS SDKs\
            \ will automatically generate a unique client request."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9-_]+$"
          type: string
        Tags:
          description: The tag to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        Sidewalk:
          $ref: '#/components/schemas/StartWirelessDeviceImportTask_request_Sidewalk'
      required:
      - DestinationName
      - Sidewalk
      type: object
    AssociateAwsAccountWithPartnerAccountResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkAccountInfo'
      - description: The Sidewalk account credentials.
      example:
        AppServerPrivateKey: ""
        AmazonId: ""
    AbpV1_1_SessionKeys:
      allOf:
      - $ref: '#/components/schemas/SessionKeysAbpV1_1'
      - description: Session keys for ABP v1.1
      example:
        FNwkSIntKey: ""
        AppSKey: ""
        SNwkSIntKey: ""
        NwkSEncKey: ""
    AbpV1_0_x_SessionKeys:
      allOf:
      - $ref: '#/components/schemas/SessionKeysAbpV1_0_x'
      - description: Session keys for ABP v1.0.x
      example:
        AppSKey: ""
        NwkSKey: ""
    FPorts_Positioning:
      allOf:
      - $ref: '#/components/schemas/Positioning'
      - description: "FPort values for the GNSS, stream, and ClockSync functions of\
          \ the positioning information."
      example:
        Gnss: 52
        Stream: 126
        ClockSync: 133
    LoRaWANUpdateGatewayTaskCreate_CurrentVersion:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGatewayVersion'
      - description: The version of the gateways that should receive the update.
      example:
        Station: ""
        Model: ""
        PackageVersion: ""
    LoRaWANUpdateGatewayTaskCreate_UpdateVersion:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGatewayVersion'
      - description: The firmware version to update the gateway to.
      example:
        Station: ""
        Model: ""
        PackageVersion: ""
    GetDeviceProfileResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANDeviceProfile'
      - description: Information about the device profile.
      example:
        PingSlotPeriod: ""
        ClassCTimeout: ""
        RxFreq2: ""
        RfRegion: ""
        ClassBTimeout: ""
        RxDelay1: ""
        SupportsClassC: ""
        SupportsClassB: ""
        RxDrOffset1: ""
        MaxEirp: ""
        FactoryPresetFreqsList: ""
        SupportsJoin: ""
        PingSlotDr: ""
        MacVersion: ""
        PingSlotFreq: ""
        RegParamsRevision: ""
        RxDataRate2: ""
        Supports32BitFCnt: ""
        MaxDutyCycle: ""
    GetDeviceProfileResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkGetDeviceProfile'
      - description: Information about the Sidewalk parameters in the device profile.
      example:
        ApplicationServerPublicKey: ""
        QualificationStatus: ""
        DakCertificateMetadata: ""
    GetEventConfigurationByResourceTypesResponse_DeviceRegistrationState:
      allOf:
      - $ref: '#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration'
      - description: Resource type event configuration for the device registration
          state event.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    GetEventConfigurationByResourceTypesResponse_Proximity:
      allOf:
      - $ref: '#/components/schemas/ProximityResourceTypeEventConfiguration'
      - description: Resource type event configuration for the proximity event.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    GetEventConfigurationByResourceTypesResponse_Join:
      allOf:
      - $ref: '#/components/schemas/JoinResourceTypeEventConfiguration'
      - description: Resource type event configuration for the join event.
      example:
        LoRaWAN:
          WirelessDeviceEventTopic: ""
    GetEventConfigurationByResourceTypesResponse_ConnectionStatus:
      allOf:
      - $ref: '#/components/schemas/ConnectionStatusResourceTypeEventConfiguration'
      - description: Resource type event configuration for the connection status event.
      example:
        LoRaWAN:
          WirelessGatewayEventTopic: ""
    GetEventConfigurationByResourceTypesResponse_MessageDeliveryStatus:
      allOf:
      - $ref: '#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration'
      - description: Resource type event configuration object for the message delivery
          status event.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    GetPartnerAccountResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
      - description: The Sidewalk account credentials.
      example:
        Fingerprint: ""
        AmazonId: ""
        Arn: ""
    GetPositionResponse_Accuracy:
      allOf:
      - $ref: '#/components/schemas/Accuracy'
      - description: The accuracy of the estimated position in meters. An empty value
          indicates that no position data is available. A value of ‘0.0’ value indicates
          that position data is available. This data corresponds to the position information
          that you specified instead of the position computed by solver.
      example:
        VerticalAccuracy: ""
        HorizontalAccuracy: ""
    GetPositionConfigurationResponse_Solvers:
      allOf:
      - $ref: '#/components/schemas/PositionSolverDetails'
      - description: The wrapper for the solver configuration details object.
      example:
        SemtechGnss:
          Status: ""
          Type: ""
          Fec: ""
          Provider: ""
    GetResourceEventConfigurationResponse_DeviceRegistrationState:
      allOf:
      - $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
      - description: Event configuration for the device registration state event.
      example:
        WirelessDeviceIdEventTopic: ""
        Sidewalk:
          AmazonIdEventTopic: ""
    GetResourceEventConfigurationResponse_Proximity:
      allOf:
      - $ref: '#/components/schemas/ProximityEventConfiguration'
      - description: Event configuration for the proximity event.
      example:
        WirelessDeviceIdEventTopic: ""
        Sidewalk:
          AmazonIdEventTopic: ""
    GetResourceEventConfigurationResponse_Join:
      allOf:
      - $ref: '#/components/schemas/JoinEventConfiguration'
      - description: Event configuration for the join event.
      example:
        LoRaWAN:
          DevEuiEventTopic: ""
        WirelessDeviceIdEventTopic: ""
    GetResourceEventConfigurationResponse_ConnectionStatus:
      allOf:
      - $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
      - description: Event configuration for the connection status event.
      example:
        LoRaWAN:
          GatewayEuiEventTopic: ""
        WirelessGatewayIdEventTopic: ""
    GetResourceEventConfigurationResponse_MessageDeliveryStatus:
      allOf:
      - $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
      - description: Event configuration for the message delivery status event.
      example:
        WirelessDeviceIdEventTopic: ""
        Sidewalk:
          AmazonIdEventTopic: ""
    GetServiceProfileResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGetServiceProfileInfo'
      - description: Information about the service profile.
      example:
        DlBucketSize: ""
        MinGwDiversity: ""
        DrMax: ""
        ReportDevStatusMargin: ""
        PrAllowed: ""
        DlRate: ""
        UlRatePolicy: ""
        ReportDevStatusBattery: ""
        ChannelMask: ""
        UlRate: ""
        AddGwMetadata: ""
        DlRatePolicy: ""
        HrAllowed: ""
        DrMin: ""
        TargetPer: ""
        NwkGeoLoc: ""
        DevStatusReqFreq: ""
        UlBucketSize: ""
        RaAllowed: ""
    GetWirelessDeviceResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANDevice'
      - description: Information about the wireless device.
      example:
        FPorts:
          Multicast: 134
          Positioning:
            Gnss: 52
            Stream: 126
            ClockSync: 133
          Applications: ""
          Fuota: 18
          ClockSync: 33
        OtaaV1_0_x:
          AppEui: ""
          GenAppKey: ""
          AppKey: ""
        DeviceProfileId: ""
        OtaaV1_1:
          NwkKey: ""
          AppKey: ""
          JoinEui: ""
        AbpV1_0_x:
          FCntStart: ""
          SessionKeys:
            AppSKey: ""
            NwkSKey: ""
          DevAddr: ""
        DevEui: ""
        ServiceProfileId: ""
        AbpV1_1:
          FCntStart: ""
          SessionKeys:
            FNwkSIntKey: ""
            AppSKey: ""
            SNwkSIntKey: ""
            NwkSEncKey: ""
          DevAddr: ""
    GetWirelessDeviceResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkDevice'
      - description: Sidewalk device object.
      example:
        Status: ""
        SidewalkManufacturingSn: ""
        DeviceProfileId: ""
        CertificateId: ""
        DeviceCertificates: ""
        AmazonId: AmazonId
        SidewalkId: ""
        PrivateKeys: ""
    GetWirelessDeviceImportTaskResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkGetStartImportInfo'
      - description: The Sidewalk-related information about an import task.
      example:
        Role: ""
        DeviceCreationFileList: ""
    GetWirelessDeviceStatisticsResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANDeviceMetadata'
      - description: Information about the wireless device's operations.
      example:
        DataRate: ""
        FPort: ""
        Gateways: ""
        Frequency: ""
        DevEui: ""
        Timestamp: ""
    GetWirelessDeviceStatisticsResponse_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkDeviceMetadata'
      - description: MetaData for Sidewalk device.
      example:
        Rssi: ""
        DeviceState: ""
        BatteryLevel: ""
        Event: ""
    GetWirelessGatewayResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGateway'
      - description: Information about the wireless gateway.
      example:
        RfRegion: ""
        NetIdFilters:
        - null
        - null
        - null
        - null
        - null
        MaxEirp: ""
        JoinEuiFilters:
        - - null
          - null
        - - null
          - null
        - - null
          - null
        Beaconing:
          DataRate: ""
          Frequencies: ""
        SubBands:
        - null
        - null
        - null
        - null
        - null
        GatewayEui: ""
    GetWirelessGatewayFirmwareInformationResponse_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGatewayCurrentVersion'
      - description: Information about the wireless gateway's firmware.
      example:
        CurrentVersion:
          Station: ""
          Model: ""
          PackageVersion: ""
    GetWirelessGatewayTaskDefinitionResponse_Update:
      allOf:
      - $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
      - description: Information about the gateways to update.
      example:
        LoRaWAN:
          UpdateSignature: ""
          SigKeyCrc: ""
          UpdateVersion:
            Station: ""
            Model: ""
            PackageVersion: ""
          CurrentVersion:
            Station: ""
            Model: ""
            PackageVersion: ""
        UpdateDataSource: ""
        UpdateDataRole: ""
    LoRaWANSendDataToDevice_ParticipatingGateways:
      allOf:
      - $ref: '#/components/schemas/ParticipatingGateways'
      - description: Choose the gateways that you want to use for the downlink data
          traffic when the wireless device is running in class B or class C mode.
      example:
        DownlinkMode: ""
        TransmissionInterval: ""
        GatewayList: ""
    UpdateFPorts_Positioning:
      allOf:
      - $ref: '#/components/schemas/Positioning'
      - description: "Positioning FPorts for the ClockSync, Stream, and GNSS functions."
      example:
        Gnss: 33
        Stream: 134
        ClockSync: 18
    CdmaObj_CdmaLocalId:
      allOf:
      - $ref: '#/components/schemas/CdmaLocalId'
      - description: CDMA local identification (local ID) parameters.
    CreateDeviceProfileRequest_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANDeviceProfile'
      - description: The device profile information to use to create the device profile.
      example:
        PingSlotPeriod: ""
        ClassCTimeout: ""
        RxFreq2: ""
        RfRegion: ""
        ClassBTimeout: ""
        RxDelay1: ""
        SupportsClassC: ""
        SupportsClassB: ""
        RxDrOffset1: ""
        MaxEirp: ""
        FactoryPresetFreqsList: ""
        SupportsJoin: ""
        PingSlotDr: ""
        MacVersion: ""
        PingSlotFreq: ""
        RegParamsRevision: ""
        RxDataRate2: ""
        Supports32BitFCnt: ""
        MaxDutyCycle: ""
    CreateServiceProfileRequest_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANServiceProfile'
      - description: The service profile information to use to create the service
          profile.
      example:
        AddGwMetadata: ""
        DrMax: ""
        DrMin: ""
        PrAllowed: ""
        RaAllowed: ""
    CreateWirelessDeviceRequest_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANDevice'
      - description: The device configuration information to use to create the wireless
          device.
      example:
        FPorts:
          Multicast: 134
          Positioning:
            Gnss: 52
            Stream: 126
            ClockSync: 133
          Applications: ""
          Fuota: 18
          ClockSync: 33
        OtaaV1_0_x:
          AppEui: ""
          GenAppKey: ""
          AppKey: ""
        DeviceProfileId: ""
        OtaaV1_1:
          NwkKey: ""
          AppKey: ""
          JoinEui: ""
        AbpV1_0_x:
          FCntStart: ""
          SessionKeys:
            AppSKey: ""
            NwkSKey: ""
          DevAddr: ""
        DevEui: ""
        ServiceProfileId: ""
        AbpV1_1:
          FCntStart: ""
          SessionKeys:
            FNwkSIntKey: ""
            AppSKey: ""
            SNwkSIntKey: ""
            NwkSEncKey: ""
          DevAddr: ""
    CreateWirelessDeviceRequest_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkCreateWirelessDevice'
      - description: The device configuration information to use to create the Sidewalk
          device.
      example:
        DeviceProfileId: ""
    CreateWirelessGatewayRequest_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGateway'
      - description: The gateway configuration information to use to create the wireless
          gateway.
      example:
        RfRegion: ""
        NetIdFilters:
        - null
        - null
        - null
        - null
        - null
        MaxEirp: ""
        JoinEuiFilters:
        - - null
          - null
        - - null
          - null
        - - null
          - null
        Beaconing:
          DataRate: ""
          Frequencies: ""
        SubBands:
        - null
        - null
        - null
        - null
        - null
        GatewayEui: ""
    EventNotificationItemConfigurations_DeviceRegistrationState:
      allOf:
      - $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
      - description: Device registration state event configuration for an event configuration
          item.
    EventNotificationItemConfigurations_Proximity:
      allOf:
      - $ref: '#/components/schemas/ProximityEventConfiguration'
      - description: Proximity event configuration for an event configuration item.
    EventNotificationItemConfigurations_Join:
      allOf:
      - $ref: '#/components/schemas/JoinEventConfiguration'
      - description: Join event configuration for an event configuration item.
    EventNotificationItemConfigurations_ConnectionStatus:
      allOf:
      - $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
      - description: Connection status event configuration for an event configuration
          item.
    EventNotificationItemConfigurations_MessageDeliveryStatus:
      allOf:
      - $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
      - description: Message delivery status event configuration for an event configuration
          item.
    PositionSolverDetails_SemtechGnss:
      allOf:
      - $ref: '#/components/schemas/SemtechGnssDetail'
      - description: The Semtech GNSS solver object details.
      example:
        Status: ""
        Type: ""
        Fec: ""
        Provider: ""
    GetPositionEstimateRequest_CellTowers:
      allOf:
      - $ref: '#/components/schemas/CellTowers'
      - description: Retrieves an estimated device position by resolving measurement
          data from cellular radio towers. The position is resolved using HERE's cellular-based
          solver.
      example:
        Gsm: ""
        Wcdma: ""
        Cdma: ""
        Tdscdma: ""
        Lte: ""
    GetPositionEstimateRequest_Ip:
      allOf:
      - $ref: '#/components/schemas/Ip'
      - description: Retrieves an estimated device position by resolving the IP address
          information from the device. The position is resolved using MaxMind's IP-based
          solver.
      example:
        IpAddress: ""
    GetPositionEstimateRequest_Gnss:
      allOf:
      - $ref: '#/components/schemas/Gnss'
      - description: Retrieves an estimated device position by resolving the global
          navigation satellite system (GNSS) scan data. The position is resolved using
          the GNSS solver powered by LoRa Cloud.
      example:
        CaptureTimeAccuracy: ""
        AssistPosition: ""
        CaptureTime: ""
        Payload: ""
        Use2DSolver: ""
        AssistAltitude: ""
    GsmObj_GsmLocalId:
      allOf:
      - $ref: '#/components/schemas/GsmLocalId'
      - description: GSM local identification (local ID) information.
    GsmNmrObj_GlobalIdentity:
      allOf:
      - $ref: '#/components/schemas/GlobalIdentity'
      - description: Global identity information of the GSM object.
    ImportedWirelessDevice_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/ImportedSidewalkDevice'
      - description: The Sidewalk-related information about a device that has been
          added to an import task.
    LteObj_LteLocalId:
      allOf:
      - $ref: '#/components/schemas/LteLocalId'
      - description: LTE local identification (local ID) information.
    PositionConfigurationItem_Solvers:
      allOf:
      - $ref: '#/components/schemas/PositionSolverDetails'
      - description: The details of the positioning solver object used to compute
          the location.
    PutPositionConfigurationRequest_Solvers:
      allOf:
      - $ref: '#/components/schemas/PositionSolverConfigurations'
      - description: The positioning solvers used to update the position configuration
          of the resource.
      example:
        SemtechGnss:
          Status: ""
          Fec: ""
    SendDataToWirelessDeviceRequest_WirelessMetadata:
      allOf:
      - $ref: '#/components/schemas/WirelessMetadata'
      - description: Metadata about the message request.
      example:
        LoRaWAN:
          FPort: 18
          ParticipatingGateways:
            DownlinkMode: ""
            TransmissionInterval: ""
            GatewayList: ""
        Sidewalk:
          AckModeRetryDurationSecs: ""
          Seq: ""
          MessageType: CUSTOM_COMMAND_ID_NOTIFY
    StartSingleWirelessDeviceImportTaskRequest_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkSingleStartImportInfo'
      - description: The Sidewalk-related parameters for importing a single wireless
          device.
      example:
        SidewalkManufacturingSn: ""
    StartWirelessDeviceImportTaskRequest_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkStartImportInfo'
      - description: The Sidewalk-related parameters for importing wireless devices
          that need to be provisioned in bulk.
      example:
        Role: ""
        DeviceCreationFile: ""
    TdscdmaObj_TdscdmaLocalId:
      allOf:
      - $ref: '#/components/schemas/TdscdmaLocalId'
      - description: TD-SCDMA local identification (local ID) information.
    UpdateEventConfigurationByResourceTypesRequest_DeviceRegistrationState:
      allOf:
      - $ref: '#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration'
      - description: Device registration state resource type event configuration object
          for enabling and disabling wireless gateway topic.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypesRequest_Proximity:
      allOf:
      - $ref: '#/components/schemas/ProximityResourceTypeEventConfiguration'
      - description: Proximity resource type event configuration object for enabling
          and disabling wireless gateway topic.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypesRequest_Join:
      allOf:
      - $ref: '#/components/schemas/JoinResourceTypeEventConfiguration'
      - description: Join resource type event configuration object for enabling and
          disabling wireless device topic.
      example:
        LoRaWAN:
          WirelessDeviceEventTopic: ""
    UpdateEventConfigurationByResourceTypesRequest_ConnectionStatus:
      allOf:
      - $ref: '#/components/schemas/ConnectionStatusResourceTypeEventConfiguration'
      - description: Connection status resource type event configuration object for
          enabling and disabling wireless gateway topic.
      example:
        LoRaWAN:
          WirelessGatewayEventTopic: ""
    UpdateEventConfigurationByResourceTypesRequest_MessageDeliveryStatus:
      allOf:
      - $ref: '#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration'
      - description: Message delivery status resource type event configuration object
          for enabling and disabling wireless device topic.
      example:
        Sidewalk:
          WirelessDeviceEventTopic: ""
    UpdatePartnerAccountRequest_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkUpdateAccount'
      - description: The Sidewalk account credentials.
      example:
        AppServerPrivateKey: ""
    UpdateWirelessDeviceImportTaskRequest_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkUpdateImportInfo'
      - description: The Sidewalk-related parameters of the import task to be updated.
      example:
        DeviceCreationFile: ""
    UpdateWirelessDeviceRequest_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANUpdateDevice'
      - description: The updated wireless device's configuration.
      example:
        FPorts:
          Positioning:
            Gnss: 33
            Stream: 134
            ClockSync: 18
          Applications: ""
        DeviceProfileId: ""
        AbpV1_0_x:
          FCntStart: ""
        ServiceProfileId: ""
        AbpV1_1:
          FCntStart: ""
    UpdateWirelessGatewayTaskEntry_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
      - description: The properties that relate to the LoRaWAN wireless gateway.
    WcdmaObj_WcdmaLocalId:
      allOf:
      - $ref: '#/components/schemas/WcdmaLocalId'
      - description: WCDMA local ID information.
    WirelessDeviceImportTask_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkGetStartImportInfo'
      - description: The Sidewalk-related information of the wireless device import
          task.
    WirelessDeviceStatistics_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANListDevice'
      - description: LoRaWAN device info.
    WirelessDeviceStatistics_Sidewalk:
      allOf:
      - $ref: '#/components/schemas/SidewalkListDevice'
      - description: The Sidewalk account credentials.
    WirelessGatewayStatistics_LoRaWAN:
      allOf:
      - $ref: '#/components/schemas/LoRaWANGateway'
      - description: LoRaWAN gateway info.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

