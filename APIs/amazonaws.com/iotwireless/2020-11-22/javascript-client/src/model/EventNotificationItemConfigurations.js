/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventNotificationItemConfigurationsConnectionStatus from './EventNotificationItemConfigurationsConnectionStatus';
import EventNotificationItemConfigurationsDeviceRegistrationState from './EventNotificationItemConfigurationsDeviceRegistrationState';
import EventNotificationItemConfigurationsJoin from './EventNotificationItemConfigurationsJoin';
import EventNotificationItemConfigurationsMessageDeliveryStatus from './EventNotificationItemConfigurationsMessageDeliveryStatus';
import EventNotificationItemConfigurationsProximity from './EventNotificationItemConfigurationsProximity';

/**
 * The EventNotificationItemConfigurations model module.
 * @module model/EventNotificationItemConfigurations
 * @version 2020-11-22
 */
class EventNotificationItemConfigurations {
    /**
     * Constructs a new <code>EventNotificationItemConfigurations</code>.
     * Object of all event configurations and the status of the event topics.
     * @alias module:model/EventNotificationItemConfigurations
     */
    constructor() { 
        
        EventNotificationItemConfigurations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventNotificationItemConfigurations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventNotificationItemConfigurations} obj Optional instance to populate.
     * @return {module:model/EventNotificationItemConfigurations} The populated <code>EventNotificationItemConfigurations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventNotificationItemConfigurations();

            if (data.hasOwnProperty('DeviceRegistrationState')) {
                obj['DeviceRegistrationState'] = EventNotificationItemConfigurationsDeviceRegistrationState.constructFromObject(data['DeviceRegistrationState']);
            }
            if (data.hasOwnProperty('Proximity')) {
                obj['Proximity'] = EventNotificationItemConfigurationsProximity.constructFromObject(data['Proximity']);
            }
            if (data.hasOwnProperty('Join')) {
                obj['Join'] = EventNotificationItemConfigurationsJoin.constructFromObject(data['Join']);
            }
            if (data.hasOwnProperty('ConnectionStatus')) {
                obj['ConnectionStatus'] = EventNotificationItemConfigurationsConnectionStatus.constructFromObject(data['ConnectionStatus']);
            }
            if (data.hasOwnProperty('MessageDeliveryStatus')) {
                obj['MessageDeliveryStatus'] = EventNotificationItemConfigurationsMessageDeliveryStatus.constructFromObject(data['MessageDeliveryStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventNotificationItemConfigurations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventNotificationItemConfigurations</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DeviceRegistrationState`
        if (data['DeviceRegistrationState']) { // data not null
          EventNotificationItemConfigurationsDeviceRegistrationState.validateJSON(data['DeviceRegistrationState']);
        }
        // validate the optional field `Proximity`
        if (data['Proximity']) { // data not null
          EventNotificationItemConfigurationsProximity.validateJSON(data['Proximity']);
        }
        // validate the optional field `Join`
        if (data['Join']) { // data not null
          EventNotificationItemConfigurationsJoin.validateJSON(data['Join']);
        }
        // validate the optional field `ConnectionStatus`
        if (data['ConnectionStatus']) { // data not null
          EventNotificationItemConfigurationsConnectionStatus.validateJSON(data['ConnectionStatus']);
        }
        // validate the optional field `MessageDeliveryStatus`
        if (data['MessageDeliveryStatus']) { // data not null
          EventNotificationItemConfigurationsMessageDeliveryStatus.validateJSON(data['MessageDeliveryStatus']);
        }

        return true;
    }


}



/**
 * @member {module:model/EventNotificationItemConfigurationsDeviceRegistrationState} DeviceRegistrationState
 */
EventNotificationItemConfigurations.prototype['DeviceRegistrationState'] = undefined;

/**
 * @member {module:model/EventNotificationItemConfigurationsProximity} Proximity
 */
EventNotificationItemConfigurations.prototype['Proximity'] = undefined;

/**
 * @member {module:model/EventNotificationItemConfigurationsJoin} Join
 */
EventNotificationItemConfigurations.prototype['Join'] = undefined;

/**
 * @member {module:model/EventNotificationItemConfigurationsConnectionStatus} ConnectionStatus
 */
EventNotificationItemConfigurations.prototype['ConnectionStatus'] = undefined;

/**
 * @member {module:model/EventNotificationItemConfigurationsMessageDeliveryStatus} MessageDeliveryStatus
 */
EventNotificationItemConfigurations.prototype['MessageDeliveryStatus'] = undefined;






export default EventNotificationItemConfigurations;

