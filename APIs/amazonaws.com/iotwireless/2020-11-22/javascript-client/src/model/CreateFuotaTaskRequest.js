/**
 * AWS IoT Wireless
 * <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
 *
 * The version of the OpenAPI document: 2020-11-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateFuotaTaskRequestLoRaWAN from './CreateFuotaTaskRequestLoRaWAN';
import Tag from './Tag';

/**
 * The CreateFuotaTaskRequest model module.
 * @module model/CreateFuotaTaskRequest
 * @version 2020-11-22
 */
class CreateFuotaTaskRequest {
    /**
     * Constructs a new <code>CreateFuotaTaskRequest</code>.
     * @alias module:model/CreateFuotaTaskRequest
     * @param firmwareUpdateImage {String} The S3 URI points to a firmware update image that is to be used with a FUOTA task.
     * @param firmwareUpdateRole {String} The firmware update role that is to be used with a FUOTA task.
     */
    constructor(firmwareUpdateImage, firmwareUpdateRole) { 
        
        CreateFuotaTaskRequest.initialize(this, firmwareUpdateImage, firmwareUpdateRole);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firmwareUpdateImage, firmwareUpdateRole) { 
        obj['FirmwareUpdateImage'] = firmwareUpdateImage;
        obj['FirmwareUpdateRole'] = firmwareUpdateRole;
    }

    /**
     * Constructs a <code>CreateFuotaTaskRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFuotaTaskRequest} obj Optional instance to populate.
     * @return {module:model/CreateFuotaTaskRequest} The populated <code>CreateFuotaTaskRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFuotaTaskRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ClientRequestToken')) {
                obj['ClientRequestToken'] = ApiClient.convertToType(data['ClientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('LoRaWAN')) {
                obj['LoRaWAN'] = CreateFuotaTaskRequestLoRaWAN.constructFromObject(data['LoRaWAN']);
            }
            if (data.hasOwnProperty('FirmwareUpdateImage')) {
                obj['FirmwareUpdateImage'] = ApiClient.convertToType(data['FirmwareUpdateImage'], 'String');
            }
            if (data.hasOwnProperty('FirmwareUpdateRole')) {
                obj['FirmwareUpdateRole'] = ApiClient.convertToType(data['FirmwareUpdateRole'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
            if (data.hasOwnProperty('RedundancyPercent')) {
                obj['RedundancyPercent'] = ApiClient.convertToType(data['RedundancyPercent'], 'Number');
            }
            if (data.hasOwnProperty('FragmentSizeBytes')) {
                obj['FragmentSizeBytes'] = ApiClient.convertToType(data['FragmentSizeBytes'], 'Number');
            }
            if (data.hasOwnProperty('FragmentIntervalMS')) {
                obj['FragmentIntervalMS'] = ApiClient.convertToType(data['FragmentIntervalMS'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFuotaTaskRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFuotaTaskRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFuotaTaskRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['ClientRequestToken'] && !(typeof data['ClientRequestToken'] === 'string' || data['ClientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got " + data['ClientRequestToken']);
        }
        // validate the optional field `LoRaWAN`
        if (data['LoRaWAN']) { // data not null
          CreateFuotaTaskRequestLoRaWAN.validateJSON(data['LoRaWAN']);
        }
        // ensure the json data is a string
        if (data['FirmwareUpdateImage'] && !(typeof data['FirmwareUpdateImage'] === 'string' || data['FirmwareUpdateImage'] instanceof String)) {
            throw new Error("Expected the field `FirmwareUpdateImage` to be a primitive type in the JSON string but got " + data['FirmwareUpdateImage']);
        }
        // ensure the json data is a string
        if (data['FirmwareUpdateRole'] && !(typeof data['FirmwareUpdateRole'] === 'string' || data['FirmwareUpdateRole'] instanceof String)) {
            throw new Error("Expected the field `FirmwareUpdateRole` to be a primitive type in the JSON string but got " + data['FirmwareUpdateRole']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

CreateFuotaTaskRequest.RequiredProperties = ["FirmwareUpdateImage", "FirmwareUpdateRole"];

/**
 * The name of a FUOTA task.
 * @member {String} Name
 */
CreateFuotaTaskRequest.prototype['Name'] = undefined;

/**
 * The description of the new resource.
 * @member {String} Description
 */
CreateFuotaTaskRequest.prototype['Description'] = undefined;

/**
 * Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
 * @member {String} ClientRequestToken
 */
CreateFuotaTaskRequest.prototype['ClientRequestToken'] = undefined;

/**
 * @member {module:model/CreateFuotaTaskRequestLoRaWAN} LoRaWAN
 */
CreateFuotaTaskRequest.prototype['LoRaWAN'] = undefined;

/**
 * The S3 URI points to a firmware update image that is to be used with a FUOTA task.
 * @member {String} FirmwareUpdateImage
 */
CreateFuotaTaskRequest.prototype['FirmwareUpdateImage'] = undefined;

/**
 * The firmware update role that is to be used with a FUOTA task.
 * @member {String} FirmwareUpdateRole
 */
CreateFuotaTaskRequest.prototype['FirmwareUpdateRole'] = undefined;

/**
 * The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
 * @member {Array.<module:model/Tag>} Tags
 */
CreateFuotaTaskRequest.prototype['Tags'] = undefined;

/**
 * The percentage of the added fragments that are redundant. For example, if the size of the firmware image file is 100 bytes and the fragment size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15.
 * @member {Number} RedundancyPercent
 */
CreateFuotaTaskRequest.prototype['RedundancyPercent'] = undefined;

/**
 * The size of each fragment in bytes. This parameter is supported only for FUOTA tasks with multicast groups.
 * @member {Number} FragmentSizeBytes
 */
CreateFuotaTaskRequest.prototype['FragmentSizeBytes'] = undefined;

/**
 * <p>The interval for sending fragments in milliseconds, rounded to the nearest second.</p> <note> <p>This interval only determines the timing for when the Cloud sends down the fragments to yor device. There can be a delay for when your device will receive these fragments. This delay depends on the device's class and the communication delay with the cloud.</p> </note>
 * @member {Number} FragmentIntervalMS
 */
CreateFuotaTaskRequest.prototype['FragmentIntervalMS'] = undefined;






export default CreateFuotaTaskRequest;

