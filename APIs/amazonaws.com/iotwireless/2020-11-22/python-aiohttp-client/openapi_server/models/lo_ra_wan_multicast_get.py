# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dl_class import DlClass
from openapi_server.models.supported_rf_region import SupportedRfRegion
from openapi_server import util


class LoRaWANMulticastGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rf_region: SupportedRfRegion=None, dl_class: DlClass=None, number_of_devices_requested: int=None, number_of_devices_in_group: int=None):
        """LoRaWANMulticastGet - a model defined in OpenAPI

        :param rf_region: The rf_region of this LoRaWANMulticastGet.
        :param dl_class: The dl_class of this LoRaWANMulticastGet.
        :param number_of_devices_requested: The number_of_devices_requested of this LoRaWANMulticastGet.
        :param number_of_devices_in_group: The number_of_devices_in_group of this LoRaWANMulticastGet.
        """
        self.openapi_types = {
            'rf_region': SupportedRfRegion,
            'dl_class': DlClass,
            'number_of_devices_requested': int,
            'number_of_devices_in_group': int
        }

        self.attribute_map = {
            'rf_region': 'RfRegion',
            'dl_class': 'DlClass',
            'number_of_devices_requested': 'NumberOfDevicesRequested',
            'number_of_devices_in_group': 'NumberOfDevicesInGroup'
        }

        self._rf_region = rf_region
        self._dl_class = dl_class
        self._number_of_devices_requested = number_of_devices_requested
        self._number_of_devices_in_group = number_of_devices_in_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoRaWANMulticastGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoRaWANMulticastGet of this LoRaWANMulticastGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rf_region(self):
        """Gets the rf_region of this LoRaWANMulticastGet.


        :return: The rf_region of this LoRaWANMulticastGet.
        :rtype: SupportedRfRegion
        """
        return self._rf_region

    @rf_region.setter
    def rf_region(self, rf_region):
        """Sets the rf_region of this LoRaWANMulticastGet.


        :param rf_region: The rf_region of this LoRaWANMulticastGet.
        :type rf_region: SupportedRfRegion
        """

        self._rf_region = rf_region

    @property
    def dl_class(self):
        """Gets the dl_class of this LoRaWANMulticastGet.


        :return: The dl_class of this LoRaWANMulticastGet.
        :rtype: DlClass
        """
        return self._dl_class

    @dl_class.setter
    def dl_class(self, dl_class):
        """Sets the dl_class of this LoRaWANMulticastGet.


        :param dl_class: The dl_class of this LoRaWANMulticastGet.
        :type dl_class: DlClass
        """

        self._dl_class = dl_class

    @property
    def number_of_devices_requested(self):
        """Gets the number_of_devices_requested of this LoRaWANMulticastGet.

        Number of devices that are requested to be associated with the multicast group.

        :return: The number_of_devices_requested of this LoRaWANMulticastGet.
        :rtype: int
        """
        return self._number_of_devices_requested

    @number_of_devices_requested.setter
    def number_of_devices_requested(self, number_of_devices_requested):
        """Sets the number_of_devices_requested of this LoRaWANMulticastGet.

        Number of devices that are requested to be associated with the multicast group.

        :param number_of_devices_requested: The number_of_devices_requested of this LoRaWANMulticastGet.
        :type number_of_devices_requested: int
        """

        self._number_of_devices_requested = number_of_devices_requested

    @property
    def number_of_devices_in_group(self):
        """Gets the number_of_devices_in_group of this LoRaWANMulticastGet.

        Number of devices that are associated to the multicast group.

        :return: The number_of_devices_in_group of this LoRaWANMulticastGet.
        :rtype: int
        """
        return self._number_of_devices_in_group

    @number_of_devices_in_group.setter
    def number_of_devices_in_group(self, number_of_devices_in_group):
        """Sets the number_of_devices_in_group of this LoRaWANMulticastGet.

        Number of devices that are associated to the multicast group.

        :param number_of_devices_in_group: The number_of_devices_in_group of this LoRaWANMulticastGet.
        :type number_of_devices_in_group: int
        """

        self._number_of_devices_in_group = number_of_devices_in_group
