# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lo_ra_wan_send_data_to_device import LoRaWANSendDataToDevice
from openapi_server import util


class DownlinkQueueMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_id: str=None, transmit_mode: int=None, received_at: str=None, lo_ra_wan: LoRaWANSendDataToDevice=None):
        """DownlinkQueueMessage - a model defined in OpenAPI

        :param message_id: The message_id of this DownlinkQueueMessage.
        :param transmit_mode: The transmit_mode of this DownlinkQueueMessage.
        :param received_at: The received_at of this DownlinkQueueMessage.
        :param lo_ra_wan: The lo_ra_wan of this DownlinkQueueMessage.
        """
        self.openapi_types = {
            'message_id': str,
            'transmit_mode': int,
            'received_at': str,
            'lo_ra_wan': LoRaWANSendDataToDevice
        }

        self.attribute_map = {
            'message_id': 'MessageId',
            'transmit_mode': 'TransmitMode',
            'received_at': 'ReceivedAt',
            'lo_ra_wan': 'LoRaWAN'
        }

        self._message_id = message_id
        self._transmit_mode = transmit_mode
        self._received_at = received_at
        self._lo_ra_wan = lo_ra_wan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownlinkQueueMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownlinkQueueMessage of this DownlinkQueueMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_id(self):
        """Gets the message_id of this DownlinkQueueMessage.


        :return: The message_id of this DownlinkQueueMessage.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this DownlinkQueueMessage.


        :param message_id: The message_id of this DownlinkQueueMessage.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def transmit_mode(self):
        """Gets the transmit_mode of this DownlinkQueueMessage.


        :return: The transmit_mode of this DownlinkQueueMessage.
        :rtype: int
        """
        return self._transmit_mode

    @transmit_mode.setter
    def transmit_mode(self, transmit_mode):
        """Sets the transmit_mode of this DownlinkQueueMessage.


        :param transmit_mode: The transmit_mode of this DownlinkQueueMessage.
        :type transmit_mode: int
        """

        self._transmit_mode = transmit_mode

    @property
    def received_at(self):
        """Gets the received_at of this DownlinkQueueMessage.


        :return: The received_at of this DownlinkQueueMessage.
        :rtype: str
        """
        return self._received_at

    @received_at.setter
    def received_at(self, received_at):
        """Sets the received_at of this DownlinkQueueMessage.


        :param received_at: The received_at of this DownlinkQueueMessage.
        :type received_at: str
        """

        self._received_at = received_at

    @property
    def lo_ra_wan(self):
        """Gets the lo_ra_wan of this DownlinkQueueMessage.


        :return: The lo_ra_wan of this DownlinkQueueMessage.
        :rtype: LoRaWANSendDataToDevice
        """
        return self._lo_ra_wan

    @lo_ra_wan.setter
    def lo_ra_wan(self, lo_ra_wan):
        """Sets the lo_ra_wan of this DownlinkQueueMessage.


        :param lo_ra_wan: The lo_ra_wan of this DownlinkQueueMessage.
        :type lo_ra_wan: LoRaWANSendDataToDevice
        """

        self._lo_ra_wan = lo_ra_wan
