# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wireless_device_log_option import WirelessDeviceLogOption
from openapi_server.models.wireless_gateway_log_option import WirelessGatewayLogOption
from openapi_server import util


class UpdateLogLevelsByResourceTypesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_log_level: str=None, wireless_device_log_options: List[WirelessDeviceLogOption]=None, wireless_gateway_log_options: List[WirelessGatewayLogOption]=None):
        """UpdateLogLevelsByResourceTypesRequest - a model defined in OpenAPI

        :param default_log_level: The default_log_level of this UpdateLogLevelsByResourceTypesRequest.
        :param wireless_device_log_options: The wireless_device_log_options of this UpdateLogLevelsByResourceTypesRequest.
        :param wireless_gateway_log_options: The wireless_gateway_log_options of this UpdateLogLevelsByResourceTypesRequest.
        """
        self.openapi_types = {
            'default_log_level': str,
            'wireless_device_log_options': List[WirelessDeviceLogOption],
            'wireless_gateway_log_options': List[WirelessGatewayLogOption]
        }

        self.attribute_map = {
            'default_log_level': 'DefaultLogLevel',
            'wireless_device_log_options': 'WirelessDeviceLogOptions',
            'wireless_gateway_log_options': 'WirelessGatewayLogOptions'
        }

        self._default_log_level = default_log_level
        self._wireless_device_log_options = wireless_device_log_options
        self._wireless_gateway_log_options = wireless_gateway_log_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLogLevelsByResourceTypesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLogLevelsByResourceTypes_request of this UpdateLogLevelsByResourceTypesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_log_level(self):
        """Gets the default_log_level of this UpdateLogLevelsByResourceTypesRequest.

        The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.

        :return: The default_log_level of this UpdateLogLevelsByResourceTypesRequest.
        :rtype: str
        """
        return self._default_log_level

    @default_log_level.setter
    def default_log_level(self, default_log_level):
        """Sets the default_log_level of this UpdateLogLevelsByResourceTypesRequest.

        The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.

        :param default_log_level: The default_log_level of this UpdateLogLevelsByResourceTypesRequest.
        :type default_log_level: str
        """
        allowed_values = ["INFO", "ERROR", "DISABLED"]  # noqa: E501
        if default_log_level not in allowed_values:
            raise ValueError(
                "Invalid value for `default_log_level` ({0}), must be one of {1}"
                .format(default_log_level, allowed_values)
            )

        self._default_log_level = default_log_level

    @property
    def wireless_device_log_options(self):
        """Gets the wireless_device_log_options of this UpdateLogLevelsByResourceTypesRequest.

        The list of wireless device log options.

        :return: The wireless_device_log_options of this UpdateLogLevelsByResourceTypesRequest.
        :rtype: List[WirelessDeviceLogOption]
        """
        return self._wireless_device_log_options

    @wireless_device_log_options.setter
    def wireless_device_log_options(self, wireless_device_log_options):
        """Sets the wireless_device_log_options of this UpdateLogLevelsByResourceTypesRequest.

        The list of wireless device log options.

        :param wireless_device_log_options: The wireless_device_log_options of this UpdateLogLevelsByResourceTypesRequest.
        :type wireless_device_log_options: List[WirelessDeviceLogOption]
        """

        self._wireless_device_log_options = wireless_device_log_options

    @property
    def wireless_gateway_log_options(self):
        """Gets the wireless_gateway_log_options of this UpdateLogLevelsByResourceTypesRequest.

        The list of wireless gateway log options.

        :return: The wireless_gateway_log_options of this UpdateLogLevelsByResourceTypesRequest.
        :rtype: List[WirelessGatewayLogOption]
        """
        return self._wireless_gateway_log_options

    @wireless_gateway_log_options.setter
    def wireless_gateway_log_options(self, wireless_gateway_log_options):
        """Sets the wireless_gateway_log_options of this UpdateLogLevelsByResourceTypesRequest.

        The list of wireless gateway log options.

        :param wireless_gateway_log_options: The wireless_gateway_log_options of this UpdateLogLevelsByResourceTypesRequest.
        :type wireless_gateway_log_options: List[WirelessGatewayLogOption]
        """

        self._wireless_gateway_log_options = wireless_gateway_log_options
