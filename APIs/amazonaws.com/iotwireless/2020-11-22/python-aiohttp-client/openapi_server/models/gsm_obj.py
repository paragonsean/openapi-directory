# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gsm_obj_gsm_local_id import GsmObjGsmLocalId
from openapi_server import util


class GsmObj(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mcc: int=None, mnc: int=None, lac: int=None, geran_cid: int=None, gsm_local_id: GsmObjGsmLocalId=None, gsm_timing_advance: int=None, rx_level: int=None, gsm_nmr: List=None):
        """GsmObj - a model defined in OpenAPI

        :param mcc: The mcc of this GsmObj.
        :param mnc: The mnc of this GsmObj.
        :param lac: The lac of this GsmObj.
        :param geran_cid: The geran_cid of this GsmObj.
        :param gsm_local_id: The gsm_local_id of this GsmObj.
        :param gsm_timing_advance: The gsm_timing_advance of this GsmObj.
        :param rx_level: The rx_level of this GsmObj.
        :param gsm_nmr: The gsm_nmr of this GsmObj.
        """
        self.openapi_types = {
            'mcc': int,
            'mnc': int,
            'lac': int,
            'geran_cid': int,
            'gsm_local_id': GsmObjGsmLocalId,
            'gsm_timing_advance': int,
            'rx_level': int,
            'gsm_nmr': List
        }

        self.attribute_map = {
            'mcc': 'Mcc',
            'mnc': 'Mnc',
            'lac': 'Lac',
            'geran_cid': 'GeranCid',
            'gsm_local_id': 'GsmLocalId',
            'gsm_timing_advance': 'GsmTimingAdvance',
            'rx_level': 'RxLevel',
            'gsm_nmr': 'GsmNmr'
        }

        self._mcc = mcc
        self._mnc = mnc
        self._lac = lac
        self._geran_cid = geran_cid
        self._gsm_local_id = gsm_local_id
        self._gsm_timing_advance = gsm_timing_advance
        self._rx_level = rx_level
        self._gsm_nmr = gsm_nmr

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GsmObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GsmObj of this GsmObj.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mcc(self):
        """Gets the mcc of this GsmObj.


        :return: The mcc of this GsmObj.
        :rtype: int
        """
        return self._mcc

    @mcc.setter
    def mcc(self, mcc):
        """Sets the mcc of this GsmObj.


        :param mcc: The mcc of this GsmObj.
        :type mcc: int
        """
        if mcc is None:
            raise ValueError("Invalid value for `mcc`, must not be `None`")

        self._mcc = mcc

    @property
    def mnc(self):
        """Gets the mnc of this GsmObj.


        :return: The mnc of this GsmObj.
        :rtype: int
        """
        return self._mnc

    @mnc.setter
    def mnc(self, mnc):
        """Sets the mnc of this GsmObj.


        :param mnc: The mnc of this GsmObj.
        :type mnc: int
        """
        if mnc is None:
            raise ValueError("Invalid value for `mnc`, must not be `None`")

        self._mnc = mnc

    @property
    def lac(self):
        """Gets the lac of this GsmObj.


        :return: The lac of this GsmObj.
        :rtype: int
        """
        return self._lac

    @lac.setter
    def lac(self, lac):
        """Sets the lac of this GsmObj.


        :param lac: The lac of this GsmObj.
        :type lac: int
        """
        if lac is None:
            raise ValueError("Invalid value for `lac`, must not be `None`")

        self._lac = lac

    @property
    def geran_cid(self):
        """Gets the geran_cid of this GsmObj.


        :return: The geran_cid of this GsmObj.
        :rtype: int
        """
        return self._geran_cid

    @geran_cid.setter
    def geran_cid(self, geran_cid):
        """Sets the geran_cid of this GsmObj.


        :param geran_cid: The geran_cid of this GsmObj.
        :type geran_cid: int
        """
        if geran_cid is None:
            raise ValueError("Invalid value for `geran_cid`, must not be `None`")

        self._geran_cid = geran_cid

    @property
    def gsm_local_id(self):
        """Gets the gsm_local_id of this GsmObj.


        :return: The gsm_local_id of this GsmObj.
        :rtype: GsmObjGsmLocalId
        """
        return self._gsm_local_id

    @gsm_local_id.setter
    def gsm_local_id(self, gsm_local_id):
        """Sets the gsm_local_id of this GsmObj.


        :param gsm_local_id: The gsm_local_id of this GsmObj.
        :type gsm_local_id: GsmObjGsmLocalId
        """

        self._gsm_local_id = gsm_local_id

    @property
    def gsm_timing_advance(self):
        """Gets the gsm_timing_advance of this GsmObj.


        :return: The gsm_timing_advance of this GsmObj.
        :rtype: int
        """
        return self._gsm_timing_advance

    @gsm_timing_advance.setter
    def gsm_timing_advance(self, gsm_timing_advance):
        """Sets the gsm_timing_advance of this GsmObj.


        :param gsm_timing_advance: The gsm_timing_advance of this GsmObj.
        :type gsm_timing_advance: int
        """

        self._gsm_timing_advance = gsm_timing_advance

    @property
    def rx_level(self):
        """Gets the rx_level of this GsmObj.


        :return: The rx_level of this GsmObj.
        :rtype: int
        """
        return self._rx_level

    @rx_level.setter
    def rx_level(self, rx_level):
        """Sets the rx_level of this GsmObj.


        :param rx_level: The rx_level of this GsmObj.
        :type rx_level: int
        """

        self._rx_level = rx_level

    @property
    def gsm_nmr(self):
        """Gets the gsm_nmr of this GsmObj.


        :return: The gsm_nmr of this GsmObj.
        :rtype: List
        """
        return self._gsm_nmr

    @gsm_nmr.setter
    def gsm_nmr(self, gsm_nmr):
        """Sets the gsm_nmr of this GsmObj.


        :param gsm_nmr: The gsm_nmr of this GsmObj.
        :type gsm_nmr: List
        """

        self._gsm_nmr = gsm_nmr
