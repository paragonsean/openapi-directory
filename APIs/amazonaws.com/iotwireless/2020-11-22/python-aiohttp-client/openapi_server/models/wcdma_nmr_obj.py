# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WcdmaNmrObj(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uarfcndl: int=None, psc: int=None, utran_cid: int=None, rscp: int=None, path_loss: int=None):
        """WcdmaNmrObj - a model defined in OpenAPI

        :param uarfcndl: The uarfcndl of this WcdmaNmrObj.
        :param psc: The psc of this WcdmaNmrObj.
        :param utran_cid: The utran_cid of this WcdmaNmrObj.
        :param rscp: The rscp of this WcdmaNmrObj.
        :param path_loss: The path_loss of this WcdmaNmrObj.
        """
        self.openapi_types = {
            'uarfcndl': int,
            'psc': int,
            'utran_cid': int,
            'rscp': int,
            'path_loss': int
        }

        self.attribute_map = {
            'uarfcndl': 'Uarfcndl',
            'psc': 'Psc',
            'utran_cid': 'UtranCid',
            'rscp': 'Rscp',
            'path_loss': 'PathLoss'
        }

        self._uarfcndl = uarfcndl
        self._psc = psc
        self._utran_cid = utran_cid
        self._rscp = rscp
        self._path_loss = path_loss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WcdmaNmrObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WcdmaNmrObj of this WcdmaNmrObj.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uarfcndl(self):
        """Gets the uarfcndl of this WcdmaNmrObj.


        :return: The uarfcndl of this WcdmaNmrObj.
        :rtype: int
        """
        return self._uarfcndl

    @uarfcndl.setter
    def uarfcndl(self, uarfcndl):
        """Sets the uarfcndl of this WcdmaNmrObj.


        :param uarfcndl: The uarfcndl of this WcdmaNmrObj.
        :type uarfcndl: int
        """
        if uarfcndl is None:
            raise ValueError("Invalid value for `uarfcndl`, must not be `None`")

        self._uarfcndl = uarfcndl

    @property
    def psc(self):
        """Gets the psc of this WcdmaNmrObj.


        :return: The psc of this WcdmaNmrObj.
        :rtype: int
        """
        return self._psc

    @psc.setter
    def psc(self, psc):
        """Sets the psc of this WcdmaNmrObj.


        :param psc: The psc of this WcdmaNmrObj.
        :type psc: int
        """
        if psc is None:
            raise ValueError("Invalid value for `psc`, must not be `None`")

        self._psc = psc

    @property
    def utran_cid(self):
        """Gets the utran_cid of this WcdmaNmrObj.


        :return: The utran_cid of this WcdmaNmrObj.
        :rtype: int
        """
        return self._utran_cid

    @utran_cid.setter
    def utran_cid(self, utran_cid):
        """Sets the utran_cid of this WcdmaNmrObj.


        :param utran_cid: The utran_cid of this WcdmaNmrObj.
        :type utran_cid: int
        """
        if utran_cid is None:
            raise ValueError("Invalid value for `utran_cid`, must not be `None`")

        self._utran_cid = utran_cid

    @property
    def rscp(self):
        """Gets the rscp of this WcdmaNmrObj.


        :return: The rscp of this WcdmaNmrObj.
        :rtype: int
        """
        return self._rscp

    @rscp.setter
    def rscp(self, rscp):
        """Sets the rscp of this WcdmaNmrObj.


        :param rscp: The rscp of this WcdmaNmrObj.
        :type rscp: int
        """

        self._rscp = rscp

    @property
    def path_loss(self):
        """Gets the path_loss of this WcdmaNmrObj.


        :return: The path_loss of this WcdmaNmrObj.
        :rtype: int
        """
        return self._path_loss

    @path_loss.setter
    def path_loss(self, path_loss):
        """Sets the path_loss of this WcdmaNmrObj.


        :param path_loss: The path_loss of this WcdmaNmrObj.
        :type path_loss: int
        """

        self._path_loss = path_loss
