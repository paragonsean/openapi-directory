# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_multicast_group_request_lo_ra_wan import CreateMulticastGroupRequestLoRaWAN
from openapi_server import util


class UpdateMulticastGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, lo_ra_wan: CreateMulticastGroupRequestLoRaWAN=None):
        """UpdateMulticastGroupRequest - a model defined in OpenAPI

        :param name: The name of this UpdateMulticastGroupRequest.
        :param description: The description of this UpdateMulticastGroupRequest.
        :param lo_ra_wan: The lo_ra_wan of this UpdateMulticastGroupRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'lo_ra_wan': CreateMulticastGroupRequestLoRaWAN
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'lo_ra_wan': 'LoRaWAN'
        }

        self._name = name
        self._description = description
        self._lo_ra_wan = lo_ra_wan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMulticastGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateMulticastGroup_request of this UpdateMulticastGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateMulticastGroupRequest.

        The name of the multicast group.

        :return: The name of this UpdateMulticastGroupRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateMulticastGroupRequest.

        The name of the multicast group.

        :param name: The name of this UpdateMulticastGroupRequest.
        :type name: str
        """
        if name is not None and len(name) > 256:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `256`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdateMulticastGroupRequest.

        The description of the new resource.

        :return: The description of this UpdateMulticastGroupRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateMulticastGroupRequest.

        The description of the new resource.

        :param description: The description of this UpdateMulticastGroupRequest.
        :type description: str
        """
        if description is not None and len(description) > 2048:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `2048`")

        self._description = description

    @property
    def lo_ra_wan(self):
        """Gets the lo_ra_wan of this UpdateMulticastGroupRequest.


        :return: The lo_ra_wan of this UpdateMulticastGroupRequest.
        :rtype: CreateMulticastGroupRequestLoRaWAN
        """
        return self._lo_ra_wan

    @lo_ra_wan.setter
    def lo_ra_wan(self, lo_ra_wan):
        """Sets the lo_ra_wan of this UpdateMulticastGroupRequest.


        :param lo_ra_wan: The lo_ra_wan of this UpdateMulticastGroupRequest.
        :type lo_ra_wan: CreateMulticastGroupRequestLoRaWAN
        """

        self._lo_ra_wan = lo_ra_wan
