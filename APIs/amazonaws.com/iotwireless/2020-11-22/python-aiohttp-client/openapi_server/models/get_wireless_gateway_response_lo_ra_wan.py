# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_wireless_gateway_request_lo_ra_wan_beaconing import CreateWirelessGatewayRequestLoRaWANBeaconing
from openapi_server import util


class GetWirelessGatewayResponseLoRaWAN(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_eui: str=None, rf_region: str=None, join_eui_filters: List[List[str]]=None, net_id_filters: List[str]=None, sub_bands: List[int]=None, beaconing: CreateWirelessGatewayRequestLoRaWANBeaconing=None, max_eirp: float=None):
        """GetWirelessGatewayResponseLoRaWAN - a model defined in OpenAPI

        :param gateway_eui: The gateway_eui of this GetWirelessGatewayResponseLoRaWAN.
        :param rf_region: The rf_region of this GetWirelessGatewayResponseLoRaWAN.
        :param join_eui_filters: The join_eui_filters of this GetWirelessGatewayResponseLoRaWAN.
        :param net_id_filters: The net_id_filters of this GetWirelessGatewayResponseLoRaWAN.
        :param sub_bands: The sub_bands of this GetWirelessGatewayResponseLoRaWAN.
        :param beaconing: The beaconing of this GetWirelessGatewayResponseLoRaWAN.
        :param max_eirp: The max_eirp of this GetWirelessGatewayResponseLoRaWAN.
        """
        self.openapi_types = {
            'gateway_eui': str,
            'rf_region': str,
            'join_eui_filters': List[List[str]],
            'net_id_filters': List[str],
            'sub_bands': List[int],
            'beaconing': CreateWirelessGatewayRequestLoRaWANBeaconing,
            'max_eirp': float
        }

        self.attribute_map = {
            'gateway_eui': 'GatewayEui',
            'rf_region': 'RfRegion',
            'join_eui_filters': 'JoinEuiFilters',
            'net_id_filters': 'NetIdFilters',
            'sub_bands': 'SubBands',
            'beaconing': 'Beaconing',
            'max_eirp': 'MaxEirp'
        }

        self._gateway_eui = gateway_eui
        self._rf_region = rf_region
        self._join_eui_filters = join_eui_filters
        self._net_id_filters = net_id_filters
        self._sub_bands = sub_bands
        self._beaconing = beaconing
        self._max_eirp = max_eirp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWirelessGatewayResponseLoRaWAN':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWirelessGatewayResponse_LoRaWAN of this GetWirelessGatewayResponseLoRaWAN.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_eui(self):
        """Gets the gateway_eui of this GetWirelessGatewayResponseLoRaWAN.


        :return: The gateway_eui of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: str
        """
        return self._gateway_eui

    @gateway_eui.setter
    def gateway_eui(self, gateway_eui):
        """Sets the gateway_eui of this GetWirelessGatewayResponseLoRaWAN.


        :param gateway_eui: The gateway_eui of this GetWirelessGatewayResponseLoRaWAN.
        :type gateway_eui: str
        """

        self._gateway_eui = gateway_eui

    @property
    def rf_region(self):
        """Gets the rf_region of this GetWirelessGatewayResponseLoRaWAN.


        :return: The rf_region of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: str
        """
        return self._rf_region

    @rf_region.setter
    def rf_region(self, rf_region):
        """Sets the rf_region of this GetWirelessGatewayResponseLoRaWAN.


        :param rf_region: The rf_region of this GetWirelessGatewayResponseLoRaWAN.
        :type rf_region: str
        """

        self._rf_region = rf_region

    @property
    def join_eui_filters(self):
        """Gets the join_eui_filters of this GetWirelessGatewayResponseLoRaWAN.

        A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.

        :return: The join_eui_filters of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: List[List[str]]
        """
        return self._join_eui_filters

    @join_eui_filters.setter
    def join_eui_filters(self, join_eui_filters):
        """Sets the join_eui_filters of this GetWirelessGatewayResponseLoRaWAN.

        A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.

        :param join_eui_filters: The join_eui_filters of this GetWirelessGatewayResponseLoRaWAN.
        :type join_eui_filters: List[List[str]]
        """
        if join_eui_filters is not None and len(join_eui_filters) > 3:
            raise ValueError("Invalid value for `join_eui_filters`, number of items must be less than or equal to `3`")
        if join_eui_filters is not None and len(join_eui_filters) < 0:
            raise ValueError("Invalid value for `join_eui_filters`, number of items must be greater than or equal to `0`")

        self._join_eui_filters = join_eui_filters

    @property
    def net_id_filters(self):
        """Gets the net_id_filters of this GetWirelessGatewayResponseLoRaWAN.

        A list of NetId values that are used by LoRa gateways to filter the uplink frames.

        :return: The net_id_filters of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: List[str]
        """
        return self._net_id_filters

    @net_id_filters.setter
    def net_id_filters(self, net_id_filters):
        """Sets the net_id_filters of this GetWirelessGatewayResponseLoRaWAN.

        A list of NetId values that are used by LoRa gateways to filter the uplink frames.

        :param net_id_filters: The net_id_filters of this GetWirelessGatewayResponseLoRaWAN.
        :type net_id_filters: List[str]
        """
        if net_id_filters is not None and len(net_id_filters) > 10:
            raise ValueError("Invalid value for `net_id_filters`, number of items must be less than or equal to `10`")
        if net_id_filters is not None and len(net_id_filters) < 0:
            raise ValueError("Invalid value for `net_id_filters`, number of items must be greater than or equal to `0`")

        self._net_id_filters = net_id_filters

    @property
    def sub_bands(self):
        """Gets the sub_bands of this GetWirelessGatewayResponseLoRaWAN.

        A list of integer indicating which sub bands are supported by LoRa gateway.

        :return: The sub_bands of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: List[int]
        """
        return self._sub_bands

    @sub_bands.setter
    def sub_bands(self, sub_bands):
        """Sets the sub_bands of this GetWirelessGatewayResponseLoRaWAN.

        A list of integer indicating which sub bands are supported by LoRa gateway.

        :param sub_bands: The sub_bands of this GetWirelessGatewayResponseLoRaWAN.
        :type sub_bands: List[int]
        """
        if sub_bands is not None and len(sub_bands) > 8:
            raise ValueError("Invalid value for `sub_bands`, number of items must be less than or equal to `8`")
        if sub_bands is not None and len(sub_bands) < 0:
            raise ValueError("Invalid value for `sub_bands`, number of items must be greater than or equal to `0`")

        self._sub_bands = sub_bands

    @property
    def beaconing(self):
        """Gets the beaconing of this GetWirelessGatewayResponseLoRaWAN.


        :return: The beaconing of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: CreateWirelessGatewayRequestLoRaWANBeaconing
        """
        return self._beaconing

    @beaconing.setter
    def beaconing(self, beaconing):
        """Sets the beaconing of this GetWirelessGatewayResponseLoRaWAN.


        :param beaconing: The beaconing of this GetWirelessGatewayResponseLoRaWAN.
        :type beaconing: CreateWirelessGatewayRequestLoRaWANBeaconing
        """

        self._beaconing = beaconing

    @property
    def max_eirp(self):
        """Gets the max_eirp of this GetWirelessGatewayResponseLoRaWAN.


        :return: The max_eirp of this GetWirelessGatewayResponseLoRaWAN.
        :rtype: float
        """
        return self._max_eirp

    @max_eirp.setter
    def max_eirp(self, max_eirp):
        """Sets the max_eirp of this GetWirelessGatewayResponseLoRaWAN.


        :param max_eirp: The max_eirp of this GetWirelessGatewayResponseLoRaWAN.
        :type max_eirp: float
        """

        self._max_eirp = max_eirp
