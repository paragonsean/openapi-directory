# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.position_configuration_fec import PositionConfigurationFec
from openapi_server.models.position_configuration_status import PositionConfigurationStatus
from openapi_server.models.position_solver_provider import PositionSolverProvider
from openapi_server.models.position_solver_type import PositionSolverType
from openapi_server import util


class PositionSolverDetailsSemtechGnss(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider: PositionSolverProvider=None, type: PositionSolverType=None, status: PositionConfigurationStatus=None, fec: PositionConfigurationFec=None):
        """PositionSolverDetailsSemtechGnss - a model defined in OpenAPI

        :param provider: The provider of this PositionSolverDetailsSemtechGnss.
        :param type: The type of this PositionSolverDetailsSemtechGnss.
        :param status: The status of this PositionSolverDetailsSemtechGnss.
        :param fec: The fec of this PositionSolverDetailsSemtechGnss.
        """
        self.openapi_types = {
            'provider': PositionSolverProvider,
            'type': PositionSolverType,
            'status': PositionConfigurationStatus,
            'fec': PositionConfigurationFec
        }

        self.attribute_map = {
            'provider': 'Provider',
            'type': 'Type',
            'status': 'Status',
            'fec': 'Fec'
        }

        self._provider = provider
        self._type = type
        self._status = status
        self._fec = fec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PositionSolverDetailsSemtechGnss':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PositionSolverDetails_SemtechGnss of this PositionSolverDetailsSemtechGnss.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider(self):
        """Gets the provider of this PositionSolverDetailsSemtechGnss.


        :return: The provider of this PositionSolverDetailsSemtechGnss.
        :rtype: PositionSolverProvider
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this PositionSolverDetailsSemtechGnss.


        :param provider: The provider of this PositionSolverDetailsSemtechGnss.
        :type provider: PositionSolverProvider
        """

        self._provider = provider

    @property
    def type(self):
        """Gets the type of this PositionSolverDetailsSemtechGnss.


        :return: The type of this PositionSolverDetailsSemtechGnss.
        :rtype: PositionSolverType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PositionSolverDetailsSemtechGnss.


        :param type: The type of this PositionSolverDetailsSemtechGnss.
        :type type: PositionSolverType
        """

        self._type = type

    @property
    def status(self):
        """Gets the status of this PositionSolverDetailsSemtechGnss.


        :return: The status of this PositionSolverDetailsSemtechGnss.
        :rtype: PositionConfigurationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PositionSolverDetailsSemtechGnss.


        :param status: The status of this PositionSolverDetailsSemtechGnss.
        :type status: PositionConfigurationStatus
        """

        self._status = status

    @property
    def fec(self):
        """Gets the fec of this PositionSolverDetailsSemtechGnss.


        :return: The fec of this PositionSolverDetailsSemtechGnss.
        :rtype: PositionConfigurationFec
        """
        return self._fec

    @fec.setter
    def fec(self, fec):
        """Sets the fec of this PositionSolverDetailsSemtechGnss.


        :param fec: The fec of this PositionSolverDetailsSemtechGnss.
        :type fec: PositionConfigurationFec
        """

        self._fec = fec
