# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateWirelessGatewayRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, join_eui_filters: List[List[str]]=None, net_id_filters: List[str]=None, max_eirp: float=None):
        """UpdateWirelessGatewayRequest - a model defined in OpenAPI

        :param name: The name of this UpdateWirelessGatewayRequest.
        :param description: The description of this UpdateWirelessGatewayRequest.
        :param join_eui_filters: The join_eui_filters of this UpdateWirelessGatewayRequest.
        :param net_id_filters: The net_id_filters of this UpdateWirelessGatewayRequest.
        :param max_eirp: The max_eirp of this UpdateWirelessGatewayRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'join_eui_filters': List[List[str]],
            'net_id_filters': List[str],
            'max_eirp': float
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'join_eui_filters': 'JoinEuiFilters',
            'net_id_filters': 'NetIdFilters',
            'max_eirp': 'MaxEirp'
        }

        self._name = name
        self._description = description
        self._join_eui_filters = join_eui_filters
        self._net_id_filters = net_id_filters
        self._max_eirp = max_eirp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateWirelessGatewayRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateWirelessGateway_request of this UpdateWirelessGatewayRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateWirelessGatewayRequest.

        The new name of the resource.

        :return: The name of this UpdateWirelessGatewayRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateWirelessGatewayRequest.

        The new name of the resource.

        :param name: The name of this UpdateWirelessGatewayRequest.
        :type name: str
        """
        if name is not None and len(name) > 256:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `256`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdateWirelessGatewayRequest.

        The description of the new resource.

        :return: The description of this UpdateWirelessGatewayRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateWirelessGatewayRequest.

        The description of the new resource.

        :param description: The description of this UpdateWirelessGatewayRequest.
        :type description: str
        """
        if description is not None and len(description) > 2048:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `2048`")

        self._description = description

    @property
    def join_eui_filters(self):
        """Gets the join_eui_filters of this UpdateWirelessGatewayRequest.

        A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.

        :return: The join_eui_filters of this UpdateWirelessGatewayRequest.
        :rtype: List[List[str]]
        """
        return self._join_eui_filters

    @join_eui_filters.setter
    def join_eui_filters(self, join_eui_filters):
        """Sets the join_eui_filters of this UpdateWirelessGatewayRequest.

        A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.

        :param join_eui_filters: The join_eui_filters of this UpdateWirelessGatewayRequest.
        :type join_eui_filters: List[List[str]]
        """
        if join_eui_filters is not None and len(join_eui_filters) > 3:
            raise ValueError("Invalid value for `join_eui_filters`, number of items must be less than or equal to `3`")
        if join_eui_filters is not None and len(join_eui_filters) < 0:
            raise ValueError("Invalid value for `join_eui_filters`, number of items must be greater than or equal to `0`")

        self._join_eui_filters = join_eui_filters

    @property
    def net_id_filters(self):
        """Gets the net_id_filters of this UpdateWirelessGatewayRequest.

        A list of NetId values that are used by LoRa gateways to filter the uplink frames.

        :return: The net_id_filters of this UpdateWirelessGatewayRequest.
        :rtype: List[str]
        """
        return self._net_id_filters

    @net_id_filters.setter
    def net_id_filters(self, net_id_filters):
        """Sets the net_id_filters of this UpdateWirelessGatewayRequest.

        A list of NetId values that are used by LoRa gateways to filter the uplink frames.

        :param net_id_filters: The net_id_filters of this UpdateWirelessGatewayRequest.
        :type net_id_filters: List[str]
        """
        if net_id_filters is not None and len(net_id_filters) > 10:
            raise ValueError("Invalid value for `net_id_filters`, number of items must be less than or equal to `10`")
        if net_id_filters is not None and len(net_id_filters) < 0:
            raise ValueError("Invalid value for `net_id_filters`, number of items must be greater than or equal to `0`")

        self._net_id_filters = net_id_filters

    @property
    def max_eirp(self):
        """Gets the max_eirp of this UpdateWirelessGatewayRequest.

        The MaxEIRP value.

        :return: The max_eirp of this UpdateWirelessGatewayRequest.
        :rtype: float
        """
        return self._max_eirp

    @max_eirp.setter
    def max_eirp(self, max_eirp):
        """Sets the max_eirp of this UpdateWirelessGatewayRequest.

        The MaxEIRP value.

        :param max_eirp: The max_eirp of this UpdateWirelessGatewayRequest.
        :type max_eirp: float
        """
        if max_eirp is not None and max_eirp > 30:
            raise ValueError("Invalid value for `max_eirp`, must be a value less than or equal to `30`")
        if max_eirp is not None and max_eirp < 0:
            raise ValueError("Invalid value for `max_eirp`, must be a value greater than or equal to `0`")

        self._max_eirp = max_eirp
