# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lo_ra_wan_multicast_get import LoRaWANMulticastGet
from openapi_server import util


class GetMulticastGroupResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, id: str=None, name: str=None, description: str=None, status: str=None, lo_ra_wan: LoRaWANMulticastGet=None, created_at: datetime=None):
        """GetMulticastGroupResponse - a model defined in OpenAPI

        :param arn: The arn of this GetMulticastGroupResponse.
        :param id: The id of this GetMulticastGroupResponse.
        :param name: The name of this GetMulticastGroupResponse.
        :param description: The description of this GetMulticastGroupResponse.
        :param status: The status of this GetMulticastGroupResponse.
        :param lo_ra_wan: The lo_ra_wan of this GetMulticastGroupResponse.
        :param created_at: The created_at of this GetMulticastGroupResponse.
        """
        self.openapi_types = {
            'arn': str,
            'id': str,
            'name': str,
            'description': str,
            'status': str,
            'lo_ra_wan': LoRaWANMulticastGet,
            'created_at': datetime
        }

        self.attribute_map = {
            'arn': 'Arn',
            'id': 'Id',
            'name': 'Name',
            'description': 'Description',
            'status': 'Status',
            'lo_ra_wan': 'LoRaWAN',
            'created_at': 'CreatedAt'
        }

        self._arn = arn
        self._id = id
        self._name = name
        self._description = description
        self._status = status
        self._lo_ra_wan = lo_ra_wan
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMulticastGroupResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMulticastGroupResponse of this GetMulticastGroupResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this GetMulticastGroupResponse.

        The arn of the multicast group.

        :return: The arn of this GetMulticastGroupResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetMulticastGroupResponse.

        The arn of the multicast group.

        :param arn: The arn of this GetMulticastGroupResponse.
        :type arn: str
        """
        if arn is not None and len(arn) > 128:
            raise ValueError("Invalid value for `arn`, length must be less than or equal to `128`")

        self._arn = arn

    @property
    def id(self):
        """Gets the id of this GetMulticastGroupResponse.

        The ID of the multicast group.

        :return: The id of this GetMulticastGroupResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetMulticastGroupResponse.

        The ID of the multicast group.

        :param id: The id of this GetMulticastGroupResponse.
        :type id: str
        """
        if id is not None and len(id) > 256:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `256`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this GetMulticastGroupResponse.

        The name of the multicast group.

        :return: The name of this GetMulticastGroupResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetMulticastGroupResponse.

        The name of the multicast group.

        :param name: The name of this GetMulticastGroupResponse.
        :type name: str
        """
        if name is not None and len(name) > 256:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `256`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this GetMulticastGroupResponse.

        The description of the new resource.

        :return: The description of this GetMulticastGroupResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetMulticastGroupResponse.

        The description of the new resource.

        :param description: The description of this GetMulticastGroupResponse.
        :type description: str
        """
        if description is not None and len(description) > 2048:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `2048`")

        self._description = description

    @property
    def status(self):
        """Gets the status of this GetMulticastGroupResponse.

        The status of the multicast group.

        :return: The status of this GetMulticastGroupResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetMulticastGroupResponse.

        The status of the multicast group.

        :param status: The status of this GetMulticastGroupResponse.
        :type status: str
        """
        if status is not None and len(status) > 256:
            raise ValueError("Invalid value for `status`, length must be less than or equal to `256`")

        self._status = status

    @property
    def lo_ra_wan(self):
        """Gets the lo_ra_wan of this GetMulticastGroupResponse.


        :return: The lo_ra_wan of this GetMulticastGroupResponse.
        :rtype: LoRaWANMulticastGet
        """
        return self._lo_ra_wan

    @lo_ra_wan.setter
    def lo_ra_wan(self, lo_ra_wan):
        """Sets the lo_ra_wan of this GetMulticastGroupResponse.


        :param lo_ra_wan: The lo_ra_wan of this GetMulticastGroupResponse.
        :type lo_ra_wan: LoRaWANMulticastGet
        """

        self._lo_ra_wan = lo_ra_wan

    @property
    def created_at(self):
        """Gets the created_at of this GetMulticastGroupResponse.

        Created at timestamp for the resource.

        :return: The created_at of this GetMulticastGroupResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetMulticastGroupResponse.

        Created at timestamp for the resource.

        :param created_at: The created_at of this GetMulticastGroupResponse.
        :type created_at: datetime
        """

        self._created_at = created_at
