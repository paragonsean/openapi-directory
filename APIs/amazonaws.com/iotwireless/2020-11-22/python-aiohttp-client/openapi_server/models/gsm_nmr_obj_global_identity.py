# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GsmNmrObjGlobalIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lac: int=None, geran_cid: int=None):
        """GsmNmrObjGlobalIdentity - a model defined in OpenAPI

        :param lac: The lac of this GsmNmrObjGlobalIdentity.
        :param geran_cid: The geran_cid of this GsmNmrObjGlobalIdentity.
        """
        self.openapi_types = {
            'lac': int,
            'geran_cid': int
        }

        self.attribute_map = {
            'lac': 'Lac',
            'geran_cid': 'GeranCid'
        }

        self._lac = lac
        self._geran_cid = geran_cid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GsmNmrObjGlobalIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GsmNmrObj_GlobalIdentity of this GsmNmrObjGlobalIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lac(self):
        """Gets the lac of this GsmNmrObjGlobalIdentity.


        :return: The lac of this GsmNmrObjGlobalIdentity.
        :rtype: int
        """
        return self._lac

    @lac.setter
    def lac(self, lac):
        """Sets the lac of this GsmNmrObjGlobalIdentity.


        :param lac: The lac of this GsmNmrObjGlobalIdentity.
        :type lac: int
        """
        if lac is None:
            raise ValueError("Invalid value for `lac`, must not be `None`")

        self._lac = lac

    @property
    def geran_cid(self):
        """Gets the geran_cid of this GsmNmrObjGlobalIdentity.


        :return: The geran_cid of this GsmNmrObjGlobalIdentity.
        :rtype: int
        """
        return self._geran_cid

    @geran_cid.setter
    def geran_cid(self, geran_cid):
        """Sets the geran_cid of this GsmNmrObjGlobalIdentity.


        :param geran_cid: The geran_cid of this GsmNmrObjGlobalIdentity.
        :type geran_cid: int
        """
        if geran_cid is None:
            raise ValueError("Invalid value for `geran_cid`, must not be `None`")

        self._geran_cid = geran_cid
