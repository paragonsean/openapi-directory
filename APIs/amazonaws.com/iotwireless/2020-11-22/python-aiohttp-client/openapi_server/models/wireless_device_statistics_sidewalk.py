# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wireless_device_sidewalk_status import WirelessDeviceSidewalkStatus
from openapi_server import util


class WirelessDeviceStatisticsSidewalk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amazon_id: str=None, sidewalk_id: str=None, sidewalk_manufacturing_sn: str=None, device_certificates: List=None, device_profile_id: str=None, status: WirelessDeviceSidewalkStatus=None):
        """WirelessDeviceStatisticsSidewalk - a model defined in OpenAPI

        :param amazon_id: The amazon_id of this WirelessDeviceStatisticsSidewalk.
        :param sidewalk_id: The sidewalk_id of this WirelessDeviceStatisticsSidewalk.
        :param sidewalk_manufacturing_sn: The sidewalk_manufacturing_sn of this WirelessDeviceStatisticsSidewalk.
        :param device_certificates: The device_certificates of this WirelessDeviceStatisticsSidewalk.
        :param device_profile_id: The device_profile_id of this WirelessDeviceStatisticsSidewalk.
        :param status: The status of this WirelessDeviceStatisticsSidewalk.
        """
        self.openapi_types = {
            'amazon_id': str,
            'sidewalk_id': str,
            'sidewalk_manufacturing_sn': str,
            'device_certificates': List,
            'device_profile_id': str,
            'status': WirelessDeviceSidewalkStatus
        }

        self.attribute_map = {
            'amazon_id': 'AmazonId',
            'sidewalk_id': 'SidewalkId',
            'sidewalk_manufacturing_sn': 'SidewalkManufacturingSn',
            'device_certificates': 'DeviceCertificates',
            'device_profile_id': 'DeviceProfileId',
            'status': 'Status'
        }

        self._amazon_id = amazon_id
        self._sidewalk_id = sidewalk_id
        self._sidewalk_manufacturing_sn = sidewalk_manufacturing_sn
        self._device_certificates = device_certificates
        self._device_profile_id = device_profile_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WirelessDeviceStatisticsSidewalk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WirelessDeviceStatistics_Sidewalk of this WirelessDeviceStatisticsSidewalk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amazon_id(self):
        """Gets the amazon_id of this WirelessDeviceStatisticsSidewalk.


        :return: The amazon_id of this WirelessDeviceStatisticsSidewalk.
        :rtype: str
        """
        return self._amazon_id

    @amazon_id.setter
    def amazon_id(self, amazon_id):
        """Sets the amazon_id of this WirelessDeviceStatisticsSidewalk.


        :param amazon_id: The amazon_id of this WirelessDeviceStatisticsSidewalk.
        :type amazon_id: str
        """

        self._amazon_id = amazon_id

    @property
    def sidewalk_id(self):
        """Gets the sidewalk_id of this WirelessDeviceStatisticsSidewalk.


        :return: The sidewalk_id of this WirelessDeviceStatisticsSidewalk.
        :rtype: str
        """
        return self._sidewalk_id

    @sidewalk_id.setter
    def sidewalk_id(self, sidewalk_id):
        """Sets the sidewalk_id of this WirelessDeviceStatisticsSidewalk.


        :param sidewalk_id: The sidewalk_id of this WirelessDeviceStatisticsSidewalk.
        :type sidewalk_id: str
        """

        self._sidewalk_id = sidewalk_id

    @property
    def sidewalk_manufacturing_sn(self):
        """Gets the sidewalk_manufacturing_sn of this WirelessDeviceStatisticsSidewalk.


        :return: The sidewalk_manufacturing_sn of this WirelessDeviceStatisticsSidewalk.
        :rtype: str
        """
        return self._sidewalk_manufacturing_sn

    @sidewalk_manufacturing_sn.setter
    def sidewalk_manufacturing_sn(self, sidewalk_manufacturing_sn):
        """Sets the sidewalk_manufacturing_sn of this WirelessDeviceStatisticsSidewalk.


        :param sidewalk_manufacturing_sn: The sidewalk_manufacturing_sn of this WirelessDeviceStatisticsSidewalk.
        :type sidewalk_manufacturing_sn: str
        """

        self._sidewalk_manufacturing_sn = sidewalk_manufacturing_sn

    @property
    def device_certificates(self):
        """Gets the device_certificates of this WirelessDeviceStatisticsSidewalk.


        :return: The device_certificates of this WirelessDeviceStatisticsSidewalk.
        :rtype: List
        """
        return self._device_certificates

    @device_certificates.setter
    def device_certificates(self, device_certificates):
        """Sets the device_certificates of this WirelessDeviceStatisticsSidewalk.


        :param device_certificates: The device_certificates of this WirelessDeviceStatisticsSidewalk.
        :type device_certificates: List
        """

        self._device_certificates = device_certificates

    @property
    def device_profile_id(self):
        """Gets the device_profile_id of this WirelessDeviceStatisticsSidewalk.


        :return: The device_profile_id of this WirelessDeviceStatisticsSidewalk.
        :rtype: str
        """
        return self._device_profile_id

    @device_profile_id.setter
    def device_profile_id(self, device_profile_id):
        """Sets the device_profile_id of this WirelessDeviceStatisticsSidewalk.


        :param device_profile_id: The device_profile_id of this WirelessDeviceStatisticsSidewalk.
        :type device_profile_id: str
        """

        self._device_profile_id = device_profile_id

    @property
    def status(self):
        """Gets the status of this WirelessDeviceStatisticsSidewalk.


        :return: The status of this WirelessDeviceStatisticsSidewalk.
        :rtype: WirelessDeviceSidewalkStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WirelessDeviceStatisticsSidewalk.


        :param status: The status of this WirelessDeviceStatisticsSidewalk.
        :type status: WirelessDeviceSidewalkStatus
        """

        self._status = status
