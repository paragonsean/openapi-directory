# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_type import MessageType
from openapi_server import util


class SendDataToWirelessDeviceRequestWirelessMetadataSidewalk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, seq: int=None, message_type: MessageType=None, ack_mode_retry_duration_secs: int=None):
        """SendDataToWirelessDeviceRequestWirelessMetadataSidewalk - a model defined in OpenAPI

        :param seq: The seq of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :param message_type: The message_type of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :param ack_mode_retry_duration_secs: The ack_mode_retry_duration_secs of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        """
        self.openapi_types = {
            'seq': int,
            'message_type': MessageType,
            'ack_mode_retry_duration_secs': int
        }

        self.attribute_map = {
            'seq': 'Seq',
            'message_type': 'MessageType',
            'ack_mode_retry_duration_secs': 'AckModeRetryDurationSecs'
        }

        self._seq = seq
        self._message_type = message_type
        self._ack_mode_retry_duration_secs = ack_mode_retry_duration_secs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendDataToWirelessDeviceRequestWirelessMetadataSidewalk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendDataToWirelessDevice_request_WirelessMetadata_Sidewalk of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seq(self):
        """Gets the seq of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :return: The seq of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :rtype: int
        """
        return self._seq

    @seq.setter
    def seq(self, seq):
        """Sets the seq of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :param seq: The seq of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :type seq: int
        """

        self._seq = seq

    @property
    def message_type(self):
        """Gets the message_type of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :return: The message_type of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :rtype: MessageType
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :param message_type: The message_type of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :type message_type: MessageType
        """

        self._message_type = message_type

    @property
    def ack_mode_retry_duration_secs(self):
        """Gets the ack_mode_retry_duration_secs of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :return: The ack_mode_retry_duration_secs of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :rtype: int
        """
        return self._ack_mode_retry_duration_secs

    @ack_mode_retry_duration_secs.setter
    def ack_mode_retry_duration_secs(self, ack_mode_retry_duration_secs):
        """Sets the ack_mode_retry_duration_secs of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.


        :param ack_mode_retry_duration_secs: The ack_mode_retry_duration_secs of this SendDataToWirelessDeviceRequestWirelessMetadataSidewalk.
        :type ack_mode_retry_duration_secs: int
        """

        self._ack_mode_retry_duration_secs = ack_mode_retry_duration_secs
