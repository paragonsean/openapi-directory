# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server import util


class StartBulkAssociateWirelessDeviceWithMulticastGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_string: str=None, tags: List[Tag]=None):
        """StartBulkAssociateWirelessDeviceWithMulticastGroupRequest - a model defined in OpenAPI

        :param query_string: The query_string of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        :param tags: The tags of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        """
        self.openapi_types = {
            'query_string': str,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'query_string': 'QueryString',
            'tags': 'Tags'
        }

        self._query_string = query_string
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBulkAssociateWirelessDeviceWithMulticastGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBulkAssociateWirelessDeviceWithMulticastGroupRequest of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_string(self):
        """Gets the query_string of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.

        Query string used to search for wireless devices as part of the bulk associate and disassociate process.

        :return: The query_string of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        :rtype: str
        """
        return self._query_string

    @query_string.setter
    def query_string(self, query_string):
        """Sets the query_string of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.

        Query string used to search for wireless devices as part of the bulk associate and disassociate process.

        :param query_string: The query_string of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        :type query_string: str
        """
        if query_string is not None and len(query_string) > 4096:
            raise ValueError("Invalid value for `query_string`, length must be less than or equal to `4096`")

        self._query_string = query_string

    @property
    def tags(self):
        """Gets the tags of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.

        The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.

        :return: The tags of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.

        The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.

        :param tags: The tags of this StartBulkAssociateWirelessDeviceWithMulticastGroupRequest.
        :type tags: List[Tag]
        """
        if tags is not None and len(tags) > 200:
            raise ValueError("Invalid value for `tags`, number of items must be less than or equal to `200`")
        if tags is not None and len(tags) < 0:
            raise ValueError("Invalid value for `tags`, number of items must be greater than or equal to `0`")

        self._tags = tags
