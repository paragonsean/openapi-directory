# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_position_response_accuracy import GetPositionResponseAccuracy
from openapi_server.models.position_solver_provider import PositionSolverProvider
from openapi_server.models.position_solver_type import PositionSolverType
from openapi_server import util


class GetPositionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: List=None, accuracy: GetPositionResponseAccuracy=None, solver_type: PositionSolverType=None, solver_provider: PositionSolverProvider=None, solver_version: str=None, timestamp: str=None):
        """GetPositionResponse - a model defined in OpenAPI

        :param position: The position of this GetPositionResponse.
        :param accuracy: The accuracy of this GetPositionResponse.
        :param solver_type: The solver_type of this GetPositionResponse.
        :param solver_provider: The solver_provider of this GetPositionResponse.
        :param solver_version: The solver_version of this GetPositionResponse.
        :param timestamp: The timestamp of this GetPositionResponse.
        """
        self.openapi_types = {
            'position': List,
            'accuracy': GetPositionResponseAccuracy,
            'solver_type': PositionSolverType,
            'solver_provider': PositionSolverProvider,
            'solver_version': str,
            'timestamp': str
        }

        self.attribute_map = {
            'position': 'Position',
            'accuracy': 'Accuracy',
            'solver_type': 'SolverType',
            'solver_provider': 'SolverProvider',
            'solver_version': 'SolverVersion',
            'timestamp': 'Timestamp'
        }

        self._position = position
        self._accuracy = accuracy
        self._solver_type = solver_type
        self._solver_provider = solver_provider
        self._solver_version = solver_version
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPositionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPositionResponse of this GetPositionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this GetPositionResponse.


        :return: The position of this GetPositionResponse.
        :rtype: List
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this GetPositionResponse.


        :param position: The position of this GetPositionResponse.
        :type position: List
        """

        self._position = position

    @property
    def accuracy(self):
        """Gets the accuracy of this GetPositionResponse.


        :return: The accuracy of this GetPositionResponse.
        :rtype: GetPositionResponseAccuracy
        """
        return self._accuracy

    @accuracy.setter
    def accuracy(self, accuracy):
        """Sets the accuracy of this GetPositionResponse.


        :param accuracy: The accuracy of this GetPositionResponse.
        :type accuracy: GetPositionResponseAccuracy
        """

        self._accuracy = accuracy

    @property
    def solver_type(self):
        """Gets the solver_type of this GetPositionResponse.


        :return: The solver_type of this GetPositionResponse.
        :rtype: PositionSolverType
        """
        return self._solver_type

    @solver_type.setter
    def solver_type(self, solver_type):
        """Sets the solver_type of this GetPositionResponse.


        :param solver_type: The solver_type of this GetPositionResponse.
        :type solver_type: PositionSolverType
        """

        self._solver_type = solver_type

    @property
    def solver_provider(self):
        """Gets the solver_provider of this GetPositionResponse.


        :return: The solver_provider of this GetPositionResponse.
        :rtype: PositionSolverProvider
        """
        return self._solver_provider

    @solver_provider.setter
    def solver_provider(self, solver_provider):
        """Sets the solver_provider of this GetPositionResponse.


        :param solver_provider: The solver_provider of this GetPositionResponse.
        :type solver_provider: PositionSolverProvider
        """

        self._solver_provider = solver_provider

    @property
    def solver_version(self):
        """Gets the solver_version of this GetPositionResponse.


        :return: The solver_version of this GetPositionResponse.
        :rtype: str
        """
        return self._solver_version

    @solver_version.setter
    def solver_version(self, solver_version):
        """Sets the solver_version of this GetPositionResponse.


        :param solver_version: The solver_version of this GetPositionResponse.
        :type solver_version: str
        """

        self._solver_version = solver_version

    @property
    def timestamp(self):
        """Gets the timestamp of this GetPositionResponse.


        :return: The timestamp of this GetPositionResponse.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this GetPositionResponse.


        :param timestamp: The timestamp of this GetPositionResponse.
        :type timestamp: str
        """

        self._timestamp = timestamp
