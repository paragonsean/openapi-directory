# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_position_configuration_response_solvers import GetPositionConfigurationResponseSolvers
from openapi_server import util


class GetPositionConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, solvers: GetPositionConfigurationResponseSolvers=None, destination: str=None):
        """GetPositionConfigurationResponse - a model defined in OpenAPI

        :param solvers: The solvers of this GetPositionConfigurationResponse.
        :param destination: The destination of this GetPositionConfigurationResponse.
        """
        self.openapi_types = {
            'solvers': GetPositionConfigurationResponseSolvers,
            'destination': str
        }

        self.attribute_map = {
            'solvers': 'Solvers',
            'destination': 'Destination'
        }

        self._solvers = solvers
        self._destination = destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPositionConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPositionConfigurationResponse of this GetPositionConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def solvers(self):
        """Gets the solvers of this GetPositionConfigurationResponse.


        :return: The solvers of this GetPositionConfigurationResponse.
        :rtype: GetPositionConfigurationResponseSolvers
        """
        return self._solvers

    @solvers.setter
    def solvers(self, solvers):
        """Sets the solvers of this GetPositionConfigurationResponse.


        :param solvers: The solvers of this GetPositionConfigurationResponse.
        :type solvers: GetPositionConfigurationResponseSolvers
        """

        self._solvers = solvers

    @property
    def destination(self):
        """Gets the destination of this GetPositionConfigurationResponse.


        :return: The destination of this GetPositionConfigurationResponse.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this GetPositionConfigurationResponse.


        :param destination: The destination of this GetPositionConfigurationResponse.
        :type destination: str
        """

        self._destination = destination
