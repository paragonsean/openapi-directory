# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wcdma_obj_wcdma_local_id import WcdmaObjWcdmaLocalId
from openapi_server import util


class WcdmaObj(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mcc: int=None, mnc: int=None, lac: int=None, utran_cid: int=None, wcdma_local_id: WcdmaObjWcdmaLocalId=None, rscp: int=None, path_loss: int=None, wcdma_nmr: List=None):
        """WcdmaObj - a model defined in OpenAPI

        :param mcc: The mcc of this WcdmaObj.
        :param mnc: The mnc of this WcdmaObj.
        :param lac: The lac of this WcdmaObj.
        :param utran_cid: The utran_cid of this WcdmaObj.
        :param wcdma_local_id: The wcdma_local_id of this WcdmaObj.
        :param rscp: The rscp of this WcdmaObj.
        :param path_loss: The path_loss of this WcdmaObj.
        :param wcdma_nmr: The wcdma_nmr of this WcdmaObj.
        """
        self.openapi_types = {
            'mcc': int,
            'mnc': int,
            'lac': int,
            'utran_cid': int,
            'wcdma_local_id': WcdmaObjWcdmaLocalId,
            'rscp': int,
            'path_loss': int,
            'wcdma_nmr': List
        }

        self.attribute_map = {
            'mcc': 'Mcc',
            'mnc': 'Mnc',
            'lac': 'Lac',
            'utran_cid': 'UtranCid',
            'wcdma_local_id': 'WcdmaLocalId',
            'rscp': 'Rscp',
            'path_loss': 'PathLoss',
            'wcdma_nmr': 'WcdmaNmr'
        }

        self._mcc = mcc
        self._mnc = mnc
        self._lac = lac
        self._utran_cid = utran_cid
        self._wcdma_local_id = wcdma_local_id
        self._rscp = rscp
        self._path_loss = path_loss
        self._wcdma_nmr = wcdma_nmr

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WcdmaObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WcdmaObj of this WcdmaObj.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mcc(self):
        """Gets the mcc of this WcdmaObj.


        :return: The mcc of this WcdmaObj.
        :rtype: int
        """
        return self._mcc

    @mcc.setter
    def mcc(self, mcc):
        """Sets the mcc of this WcdmaObj.


        :param mcc: The mcc of this WcdmaObj.
        :type mcc: int
        """
        if mcc is None:
            raise ValueError("Invalid value for `mcc`, must not be `None`")

        self._mcc = mcc

    @property
    def mnc(self):
        """Gets the mnc of this WcdmaObj.


        :return: The mnc of this WcdmaObj.
        :rtype: int
        """
        return self._mnc

    @mnc.setter
    def mnc(self, mnc):
        """Sets the mnc of this WcdmaObj.


        :param mnc: The mnc of this WcdmaObj.
        :type mnc: int
        """
        if mnc is None:
            raise ValueError("Invalid value for `mnc`, must not be `None`")

        self._mnc = mnc

    @property
    def lac(self):
        """Gets the lac of this WcdmaObj.


        :return: The lac of this WcdmaObj.
        :rtype: int
        """
        return self._lac

    @lac.setter
    def lac(self, lac):
        """Sets the lac of this WcdmaObj.


        :param lac: The lac of this WcdmaObj.
        :type lac: int
        """

        self._lac = lac

    @property
    def utran_cid(self):
        """Gets the utran_cid of this WcdmaObj.


        :return: The utran_cid of this WcdmaObj.
        :rtype: int
        """
        return self._utran_cid

    @utran_cid.setter
    def utran_cid(self, utran_cid):
        """Sets the utran_cid of this WcdmaObj.


        :param utran_cid: The utran_cid of this WcdmaObj.
        :type utran_cid: int
        """
        if utran_cid is None:
            raise ValueError("Invalid value for `utran_cid`, must not be `None`")

        self._utran_cid = utran_cid

    @property
    def wcdma_local_id(self):
        """Gets the wcdma_local_id of this WcdmaObj.


        :return: The wcdma_local_id of this WcdmaObj.
        :rtype: WcdmaObjWcdmaLocalId
        """
        return self._wcdma_local_id

    @wcdma_local_id.setter
    def wcdma_local_id(self, wcdma_local_id):
        """Sets the wcdma_local_id of this WcdmaObj.


        :param wcdma_local_id: The wcdma_local_id of this WcdmaObj.
        :type wcdma_local_id: WcdmaObjWcdmaLocalId
        """

        self._wcdma_local_id = wcdma_local_id

    @property
    def rscp(self):
        """Gets the rscp of this WcdmaObj.


        :return: The rscp of this WcdmaObj.
        :rtype: int
        """
        return self._rscp

    @rscp.setter
    def rscp(self, rscp):
        """Sets the rscp of this WcdmaObj.


        :param rscp: The rscp of this WcdmaObj.
        :type rscp: int
        """

        self._rscp = rscp

    @property
    def path_loss(self):
        """Gets the path_loss of this WcdmaObj.


        :return: The path_loss of this WcdmaObj.
        :rtype: int
        """
        return self._path_loss

    @path_loss.setter
    def path_loss(self, path_loss):
        """Sets the path_loss of this WcdmaObj.


        :param path_loss: The path_loss of this WcdmaObj.
        :type path_loss: int
        """

        self._path_loss = path_loss

    @property
    def wcdma_nmr(self):
        """Gets the wcdma_nmr of this WcdmaObj.


        :return: The wcdma_nmr of this WcdmaObj.
        :rtype: List
        """
        return self._wcdma_nmr

    @wcdma_nmr.setter
    def wcdma_nmr(self, wcdma_nmr):
        """Sets the wcdma_nmr of this WcdmaObj.


        :param wcdma_nmr: The wcdma_nmr of this WcdmaObj.
        :type wcdma_nmr: List
        """

        self._wcdma_nmr = wcdma_nmr
