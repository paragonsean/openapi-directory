# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeVpcEndpointsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_endpoints: List=None, vpc_endpoint_errors: List=None):
        """DescribeVpcEndpointsResponse - a model defined in OpenAPI

        :param vpc_endpoints: The vpc_endpoints of this DescribeVpcEndpointsResponse.
        :param vpc_endpoint_errors: The vpc_endpoint_errors of this DescribeVpcEndpointsResponse.
        """
        self.openapi_types = {
            'vpc_endpoints': List,
            'vpc_endpoint_errors': List
        }

        self.attribute_map = {
            'vpc_endpoints': 'VpcEndpoints',
            'vpc_endpoint_errors': 'VpcEndpointErrors'
        }

        self._vpc_endpoints = vpc_endpoints
        self._vpc_endpoint_errors = vpc_endpoint_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeVpcEndpointsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeVpcEndpointsResponse of this DescribeVpcEndpointsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_endpoints(self):
        """Gets the vpc_endpoints of this DescribeVpcEndpointsResponse.


        :return: The vpc_endpoints of this DescribeVpcEndpointsResponse.
        :rtype: List
        """
        return self._vpc_endpoints

    @vpc_endpoints.setter
    def vpc_endpoints(self, vpc_endpoints):
        """Sets the vpc_endpoints of this DescribeVpcEndpointsResponse.


        :param vpc_endpoints: The vpc_endpoints of this DescribeVpcEndpointsResponse.
        :type vpc_endpoints: List
        """
        if vpc_endpoints is None:
            raise ValueError("Invalid value for `vpc_endpoints`, must not be `None`")

        self._vpc_endpoints = vpc_endpoints

    @property
    def vpc_endpoint_errors(self):
        """Gets the vpc_endpoint_errors of this DescribeVpcEndpointsResponse.


        :return: The vpc_endpoint_errors of this DescribeVpcEndpointsResponse.
        :rtype: List
        """
        return self._vpc_endpoint_errors

    @vpc_endpoint_errors.setter
    def vpc_endpoint_errors(self, vpc_endpoint_errors):
        """Sets the vpc_endpoint_errors of this DescribeVpcEndpointsResponse.


        :param vpc_endpoint_errors: The vpc_endpoint_errors of this DescribeVpcEndpointsResponse.
        :type vpc_endpoint_errors: List
        """
        if vpc_endpoint_errors is None:
            raise ValueError("Invalid value for `vpc_endpoint_errors`, must not be `None`")

        self._vpc_endpoint_errors = vpc_endpoint_errors
