# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class RevokeVpcEndpointAccessRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: str=None):
        """RevokeVpcEndpointAccessRequest - a model defined in OpenAPI

        :param account: The account of this RevokeVpcEndpointAccessRequest.
        """
        self.openapi_types = {
            'account': str
        }

        self.attribute_map = {
            'account': 'Account'
        }

        self._account = account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevokeVpcEndpointAccessRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevokeVpcEndpointAccess_request of this RevokeVpcEndpointAccessRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this RevokeVpcEndpointAccessRequest.

        The account ID to revoke access from.

        :return: The account of this RevokeVpcEndpointAccessRequest.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this RevokeVpcEndpointAccessRequest.

        The account ID to revoke access from.

        :param account: The account of this RevokeVpcEndpointAccessRequest.
        :type account: str
        """
        if account is None:
            raise ValueError("Invalid value for `account`, must not be `None`")
        if account is not None and not re.search(r'^[0-9]+$', account):
            raise ValueError("Invalid value for `account`, must be a follow pattern or equal to `/^[0-9]+$/`")

        self._account = account
