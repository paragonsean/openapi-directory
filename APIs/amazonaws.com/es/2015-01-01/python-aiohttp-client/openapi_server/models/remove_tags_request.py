# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, tag_keys: List[str]=None):
        """RemoveTagsRequest - a model defined in OpenAPI

        :param arn: The arn of this RemoveTagsRequest.
        :param tag_keys: The tag_keys of this RemoveTagsRequest.
        """
        self.openapi_types = {
            'arn': str,
            'tag_keys': List[str]
        }

        self.attribute_map = {
            'arn': 'ARN',
            'tag_keys': 'TagKeys'
        }

        self._arn = arn
        self._tag_keys = tag_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveTags_request of this RemoveTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this RemoveTagsRequest.

        The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.

        :return: The arn of this RemoveTagsRequest.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this RemoveTagsRequest.

        The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.

        :param arn: The arn of this RemoveTagsRequest.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def tag_keys(self):
        """Gets the tag_keys of this RemoveTagsRequest.

        Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.

        :return: The tag_keys of this RemoveTagsRequest.
        :rtype: List[str]
        """
        return self._tag_keys

    @tag_keys.setter
    def tag_keys(self, tag_keys):
        """Sets the tag_keys of this RemoveTagsRequest.

        Specifies the <code>TagKey</code> list which you want to remove from the Elasticsearch domain.

        :param tag_keys: The tag_keys of this RemoveTagsRequest.
        :type tag_keys: List[str]
        """
        if tag_keys is None:
            raise ValueError("Invalid value for `tag_keys`, must not be `None`")

        self._tag_keys = tag_keys
