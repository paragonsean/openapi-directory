# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_vpc_endpoint_response_vpc_endpoint import UpdateVpcEndpointResponseVpcEndpoint
from openapi_server import util


class UpdateVpcEndpointResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_endpoint: UpdateVpcEndpointResponseVpcEndpoint=None):
        """UpdateVpcEndpointResponse - a model defined in OpenAPI

        :param vpc_endpoint: The vpc_endpoint of this UpdateVpcEndpointResponse.
        """
        self.openapi_types = {
            'vpc_endpoint': UpdateVpcEndpointResponseVpcEndpoint
        }

        self.attribute_map = {
            'vpc_endpoint': 'VpcEndpoint'
        }

        self._vpc_endpoint = vpc_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVpcEndpointResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVpcEndpointResponse of this UpdateVpcEndpointResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_endpoint(self):
        """Gets the vpc_endpoint of this UpdateVpcEndpointResponse.


        :return: The vpc_endpoint of this UpdateVpcEndpointResponse.
        :rtype: UpdateVpcEndpointResponseVpcEndpoint
        """
        return self._vpc_endpoint

    @vpc_endpoint.setter
    def vpc_endpoint(self, vpc_endpoint):
        """Sets the vpc_endpoint of this UpdateVpcEndpointResponse.


        :param vpc_endpoint: The vpc_endpoint of this UpdateVpcEndpointResponse.
        :type vpc_endpoint: UpdateVpcEndpointResponseVpcEndpoint
        """
        if vpc_endpoint is None:
            raise ValueError("Invalid value for `vpc_endpoint`, must not be `None`")

        self._vpc_endpoint = vpc_endpoint
