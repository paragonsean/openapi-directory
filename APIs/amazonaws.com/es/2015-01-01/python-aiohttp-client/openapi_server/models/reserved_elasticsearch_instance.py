# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.es_partition_instance_type import ESPartitionInstanceType
from openapi_server.models.reserved_elasticsearch_instance_payment_option import ReservedElasticsearchInstancePaymentOption
from openapi_server import util


class ReservedElasticsearchInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reservation_name: str=None, reserved_elasticsearch_instance_id: str=None, reserved_elasticsearch_instance_offering_id: str=None, elasticsearch_instance_type: ESPartitionInstanceType=None, start_time: datetime=None, duration: int=None, fixed_price: float=None, usage_price: float=None, currency_code: str=None, elasticsearch_instance_count: int=None, state: str=None, payment_option: ReservedElasticsearchInstancePaymentOption=None, recurring_charges: List=None):
        """ReservedElasticsearchInstance - a model defined in OpenAPI

        :param reservation_name: The reservation_name of this ReservedElasticsearchInstance.
        :param reserved_elasticsearch_instance_id: The reserved_elasticsearch_instance_id of this ReservedElasticsearchInstance.
        :param reserved_elasticsearch_instance_offering_id: The reserved_elasticsearch_instance_offering_id of this ReservedElasticsearchInstance.
        :param elasticsearch_instance_type: The elasticsearch_instance_type of this ReservedElasticsearchInstance.
        :param start_time: The start_time of this ReservedElasticsearchInstance.
        :param duration: The duration of this ReservedElasticsearchInstance.
        :param fixed_price: The fixed_price of this ReservedElasticsearchInstance.
        :param usage_price: The usage_price of this ReservedElasticsearchInstance.
        :param currency_code: The currency_code of this ReservedElasticsearchInstance.
        :param elasticsearch_instance_count: The elasticsearch_instance_count of this ReservedElasticsearchInstance.
        :param state: The state of this ReservedElasticsearchInstance.
        :param payment_option: The payment_option of this ReservedElasticsearchInstance.
        :param recurring_charges: The recurring_charges of this ReservedElasticsearchInstance.
        """
        self.openapi_types = {
            'reservation_name': str,
            'reserved_elasticsearch_instance_id': str,
            'reserved_elasticsearch_instance_offering_id': str,
            'elasticsearch_instance_type': ESPartitionInstanceType,
            'start_time': datetime,
            'duration': int,
            'fixed_price': float,
            'usage_price': float,
            'currency_code': str,
            'elasticsearch_instance_count': int,
            'state': str,
            'payment_option': ReservedElasticsearchInstancePaymentOption,
            'recurring_charges': List
        }

        self.attribute_map = {
            'reservation_name': 'ReservationName',
            'reserved_elasticsearch_instance_id': 'ReservedElasticsearchInstanceId',
            'reserved_elasticsearch_instance_offering_id': 'ReservedElasticsearchInstanceOfferingId',
            'elasticsearch_instance_type': 'ElasticsearchInstanceType',
            'start_time': 'StartTime',
            'duration': 'Duration',
            'fixed_price': 'FixedPrice',
            'usage_price': 'UsagePrice',
            'currency_code': 'CurrencyCode',
            'elasticsearch_instance_count': 'ElasticsearchInstanceCount',
            'state': 'State',
            'payment_option': 'PaymentOption',
            'recurring_charges': 'RecurringCharges'
        }

        self._reservation_name = reservation_name
        self._reserved_elasticsearch_instance_id = reserved_elasticsearch_instance_id
        self._reserved_elasticsearch_instance_offering_id = reserved_elasticsearch_instance_offering_id
        self._elasticsearch_instance_type = elasticsearch_instance_type
        self._start_time = start_time
        self._duration = duration
        self._fixed_price = fixed_price
        self._usage_price = usage_price
        self._currency_code = currency_code
        self._elasticsearch_instance_count = elasticsearch_instance_count
        self._state = state
        self._payment_option = payment_option
        self._recurring_charges = recurring_charges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservedElasticsearchInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservedElasticsearchInstance of this ReservedElasticsearchInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reservation_name(self):
        """Gets the reservation_name of this ReservedElasticsearchInstance.


        :return: The reservation_name of this ReservedElasticsearchInstance.
        :rtype: str
        """
        return self._reservation_name

    @reservation_name.setter
    def reservation_name(self, reservation_name):
        """Sets the reservation_name of this ReservedElasticsearchInstance.


        :param reservation_name: The reservation_name of this ReservedElasticsearchInstance.
        :type reservation_name: str
        """

        self._reservation_name = reservation_name

    @property
    def reserved_elasticsearch_instance_id(self):
        """Gets the reserved_elasticsearch_instance_id of this ReservedElasticsearchInstance.


        :return: The reserved_elasticsearch_instance_id of this ReservedElasticsearchInstance.
        :rtype: str
        """
        return self._reserved_elasticsearch_instance_id

    @reserved_elasticsearch_instance_id.setter
    def reserved_elasticsearch_instance_id(self, reserved_elasticsearch_instance_id):
        """Sets the reserved_elasticsearch_instance_id of this ReservedElasticsearchInstance.


        :param reserved_elasticsearch_instance_id: The reserved_elasticsearch_instance_id of this ReservedElasticsearchInstance.
        :type reserved_elasticsearch_instance_id: str
        """

        self._reserved_elasticsearch_instance_id = reserved_elasticsearch_instance_id

    @property
    def reserved_elasticsearch_instance_offering_id(self):
        """Gets the reserved_elasticsearch_instance_offering_id of this ReservedElasticsearchInstance.


        :return: The reserved_elasticsearch_instance_offering_id of this ReservedElasticsearchInstance.
        :rtype: str
        """
        return self._reserved_elasticsearch_instance_offering_id

    @reserved_elasticsearch_instance_offering_id.setter
    def reserved_elasticsearch_instance_offering_id(self, reserved_elasticsearch_instance_offering_id):
        """Sets the reserved_elasticsearch_instance_offering_id of this ReservedElasticsearchInstance.


        :param reserved_elasticsearch_instance_offering_id: The reserved_elasticsearch_instance_offering_id of this ReservedElasticsearchInstance.
        :type reserved_elasticsearch_instance_offering_id: str
        """

        self._reserved_elasticsearch_instance_offering_id = reserved_elasticsearch_instance_offering_id

    @property
    def elasticsearch_instance_type(self):
        """Gets the elasticsearch_instance_type of this ReservedElasticsearchInstance.


        :return: The elasticsearch_instance_type of this ReservedElasticsearchInstance.
        :rtype: ESPartitionInstanceType
        """
        return self._elasticsearch_instance_type

    @elasticsearch_instance_type.setter
    def elasticsearch_instance_type(self, elasticsearch_instance_type):
        """Sets the elasticsearch_instance_type of this ReservedElasticsearchInstance.


        :param elasticsearch_instance_type: The elasticsearch_instance_type of this ReservedElasticsearchInstance.
        :type elasticsearch_instance_type: ESPartitionInstanceType
        """

        self._elasticsearch_instance_type = elasticsearch_instance_type

    @property
    def start_time(self):
        """Gets the start_time of this ReservedElasticsearchInstance.


        :return: The start_time of this ReservedElasticsearchInstance.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ReservedElasticsearchInstance.


        :param start_time: The start_time of this ReservedElasticsearchInstance.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def duration(self):
        """Gets the duration of this ReservedElasticsearchInstance.


        :return: The duration of this ReservedElasticsearchInstance.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ReservedElasticsearchInstance.


        :param duration: The duration of this ReservedElasticsearchInstance.
        :type duration: int
        """

        self._duration = duration

    @property
    def fixed_price(self):
        """Gets the fixed_price of this ReservedElasticsearchInstance.


        :return: The fixed_price of this ReservedElasticsearchInstance.
        :rtype: float
        """
        return self._fixed_price

    @fixed_price.setter
    def fixed_price(self, fixed_price):
        """Sets the fixed_price of this ReservedElasticsearchInstance.


        :param fixed_price: The fixed_price of this ReservedElasticsearchInstance.
        :type fixed_price: float
        """

        self._fixed_price = fixed_price

    @property
    def usage_price(self):
        """Gets the usage_price of this ReservedElasticsearchInstance.


        :return: The usage_price of this ReservedElasticsearchInstance.
        :rtype: float
        """
        return self._usage_price

    @usage_price.setter
    def usage_price(self, usage_price):
        """Sets the usage_price of this ReservedElasticsearchInstance.


        :param usage_price: The usage_price of this ReservedElasticsearchInstance.
        :type usage_price: float
        """

        self._usage_price = usage_price

    @property
    def currency_code(self):
        """Gets the currency_code of this ReservedElasticsearchInstance.


        :return: The currency_code of this ReservedElasticsearchInstance.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ReservedElasticsearchInstance.


        :param currency_code: The currency_code of this ReservedElasticsearchInstance.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def elasticsearch_instance_count(self):
        """Gets the elasticsearch_instance_count of this ReservedElasticsearchInstance.


        :return: The elasticsearch_instance_count of this ReservedElasticsearchInstance.
        :rtype: int
        """
        return self._elasticsearch_instance_count

    @elasticsearch_instance_count.setter
    def elasticsearch_instance_count(self, elasticsearch_instance_count):
        """Sets the elasticsearch_instance_count of this ReservedElasticsearchInstance.


        :param elasticsearch_instance_count: The elasticsearch_instance_count of this ReservedElasticsearchInstance.
        :type elasticsearch_instance_count: int
        """

        self._elasticsearch_instance_count = elasticsearch_instance_count

    @property
    def state(self):
        """Gets the state of this ReservedElasticsearchInstance.


        :return: The state of this ReservedElasticsearchInstance.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ReservedElasticsearchInstance.


        :param state: The state of this ReservedElasticsearchInstance.
        :type state: str
        """

        self._state = state

    @property
    def payment_option(self):
        """Gets the payment_option of this ReservedElasticsearchInstance.


        :return: The payment_option of this ReservedElasticsearchInstance.
        :rtype: ReservedElasticsearchInstancePaymentOption
        """
        return self._payment_option

    @payment_option.setter
    def payment_option(self, payment_option):
        """Sets the payment_option of this ReservedElasticsearchInstance.


        :param payment_option: The payment_option of this ReservedElasticsearchInstance.
        :type payment_option: ReservedElasticsearchInstancePaymentOption
        """

        self._payment_option = payment_option

    @property
    def recurring_charges(self):
        """Gets the recurring_charges of this ReservedElasticsearchInstance.


        :return: The recurring_charges of this ReservedElasticsearchInstance.
        :rtype: List
        """
        return self._recurring_charges

    @recurring_charges.setter
    def recurring_charges(self, recurring_charges):
        """Sets the recurring_charges of this ReservedElasticsearchInstance.


        :param recurring_charges: The recurring_charges of this ReservedElasticsearchInstance.
        :type recurring_charges: List
        """

        self._recurring_charges = recurring_charges
