# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_tune_maintenance_schedule_duration import AutoTuneMaintenanceScheduleDuration
from openapi_server import util


class AutoTuneMaintenanceSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_at: datetime=None, duration: AutoTuneMaintenanceScheduleDuration=None, cron_expression_for_recurrence: str=None):
        """AutoTuneMaintenanceSchedule - a model defined in OpenAPI

        :param start_at: The start_at of this AutoTuneMaintenanceSchedule.
        :param duration: The duration of this AutoTuneMaintenanceSchedule.
        :param cron_expression_for_recurrence: The cron_expression_for_recurrence of this AutoTuneMaintenanceSchedule.
        """
        self.openapi_types = {
            'start_at': datetime,
            'duration': AutoTuneMaintenanceScheduleDuration,
            'cron_expression_for_recurrence': str
        }

        self.attribute_map = {
            'start_at': 'StartAt',
            'duration': 'Duration',
            'cron_expression_for_recurrence': 'CronExpressionForRecurrence'
        }

        self._start_at = start_at
        self._duration = duration
        self._cron_expression_for_recurrence = cron_expression_for_recurrence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoTuneMaintenanceSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoTuneMaintenanceSchedule of this AutoTuneMaintenanceSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_at(self):
        """Gets the start_at of this AutoTuneMaintenanceSchedule.


        :return: The start_at of this AutoTuneMaintenanceSchedule.
        :rtype: datetime
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this AutoTuneMaintenanceSchedule.


        :param start_at: The start_at of this AutoTuneMaintenanceSchedule.
        :type start_at: datetime
        """

        self._start_at = start_at

    @property
    def duration(self):
        """Gets the duration of this AutoTuneMaintenanceSchedule.


        :return: The duration of this AutoTuneMaintenanceSchedule.
        :rtype: AutoTuneMaintenanceScheduleDuration
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this AutoTuneMaintenanceSchedule.


        :param duration: The duration of this AutoTuneMaintenanceSchedule.
        :type duration: AutoTuneMaintenanceScheduleDuration
        """

        self._duration = duration

    @property
    def cron_expression_for_recurrence(self):
        """Gets the cron_expression_for_recurrence of this AutoTuneMaintenanceSchedule.


        :return: The cron_expression_for_recurrence of this AutoTuneMaintenanceSchedule.
        :rtype: str
        """
        return self._cron_expression_for_recurrence

    @cron_expression_for_recurrence.setter
    def cron_expression_for_recurrence(self, cron_expression_for_recurrence):
        """Sets the cron_expression_for_recurrence of this AutoTuneMaintenanceSchedule.


        :param cron_expression_for_recurrence: The cron_expression_for_recurrence of this AutoTuneMaintenanceSchedule.
        :type cron_expression_for_recurrence: str
        """

        self._cron_expression_for_recurrence = cron_expression_for_recurrence
