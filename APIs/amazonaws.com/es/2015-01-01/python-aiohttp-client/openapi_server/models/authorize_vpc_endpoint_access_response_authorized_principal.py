# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.principal_type import PrincipalType
from openapi_server import util


class AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, principal_type: PrincipalType=None, principal: str=None):
        """AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal - a model defined in OpenAPI

        :param principal_type: The principal_type of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        :param principal: The principal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        """
        self.openapi_types = {
            'principal_type': PrincipalType,
            'principal': str
        }

        self.attribute_map = {
            'principal_type': 'PrincipalType',
            'principal': 'Principal'
        }

        self._principal_type = principal_type
        self._principal = principal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthorizeVpcEndpointAccessResponse_AuthorizedPrincipal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def principal_type(self):
        """Gets the principal_type of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.


        :return: The principal_type of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        :rtype: PrincipalType
        """
        return self._principal_type

    @principal_type.setter
    def principal_type(self, principal_type):
        """Sets the principal_type of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.


        :param principal_type: The principal_type of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        :type principal_type: PrincipalType
        """

        self._principal_type = principal_type

    @property
    def principal(self):
        """Gets the principal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.


        :return: The principal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        :rtype: str
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.


        :param principal: The principal of this AuthorizeVpcEndpointAccessResponseAuthorizedPrincipal.
        :type principal: str
        """

        self._principal = principal
