# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_unit import TimeUnit
from openapi_server import util


class Duration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: int=None, unit: TimeUnit=None):
        """Duration - a model defined in OpenAPI

        :param value: The value of this Duration.
        :param unit: The unit of this Duration.
        """
        self.openapi_types = {
            'value': int,
            'unit': TimeUnit
        }

        self.attribute_map = {
            'value': 'Value',
            'unit': 'Unit'
        }

        self._value = value
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Duration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Duration of this Duration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this Duration.


        :return: The value of this Duration.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Duration.


        :param value: The value of this Duration.
        :type value: int
        """

        self._value = value

    @property
    def unit(self):
        """Gets the unit of this Duration.


        :return: The unit of this Duration.
        :rtype: TimeUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this Duration.


        :param unit: The unit of this Duration.
        :type unit: TimeUnit
        """

        self._unit = unit
