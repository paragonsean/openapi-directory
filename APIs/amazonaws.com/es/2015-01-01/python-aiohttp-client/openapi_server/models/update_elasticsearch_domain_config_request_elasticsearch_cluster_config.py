# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_elasticsearch_domain_request_elasticsearch_cluster_config_cold_storage_options import CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions
from openapi_server.models.create_elasticsearch_domain_request_elasticsearch_cluster_config_zone_awareness_config import CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig
from openapi_server.models.es_partition_instance_type import ESPartitionInstanceType
from openapi_server.models.es_warm_partition_instance_type import ESWarmPartitionInstanceType
from openapi_server import util


class UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_type: ESPartitionInstanceType=None, instance_count: int=None, dedicated_master_enabled: bool=None, zone_awareness_enabled: bool=None, zone_awareness_config: CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig=None, dedicated_master_type: ESPartitionInstanceType=None, dedicated_master_count: int=None, warm_enabled: bool=None, warm_type: ESWarmPartitionInstanceType=None, warm_count: int=None, cold_storage_options: CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions=None):
        """UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig - a model defined in OpenAPI

        :param instance_type: The instance_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param instance_count: The instance_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param dedicated_master_enabled: The dedicated_master_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param zone_awareness_enabled: The zone_awareness_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param zone_awareness_config: The zone_awareness_config of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param dedicated_master_type: The dedicated_master_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param dedicated_master_count: The dedicated_master_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param warm_enabled: The warm_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param warm_type: The warm_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param warm_count: The warm_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :param cold_storage_options: The cold_storage_options of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        """
        self.openapi_types = {
            'instance_type': ESPartitionInstanceType,
            'instance_count': int,
            'dedicated_master_enabled': bool,
            'zone_awareness_enabled': bool,
            'zone_awareness_config': CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig,
            'dedicated_master_type': ESPartitionInstanceType,
            'dedicated_master_count': int,
            'warm_enabled': bool,
            'warm_type': ESWarmPartitionInstanceType,
            'warm_count': int,
            'cold_storage_options': CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions
        }

        self.attribute_map = {
            'instance_type': 'InstanceType',
            'instance_count': 'InstanceCount',
            'dedicated_master_enabled': 'DedicatedMasterEnabled',
            'zone_awareness_enabled': 'ZoneAwarenessEnabled',
            'zone_awareness_config': 'ZoneAwarenessConfig',
            'dedicated_master_type': 'DedicatedMasterType',
            'dedicated_master_count': 'DedicatedMasterCount',
            'warm_enabled': 'WarmEnabled',
            'warm_type': 'WarmType',
            'warm_count': 'WarmCount',
            'cold_storage_options': 'ColdStorageOptions'
        }

        self._instance_type = instance_type
        self._instance_count = instance_count
        self._dedicated_master_enabled = dedicated_master_enabled
        self._zone_awareness_enabled = zone_awareness_enabled
        self._zone_awareness_config = zone_awareness_config
        self._dedicated_master_type = dedicated_master_type
        self._dedicated_master_count = dedicated_master_count
        self._warm_enabled = warm_enabled
        self._warm_type = warm_type
        self._warm_count = warm_count
        self._cold_storage_options = cold_storage_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateElasticsearchDomainConfigRequest_ElasticsearchClusterConfig of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_type(self):
        """Gets the instance_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The instance_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: ESPartitionInstanceType
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param instance_type: The instance_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type instance_type: ESPartitionInstanceType
        """

        self._instance_type = instance_type

    @property
    def instance_count(self):
        """Gets the instance_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The instance_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: int
        """
        return self._instance_count

    @instance_count.setter
    def instance_count(self, instance_count):
        """Sets the instance_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param instance_count: The instance_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type instance_count: int
        """

        self._instance_count = instance_count

    @property
    def dedicated_master_enabled(self):
        """Gets the dedicated_master_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The dedicated_master_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: bool
        """
        return self._dedicated_master_enabled

    @dedicated_master_enabled.setter
    def dedicated_master_enabled(self, dedicated_master_enabled):
        """Sets the dedicated_master_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param dedicated_master_enabled: The dedicated_master_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type dedicated_master_enabled: bool
        """

        self._dedicated_master_enabled = dedicated_master_enabled

    @property
    def zone_awareness_enabled(self):
        """Gets the zone_awareness_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The zone_awareness_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: bool
        """
        return self._zone_awareness_enabled

    @zone_awareness_enabled.setter
    def zone_awareness_enabled(self, zone_awareness_enabled):
        """Sets the zone_awareness_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param zone_awareness_enabled: The zone_awareness_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type zone_awareness_enabled: bool
        """

        self._zone_awareness_enabled = zone_awareness_enabled

    @property
    def zone_awareness_config(self):
        """Gets the zone_awareness_config of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The zone_awareness_config of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig
        """
        return self._zone_awareness_config

    @zone_awareness_config.setter
    def zone_awareness_config(self, zone_awareness_config):
        """Sets the zone_awareness_config of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param zone_awareness_config: The zone_awareness_config of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type zone_awareness_config: CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig
        """

        self._zone_awareness_config = zone_awareness_config

    @property
    def dedicated_master_type(self):
        """Gets the dedicated_master_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The dedicated_master_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: ESPartitionInstanceType
        """
        return self._dedicated_master_type

    @dedicated_master_type.setter
    def dedicated_master_type(self, dedicated_master_type):
        """Sets the dedicated_master_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param dedicated_master_type: The dedicated_master_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type dedicated_master_type: ESPartitionInstanceType
        """

        self._dedicated_master_type = dedicated_master_type

    @property
    def dedicated_master_count(self):
        """Gets the dedicated_master_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The dedicated_master_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: int
        """
        return self._dedicated_master_count

    @dedicated_master_count.setter
    def dedicated_master_count(self, dedicated_master_count):
        """Sets the dedicated_master_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param dedicated_master_count: The dedicated_master_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type dedicated_master_count: int
        """

        self._dedicated_master_count = dedicated_master_count

    @property
    def warm_enabled(self):
        """Gets the warm_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The warm_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: bool
        """
        return self._warm_enabled

    @warm_enabled.setter
    def warm_enabled(self, warm_enabled):
        """Sets the warm_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param warm_enabled: The warm_enabled of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type warm_enabled: bool
        """

        self._warm_enabled = warm_enabled

    @property
    def warm_type(self):
        """Gets the warm_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The warm_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: ESWarmPartitionInstanceType
        """
        return self._warm_type

    @warm_type.setter
    def warm_type(self, warm_type):
        """Sets the warm_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param warm_type: The warm_type of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type warm_type: ESWarmPartitionInstanceType
        """

        self._warm_type = warm_type

    @property
    def warm_count(self):
        """Gets the warm_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The warm_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: int
        """
        return self._warm_count

    @warm_count.setter
    def warm_count(self, warm_count):
        """Sets the warm_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param warm_count: The warm_count of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type warm_count: int
        """

        self._warm_count = warm_count

    @property
    def cold_storage_options(self):
        """Gets the cold_storage_options of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :return: The cold_storage_options of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :rtype: CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions
        """
        return self._cold_storage_options

    @cold_storage_options.setter
    def cold_storage_options(self, cold_storage_options):
        """Sets the cold_storage_options of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.


        :param cold_storage_options: The cold_storage_options of this UpdateElasticsearchDomainConfigRequestElasticsearchClusterConfig.
        :type cold_storage_options: CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions
        """

        self._cold_storage_options = cold_storage_options
