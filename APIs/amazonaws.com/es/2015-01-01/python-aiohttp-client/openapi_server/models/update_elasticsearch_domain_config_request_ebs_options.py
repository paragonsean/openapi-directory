# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volume_type import VolumeType
from openapi_server import util


class UpdateElasticsearchDomainConfigRequestEBSOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ebs_enabled: bool=None, volume_type: VolumeType=None, volume_size: int=None, iops: int=None, throughput: int=None):
        """UpdateElasticsearchDomainConfigRequestEBSOptions - a model defined in OpenAPI

        :param ebs_enabled: The ebs_enabled of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :param volume_type: The volume_type of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :param volume_size: The volume_size of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :param iops: The iops of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :param throughput: The throughput of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        """
        self.openapi_types = {
            'ebs_enabled': bool,
            'volume_type': VolumeType,
            'volume_size': int,
            'iops': int,
            'throughput': int
        }

        self.attribute_map = {
            'ebs_enabled': 'EBSEnabled',
            'volume_type': 'VolumeType',
            'volume_size': 'VolumeSize',
            'iops': 'Iops',
            'throughput': 'Throughput'
        }

        self._ebs_enabled = ebs_enabled
        self._volume_type = volume_type
        self._volume_size = volume_size
        self._iops = iops
        self._throughput = throughput

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateElasticsearchDomainConfigRequestEBSOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateElasticsearchDomainConfigRequest_EBSOptions of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ebs_enabled(self):
        """Gets the ebs_enabled of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :return: The ebs_enabled of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :rtype: bool
        """
        return self._ebs_enabled

    @ebs_enabled.setter
    def ebs_enabled(self, ebs_enabled):
        """Sets the ebs_enabled of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :param ebs_enabled: The ebs_enabled of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :type ebs_enabled: bool
        """

        self._ebs_enabled = ebs_enabled

    @property
    def volume_type(self):
        """Gets the volume_type of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :return: The volume_type of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :rtype: VolumeType
        """
        return self._volume_type

    @volume_type.setter
    def volume_type(self, volume_type):
        """Sets the volume_type of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :param volume_type: The volume_type of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :type volume_type: VolumeType
        """

        self._volume_type = volume_type

    @property
    def volume_size(self):
        """Gets the volume_size of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :return: The volume_size of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :rtype: int
        """
        return self._volume_size

    @volume_size.setter
    def volume_size(self, volume_size):
        """Sets the volume_size of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :param volume_size: The volume_size of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :type volume_size: int
        """

        self._volume_size = volume_size

    @property
    def iops(self):
        """Gets the iops of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :return: The iops of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :param iops: The iops of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :type iops: int
        """

        self._iops = iops

    @property
    def throughput(self):
        """Gets the throughput of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :return: The throughput of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :rtype: int
        """
        return self._throughput

    @throughput.setter
    def throughput(self, throughput):
        """Sets the throughput of this UpdateElasticsearchDomainConfigRequestEBSOptions.


        :param throughput: The throughput of this UpdateElasticsearchDomainConfigRequestEBSOptions.
        :type throughput: int
        """

        self._throughput = throughput
