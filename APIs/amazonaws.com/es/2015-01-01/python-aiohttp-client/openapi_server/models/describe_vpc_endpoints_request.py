# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeVpcEndpointsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_endpoint_ids: List[str]=None):
        """DescribeVpcEndpointsRequest - a model defined in OpenAPI

        :param vpc_endpoint_ids: The vpc_endpoint_ids of this DescribeVpcEndpointsRequest.
        """
        self.openapi_types = {
            'vpc_endpoint_ids': List[str]
        }

        self.attribute_map = {
            'vpc_endpoint_ids': 'VpcEndpointIds'
        }

        self._vpc_endpoint_ids = vpc_endpoint_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeVpcEndpointsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeVpcEndpoints_request of this DescribeVpcEndpointsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_endpoint_ids(self):
        """Gets the vpc_endpoint_ids of this DescribeVpcEndpointsRequest.

        The unique identifiers of the endpoints to get information about.

        :return: The vpc_endpoint_ids of this DescribeVpcEndpointsRequest.
        :rtype: List[str]
        """
        return self._vpc_endpoint_ids

    @vpc_endpoint_ids.setter
    def vpc_endpoint_ids(self, vpc_endpoint_ids):
        """Sets the vpc_endpoint_ids of this DescribeVpcEndpointsRequest.

        The unique identifiers of the endpoints to get information about.

        :param vpc_endpoint_ids: The vpc_endpoint_ids of this DescribeVpcEndpointsRequest.
        :type vpc_endpoint_ids: List[str]
        """
        if vpc_endpoint_ids is None:
            raise ValueError("Invalid value for `vpc_endpoint_ids`, must not be `None`")

        self._vpc_endpoint_ids = vpc_endpoint_ids
