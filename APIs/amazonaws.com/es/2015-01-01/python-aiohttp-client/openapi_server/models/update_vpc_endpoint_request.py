# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_elasticsearch_domain_request_vpc_options import CreateElasticsearchDomainRequestVPCOptions
import re
from openapi_server import util


class UpdateVpcEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpc_endpoint_id: str=None, vpc_options: CreateElasticsearchDomainRequestVPCOptions=None):
        """UpdateVpcEndpointRequest - a model defined in OpenAPI

        :param vpc_endpoint_id: The vpc_endpoint_id of this UpdateVpcEndpointRequest.
        :param vpc_options: The vpc_options of this UpdateVpcEndpointRequest.
        """
        self.openapi_types = {
            'vpc_endpoint_id': str,
            'vpc_options': CreateElasticsearchDomainRequestVPCOptions
        }

        self.attribute_map = {
            'vpc_endpoint_id': 'VpcEndpointId',
            'vpc_options': 'VpcOptions'
        }

        self._vpc_endpoint_id = vpc_endpoint_id
        self._vpc_options = vpc_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVpcEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVpcEndpoint_request of this UpdateVpcEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpc_endpoint_id(self):
        """Gets the vpc_endpoint_id of this UpdateVpcEndpointRequest.

        Unique identifier of the VPC endpoint to be updated.

        :return: The vpc_endpoint_id of this UpdateVpcEndpointRequest.
        :rtype: str
        """
        return self._vpc_endpoint_id

    @vpc_endpoint_id.setter
    def vpc_endpoint_id(self, vpc_endpoint_id):
        """Sets the vpc_endpoint_id of this UpdateVpcEndpointRequest.

        Unique identifier of the VPC endpoint to be updated.

        :param vpc_endpoint_id: The vpc_endpoint_id of this UpdateVpcEndpointRequest.
        :type vpc_endpoint_id: str
        """
        if vpc_endpoint_id is None:
            raise ValueError("Invalid value for `vpc_endpoint_id`, must not be `None`")
        if vpc_endpoint_id is not None and len(vpc_endpoint_id) > 256:
            raise ValueError("Invalid value for `vpc_endpoint_id`, length must be less than or equal to `256`")
        if vpc_endpoint_id is not None and len(vpc_endpoint_id) < 5:
            raise ValueError("Invalid value for `vpc_endpoint_id`, length must be greater than or equal to `5`")
        if vpc_endpoint_id is not None and not re.search(r'^aos-[a-zA-Z0-9]*$', vpc_endpoint_id):
            raise ValueError("Invalid value for `vpc_endpoint_id`, must be a follow pattern or equal to `/^aos-[a-zA-Z0-9]*$/`")

        self._vpc_endpoint_id = vpc_endpoint_id

    @property
    def vpc_options(self):
        """Gets the vpc_options of this UpdateVpcEndpointRequest.


        :return: The vpc_options of this UpdateVpcEndpointRequest.
        :rtype: CreateElasticsearchDomainRequestVPCOptions
        """
        return self._vpc_options

    @vpc_options.setter
    def vpc_options(self, vpc_options):
        """Sets the vpc_options of this UpdateVpcEndpointRequest.


        :param vpc_options: The vpc_options of this UpdateVpcEndpointRequest.
        :type vpc_options: CreateElasticsearchDomainRequestVPCOptions
        """
        if vpc_options is None:
            raise ValueError("Invalid value for `vpc_options`, must not be `None`")

        self._vpc_options = vpc_options
