# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server import util


class AddTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, tag_list: List[Tag]=None):
        """AddTagsRequest - a model defined in OpenAPI

        :param arn: The arn of this AddTagsRequest.
        :param tag_list: The tag_list of this AddTagsRequest.
        """
        self.openapi_types = {
            'arn': str,
            'tag_list': List[Tag]
        }

        self.attribute_map = {
            'arn': 'ARN',
            'tag_list': 'TagList'
        }

        self._arn = arn
        self._tag_list = tag_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddTags_request of this AddTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this AddTagsRequest.

        The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.

        :return: The arn of this AddTagsRequest.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this AddTagsRequest.

        The Amazon Resource Name (ARN) of the Elasticsearch domain. See <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html\" target=\"_blank\">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.

        :param arn: The arn of this AddTagsRequest.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def tag_list(self):
        """Gets the tag_list of this AddTagsRequest.

        A list of <code>Tag</code> 

        :return: The tag_list of this AddTagsRequest.
        :rtype: List[Tag]
        """
        return self._tag_list

    @tag_list.setter
    def tag_list(self, tag_list):
        """Sets the tag_list of this AddTagsRequest.

        A list of <code>Tag</code> 

        :param tag_list: The tag_list of this AddTagsRequest.
        :type tag_list: List[Tag]
        """
        if tag_list is None:
            raise ValueError("Invalid value for `tag_list`, must not be `None`")

        self._tag_list = tag_list
