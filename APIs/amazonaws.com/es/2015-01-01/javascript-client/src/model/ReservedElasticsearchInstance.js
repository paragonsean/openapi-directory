/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ESPartitionInstanceType from './ESPartitionInstanceType';
import ReservedElasticsearchInstancePaymentOption from './ReservedElasticsearchInstancePaymentOption';

/**
 * The ReservedElasticsearchInstance model module.
 * @module model/ReservedElasticsearchInstance
 * @version 2015-01-01
 */
class ReservedElasticsearchInstance {
    /**
     * Constructs a new <code>ReservedElasticsearchInstance</code>.
     * Details of a reserved Elasticsearch instance.
     * @alias module:model/ReservedElasticsearchInstance
     */
    constructor() { 
        
        ReservedElasticsearchInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservedElasticsearchInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservedElasticsearchInstance} obj Optional instance to populate.
     * @return {module:model/ReservedElasticsearchInstance} The populated <code>ReservedElasticsearchInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservedElasticsearchInstance();

            if (data.hasOwnProperty('ReservationName')) {
                obj['ReservationName'] = ApiClient.convertToType(data['ReservationName'], 'String');
            }
            if (data.hasOwnProperty('ReservedElasticsearchInstanceId')) {
                obj['ReservedElasticsearchInstanceId'] = ApiClient.convertToType(data['ReservedElasticsearchInstanceId'], 'String');
            }
            if (data.hasOwnProperty('ReservedElasticsearchInstanceOfferingId')) {
                obj['ReservedElasticsearchInstanceOfferingId'] = ApiClient.convertToType(data['ReservedElasticsearchInstanceOfferingId'], 'String');
            }
            if (data.hasOwnProperty('ElasticsearchInstanceType')) {
                obj['ElasticsearchInstanceType'] = ApiClient.convertToType(data['ElasticsearchInstanceType'], ESPartitionInstanceType);
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('FixedPrice')) {
                obj['FixedPrice'] = ApiClient.convertToType(data['FixedPrice'], 'Number');
            }
            if (data.hasOwnProperty('UsagePrice')) {
                obj['UsagePrice'] = ApiClient.convertToType(data['UsagePrice'], 'Number');
            }
            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('ElasticsearchInstanceCount')) {
                obj['ElasticsearchInstanceCount'] = ApiClient.convertToType(data['ElasticsearchInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('PaymentOption')) {
                obj['PaymentOption'] = ApiClient.convertToType(data['PaymentOption'], ReservedElasticsearchInstancePaymentOption);
            }
            if (data.hasOwnProperty('RecurringCharges')) {
                obj['RecurringCharges'] = ApiClient.convertToType(data['RecurringCharges'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservedElasticsearchInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservedElasticsearchInstance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ReservationName`
        if (data['ReservationName']) { // data not null
          String.validateJSON(data['ReservationName']);
        }
        // validate the optional field `ReservedElasticsearchInstanceId`
        if (data['ReservedElasticsearchInstanceId']) { // data not null
          String.validateJSON(data['ReservedElasticsearchInstanceId']);
        }
        // validate the optional field `ReservedElasticsearchInstanceOfferingId`
        if (data['ReservedElasticsearchInstanceOfferingId']) { // data not null
          String.validateJSON(data['ReservedElasticsearchInstanceOfferingId']);
        }
        // validate the optional field `ElasticsearchInstanceType`
        if (data['ElasticsearchInstanceType']) { // data not null
          ESPartitionInstanceType.validateJSON(data['ElasticsearchInstanceType']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `FixedPrice`
        if (data['FixedPrice']) { // data not null
          Number.validateJSON(data['FixedPrice']);
        }
        // validate the optional field `UsagePrice`
        if (data['UsagePrice']) { // data not null
          Number.validateJSON(data['UsagePrice']);
        }
        // validate the optional field `CurrencyCode`
        if (data['CurrencyCode']) { // data not null
          String.validateJSON(data['CurrencyCode']);
        }
        // validate the optional field `ElasticsearchInstanceCount`
        if (data['ElasticsearchInstanceCount']) { // data not null
          Number.validateJSON(data['ElasticsearchInstanceCount']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          String.validateJSON(data['State']);
        }
        // validate the optional field `PaymentOption`
        if (data['PaymentOption']) { // data not null
          ReservedElasticsearchInstancePaymentOption.validateJSON(data['PaymentOption']);
        }
        // validate the optional field `RecurringCharges`
        if (data['RecurringCharges']) { // data not null
          Array.validateJSON(data['RecurringCharges']);
        }

        return true;
    }


}



/**
 * @member {String} ReservationName
 */
ReservedElasticsearchInstance.prototype['ReservationName'] = undefined;

/**
 * @member {String} ReservedElasticsearchInstanceId
 */
ReservedElasticsearchInstance.prototype['ReservedElasticsearchInstanceId'] = undefined;

/**
 * @member {String} ReservedElasticsearchInstanceOfferingId
 */
ReservedElasticsearchInstance.prototype['ReservedElasticsearchInstanceOfferingId'] = undefined;

/**
 * @member {module:model/ESPartitionInstanceType} ElasticsearchInstanceType
 */
ReservedElasticsearchInstance.prototype['ElasticsearchInstanceType'] = undefined;

/**
 * @member {Date} StartTime
 */
ReservedElasticsearchInstance.prototype['StartTime'] = undefined;

/**
 * @member {Number} Duration
 */
ReservedElasticsearchInstance.prototype['Duration'] = undefined;

/**
 * @member {Number} FixedPrice
 */
ReservedElasticsearchInstance.prototype['FixedPrice'] = undefined;

/**
 * @member {Number} UsagePrice
 */
ReservedElasticsearchInstance.prototype['UsagePrice'] = undefined;

/**
 * @member {String} CurrencyCode
 */
ReservedElasticsearchInstance.prototype['CurrencyCode'] = undefined;

/**
 * @member {Number} ElasticsearchInstanceCount
 */
ReservedElasticsearchInstance.prototype['ElasticsearchInstanceCount'] = undefined;

/**
 * @member {String} State
 */
ReservedElasticsearchInstance.prototype['State'] = undefined;

/**
 * @member {module:model/ReservedElasticsearchInstancePaymentOption} PaymentOption
 */
ReservedElasticsearchInstance.prototype['PaymentOption'] = undefined;

/**
 * @member {Array} RecurringCharges
 */
ReservedElasticsearchInstance.prototype['RecurringCharges'] = undefined;






export default ReservedElasticsearchInstance;

