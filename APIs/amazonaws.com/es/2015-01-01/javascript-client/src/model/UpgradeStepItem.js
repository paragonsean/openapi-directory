/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpgradeStatus from './UpgradeStatus';
import UpgradeStep from './UpgradeStep';

/**
 * The UpgradeStepItem model module.
 * @module model/UpgradeStepItem
 * @version 2015-01-01
 */
class UpgradeStepItem {
    /**
     * Constructs a new <code>UpgradeStepItem</code>.
     * Represents a single step of the Upgrade or Upgrade Eligibility Check workflow.
     * @alias module:model/UpgradeStepItem
     */
    constructor() { 
        
        UpgradeStepItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeStepItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeStepItem} obj Optional instance to populate.
     * @return {module:model/UpgradeStepItem} The populated <code>UpgradeStepItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeStepItem();

            if (data.hasOwnProperty('UpgradeStep')) {
                obj['UpgradeStep'] = ApiClient.convertToType(data['UpgradeStep'], UpgradeStep);
            }
            if (data.hasOwnProperty('UpgradeStepStatus')) {
                obj['UpgradeStepStatus'] = ApiClient.convertToType(data['UpgradeStepStatus'], UpgradeStatus);
            }
            if (data.hasOwnProperty('Issues')) {
                obj['Issues'] = ApiClient.convertToType(data['Issues'], Array);
            }
            if (data.hasOwnProperty('ProgressPercent')) {
                obj['ProgressPercent'] = ApiClient.convertToType(data['ProgressPercent'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeStepItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeStepItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `UpgradeStep`
        if (data['UpgradeStep']) { // data not null
          UpgradeStep.validateJSON(data['UpgradeStep']);
        }
        // validate the optional field `UpgradeStepStatus`
        if (data['UpgradeStepStatus']) { // data not null
          UpgradeStatus.validateJSON(data['UpgradeStepStatus']);
        }
        // validate the optional field `Issues`
        if (data['Issues']) { // data not null
          Array.validateJSON(data['Issues']);
        }
        // validate the optional field `ProgressPercent`
        if (data['ProgressPercent']) { // data not null
          Number.validateJSON(data['ProgressPercent']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpgradeStep} UpgradeStep
 */
UpgradeStepItem.prototype['UpgradeStep'] = undefined;

/**
 * @member {module:model/UpgradeStatus} UpgradeStepStatus
 */
UpgradeStepItem.prototype['UpgradeStepStatus'] = undefined;

/**
 * @member {Array} Issues
 */
UpgradeStepItem.prototype['Issues'] = undefined;

/**
 * @member {Number} ProgressPercent
 */
UpgradeStepItem.prototype['ProgressPercent'] = undefined;






export default UpgradeStepItem;

