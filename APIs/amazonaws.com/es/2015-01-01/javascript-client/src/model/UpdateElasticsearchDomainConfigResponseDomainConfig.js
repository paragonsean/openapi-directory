/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ElasticsearchDomainConfig from './ElasticsearchDomainConfig';
import ElasticsearchDomainConfigAccessPolicies from './ElasticsearchDomainConfigAccessPolicies';
import ElasticsearchDomainConfigAdvancedOptions from './ElasticsearchDomainConfigAdvancedOptions';
import ElasticsearchDomainConfigAdvancedSecurityOptions from './ElasticsearchDomainConfigAdvancedSecurityOptions';
import ElasticsearchDomainConfigAutoTuneOptions from './ElasticsearchDomainConfigAutoTuneOptions';
import ElasticsearchDomainConfigCognitoOptions from './ElasticsearchDomainConfigCognitoOptions';
import ElasticsearchDomainConfigDomainEndpointOptions from './ElasticsearchDomainConfigDomainEndpointOptions';
import ElasticsearchDomainConfigEBSOptions from './ElasticsearchDomainConfigEBSOptions';
import ElasticsearchDomainConfigElasticsearchClusterConfig from './ElasticsearchDomainConfigElasticsearchClusterConfig';
import ElasticsearchDomainConfigElasticsearchVersion from './ElasticsearchDomainConfigElasticsearchVersion';
import ElasticsearchDomainConfigEncryptionAtRestOptions from './ElasticsearchDomainConfigEncryptionAtRestOptions';
import ElasticsearchDomainConfigLogPublishingOptions from './ElasticsearchDomainConfigLogPublishingOptions';
import ElasticsearchDomainConfigNodeToNodeEncryptionOptions from './ElasticsearchDomainConfigNodeToNodeEncryptionOptions';
import ElasticsearchDomainConfigSnapshotOptions from './ElasticsearchDomainConfigSnapshotOptions';
import ElasticsearchDomainConfigVPCOptions from './ElasticsearchDomainConfigVPCOptions';
import ElasticsearchDomainStatusChangeProgressDetails from './ElasticsearchDomainStatusChangeProgressDetails';

/**
 * The UpdateElasticsearchDomainConfigResponseDomainConfig model module.
 * @module model/UpdateElasticsearchDomainConfigResponseDomainConfig
 * @version 2015-01-01
 */
class UpdateElasticsearchDomainConfigResponseDomainConfig {
    /**
     * Constructs a new <code>UpdateElasticsearchDomainConfigResponseDomainConfig</code>.
     * @alias module:model/UpdateElasticsearchDomainConfigResponseDomainConfig
     * @implements module:model/ElasticsearchDomainConfig
     */
    constructor() { 
        ElasticsearchDomainConfig.initialize(this);
        UpdateElasticsearchDomainConfigResponseDomainConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateElasticsearchDomainConfigResponseDomainConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateElasticsearchDomainConfigResponseDomainConfig} obj Optional instance to populate.
     * @return {module:model/UpdateElasticsearchDomainConfigResponseDomainConfig} The populated <code>UpdateElasticsearchDomainConfigResponseDomainConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateElasticsearchDomainConfigResponseDomainConfig();
            ElasticsearchDomainConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('ElasticsearchVersion')) {
                obj['ElasticsearchVersion'] = ElasticsearchDomainConfigElasticsearchVersion.constructFromObject(data['ElasticsearchVersion']);
            }
            if (data.hasOwnProperty('ElasticsearchClusterConfig')) {
                obj['ElasticsearchClusterConfig'] = ElasticsearchDomainConfigElasticsearchClusterConfig.constructFromObject(data['ElasticsearchClusterConfig']);
            }
            if (data.hasOwnProperty('EBSOptions')) {
                obj['EBSOptions'] = ElasticsearchDomainConfigEBSOptions.constructFromObject(data['EBSOptions']);
            }
            if (data.hasOwnProperty('AccessPolicies')) {
                obj['AccessPolicies'] = ElasticsearchDomainConfigAccessPolicies.constructFromObject(data['AccessPolicies']);
            }
            if (data.hasOwnProperty('SnapshotOptions')) {
                obj['SnapshotOptions'] = ElasticsearchDomainConfigSnapshotOptions.constructFromObject(data['SnapshotOptions']);
            }
            if (data.hasOwnProperty('VPCOptions')) {
                obj['VPCOptions'] = ElasticsearchDomainConfigVPCOptions.constructFromObject(data['VPCOptions']);
            }
            if (data.hasOwnProperty('CognitoOptions')) {
                obj['CognitoOptions'] = ElasticsearchDomainConfigCognitoOptions.constructFromObject(data['CognitoOptions']);
            }
            if (data.hasOwnProperty('EncryptionAtRestOptions')) {
                obj['EncryptionAtRestOptions'] = ElasticsearchDomainConfigEncryptionAtRestOptions.constructFromObject(data['EncryptionAtRestOptions']);
            }
            if (data.hasOwnProperty('NodeToNodeEncryptionOptions')) {
                obj['NodeToNodeEncryptionOptions'] = ElasticsearchDomainConfigNodeToNodeEncryptionOptions.constructFromObject(data['NodeToNodeEncryptionOptions']);
            }
            if (data.hasOwnProperty('AdvancedOptions')) {
                obj['AdvancedOptions'] = ElasticsearchDomainConfigAdvancedOptions.constructFromObject(data['AdvancedOptions']);
            }
            if (data.hasOwnProperty('LogPublishingOptions')) {
                obj['LogPublishingOptions'] = ElasticsearchDomainConfigLogPublishingOptions.constructFromObject(data['LogPublishingOptions']);
            }
            if (data.hasOwnProperty('DomainEndpointOptions')) {
                obj['DomainEndpointOptions'] = ElasticsearchDomainConfigDomainEndpointOptions.constructFromObject(data['DomainEndpointOptions']);
            }
            if (data.hasOwnProperty('AdvancedSecurityOptions')) {
                obj['AdvancedSecurityOptions'] = ElasticsearchDomainConfigAdvancedSecurityOptions.constructFromObject(data['AdvancedSecurityOptions']);
            }
            if (data.hasOwnProperty('AutoTuneOptions')) {
                obj['AutoTuneOptions'] = ElasticsearchDomainConfigAutoTuneOptions.constructFromObject(data['AutoTuneOptions']);
            }
            if (data.hasOwnProperty('ChangeProgressDetails')) {
                obj['ChangeProgressDetails'] = ElasticsearchDomainStatusChangeProgressDetails.constructFromObject(data['ChangeProgressDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateElasticsearchDomainConfigResponseDomainConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateElasticsearchDomainConfigResponseDomainConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ElasticsearchVersion`
        if (data['ElasticsearchVersion']) { // data not null
          ElasticsearchDomainConfigElasticsearchVersion.validateJSON(data['ElasticsearchVersion']);
        }
        // validate the optional field `ElasticsearchClusterConfig`
        if (data['ElasticsearchClusterConfig']) { // data not null
          ElasticsearchDomainConfigElasticsearchClusterConfig.validateJSON(data['ElasticsearchClusterConfig']);
        }
        // validate the optional field `EBSOptions`
        if (data['EBSOptions']) { // data not null
          ElasticsearchDomainConfigEBSOptions.validateJSON(data['EBSOptions']);
        }
        // validate the optional field `AccessPolicies`
        if (data['AccessPolicies']) { // data not null
          ElasticsearchDomainConfigAccessPolicies.validateJSON(data['AccessPolicies']);
        }
        // validate the optional field `SnapshotOptions`
        if (data['SnapshotOptions']) { // data not null
          ElasticsearchDomainConfigSnapshotOptions.validateJSON(data['SnapshotOptions']);
        }
        // validate the optional field `VPCOptions`
        if (data['VPCOptions']) { // data not null
          ElasticsearchDomainConfigVPCOptions.validateJSON(data['VPCOptions']);
        }
        // validate the optional field `CognitoOptions`
        if (data['CognitoOptions']) { // data not null
          ElasticsearchDomainConfigCognitoOptions.validateJSON(data['CognitoOptions']);
        }
        // validate the optional field `EncryptionAtRestOptions`
        if (data['EncryptionAtRestOptions']) { // data not null
          ElasticsearchDomainConfigEncryptionAtRestOptions.validateJSON(data['EncryptionAtRestOptions']);
        }
        // validate the optional field `NodeToNodeEncryptionOptions`
        if (data['NodeToNodeEncryptionOptions']) { // data not null
          ElasticsearchDomainConfigNodeToNodeEncryptionOptions.validateJSON(data['NodeToNodeEncryptionOptions']);
        }
        // validate the optional field `AdvancedOptions`
        if (data['AdvancedOptions']) { // data not null
          ElasticsearchDomainConfigAdvancedOptions.validateJSON(data['AdvancedOptions']);
        }
        // validate the optional field `LogPublishingOptions`
        if (data['LogPublishingOptions']) { // data not null
          ElasticsearchDomainConfigLogPublishingOptions.validateJSON(data['LogPublishingOptions']);
        }
        // validate the optional field `DomainEndpointOptions`
        if (data['DomainEndpointOptions']) { // data not null
          ElasticsearchDomainConfigDomainEndpointOptions.validateJSON(data['DomainEndpointOptions']);
        }
        // validate the optional field `AdvancedSecurityOptions`
        if (data['AdvancedSecurityOptions']) { // data not null
          ElasticsearchDomainConfigAdvancedSecurityOptions.validateJSON(data['AdvancedSecurityOptions']);
        }
        // validate the optional field `AutoTuneOptions`
        if (data['AutoTuneOptions']) { // data not null
          ElasticsearchDomainConfigAutoTuneOptions.validateJSON(data['AutoTuneOptions']);
        }
        // validate the optional field `ChangeProgressDetails`
        if (data['ChangeProgressDetails']) { // data not null
          ElasticsearchDomainStatusChangeProgressDetails.validateJSON(data['ChangeProgressDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/ElasticsearchDomainConfigElasticsearchVersion} ElasticsearchVersion
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['ElasticsearchVersion'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigElasticsearchClusterConfig} ElasticsearchClusterConfig
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['ElasticsearchClusterConfig'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigEBSOptions} EBSOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['EBSOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigAccessPolicies} AccessPolicies
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['AccessPolicies'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigSnapshotOptions} SnapshotOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['SnapshotOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigVPCOptions} VPCOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['VPCOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigCognitoOptions} CognitoOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['CognitoOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigEncryptionAtRestOptions} EncryptionAtRestOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['EncryptionAtRestOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['NodeToNodeEncryptionOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigAdvancedOptions} AdvancedOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['AdvancedOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigLogPublishingOptions} LogPublishingOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['LogPublishingOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigDomainEndpointOptions} DomainEndpointOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['DomainEndpointOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigAdvancedSecurityOptions} AdvancedSecurityOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['AdvancedSecurityOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainConfigAutoTuneOptions} AutoTuneOptions
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['AutoTuneOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDomainStatusChangeProgressDetails} ChangeProgressDetails
 */
UpdateElasticsearchDomainConfigResponseDomainConfig.prototype['ChangeProgressDetails'] = undefined;


// Implement ElasticsearchDomainConfig interface:
/**
 * @member {module:model/ElasticsearchDomainConfigElasticsearchVersion} ElasticsearchVersion
 */
ElasticsearchDomainConfig.prototype['ElasticsearchVersion'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigElasticsearchClusterConfig} ElasticsearchClusterConfig
 */
ElasticsearchDomainConfig.prototype['ElasticsearchClusterConfig'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigEBSOptions} EBSOptions
 */
ElasticsearchDomainConfig.prototype['EBSOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigAccessPolicies} AccessPolicies
 */
ElasticsearchDomainConfig.prototype['AccessPolicies'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigSnapshotOptions} SnapshotOptions
 */
ElasticsearchDomainConfig.prototype['SnapshotOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigVPCOptions} VPCOptions
 */
ElasticsearchDomainConfig.prototype['VPCOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigCognitoOptions} CognitoOptions
 */
ElasticsearchDomainConfig.prototype['CognitoOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigEncryptionAtRestOptions} EncryptionAtRestOptions
 */
ElasticsearchDomainConfig.prototype['EncryptionAtRestOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
ElasticsearchDomainConfig.prototype['NodeToNodeEncryptionOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigAdvancedOptions} AdvancedOptions
 */
ElasticsearchDomainConfig.prototype['AdvancedOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigLogPublishingOptions} LogPublishingOptions
 */
ElasticsearchDomainConfig.prototype['LogPublishingOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigDomainEndpointOptions} DomainEndpointOptions
 */
ElasticsearchDomainConfig.prototype['DomainEndpointOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigAdvancedSecurityOptions} AdvancedSecurityOptions
 */
ElasticsearchDomainConfig.prototype['AdvancedSecurityOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainConfigAutoTuneOptions} AutoTuneOptions
 */
ElasticsearchDomainConfig.prototype['AutoTuneOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDomainStatusChangeProgressDetails} ChangeProgressDetails
 */
ElasticsearchDomainConfig.prototype['ChangeProgressDetails'] = undefined;




export default UpdateElasticsearchDomainConfigResponseDomainConfig;

