/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListPackagesForDomainResponse model module.
 * @module model/ListPackagesForDomainResponse
 * @version 2015-01-01
 */
class ListPackagesForDomainResponse {
    /**
     * Constructs a new <code>ListPackagesForDomainResponse</code>.
     *  Container for response parameters to &lt;code&gt; &lt;a&gt;ListPackagesForDomain&lt;/a&gt; &lt;/code&gt; operation. 
     * @alias module:model/ListPackagesForDomainResponse
     */
    constructor() { 
        
        ListPackagesForDomainResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListPackagesForDomainResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPackagesForDomainResponse} obj Optional instance to populate.
     * @return {module:model/ListPackagesForDomainResponse} The populated <code>ListPackagesForDomainResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPackagesForDomainResponse();

            if (data.hasOwnProperty('DomainPackageDetailsList')) {
                obj['DomainPackageDetailsList'] = ApiClient.convertToType(data['DomainPackageDetailsList'], Array);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPackagesForDomainResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPackagesForDomainResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DomainPackageDetailsList`
        if (data['DomainPackageDetailsList']) { // data not null
          Array.validateJSON(data['DomainPackageDetailsList']);
        }
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }

        return true;
    }


}



/**
 * @member {Array} DomainPackageDetailsList
 */
ListPackagesForDomainResponse.prototype['DomainPackageDetailsList'] = undefined;

/**
 * @member {String} NextToken
 */
ListPackagesForDomainResponse.prototype['NextToken'] = undefined;






export default ListPackagesForDomainResponse;

