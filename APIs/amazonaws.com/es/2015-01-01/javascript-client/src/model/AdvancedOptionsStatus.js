/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdvancedOptionsStatusStatus from './AdvancedOptionsStatusStatus';

/**
 * The AdvancedOptionsStatus model module.
 * @module model/AdvancedOptionsStatus
 * @version 2015-01-01
 */
class AdvancedOptionsStatus {
    /**
     * Constructs a new <code>AdvancedOptionsStatus</code>.
     * &lt;p&gt; Status of the advanced options for the specified Elasticsearch domain. Currently, the following advanced options are available:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Option to allow references to indices in an HTTP request body. Must be &lt;code&gt;false&lt;/code&gt; when configuring access to individual sub-resources. By default, the value is &lt;code&gt;true&lt;/code&gt;. See &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Configuration Advanced Options&lt;/a&gt; for more information.&lt;/li&gt; &lt;li&gt;Option to specify the percentage of heap space that is allocated to field data. By default, this setting is unbounded.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\&quot;&gt;Configuring Advanced Options&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/AdvancedOptionsStatus
     * @param options {Object} 
     * @param status {module:model/AdvancedOptionsStatusStatus} 
     */
    constructor(options, status) { 
        
        AdvancedOptionsStatus.initialize(this, options, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, options, status) { 
        obj['Options'] = options;
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>AdvancedOptionsStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdvancedOptionsStatus} obj Optional instance to populate.
     * @return {module:model/AdvancedOptionsStatus} The populated <code>AdvancedOptionsStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdvancedOptionsStatus();

            if (data.hasOwnProperty('Options')) {
                obj['Options'] = ApiClient.convertToType(data['Options'], Object);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = AdvancedOptionsStatusStatus.constructFromObject(data['Status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdvancedOptionsStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdvancedOptionsStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdvancedOptionsStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Options`
        if (data['Options']) { // data not null
          Object.validateJSON(data['Options']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          AdvancedOptionsStatusStatus.validateJSON(data['Status']);
        }

        return true;
    }


}

AdvancedOptionsStatus.RequiredProperties = ["Options", "Status"];

/**
 * @member {Object} Options
 */
AdvancedOptionsStatus.prototype['Options'] = undefined;

/**
 * @member {module:model/AdvancedOptionsStatusStatus} Status
 */
AdvancedOptionsStatus.prototype['Status'] = undefined;






export default AdvancedOptionsStatus;

