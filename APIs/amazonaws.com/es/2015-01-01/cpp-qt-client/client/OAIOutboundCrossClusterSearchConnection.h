/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutboundCrossClusterSearchConnection.h
 *
 * Specifies details of an outbound connection.
 */

#ifndef OAIOutboundCrossClusterSearchConnection_H
#define OAIOutboundCrossClusterSearchConnection_H

#include <QJsonObject>

#include "OAICreateOutboundCrossClusterSearchConnectionResponse_DestinationDomainInfo.h"
#include "OAICreateOutboundCrossClusterSearchConnectionResponse_SourceDomainInfo.h"
#include "OAIOutboundCrossClusterSearchConnection_ConnectionStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateOutboundCrossClusterSearchConnectionResponse_SourceDomainInfo;
class OAICreateOutboundCrossClusterSearchConnectionResponse_DestinationDomainInfo;
class OAIOutboundCrossClusterSearchConnection_ConnectionStatus;

class OAIOutboundCrossClusterSearchConnection : public OAIObject {
public:
    OAIOutboundCrossClusterSearchConnection();
    OAIOutboundCrossClusterSearchConnection(QString json);
    ~OAIOutboundCrossClusterSearchConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateOutboundCrossClusterSearchConnectionResponse_SourceDomainInfo getSourceDomainInfo() const;
    void setSourceDomainInfo(const OAICreateOutboundCrossClusterSearchConnectionResponse_SourceDomainInfo &source_domain_info);
    bool is_source_domain_info_Set() const;
    bool is_source_domain_info_Valid() const;

    OAICreateOutboundCrossClusterSearchConnectionResponse_DestinationDomainInfo getDestinationDomainInfo() const;
    void setDestinationDomainInfo(const OAICreateOutboundCrossClusterSearchConnectionResponse_DestinationDomainInfo &destination_domain_info);
    bool is_destination_domain_info_Set() const;
    bool is_destination_domain_info_Valid() const;

    QString getCrossClusterSearchConnectionId() const;
    void setCrossClusterSearchConnectionId(const QString &cross_cluster_search_connection_id);
    bool is_cross_cluster_search_connection_id_Set() const;
    bool is_cross_cluster_search_connection_id_Valid() const;

    QString getConnectionAlias() const;
    void setConnectionAlias(const QString &connection_alias);
    bool is_connection_alias_Set() const;
    bool is_connection_alias_Valid() const;

    OAIOutboundCrossClusterSearchConnection_ConnectionStatus getConnectionStatus() const;
    void setConnectionStatus(const OAIOutboundCrossClusterSearchConnection_ConnectionStatus &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateOutboundCrossClusterSearchConnectionResponse_SourceDomainInfo m_source_domain_info;
    bool m_source_domain_info_isSet;
    bool m_source_domain_info_isValid;

    OAICreateOutboundCrossClusterSearchConnectionResponse_DestinationDomainInfo m_destination_domain_info;
    bool m_destination_domain_info_isSet;
    bool m_destination_domain_info_isValid;

    QString m_cross_cluster_search_connection_id;
    bool m_cross_cluster_search_connection_id_isSet;
    bool m_cross_cluster_search_connection_id_isValid;

    QString m_connection_alias;
    bool m_connection_alias_isSet;
    bool m_connection_alias_isValid;

    OAIOutboundCrossClusterSearchConnection_ConnectionStatus m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutboundCrossClusterSearchConnection)

#endif // OAIOutboundCrossClusterSearchConnection_H
