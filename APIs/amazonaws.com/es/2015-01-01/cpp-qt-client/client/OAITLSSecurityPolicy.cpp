/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITLSSecurityPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITLSSecurityPolicy::OAITLSSecurityPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITLSSecurityPolicy::OAITLSSecurityPolicy() {
    this->initializeModel();
}

OAITLSSecurityPolicy::~OAITLSSecurityPolicy() {}

void OAITLSSecurityPolicy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITLSSecurityPolicy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITLSSecurityPolicy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Policy-Min-TLS-1-0-2019-07", Qt::CaseInsensitive) == 0) {
        m_value = eOAITLSSecurityPolicy::_0_2019_07;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Policy-Min-TLS-1-2-2019-07", Qt::CaseInsensitive) == 0) {
        m_value = eOAITLSSecurityPolicy::_2_2019_07;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITLSSecurityPolicy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITLSSecurityPolicy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITLSSecurityPolicy::_0_2019_07:
            val = "Policy-Min-TLS-1-0-2019-07";
            break;
        case eOAITLSSecurityPolicy::_2_2019_07:
            val = "Policy-Min-TLS-1-2-2019-07";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITLSSecurityPolicy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITLSSecurityPolicy::eOAITLSSecurityPolicy OAITLSSecurityPolicy::getValue() const {
    return m_value;
}

void OAITLSSecurityPolicy::setValue(const OAITLSSecurityPolicy::eOAITLSSecurityPolicy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITLSSecurityPolicy::isSet() const {
    
    return m_value_isSet;
}

bool OAITLSSecurityPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
