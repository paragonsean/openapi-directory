/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogPublishingOptionsStatus_Status.h
 *
 * 
 */

#ifndef OAILogPublishingOptionsStatus_Status_H
#define OAILogPublishingOptionsStatus_Status_H

#include <QJsonObject>

#include "OAIOptionState.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogPublishingOptionsStatus_Status : public OAIObject {
public:
    OAILogPublishingOptionsStatus_Status();
    OAILogPublishingOptionsStatus_Status(QString json);
    ~OAILogPublishingOptionsStatus_Status() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getUpdateDate() const;
    void setUpdateDate(const QDateTime &update_date);
    bool is_update_date_Set() const;
    bool is_update_date_Valid() const;

    qint32 getUpdateVersion() const;
    void setUpdateVersion(const qint32 &update_version);
    bool is_update_version_Set() const;
    bool is_update_version_Valid() const;

    OAIOptionState getState() const;
    void setState(const OAIOptionState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    bool getPendingDeletion() const;
    void setPendingDeletion(const bool &pending_deletion);
    bool is_pending_deletion_Set() const;
    bool is_pending_deletion_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_update_date;
    bool m_update_date_isSet;
    bool m_update_date_isValid;

    qint32 m_update_version;
    bool m_update_version_isSet;
    bool m_update_version_isValid;

    OAIOptionState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    bool m_pending_deletion;
    bool m_pending_deletion_isSet;
    bool m_pending_deletion_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogPublishingOptionsStatus_Status)

#endif // OAILogPublishingOptionsStatus_Status_H
