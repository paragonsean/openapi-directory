/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateElasticsearchDomain_request_EBSOptions.h
 *
 * Options to enable, disable, and specify the properties of EBS storage volumes. For more information, see &lt;a href&#x3D;\&quot;http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-ebs\&quot; target&#x3D;\&quot;_blank\&quot;&gt; Configuring EBS-based Storage&lt;/a&gt;.
 */

#ifndef OAICreateElasticsearchDomain_request_EBSOptions_H
#define OAICreateElasticsearchDomain_request_EBSOptions_H

#include <QJsonObject>

#include "OAIVolumeType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateElasticsearchDomain_request_EBSOptions : public OAIObject {
public:
    OAICreateElasticsearchDomain_request_EBSOptions();
    OAICreateElasticsearchDomain_request_EBSOptions(QString json);
    ~OAICreateElasticsearchDomain_request_EBSOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getEbsEnabled() const;
    void setEbsEnabled(const bool &ebs_enabled);
    bool is_ebs_enabled_Set() const;
    bool is_ebs_enabled_Valid() const;

    OAIVolumeType getVolumeType() const;
    void setVolumeType(const OAIVolumeType &volume_type);
    bool is_volume_type_Set() const;
    bool is_volume_type_Valid() const;

    qint32 getVolumeSize() const;
    void setVolumeSize(const qint32 &volume_size);
    bool is_volume_size_Set() const;
    bool is_volume_size_Valid() const;

    qint32 getIops() const;
    void setIops(const qint32 &iops);
    bool is_iops_Set() const;
    bool is_iops_Valid() const;

    qint32 getThroughput() const;
    void setThroughput(const qint32 &throughput);
    bool is_throughput_Set() const;
    bool is_throughput_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ebs_enabled;
    bool m_ebs_enabled_isSet;
    bool m_ebs_enabled_isValid;

    OAIVolumeType m_volume_type;
    bool m_volume_type_isSet;
    bool m_volume_type_isValid;

    qint32 m_volume_size;
    bool m_volume_size_isSet;
    bool m_volume_size_isValid;

    qint32 m_iops;
    bool m_iops_isSet;
    bool m_iops_isValid;

    qint32 m_throughput;
    bool m_throughput_isSet;
    bool m_throughput_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateElasticsearchDomain_request_EBSOptions)

#endif // OAICreateElasticsearchDomain_request_EBSOptions_H
