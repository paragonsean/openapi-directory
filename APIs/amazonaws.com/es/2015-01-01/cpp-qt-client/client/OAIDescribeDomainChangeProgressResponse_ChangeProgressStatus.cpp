/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus() {
    this->initializeModel();
}

OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::~OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus() {}

void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::initializeModel() {

    m_change_id_isSet = false;
    m_change_id_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_pending_properties_isSet = false;
    m_pending_properties_isValid = false;

    m_completed_properties_isSet = false;
    m_completed_properties_isValid = false;

    m_total_number_of_stages_isSet = false;
    m_total_number_of_stages_isValid = false;

    m_change_progress_stages_isSet = false;
    m_change_progress_stages_isValid = false;
}

void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::fromJsonObject(QJsonObject json) {

    m_change_id_isValid = ::OpenAPI::fromJsonValue(m_change_id, json[QString("ChangeId")]);
    m_change_id_isSet = !json[QString("ChangeId")].isNull() && m_change_id_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_pending_properties_isValid = ::OpenAPI::fromJsonValue(m_pending_properties, json[QString("PendingProperties")]);
    m_pending_properties_isSet = !json[QString("PendingProperties")].isNull() && m_pending_properties_isValid;

    m_completed_properties_isValid = ::OpenAPI::fromJsonValue(m_completed_properties, json[QString("CompletedProperties")]);
    m_completed_properties_isSet = !json[QString("CompletedProperties")].isNull() && m_completed_properties_isValid;

    m_total_number_of_stages_isValid = ::OpenAPI::fromJsonValue(m_total_number_of_stages, json[QString("TotalNumberOfStages")]);
    m_total_number_of_stages_isSet = !json[QString("TotalNumberOfStages")].isNull() && m_total_number_of_stages_isValid;

    m_change_progress_stages_isValid = ::OpenAPI::fromJsonValue(m_change_progress_stages, json[QString("ChangeProgressStages")]);
    m_change_progress_stages_isSet = !json[QString("ChangeProgressStages")].isNull() && m_change_progress_stages_isValid;
}

QString OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_change_id_isSet) {
        obj.insert(QString("ChangeId"), ::OpenAPI::toJsonValue(m_change_id));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_pending_properties.isSet()) {
        obj.insert(QString("PendingProperties"), ::OpenAPI::toJsonValue(m_pending_properties));
    }
    if (m_completed_properties.isSet()) {
        obj.insert(QString("CompletedProperties"), ::OpenAPI::toJsonValue(m_completed_properties));
    }
    if (m_total_number_of_stages_isSet) {
        obj.insert(QString("TotalNumberOfStages"), ::OpenAPI::toJsonValue(m_total_number_of_stages));
    }
    if (m_change_progress_stages.isSet()) {
        obj.insert(QString("ChangeProgressStages"), ::OpenAPI::toJsonValue(m_change_progress_stages));
    }
    return obj;
}

QString OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getChangeId() const {
    return m_change_id;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setChangeId(const QString &change_id) {
    m_change_id = change_id;
    m_change_id_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_change_id_Set() const{
    return m_change_id_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_change_id_Valid() const{
    return m_change_id_isValid;
}

QDateTime OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getStartTime() const {
    return m_start_time;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIOverallChangeStatus OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getStatus() const {
    return m_status;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setStatus(const OAIOverallChangeStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_status_Valid() const{
    return m_status_isValid;
}

QList OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getPendingProperties() const {
    return m_pending_properties;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setPendingProperties(const QList &pending_properties) {
    m_pending_properties = pending_properties;
    m_pending_properties_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_pending_properties_Set() const{
    return m_pending_properties_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_pending_properties_Valid() const{
    return m_pending_properties_isValid;
}

QList OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getCompletedProperties() const {
    return m_completed_properties;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setCompletedProperties(const QList &completed_properties) {
    m_completed_properties = completed_properties;
    m_completed_properties_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_completed_properties_Set() const{
    return m_completed_properties_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_completed_properties_Valid() const{
    return m_completed_properties_isValid;
}

qint32 OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getTotalNumberOfStages() const {
    return m_total_number_of_stages;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setTotalNumberOfStages(const qint32 &total_number_of_stages) {
    m_total_number_of_stages = total_number_of_stages;
    m_total_number_of_stages_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_total_number_of_stages_Set() const{
    return m_total_number_of_stages_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_total_number_of_stages_Valid() const{
    return m_total_number_of_stages_isValid;
}

QList OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::getChangeProgressStages() const {
    return m_change_progress_stages;
}
void OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::setChangeProgressStages(const QList &change_progress_stages) {
    m_change_progress_stages = change_progress_stages;
    m_change_progress_stages_isSet = true;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_change_progress_stages_Set() const{
    return m_change_progress_stages_isSet;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::is_change_progress_stages_Valid() const{
    return m_change_progress_stages_isValid;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_number_of_stages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_progress_stages.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
