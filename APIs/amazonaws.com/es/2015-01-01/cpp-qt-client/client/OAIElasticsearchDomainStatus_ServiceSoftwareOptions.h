/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticsearchDomainStatus_ServiceSoftwareOptions.h
 *
 * 
 */

#ifndef OAIElasticsearchDomainStatus_ServiceSoftwareOptions_H
#define OAIElasticsearchDomainStatus_ServiceSoftwareOptions_H

#include <QJsonObject>

#include "OAIDeploymentStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElasticsearchDomainStatus_ServiceSoftwareOptions : public OAIObject {
public:
    OAIElasticsearchDomainStatus_ServiceSoftwareOptions();
    OAIElasticsearchDomainStatus_ServiceSoftwareOptions(QString json);
    ~OAIElasticsearchDomainStatus_ServiceSoftwareOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentVersion() const;
    void setCurrentVersion(const QString &current_version);
    bool is_current_version_Set() const;
    bool is_current_version_Valid() const;

    QString getNewVersion() const;
    void setNewVersion(const QString &new_version);
    bool is_new_version_Set() const;
    bool is_new_version_Valid() const;

    bool getUpdateAvailable() const;
    void setUpdateAvailable(const bool &update_available);
    bool is_update_available_Set() const;
    bool is_update_available_Valid() const;

    bool getCancellable() const;
    void setCancellable(const bool &cancellable);
    bool is_cancellable_Set() const;
    bool is_cancellable_Valid() const;

    OAIDeploymentStatus getUpdateStatus() const;
    void setUpdateStatus(const OAIDeploymentStatus &update_status);
    bool is_update_status_Set() const;
    bool is_update_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getAutomatedUpdateDate() const;
    void setAutomatedUpdateDate(const QDateTime &automated_update_date);
    bool is_automated_update_date_Set() const;
    bool is_automated_update_date_Valid() const;

    bool getOptionalDeployment() const;
    void setOptionalDeployment(const bool &optional_deployment);
    bool is_optional_deployment_Set() const;
    bool is_optional_deployment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_version;
    bool m_current_version_isSet;
    bool m_current_version_isValid;

    QString m_new_version;
    bool m_new_version_isSet;
    bool m_new_version_isValid;

    bool m_update_available;
    bool m_update_available_isSet;
    bool m_update_available_isValid;

    bool m_cancellable;
    bool m_cancellable_isSet;
    bool m_cancellable_isValid;

    OAIDeploymentStatus m_update_status;
    bool m_update_status_isSet;
    bool m_update_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_automated_update_date;
    bool m_automated_update_date_isSet;
    bool m_automated_update_date_isValid;

    bool m_optional_deployment;
    bool m_optional_deployment_isSet;
    bool m_optional_deployment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticsearchDomainStatus_ServiceSoftwareOptions)

#endif // OAIElasticsearchDomainStatus_ServiceSoftwareOptions_H
