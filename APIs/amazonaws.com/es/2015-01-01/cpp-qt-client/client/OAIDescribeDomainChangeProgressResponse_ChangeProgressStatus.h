/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus.h
 *
 * 
 */

#ifndef OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus_H
#define OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus_H

#include <QJsonObject>

#include "OAIOverallChangeStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus : public OAIObject {
public:
    OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus();
    OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus(QString json);
    ~OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChangeId() const;
    void setChangeId(const QString &change_id);
    bool is_change_id_Set() const;
    bool is_change_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAIOverallChangeStatus getStatus() const;
    void setStatus(const OAIOverallChangeStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList getPendingProperties() const;
    void setPendingProperties(const QList &pending_properties);
    bool is_pending_properties_Set() const;
    bool is_pending_properties_Valid() const;

    QList getCompletedProperties() const;
    void setCompletedProperties(const QList &completed_properties);
    bool is_completed_properties_Set() const;
    bool is_completed_properties_Valid() const;

    qint32 getTotalNumberOfStages() const;
    void setTotalNumberOfStages(const qint32 &total_number_of_stages);
    bool is_total_number_of_stages_Set() const;
    bool is_total_number_of_stages_Valid() const;

    QList getChangeProgressStages() const;
    void setChangeProgressStages(const QList &change_progress_stages);
    bool is_change_progress_stages_Set() const;
    bool is_change_progress_stages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_change_id;
    bool m_change_id_isSet;
    bool m_change_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAIOverallChangeStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList m_pending_properties;
    bool m_pending_properties_isSet;
    bool m_pending_properties_isValid;

    QList m_completed_properties;
    bool m_completed_properties_isSet;
    bool m_completed_properties_isValid;

    qint32 m_total_number_of_stages;
    bool m_total_number_of_stages_isSet;
    bool m_total_number_of_stages_isValid;

    QList m_change_progress_stages;
    bool m_change_progress_stages_isSet;
    bool m_change_progress_stages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus)

#endif // OAIDescribeDomainChangeProgressResponse_ChangeProgressStatus_H
