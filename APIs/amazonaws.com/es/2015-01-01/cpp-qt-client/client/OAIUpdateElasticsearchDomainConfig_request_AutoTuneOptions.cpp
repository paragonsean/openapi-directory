/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions() {
    this->initializeModel();
}

OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::~OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions() {}

void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::initializeModel() {

    m_desired_state_isSet = false;
    m_desired_state_isValid = false;

    m_rollback_on_disable_isSet = false;
    m_rollback_on_disable_isValid = false;

    m_maintenance_schedules_isSet = false;
    m_maintenance_schedules_isValid = false;
}

void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::fromJsonObject(QJsonObject json) {

    m_desired_state_isValid = ::OpenAPI::fromJsonValue(m_desired_state, json[QString("DesiredState")]);
    m_desired_state_isSet = !json[QString("DesiredState")].isNull() && m_desired_state_isValid;

    m_rollback_on_disable_isValid = ::OpenAPI::fromJsonValue(m_rollback_on_disable, json[QString("RollbackOnDisable")]);
    m_rollback_on_disable_isSet = !json[QString("RollbackOnDisable")].isNull() && m_rollback_on_disable_isValid;

    m_maintenance_schedules_isValid = ::OpenAPI::fromJsonValue(m_maintenance_schedules, json[QString("MaintenanceSchedules")]);
    m_maintenance_schedules_isSet = !json[QString("MaintenanceSchedules")].isNull() && m_maintenance_schedules_isValid;
}

QString OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_desired_state.isSet()) {
        obj.insert(QString("DesiredState"), ::OpenAPI::toJsonValue(m_desired_state));
    }
    if (m_rollback_on_disable.isSet()) {
        obj.insert(QString("RollbackOnDisable"), ::OpenAPI::toJsonValue(m_rollback_on_disable));
    }
    if (m_maintenance_schedules.isSet()) {
        obj.insert(QString("MaintenanceSchedules"), ::OpenAPI::toJsonValue(m_maintenance_schedules));
    }
    return obj;
}

OAIAutoTuneDesiredState OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::getDesiredState() const {
    return m_desired_state;
}
void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::setDesiredState(const OAIAutoTuneDesiredState &desired_state) {
    m_desired_state = desired_state;
    m_desired_state_isSet = true;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_desired_state_Set() const{
    return m_desired_state_isSet;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_desired_state_Valid() const{
    return m_desired_state_isValid;
}

OAIRollbackOnDisable OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::getRollbackOnDisable() const {
    return m_rollback_on_disable;
}
void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::setRollbackOnDisable(const OAIRollbackOnDisable &rollback_on_disable) {
    m_rollback_on_disable = rollback_on_disable;
    m_rollback_on_disable_isSet = true;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_rollback_on_disable_Set() const{
    return m_rollback_on_disable_isSet;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_rollback_on_disable_Valid() const{
    return m_rollback_on_disable_isValid;
}

QList OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::getMaintenanceSchedules() const {
    return m_maintenance_schedules;
}
void OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::setMaintenanceSchedules(const QList &maintenance_schedules) {
    m_maintenance_schedules = maintenance_schedules;
    m_maintenance_schedules_isSet = true;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_maintenance_schedules_Set() const{
    return m_maintenance_schedules_isSet;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::is_maintenance_schedules_Valid() const{
    return m_maintenance_schedules_isValid;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_desired_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rollback_on_disable.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance_schedules.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
