/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateElasticsearchDomainConfig_request.h
 *
 * 
 */

#ifndef OAIUpdateElasticsearchDomainConfig_request_H
#define OAIUpdateElasticsearchDomainConfig_request_H

#include <QJsonObject>

#include "OAICreateElasticsearchDomain_request_AdvancedSecurityOptions.h"
#include "OAICreateElasticsearchDomain_request_CognitoOptions.h"
#include "OAICreateElasticsearchDomain_request_DomainEndpointOptions.h"
#include "OAICreateElasticsearchDomain_request_EBSOptions.h"
#include "OAICreateElasticsearchDomain_request_ElasticsearchClusterConfig.h"
#include "OAICreateElasticsearchDomain_request_EncryptionAtRestOptions.h"
#include "OAICreateElasticsearchDomain_request_NodeToNodeEncryptionOptions.h"
#include "OAICreateElasticsearchDomain_request_SnapshotOptions.h"
#include "OAICreateElasticsearchDomain_request_VPCOptions.h"
#include "OAILogPublishingOption.h"
#include "OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateElasticsearchDomain_request_ElasticsearchClusterConfig;
class OAICreateElasticsearchDomain_request_EBSOptions;
class OAICreateElasticsearchDomain_request_SnapshotOptions;
class OAICreateElasticsearchDomain_request_VPCOptions;
class OAICreateElasticsearchDomain_request_CognitoOptions;
class OAILogPublishingOption;
class OAICreateElasticsearchDomain_request_DomainEndpointOptions;
class OAICreateElasticsearchDomain_request_AdvancedSecurityOptions;
class OAICreateElasticsearchDomain_request_NodeToNodeEncryptionOptions;
class OAICreateElasticsearchDomain_request_EncryptionAtRestOptions;
class OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions;

class OAIUpdateElasticsearchDomainConfig_request : public OAIObject {
public:
    OAIUpdateElasticsearchDomainConfig_request();
    OAIUpdateElasticsearchDomainConfig_request(QString json);
    ~OAIUpdateElasticsearchDomainConfig_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateElasticsearchDomain_request_ElasticsearchClusterConfig getElasticsearchClusterConfig() const;
    void setElasticsearchClusterConfig(const OAICreateElasticsearchDomain_request_ElasticsearchClusterConfig &elasticsearch_cluster_config);
    bool is_elasticsearch_cluster_config_Set() const;
    bool is_elasticsearch_cluster_config_Valid() const;

    OAICreateElasticsearchDomain_request_EBSOptions getEbsOptions() const;
    void setEbsOptions(const OAICreateElasticsearchDomain_request_EBSOptions &ebs_options);
    bool is_ebs_options_Set() const;
    bool is_ebs_options_Valid() const;

    OAICreateElasticsearchDomain_request_SnapshotOptions getSnapshotOptions() const;
    void setSnapshotOptions(const OAICreateElasticsearchDomain_request_SnapshotOptions &snapshot_options);
    bool is_snapshot_options_Set() const;
    bool is_snapshot_options_Valid() const;

    OAICreateElasticsearchDomain_request_VPCOptions getVpcOptions() const;
    void setVpcOptions(const OAICreateElasticsearchDomain_request_VPCOptions &vpc_options);
    bool is_vpc_options_Set() const;
    bool is_vpc_options_Valid() const;

    OAICreateElasticsearchDomain_request_CognitoOptions getCognitoOptions() const;
    void setCognitoOptions(const OAICreateElasticsearchDomain_request_CognitoOptions &cognito_options);
    bool is_cognito_options_Set() const;
    bool is_cognito_options_Valid() const;

    QMap<QString, QString> getAdvancedOptions() const;
    void setAdvancedOptions(const QMap<QString, QString> &advanced_options);
    bool is_advanced_options_Set() const;
    bool is_advanced_options_Valid() const;

    QString getAccessPolicies() const;
    void setAccessPolicies(const QString &access_policies);
    bool is_access_policies_Set() const;
    bool is_access_policies_Valid() const;

    QMap<QString, OAILogPublishingOption> getLogPublishingOptions() const;
    void setLogPublishingOptions(const QMap<QString, OAILogPublishingOption> &log_publishing_options);
    bool is_log_publishing_options_Set() const;
    bool is_log_publishing_options_Valid() const;

    OAICreateElasticsearchDomain_request_DomainEndpointOptions getDomainEndpointOptions() const;
    void setDomainEndpointOptions(const OAICreateElasticsearchDomain_request_DomainEndpointOptions &domain_endpoint_options);
    bool is_domain_endpoint_options_Set() const;
    bool is_domain_endpoint_options_Valid() const;

    OAICreateElasticsearchDomain_request_AdvancedSecurityOptions getAdvancedSecurityOptions() const;
    void setAdvancedSecurityOptions(const OAICreateElasticsearchDomain_request_AdvancedSecurityOptions &advanced_security_options);
    bool is_advanced_security_options_Set() const;
    bool is_advanced_security_options_Valid() const;

    OAICreateElasticsearchDomain_request_NodeToNodeEncryptionOptions getNodeToNodeEncryptionOptions() const;
    void setNodeToNodeEncryptionOptions(const OAICreateElasticsearchDomain_request_NodeToNodeEncryptionOptions &node_to_node_encryption_options);
    bool is_node_to_node_encryption_options_Set() const;
    bool is_node_to_node_encryption_options_Valid() const;

    OAICreateElasticsearchDomain_request_EncryptionAtRestOptions getEncryptionAtRestOptions() const;
    void setEncryptionAtRestOptions(const OAICreateElasticsearchDomain_request_EncryptionAtRestOptions &encryption_at_rest_options);
    bool is_encryption_at_rest_options_Set() const;
    bool is_encryption_at_rest_options_Valid() const;

    OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions getAutoTuneOptions() const;
    void setAutoTuneOptions(const OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions &auto_tune_options);
    bool is_auto_tune_options_Set() const;
    bool is_auto_tune_options_Valid() const;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateElasticsearchDomain_request_ElasticsearchClusterConfig m_elasticsearch_cluster_config;
    bool m_elasticsearch_cluster_config_isSet;
    bool m_elasticsearch_cluster_config_isValid;

    OAICreateElasticsearchDomain_request_EBSOptions m_ebs_options;
    bool m_ebs_options_isSet;
    bool m_ebs_options_isValid;

    OAICreateElasticsearchDomain_request_SnapshotOptions m_snapshot_options;
    bool m_snapshot_options_isSet;
    bool m_snapshot_options_isValid;

    OAICreateElasticsearchDomain_request_VPCOptions m_vpc_options;
    bool m_vpc_options_isSet;
    bool m_vpc_options_isValid;

    OAICreateElasticsearchDomain_request_CognitoOptions m_cognito_options;
    bool m_cognito_options_isSet;
    bool m_cognito_options_isValid;

    QMap<QString, QString> m_advanced_options;
    bool m_advanced_options_isSet;
    bool m_advanced_options_isValid;

    QString m_access_policies;
    bool m_access_policies_isSet;
    bool m_access_policies_isValid;

    QMap<QString, OAILogPublishingOption> m_log_publishing_options;
    bool m_log_publishing_options_isSet;
    bool m_log_publishing_options_isValid;

    OAICreateElasticsearchDomain_request_DomainEndpointOptions m_domain_endpoint_options;
    bool m_domain_endpoint_options_isSet;
    bool m_domain_endpoint_options_isValid;

    OAICreateElasticsearchDomain_request_AdvancedSecurityOptions m_advanced_security_options;
    bool m_advanced_security_options_isSet;
    bool m_advanced_security_options_isValid;

    OAICreateElasticsearchDomain_request_NodeToNodeEncryptionOptions m_node_to_node_encryption_options;
    bool m_node_to_node_encryption_options_isSet;
    bool m_node_to_node_encryption_options_isValid;

    OAICreateElasticsearchDomain_request_EncryptionAtRestOptions m_encryption_at_rest_options;
    bool m_encryption_at_rest_options_isSet;
    bool m_encryption_at_rest_options_isValid;

    OAIUpdateElasticsearchDomainConfig_request_AutoTuneOptions m_auto_tune_options;
    bool m_auto_tune_options_isSet;
    bool m_auto_tune_options_isValid;

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateElasticsearchDomainConfig_request)

#endif // OAIUpdateElasticsearchDomainConfig_request_H
