/**
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreatePackageResponse_PackageDetails.h
 *
 * 
 */

#ifndef OAICreatePackageResponse_PackageDetails_H
#define OAICreatePackageResponse_PackageDetails_H

#include <QJsonObject>

#include "OAIDomainPackageDetails_ErrorDetails.h"
#include "OAIPackageStatus.h"
#include "OAIPackageType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainPackageDetails_ErrorDetails;

class OAICreatePackageResponse_PackageDetails : public OAIObject {
public:
    OAICreatePackageResponse_PackageDetails();
    OAICreatePackageResponse_PackageDetails(QString json);
    ~OAICreatePackageResponse_PackageDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPackageId() const;
    void setPackageId(const QString &package_id);
    bool is_package_id_Set() const;
    bool is_package_id_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    OAIPackageType getPackageType() const;
    void setPackageType(const OAIPackageType &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    QString getPackageDescription() const;
    void setPackageDescription(const QString &package_description);
    bool is_package_description_Set() const;
    bool is_package_description_Valid() const;

    OAIPackageStatus getPackageStatus() const;
    void setPackageStatus(const OAIPackageStatus &package_status);
    bool is_package_status_Set() const;
    bool is_package_status_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    QString getAvailablePackageVersion() const;
    void setAvailablePackageVersion(const QString &available_package_version);
    bool is_available_package_version_Set() const;
    bool is_available_package_version_Valid() const;

    OAIDomainPackageDetails_ErrorDetails getErrorDetails() const;
    void setErrorDetails(const OAIDomainPackageDetails_ErrorDetails &error_details);
    bool is_error_details_Set() const;
    bool is_error_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_package_id;
    bool m_package_id_isSet;
    bool m_package_id_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    OAIPackageType m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;

    QString m_package_description;
    bool m_package_description_isSet;
    bool m_package_description_isValid;

    OAIPackageStatus m_package_status;
    bool m_package_status_isSet;
    bool m_package_status_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    QString m_available_package_version;
    bool m_available_package_version_isSet;
    bool m_available_package_version_isValid;

    OAIDomainPackageDetails_ErrorDetails m_error_details;
    bool m_error_details_isSet;
    bool m_error_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreatePackageResponse_PackageDetails)

#endif // OAICreatePackageResponse_PackageDetails_H
