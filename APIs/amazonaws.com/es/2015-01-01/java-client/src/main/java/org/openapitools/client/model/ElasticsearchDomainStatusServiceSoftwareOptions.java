/*
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DeploymentStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ElasticsearchDomainStatusServiceSoftwareOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:55.471120-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ElasticsearchDomainStatusServiceSoftwareOptions {
  public static final String SERIALIZED_NAME_CURRENT_VERSION = "CurrentVersion";
  @SerializedName(SERIALIZED_NAME_CURRENT_VERSION)
  private String currentVersion;

  public static final String SERIALIZED_NAME_NEW_VERSION = "NewVersion";
  @SerializedName(SERIALIZED_NAME_NEW_VERSION)
  private String newVersion;

  public static final String SERIALIZED_NAME_UPDATE_AVAILABLE = "UpdateAvailable";
  @SerializedName(SERIALIZED_NAME_UPDATE_AVAILABLE)
  private Boolean updateAvailable;

  public static final String SERIALIZED_NAME_CANCELLABLE = "Cancellable";
  @SerializedName(SERIALIZED_NAME_CANCELLABLE)
  private Boolean cancellable;

  public static final String SERIALIZED_NAME_UPDATE_STATUS = "UpdateStatus";
  @SerializedName(SERIALIZED_NAME_UPDATE_STATUS)
  private DeploymentStatus updateStatus;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_AUTOMATED_UPDATE_DATE = "AutomatedUpdateDate";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_UPDATE_DATE)
  private OffsetDateTime automatedUpdateDate;

  public static final String SERIALIZED_NAME_OPTIONAL_DEPLOYMENT = "OptionalDeployment";
  @SerializedName(SERIALIZED_NAME_OPTIONAL_DEPLOYMENT)
  private Boolean optionalDeployment;

  public ElasticsearchDomainStatusServiceSoftwareOptions() {
  }

  public ElasticsearchDomainStatusServiceSoftwareOptions currentVersion(String currentVersion) {
    this.currentVersion = currentVersion;
    return this;
  }

  /**
   * Get currentVersion
   * @return currentVersion
   */
  @javax.annotation.Nullable
  public String getCurrentVersion() {
    return currentVersion;
  }

  public void setCurrentVersion(String currentVersion) {
    this.currentVersion = currentVersion;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions newVersion(String newVersion) {
    this.newVersion = newVersion;
    return this;
  }

  /**
   * Get newVersion
   * @return newVersion
   */
  @javax.annotation.Nullable
  public String getNewVersion() {
    return newVersion;
  }

  public void setNewVersion(String newVersion) {
    this.newVersion = newVersion;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions updateAvailable(Boolean updateAvailable) {
    this.updateAvailable = updateAvailable;
    return this;
  }

  /**
   * Get updateAvailable
   * @return updateAvailable
   */
  @javax.annotation.Nullable
  public Boolean getUpdateAvailable() {
    return updateAvailable;
  }

  public void setUpdateAvailable(Boolean updateAvailable) {
    this.updateAvailable = updateAvailable;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions cancellable(Boolean cancellable) {
    this.cancellable = cancellable;
    return this;
  }

  /**
   * Get cancellable
   * @return cancellable
   */
  @javax.annotation.Nullable
  public Boolean getCancellable() {
    return cancellable;
  }

  public void setCancellable(Boolean cancellable) {
    this.cancellable = cancellable;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions updateStatus(DeploymentStatus updateStatus) {
    this.updateStatus = updateStatus;
    return this;
  }

  /**
   * Get updateStatus
   * @return updateStatus
   */
  @javax.annotation.Nullable
  public DeploymentStatus getUpdateStatus() {
    return updateStatus;
  }

  public void setUpdateStatus(DeploymentStatus updateStatus) {
    this.updateStatus = updateStatus;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions automatedUpdateDate(OffsetDateTime automatedUpdateDate) {
    this.automatedUpdateDate = automatedUpdateDate;
    return this;
  }

  /**
   * Get automatedUpdateDate
   * @return automatedUpdateDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAutomatedUpdateDate() {
    return automatedUpdateDate;
  }

  public void setAutomatedUpdateDate(OffsetDateTime automatedUpdateDate) {
    this.automatedUpdateDate = automatedUpdateDate;
  }


  public ElasticsearchDomainStatusServiceSoftwareOptions optionalDeployment(Boolean optionalDeployment) {
    this.optionalDeployment = optionalDeployment;
    return this;
  }

  /**
   * Get optionalDeployment
   * @return optionalDeployment
   */
  @javax.annotation.Nullable
  public Boolean getOptionalDeployment() {
    return optionalDeployment;
  }

  public void setOptionalDeployment(Boolean optionalDeployment) {
    this.optionalDeployment = optionalDeployment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElasticsearchDomainStatusServiceSoftwareOptions elasticsearchDomainStatusServiceSoftwareOptions = (ElasticsearchDomainStatusServiceSoftwareOptions) o;
    return Objects.equals(this.currentVersion, elasticsearchDomainStatusServiceSoftwareOptions.currentVersion) &&
        Objects.equals(this.newVersion, elasticsearchDomainStatusServiceSoftwareOptions.newVersion) &&
        Objects.equals(this.updateAvailable, elasticsearchDomainStatusServiceSoftwareOptions.updateAvailable) &&
        Objects.equals(this.cancellable, elasticsearchDomainStatusServiceSoftwareOptions.cancellable) &&
        Objects.equals(this.updateStatus, elasticsearchDomainStatusServiceSoftwareOptions.updateStatus) &&
        Objects.equals(this.description, elasticsearchDomainStatusServiceSoftwareOptions.description) &&
        Objects.equals(this.automatedUpdateDate, elasticsearchDomainStatusServiceSoftwareOptions.automatedUpdateDate) &&
        Objects.equals(this.optionalDeployment, elasticsearchDomainStatusServiceSoftwareOptions.optionalDeployment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentVersion, newVersion, updateAvailable, cancellable, updateStatus, description, automatedUpdateDate, optionalDeployment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElasticsearchDomainStatusServiceSoftwareOptions {\n");
    sb.append("    currentVersion: ").append(toIndentedString(currentVersion)).append("\n");
    sb.append("    newVersion: ").append(toIndentedString(newVersion)).append("\n");
    sb.append("    updateAvailable: ").append(toIndentedString(updateAvailable)).append("\n");
    sb.append("    cancellable: ").append(toIndentedString(cancellable)).append("\n");
    sb.append("    updateStatus: ").append(toIndentedString(updateStatus)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    automatedUpdateDate: ").append(toIndentedString(automatedUpdateDate)).append("\n");
    sb.append("    optionalDeployment: ").append(toIndentedString(optionalDeployment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CurrentVersion");
    openapiFields.add("NewVersion");
    openapiFields.add("UpdateAvailable");
    openapiFields.add("Cancellable");
    openapiFields.add("UpdateStatus");
    openapiFields.add("Description");
    openapiFields.add("AutomatedUpdateDate");
    openapiFields.add("OptionalDeployment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ElasticsearchDomainStatusServiceSoftwareOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ElasticsearchDomainStatusServiceSoftwareOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ElasticsearchDomainStatusServiceSoftwareOptions is not found in the empty JSON string", ElasticsearchDomainStatusServiceSoftwareOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ElasticsearchDomainStatusServiceSoftwareOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ElasticsearchDomainStatusServiceSoftwareOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CurrentVersion`
      if (jsonObj.get("CurrentVersion") != null && !jsonObj.get("CurrentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CurrentVersion"));
      }
      // validate the optional field `NewVersion`
      if (jsonObj.get("NewVersion") != null && !jsonObj.get("NewVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NewVersion"));
      }
      // validate the optional field `UpdateAvailable`
      if (jsonObj.get("UpdateAvailable") != null && !jsonObj.get("UpdateAvailable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("UpdateAvailable"));
      }
      // validate the optional field `Cancellable`
      if (jsonObj.get("Cancellable") != null && !jsonObj.get("Cancellable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Cancellable"));
      }
      // validate the optional field `UpdateStatus`
      if (jsonObj.get("UpdateStatus") != null && !jsonObj.get("UpdateStatus").isJsonNull()) {
        DeploymentStatus.validateJsonElement(jsonObj.get("UpdateStatus"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `AutomatedUpdateDate`
      if (jsonObj.get("AutomatedUpdateDate") != null && !jsonObj.get("AutomatedUpdateDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AutomatedUpdateDate"));
      }
      // validate the optional field `OptionalDeployment`
      if (jsonObj.get("OptionalDeployment") != null && !jsonObj.get("OptionalDeployment").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("OptionalDeployment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ElasticsearchDomainStatusServiceSoftwareOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ElasticsearchDomainStatusServiceSoftwareOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ElasticsearchDomainStatusServiceSoftwareOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ElasticsearchDomainStatusServiceSoftwareOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<ElasticsearchDomainStatusServiceSoftwareOptions>() {
           @Override
           public void write(JsonWriter out, ElasticsearchDomainStatusServiceSoftwareOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ElasticsearchDomainStatusServiceSoftwareOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ElasticsearchDomainStatusServiceSoftwareOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ElasticsearchDomainStatusServiceSoftwareOptions
   * @throws IOException if the JSON string is invalid with respect to ElasticsearchDomainStatusServiceSoftwareOptions
   */
  public static ElasticsearchDomainStatusServiceSoftwareOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ElasticsearchDomainStatusServiceSoftwareOptions.class);
  }

  /**
   * Convert an instance of ElasticsearchDomainStatusServiceSoftwareOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

