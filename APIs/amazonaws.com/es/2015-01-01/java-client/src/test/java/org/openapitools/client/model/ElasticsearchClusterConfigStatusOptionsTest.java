/*
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateElasticsearchDomainRequestElasticsearchClusterConfigColdStorageOptions;
import org.openapitools.client.model.CreateElasticsearchDomainRequestElasticsearchClusterConfigZoneAwarenessConfig;
import org.openapitools.client.model.ESPartitionInstanceType;
import org.openapitools.client.model.ESWarmPartitionInstanceType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ElasticsearchClusterConfigStatusOptions
 */
public class ElasticsearchClusterConfigStatusOptionsTest {
    private final ElasticsearchClusterConfigStatusOptions model = new ElasticsearchClusterConfigStatusOptions();

    /**
     * Model tests for ElasticsearchClusterConfigStatusOptions
     */
    @Test
    public void testElasticsearchClusterConfigStatusOptions() {
        // TODO: test ElasticsearchClusterConfigStatusOptions
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'instanceCount'
     */
    @Test
    public void instanceCountTest() {
        // TODO: test instanceCount
    }

    /**
     * Test the property 'dedicatedMasterEnabled'
     */
    @Test
    public void dedicatedMasterEnabledTest() {
        // TODO: test dedicatedMasterEnabled
    }

    /**
     * Test the property 'zoneAwarenessEnabled'
     */
    @Test
    public void zoneAwarenessEnabledTest() {
        // TODO: test zoneAwarenessEnabled
    }

    /**
     * Test the property 'zoneAwarenessConfig'
     */
    @Test
    public void zoneAwarenessConfigTest() {
        // TODO: test zoneAwarenessConfig
    }

    /**
     * Test the property 'dedicatedMasterType'
     */
    @Test
    public void dedicatedMasterTypeTest() {
        // TODO: test dedicatedMasterType
    }

    /**
     * Test the property 'dedicatedMasterCount'
     */
    @Test
    public void dedicatedMasterCountTest() {
        // TODO: test dedicatedMasterCount
    }

    /**
     * Test the property 'warmEnabled'
     */
    @Test
    public void warmEnabledTest() {
        // TODO: test warmEnabled
    }

    /**
     * Test the property 'warmType'
     */
    @Test
    public void warmTypeTest() {
        // TODO: test warmType
    }

    /**
     * Test the property 'warmCount'
     */
    @Test
    public void warmCountTest() {
        // TODO: test warmCount
    }

    /**
     * Test the property 'coldStorageOptions'
     */
    @Test
    public void coldStorageOptionsTest() {
        // TODO: test coldStorageOptions
    }

}
