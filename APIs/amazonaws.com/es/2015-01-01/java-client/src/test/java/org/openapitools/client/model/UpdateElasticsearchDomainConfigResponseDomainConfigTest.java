/*
 * Amazon Elasticsearch Service
 * <fullname>Amazon Elasticsearch Configuration Service</fullname> <p>Use the Amazon Elasticsearch Configuration API to create, configure, and manage Elasticsearch domains.</p> <p>For sample code that uses the Configuration API, see the <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-samples.html\">Amazon Elasticsearch Service Developer Guide</a>. The guide also contains <a href=\"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html\">sample code for sending signed HTTP requests to the Elasticsearch APIs</a>.</p> <p>The endpoint for configuration service requests is region-specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticsearch-service-regions\" target=\"_blank\">Regions and Endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2015-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ElasticsearchDomainConfigAccessPolicies;
import org.openapitools.client.model.ElasticsearchDomainConfigAdvancedOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigAdvancedSecurityOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigAutoTuneOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigCognitoOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigDomainEndpointOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigEBSOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigElasticsearchClusterConfig;
import org.openapitools.client.model.ElasticsearchDomainConfigElasticsearchVersion;
import org.openapitools.client.model.ElasticsearchDomainConfigEncryptionAtRestOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigLogPublishingOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigNodeToNodeEncryptionOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigSnapshotOptions;
import org.openapitools.client.model.ElasticsearchDomainConfigVPCOptions;
import org.openapitools.client.model.ElasticsearchDomainStatusChangeProgressDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateElasticsearchDomainConfigResponseDomainConfig
 */
public class UpdateElasticsearchDomainConfigResponseDomainConfigTest {
    private final UpdateElasticsearchDomainConfigResponseDomainConfig model = new UpdateElasticsearchDomainConfigResponseDomainConfig();

    /**
     * Model tests for UpdateElasticsearchDomainConfigResponseDomainConfig
     */
    @Test
    public void testUpdateElasticsearchDomainConfigResponseDomainConfig() {
        // TODO: test UpdateElasticsearchDomainConfigResponseDomainConfig
    }

    /**
     * Test the property 'elasticsearchVersion'
     */
    @Test
    public void elasticsearchVersionTest() {
        // TODO: test elasticsearchVersion
    }

    /**
     * Test the property 'elasticsearchClusterConfig'
     */
    @Test
    public void elasticsearchClusterConfigTest() {
        // TODO: test elasticsearchClusterConfig
    }

    /**
     * Test the property 'ebSOptions'
     */
    @Test
    public void ebSOptionsTest() {
        // TODO: test ebSOptions
    }

    /**
     * Test the property 'accessPolicies'
     */
    @Test
    public void accessPoliciesTest() {
        // TODO: test accessPolicies
    }

    /**
     * Test the property 'snapshotOptions'
     */
    @Test
    public void snapshotOptionsTest() {
        // TODO: test snapshotOptions
    }

    /**
     * Test the property 'vpCOptions'
     */
    @Test
    public void vpCOptionsTest() {
        // TODO: test vpCOptions
    }

    /**
     * Test the property 'cognitoOptions'
     */
    @Test
    public void cognitoOptionsTest() {
        // TODO: test cognitoOptions
    }

    /**
     * Test the property 'encryptionAtRestOptions'
     */
    @Test
    public void encryptionAtRestOptionsTest() {
        // TODO: test encryptionAtRestOptions
    }

    /**
     * Test the property 'nodeToNodeEncryptionOptions'
     */
    @Test
    public void nodeToNodeEncryptionOptionsTest() {
        // TODO: test nodeToNodeEncryptionOptions
    }

    /**
     * Test the property 'advancedOptions'
     */
    @Test
    public void advancedOptionsTest() {
        // TODO: test advancedOptions
    }

    /**
     * Test the property 'logPublishingOptions'
     */
    @Test
    public void logPublishingOptionsTest() {
        // TODO: test logPublishingOptions
    }

    /**
     * Test the property 'domainEndpointOptions'
     */
    @Test
    public void domainEndpointOptionsTest() {
        // TODO: test domainEndpointOptions
    }

    /**
     * Test the property 'advancedSecurityOptions'
     */
    @Test
    public void advancedSecurityOptionsTest() {
        // TODO: test advancedSecurityOptions
    }

    /**
     * Test the property 'autoTuneOptions'
     */
    @Test
    public void autoTuneOptionsTest() {
        // TODO: test autoTuneOptions
    }

    /**
     * Test the property 'changeProgressDetails'
     */
    @Test
    public void changeProgressDetailsTest() {
        // TODO: test changeProgressDetails
    }

}
