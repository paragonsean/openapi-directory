# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociateS3ResourcesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member_account_id: str=None, s3_resources: List=None):
        """AssociateS3ResourcesRequest - a model defined in OpenAPI

        :param member_account_id: The member_account_id of this AssociateS3ResourcesRequest.
        :param s3_resources: The s3_resources of this AssociateS3ResourcesRequest.
        """
        self.openapi_types = {
            'member_account_id': str,
            's3_resources': List
        }

        self.attribute_map = {
            'member_account_id': 'memberAccountId',
            's3_resources': 's3Resources'
        }

        self._member_account_id = member_account_id
        self._s3_resources = s3_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateS3ResourcesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateS3ResourcesRequest of this AssociateS3ResourcesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_account_id(self):
        """Gets the member_account_id of this AssociateS3ResourcesRequest.


        :return: The member_account_id of this AssociateS3ResourcesRequest.
        :rtype: str
        """
        return self._member_account_id

    @member_account_id.setter
    def member_account_id(self, member_account_id):
        """Sets the member_account_id of this AssociateS3ResourcesRequest.


        :param member_account_id: The member_account_id of this AssociateS3ResourcesRequest.
        :type member_account_id: str
        """

        self._member_account_id = member_account_id

    @property
    def s3_resources(self):
        """Gets the s3_resources of this AssociateS3ResourcesRequest.


        :return: The s3_resources of this AssociateS3ResourcesRequest.
        :rtype: List
        """
        return self._s3_resources

    @s3_resources.setter
    def s3_resources(self, s3_resources):
        """Sets the s3_resources of this AssociateS3ResourcesRequest.


        :param s3_resources: The s3_resources of this AssociateS3ResourcesRequest.
        :type s3_resources: List
        """
        if s3_resources is None:
            raise ValueError("Invalid value for `s3_resources`, must not be `None`")

        self._s3_resources = s3_resources
