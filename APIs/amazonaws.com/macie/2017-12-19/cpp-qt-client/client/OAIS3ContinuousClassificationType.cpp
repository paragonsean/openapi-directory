/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3ContinuousClassificationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3ContinuousClassificationType::OAIS3ContinuousClassificationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3ContinuousClassificationType::OAIS3ContinuousClassificationType() {
    this->initializeModel();
}

OAIS3ContinuousClassificationType::~OAIS3ContinuousClassificationType() {}

void OAIS3ContinuousClassificationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIS3ContinuousClassificationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIS3ContinuousClassificationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FULL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIS3ContinuousClassificationType::FULL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIS3ContinuousClassificationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIS3ContinuousClassificationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIS3ContinuousClassificationType::FULL:
            val = "FULL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIS3ContinuousClassificationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIS3ContinuousClassificationType::eOAIS3ContinuousClassificationType OAIS3ContinuousClassificationType::getValue() const {
    return m_value;
}

void OAIS3ContinuousClassificationType::setValue(const OAIS3ContinuousClassificationType::eOAIS3ContinuousClassificationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIS3ContinuousClassificationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIS3ContinuousClassificationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
