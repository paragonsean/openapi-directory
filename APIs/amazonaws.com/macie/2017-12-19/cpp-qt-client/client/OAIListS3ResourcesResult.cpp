/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListS3ResourcesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListS3ResourcesResult::OAIListS3ResourcesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListS3ResourcesResult::OAIListS3ResourcesResult() {
    this->initializeModel();
}

OAIListS3ResourcesResult::~OAIListS3ResourcesResult() {}

void OAIListS3ResourcesResult::initializeModel() {

    m_s3_resources_isSet = false;
    m_s3_resources_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListS3ResourcesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListS3ResourcesResult::fromJsonObject(QJsonObject json) {

    m_s3_resources_isValid = ::OpenAPI::fromJsonValue(m_s3_resources, json[QString("s3Resources")]);
    m_s3_resources_isSet = !json[QString("s3Resources")].isNull() && m_s3_resources_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListS3ResourcesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListS3ResourcesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_resources.isSet()) {
        obj.insert(QString("s3Resources"), ::OpenAPI::toJsonValue(m_s3_resources));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListS3ResourcesResult::getS3Resources() const {
    return m_s3_resources;
}
void OAIListS3ResourcesResult::setS3Resources(const QList &s3_resources) {
    m_s3_resources = s3_resources;
    m_s3_resources_isSet = true;
}

bool OAIListS3ResourcesResult::is_s3_resources_Set() const{
    return m_s3_resources_isSet;
}

bool OAIListS3ResourcesResult::is_s3_resources_Valid() const{
    return m_s3_resources_isValid;
}

QString OAIListS3ResourcesResult::getNextToken() const {
    return m_next_token;
}
void OAIListS3ResourcesResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListS3ResourcesResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListS3ResourcesResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListS3ResourcesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListS3ResourcesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
