/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailedS3Resource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailedS3Resource::OAIFailedS3Resource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailedS3Resource::OAIFailedS3Resource() {
    this->initializeModel();
}

OAIFailedS3Resource::~OAIFailedS3Resource() {}

void OAIFailedS3Resource::initializeModel() {

    m_failed_item_isSet = false;
    m_failed_item_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;
}

void OAIFailedS3Resource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFailedS3Resource::fromJsonObject(QJsonObject json) {

    m_failed_item_isValid = ::OpenAPI::fromJsonValue(m_failed_item, json[QString("failedItem")]);
    m_failed_item_isSet = !json[QString("failedItem")].isNull() && m_failed_item_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;
}

QString OAIFailedS3Resource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFailedS3Resource::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_item.isSet()) {
        obj.insert(QString("failedItem"), ::OpenAPI::toJsonValue(m_failed_item));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    return obj;
}

OAIFailedS3Resource_failedItem OAIFailedS3Resource::getFailedItem() const {
    return m_failed_item;
}
void OAIFailedS3Resource::setFailedItem(const OAIFailedS3Resource_failedItem &failed_item) {
    m_failed_item = failed_item;
    m_failed_item_isSet = true;
}

bool OAIFailedS3Resource::is_failed_item_Set() const{
    return m_failed_item_isSet;
}

bool OAIFailedS3Resource::is_failed_item_Valid() const{
    return m_failed_item_isValid;
}

QString OAIFailedS3Resource::getErrorCode() const {
    return m_error_code;
}
void OAIFailedS3Resource::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIFailedS3Resource::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIFailedS3Resource::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIFailedS3Resource::getErrorMessage() const {
    return m_error_message;
}
void OAIFailedS3Resource::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIFailedS3Resource::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIFailedS3Resource::is_error_message_Valid() const{
    return m_error_message_isValid;
}

bool OAIFailedS3Resource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFailedS3Resource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
