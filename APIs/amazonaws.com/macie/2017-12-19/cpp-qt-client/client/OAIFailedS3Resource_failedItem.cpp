/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFailedS3Resource_failedItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFailedS3Resource_failedItem::OAIFailedS3Resource_failedItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFailedS3Resource_failedItem::OAIFailedS3Resource_failedItem() {
    this->initializeModel();
}

OAIFailedS3Resource_failedItem::~OAIFailedS3Resource_failedItem() {}

void OAIFailedS3Resource_failedItem::initializeModel() {

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_prefix_isSet = false;
    m_prefix_isValid = false;
}

void OAIFailedS3Resource_failedItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFailedS3Resource_failedItem::fromJsonObject(QJsonObject json) {

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("bucketName")]);
    m_bucket_name_isSet = !json[QString("bucketName")].isNull() && m_bucket_name_isValid;

    m_prefix_isValid = ::OpenAPI::fromJsonValue(m_prefix, json[QString("prefix")]);
    m_prefix_isSet = !json[QString("prefix")].isNull() && m_prefix_isValid;
}

QString OAIFailedS3Resource_failedItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFailedS3Resource_failedItem::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_name_isSet) {
        obj.insert(QString("bucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_prefix_isSet) {
        obj.insert(QString("prefix"), ::OpenAPI::toJsonValue(m_prefix));
    }
    return obj;
}

QString OAIFailedS3Resource_failedItem::getBucketName() const {
    return m_bucket_name;
}
void OAIFailedS3Resource_failedItem::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIFailedS3Resource_failedItem::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIFailedS3Resource_failedItem::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QString OAIFailedS3Resource_failedItem::getPrefix() const {
    return m_prefix;
}
void OAIFailedS3Resource_failedItem::setPrefix(const QString &prefix) {
    m_prefix = prefix;
    m_prefix_isSet = true;
}

bool OAIFailedS3Resource_failedItem::is_prefix_Set() const{
    return m_prefix_isSet;
}

bool OAIFailedS3Resource_failedItem::is_prefix_Valid() const{
    return m_prefix_isValid;
}

bool OAIFailedS3Resource_failedItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFailedS3Resource_failedItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_name_isValid && true;
}

} // namespace OpenAPI
