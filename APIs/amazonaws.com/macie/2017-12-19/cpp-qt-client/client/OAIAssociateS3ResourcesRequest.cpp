/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateS3ResourcesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateS3ResourcesRequest::OAIAssociateS3ResourcesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateS3ResourcesRequest::OAIAssociateS3ResourcesRequest() {
    this->initializeModel();
}

OAIAssociateS3ResourcesRequest::~OAIAssociateS3ResourcesRequest() {}

void OAIAssociateS3ResourcesRequest::initializeModel() {

    m_member_account_id_isSet = false;
    m_member_account_id_isValid = false;

    m_s3_resources_isSet = false;
    m_s3_resources_isValid = false;
}

void OAIAssociateS3ResourcesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateS3ResourcesRequest::fromJsonObject(QJsonObject json) {

    m_member_account_id_isValid = ::OpenAPI::fromJsonValue(m_member_account_id, json[QString("memberAccountId")]);
    m_member_account_id_isSet = !json[QString("memberAccountId")].isNull() && m_member_account_id_isValid;

    m_s3_resources_isValid = ::OpenAPI::fromJsonValue(m_s3_resources, json[QString("s3Resources")]);
    m_s3_resources_isSet = !json[QString("s3Resources")].isNull() && m_s3_resources_isValid;
}

QString OAIAssociateS3ResourcesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateS3ResourcesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_member_account_id_isSet) {
        obj.insert(QString("memberAccountId"), ::OpenAPI::toJsonValue(m_member_account_id));
    }
    if (m_s3_resources.isSet()) {
        obj.insert(QString("s3Resources"), ::OpenAPI::toJsonValue(m_s3_resources));
    }
    return obj;
}

QString OAIAssociateS3ResourcesRequest::getMemberAccountId() const {
    return m_member_account_id;
}
void OAIAssociateS3ResourcesRequest::setMemberAccountId(const QString &member_account_id) {
    m_member_account_id = member_account_id;
    m_member_account_id_isSet = true;
}

bool OAIAssociateS3ResourcesRequest::is_member_account_id_Set() const{
    return m_member_account_id_isSet;
}

bool OAIAssociateS3ResourcesRequest::is_member_account_id_Valid() const{
    return m_member_account_id_isValid;
}

QList OAIAssociateS3ResourcesRequest::getS3Resources() const {
    return m_s3_resources;
}
void OAIAssociateS3ResourcesRequest::setS3Resources(const QList &s3_resources) {
    m_s3_resources = s3_resources;
    m_s3_resources_isSet = true;
}

bool OAIAssociateS3ResourcesRequest::is_s3_resources_Set() const{
    return m_s3_resources_isSet;
}

bool OAIAssociateS3ResourcesRequest::is_s3_resources_Valid() const{
    return m_s3_resources_isValid;
}

bool OAIAssociateS3ResourcesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateS3ResourcesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s3_resources_isValid && true;
}

} // namespace OpenAPI
