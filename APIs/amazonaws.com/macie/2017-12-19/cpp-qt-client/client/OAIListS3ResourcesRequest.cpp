/**
 * Amazon Macie
 * <fullname>Amazon Macie Classic</fullname> <p>Amazon Macie Classic has been discontinued and is no longer available.</p> <p>A new Amazon Macie is now available with significant design improvements and additional features, at a lower price and in most Amazon Web Services Regions. We encourage you to take advantage of the new and improved features, and benefit from the reduced cost. To learn about features and pricing for the new Macie, see <a href=\"http://aws.amazon.com/macie/\">Amazon Macie</a>. To learn how to use the new Macie, see the <a href=\"https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html\">Amazon Macie User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2017-12-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListS3ResourcesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListS3ResourcesRequest::OAIListS3ResourcesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListS3ResourcesRequest::OAIListS3ResourcesRequest() {
    this->initializeModel();
}

OAIListS3ResourcesRequest::~OAIListS3ResourcesRequest() {}

void OAIListS3ResourcesRequest::initializeModel() {

    m_member_account_id_isSet = false;
    m_member_account_id_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;
}

void OAIListS3ResourcesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListS3ResourcesRequest::fromJsonObject(QJsonObject json) {

    m_member_account_id_isValid = ::OpenAPI::fromJsonValue(m_member_account_id, json[QString("memberAccountId")]);
    m_member_account_id_isSet = !json[QString("memberAccountId")].isNull() && m_member_account_id_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;
}

QString OAIListS3ResourcesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListS3ResourcesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_member_account_id_isSet) {
        obj.insert(QString("memberAccountId"), ::OpenAPI::toJsonValue(m_member_account_id));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    return obj;
}

QString OAIListS3ResourcesRequest::getMemberAccountId() const {
    return m_member_account_id;
}
void OAIListS3ResourcesRequest::setMemberAccountId(const QString &member_account_id) {
    m_member_account_id = member_account_id;
    m_member_account_id_isSet = true;
}

bool OAIListS3ResourcesRequest::is_member_account_id_Set() const{
    return m_member_account_id_isSet;
}

bool OAIListS3ResourcesRequest::is_member_account_id_Valid() const{
    return m_member_account_id_isValid;
}

QString OAIListS3ResourcesRequest::getNextToken() const {
    return m_next_token;
}
void OAIListS3ResourcesRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListS3ResourcesRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListS3ResourcesRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIListS3ResourcesRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListS3ResourcesRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListS3ResourcesRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListS3ResourcesRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

bool OAIListS3ResourcesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListS3ResourcesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
