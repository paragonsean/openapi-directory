/*
 * AWS Single Sign-On Admin
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) helps you securely create, or connect, your workforce identities and manage their access centrally across AWS accounts and applications. IAM Identity Center is the recommended approach for workforce authentication and authorization in AWS, for organizations of any size and type.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide provides information on single sign-on operations which could be used for access management of AWS accounts. For information about IAM Identity Center features, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">IAM Identity Center User Guide</a>.</p> <p>Many operations in the IAM Identity Center APIs rely on identifiers for users and groups, known as principals. For more information about how to work with principals and principal IDs in IAM Identity Center, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Identity Store API Reference</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, and more). The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2020-07-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PrincipalType;
import org.openapitools.client.model.StatusValues;
import org.openapitools.client.model.TargetType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:24.941843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus {
  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusValues status;

  public static final String SERIALIZED_NAME_REQUEST_ID = "RequestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "FailureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_TARGET_ID = "TargetId";
  @SerializedName(SERIALIZED_NAME_TARGET_ID)
  private String targetId;

  public static final String SERIALIZED_NAME_TARGET_TYPE = "TargetType";
  @SerializedName(SERIALIZED_NAME_TARGET_TYPE)
  private TargetType targetType;

  public static final String SERIALIZED_NAME_PERMISSION_SET_ARN = "PermissionSetArn";
  @SerializedName(SERIALIZED_NAME_PERMISSION_SET_ARN)
  private String permissionSetArn;

  public static final String SERIALIZED_NAME_PRINCIPAL_TYPE = "PrincipalType";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_TYPE)
  private PrincipalType principalType;

  public static final String SERIALIZED_NAME_PRINCIPAL_ID = "PrincipalId";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_ID)
  private String principalId;

  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus() {
  }

  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus status(StatusValues status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StatusValues getStatus() {
    return status;
  }

  public void setStatus(StatusValues status) {
    this.status = status;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Get requestId
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus targetId(String targetId) {
    this.targetId = targetId;
    return this;
  }

  /**
   * Get targetId
   * @return targetId
   */
  @javax.annotation.Nullable
  public String getTargetId() {
    return targetId;
  }

  public void setTargetId(String targetId) {
    this.targetId = targetId;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus targetType(TargetType targetType) {
    this.targetType = targetType;
    return this;
  }

  /**
   * Get targetType
   * @return targetType
   */
  @javax.annotation.Nullable
  public TargetType getTargetType() {
    return targetType;
  }

  public void setTargetType(TargetType targetType) {
    this.targetType = targetType;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus permissionSetArn(String permissionSetArn) {
    this.permissionSetArn = permissionSetArn;
    return this;
  }

  /**
   * Get permissionSetArn
   * @return permissionSetArn
   */
  @javax.annotation.Nullable
  public String getPermissionSetArn() {
    return permissionSetArn;
  }

  public void setPermissionSetArn(String permissionSetArn) {
    this.permissionSetArn = permissionSetArn;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus principalType(PrincipalType principalType) {
    this.principalType = principalType;
    return this;
  }

  /**
   * Get principalType
   * @return principalType
   */
  @javax.annotation.Nullable
  public PrincipalType getPrincipalType() {
    return principalType;
  }

  public void setPrincipalType(PrincipalType principalType) {
    this.principalType = principalType;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus principalId(String principalId) {
    this.principalId = principalId;
    return this;
  }

  /**
   * Get principalId
   * @return principalId
   */
  @javax.annotation.Nullable
  public String getPrincipalId() {
    return principalId;
  }

  public void setPrincipalId(String principalId) {
    this.principalId = principalId;
  }


  public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus deleteAccountAssignmentResponseAccountAssignmentDeletionStatus = (DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus) o;
    return Objects.equals(this.status, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.status) &&
        Objects.equals(this.requestId, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.requestId) &&
        Objects.equals(this.failureReason, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.failureReason) &&
        Objects.equals(this.targetId, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.targetId) &&
        Objects.equals(this.targetType, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.targetType) &&
        Objects.equals(this.permissionSetArn, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.permissionSetArn) &&
        Objects.equals(this.principalType, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.principalType) &&
        Objects.equals(this.principalId, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.principalId) &&
        Objects.equals(this.createdDate, deleteAccountAssignmentResponseAccountAssignmentDeletionStatus.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, requestId, failureReason, targetId, targetType, permissionSetArn, principalType, principalId, createdDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("    permissionSetArn: ").append(toIndentedString(permissionSetArn)).append("\n");
    sb.append("    principalType: ").append(toIndentedString(principalType)).append("\n");
    sb.append("    principalId: ").append(toIndentedString(principalId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Status");
    openapiFields.add("RequestId");
    openapiFields.add("FailureReason");
    openapiFields.add("TargetId");
    openapiFields.add("TargetType");
    openapiFields.add("PermissionSetArn");
    openapiFields.add("PrincipalType");
    openapiFields.add("PrincipalId");
    openapiFields.add("CreatedDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus is not found in the empty JSON string", DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StatusValues.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `RequestId`
      if (jsonObj.get("RequestId") != null && !jsonObj.get("RequestId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RequestId"));
      }
      // validate the optional field `FailureReason`
      if (jsonObj.get("FailureReason") != null && !jsonObj.get("FailureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureReason"));
      }
      // validate the optional field `TargetId`
      if (jsonObj.get("TargetId") != null && !jsonObj.get("TargetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TargetId"));
      }
      // validate the optional field `TargetType`
      if (jsonObj.get("TargetType") != null && !jsonObj.get("TargetType").isJsonNull()) {
        TargetType.validateJsonElement(jsonObj.get("TargetType"));
      }
      // validate the optional field `PermissionSetArn`
      if (jsonObj.get("PermissionSetArn") != null && !jsonObj.get("PermissionSetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PermissionSetArn"));
      }
      // validate the optional field `PrincipalType`
      if (jsonObj.get("PrincipalType") != null && !jsonObj.get("PrincipalType").isJsonNull()) {
        PrincipalType.validateJsonElement(jsonObj.get("PrincipalType"));
      }
      // validate the optional field `PrincipalId`
      if (jsonObj.get("PrincipalId") != null && !jsonObj.get("PrincipalId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrincipalId"));
      }
      // validate the optional field `CreatedDate`
      if (jsonObj.get("CreatedDate") != null && !jsonObj.get("CreatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedDate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus>() {
           @Override
           public void write(JsonWriter out, DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus
   * @throws IOException if the JSON string is invalid with respect to DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus
   */
  public static DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus.class);
  }

  /**
   * Convert an instance of DeleteAccountAssignmentResponseAccountAssignmentDeletionStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

