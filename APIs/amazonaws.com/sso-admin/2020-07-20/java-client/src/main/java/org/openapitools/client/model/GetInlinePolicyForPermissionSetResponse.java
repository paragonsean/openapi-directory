/*
 * AWS Single Sign-On Admin
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) helps you securely create, or connect, your workforce identities and manage their access centrally across AWS accounts and applications. IAM Identity Center is the recommended approach for workforce authentication and authorization in AWS, for organizations of any size and type.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide provides information on single sign-on operations which could be used for access management of AWS accounts. For information about IAM Identity Center features, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">IAM Identity Center User Guide</a>.</p> <p>Many operations in the IAM Identity Center APIs rely on identifiers for users and groups, known as principals. For more information about how to work with principals and principal IDs in IAM Identity Center, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Identity Store API Reference</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, and more). The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2020-07-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetInlinePolicyForPermissionSetResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:24.941843-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetInlinePolicyForPermissionSetResponse {
  public static final String SERIALIZED_NAME_INLINE_POLICY = "InlinePolicy";
  @SerializedName(SERIALIZED_NAME_INLINE_POLICY)
  private String inlinePolicy;

  public GetInlinePolicyForPermissionSetResponse() {
  }

  public GetInlinePolicyForPermissionSetResponse inlinePolicy(String inlinePolicy) {
    this.inlinePolicy = inlinePolicy;
    return this;
  }

  /**
   * Get inlinePolicy
   * @return inlinePolicy
   */
  @javax.annotation.Nullable
  public String getInlinePolicy() {
    return inlinePolicy;
  }

  public void setInlinePolicy(String inlinePolicy) {
    this.inlinePolicy = inlinePolicy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetInlinePolicyForPermissionSetResponse getInlinePolicyForPermissionSetResponse = (GetInlinePolicyForPermissionSetResponse) o;
    return Objects.equals(this.inlinePolicy, getInlinePolicyForPermissionSetResponse.inlinePolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inlinePolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetInlinePolicyForPermissionSetResponse {\n");
    sb.append("    inlinePolicy: ").append(toIndentedString(inlinePolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InlinePolicy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetInlinePolicyForPermissionSetResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetInlinePolicyForPermissionSetResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetInlinePolicyForPermissionSetResponse is not found in the empty JSON string", GetInlinePolicyForPermissionSetResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetInlinePolicyForPermissionSetResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetInlinePolicyForPermissionSetResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InlinePolicy`
      if (jsonObj.get("InlinePolicy") != null && !jsonObj.get("InlinePolicy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InlinePolicy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetInlinePolicyForPermissionSetResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetInlinePolicyForPermissionSetResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetInlinePolicyForPermissionSetResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetInlinePolicyForPermissionSetResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetInlinePolicyForPermissionSetResponse>() {
           @Override
           public void write(JsonWriter out, GetInlinePolicyForPermissionSetResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetInlinePolicyForPermissionSetResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetInlinePolicyForPermissionSetResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetInlinePolicyForPermissionSetResponse
   * @throws IOException if the JSON string is invalid with respect to GetInlinePolicyForPermissionSetResponse
   */
  public static GetInlinePolicyForPermissionSetResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetInlinePolicyForPermissionSetResponse.class);
  }

  /**
   * Convert an instance of GetInlinePolicyForPermissionSetResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

