openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>AWS IAM Identity Center (successor to AWS Single Sign-On) helps\
    \ you securely create, or connect, your workforce identities and manage their\
    \ access centrally across AWS accounts and applications. IAM Identity Center is\
    \ the recommended approach for workforce authentication and authorization in AWS,\
    \ for organizations of any size and type.</p> <note> <p>Although AWS Single Sign-On\
    \ was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces\
    \ will continue to retain their original name for backward compatibility purposes.\
    \ For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\"\
    >IAM Identity Center rename</a>.</p> </note> <p>This reference guide provides\
    \ information on single sign-on operations which could be used for access management\
    \ of AWS accounts. For information about IAM Identity Center features, see the\
    \ <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\"\
    >IAM Identity Center User Guide</a>.</p> <p>Many operations in the IAM Identity\
    \ Center APIs rely on identifiers for users and groups, known as principals. For\
    \ more information about how to work with principals and principal IDs in IAM\
    \ Identity Center, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\"\
    >Identity Store API Reference</a>.</p> <note> <p>AWS provides SDKs that consist\
    \ of libraries and sample code for various programming languages and platforms\
    \ (Java, Ruby, .Net, iOS, Android, and more). The SDKs provide a convenient way\
    \ to create programmatic access to IAM Identity Center and other AWS services.\
    \ For more information about the AWS SDKs, including how to download and install\
    \ them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p>\
    \ </note>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Single Sign-On Admin
  version: 2020-07-20
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sso-admin
  x-aws-signingName: sso
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sso-admin-2020-07-20.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sso/
servers:
- description: The SSO Admin multi-region endpoint
  url: "http://sso.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SSO Admin multi-region endpoint
  url: "https://sso.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The SSO Admin endpoint for China (Beijing) and China (Ningxia)
  url: "http://sso.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The SSO Admin endpoint for China (Beijing) and China (Ningxia)
  url: "https://sso.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=SWBExternalService.AttachCustomerManagedPolicyReferenceToPermissionSet:
    post:
      description: Attaches the specified customer managed policy to the specified
        <a>PermissionSet</a>.
      operationId: AttachCustomerManagedPolicyReferenceToPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.AttachCustomerManagedPolicyReferenceToPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachCustomerManagedPolicyReferenceToPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachCustomerManagedPolicyReferenceToPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.AttachManagedPolicyToPermissionSet:
    post:
      description: "<p>Attaches an AWS managed policy ARN to a permission set.</p>\
        \ <note> <p>If the permission set is already referenced by one or more account\
        \ assignments, you will need to call <code> <a>ProvisionPermissionSet</a>\
        \ </code> after this operation. Calling <code>ProvisionPermissionSet</code>\
        \ applies the corresponding IAM policy updates to all assigned accounts.</p>\
        \ </note>"
      operationId: AttachManagedPolicyToPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.AttachManagedPolicyToPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachManagedPolicyToPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachManagedPolicyToPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.CreateAccountAssignment:
    post:
      description: "<p>Assigns access to a principal for a specified AWS account using\
        \ a specified permission set.</p> <note> <p>The term <i>principal</i> here\
        \ refers to a user or group that is defined in IAM Identity Center.</p> </note>\
        \ <note> <p>As part of a successful <code>CreateAccountAssignment</code> call,\
        \ the specified permission set will automatically be provisioned to the account\
        \ in the form of an IAM policy. That policy is attached to the IAM role created\
        \ in IAM Identity Center. If the permission set is subsequently updated, the\
        \ corresponding IAM policies attached to roles in your accounts will not be\
        \ updated automatically. In this case, you must call <code> <a>ProvisionPermissionSet</a>\
        \ </code> to make these updates.</p> </note> <note> <p> After a successful\
        \ response, call <code>DescribeAccountAssignmentCreationStatus</code> to describe\
        \ the status of an assignment creation request. </p> </note>"
      operationId: CreateAccountAssignment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.CreateAccountAssignment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountAssignmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.CreateInstanceAccessControlAttributeConfiguration:
    post:
      description: "<p>Enables the attributes-based access control (ABAC) feature\
        \ for the specified IAM Identity Center instance. You can also specify new\
        \ attributes to add to your ABAC configuration during the enabling process.\
        \ For more information about ABAC, see <a href=\"/singlesignon/latest/userguide/abac.html\"\
        >Attribute-Based Access Control</a> in the <i>IAM Identity Center User Guide</i>.</p>\
        \ <note> <p>After a successful response, call <code>DescribeInstanceAccessControlAttributeConfiguration</code>\
        \ to validate that <code>InstanceAccessControlAttributeConfiguration</code>\
        \ was created.</p> </note>"
      operationId: CreateInstanceAccessControlAttributeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.CreateInstanceAccessControlAttributeConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.CreatePermissionSet:
    post:
      description: "<p>Creates a permission set within a specified IAM Identity Center\
        \ instance.</p> <note> <p>To grant users and groups access to AWS account\
        \ resources, use <code> <a>CreateAccountAssignment</a> </code>.</p> </note>"
      operationId: CreatePermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.CreatePermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DeleteAccountAssignment:
    post:
      description: "<p>Deletes a principal's access from a specified AWS account using\
        \ a specified permission set.</p> <note> <p>After a successful response, call\
        \ <code>DescribeAccountAssignmentCreationStatus</code> to describe the status\
        \ of an assignment deletion request.</p> </note>"
      operationId: DeleteAccountAssignment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DeleteAccountAssignment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccountAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountAssignmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DeleteInlinePolicyFromPermissionSet:
    post:
      description: Deletes the inline policy from a specified permission set.
      operationId: DeleteInlinePolicyFromPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DeleteInlinePolicyFromPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInlinePolicyFromPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInlinePolicyFromPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DeleteInstanceAccessControlAttributeConfiguration:
    post:
      description: "Disables the attributes-based access control (ABAC) feature for\
        \ the specified IAM Identity Center instance and deletes all of the attribute\
        \ mappings that have been configured. Once deleted, any attributes that are\
        \ received from an identity source and any custom attributes you have previously\
        \ configured will not be passed. For more information about ABAC, see <a href=\"\
        /singlesignon/latest/userguide/abac.html\">Attribute-Based Access Control</a>\
        \ in the <i>IAM Identity Center User Guide</i>."
      operationId: DeleteInstanceAccessControlAttributeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DeleteInstanceAccessControlAttributeConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceAccessControlAttributeConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceAccessControlAttributeConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DeletePermissionSet:
    post:
      description: Deletes the specified permission set.
      operationId: DeletePermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DeletePermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DeletePermissionsBoundaryFromPermissionSet:
    post:
      description: Deletes the permissions boundary from a specified <a>PermissionSet</a>.
      operationId: DeletePermissionsBoundaryFromPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DeletePermissionsBoundaryFromPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionsBoundaryFromPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionsBoundaryFromPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DescribeAccountAssignmentCreationStatus:
    post:
      description: Describes the status of the assignment creation request.
      operationId: DescribeAccountAssignmentCreationStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DescribeAccountAssignmentCreationStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountAssignmentCreationStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountAssignmentCreationStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DescribeAccountAssignmentDeletionStatus:
    post:
      description: Describes the status of the assignment deletion request.
      operationId: DescribeAccountAssignmentDeletionStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DescribeAccountAssignmentDeletionStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountAssignmentDeletionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountAssignmentDeletionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DescribeInstanceAccessControlAttributeConfiguration:
    post:
      description: "Returns the list of IAM Identity Center identity store attributes\
        \ that have been configured to work with attributes-based access control (ABAC)\
        \ for the specified IAM Identity Center instance. This will not return attributes\
        \ configured and sent by an external identity provider. For more information\
        \ about ABAC, see <a href=\"/singlesignon/latest/userguide/abac.html\">Attribute-Based\
        \ Access Control</a> in the <i>IAM Identity Center User Guide</i>."
      operationId: DescribeInstanceAccessControlAttributeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DescribeInstanceAccessControlAttributeConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceAccessControlAttributeConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceAccessControlAttributeConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DescribePermissionSet:
    post:
      description: Gets the details of the permission set.
      operationId: DescribePermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DescribePermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DescribePermissionSetProvisioningStatus:
    post:
      description: Describes the status for the given permission set provisioning
        request.
      operationId: DescribePermissionSetProvisioningStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DescribePermissionSetProvisioningStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DetachCustomerManagedPolicyReferenceFromPermissionSet:
    post:
      description: Detaches the specified customer managed policy from the specified
        <a>PermissionSet</a>.
      operationId: DetachCustomerManagedPolicyReferenceFromPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DetachCustomerManagedPolicyReferenceFromPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachCustomerManagedPolicyReferenceFromPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachCustomerManagedPolicyReferenceFromPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.DetachManagedPolicyFromPermissionSet:
    post:
      description: Detaches the attached AWS managed policy ARN from the specified
        permission set.
      operationId: DetachManagedPolicyFromPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.DetachManagedPolicyFromPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachManagedPolicyFromPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachManagedPolicyFromPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.GetInlinePolicyForPermissionSet:
    post:
      description: Obtains the inline policy assigned to the permission set.
      operationId: GetInlinePolicyForPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.GetInlinePolicyForPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInlinePolicyForPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInlinePolicyForPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.GetPermissionsBoundaryForPermissionSet:
    post:
      description: Obtains the permissions boundary for a specified <a>PermissionSet</a>.
      operationId: GetPermissionsBoundaryForPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.GetPermissionsBoundaryForPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPermissionsBoundaryForPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsBoundaryForPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListAccountAssignmentCreationStatus:
    post:
      description: Lists the status of the AWS account assignment creation requests
        for a specified IAM Identity Center instance.
      operationId: ListAccountAssignmentCreationStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListAccountAssignmentCreationStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentCreationStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentCreationStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListAccountAssignmentDeletionStatus:
    post:
      description: Lists the status of the AWS account assignment deletion requests
        for a specified IAM Identity Center instance.
      operationId: ListAccountAssignmentDeletionStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListAccountAssignmentDeletionStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentDeletionStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentDeletionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListAccountAssignments:
    post:
      description: Lists the assignee of the specified AWS account with the specified
        permission set.
      operationId: ListAccountAssignments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListAccountAssignments
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountAssignmentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountAssignmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListAccountsForProvisionedPermissionSet:
    post:
      description: Lists all the AWS accounts where the specified permission set is
        provisioned.
      operationId: ListAccountsForProvisionedPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListAccountsForProvisionedPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountsForProvisionedPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsForProvisionedPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListCustomerManagedPolicyReferencesInPermissionSet:
    post:
      description: Lists all customer managed policies attached to a specified <a>PermissionSet</a>.
      operationId: ListCustomerManagedPolicyReferencesInPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListCustomerManagedPolicyReferencesInPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCustomerManagedPolicyReferencesInPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerManagedPolicyReferencesInPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListInstances:
    post:
      description: Lists the IAM Identity Center instances that the caller has access
        to.
      operationId: ListInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListManagedPoliciesInPermissionSet:
    post:
      description: Lists the AWS managed policy that is attached to a specified permission
        set.
      operationId: ListManagedPoliciesInPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListManagedPoliciesInPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagedPoliciesInPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagedPoliciesInPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListPermissionSetProvisioningStatus:
    post:
      description: Lists the status of the permission set provisioning requests for
        a specified IAM Identity Center instance.
      operationId: ListPermissionSetProvisioningStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListPermissionSetProvisioningStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetProvisioningStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetProvisioningStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListPermissionSets:
    post:
      description: Lists the <a>PermissionSet</a>s in an IAM Identity Center instance.
      operationId: ListPermissionSets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListPermissionSets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListPermissionSetsProvisionedToAccount:
    post:
      description: Lists all the permission sets that are provisioned to a specified
        AWS account.
      operationId: ListPermissionSetsProvisionedToAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListPermissionSetsProvisionedToAccount
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPermissionSetsProvisionedToAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionSetsProvisionedToAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ListTagsForResource:
    post:
      description: Lists the tags that are attached to a specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.ProvisionPermissionSet:
    post:
      description: The process by which a specified permission set is provisioned
        to the specified target.
      operationId: ProvisionPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.ProvisionPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.PutInlinePolicyToPermissionSet:
    post:
      description: "<p>Attaches an inline policy to a permission set.</p> <note> <p>If\
        \ the permission set is already referenced by one or more account assignments,\
        \ you will need to call <code> <a>ProvisionPermissionSet</a> </code> after\
        \ this action to apply the corresponding IAM policy updates to all assigned\
        \ accounts.</p> </note>"
      operationId: PutInlinePolicyToPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.PutInlinePolicyToPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInlinePolicyToPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInlinePolicyToPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.PutPermissionsBoundaryToPermissionSet:
    post:
      description: Attaches an AWS managed or customer managed policy to the specified
        <a>PermissionSet</a> as a permissions boundary.
      operationId: PutPermissionsBoundaryToPermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.PutPermissionsBoundaryToPermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionsBoundaryToPermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPermissionsBoundaryToPermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.TagResource:
    post:
      description: Associates a set of tags with a specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.UntagResource:
    post:
      description: Disassociates a set of tags from a specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.UpdateInstanceAccessControlAttributeConfiguration:
    post:
      description: "Updates the IAM Identity Center identity store attributes that\
        \ you can use with the IAM Identity Center instance for attributes-based access\
        \ control (ABAC). When using an external identity provider as an identity\
        \ source, you can pass attributes through the SAML assertion as an alternative\
        \ to configuring attributes from the IAM Identity Center identity store. If\
        \ a SAML assertion passes any of these attributes, IAM Identity Center replaces\
        \ the attribute value with the value from the IAM Identity Center identity\
        \ store. For more information about ABAC, see <a href=\"/singlesignon/latest/userguide/abac.html\"\
        >Attribute-Based Access Control</a> in the <i>IAM Identity Center User Guide</i>."
      operationId: UpdateInstanceAccessControlAttributeConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.UpdateInstanceAccessControlAttributeConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceAccessControlAttributeConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInstanceAccessControlAttributeConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=SWBExternalService.UpdatePermissionSet:
    post:
      description: Updates an existing permission set.
      operationId: UpdatePermissionSet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SWBExternalService.UpdatePermissionSet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AttachCustomerManagedPolicyReferenceToPermissionSetResponse:
      properties: {}
      type: object
    AttachCustomerManagedPolicyReferenceToPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
        CustomerManagedPolicyReference:
          Path: ""
          Name: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <code>PermissionSet</code>.
        CustomerManagedPolicyReference:
          $ref: '#/components/schemas/AttachCustomerManagedPolicyReferenceToPermissionSetRequest_CustomerManagedPolicyReference'
      required:
      - CustomerManagedPolicyReference
      - InstanceArn
      - PermissionSetArn
      title: AttachCustomerManagedPolicyReferenceToPermissionSetRequest
      type: object
    ResourceNotFoundException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    ConflictException: {}
    AttachManagedPolicyToPermissionSetResponse:
      properties: {}
      type: object
    AttachManagedPolicyToPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
        ManagedPolicyArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <a>PermissionSet</a> that the managed policy
              should be attached to.
        ManagedPolicyArn:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyArn'
          - description: The AWS managed policy ARN to be attached to a permission
              set.
      required:
      - InstanceArn
      - ManagedPolicyArn
      - PermissionSetArn
      title: AttachManagedPolicyToPermissionSetRequest
      type: object
    CreateAccountAssignmentResponse:
      example:
        AccountAssignmentCreationStatus:
          Status: ""
          RequestId: ""
          PrincipalId: ""
          FailureReason: ""
          TargetType: ""
          CreatedDate: ""
          PermissionSetArn: ""
          PrincipalType: ""
          TargetId: ""
      properties:
        AccountAssignmentCreationStatus:
          $ref: '#/components/schemas/CreateAccountAssignmentResponse_AccountAssignmentCreationStatus'
      type: object
    CreateAccountAssignmentRequest:
      example:
        PrincipalId: ""
        InstanceArn: ""
        TargetType: ""
        PermissionSetArn: ""
        PrincipalType: ""
        TargetId: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: "TargetID is an AWS account identifier, typically a 10-12\
              \ digit string (For example, 123456789012)."
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: The entity type for which the assignment will be created.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set that the admin wants to grant
              the principal access to.
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The entity type for which the assignment will be created.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          - description: "An identifier for an object in IAM Identity Center, such\
              \ as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).\
              \ For more information about PrincipalIds in IAM Identity Center, see\
              \ the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\"\
              >IAM Identity Center Identity Store API Reference</a>."
      required:
      - InstanceArn
      - PermissionSetArn
      - PrincipalId
      - PrincipalType
      - TargetId
      - TargetType
      title: CreateAccountAssignmentRequest
      type: object
    CreateInstanceAccessControlAttributeConfigurationResponse:
      properties: {}
      type: object
    CreateInstanceAccessControlAttributeConfigurationRequest:
      example:
        InstanceAccessControlAttributeConfiguration:
          AccessControlAttributes: ""
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: The ARN of the IAM Identity Center instance under which the
              operation will be executed.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationRequest_InstanceAccessControlAttributeConfiguration'
      required:
      - InstanceAccessControlAttributeConfiguration
      - InstanceArn
      title: CreateInstanceAccessControlAttributeConfigurationRequest
      type: object
    CreatePermissionSetResponse:
      example:
        PermissionSet:
          SessionDuration: ""
          Description: ""
          RelayState: ""
          CreatedDate: ""
          PermissionSetArn: ""
          Name: ""
      properties:
        PermissionSet:
          $ref: '#/components/schemas/CreatePermissionSetResponse_PermissionSet'
      type: object
    CreatePermissionSetRequest:
      example:
        SessionDuration: ""
        Description: ""
        RelayState: ""
        InstanceArn: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PermissionSetName'
          - description: The name of the <a>PermissionSet</a>.
        Description:
          allOf:
          - $ref: '#/components/schemas/PermissionSetDescription'
          - description: The description of the <a>PermissionSet</a>.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        SessionDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: The length of time that the application user sessions are
              valid in the ISO-8601 standard.
        RelayState:
          allOf:
          - $ref: '#/components/schemas/RelayState'
          - description: Used to redirect users within the application during the
              federation authentication process.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to attach to the new <a>PermissionSet</a>.
      required:
      - InstanceArn
      - Name
      title: CreatePermissionSetRequest
      type: object
    DeleteAccountAssignmentResponse:
      example:
        AccountAssignmentDeletionStatus:
          Status: ""
          RequestId: ""
          PrincipalId: ""
          FailureReason: ""
          TargetType: ""
          CreatedDate: ""
          PermissionSetArn: ""
          PrincipalType: ""
          TargetId: ""
      properties:
        AccountAssignmentDeletionStatus:
          $ref: '#/components/schemas/DeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus'
      type: object
    DeleteAccountAssignmentRequest:
      example:
        PrincipalId: ""
        InstanceArn: ""
        TargetType: ""
        PermissionSetArn: ""
        PrincipalType: ""
        TargetId: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: "TargetID is an AWS account identifier, typically a 10-12\
              \ digit string (For example, 123456789012)."
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: The entity type for which the assignment will be deleted.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set that will be used to remove
              access.
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The entity type for which the assignment will be deleted.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          - description: "An identifier for an object in IAM Identity Center, such\
              \ as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).\
              \ For more information about PrincipalIds in IAM Identity Center, see\
              \ the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\"\
              >IAM Identity Center Identity Store API Reference</a>."
      required:
      - InstanceArn
      - PermissionSetArn
      - PrincipalId
      - PrincipalType
      - TargetId
      - TargetType
      title: DeleteAccountAssignmentRequest
      type: object
    DeleteInlinePolicyFromPermissionSetResponse:
      properties: {}
      type: object
    DeleteInlinePolicyFromPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set that will be used to remove
              access.
      required:
      - InstanceArn
      - PermissionSetArn
      title: DeleteInlinePolicyFromPermissionSetRequest
      type: object
    DeleteInstanceAccessControlAttributeConfigurationResponse:
      properties: {}
      type: object
    DeleteInstanceAccessControlAttributeConfigurationRequest:
      example:
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: The ARN of the IAM Identity Center instance under which the
              operation will be executed.
      required:
      - InstanceArn
      title: DeleteInstanceAccessControlAttributeConfigurationRequest
      type: object
    DeletePermissionSetResponse:
      properties: {}
      type: object
    DeletePermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set that should be deleted.
      required:
      - InstanceArn
      - PermissionSetArn
      title: DeletePermissionSetRequest
      type: object
    DeletePermissionsBoundaryFromPermissionSetResponse:
      properties: {}
      type: object
    DeletePermissionsBoundaryFromPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <code>PermissionSet</code>.
      required:
      - InstanceArn
      - PermissionSetArn
      title: DeletePermissionsBoundaryFromPermissionSetRequest
      type: object
    DescribeAccountAssignmentCreationStatusResponse:
      example:
        AccountAssignmentCreationStatus:
          Status: ""
          RequestId: ""
          PrincipalId: ""
          FailureReason: ""
          TargetType: ""
          CreatedDate: ""
          PermissionSetArn: ""
          PrincipalType: ""
          TargetId: ""
      properties:
        AccountAssignmentCreationStatus:
          $ref: '#/components/schemas/CreateAccountAssignmentResponse_AccountAssignmentCreationStatus'
      type: object
    DescribeAccountAssignmentCreationStatusRequest:
      example:
        AccountAssignmentCreationRequestId: ""
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        AccountAssignmentCreationRequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier that is used to track the request operation
              progress.
      required:
      - AccountAssignmentCreationRequestId
      - InstanceArn
      title: DescribeAccountAssignmentCreationStatusRequest
      type: object
    DescribeAccountAssignmentDeletionStatusResponse:
      example:
        AccountAssignmentDeletionStatus:
          Status: ""
          RequestId: ""
          PrincipalId: ""
          FailureReason: ""
          TargetType: ""
          CreatedDate: ""
          PermissionSetArn: ""
          PrincipalType: ""
          TargetId: ""
      properties:
        AccountAssignmentDeletionStatus:
          $ref: '#/components/schemas/DeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus'
      type: object
    DescribeAccountAssignmentDeletionStatusRequest:
      example:
        InstanceArn: ""
        AccountAssignmentDeletionRequestId: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        AccountAssignmentDeletionRequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier that is used to track the request operation
              progress.
      required:
      - AccountAssignmentDeletionRequestId
      - InstanceArn
      title: DescribeAccountAssignmentDeletionStatusRequest
      type: object
    DescribeInstanceAccessControlAttributeConfigurationResponse:
      example:
        Status: ""
        InstanceAccessControlAttributeConfiguration:
          AccessControlAttributes: ""
        StatusReason: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/InstanceAccessControlAttributeConfigurationStatus'
          - description: The status of the attribute configuration process.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/InstanceAccessControlAttributeConfigurationStatusReason'
          - description: Provides more details about the current status of the specified
              attribute.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/DescribeInstanceAccessControlAttributeConfigurationResponse_InstanceAccessControlAttributeConfiguration'
      type: object
    DescribeInstanceAccessControlAttributeConfigurationRequest:
      example:
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: The ARN of the IAM Identity Center instance under which the
              operation will be executed.
      required:
      - InstanceArn
      title: DescribeInstanceAccessControlAttributeConfigurationRequest
      type: object
    DescribePermissionSetResponse:
      example:
        PermissionSet:
          SessionDuration: ""
          Description: ""
          RelayState: ""
          CreatedDate: ""
          PermissionSetArn: ""
          Name: ""
      properties:
        PermissionSet:
          $ref: '#/components/schemas/DescribePermissionSetResponse_PermissionSet'
      type: object
    DescribePermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: 'The ARN of the permission set. '
      required:
      - InstanceArn
      - PermissionSetArn
      title: DescribePermissionSetRequest
      type: object
    DescribePermissionSetProvisioningStatusResponse:
      example:
        PermissionSetProvisioningStatus:
          Status: ""
          AccountId: ""
          RequestId: ""
          FailureReason: ""
          CreatedDate: ""
          PermissionSetArn: ""
      properties:
        PermissionSetProvisioningStatus:
          $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusResponse_PermissionSetProvisioningStatus'
      type: object
    DescribePermissionSetProvisioningStatusRequest:
      example:
        InstanceArn: ""
        ProvisionPermissionSetRequestId: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        ProvisionPermissionSetRequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier that is provided by the <a>ProvisionPermissionSet</a>
              call to retrieve the current status of the provisioning workflow.
      required:
      - InstanceArn
      - ProvisionPermissionSetRequestId
      title: DescribePermissionSetProvisioningStatusRequest
      type: object
    DetachCustomerManagedPolicyReferenceFromPermissionSetResponse:
      properties: {}
      type: object
    DetachCustomerManagedPolicyReferenceFromPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
        CustomerManagedPolicyReference:
          Path: ""
          Name: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <code>PermissionSet</code>.
        CustomerManagedPolicyReference:
          $ref: '#/components/schemas/AttachCustomerManagedPolicyReferenceToPermissionSetRequest_CustomerManagedPolicyReference'
      required:
      - CustomerManagedPolicyReference
      - InstanceArn
      - PermissionSetArn
      title: DetachCustomerManagedPolicyReferenceFromPermissionSetRequest
      type: object
    DetachManagedPolicyFromPermissionSetResponse:
      properties: {}
      type: object
    DetachManagedPolicyFromPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
        ManagedPolicyArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <a>PermissionSet</a> from which the policy
              should be detached.
        ManagedPolicyArn:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyArn'
          - description: The AWS managed policy ARN to be detached from a permission
              set.
      required:
      - InstanceArn
      - ManagedPolicyArn
      - PermissionSetArn
      title: DetachManagedPolicyFromPermissionSetRequest
      type: object
    GetInlinePolicyForPermissionSetResponse:
      example:
        InlinePolicy: ""
      properties:
        InlinePolicy:
          allOf:
          - $ref: '#/components/schemas/PermissionSetPolicyDocument'
          - description: The inline policy that is attached to the permission set.
      type: object
    GetInlinePolicyForPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set.
      required:
      - InstanceArn
      - PermissionSetArn
      title: GetInlinePolicyForPermissionSetRequest
      type: object
    GetPermissionsBoundaryForPermissionSetResponse:
      example:
        PermissionsBoundary:
          CustomerManagedPolicyReference:
            Path: ""
            Name: ""
          ManagedPolicyArn: ""
      properties:
        PermissionsBoundary:
          $ref: '#/components/schemas/GetPermissionsBoundaryForPermissionSetResponse_PermissionsBoundary'
      type: object
    GetPermissionsBoundaryForPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <code>PermissionSet</code>.
      required:
      - InstanceArn
      - PermissionSetArn
      title: GetPermissionsBoundaryForPermissionSetRequest
      type: object
    ListAccountAssignmentCreationStatusResponse:
      example:
        NextToken: ""
        AccountAssignmentsCreationStatus: ""
      properties:
        AccountAssignmentsCreationStatus:
          allOf:
          - $ref: '#/components/schemas/AccountAssignmentOperationStatusList'
          - description: The status object for the account assignment creation operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListAccountAssignmentCreationStatusRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
        InstanceArn: ""
        MaxResults: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/ListAccountAssignmentCreationStatusRequest_Filter'
      required:
      - InstanceArn
      title: ListAccountAssignmentCreationStatusRequest
      type: object
    ListAccountAssignmentDeletionStatusResponse:
      example:
        NextToken: ""
        AccountAssignmentsDeletionStatus: ""
      properties:
        AccountAssignmentsDeletionStatus:
          allOf:
          - $ref: '#/components/schemas/AccountAssignmentOperationStatusList'
          - description: The status object for the account assignment deletion operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListAccountAssignmentDeletionStatusRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
        InstanceArn: ""
        MaxResults: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/ListAccountAssignmentCreationStatusRequest_Filter'
      required:
      - InstanceArn
      title: ListAccountAssignmentDeletionStatusRequest
      type: object
    ListAccountAssignmentsResponse:
      example:
        NextToken: ""
        AccountAssignments: ""
      properties:
        AccountAssignments:
          allOf:
          - $ref: '#/components/schemas/AccountAssignmentList'
          - description: The list of assignments that match the input AWS account
              and permission set.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListAccountAssignmentsRequest:
      example:
        AccountId: ""
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        AccountId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: The identifier of the AWS account from which to list the
              assignments.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set from which to list assignments.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - AccountId
      - InstanceArn
      - PermissionSetArn
      title: ListAccountAssignmentsRequest
      type: object
    ListAccountsForProvisionedPermissionSetResponse:
      example:
        AccountIds: ""
        NextToken: ""
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: The list of AWS <code>AccountIds</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListAccountsForProvisionedPermissionSetRequest:
      example:
        ProvisioningStatus: ""
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <a>PermissionSet</a> from which the associated
              AWS accounts will be listed.
        ProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/ProvisioningStatus'
          - description: The permission set provisioning status for an AWS account.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the <a>PermissionSet</a>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - InstanceArn
      - PermissionSetArn
      title: ListAccountsForProvisionedPermissionSetRequest
      type: object
    ListCustomerManagedPolicyReferencesInPermissionSetResponse:
      example:
        CustomerManagedPolicyReferences: ""
        NextToken: ""
      properties:
        CustomerManagedPolicyReferences:
          allOf:
          - $ref: '#/components/schemas/CustomerManagedPolicyReferenceList'
          - description: Specifies the names and paths of the customer managed policies
              that you have attached to your permission set.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListCustomerManagedPolicyReferencesInPermissionSetRequest:
      example:
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: 'The ARN of the <code>PermissionSet</code>. '
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the list call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - InstanceArn
      - PermissionSetArn
      title: ListCustomerManagedPolicyReferencesInPermissionSetRequest
      type: object
    ListInstancesResponse:
      example:
        Instances: ""
        NextToken: ""
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceList'
          - description: Lists the IAM Identity Center instances that the caller has
              access to.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListInstancesRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      title: ListInstancesRequest
      type: object
    ListManagedPoliciesInPermissionSetResponse:
      example:
        AttachedManagedPolicies: ""
        NextToken: ""
      properties:
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/AttachedManagedPolicyList'
          - description: An array of the <a>AttachedManagedPolicy</a> data type object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListManagedPoliciesInPermissionSetRequest:
      example:
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <a>PermissionSet</a> whose managed policies
              will be listed.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the <a>PermissionSet</a>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - InstanceArn
      - PermissionSetArn
      title: ListManagedPoliciesInPermissionSetRequest
      type: object
    ListPermissionSetProvisioningStatusResponse:
      example:
        NextToken: ""
        PermissionSetsProvisioningStatus: ""
      properties:
        PermissionSetsProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionSetProvisioningStatusList'
          - description: The status object for the permission set provisioning operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListPermissionSetProvisioningStatusRequest:
      example:
        NextToken: ""
        Filter:
          Status: ""
        InstanceArn: ""
        MaxResults: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
        Filter:
          $ref: '#/components/schemas/ListAccountAssignmentCreationStatusRequest_Filter'
      required:
      - InstanceArn
      title: ListPermissionSetProvisioningStatusRequest
      type: object
    ListPermissionSetsResponse:
      example:
        NextToken: ""
        PermissionSets: ""
      properties:
        PermissionSets:
          allOf:
          - $ref: '#/components/schemas/PermissionSetList'
          - description: Defines the level of access on an AWS account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListPermissionSetsRequest:
      example:
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
      required:
      - InstanceArn
      title: ListPermissionSetsRequest
      type: object
    ListPermissionSetsProvisionedToAccountResponse:
      example:
        NextToken: ""
        PermissionSets: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
        PermissionSets:
          allOf:
          - $ref: '#/components/schemas/PermissionSetList'
          - description: Defines the level of access that an AWS account has.
      type: object
    ListPermissionSetsProvisionedToAccountRequest:
      example:
        ProvisioningStatus: ""
        AccountId: ""
        NextToken: ""
        InstanceArn: ""
        MaxResults: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The identifier of the AWS account from which to list the
              assignments.
        ProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/ProvisioningStatus'
          - description: The status object for the permission set provisioning operation.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to display for the assignment.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - AccountId
      - InstanceArn
      title: ListPermissionSetsProvisionedToAccountRequest
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A set of key-value pairs that are used to manage the resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceArn'
          - description: The ARN of the resource with the tags to be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: The pagination token for the list API. Initially the value
              is null. Use the output of previous API calls to make subsequent calls.
      required:
      - InstanceArn
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ProvisionPermissionSetResponse:
      example:
        PermissionSetProvisioningStatus:
          Status: ""
          AccountId: ""
          RequestId: ""
          FailureReason: ""
          CreatedDate: ""
          PermissionSetArn: ""
      properties:
        PermissionSetProvisioningStatus:
          $ref: '#/components/schemas/DescribePermissionSetProvisioningStatusResponse_PermissionSetProvisioningStatus'
      type: object
    ProvisionPermissionSetRequest:
      example:
        InstanceArn: ""
        TargetType: ""
        PermissionSetArn: ""
        TargetId: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set.
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: "TargetID is an AWS account identifier, typically a 10-12\
              \ digit string (For example, 123456789012)."
        TargetType:
          allOf:
          - $ref: '#/components/schemas/ProvisionTargetType'
          - description: The entity type for which the assignment will be created.
      required:
      - InstanceArn
      - PermissionSetArn
      - TargetType
      title: ProvisionPermissionSetRequest
      type: object
    PutInlinePolicyToPermissionSetResponse:
      properties: {}
      type: object
    PutInlinePolicyToPermissionSetRequest:
      example:
        InstanceArn: ""
        InlinePolicy: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set.
        InlinePolicy:
          allOf:
          - $ref: '#/components/schemas/PermissionSetPolicyDocument'
          - description: The inline policy to attach to a <a>PermissionSet</a>.
      required:
      - InlinePolicy
      - InstanceArn
      - PermissionSetArn
      title: PutInlinePolicyToPermissionSetRequest
      type: object
    PutPermissionsBoundaryToPermissionSetResponse:
      properties: {}
      type: object
    PutPermissionsBoundaryToPermissionSetRequest:
      example:
        InstanceArn: ""
        PermissionSetArn: ""
        PermissionsBoundary:
          CustomerManagedPolicyReference:
            Path: ""
            Name: ""
          ManagedPolicyArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: 'The ARN of the IAM Identity Center instance under which
              the operation will be executed. '
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the <code>PermissionSet</code>.
        PermissionsBoundary:
          $ref: '#/components/schemas/PutPermissionsBoundaryToPermissionSetRequest_PermissionsBoundary'
      required:
      - InstanceArn
      - PermissionSetArn
      - PermissionsBoundary
      title: PutPermissionsBoundaryToPermissionSetRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        InstanceArn: ""
        Tags: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceArn'
          - description: The ARN of the resource with the tags to be listed.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A set of key-value pairs that are used to manage the resource.
      required:
      - InstanceArn
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        InstanceArn: ""
        TagKeys: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourceArn'
          - description: The ARN of the resource with the tags to be listed.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The keys of tags that are attached to the resource.
      required:
      - InstanceArn
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateInstanceAccessControlAttributeConfigurationResponse:
      properties: {}
      type: object
    UpdateInstanceAccessControlAttributeConfigurationRequest:
      example:
        InstanceAccessControlAttributeConfiguration:
          AccessControlAttributes: ""
        InstanceArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: The ARN of the IAM Identity Center instance under which the
              operation will be executed.
        InstanceAccessControlAttributeConfiguration:
          $ref: '#/components/schemas/UpdateInstanceAccessControlAttributeConfigurationRequest_InstanceAccessControlAttributeConfiguration'
      required:
      - InstanceAccessControlAttributeConfiguration
      - InstanceArn
      title: UpdateInstanceAccessControlAttributeConfigurationRequest
      type: object
    UpdatePermissionSetResponse:
      properties: {}
      type: object
    UpdatePermissionSetRequest:
      example:
        SessionDuration: ""
        Description: ""
        RelayState: ""
        InstanceArn: ""
        PermissionSetArn: ""
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: The ARN of the permission set.
        Description:
          allOf:
          - $ref: '#/components/schemas/PermissionSetDescription'
          - description: The description of the <a>PermissionSet</a>.
        SessionDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: The length of time that the application user sessions are
              valid for in the ISO-8601 standard.
        RelayState:
          allOf:
          - $ref: '#/components/schemas/RelayState'
          - description: Used to redirect users within the application during the
              federation authentication process.
      required:
      - InstanceArn
      - PermissionSetArn
      title: UpdatePermissionSetRequest
      type: object
    AccessControlAttributeKey:
      maxLength: 128
      minLength: 1
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]+"
      type: string
    AccessControlAttributeValue:
      description: "The value used for mapping a specified attribute to an identity\
        \ source. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/attributemappingsconcept.html\"\
        >Attribute mappings</a> in the <i>IAM Identity Center User Guide</i>."
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/AccessControlAttributeValueSourceList'
          - description: The identity source to use when mapping a specified attribute
              to IAM Identity Center.
      required:
      - Source
      type: object
    AccessControlAttribute:
      description: "These are IAM Identity Center identity store attributes that you\
        \ can configure for use in attributes-based access control (ABAC). You can\
        \ create permissions policies that determine who can access your AWS resources\
        \ based upon the configured attribute values. When you enable ABAC and specify\
        \ <code>AccessControlAttributes</code>, IAM Identity Center passes the attribute\
        \ values of the authenticated user into IAM for use in policy evaluation."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AccessControlAttributeKey'
          - description: The name of the attribute associated with your identities
              in your identity source. This is used to map a specified attribute in
              your identity source with an attribute in IAM Identity Center.
        Value:
          $ref: '#/components/schemas/AccessControlAttribute_Value'
      required:
      - Key
      - Value
      type: object
    AccessControlAttributeList:
      items:
        $ref: '#/components/schemas/AccessControlAttribute'
      maxItems: 50
      minItems: 0
      type: array
    AccessControlAttributeValueSourceList:
      items:
        $ref: '#/components/schemas/AccessControlAttributeValueSource'
      maxItems: 1
      minItems: 1
      type: array
    AccessControlAttributeValueSource:
      maxLength: 256
      minLength: 0
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@\\[\\]\\{\\}\\$\\\\\"]*"
      type: string
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "\\d{12}"
      type: string
    PermissionSetArn:
      maxLength: 1224
      minLength: 10
      pattern: "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}"
      type: string
    PrincipalType:
      enum:
      - USER
      - GROUP
      type: string
    PrincipalId:
      maxLength: 47
      minLength: 1
      pattern: "^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
      type: string
    AccountAssignment:
      description: <p>The assignment that indicates a principal's limited access to
        a specified AWS account with a specified permission set.</p> <note> <p>The
        term <i>principal</i> here refers to a user or group that is defined in IAM
        Identity Center.</p> </note>
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The identifier of the AWS account.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: "The ARN of the permission set. For more information about\
              \ ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the\
              \ <i>AWS General Reference</i>."
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The entity type for which the assignment will be created.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          - description: "An identifier for an object in IAM Identity Center, such\
              \ as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).\
              \ For more information about PrincipalIds in IAM Identity Center, see\
              \ the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\"\
              >IAM Identity Center Identity Store API Reference</a>."
      type: object
    AccountAssignmentList:
      items:
        $ref: '#/components/schemas/AccountAssignment'
      type: array
    StatusValues:
      enum:
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
      type: string
    UUId:
      maxLength: 36
      minLength: 36
      pattern: "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\\
        b"
      type: string
    Reason:
      pattern: "[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*"
      type: string
    TargetId:
      maxLength: 12
      minLength: 12
      pattern: "\\d{12}"
      type: string
    TargetType:
      enum:
      - AWS_ACCOUNT
      type: string
    Date:
      format: date-time
      type: string
    AccountAssignmentOperationStatus:
      description: The status of the creation or deletion operation of an assignment
        that a principal needs to access an account.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusValues'
          - description: The status of the permission set provisioning process.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier for tracking the request operation that is
              generated by the universally unique identifier (UUID) workflow.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/Reason'
          - description: The message that contains an error or exception in case of
              an operation failure.
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: "TargetID is an AWS account identifier, typically a 10-12\
              \ digit string (For example, 123456789012)."
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: The entity type for which the assignment will be created.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: "The ARN of the permission set. For more information about\
              \ ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the\
              \ <i>AWS General Reference</i>."
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          - description: The entity type for which the assignment will be created.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          - description: "An identifier for an object in IAM Identity Center, such\
              \ as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).\
              \ For more information about PrincipalIds in IAM Identity Center, see\
              \ the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\"\
              >IAM Identity Center Identity Store API Reference</a>."
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date that the permission set was created.
      type: object
    AccountAssignmentOperationStatusMetadata:
      description: Provides information about the <a>AccountAssignment</a> creation
        request.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusValues'
          - description: The status of the permission set provisioning process.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier for tracking the request operation that is
              generated by the universally unique identifier (UUID) workflow.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date that the permission set was created.
      type: object
    AccountAssignmentOperationStatusList:
      items:
        $ref: '#/components/schemas/AccountAssignmentOperationStatusMetadata'
      type: array
    AccountList:
      items:
        $ref: '#/components/schemas/AccountId'
      type: array
    InstanceArn:
      maxLength: 1224
      minLength: 10
      pattern: "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}"
      type: string
    CustomerManagedPolicyReference:
      description: Specifies the name and path of a customer managed policy. You must
        have an IAM policy that matches the name and path in each AWS account where
        you want to deploy your permission set.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyName'
          - description: The name of the IAM policy that you have configured in each
              account where you want to deploy your permission set.
        Path:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyPath'
          - description: "The path to the IAM policy that you have configured in each\
              \ account where you want to deploy your permission set. The default\
              \ is <code>/</code>. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names\"\
              >Friendly names and paths</a> in the <i>IAM User Guide</i>."
      required:
      - Name
      type: object
    ManagedPolicyArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::aws:policy/[\\\
        p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]+"
      type: string
    Name:
      maxLength: 100
      minLength: 1
      type: string
    AttachedManagedPolicy:
      description: A structure that stores the details of the AWS managed policy.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the AWS managed policy.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyArn'
          - description: "The ARN of the AWS managed policy. For more information\
              \ about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the\
              \ <i>AWS General Reference</i>."
      type: object
    AttachedManagedPolicyList:
      items:
        $ref: '#/components/schemas/AttachedManagedPolicy'
      type: array
    InstanceAccessControlAttributeConfiguration:
      description: Specifies the attributes to add to your attribute-based access
        control (ABAC) configuration.
      properties:
        AccessControlAttributes:
          allOf:
          - $ref: '#/components/schemas/AccessControlAttributeList'
          - description: Lists the attributes that are configured for ABAC in the
              specified IAM Identity Center instance.
      required:
      - AccessControlAttributes
      type: object
    PermissionSetName:
      maxLength: 32
      minLength: 1
      pattern: "[\\w+=,.@-]+"
      type: string
    PermissionSetDescription:
      maxLength: 700
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A0-\\u00FF]*"
      type: string
    Duration:
      maxLength: 100
      minLength: 1
      pattern: "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\\
        d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$"
      type: string
    RelayState:
      maxLength: 240
      minLength: 1
      pattern: "[a-zA-Z0-9&$@#\\\\\\/%?=~\\-_'\"|!:,.;*+\\[\\]\\ \\(\\)\\{\\}]+"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    PermissionSet:
      description: An entity that contains IAM policies.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PermissionSetName'
          - description: The name of the permission set.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: "The ARN of the permission set. For more information about\
              \ ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the\
              \ <i>AWS General Reference</i>."
        Description:
          allOf:
          - $ref: '#/components/schemas/PermissionSetDescription'
          - description: The description of the <a>PermissionSet</a>.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date that the permission set was created.
        SessionDuration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: The length of time that the application user sessions are
              valid for in the ISO-8601 standard.
        RelayState:
          allOf:
          - $ref: '#/components/schemas/RelayState'
          - description: Used to redirect users within the application during the
              federation authentication process.
      type: object
    ManagedPolicyName:
      maxLength: 128
      minLength: 1
      pattern: "[\\w+=,.@-]+"
      type: string
    ManagedPolicyPath:
      maxLength: 512
      minLength: 1
      pattern: "((/[A-Za-z0-9\\.,\\+@=_-]+)*)/"
      type: string
    CustomerManagedPolicyReferenceList:
      items:
        $ref: '#/components/schemas/CustomerManagedPolicyReference'
      type: array
    InstanceAccessControlAttributeConfigurationStatus:
      enum:
      - ENABLED
      - CREATION_IN_PROGRESS
      - CREATION_FAILED
      type: string
    InstanceAccessControlAttributeConfigurationStatusReason:
      type: string
    PermissionSetProvisioningStatus:
      description: A structure that is used to provide the status of the provisioning
        operation for a specified permission set.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusValues'
          - description: The status of the permission set provisioning process.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier for tracking the request operation that is
              generated by the universally unique identifier (UUID) workflow.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The identifier of the AWS account from which to list the
              assignments.
        PermissionSetArn:
          allOf:
          - $ref: '#/components/schemas/PermissionSetArn'
          - description: "The ARN of the permission set that is being provisioned.\
              \ For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the\
              \ <i>AWS General Reference</i>."
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/Reason'
          - description: The message that contains an error or exception in case of
              an operation failure.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date that the permission set was created.
      type: object
    PermissionSetPolicyDocument:
      maxLength: 10240
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
      type: string
    PermissionsBoundary:
      description: "<p>Specifies the configuration of the AWS managed or customer\
        \ managed policy that you want to set as a permissions boundary. Specify either\
        \ <code>CustomerManagedPolicyReference</code> to use the name and path of\
        \ a customer managed policy, or <code>ManagedPolicyArn</code> to use the ARN\
        \ of an AWS managed policy. A permissions boundary represents the maximum\
        \ permissions that any policy can grant your role. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\"\
        >Permissions boundaries for IAM entities</a> in the <i>IAM User Guide</i>.</p>\
        \ <important> <p>Policies used as permissions boundaries don't provide permissions.\
        \ You must also attach an IAM policy to the role. To learn how the effective\
        \ permissions for a role are evaluated, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html\"\
        >IAM JSON policy evaluation logic</a> in the <i>IAM User Guide</i>.</p> </important>"
      properties:
        CustomerManagedPolicyReference:
          $ref: '#/components/schemas/AttachCustomerManagedPolicyReferenceToPermissionSetRequest_CustomerManagedPolicyReference'
        ManagedPolicyArn:
          allOf:
          - $ref: '#/components/schemas/ManagedPolicyArn'
          - description: The AWS managed policy ARN that you want to attach to a permission
              set as a permissions boundary.
      type: object
    Id:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-]*"
      type: string
    InstanceMetadata:
      description: Provides information about the IAM Identity Center instance.
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          - description: "The ARN of the IAM Identity Center instance under which\
              \ the operation will be executed. For more information about ARNs, see\
              \ <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\
              \ Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS\
              \ General Reference</i>."
        IdentityStoreId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The identifier of the identity store that is connected to
              the IAM Identity Center instance.
      type: object
    InstanceList:
      items:
        $ref: '#/components/schemas/InstanceMetadata'
      type: array
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    Token:
      maxLength: 2048
      pattern: "^[-a-zA-Z0-9+=/_]*"
      type: string
    OperationStatusFilter:
      description: Filters he operation status list based on the passed attribute
        value.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusValues'
          - description: Filters the list operations result based on the status attribute.
      type: object
    ProvisioningStatus:
      enum:
      - LATEST_PERMISSION_SET_PROVISIONED
      - LATEST_PERMISSION_SET_NOT_PROVISIONED
      type: string
    PermissionSetProvisioningStatusList:
      items:
        $ref: '#/components/schemas/PermissionSetProvisioningStatusMetadata'
      type: array
    PermissionSetList:
      items:
        $ref: '#/components/schemas/PermissionSetArn'
      type: array
    TaggableResourceArn:
      maxLength: 2048
      minLength: 10
      pattern: "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}"
      type: string
    PermissionSetProvisioningStatusMetadata:
      description: Provides information about the permission set provisioning status.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusValues'
          - description: The status of the permission set provisioning process.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/UUId'
          - description: The identifier for tracking the request operation that is
              generated by the universally unique identifier (UUID) workflow.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date that the permission set was created.
      type: object
    ProvisionTargetType:
      enum:
      - AWS_ACCOUNT
      - ALL_PROVISIONED_ACCOUNTS
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: A set of key-value pairs that are used to manage the resource.
        Tags can only be applied to permission sets and cannot be applied to corresponding
        roles that IAM Identity Center creates in AWS accounts.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key for the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag.
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    AttachCustomerManagedPolicyReferenceToPermissionSetRequest_CustomerManagedPolicyReference:
      allOf:
      - $ref: '#/components/schemas/CustomerManagedPolicyReference'
      - description: Specifies the name and path of a customer managed policy. You
          must have an IAM policy that matches the name and path in each AWS account
          where you want to deploy your permission set.
      example:
        Path: ""
        Name: ""
    CreateAccountAssignmentResponse_AccountAssignmentCreationStatus:
      allOf:
      - $ref: '#/components/schemas/AccountAssignmentOperationStatus'
      - description: The status object for the account assignment creation operation.
      example:
        Status: ""
        RequestId: ""
        PrincipalId: ""
        FailureReason: ""
        TargetType: ""
        CreatedDate: ""
        PermissionSetArn: ""
        PrincipalType: ""
        TargetId: ""
    CreateInstanceAccessControlAttributeConfigurationRequest_InstanceAccessControlAttributeConfiguration:
      allOf:
      - $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
      - description: "Specifies the IAM Identity Center identity store attributes\
          \ to add to your ABAC configuration. When using an external identity provider\
          \ as an identity source, you can pass attributes through the SAML assertion.\
          \ Doing so provides an alternative to configuring attributes from the IAM\
          \ Identity Center identity store. If a SAML assertion passes any of these\
          \ attributes, IAM Identity Center will replace the attribute value with\
          \ the value from the IAM Identity Center identity store."
      example:
        AccessControlAttributes: ""
    CreatePermissionSetResponse_PermissionSet:
      allOf:
      - $ref: '#/components/schemas/PermissionSet'
      - description: Defines the level of access on an AWS account.
      example:
        SessionDuration: ""
        Description: ""
        RelayState: ""
        CreatedDate: ""
        PermissionSetArn: ""
        Name: ""
    DeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus:
      allOf:
      - $ref: '#/components/schemas/AccountAssignmentOperationStatus'
      - description: The status object for the account assignment deletion operation.
      example:
        Status: ""
        RequestId: ""
        PrincipalId: ""
        FailureReason: ""
        TargetType: ""
        CreatedDate: ""
        PermissionSetArn: ""
        PrincipalType: ""
        TargetId: ""
    DescribeInstanceAccessControlAttributeConfigurationResponse_InstanceAccessControlAttributeConfiguration:
      allOf:
      - $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
      - description: Gets the list of IAM Identity Center identity store attributes
          that have been added to your ABAC configuration.
      example:
        AccessControlAttributes: ""
    DescribePermissionSetResponse_PermissionSet:
      allOf:
      - $ref: '#/components/schemas/PermissionSet'
      - description: Describes the level of access on an AWS account.
      example:
        SessionDuration: ""
        Description: ""
        RelayState: ""
        CreatedDate: ""
        PermissionSetArn: ""
        Name: ""
    DescribePermissionSetProvisioningStatusResponse_PermissionSetProvisioningStatus:
      allOf:
      - $ref: '#/components/schemas/PermissionSetProvisioningStatus'
      - description: The status object for the permission set provisioning operation.
      example:
        Status: ""
        AccountId: ""
        RequestId: ""
        FailureReason: ""
        CreatedDate: ""
        PermissionSetArn: ""
    GetPermissionsBoundaryForPermissionSetResponse_PermissionsBoundary:
      allOf:
      - $ref: '#/components/schemas/PermissionsBoundary'
      - description: The permissions boundary attached to the specified permission
          set.
      example:
        CustomerManagedPolicyReference:
          Path: ""
          Name: ""
        ManagedPolicyArn: ""
    ListAccountAssignmentCreationStatusRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/OperationStatusFilter'
      - description: Filters results based on the passed attribute value.
      example:
        Status: ""
    PutPermissionsBoundaryToPermissionSetRequest_PermissionsBoundary:
      allOf:
      - $ref: '#/components/schemas/PermissionsBoundary'
      - description: The permissions boundary that you want to attach to a <code>PermissionSet</code>.
      example:
        CustomerManagedPolicyReference:
          Path: ""
          Name: ""
        ManagedPolicyArn: ""
    UpdateInstanceAccessControlAttributeConfigurationRequest_InstanceAccessControlAttributeConfiguration:
      allOf:
      - $ref: '#/components/schemas/InstanceAccessControlAttributeConfiguration'
      - description: Updates the attributes for your ABAC configuration.
      example:
        AccessControlAttributes: ""
    AccessControlAttribute_Value:
      allOf:
      - $ref: '#/components/schemas/AccessControlAttributeValue'
      - description: The value used for mapping a specified attribute to an identity
          source.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

