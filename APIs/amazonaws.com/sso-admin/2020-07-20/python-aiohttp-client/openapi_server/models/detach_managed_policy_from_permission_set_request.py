# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetachManagedPolicyFromPermissionSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_arn: str=None, permission_set_arn: str=None, managed_policy_arn: str=None):
        """DetachManagedPolicyFromPermissionSetRequest - a model defined in OpenAPI

        :param instance_arn: The instance_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :param permission_set_arn: The permission_set_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :param managed_policy_arn: The managed_policy_arn of this DetachManagedPolicyFromPermissionSetRequest.
        """
        self.openapi_types = {
            'instance_arn': str,
            'permission_set_arn': str,
            'managed_policy_arn': str
        }

        self.attribute_map = {
            'instance_arn': 'InstanceArn',
            'permission_set_arn': 'PermissionSetArn',
            'managed_policy_arn': 'ManagedPolicyArn'
        }

        self._instance_arn = instance_arn
        self._permission_set_arn = permission_set_arn
        self._managed_policy_arn = managed_policy_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetachManagedPolicyFromPermissionSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetachManagedPolicyFromPermissionSetRequest of this DetachManagedPolicyFromPermissionSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_arn(self):
        """Gets the instance_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :return: The instance_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :rtype: str
        """
        return self._instance_arn

    @instance_arn.setter
    def instance_arn(self, instance_arn):
        """Sets the instance_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :param instance_arn: The instance_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :type instance_arn: str
        """
        if instance_arn is None:
            raise ValueError("Invalid value for `instance_arn`, must not be `None`")

        self._instance_arn = instance_arn

    @property
    def permission_set_arn(self):
        """Gets the permission_set_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :return: The permission_set_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :rtype: str
        """
        return self._permission_set_arn

    @permission_set_arn.setter
    def permission_set_arn(self, permission_set_arn):
        """Sets the permission_set_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :param permission_set_arn: The permission_set_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :type permission_set_arn: str
        """
        if permission_set_arn is None:
            raise ValueError("Invalid value for `permission_set_arn`, must not be `None`")

        self._permission_set_arn = permission_set_arn

    @property
    def managed_policy_arn(self):
        """Gets the managed_policy_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :return: The managed_policy_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :rtype: str
        """
        return self._managed_policy_arn

    @managed_policy_arn.setter
    def managed_policy_arn(self, managed_policy_arn):
        """Sets the managed_policy_arn of this DetachManagedPolicyFromPermissionSetRequest.


        :param managed_policy_arn: The managed_policy_arn of this DetachManagedPolicyFromPermissionSetRequest.
        :type managed_policy_arn: str
        """
        if managed_policy_arn is None:
            raise ValueError("Invalid value for `managed_policy_arn`, must not be `None`")

        self._managed_policy_arn = managed_policy_arn
