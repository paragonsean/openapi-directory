# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.principal_type import PrincipalType
from openapi_server import util


class AccountAssignment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, permission_set_arn: str=None, principal_type: PrincipalType=None, principal_id: str=None):
        """AccountAssignment - a model defined in OpenAPI

        :param account_id: The account_id of this AccountAssignment.
        :param permission_set_arn: The permission_set_arn of this AccountAssignment.
        :param principal_type: The principal_type of this AccountAssignment.
        :param principal_id: The principal_id of this AccountAssignment.
        """
        self.openapi_types = {
            'account_id': str,
            'permission_set_arn': str,
            'principal_type': PrincipalType,
            'principal_id': str
        }

        self.attribute_map = {
            'account_id': 'AccountId',
            'permission_set_arn': 'PermissionSetArn',
            'principal_type': 'PrincipalType',
            'principal_id': 'PrincipalId'
        }

        self._account_id = account_id
        self._permission_set_arn = permission_set_arn
        self._principal_type = principal_type
        self._principal_id = principal_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountAssignment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountAssignment of this AccountAssignment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this AccountAssignment.


        :return: The account_id of this AccountAssignment.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AccountAssignment.


        :param account_id: The account_id of this AccountAssignment.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def permission_set_arn(self):
        """Gets the permission_set_arn of this AccountAssignment.


        :return: The permission_set_arn of this AccountAssignment.
        :rtype: str
        """
        return self._permission_set_arn

    @permission_set_arn.setter
    def permission_set_arn(self, permission_set_arn):
        """Sets the permission_set_arn of this AccountAssignment.


        :param permission_set_arn: The permission_set_arn of this AccountAssignment.
        :type permission_set_arn: str
        """

        self._permission_set_arn = permission_set_arn

    @property
    def principal_type(self):
        """Gets the principal_type of this AccountAssignment.


        :return: The principal_type of this AccountAssignment.
        :rtype: PrincipalType
        """
        return self._principal_type

    @principal_type.setter
    def principal_type(self, principal_type):
        """Sets the principal_type of this AccountAssignment.


        :param principal_type: The principal_type of this AccountAssignment.
        :type principal_type: PrincipalType
        """

        self._principal_type = principal_type

    @property
    def principal_id(self):
        """Gets the principal_id of this AccountAssignment.


        :return: The principal_id of this AccountAssignment.
        :rtype: str
        """
        return self._principal_id

    @principal_id.setter
    def principal_id(self, principal_id):
        """Sets the principal_id of this AccountAssignment.


        :param principal_id: The principal_id of this AccountAssignment.
        :type principal_id: str
        """

        self._principal_id = principal_id
