# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provision_target_type import ProvisionTargetType
from openapi_server import util


class ProvisionPermissionSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_arn: str=None, permission_set_arn: str=None, target_id: str=None, target_type: ProvisionTargetType=None):
        """ProvisionPermissionSetRequest - a model defined in OpenAPI

        :param instance_arn: The instance_arn of this ProvisionPermissionSetRequest.
        :param permission_set_arn: The permission_set_arn of this ProvisionPermissionSetRequest.
        :param target_id: The target_id of this ProvisionPermissionSetRequest.
        :param target_type: The target_type of this ProvisionPermissionSetRequest.
        """
        self.openapi_types = {
            'instance_arn': str,
            'permission_set_arn': str,
            'target_id': str,
            'target_type': ProvisionTargetType
        }

        self.attribute_map = {
            'instance_arn': 'InstanceArn',
            'permission_set_arn': 'PermissionSetArn',
            'target_id': 'TargetId',
            'target_type': 'TargetType'
        }

        self._instance_arn = instance_arn
        self._permission_set_arn = permission_set_arn
        self._target_id = target_id
        self._target_type = target_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProvisionPermissionSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProvisionPermissionSetRequest of this ProvisionPermissionSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_arn(self):
        """Gets the instance_arn of this ProvisionPermissionSetRequest.


        :return: The instance_arn of this ProvisionPermissionSetRequest.
        :rtype: str
        """
        return self._instance_arn

    @instance_arn.setter
    def instance_arn(self, instance_arn):
        """Sets the instance_arn of this ProvisionPermissionSetRequest.


        :param instance_arn: The instance_arn of this ProvisionPermissionSetRequest.
        :type instance_arn: str
        """
        if instance_arn is None:
            raise ValueError("Invalid value for `instance_arn`, must not be `None`")

        self._instance_arn = instance_arn

    @property
    def permission_set_arn(self):
        """Gets the permission_set_arn of this ProvisionPermissionSetRequest.


        :return: The permission_set_arn of this ProvisionPermissionSetRequest.
        :rtype: str
        """
        return self._permission_set_arn

    @permission_set_arn.setter
    def permission_set_arn(self, permission_set_arn):
        """Sets the permission_set_arn of this ProvisionPermissionSetRequest.


        :param permission_set_arn: The permission_set_arn of this ProvisionPermissionSetRequest.
        :type permission_set_arn: str
        """
        if permission_set_arn is None:
            raise ValueError("Invalid value for `permission_set_arn`, must not be `None`")

        self._permission_set_arn = permission_set_arn

    @property
    def target_id(self):
        """Gets the target_id of this ProvisionPermissionSetRequest.


        :return: The target_id of this ProvisionPermissionSetRequest.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this ProvisionPermissionSetRequest.


        :param target_id: The target_id of this ProvisionPermissionSetRequest.
        :type target_id: str
        """

        self._target_id = target_id

    @property
    def target_type(self):
        """Gets the target_type of this ProvisionPermissionSetRequest.


        :return: The target_type of this ProvisionPermissionSetRequest.
        :rtype: ProvisionTargetType
        """
        return self._target_type

    @target_type.setter
    def target_type(self, target_type):
        """Sets the target_type of this ProvisionPermissionSetRequest.


        :param target_type: The target_type of this ProvisionPermissionSetRequest.
        :type target_type: ProvisionTargetType
        """
        if target_type is None:
            raise ValueError("Invalid value for `target_type`, must not be `None`")

        self._target_type = target_type
