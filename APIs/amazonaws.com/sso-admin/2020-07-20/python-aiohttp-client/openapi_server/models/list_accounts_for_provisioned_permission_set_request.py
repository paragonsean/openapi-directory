# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.provisioning_status import ProvisioningStatus
from openapi_server import util


class ListAccountsForProvisionedPermissionSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_arn: str=None, permission_set_arn: str=None, provisioning_status: ProvisioningStatus=None, max_results: int=None, next_token: str=None):
        """ListAccountsForProvisionedPermissionSetRequest - a model defined in OpenAPI

        :param instance_arn: The instance_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :param permission_set_arn: The permission_set_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :param provisioning_status: The provisioning_status of this ListAccountsForProvisionedPermissionSetRequest.
        :param max_results: The max_results of this ListAccountsForProvisionedPermissionSetRequest.
        :param next_token: The next_token of this ListAccountsForProvisionedPermissionSetRequest.
        """
        self.openapi_types = {
            'instance_arn': str,
            'permission_set_arn': str,
            'provisioning_status': ProvisioningStatus,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'instance_arn': 'InstanceArn',
            'permission_set_arn': 'PermissionSetArn',
            'provisioning_status': 'ProvisioningStatus',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._instance_arn = instance_arn
        self._permission_set_arn = permission_set_arn
        self._provisioning_status = provisioning_status
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAccountsForProvisionedPermissionSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAccountsForProvisionedPermissionSetRequest of this ListAccountsForProvisionedPermissionSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_arn(self):
        """Gets the instance_arn of this ListAccountsForProvisionedPermissionSetRequest.


        :return: The instance_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :rtype: str
        """
        return self._instance_arn

    @instance_arn.setter
    def instance_arn(self, instance_arn):
        """Sets the instance_arn of this ListAccountsForProvisionedPermissionSetRequest.


        :param instance_arn: The instance_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :type instance_arn: str
        """
        if instance_arn is None:
            raise ValueError("Invalid value for `instance_arn`, must not be `None`")

        self._instance_arn = instance_arn

    @property
    def permission_set_arn(self):
        """Gets the permission_set_arn of this ListAccountsForProvisionedPermissionSetRequest.


        :return: The permission_set_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :rtype: str
        """
        return self._permission_set_arn

    @permission_set_arn.setter
    def permission_set_arn(self, permission_set_arn):
        """Sets the permission_set_arn of this ListAccountsForProvisionedPermissionSetRequest.


        :param permission_set_arn: The permission_set_arn of this ListAccountsForProvisionedPermissionSetRequest.
        :type permission_set_arn: str
        """
        if permission_set_arn is None:
            raise ValueError("Invalid value for `permission_set_arn`, must not be `None`")

        self._permission_set_arn = permission_set_arn

    @property
    def provisioning_status(self):
        """Gets the provisioning_status of this ListAccountsForProvisionedPermissionSetRequest.


        :return: The provisioning_status of this ListAccountsForProvisionedPermissionSetRequest.
        :rtype: ProvisioningStatus
        """
        return self._provisioning_status

    @provisioning_status.setter
    def provisioning_status(self, provisioning_status):
        """Sets the provisioning_status of this ListAccountsForProvisionedPermissionSetRequest.


        :param provisioning_status: The provisioning_status of this ListAccountsForProvisionedPermissionSetRequest.
        :type provisioning_status: ProvisioningStatus
        """

        self._provisioning_status = provisioning_status

    @property
    def max_results(self):
        """Gets the max_results of this ListAccountsForProvisionedPermissionSetRequest.


        :return: The max_results of this ListAccountsForProvisionedPermissionSetRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListAccountsForProvisionedPermissionSetRequest.


        :param max_results: The max_results of this ListAccountsForProvisionedPermissionSetRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListAccountsForProvisionedPermissionSetRequest.


        :return: The next_token of this ListAccountsForProvisionedPermissionSetRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListAccountsForProvisionedPermissionSetRequest.


        :param next_token: The next_token of this ListAccountsForProvisionedPermissionSetRequest.
        :type next_token: str
        """

        self._next_token = next_token
