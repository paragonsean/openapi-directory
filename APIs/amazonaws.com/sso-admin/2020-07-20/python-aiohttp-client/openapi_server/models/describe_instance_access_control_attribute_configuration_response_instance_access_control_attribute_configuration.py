# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_control_attributes: List=None):
        """DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration - a model defined in OpenAPI

        :param access_control_attributes: The access_control_attributes of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.
        """
        self.openapi_types = {
            'access_control_attributes': List
        }

        self.attribute_map = {
            'access_control_attributes': 'AccessControlAttributes'
        }

        self._access_control_attributes = access_control_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeInstanceAccessControlAttributeConfigurationResponse_InstanceAccessControlAttributeConfiguration of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_control_attributes(self):
        """Gets the access_control_attributes of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.


        :return: The access_control_attributes of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.
        :rtype: List
        """
        return self._access_control_attributes

    @access_control_attributes.setter
    def access_control_attributes(self, access_control_attributes):
        """Sets the access_control_attributes of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.


        :param access_control_attributes: The access_control_attributes of this DescribeInstanceAccessControlAttributeConfigurationResponseInstanceAccessControlAttributeConfiguration.
        :type access_control_attributes: List
        """
        if access_control_attributes is None:
            raise ValueError("Invalid value for `access_control_attributes`, must not be `None`")

        self._access_control_attributes = access_control_attributes
