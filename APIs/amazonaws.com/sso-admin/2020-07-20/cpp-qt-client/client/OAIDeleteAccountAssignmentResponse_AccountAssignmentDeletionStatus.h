/**
 * AWS Single Sign-On Admin
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) helps you securely create, or connect, your workforce identities and manage their access centrally across AWS accounts and applications. IAM Identity Center is the recommended approach for workforce authentication and authorization in AWS, for organizations of any size and type.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide provides information on single sign-on operations which could be used for access management of AWS accounts. For information about IAM Identity Center features, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">IAM Identity Center User Guide</a>.</p> <p>Many operations in the IAM Identity Center APIs rely on identifiers for users and groups, known as principals. For more information about how to work with principals and principal IDs in IAM Identity Center, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Identity Store API Reference</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, and more). The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2020-07-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus.h
 *
 * 
 */

#ifndef OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus_H
#define OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus_H

#include <QJsonObject>

#include "OAIPrincipalType.h"
#include "OAIStatusValues.h"
#include "OAITargetType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus : public OAIObject {
public:
    OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus();
    OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus(QString json);
    ~OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStatusValues getStatus() const;
    void setStatus(const OAIStatusValues &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    OAITargetType getTargetType() const;
    void setTargetType(const OAITargetType &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    QString getPermissionSetArn() const;
    void setPermissionSetArn(const QString &permission_set_arn);
    bool is_permission_set_arn_Set() const;
    bool is_permission_set_arn_Valid() const;

    OAIPrincipalType getPrincipalType() const;
    void setPrincipalType(const OAIPrincipalType &principal_type);
    bool is_principal_type_Set() const;
    bool is_principal_type_Valid() const;

    QString getPrincipalId() const;
    void setPrincipalId(const QString &principal_id);
    bool is_principal_id_Set() const;
    bool is_principal_id_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStatusValues m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    OAITargetType m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;

    QString m_permission_set_arn;
    bool m_permission_set_arn_isSet;
    bool m_permission_set_arn_isValid;

    OAIPrincipalType m_principal_type;
    bool m_principal_type_isSet;
    bool m_principal_type_isValid;

    QString m_principal_id;
    bool m_principal_id_isSet;
    bool m_principal_id_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus)

#endif // OAIDeleteAccountAssignmentResponse_AccountAssignmentDeletionStatus_H
