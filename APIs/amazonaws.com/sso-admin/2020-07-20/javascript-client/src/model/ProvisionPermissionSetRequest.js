/**
 * AWS Single Sign-On Admin
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) helps you securely create, or connect, your workforce identities and manage their access centrally across AWS accounts and applications. IAM Identity Center is the recommended approach for workforce authentication and authorization in AWS, for organizations of any size and type.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p>This reference guide provides information on single sign-on operations which could be used for access management of AWS accounts. For information about IAM Identity Center features, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">IAM Identity Center User Guide</a>.</p> <p>Many operations in the IAM Identity Center APIs rely on identifiers for users and groups, known as principals. For more information about how to work with principals and principal IDs in IAM Identity Center, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Identity Store API Reference</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, and more). The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p> </note>
 *
 * The version of the OpenAPI document: 2020-07-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProvisionTargetType from './ProvisionTargetType';

/**
 * The ProvisionPermissionSetRequest model module.
 * @module model/ProvisionPermissionSetRequest
 * @version 2020-07-20
 */
class ProvisionPermissionSetRequest {
    /**
     * Constructs a new <code>ProvisionPermissionSetRequest</code>.
     * @alias module:model/ProvisionPermissionSetRequest
     * @param instanceArn {String} 
     * @param permissionSetArn {String} 
     * @param targetType {module:model/ProvisionTargetType} 
     */
    constructor(instanceArn, permissionSetArn, targetType) { 
        
        ProvisionPermissionSetRequest.initialize(this, instanceArn, permissionSetArn, targetType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceArn, permissionSetArn, targetType) { 
        obj['InstanceArn'] = instanceArn;
        obj['PermissionSetArn'] = permissionSetArn;
        obj['TargetType'] = targetType;
    }

    /**
     * Constructs a <code>ProvisionPermissionSetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProvisionPermissionSetRequest} obj Optional instance to populate.
     * @return {module:model/ProvisionPermissionSetRequest} The populated <code>ProvisionPermissionSetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProvisionPermissionSetRequest();

            if (data.hasOwnProperty('InstanceArn')) {
                obj['InstanceArn'] = ApiClient.convertToType(data['InstanceArn'], 'String');
            }
            if (data.hasOwnProperty('PermissionSetArn')) {
                obj['PermissionSetArn'] = ApiClient.convertToType(data['PermissionSetArn'], 'String');
            }
            if (data.hasOwnProperty('TargetId')) {
                obj['TargetId'] = ApiClient.convertToType(data['TargetId'], 'String');
            }
            if (data.hasOwnProperty('TargetType')) {
                obj['TargetType'] = ApiClient.convertToType(data['TargetType'], ProvisionTargetType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProvisionPermissionSetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProvisionPermissionSetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProvisionPermissionSetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InstanceArn`
        if (data['InstanceArn']) { // data not null
          String.validateJSON(data['InstanceArn']);
        }
        // validate the optional field `PermissionSetArn`
        if (data['PermissionSetArn']) { // data not null
          String.validateJSON(data['PermissionSetArn']);
        }
        // validate the optional field `TargetId`
        if (data['TargetId']) { // data not null
          String.validateJSON(data['TargetId']);
        }
        // validate the optional field `TargetType`
        if (data['TargetType']) { // data not null
          ProvisionTargetType.validateJSON(data['TargetType']);
        }

        return true;
    }


}

ProvisionPermissionSetRequest.RequiredProperties = ["InstanceArn", "PermissionSetArn", "TargetType"];

/**
 * @member {String} InstanceArn
 */
ProvisionPermissionSetRequest.prototype['InstanceArn'] = undefined;

/**
 * @member {String} PermissionSetArn
 */
ProvisionPermissionSetRequest.prototype['PermissionSetArn'] = undefined;

/**
 * @member {String} TargetId
 */
ProvisionPermissionSetRequest.prototype['TargetId'] = undefined;

/**
 * @member {module:model/ProvisionTargetType} TargetType
 */
ProvisionPermissionSetRequest.prototype['TargetType'] = undefined;






export default ProvisionPermissionSetRequest;

