/**
 * Amazon Managed Blockchain Query
 * Amazon Managed Blockchain (AMB) Query provides you with convenient access to multi-blockchain network data, which makes it easier for you to extract contextual data related to blockchain activity. You can use AMB Query to read data from public blockchain networks, such as Bitcoin Mainnet and Ethereum Mainnet. You can also get information such as the current and historical balances of addresses, or you can get a list of blockchain transactions for a given time period. Additionally, you can get details of a given transaction, such as transaction events, which you can further analyze or use in business logic for your applications.
 *
 * The version of the OpenAPI document: 2023-05-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListTokenBalances_request_tokenFilter.h
 *
 * &lt;p&gt;The container of the token filter like the contract address on a given blockchain network or a unique token identifier on a given blockchain network.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You must always specify the network property of this container when using this operation.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIListTokenBalances_request_tokenFilter_H
#define OAIListTokenBalances_request_tokenFilter_H

#include <QJsonObject>

#include "OAIQueryNetwork.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListTokenBalances_request_tokenFilter : public OAIObject {
public:
    OAIListTokenBalances_request_tokenFilter();
    OAIListTokenBalances_request_tokenFilter(QString json);
    ~OAIListTokenBalances_request_tokenFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQueryNetwork getNetwork() const;
    void setNetwork(const OAIQueryNetwork &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    QString getContractAddress() const;
    void setContractAddress(const QString &contract_address);
    bool is_contract_address_Set() const;
    bool is_contract_address_Valid() const;

    QString getTokenId() const;
    void setTokenId(const QString &token_id);
    bool is_token_id_Set() const;
    bool is_token_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQueryNetwork m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    QString m_contract_address;
    bool m_contract_address_isSet;
    bool m_contract_address_isValid;

    QString m_token_id;
    bool m_token_id_isSet;
    bool m_token_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListTokenBalances_request_tokenFilter)

#endif // OAIListTokenBalances_request_tokenFilter_H
