/**
 * Amazon Managed Blockchain Query
 * Amazon Managed Blockchain (AMB) Query provides you with convenient access to multi-blockchain network data, which makes it easier for you to extract contextual data related to blockchain activity. You can use AMB Query to read data from public blockchain networks, such as Bitcoin Mainnet and Ethereum Mainnet. You can also get information such as the current and historical balances of addresses, or you can get a list of blockchain transactions for a given time period. Additionally, you can get details of a given transaction, such as transaction events, which you can further analyze or use in business logic for your applications.
 *
 * The version of the OpenAPI document: 2023-05-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTokenBalanceRequestAtBlockchainInstant from './GetTokenBalanceRequestAtBlockchainInstant';
import ListTransactionsRequestSort from './ListTransactionsRequestSort';

/**
 * The ListTransactionsRequest model module.
 * @module model/ListTransactionsRequest
 * @version 2023-05-04
 */
class ListTransactionsRequest {
    /**
     * Constructs a new <code>ListTransactionsRequest</code>.
     * @alias module:model/ListTransactionsRequest
     * @param address {String} The address (either a contract or wallet), whose transactions are being requested.
     * @param network {module:model/ListTransactionsRequest.NetworkEnum} The blockchain network where the transactions occurred.
     */
    constructor(address, network) { 
        
        ListTransactionsRequest.initialize(this, address, network);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, network) { 
        obj['address'] = address;
        obj['network'] = network;
    }

    /**
     * Constructs a <code>ListTransactionsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTransactionsRequest} obj Optional instance to populate.
     * @return {module:model/ListTransactionsRequest} The populated <code>ListTransactionsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTransactionsRequest();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('fromBlockchainInstant')) {
                obj['fromBlockchainInstant'] = GetTokenBalanceRequestAtBlockchainInstant.constructFromObject(data['fromBlockchainInstant']);
            }
            if (data.hasOwnProperty('toBlockchainInstant')) {
                obj['toBlockchainInstant'] = GetTokenBalanceRequestAtBlockchainInstant.constructFromObject(data['toBlockchainInstant']);
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ListTransactionsRequestSort.constructFromObject(data['sort']);
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTransactionsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTransactionsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListTransactionsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // validate the optional field `fromBlockchainInstant`
        if (data['fromBlockchainInstant']) { // data not null
          GetTokenBalanceRequestAtBlockchainInstant.validateJSON(data['fromBlockchainInstant']);
        }
        // validate the optional field `toBlockchainInstant`
        if (data['toBlockchainInstant']) { // data not null
          GetTokenBalanceRequestAtBlockchainInstant.validateJSON(data['toBlockchainInstant']);
        }
        // validate the optional field `sort`
        if (data['sort']) { // data not null
          ListTransactionsRequestSort.validateJSON(data['sort']);
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}

ListTransactionsRequest.RequiredProperties = ["address", "network"];

/**
 * The address (either a contract or wallet), whose transactions are being requested.
 * @member {String} address
 */
ListTransactionsRequest.prototype['address'] = undefined;

/**
 * The blockchain network where the transactions occurred.
 * @member {module:model/ListTransactionsRequest.NetworkEnum} network
 */
ListTransactionsRequest.prototype['network'] = undefined;

/**
 * @member {module:model/GetTokenBalanceRequestAtBlockchainInstant} fromBlockchainInstant
 */
ListTransactionsRequest.prototype['fromBlockchainInstant'] = undefined;

/**
 * @member {module:model/GetTokenBalanceRequestAtBlockchainInstant} toBlockchainInstant
 */
ListTransactionsRequest.prototype['toBlockchainInstant'] = undefined;

/**
 * @member {module:model/ListTransactionsRequestSort} sort
 */
ListTransactionsRequest.prototype['sort'] = undefined;

/**
 * The pagination token that indicates the next set of results to retrieve.
 * @member {String} nextToken
 */
ListTransactionsRequest.prototype['nextToken'] = undefined;

/**
 * <p>The maximum number of transactions to list.</p> <note> <p>Even if additional results can be retrieved, the request can return less results than <code>maxResults</code> or an empty array of results.</p> <p>To retrieve the next set of results, make another request with the returned <code>nextToken</code> value. The value of <code>nextToken</code> is <code>null</code> when there are no more results to return</p> </note>
 * @member {Number} maxResults
 */
ListTransactionsRequest.prototype['maxResults'] = undefined;





/**
 * Allowed values for the <code>network</code> property.
 * @enum {String}
 * @readonly
 */
ListTransactionsRequest['NetworkEnum'] = {

    /**
     * value: "ETHEREUM_MAINNET"
     * @const
     */
    "ETHEREUM_MAINNET": "ETHEREUM_MAINNET",

    /**
     * value: "BITCOIN_MAINNET"
     * @const
     */
    "BITCOIN_MAINNET": "BITCOIN_MAINNET"
};



export default ListTransactionsRequest;

