/**
 * Amazon Managed Blockchain Query
 * Amazon Managed Blockchain (AMB) Query provides you with convenient access to multi-blockchain network data, which makes it easier for you to extract contextual data related to blockchain activity. You can use AMB Query to read data from public blockchain networks, such as Bitcoin Mainnet and Ethereum Mainnet. You can also get information such as the current and historical balances of addresses, or you can get a list of blockchain transactions for a given time period. Additionally, you can get details of a given transaction, such as transaction events, which you can further analyze or use in business logic for your applications.
 *
 * The version of the OpenAPI document: 2023-05-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchGetTokenBalanceOutput from '../model/BatchGetTokenBalanceOutput';
import BatchGetTokenBalanceRequest from '../model/BatchGetTokenBalanceRequest';
import GetTokenBalanceOutput from '../model/GetTokenBalanceOutput';
import GetTokenBalanceRequest from '../model/GetTokenBalanceRequest';
import GetTransactionOutput from '../model/GetTransactionOutput';
import GetTransactionRequest from '../model/GetTransactionRequest';
import ListTokenBalancesOutput from '../model/ListTokenBalancesOutput';
import ListTokenBalancesRequest from '../model/ListTokenBalancesRequest';
import ListTransactionEventsOutput from '../model/ListTransactionEventsOutput';
import ListTransactionEventsRequest from '../model/ListTransactionEventsRequest';
import ListTransactionsOutput from '../model/ListTransactionsOutput';
import ListTransactionsRequest from '../model/ListTransactionsRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2023-05-04
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the batchGetTokenBalance operation.
     * @callback module:api/DefaultApi~batchGetTokenBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetTokenBalanceOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the token balance for a batch of tokens by using the <code>GetTokenBalance</code> action for every token in the request.</p> <note> <p>Only the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p> </note>
     * @param {module:model/BatchGetTokenBalanceRequest} batchGetTokenBalanceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchGetTokenBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetTokenBalanceOutput}
     */
    batchGetTokenBalance(batchGetTokenBalanceRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchGetTokenBalanceRequest;
      // verify the required parameter 'batchGetTokenBalanceRequest' is set
      if (batchGetTokenBalanceRequest === undefined || batchGetTokenBalanceRequest === null) {
        throw new Error("Missing the required parameter 'batchGetTokenBalanceRequest' when calling batchGetTokenBalance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchGetTokenBalanceOutput;
      return this.apiClient.callApi(
        '/batch-get-token-balance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTokenBalance operation.
     * @callback module:api/DefaultApi~getTokenBalanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTokenBalanceOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the balance of a specific token, including native tokens, for a given address (wallet or contract) on the blockchain.</p> <note> <p>Only the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p> </note>
     * @param {module:model/GetTokenBalanceRequest} getTokenBalanceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getTokenBalanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTokenBalanceOutput}
     */
    getTokenBalance(getTokenBalanceRequest, opts, callback) {
      opts = opts || {};
      let postBody = getTokenBalanceRequest;
      // verify the required parameter 'getTokenBalanceRequest' is set
      if (getTokenBalanceRequest === undefined || getTokenBalanceRequest === null) {
        throw new Error("Missing the required parameter 'getTokenBalanceRequest' when calling getTokenBalance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetTokenBalanceOutput;
      return this.apiClient.callApi(
        '/get-token-balance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransaction operation.
     * @callback module:api/DefaultApi~getTransactionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTransactionOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details of a transaction.
     * @param {module:model/GetTransactionRequest} getTransactionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getTransactionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTransactionOutput}
     */
    getTransaction(getTransactionRequest, opts, callback) {
      opts = opts || {};
      let postBody = getTransactionRequest;
      // verify the required parameter 'getTransactionRequest' is set
      if (getTransactionRequest === undefined || getTransactionRequest === null) {
        throw new Error("Missing the required parameter 'getTransactionRequest' when calling getTransaction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetTransactionOutput;
      return this.apiClient.callApi(
        '/get-transaction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTokenBalances operation.
     * @callback module:api/DefaultApi~listTokenBalancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTokenBalancesOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>This action returns the following for a given a blockchain network:</p> <ul> <li> <p>Lists all token balances owned by an address (either a contact address or a wallet address).</p> </li> <li> <p>Lists all token balances for all tokens created by a contract.</p> </li> <li> <p>Lists all token balances for a given token.</p> </li> </ul> <note> <p>You must always specify the network property of the <code>tokenFilter</code> when using this operation.</p> </note>
     * @param {module:model/ListTokenBalancesRequest} listTokenBalancesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTokenBalancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTokenBalancesOutput}
     */
    listTokenBalances(listTokenBalancesRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTokenBalancesRequest;
      // verify the required parameter 'listTokenBalancesRequest' is set
      if (listTokenBalancesRequest === undefined || listTokenBalancesRequest === null) {
        throw new Error("Missing the required parameter 'listTokenBalancesRequest' when calling listTokenBalances");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTokenBalancesOutput;
      return this.apiClient.callApi(
        '/list-token-balances', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTransactionEvents operation.
     * @callback module:api/DefaultApi~listTransactionEventsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTransactionEventsOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An array of <code>TransactionEvent</code> objects. Each object contains details about the transaction event.
     * @param {module:model/ListTransactionEventsRequest} listTransactionEventsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTransactionEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTransactionEventsOutput}
     */
    listTransactionEvents(listTransactionEventsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTransactionEventsRequest;
      // verify the required parameter 'listTransactionEventsRequest' is set
      if (listTransactionEventsRequest === undefined || listTransactionEventsRequest === null) {
        throw new Error("Missing the required parameter 'listTransactionEventsRequest' when calling listTransactionEvents");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTransactionEventsOutput;
      return this.apiClient.callApi(
        '/list-transaction-events', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTransactions operation.
     * @callback module:api/DefaultApi~listTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTransactionsOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the transactions on a given wallet address or to a specific contract.
     * @param {module:model/ListTransactionsRequest} listTransactionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~listTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTransactionsOutput}
     */
    listTransactions(listTransactionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = listTransactionsRequest;
      // verify the required parameter 'listTransactionsRequest' is set
      if (listTransactionsRequest === undefined || listTransactionsRequest === null) {
        throw new Error("Missing the required parameter 'listTransactionsRequest' when calling listTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTransactionsOutput;
      return this.apiClient.callApi(
        '/list-transactions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
