openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon Managed Blockchain (AMB) Query provides you with convenient\
    \ access to multi-blockchain network data, which makes it easier for you to extract\
    \ contextual data related to blockchain activity. You can use AMB Query to read\
    \ data from public blockchain networks, such as Bitcoin Mainnet and Ethereum Mainnet.\
    \ You can also get information such as the current and historical balances of\
    \ addresses, or you can get a list of blockchain transactions for a given time\
    \ period. Additionally, you can get details of a given transaction, such as transaction\
    \ events, which you can further analyze or use in business logic for your applications."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Managed Blockchain Query
  version: 2023-05-04
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: managedblockchain-query
  x-aws-signingName: managedblockchain-query
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/managedblockchain-query-2023-05-04.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/managedblockchain-query/
servers:
- description: The Amazon Managed Blockchain Query multi-region endpoint
  url: "http://managedblockchain-query.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Managed Blockchain Query multi-region endpoint
  url: "https://managedblockchain-query.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Managed Blockchain Query endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://managedblockchain-query.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Managed Blockchain Query endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://managedblockchain-query.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /batch-get-token-balance:
    post:
      description: "<p>Gets the token balance for a batch of tokens by using the <code>GetTokenBalance</code>\
        \ action for every token in the request.</p> <note> <p>Only the native tokens\
        \ BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are supported.</p>\
        \ </note>"
      operationId: batch_get_token_balance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetTokenBalance_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetTokenBalanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /get-token-balance:
    post:
      description: "<p>Gets the balance of a specific token, including native tokens,\
        \ for a given address (wallet or contract) on the blockchain.</p> <note> <p>Only\
        \ the native tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards\
        \ are supported.</p> </note>"
      operationId: get_token_balance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTokenBalance_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenBalanceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /get-transaction:
    post:
      description: Get the details of a transaction.
      operationId: get_transaction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTransaction_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /list-token-balances:
    post:
      description: <p>This action returns the following for a given a blockchain network:</p>
        <ul> <li> <p>Lists all token balances owned by an address (either a contact
        address or a wallet address).</p> </li> <li> <p>Lists all token balances for
        all tokens created by a contract.</p> </li> <li> <p>Lists all token balances
        for a given token.</p> </li> </ul> <note> <p>You must always specify the network
        property of the <code>tokenFilter</code> when using this operation.</p> </note>
      operationId: list_token_balances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTokenBalances_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenBalancesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /list-transaction-events:
    post:
      description: An array of <code>TransactionEvent</code> objects. Each object
        contains details about the transaction event.
      operationId: list_transaction_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTransactionEvents_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionEventsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /list-transactions:
    post:
      description: Lists all of the transactions on a given wallet address or to a
        specific contract.
      operationId: list_transactions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTransactions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetTokenBalanceOutput:
      example:
        tokenBalances: ""
        errors: ""
      properties:
        tokenBalances:
          allOf:
          - $ref: '#/components/schemas/BatchGetTokenBalanceOutputList'
          - description: An array of <code>BatchGetTokenBalanceOutputItem</code> objects
              returned by the response.
          title: tokenBalances
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetTokenBalanceErrors'
          - description: An array of <code>BatchGetTokenBalanceErrorItem</code> objects
              returned from the request.
          title: errors
      required:
      - errors
      - tokenBalances
      title: BatchGetTokenBalanceOutput
      type: object
    BatchGetTokenBalanceInputItem:
      description: The container for the input for getting a token balance.
      properties:
        tokenIdentifier:
          $ref: '#/components/schemas/TokenIdentifier'
        ownerIdentifier:
          $ref: '#/components/schemas/OwnerIdentifier'
        atBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
      required:
      - ownerIdentifier
      - tokenIdentifier
      title: BatchGetTokenBalanceInputItem
      type: object
    ThrottlingException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    ServiceQuotaExceededException: {}
    GetTokenBalanceOutput:
      example:
        balance: ""
        atBlockchainInstant:
          time: ""
        lastUpdatedTime:
          time: ""
        ownerIdentifier:
          address: ""
        tokenIdentifier:
          tokenId: ""
          contractAddress: ""
          network: ""
      properties:
        ownerIdentifier:
          $ref: '#/components/schemas/OwnerIdentifier'
        tokenIdentifier:
          $ref: '#/components/schemas/TokenIdentifier'
        balance:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The container for the token balance.
          title: balance
        atBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
        lastUpdatedTime:
          $ref: '#/components/schemas/BlockchainInstant'
      required:
      - atBlockchainInstant
      - balance
      title: GetTokenBalanceOutput
      type: object
    QueryNetwork:
      enum:
      - ETHEREUM_MAINNET
      - BITCOIN_MAINNET
      title: QueryNetwork
      type: string
    ChainAddress:
      pattern: "[-A-Za-z0-9]{13,74}"
      type: string
    QueryTokenId:
      pattern: "[a-zA-Z0-9]{1,66}"
      type: string
    Timestamp:
      format: date-time
      type: string
    GetTransactionOutput:
      example:
        transaction:
          blockHash: ""
          contractAddress: ""
          transactionIndex: ""
          signatureV: ""
          numberOfTransactions: ""
          transactionHash: ""
          transactionTimestamp: ""
          signatureS: ""
          transactionId: ""
          network: ""
          signatureR: ""
          gasUsed: ""
          transactionFee: ""
          blockNumber: ""
          cumulativeGasUsed: ""
          from: ""
          to: ""
          effectiveGasPrice: ""
          status: ""
      properties:
        transaction:
          $ref: '#/components/schemas/GetTransactionOutput_transaction'
      required:
      - transaction
      title: GetTransactionOutput
      type: object
    ListTokenBalancesOutput:
      example:
        nextToken: ""
        tokenBalances: ""
      properties:
        tokenBalances:
          allOf:
          - $ref: '#/components/schemas/TokenBalanceList'
          - description: An array of <code>TokenBalance</code> objects. Each object
              contains details about the token balance.
          title: tokenBalances
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
          title: nextToken
      required:
      - tokenBalances
      title: ListTokenBalancesOutput
      type: object
    ListTransactionEventsOutput:
      example:
        nextToken: ""
        events: ""
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/TransactionEventList'
          - description: An array of <code>TransactionEvent</code> objects. Each object
              contains details about the transaction events.
          title: events
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
          title: nextToken
      required:
      - events
      title: ListTransactionEventsOutput
      type: object
    ListTransactionsOutput:
      example:
        nextToken: ""
        transactions: ""
      properties:
        transactions:
          allOf:
          - $ref: '#/components/schemas/TransactionOutputList'
          - description: The array of transactions returned by the request.
          title: transactions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
          title: nextToken
      required:
      - transactions
      title: ListTransactionsOutput
      type: object
    ListTransactionsSortBy:
      enum:
      - TRANSACTION_TIMESTAMP
      title: ListTransactionsSortBy
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      title: SortOrder
      type: string
    TokenIdentifier:
      description: "<p>The container for the identifier for the token including the\
        \ unique token ID and its blockchain network.</p> <note> <p>Only the native\
        \ tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are\
        \ supported.</p> </note>"
      example:
        tokenId: ""
        contractAddress: ""
        network: ""
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network of the token.
          title: network
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: This is the token's contract address.
          title: contractAddress
        tokenId:
          allOf:
          - $ref: '#/components/schemas/QueryTokenId'
          - description: The unique identifier of the token.
          title: tokenId
      required:
      - network
      title: TokenIdentifier
      type: object
    OwnerIdentifier:
      description: The container for the identifier of the owner.
      example:
        address: ""
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The contract or wallet address for the owner.
          title: address
      required:
      - address
      title: OwnerIdentifier
      type: object
    BlockchainInstant:
      description: The container for time.
      example:
        time: ""
      properties:
        time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The container of the <code>Timestamp</code> of the blockchain
              instant.</p> <note> <p>This <code>timestamp</code> will only be recorded
              up to the second.</p> </note>
          title: time
      title: BlockchainInstant
      type: object
    String:
      type: string
    ErrorType:
      enum:
      - VALIDATION_EXCEPTION
      - RESOURCE_NOT_FOUND_EXCEPTION
      title: ErrorType
      type: string
    BatchGetTokenBalanceErrorItem:
      description: Error generated from a failed <code>BatchGetTokenBalance</code>
        request.
      properties:
        tokenIdentifier:
          $ref: '#/components/schemas/TokenIdentifier'
        ownerIdentifier:
          $ref: '#/components/schemas/OwnerIdentifier'
        atBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
        errorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code associated with the error.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The message associated with the error.
          title: errorMessage
        errorType:
          allOf:
          - $ref: '#/components/schemas/ErrorType'
          - description: The type of error.
          title: errorType
      required:
      - errorCode
      - errorMessage
      - errorType
      title: BatchGetTokenBalanceErrorItem
      type: object
    BatchGetTokenBalanceErrors:
      items:
        $ref: '#/components/schemas/BatchGetTokenBalanceErrorItem'
      maxItems: 10
      minItems: 0
      type: array
    GetTokenBalanceInputList:
      items:
        $ref: '#/components/schemas/BatchGetTokenBalanceInputItem'
      maxItems: 10
      minItems: 1
      type: array
    BatchGetTokenBalanceInput:
      properties:
        getTokenBalanceInputs:
          allOf:
          - $ref: '#/components/schemas/GetTokenBalanceInputList'
          - description: An array of <code>GetTokenBalanceInput</code> objects whose
              balance is being requested.
      title: BatchGetTokenBalanceInput
      type: object
    BatchGetTokenBalanceOutputList:
      items:
        $ref: '#/components/schemas/BatchGetTokenBalanceOutputItem'
      maxItems: 10
      minItems: 0
      type: array
    BatchGetTokenBalanceOutputItem:
      description: The container for the properties of a token balance output.
      properties:
        ownerIdentifier:
          $ref: '#/components/schemas/OwnerIdentifier'
        tokenIdentifier:
          $ref: '#/components/schemas/TokenIdentifier'
        balance:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The container for the token balance.
          title: balance
        atBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
        lastUpdatedTime:
          $ref: '#/components/schemas/BlockchainInstant'
      required:
      - atBlockchainInstant
      - balance
      title: BatchGetTokenBalanceOutputItem
      type: object
    BlockHash:
      pattern: "(0x[A-Fa-f0-9]{64}|[A-Fa-f0-9]{64})"
      type: string
    GetTokenBalanceInput:
      properties:
        tokenIdentifier:
          $ref: '#/components/schemas/GetTokenBalanceInput_tokenIdentifier'
        ownerIdentifier:
          $ref: '#/components/schemas/GetTokenBalanceInput_ownerIdentifier'
        atBlockchainInstant:
          $ref: '#/components/schemas/GetTokenBalanceInput_atBlockchainInstant'
      required:
      - ownerIdentifier
      - tokenIdentifier
      title: GetTokenBalanceInput
      type: object
    QueryTransactionHash:
      pattern: "(0x[A-Fa-f0-9]{64}|[A-Fa-f0-9]{64})"
      type: string
    GetTransactionInput:
      properties:
        transactionHash:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionHash'
          - description: The hash of the transaction. It is generated whenever a transaction
              is verified and added to the blockchain.
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transaction occurred.
      required:
      - network
      - transactionHash
      title: GetTransactionInput
      type: object
    Transaction:
      description: "<p>There are two possible types of transactions used for this\
        \ data type:</p> <ul> <li> <p>A Bitcoin transaction is a movement of BTC from\
        \ one address to another.</p> </li> <li> <p>An Ethereum transaction refers\
        \ to an action initiated by an externally owned account, which is an account\
        \ managed by a human, not a contract. For example, if Bob sends Alice 1 ETH,\
        \ Bob's account must be debited and Alice's must be credited. This state-changing\
        \ action occurs within a transaction.</p> </li> </ul>"
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transaction occured.
          title: network
        blockHash:
          allOf:
          - $ref: '#/components/schemas/BlockHash'
          - description: The block hash is a unique identifier for a block. It is
              a fixed-size string that is calculated by using the information in the
              block. The block hash is used to verify the integrity of the data in
              the block.
          title: blockHash
        transactionHash:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionHash'
          - description: The hash of the transaction. It is generated whenever a transaction
              is verified and added to the blockchain.
          title: transactionHash
        blockNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The block number in which the transaction is recorded.
          title: blockNumber
        transactionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The <code>Timestamp</code> of the transaction. '
          title: transactionTimestamp
        transactionIndex:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The index of the transaction within a blockchain.
          title: transactionIndex
        numberOfTransactions:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of transactions in the block.
          title: numberOfTransactions
        status:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionStatus'
          - description: The status of the transaction.
          title: status
        to:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The identifier of the transaction. It is generated whenever
              a transaction is verified and added to the blockchain.
          title: to
        from:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The initiator of the transaction. It is either in the form
              a public key or a contract address.
          title: from
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The blockchain address for the contract.
          title: contractAddress
        gasUsed:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The amount of gas used for the transaction.
          title: gasUsed
        cumulativeGasUsed:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The amount of gas used up to the specified point in the block.
          title: cumulativeGasUsed
        effectiveGasPrice:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The effective gas price.
          title: effectiveGasPrice
        signatureV:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The signature of the transaction. The Z coordinate of a point
              V.
          title: signatureV
        signatureR:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The signature of the transaction. The X coordinate of a point
              R.
          title: signatureR
        signatureS:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The signature of the transaction. The Y coordinate of a point
              S.
          title: signatureS
        transactionFee:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The transaction fee.
          title: transactionFee
        transactionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier of the transaction. It is generated
              whenever a transaction is verified and added to the blockchain.
          title: transactionId
      required:
      - network
      - numberOfTransactions
      - status
      - to
      - transactionHash
      - transactionIndex
      - transactionTimestamp
      title: Transaction
      type: object
    Integer:
      type: integer
    OwnerFilter:
      description: The container for the owner information to filter by.
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The contract or wallet address.
          title: address
      required:
      - address
      title: OwnerFilter
      type: object
    TokenFilter:
      description: <p>The container of the token filter like the contract address
        on a given blockchain network or a unique token identifier on a given blockchain
        network.</p> <note> <p>You must always specify the network property of this
        container when using this operation.</p> </note>
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network of the token.
          title: network
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: This is the address of the contract.
          title: contractAddress
        tokenId:
          allOf:
          - $ref: '#/components/schemas/QueryTokenId'
          - description: The unique identifier of the token.
          title: tokenId
      required:
      - network
      title: TokenFilter
      type: object
    NextToken:
      maxLength: 131070
      minLength: 0
      type: string
    ListTokenBalancesInputMaxResultsInteger:
      maximum: 250
      minimum: 1
      type: integer
    ListTokenBalancesInput:
      properties:
        ownerFilter:
          $ref: '#/components/schemas/ListTokenBalancesInput_ownerFilter'
        tokenFilter:
          $ref: '#/components/schemas/ListTokenBalancesInput_tokenFilter'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListTokenBalancesInputMaxResultsInteger'
          - description: The maximum number of token balances to return.
      required:
      - tokenFilter
      title: ListTokenBalancesInput
      type: object
    TokenBalanceList:
      items:
        $ref: '#/components/schemas/TokenBalance'
      maxItems: 250
      minItems: 0
      type: array
    ListTransactionEventsInputMaxResultsInteger:
      maximum: 250
      minimum: 1
      type: integer
    ListTransactionEventsInput:
      properties:
        transactionHash:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionHash'
          - description: The hash of the transaction. It is generated whenever a transaction
              is verified and added to the blockchain.
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transaction events occurred.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListTransactionEventsInputMaxResultsInteger'
          - description: "<p>The maximum number of transaction events to list.</p>\
              \ <note> <p>Even if additional results can be retrieved, the request\
              \ can return less results than <code>maxResults</code> or an empty array\
              \ of results.</p> <p>To retrieve the next set of results, make another\
              \ request with the returned <code>nextToken</code> value. The value\
              \ of <code>nextToken</code> is <code>null</code> when there are no more\
              \ results to return</p> </note>"
      required:
      - network
      - transactionHash
      title: ListTransactionEventsInput
      type: object
    TransactionEventList:
      items:
        $ref: '#/components/schemas/TransactionEvent'
      maxItems: 250
      minItems: 0
      type: array
    ListTransactionsSort:
      description: The container for determining how the list transaction result will
        be sorted.
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ListTransactionsSortBy'
          - description: Defaults to the value <code>TRANSACTION_TIMESTAMP</code>.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The container for the <i>sort order</i> for <code>ListTransactions</code>.
              The <code>SortOrder</code> field only accepts the values <code>ASCENDING</code>
              and <code>DESCENDING</code>. Not providing <code>SortOrder</code> will
              default to <code>ASCENDING</code>.
          title: sortOrder
      title: ListTransactionsSort
      type: object
    ListTransactionsInputMaxResultsInteger:
      maximum: 250
      minimum: 1
      type: integer
    ListTransactionsInput:
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: "The address (either a contract or wallet), whose transactions\
              \ are being requested."
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transactions occurred.
        fromBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
        toBlockchainInstant:
          $ref: '#/components/schemas/BlockchainInstant'
        sort:
          $ref: '#/components/schemas/ListTransactionsInput_sort'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token that indicates the next set of results
              to retrieve.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListTransactionsInputMaxResultsInteger'
          - description: "<p>The maximum number of transactions to list.</p> <note>\
              \ <p>Even if additional results can be retrieved, the request can return\
              \ less results than <code>maxResults</code> or an empty array of results.</p>\
              \ <p>To retrieve the next set of results, make another request with\
              \ the returned <code>nextToken</code> value. The value of <code>nextToken</code>\
              \ is <code>null</code> when there are no more results to return</p>\
              \ </note>"
      required:
      - address
      - network
      title: ListTransactionsInput
      type: object
    TransactionOutputList:
      items:
        $ref: '#/components/schemas/TransactionOutputItem'
      maxItems: 250
      minItems: 0
      type: array
    Long:
      type: integer
    QueryTransactionEventType:
      enum:
      - ERC20_TRANSFER
      - ERC20_MINT
      - ERC20_BURN
      - ERC20_DEPOSIT
      - ERC20_WITHDRAWAL
      - ERC721_TRANSFER
      - ERC1155_TRANSFER
      - BITCOIN_VIN
      - BITCOIN_VOUT
      - INTERNAL_ETH_TRANSFER
      - ETH_TRANSFER
      title: QueryTransactionEventType
      type: string
    QueryTransactionStatus:
      enum:
      - FINAL
      - FAILED
      title: QueryTransactionStatus
      type: string
    TokenBalance:
      description: The balance of the token.
      properties:
        ownerIdentifier:
          $ref: '#/components/schemas/TokenBalance_ownerIdentifier'
        tokenIdentifier:
          $ref: '#/components/schemas/TokenBalance_tokenIdentifier'
        balance:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The container of the token balance.
          title: balance
        atBlockchainInstant:
          $ref: '#/components/schemas/GetTokenBalanceInput_atBlockchainInstant'
        lastUpdatedTime:
          $ref: '#/components/schemas/TokenBalance_lastUpdatedTime'
      required:
      - atBlockchainInstant
      - balance
      title: TokenBalance
      type: object
    TransactionEvent:
      description: The container for the properties of a transaction event.
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transaction occurred.
          title: network
        transactionHash:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionHash'
          - description: The hash of the transaction. It is generated whenever a transaction
              is verified and added to the blockchain.
          title: transactionHash
        eventType:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionEventType'
          - description: The type of transaction event.
          title: eventType
        from:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The wallet address initiating the transaction. It can either
              be a public key or a contract.
          title: from
        to:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The wallet address receiving the transaction. It can either
              be a public key or a contract.
          title: to
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value that was transacted.
          title: value
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The blockchain address. for the contract
          title: contractAddress
        tokenId:
          allOf:
          - $ref: '#/components/schemas/QueryTokenId'
          - description: The unique identifier for the token involved in the transaction.
          title: tokenId
        transactionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier of the transaction. It is generated
              whenever a transaction is verified and added to the blockchain.
          title: transactionId
        voutIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The position of the vout in the transaction output list.
          title: voutIndex
      required:
      - eventType
      - network
      - transactionHash
      title: TransactionEvent
      type: object
    TransactionOutputItem:
      description: The container of the transaction output.
      properties:
        transactionHash:
          allOf:
          - $ref: '#/components/schemas/QueryTransactionHash'
          - description: The hash of the transaction. It is generated whenever a transaction
              is verified and added to the blockchain.
          title: transactionHash
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network where the transaction occurred.
          title: network
        transactionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the transaction occurred.
          title: transactionTimestamp
      required:
      - network
      - transactionHash
      - transactionTimestamp
      title: TransactionOutputItem
      type: object
    BatchGetTokenBalance_request:
      properties:
        getTokenBalanceInputs:
          description: An array of <code>GetTokenBalanceInput</code> objects whose
            balance is being requested.
          items:
            $ref: '#/components/schemas/BatchGetTokenBalanceInputItem'
          maxItems: 10
          minItems: 1
          title: getTokenBalanceInputs
          type: array
      title: BatchGetTokenBalance_request
      type: object
    GetTokenBalance_request_tokenIdentifier:
      description: "<p>The container for the identifier for the token including the\
        \ unique token ID and its blockchain network.</p> <note> <p>Only the native\
        \ tokens BTC,ETH, and the ERC-20, ERC-721, and ERC 1155 token standards are\
        \ supported.</p> </note>"
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network of the token.
          title: network
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: This is the token's contract address.
          title: contractAddress
        tokenId:
          allOf:
          - $ref: '#/components/schemas/QueryTokenId'
          - description: The unique identifier of the token.
          title: tokenId
      title: GetTokenBalance_request_tokenIdentifier
      type: object
    GetTokenBalance_request_ownerIdentifier:
      description: The container for the identifier of the owner.
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The contract or wallet address for the owner.
          title: address
      title: GetTokenBalance_request_ownerIdentifier
      type: object
    GetTokenBalance_request_atBlockchainInstant:
      description: The container for time.
      properties:
        time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p>The container of the <code>Timestamp</code> of the blockchain
              instant.</p> <note> <p>This <code>timestamp</code> will only be recorded
              up to the second.</p> </note>
          title: time
      title: GetTokenBalance_request_atBlockchainInstant
      type: object
    GetTokenBalance_request:
      properties:
        tokenIdentifier:
          $ref: '#/components/schemas/GetTokenBalance_request_tokenIdentifier'
        ownerIdentifier:
          $ref: '#/components/schemas/GetTokenBalance_request_ownerIdentifier'
        atBlockchainInstant:
          $ref: '#/components/schemas/GetTokenBalance_request_atBlockchainInstant'
      required:
      - ownerIdentifier
      - tokenIdentifier
      title: GetTokenBalance_request
      type: object
    GetTransaction_request:
      properties:
        transactionHash:
          description: The hash of the transaction. It is generated whenever a transaction
            is verified and added to the blockchain.
          pattern: "(0x[A-Fa-f0-9]{64}|[A-Fa-f0-9]{64})"
          title: transactionHash
          type: string
        network:
          description: The blockchain network where the transaction occurred.
          enum:
          - ETHEREUM_MAINNET
          - BITCOIN_MAINNET
          title: network
          type: string
      required:
      - network
      - transactionHash
      title: GetTransaction_request
      type: object
    ListTokenBalances_request_ownerFilter:
      description: The container for the owner information to filter by.
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: The contract or wallet address.
          title: address
      title: ListTokenBalances_request_ownerFilter
      type: object
    ListTokenBalances_request_tokenFilter:
      description: <p>The container of the token filter like the contract address
        on a given blockchain network or a unique token identifier on a given blockchain
        network.</p> <note> <p>You must always specify the network property of this
        container when using this operation.</p> </note>
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/QueryNetwork'
          - description: The blockchain network of the token.
          title: network
        contractAddress:
          allOf:
          - $ref: '#/components/schemas/ChainAddress'
          - description: This is the address of the contract.
          title: contractAddress
        tokenId:
          allOf:
          - $ref: '#/components/schemas/QueryTokenId'
          - description: The unique identifier of the token.
          title: tokenId
      title: ListTokenBalances_request_tokenFilter
      type: object
    ListTokenBalances_request:
      properties:
        ownerFilter:
          $ref: '#/components/schemas/ListTokenBalances_request_ownerFilter'
        tokenFilter:
          $ref: '#/components/schemas/ListTokenBalances_request_tokenFilter'
        nextToken:
          description: The pagination token that indicates the next set of results
            to retrieve.
          maxLength: 131070
          minLength: 0
          title: nextToken
          type: string
        maxResults:
          description: The maximum number of token balances to return.
          maximum: 250
          minimum: 1
          title: maxResults
          type: integer
      required:
      - tokenFilter
      title: ListTokenBalances_request
      type: object
    ListTransactionEvents_request:
      properties:
        transactionHash:
          description: The hash of the transaction. It is generated whenever a transaction
            is verified and added to the blockchain.
          pattern: "(0x[A-Fa-f0-9]{64}|[A-Fa-f0-9]{64})"
          title: transactionHash
          type: string
        network:
          description: The blockchain network where the transaction events occurred.
          enum:
          - ETHEREUM_MAINNET
          - BITCOIN_MAINNET
          title: network
          type: string
        nextToken:
          description: The pagination token that indicates the next set of results
            to retrieve.
          maxLength: 131070
          minLength: 0
          title: nextToken
          type: string
        maxResults:
          description: "<p>The maximum number of transaction events to list.</p> <note>\
            \ <p>Even if additional results can be retrieved, the request can return\
            \ less results than <code>maxResults</code> or an empty array of results.</p>\
            \ <p>To retrieve the next set of results, make another request with the\
            \ returned <code>nextToken</code> value. The value of <code>nextToken</code>\
            \ is <code>null</code> when there are no more results to return</p> </note>"
          maximum: 250
          minimum: 1
          title: maxResults
          type: integer
      required:
      - network
      - transactionHash
      title: ListTransactionEvents_request
      type: object
    ListTransactions_request_sort:
      description: The container for determining how the list transaction result will
        be sorted.
      properties:
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ListTransactionsSortBy'
          - description: Defaults to the value <code>TRANSACTION_TIMESTAMP</code>.
          title: sortBy
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The container for the <i>sort order</i> for <code>ListTransactions</code>.
              The <code>SortOrder</code> field only accepts the values <code>ASCENDING</code>
              and <code>DESCENDING</code>. Not providing <code>SortOrder</code> will
              default to <code>ASCENDING</code>.
          title: sortOrder
      title: ListTransactions_request_sort
      type: object
    ListTransactions_request:
      properties:
        address:
          description: "The address (either a contract or wallet), whose transactions\
            \ are being requested."
          pattern: "[-A-Za-z0-9]{13,74}"
          title: address
          type: string
        network:
          description: The blockchain network where the transactions occurred.
          enum:
          - ETHEREUM_MAINNET
          - BITCOIN_MAINNET
          title: network
          type: string
        fromBlockchainInstant:
          $ref: '#/components/schemas/GetTokenBalance_request_atBlockchainInstant'
        toBlockchainInstant:
          $ref: '#/components/schemas/GetTokenBalance_request_atBlockchainInstant'
        sort:
          $ref: '#/components/schemas/ListTransactions_request_sort'
        nextToken:
          description: The pagination token that indicates the next set of results
            to retrieve.
          maxLength: 131070
          minLength: 0
          title: nextToken
          type: string
        maxResults:
          description: "<p>The maximum number of transactions to list.</p> <note>\
            \ <p>Even if additional results can be retrieved, the request can return\
            \ less results than <code>maxResults</code> or an empty array of results.</p>\
            \ <p>To retrieve the next set of results, make another request with the\
            \ returned <code>nextToken</code> value. The value of <code>nextToken</code>\
            \ is <code>null</code> when there are no more results to return</p> </note>"
          maximum: 250
          minimum: 1
          title: maxResults
          type: integer
      required:
      - address
      - network
      title: ListTransactions_request
      type: object
    GetTransactionOutput_transaction:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - description: Contains the details of the transaction.
      example:
        blockHash: ""
        contractAddress: ""
        transactionIndex: ""
        signatureV: ""
        numberOfTransactions: ""
        transactionHash: ""
        transactionTimestamp: ""
        signatureS: ""
        transactionId: ""
        network: ""
        signatureR: ""
        gasUsed: ""
        transactionFee: ""
        blockNumber: ""
        cumulativeGasUsed: ""
        from: ""
        to: ""
        effectiveGasPrice: ""
        status: ""
      title: GetTransactionOutput_transaction
    GetTokenBalanceInput_tokenIdentifier:
      allOf:
      - $ref: '#/components/schemas/TokenIdentifier'
      - description: "The container for the identifier for the token, including the\
          \ unique token ID and its blockchain network."
      title: GetTokenBalanceInput_tokenIdentifier
    GetTokenBalanceInput_ownerIdentifier:
      allOf:
      - $ref: '#/components/schemas/OwnerIdentifier'
      - description: The container for the identifier for the owner.
      title: GetTokenBalanceInput_ownerIdentifier
    GetTokenBalanceInput_atBlockchainInstant:
      allOf:
      - $ref: '#/components/schemas/BlockchainInstant'
      - description: <p>The time for when the TokenBalance is requested or the current
          time if a time is not provided in the request.</p> <note> <p>This time will
          only be recorded up to the second.</p> </note>
      title: GetTokenBalanceInput_atBlockchainInstant
    ListTokenBalancesInput_ownerFilter:
      allOf:
      - $ref: '#/components/schemas/OwnerFilter'
      - description: The contract or wallet address on the blockchain network by which
          to filter the request. You must specify the <code>address</code> property
          of the <code>ownerFilter</code> when listing balances of tokens owned by
          the address.
      title: ListTokenBalancesInput_ownerFilter
    ListTokenBalancesInput_tokenFilter:
      allOf:
      - $ref: '#/components/schemas/TokenFilter'
      - description: <p>The contract address or a token identifier on the blockchain
          network by which to filter the request. You must specify the contractAddress
          property of this container when listing tokens minted by a contract.</p>
          <note> <p>You must always specify the network property of this container
          when using this operation.</p> </note>
      title: ListTokenBalancesInput_tokenFilter
    ListTransactionsInput_sort:
      allOf:
      - $ref: '#/components/schemas/ListTransactionsSort'
      - description: Sorts items in an ascending order if the first page starts at
          <code>fromTime</code>. Sorts items in a descending order if the first page
          starts at <code>toTime</code>.
      title: ListTransactionsInput_sort
    TokenBalance_ownerIdentifier:
      allOf:
      - $ref: '#/components/schemas/OwnerIdentifier'
      - description: The container for the identifier of the owner.
      title: TokenBalance_ownerIdentifier
    TokenBalance_tokenIdentifier:
      allOf:
      - $ref: '#/components/schemas/TokenIdentifier'
      - description: "The identifier for the token, including the unique token ID\
          \ and its blockchain network."
      title: TokenBalance_tokenIdentifier
    TokenBalance_lastUpdatedTime:
      allOf:
      - $ref: '#/components/schemas/BlockchainInstant'
      - description: The <code>timestamp</code> of the last transaction at which the
          balance for the token in the wallet was updated.
      title: TokenBalance_lastUpdatedTime
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
