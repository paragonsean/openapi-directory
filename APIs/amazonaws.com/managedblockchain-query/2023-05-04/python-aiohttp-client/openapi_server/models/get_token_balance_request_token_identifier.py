# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_network import QueryNetwork
from openapi_server import util


class GetTokenBalanceRequestTokenIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network: QueryNetwork=None, contract_address: str=None, token_id: str=None):
        """GetTokenBalanceRequestTokenIdentifier - a model defined in OpenAPI

        :param network: The network of this GetTokenBalanceRequestTokenIdentifier.
        :param contract_address: The contract_address of this GetTokenBalanceRequestTokenIdentifier.
        :param token_id: The token_id of this GetTokenBalanceRequestTokenIdentifier.
        """
        self.openapi_types = {
            'network': QueryNetwork,
            'contract_address': str,
            'token_id': str
        }

        self.attribute_map = {
            'network': 'network',
            'contract_address': 'contractAddress',
            'token_id': 'tokenId'
        }

        self._network = network
        self._contract_address = contract_address
        self._token_id = token_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTokenBalanceRequestTokenIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTokenBalance_request_tokenIdentifier of this GetTokenBalanceRequestTokenIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this GetTokenBalanceRequestTokenIdentifier.


        :return: The network of this GetTokenBalanceRequestTokenIdentifier.
        :rtype: QueryNetwork
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GetTokenBalanceRequestTokenIdentifier.


        :param network: The network of this GetTokenBalanceRequestTokenIdentifier.
        :type network: QueryNetwork
        """

        self._network = network

    @property
    def contract_address(self):
        """Gets the contract_address of this GetTokenBalanceRequestTokenIdentifier.


        :return: The contract_address of this GetTokenBalanceRequestTokenIdentifier.
        :rtype: str
        """
        return self._contract_address

    @contract_address.setter
    def contract_address(self, contract_address):
        """Sets the contract_address of this GetTokenBalanceRequestTokenIdentifier.


        :param contract_address: The contract_address of this GetTokenBalanceRequestTokenIdentifier.
        :type contract_address: str
        """

        self._contract_address = contract_address

    @property
    def token_id(self):
        """Gets the token_id of this GetTokenBalanceRequestTokenIdentifier.


        :return: The token_id of this GetTokenBalanceRequestTokenIdentifier.
        :rtype: str
        """
        return self._token_id

    @token_id.setter
    def token_id(self, token_id):
        """Sets the token_id of this GetTokenBalanceRequestTokenIdentifier.


        :param token_id: The token_id of this GetTokenBalanceRequestTokenIdentifier.
        :type token_id: str
        """

        self._token_id = token_id
