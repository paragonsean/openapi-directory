/**
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobRunBilledResourceUtilization from './JobRunBilledResourceUtilization';
import JobRunConfigurationOverrides from './JobRunConfigurationOverrides';
import JobRunJobDriver from './JobRunJobDriver';
import JobRunState from './JobRunState';
import JobRunTotalResourceUtilization from './JobRunTotalResourceUtilization';
import NetworkConfiguration from './NetworkConfiguration';

/**
 * The JobRun model module.
 * @module model/JobRun
 * @version 2021-07-13
 */
class JobRun {
    /**
     * Constructs a new <code>JobRun</code>.
     * Information about a job run. A job run is a unit of work, such as a Spark JAR, Hive query, or SparkSQL query, that you submit to an Amazon EMR Serverless application.
     * @alias module:model/JobRun
     * @param applicationId {String} 
     * @param jobRunId {String} 
     * @param arn {String} 
     * @param createdBy {String} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     * @param executionRole {String} 
     * @param state {module:model/JobRunState} 
     * @param stateDetails {String} 
     * @param releaseLabel {String} 
     * @param jobDriver {module:model/JobRunJobDriver} 
     */
    constructor(applicationId, jobRunId, arn, createdBy, createdAt, updatedAt, executionRole, state, stateDetails, releaseLabel, jobDriver) { 
        
        JobRun.initialize(this, applicationId, jobRunId, arn, createdBy, createdAt, updatedAt, executionRole, state, stateDetails, releaseLabel, jobDriver);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, jobRunId, arn, createdBy, createdAt, updatedAt, executionRole, state, stateDetails, releaseLabel, jobDriver) { 
        obj['applicationId'] = applicationId;
        obj['jobRunId'] = jobRunId;
        obj['arn'] = arn;
        obj['createdBy'] = createdBy;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
        obj['executionRole'] = executionRole;
        obj['state'] = state;
        obj['stateDetails'] = stateDetails;
        obj['releaseLabel'] = releaseLabel;
        obj['jobDriver'] = jobDriver;
    }

    /**
     * Constructs a <code>JobRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobRun} obj Optional instance to populate.
     * @return {module:model/JobRun} The populated <code>JobRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobRun();

            if (data.hasOwnProperty('applicationId')) {
                obj['applicationId'] = ApiClient.convertToType(data['applicationId'], 'String');
            }
            if (data.hasOwnProperty('jobRunId')) {
                obj['jobRunId'] = ApiClient.convertToType(data['jobRunId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('executionRole')) {
                obj['executionRole'] = ApiClient.convertToType(data['executionRole'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], JobRunState);
            }
            if (data.hasOwnProperty('stateDetails')) {
                obj['stateDetails'] = ApiClient.convertToType(data['stateDetails'], 'String');
            }
            if (data.hasOwnProperty('releaseLabel')) {
                obj['releaseLabel'] = ApiClient.convertToType(data['releaseLabel'], 'String');
            }
            if (data.hasOwnProperty('configurationOverrides')) {
                obj['configurationOverrides'] = JobRunConfigurationOverrides.constructFromObject(data['configurationOverrides']);
            }
            if (data.hasOwnProperty('jobDriver')) {
                obj['jobDriver'] = JobRunJobDriver.constructFromObject(data['jobDriver']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('totalResourceUtilization')) {
                obj['totalResourceUtilization'] = JobRunTotalResourceUtilization.constructFromObject(data['totalResourceUtilization']);
            }
            if (data.hasOwnProperty('networkConfiguration')) {
                obj['networkConfiguration'] = NetworkConfiguration.constructFromObject(data['networkConfiguration']);
            }
            if (data.hasOwnProperty('totalExecutionDurationSeconds')) {
                obj['totalExecutionDurationSeconds'] = ApiClient.convertToType(data['totalExecutionDurationSeconds'], 'Number');
            }
            if (data.hasOwnProperty('executionTimeoutMinutes')) {
                obj['executionTimeoutMinutes'] = ApiClient.convertToType(data['executionTimeoutMinutes'], 'Number');
            }
            if (data.hasOwnProperty('billedResourceUtilization')) {
                obj['billedResourceUtilization'] = JobRunBilledResourceUtilization.constructFromObject(data['billedResourceUtilization']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobRun</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobRun.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `applicationId`
        if (data['applicationId']) { // data not null
          String.validateJSON(data['applicationId']);
        }
        // validate the optional field `jobRunId`
        if (data['jobRunId']) { // data not null
          String.validateJSON(data['jobRunId']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `createdBy`
        if (data['createdBy']) { // data not null
          String.validateJSON(data['createdBy']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }
        // validate the optional field `executionRole`
        if (data['executionRole']) { // data not null
          String.validateJSON(data['executionRole']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          JobRunState.validateJSON(data['state']);
        }
        // validate the optional field `stateDetails`
        if (data['stateDetails']) { // data not null
          String.validateJSON(data['stateDetails']);
        }
        // validate the optional field `releaseLabel`
        if (data['releaseLabel']) { // data not null
          String.validateJSON(data['releaseLabel']);
        }
        // validate the optional field `configurationOverrides`
        if (data['configurationOverrides']) { // data not null
          JobRunConfigurationOverrides.validateJSON(data['configurationOverrides']);
        }
        // validate the optional field `jobDriver`
        if (data['jobDriver']) { // data not null
          JobRunJobDriver.validateJSON(data['jobDriver']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `totalResourceUtilization`
        if (data['totalResourceUtilization']) { // data not null
          JobRunTotalResourceUtilization.validateJSON(data['totalResourceUtilization']);
        }
        // validate the optional field `networkConfiguration`
        if (data['networkConfiguration']) { // data not null
          NetworkConfiguration.validateJSON(data['networkConfiguration']);
        }
        // validate the optional field `totalExecutionDurationSeconds`
        if (data['totalExecutionDurationSeconds']) { // data not null
          Number.validateJSON(data['totalExecutionDurationSeconds']);
        }
        // validate the optional field `executionTimeoutMinutes`
        if (data['executionTimeoutMinutes']) { // data not null
          Number.validateJSON(data['executionTimeoutMinutes']);
        }
        // validate the optional field `billedResourceUtilization`
        if (data['billedResourceUtilization']) { // data not null
          JobRunBilledResourceUtilization.validateJSON(data['billedResourceUtilization']);
        }

        return true;
    }


}

JobRun.RequiredProperties = ["applicationId", "jobRunId", "arn", "createdBy", "createdAt", "updatedAt", "executionRole", "state", "stateDetails", "releaseLabel", "jobDriver"];

/**
 * @member {String} applicationId
 */
JobRun.prototype['applicationId'] = undefined;

/**
 * @member {String} jobRunId
 */
JobRun.prototype['jobRunId'] = undefined;

/**
 * @member {String} name
 */
JobRun.prototype['name'] = undefined;

/**
 * @member {String} arn
 */
JobRun.prototype['arn'] = undefined;

/**
 * @member {String} createdBy
 */
JobRun.prototype['createdBy'] = undefined;

/**
 * @member {Date} createdAt
 */
JobRun.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
JobRun.prototype['updatedAt'] = undefined;

/**
 * @member {String} executionRole
 */
JobRun.prototype['executionRole'] = undefined;

/**
 * @member {module:model/JobRunState} state
 */
JobRun.prototype['state'] = undefined;

/**
 * @member {String} stateDetails
 */
JobRun.prototype['stateDetails'] = undefined;

/**
 * @member {String} releaseLabel
 */
JobRun.prototype['releaseLabel'] = undefined;

/**
 * @member {module:model/JobRunConfigurationOverrides} configurationOverrides
 */
JobRun.prototype['configurationOverrides'] = undefined;

/**
 * @member {module:model/JobRunJobDriver} jobDriver
 */
JobRun.prototype['jobDriver'] = undefined;

/**
 * @member {Object} tags
 */
JobRun.prototype['tags'] = undefined;

/**
 * @member {module:model/JobRunTotalResourceUtilization} totalResourceUtilization
 */
JobRun.prototype['totalResourceUtilization'] = undefined;

/**
 * @member {module:model/NetworkConfiguration} networkConfiguration
 */
JobRun.prototype['networkConfiguration'] = undefined;

/**
 * @member {Number} totalExecutionDurationSeconds
 */
JobRun.prototype['totalExecutionDurationSeconds'] = undefined;

/**
 * @member {Number} executionTimeoutMinutes
 */
JobRun.prototype['executionTimeoutMinutes'] = undefined;

/**
 * @member {module:model/JobRunBilledResourceUtilization} billedResourceUtilization
 */
JobRun.prototype['billedResourceUtilization'] = undefined;






export default JobRun;

