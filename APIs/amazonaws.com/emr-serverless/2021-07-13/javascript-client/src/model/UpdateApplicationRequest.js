/**
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateApplicationRequestAutoStartConfiguration from './CreateApplicationRequestAutoStartConfiguration';
import CreateApplicationRequestAutoStopConfiguration from './CreateApplicationRequestAutoStopConfiguration';
import CreateApplicationRequestImageConfiguration from './CreateApplicationRequestImageConfiguration';
import CreateApplicationRequestMaximumCapacity from './CreateApplicationRequestMaximumCapacity';
import CreateApplicationRequestNetworkConfiguration from './CreateApplicationRequestNetworkConfiguration';
import InitialCapacityConfig from './InitialCapacityConfig';
import WorkerTypeSpecificationInput from './WorkerTypeSpecificationInput';

/**
 * The UpdateApplicationRequest model module.
 * @module model/UpdateApplicationRequest
 * @version 2021-07-13
 */
class UpdateApplicationRequest {
    /**
     * Constructs a new <code>UpdateApplicationRequest</code>.
     * @alias module:model/UpdateApplicationRequest
     * @param clientToken {String} The client idempotency token of the application to update. Its value must be unique for each request.
     */
    constructor(clientToken) { 
        
        UpdateApplicationRequest.initialize(this, clientToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientToken) { 
        obj['clientToken'] = clientToken;
    }

    /**
     * Constructs a <code>UpdateApplicationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateApplicationRequest} obj Optional instance to populate.
     * @return {module:model/UpdateApplicationRequest} The populated <code>UpdateApplicationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateApplicationRequest();

            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('initialCapacity')) {
                obj['initialCapacity'] = ApiClient.convertToType(data['initialCapacity'], {'String': InitialCapacityConfig});
            }
            if (data.hasOwnProperty('maximumCapacity')) {
                obj['maximumCapacity'] = CreateApplicationRequestMaximumCapacity.constructFromObject(data['maximumCapacity']);
            }
            if (data.hasOwnProperty('autoStartConfiguration')) {
                obj['autoStartConfiguration'] = CreateApplicationRequestAutoStartConfiguration.constructFromObject(data['autoStartConfiguration']);
            }
            if (data.hasOwnProperty('autoStopConfiguration')) {
                obj['autoStopConfiguration'] = CreateApplicationRequestAutoStopConfiguration.constructFromObject(data['autoStopConfiguration']);
            }
            if (data.hasOwnProperty('networkConfiguration')) {
                obj['networkConfiguration'] = CreateApplicationRequestNetworkConfiguration.constructFromObject(data['networkConfiguration']);
            }
            if (data.hasOwnProperty('architecture')) {
                obj['architecture'] = ApiClient.convertToType(data['architecture'], 'String');
            }
            if (data.hasOwnProperty('imageConfiguration')) {
                obj['imageConfiguration'] = CreateApplicationRequestImageConfiguration.constructFromObject(data['imageConfiguration']);
            }
            if (data.hasOwnProperty('workerTypeSpecifications')) {
                obj['workerTypeSpecifications'] = ApiClient.convertToType(data['workerTypeSpecifications'], {'String': WorkerTypeSpecificationInput});
            }
            if (data.hasOwnProperty('releaseLabel')) {
                obj['releaseLabel'] = ApiClient.convertToType(data['releaseLabel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateApplicationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateApplicationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateApplicationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // validate the optional field `maximumCapacity`
        if (data['maximumCapacity']) { // data not null
          CreateApplicationRequestMaximumCapacity.validateJSON(data['maximumCapacity']);
        }
        // validate the optional field `autoStartConfiguration`
        if (data['autoStartConfiguration']) { // data not null
          CreateApplicationRequestAutoStartConfiguration.validateJSON(data['autoStartConfiguration']);
        }
        // validate the optional field `autoStopConfiguration`
        if (data['autoStopConfiguration']) { // data not null
          CreateApplicationRequestAutoStopConfiguration.validateJSON(data['autoStopConfiguration']);
        }
        // validate the optional field `networkConfiguration`
        if (data['networkConfiguration']) { // data not null
          CreateApplicationRequestNetworkConfiguration.validateJSON(data['networkConfiguration']);
        }
        // ensure the json data is a string
        if (data['architecture'] && !(typeof data['architecture'] === 'string' || data['architecture'] instanceof String)) {
            throw new Error("Expected the field `architecture` to be a primitive type in the JSON string but got " + data['architecture']);
        }
        // validate the optional field `imageConfiguration`
        if (data['imageConfiguration']) { // data not null
          CreateApplicationRequestImageConfiguration.validateJSON(data['imageConfiguration']);
        }
        // ensure the json data is a string
        if (data['releaseLabel'] && !(typeof data['releaseLabel'] === 'string' || data['releaseLabel'] instanceof String)) {
            throw new Error("Expected the field `releaseLabel` to be a primitive type in the JSON string but got " + data['releaseLabel']);
        }

        return true;
    }


}

UpdateApplicationRequest.RequiredProperties = ["clientToken"];

/**
 * The client idempotency token of the application to update. Its value must be unique for each request.
 * @member {String} clientToken
 */
UpdateApplicationRequest.prototype['clientToken'] = undefined;

/**
 * The capacity to initialize when the application is updated.
 * @member {Object.<String, module:model/InitialCapacityConfig>} initialCapacity
 */
UpdateApplicationRequest.prototype['initialCapacity'] = undefined;

/**
 * @member {module:model/CreateApplicationRequestMaximumCapacity} maximumCapacity
 */
UpdateApplicationRequest.prototype['maximumCapacity'] = undefined;

/**
 * @member {module:model/CreateApplicationRequestAutoStartConfiguration} autoStartConfiguration
 */
UpdateApplicationRequest.prototype['autoStartConfiguration'] = undefined;

/**
 * @member {module:model/CreateApplicationRequestAutoStopConfiguration} autoStopConfiguration
 */
UpdateApplicationRequest.prototype['autoStopConfiguration'] = undefined;

/**
 * @member {module:model/CreateApplicationRequestNetworkConfiguration} networkConfiguration
 */
UpdateApplicationRequest.prototype['networkConfiguration'] = undefined;

/**
 * The CPU architecture of an application.
 * @member {module:model/UpdateApplicationRequest.ArchitectureEnum} architecture
 */
UpdateApplicationRequest.prototype['architecture'] = undefined;

/**
 * @member {module:model/CreateApplicationRequestImageConfiguration} imageConfiguration
 */
UpdateApplicationRequest.prototype['imageConfiguration'] = undefined;

/**
 * The key-value pairs that specify worker type to <code>WorkerTypeSpecificationInput</code>. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include <code>Driver</code> and <code>Executor</code> for Spark applications and <code>HiveDriver</code> and <code>TezTask</code> for Hive applications. You can either set image details in this parameter for each worker type, or in <code>imageConfiguration</code> for all worker types.
 * @member {Object.<String, module:model/WorkerTypeSpecificationInput>} workerTypeSpecifications
 */
UpdateApplicationRequest.prototype['workerTypeSpecifications'] = undefined;

/**
 * The Amazon EMR release label for the application. You can change the release label to use a different release of Amazon EMR.
 * @member {String} releaseLabel
 */
UpdateApplicationRequest.prototype['releaseLabel'] = undefined;





/**
 * Allowed values for the <code>architecture</code> property.
 * @enum {String}
 * @readonly
 */
UpdateApplicationRequest['ArchitectureEnum'] = {

    /**
     * value: "ARM64"
     * @const
     */
    "ARM64": "ARM64",

    /**
     * value: "X86_64"
     * @const
     */
    "X86_64": "X86_64"
};



export default UpdateApplicationRequest;

