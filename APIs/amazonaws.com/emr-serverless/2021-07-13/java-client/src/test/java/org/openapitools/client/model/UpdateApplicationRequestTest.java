/*
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateApplicationRequestAutoStartConfiguration;
import org.openapitools.client.model.CreateApplicationRequestAutoStopConfiguration;
import org.openapitools.client.model.CreateApplicationRequestImageConfiguration;
import org.openapitools.client.model.CreateApplicationRequestMaximumCapacity;
import org.openapitools.client.model.CreateApplicationRequestNetworkConfiguration;
import org.openapitools.client.model.InitialCapacityConfig;
import org.openapitools.client.model.WorkerTypeSpecificationInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateApplicationRequest
 */
public class UpdateApplicationRequestTest {
    private final UpdateApplicationRequest model = new UpdateApplicationRequest();

    /**
     * Model tests for UpdateApplicationRequest
     */
    @Test
    public void testUpdateApplicationRequest() {
        // TODO: test UpdateApplicationRequest
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'initialCapacity'
     */
    @Test
    public void initialCapacityTest() {
        // TODO: test initialCapacity
    }

    /**
     * Test the property 'maximumCapacity'
     */
    @Test
    public void maximumCapacityTest() {
        // TODO: test maximumCapacity
    }

    /**
     * Test the property 'autoStartConfiguration'
     */
    @Test
    public void autoStartConfigurationTest() {
        // TODO: test autoStartConfiguration
    }

    /**
     * Test the property 'autoStopConfiguration'
     */
    @Test
    public void autoStopConfigurationTest() {
        // TODO: test autoStopConfiguration
    }

    /**
     * Test the property 'networkConfiguration'
     */
    @Test
    public void networkConfigurationTest() {
        // TODO: test networkConfiguration
    }

    /**
     * Test the property 'architecture'
     */
    @Test
    public void architectureTest() {
        // TODO: test architecture
    }

    /**
     * Test the property 'imageConfiguration'
     */
    @Test
    public void imageConfigurationTest() {
        // TODO: test imageConfiguration
    }

    /**
     * Test the property 'workerTypeSpecifications'
     */
    @Test
    public void workerTypeSpecificationsTest() {
        // TODO: test workerTypeSpecifications
    }

    /**
     * Test the property 'releaseLabel'
     */
    @Test
    public void releaseLabelTest() {
        // TODO: test releaseLabel
    }

}
