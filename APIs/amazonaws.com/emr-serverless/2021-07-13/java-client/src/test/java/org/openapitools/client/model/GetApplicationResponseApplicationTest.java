/*
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ApplicationAutoStartConfiguration;
import org.openapitools.client.model.ApplicationAutoStopConfiguration;
import org.openapitools.client.model.ApplicationImageConfiguration;
import org.openapitools.client.model.ApplicationMaximumCapacity;
import org.openapitools.client.model.ApplicationNetworkConfiguration;
import org.openapitools.client.model.ApplicationState;
import org.openapitools.client.model.Architecture;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetApplicationResponseApplication
 */
public class GetApplicationResponseApplicationTest {
    private final GetApplicationResponseApplication model = new GetApplicationResponseApplication();

    /**
     * Model tests for GetApplicationResponseApplication
     */
    @Test
    public void testGetApplicationResponseApplication() {
        // TODO: test GetApplicationResponseApplication
    }

    /**
     * Test the property 'applicationId'
     */
    @Test
    public void applicationIdTest() {
        // TODO: test applicationId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'releaseLabel'
     */
    @Test
    public void releaseLabelTest() {
        // TODO: test releaseLabel
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateDetails'
     */
    @Test
    public void stateDetailsTest() {
        // TODO: test stateDetails
    }

    /**
     * Test the property 'initialCapacity'
     */
    @Test
    public void initialCapacityTest() {
        // TODO: test initialCapacity
    }

    /**
     * Test the property 'maximumCapacity'
     */
    @Test
    public void maximumCapacityTest() {
        // TODO: test maximumCapacity
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'autoStartConfiguration'
     */
    @Test
    public void autoStartConfigurationTest() {
        // TODO: test autoStartConfiguration
    }

    /**
     * Test the property 'autoStopConfiguration'
     */
    @Test
    public void autoStopConfigurationTest() {
        // TODO: test autoStopConfiguration
    }

    /**
     * Test the property 'networkConfiguration'
     */
    @Test
    public void networkConfigurationTest() {
        // TODO: test networkConfiguration
    }

    /**
     * Test the property 'architecture'
     */
    @Test
    public void architectureTest() {
        // TODO: test architecture
    }

    /**
     * Test the property 'imageConfiguration'
     */
    @Test
    public void imageConfigurationTest() {
        // TODO: test imageConfiguration
    }

    /**
     * Test the property 'workerTypeSpecifications'
     */
    @Test
    public void workerTypeSpecificationsTest() {
        // TODO: test workerTypeSpecifications
    }

}
