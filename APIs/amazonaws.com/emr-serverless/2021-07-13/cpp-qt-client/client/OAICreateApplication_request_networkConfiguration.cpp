/**
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateApplication_request_networkConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateApplication_request_networkConfiguration::OAICreateApplication_request_networkConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateApplication_request_networkConfiguration::OAICreateApplication_request_networkConfiguration() {
    this->initializeModel();
}

OAICreateApplication_request_networkConfiguration::~OAICreateApplication_request_networkConfiguration() {}

void OAICreateApplication_request_networkConfiguration::initializeModel() {

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;
}

void OAICreateApplication_request_networkConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateApplication_request_networkConfiguration::fromJsonObject(QJsonObject json) {

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("subnetIds")]);
    m_subnet_ids_isSet = !json[QString("subnetIds")].isNull() && m_subnet_ids_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;
}

QString OAICreateApplication_request_networkConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateApplication_request_networkConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("subnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    return obj;
}

QList OAICreateApplication_request_networkConfiguration::getSubnetIds() const {
    return m_subnet_ids;
}
void OAICreateApplication_request_networkConfiguration::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAICreateApplication_request_networkConfiguration::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAICreateApplication_request_networkConfiguration::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QList OAICreateApplication_request_networkConfiguration::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAICreateApplication_request_networkConfiguration::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAICreateApplication_request_networkConfiguration::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAICreateApplication_request_networkConfiguration::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAICreateApplication_request_networkConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateApplication_request_networkConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
