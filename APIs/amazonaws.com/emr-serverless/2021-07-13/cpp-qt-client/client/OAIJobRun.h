/**
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobRun.h
 *
 * Information about a job run. A job run is a unit of work, such as a Spark JAR, Hive query, or SparkSQL query, that you submit to an Amazon EMR Serverless application.
 */

#ifndef OAIJobRun_H
#define OAIJobRun_H

#include <QJsonObject>

#include "OAIJobRunState.h"
#include "OAIJobRun_billedResourceUtilization.h"
#include "OAIJobRun_configurationOverrides.h"
#include "OAIJobRun_jobDriver.h"
#include "OAIJobRun_totalResourceUtilization.h"
#include "OAINetworkConfiguration.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJobRun_configurationOverrides;
class OAIJobRun_jobDriver;
class OAIJobRun_totalResourceUtilization;
class OAINetworkConfiguration;
class OAIJobRun_billedResourceUtilization;

class OAIJobRun : public OAIObject {
public:
    OAIJobRun();
    OAIJobRun(QString json);
    ~OAIJobRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getJobRunId() const;
    void setJobRunId(const QString &job_run_id);
    bool is_job_run_id_Set() const;
    bool is_job_run_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getExecutionRole() const;
    void setExecutionRole(const QString &execution_role);
    bool is_execution_role_Set() const;
    bool is_execution_role_Valid() const;

    OAIJobRunState getState() const;
    void setState(const OAIJobRunState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStateDetails() const;
    void setStateDetails(const QString &state_details);
    bool is_state_details_Set() const;
    bool is_state_details_Valid() const;

    QString getReleaseLabel() const;
    void setReleaseLabel(const QString &release_label);
    bool is_release_label_Set() const;
    bool is_release_label_Valid() const;

    OAIJobRun_configurationOverrides getConfigurationOverrides() const;
    void setConfigurationOverrides(const OAIJobRun_configurationOverrides &configuration_overrides);
    bool is_configuration_overrides_Set() const;
    bool is_configuration_overrides_Valid() const;

    OAIJobRun_jobDriver getJobDriver() const;
    void setJobDriver(const OAIJobRun_jobDriver &job_driver);
    bool is_job_driver_Set() const;
    bool is_job_driver_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIJobRun_totalResourceUtilization getTotalResourceUtilization() const;
    void setTotalResourceUtilization(const OAIJobRun_totalResourceUtilization &total_resource_utilization);
    bool is_total_resource_utilization_Set() const;
    bool is_total_resource_utilization_Valid() const;

    OAINetworkConfiguration getNetworkConfiguration() const;
    void setNetworkConfiguration(const OAINetworkConfiguration &network_configuration);
    bool is_network_configuration_Set() const;
    bool is_network_configuration_Valid() const;

    qint32 getTotalExecutionDurationSeconds() const;
    void setTotalExecutionDurationSeconds(const qint32 &total_execution_duration_seconds);
    bool is_total_execution_duration_seconds_Set() const;
    bool is_total_execution_duration_seconds_Valid() const;

    qint32 getExecutionTimeoutMinutes() const;
    void setExecutionTimeoutMinutes(const qint32 &execution_timeout_minutes);
    bool is_execution_timeout_minutes_Set() const;
    bool is_execution_timeout_minutes_Valid() const;

    OAIJobRun_billedResourceUtilization getBilledResourceUtilization() const;
    void setBilledResourceUtilization(const OAIJobRun_billedResourceUtilization &billed_resource_utilization);
    bool is_billed_resource_utilization_Set() const;
    bool is_billed_resource_utilization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_job_run_id;
    bool m_job_run_id_isSet;
    bool m_job_run_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_execution_role;
    bool m_execution_role_isSet;
    bool m_execution_role_isValid;

    OAIJobRunState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_state_details;
    bool m_state_details_isSet;
    bool m_state_details_isValid;

    QString m_release_label;
    bool m_release_label_isSet;
    bool m_release_label_isValid;

    OAIJobRun_configurationOverrides m_configuration_overrides;
    bool m_configuration_overrides_isSet;
    bool m_configuration_overrides_isValid;

    OAIJobRun_jobDriver m_job_driver;
    bool m_job_driver_isSet;
    bool m_job_driver_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIJobRun_totalResourceUtilization m_total_resource_utilization;
    bool m_total_resource_utilization_isSet;
    bool m_total_resource_utilization_isValid;

    OAINetworkConfiguration m_network_configuration;
    bool m_network_configuration_isSet;
    bool m_network_configuration_isValid;

    qint32 m_total_execution_duration_seconds;
    bool m_total_execution_duration_seconds_isSet;
    bool m_total_execution_duration_seconds_isValid;

    qint32 m_execution_timeout_minutes;
    bool m_execution_timeout_minutes_isSet;
    bool m_execution_timeout_minutes_isValid;

    OAIJobRun_billedResourceUtilization m_billed_resource_utilization;
    bool m_billed_resource_utilization_isSet;
    bool m_billed_resource_utilization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobRun)

#endif // OAIJobRun_H
