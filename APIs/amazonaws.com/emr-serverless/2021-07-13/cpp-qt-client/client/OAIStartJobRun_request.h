/**
 * EMR Serverless
 * <p>Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>. The <code>emr-serverless</code> prefix is used in the following scenarios: </p> <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless. For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2021-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartJobRun_request.h
 *
 * 
 */

#ifndef OAIStartJobRun_request_H
#define OAIStartJobRun_request_H

#include <QJsonObject>

#include "OAIStartJobRun_request_configurationOverrides.h"
#include "OAIStartJobRun_request_jobDriver.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartJobRun_request_jobDriver;
class OAIStartJobRun_request_configurationOverrides;

class OAIStartJobRun_request : public OAIObject {
public:
    OAIStartJobRun_request();
    OAIStartJobRun_request(QString json);
    ~OAIStartJobRun_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getExecutionRoleArn() const;
    void setExecutionRoleArn(const QString &execution_role_arn);
    bool is_execution_role_arn_Set() const;
    bool is_execution_role_arn_Valid() const;

    OAIStartJobRun_request_jobDriver getJobDriver() const;
    void setJobDriver(const OAIStartJobRun_request_jobDriver &job_driver);
    bool is_job_driver_Set() const;
    bool is_job_driver_Valid() const;

    OAIStartJobRun_request_configurationOverrides getConfigurationOverrides() const;
    void setConfigurationOverrides(const OAIStartJobRun_request_configurationOverrides &configuration_overrides);
    bool is_configuration_overrides_Set() const;
    bool is_configuration_overrides_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getExecutionTimeoutMinutes() const;
    void setExecutionTimeoutMinutes(const qint32 &execution_timeout_minutes);
    bool is_execution_timeout_minutes_Set() const;
    bool is_execution_timeout_minutes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_execution_role_arn;
    bool m_execution_role_arn_isSet;
    bool m_execution_role_arn_isValid;

    OAIStartJobRun_request_jobDriver m_job_driver;
    bool m_job_driver_isSet;
    bool m_job_driver_isValid;

    OAIStartJobRun_request_configurationOverrides m_configuration_overrides;
    bool m_configuration_overrides_isSet;
    bool m_configuration_overrides_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_execution_timeout_minutes;
    bool m_execution_timeout_minutes_isSet;
    bool m_execution_timeout_minutes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartJobRun_request)

#endif // OAIStartJobRun_request_H
