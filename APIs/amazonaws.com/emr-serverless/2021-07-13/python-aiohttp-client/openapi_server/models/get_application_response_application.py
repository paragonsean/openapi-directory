# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_auto_start_configuration import ApplicationAutoStartConfiguration
from openapi_server.models.application_auto_stop_configuration import ApplicationAutoStopConfiguration
from openapi_server.models.application_image_configuration import ApplicationImageConfiguration
from openapi_server.models.application_maximum_capacity import ApplicationMaximumCapacity
from openapi_server.models.application_network_configuration import ApplicationNetworkConfiguration
from openapi_server.models.application_state import ApplicationState
from openapi_server.models.architecture import Architecture
from openapi_server import util


class GetApplicationResponseApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, name: str=None, arn: str=None, release_label: str=None, type: str=None, state: ApplicationState=None, state_details: str=None, initial_capacity: Dict=None, maximum_capacity: ApplicationMaximumCapacity=None, created_at: datetime=None, updated_at: datetime=None, tags: Dict=None, auto_start_configuration: ApplicationAutoStartConfiguration=None, auto_stop_configuration: ApplicationAutoStopConfiguration=None, network_configuration: ApplicationNetworkConfiguration=None, architecture: Architecture=None, image_configuration: ApplicationImageConfiguration=None, worker_type_specifications: Dict=None):
        """GetApplicationResponseApplication - a model defined in OpenAPI

        :param application_id: The application_id of this GetApplicationResponseApplication.
        :param name: The name of this GetApplicationResponseApplication.
        :param arn: The arn of this GetApplicationResponseApplication.
        :param release_label: The release_label of this GetApplicationResponseApplication.
        :param type: The type of this GetApplicationResponseApplication.
        :param state: The state of this GetApplicationResponseApplication.
        :param state_details: The state_details of this GetApplicationResponseApplication.
        :param initial_capacity: The initial_capacity of this GetApplicationResponseApplication.
        :param maximum_capacity: The maximum_capacity of this GetApplicationResponseApplication.
        :param created_at: The created_at of this GetApplicationResponseApplication.
        :param updated_at: The updated_at of this GetApplicationResponseApplication.
        :param tags: The tags of this GetApplicationResponseApplication.
        :param auto_start_configuration: The auto_start_configuration of this GetApplicationResponseApplication.
        :param auto_stop_configuration: The auto_stop_configuration of this GetApplicationResponseApplication.
        :param network_configuration: The network_configuration of this GetApplicationResponseApplication.
        :param architecture: The architecture of this GetApplicationResponseApplication.
        :param image_configuration: The image_configuration of this GetApplicationResponseApplication.
        :param worker_type_specifications: The worker_type_specifications of this GetApplicationResponseApplication.
        """
        self.openapi_types = {
            'application_id': str,
            'name': str,
            'arn': str,
            'release_label': str,
            'type': str,
            'state': ApplicationState,
            'state_details': str,
            'initial_capacity': Dict,
            'maximum_capacity': ApplicationMaximumCapacity,
            'created_at': datetime,
            'updated_at': datetime,
            'tags': Dict,
            'auto_start_configuration': ApplicationAutoStartConfiguration,
            'auto_stop_configuration': ApplicationAutoStopConfiguration,
            'network_configuration': ApplicationNetworkConfiguration,
            'architecture': Architecture,
            'image_configuration': ApplicationImageConfiguration,
            'worker_type_specifications': Dict
        }

        self.attribute_map = {
            'application_id': 'applicationId',
            'name': 'name',
            'arn': 'arn',
            'release_label': 'releaseLabel',
            'type': 'type',
            'state': 'state',
            'state_details': 'stateDetails',
            'initial_capacity': 'initialCapacity',
            'maximum_capacity': 'maximumCapacity',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'tags': 'tags',
            'auto_start_configuration': 'autoStartConfiguration',
            'auto_stop_configuration': 'autoStopConfiguration',
            'network_configuration': 'networkConfiguration',
            'architecture': 'architecture',
            'image_configuration': 'imageConfiguration',
            'worker_type_specifications': 'workerTypeSpecifications'
        }

        self._application_id = application_id
        self._name = name
        self._arn = arn
        self._release_label = release_label
        self._type = type
        self._state = state
        self._state_details = state_details
        self._initial_capacity = initial_capacity
        self._maximum_capacity = maximum_capacity
        self._created_at = created_at
        self._updated_at = updated_at
        self._tags = tags
        self._auto_start_configuration = auto_start_configuration
        self._auto_stop_configuration = auto_stop_configuration
        self._network_configuration = network_configuration
        self._architecture = architecture
        self._image_configuration = image_configuration
        self._worker_type_specifications = worker_type_specifications

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetApplicationResponseApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetApplicationResponse_application of this GetApplicationResponseApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this GetApplicationResponseApplication.


        :return: The application_id of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this GetApplicationResponseApplication.


        :param application_id: The application_id of this GetApplicationResponseApplication.
        :type application_id: str
        """
        if application_id is None:
            raise ValueError("Invalid value for `application_id`, must not be `None`")

        self._application_id = application_id

    @property
    def name(self):
        """Gets the name of this GetApplicationResponseApplication.


        :return: The name of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetApplicationResponseApplication.


        :param name: The name of this GetApplicationResponseApplication.
        :type name: str
        """

        self._name = name

    @property
    def arn(self):
        """Gets the arn of this GetApplicationResponseApplication.


        :return: The arn of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetApplicationResponseApplication.


        :param arn: The arn of this GetApplicationResponseApplication.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def release_label(self):
        """Gets the release_label of this GetApplicationResponseApplication.


        :return: The release_label of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._release_label

    @release_label.setter
    def release_label(self, release_label):
        """Sets the release_label of this GetApplicationResponseApplication.


        :param release_label: The release_label of this GetApplicationResponseApplication.
        :type release_label: str
        """
        if release_label is None:
            raise ValueError("Invalid value for `release_label`, must not be `None`")

        self._release_label = release_label

    @property
    def type(self):
        """Gets the type of this GetApplicationResponseApplication.


        :return: The type of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetApplicationResponseApplication.


        :param type: The type of this GetApplicationResponseApplication.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def state(self):
        """Gets the state of this GetApplicationResponseApplication.


        :return: The state of this GetApplicationResponseApplication.
        :rtype: ApplicationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GetApplicationResponseApplication.


        :param state: The state of this GetApplicationResponseApplication.
        :type state: ApplicationState
        """
        if state is None:
            raise ValueError("Invalid value for `state`, must not be `None`")

        self._state = state

    @property
    def state_details(self):
        """Gets the state_details of this GetApplicationResponseApplication.


        :return: The state_details of this GetApplicationResponseApplication.
        :rtype: str
        """
        return self._state_details

    @state_details.setter
    def state_details(self, state_details):
        """Sets the state_details of this GetApplicationResponseApplication.


        :param state_details: The state_details of this GetApplicationResponseApplication.
        :type state_details: str
        """

        self._state_details = state_details

    @property
    def initial_capacity(self):
        """Gets the initial_capacity of this GetApplicationResponseApplication.


        :return: The initial_capacity of this GetApplicationResponseApplication.
        :rtype: Dict
        """
        return self._initial_capacity

    @initial_capacity.setter
    def initial_capacity(self, initial_capacity):
        """Sets the initial_capacity of this GetApplicationResponseApplication.


        :param initial_capacity: The initial_capacity of this GetApplicationResponseApplication.
        :type initial_capacity: Dict
        """

        self._initial_capacity = initial_capacity

    @property
    def maximum_capacity(self):
        """Gets the maximum_capacity of this GetApplicationResponseApplication.


        :return: The maximum_capacity of this GetApplicationResponseApplication.
        :rtype: ApplicationMaximumCapacity
        """
        return self._maximum_capacity

    @maximum_capacity.setter
    def maximum_capacity(self, maximum_capacity):
        """Sets the maximum_capacity of this GetApplicationResponseApplication.


        :param maximum_capacity: The maximum_capacity of this GetApplicationResponseApplication.
        :type maximum_capacity: ApplicationMaximumCapacity
        """

        self._maximum_capacity = maximum_capacity

    @property
    def created_at(self):
        """Gets the created_at of this GetApplicationResponseApplication.


        :return: The created_at of this GetApplicationResponseApplication.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetApplicationResponseApplication.


        :param created_at: The created_at of this GetApplicationResponseApplication.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this GetApplicationResponseApplication.


        :return: The updated_at of this GetApplicationResponseApplication.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this GetApplicationResponseApplication.


        :param updated_at: The updated_at of this GetApplicationResponseApplication.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")

        self._updated_at = updated_at

    @property
    def tags(self):
        """Gets the tags of this GetApplicationResponseApplication.


        :return: The tags of this GetApplicationResponseApplication.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetApplicationResponseApplication.


        :param tags: The tags of this GetApplicationResponseApplication.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def auto_start_configuration(self):
        """Gets the auto_start_configuration of this GetApplicationResponseApplication.


        :return: The auto_start_configuration of this GetApplicationResponseApplication.
        :rtype: ApplicationAutoStartConfiguration
        """
        return self._auto_start_configuration

    @auto_start_configuration.setter
    def auto_start_configuration(self, auto_start_configuration):
        """Sets the auto_start_configuration of this GetApplicationResponseApplication.


        :param auto_start_configuration: The auto_start_configuration of this GetApplicationResponseApplication.
        :type auto_start_configuration: ApplicationAutoStartConfiguration
        """

        self._auto_start_configuration = auto_start_configuration

    @property
    def auto_stop_configuration(self):
        """Gets the auto_stop_configuration of this GetApplicationResponseApplication.


        :return: The auto_stop_configuration of this GetApplicationResponseApplication.
        :rtype: ApplicationAutoStopConfiguration
        """
        return self._auto_stop_configuration

    @auto_stop_configuration.setter
    def auto_stop_configuration(self, auto_stop_configuration):
        """Sets the auto_stop_configuration of this GetApplicationResponseApplication.


        :param auto_stop_configuration: The auto_stop_configuration of this GetApplicationResponseApplication.
        :type auto_stop_configuration: ApplicationAutoStopConfiguration
        """

        self._auto_stop_configuration = auto_stop_configuration

    @property
    def network_configuration(self):
        """Gets the network_configuration of this GetApplicationResponseApplication.


        :return: The network_configuration of this GetApplicationResponseApplication.
        :rtype: ApplicationNetworkConfiguration
        """
        return self._network_configuration

    @network_configuration.setter
    def network_configuration(self, network_configuration):
        """Sets the network_configuration of this GetApplicationResponseApplication.


        :param network_configuration: The network_configuration of this GetApplicationResponseApplication.
        :type network_configuration: ApplicationNetworkConfiguration
        """

        self._network_configuration = network_configuration

    @property
    def architecture(self):
        """Gets the architecture of this GetApplicationResponseApplication.


        :return: The architecture of this GetApplicationResponseApplication.
        :rtype: Architecture
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this GetApplicationResponseApplication.


        :param architecture: The architecture of this GetApplicationResponseApplication.
        :type architecture: Architecture
        """

        self._architecture = architecture

    @property
    def image_configuration(self):
        """Gets the image_configuration of this GetApplicationResponseApplication.


        :return: The image_configuration of this GetApplicationResponseApplication.
        :rtype: ApplicationImageConfiguration
        """
        return self._image_configuration

    @image_configuration.setter
    def image_configuration(self, image_configuration):
        """Sets the image_configuration of this GetApplicationResponseApplication.


        :param image_configuration: The image_configuration of this GetApplicationResponseApplication.
        :type image_configuration: ApplicationImageConfiguration
        """

        self._image_configuration = image_configuration

    @property
    def worker_type_specifications(self):
        """Gets the worker_type_specifications of this GetApplicationResponseApplication.


        :return: The worker_type_specifications of this GetApplicationResponseApplication.
        :rtype: Dict
        """
        return self._worker_type_specifications

    @worker_type_specifications.setter
    def worker_type_specifications(self, worker_type_specifications):
        """Sets the worker_type_specifications of this GetApplicationResponseApplication.


        :param worker_type_specifications: The worker_type_specifications of this GetApplicationResponseApplication.
        :type worker_type_specifications: Dict
        """

        self._worker_type_specifications = worker_type_specifications
