# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class S3MonitoringConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_uri: str=None, encryption_key_arn: str=None):
        """S3MonitoringConfiguration - a model defined in OpenAPI

        :param log_uri: The log_uri of this S3MonitoringConfiguration.
        :param encryption_key_arn: The encryption_key_arn of this S3MonitoringConfiguration.
        """
        self.openapi_types = {
            'log_uri': str,
            'encryption_key_arn': str
        }

        self.attribute_map = {
            'log_uri': 'logUri',
            'encryption_key_arn': 'encryptionKeyArn'
        }

        self._log_uri = log_uri
        self._encryption_key_arn = encryption_key_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3MonitoringConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3MonitoringConfiguration of this S3MonitoringConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_uri(self):
        """Gets the log_uri of this S3MonitoringConfiguration.


        :return: The log_uri of this S3MonitoringConfiguration.
        :rtype: str
        """
        return self._log_uri

    @log_uri.setter
    def log_uri(self, log_uri):
        """Sets the log_uri of this S3MonitoringConfiguration.


        :param log_uri: The log_uri of this S3MonitoringConfiguration.
        :type log_uri: str
        """

        self._log_uri = log_uri

    @property
    def encryption_key_arn(self):
        """Gets the encryption_key_arn of this S3MonitoringConfiguration.


        :return: The encryption_key_arn of this S3MonitoringConfiguration.
        :rtype: str
        """
        return self._encryption_key_arn

    @encryption_key_arn.setter
    def encryption_key_arn(self, encryption_key_arn):
        """Sets the encryption_key_arn of this S3MonitoringConfiguration.


        :param encryption_key_arn: The encryption_key_arn of this S3MonitoringConfiguration.
        :type encryption_key_arn: str
        """

        self._encryption_key_arn = encryption_key_arn
