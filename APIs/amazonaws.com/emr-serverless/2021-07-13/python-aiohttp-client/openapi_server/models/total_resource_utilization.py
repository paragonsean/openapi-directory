# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TotalResourceUtilization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, v_cpu_hour: float=None, memory_gb_hour: float=None, storage_gb_hour: float=None):
        """TotalResourceUtilization - a model defined in OpenAPI

        :param v_cpu_hour: The v_cpu_hour of this TotalResourceUtilization.
        :param memory_gb_hour: The memory_gb_hour of this TotalResourceUtilization.
        :param storage_gb_hour: The storage_gb_hour of this TotalResourceUtilization.
        """
        self.openapi_types = {
            'v_cpu_hour': float,
            'memory_gb_hour': float,
            'storage_gb_hour': float
        }

        self.attribute_map = {
            'v_cpu_hour': 'vCPUHour',
            'memory_gb_hour': 'memoryGBHour',
            'storage_gb_hour': 'storageGBHour'
        }

        self._v_cpu_hour = v_cpu_hour
        self._memory_gb_hour = memory_gb_hour
        self._storage_gb_hour = storage_gb_hour

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TotalResourceUtilization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TotalResourceUtilization of this TotalResourceUtilization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def v_cpu_hour(self):
        """Gets the v_cpu_hour of this TotalResourceUtilization.


        :return: The v_cpu_hour of this TotalResourceUtilization.
        :rtype: float
        """
        return self._v_cpu_hour

    @v_cpu_hour.setter
    def v_cpu_hour(self, v_cpu_hour):
        """Sets the v_cpu_hour of this TotalResourceUtilization.


        :param v_cpu_hour: The v_cpu_hour of this TotalResourceUtilization.
        :type v_cpu_hour: float
        """

        self._v_cpu_hour = v_cpu_hour

    @property
    def memory_gb_hour(self):
        """Gets the memory_gb_hour of this TotalResourceUtilization.


        :return: The memory_gb_hour of this TotalResourceUtilization.
        :rtype: float
        """
        return self._memory_gb_hour

    @memory_gb_hour.setter
    def memory_gb_hour(self, memory_gb_hour):
        """Sets the memory_gb_hour of this TotalResourceUtilization.


        :param memory_gb_hour: The memory_gb_hour of this TotalResourceUtilization.
        :type memory_gb_hour: float
        """

        self._memory_gb_hour = memory_gb_hour

    @property
    def storage_gb_hour(self):
        """Gets the storage_gb_hour of this TotalResourceUtilization.


        :return: The storage_gb_hour of this TotalResourceUtilization.
        :rtype: float
        """
        return self._storage_gb_hour

    @storage_gb_hour.setter
    def storage_gb_hour(self, storage_gb_hour):
        """Sets the storage_gb_hour of this TotalResourceUtilization.


        :param storage_gb_hour: The storage_gb_hour of this TotalResourceUtilization.
        :type storage_gb_hour: float
        """

        self._storage_gb_hour = storage_gb_hour
