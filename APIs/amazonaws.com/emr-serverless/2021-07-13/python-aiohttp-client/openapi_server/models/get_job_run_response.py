# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_job_run_response_job_run import GetJobRunResponseJobRun
from openapi_server import util


class GetJobRunResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_run: GetJobRunResponseJobRun=None):
        """GetJobRunResponse - a model defined in OpenAPI

        :param job_run: The job_run of this GetJobRunResponse.
        """
        self.openapi_types = {
            'job_run': GetJobRunResponseJobRun
        }

        self.attribute_map = {
            'job_run': 'jobRun'
        }

        self._job_run = job_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetJobRunResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetJobRunResponse of this GetJobRunResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_run(self):
        """Gets the job_run of this GetJobRunResponse.


        :return: The job_run of this GetJobRunResponse.
        :rtype: GetJobRunResponseJobRun
        """
        return self._job_run

    @job_run.setter
    def job_run(self, job_run):
        """Sets the job_run of this GetJobRunResponse.


        :param job_run: The job_run of this GetJobRunResponse.
        :type job_run: GetJobRunResponseJobRun
        """
        if job_run is None:
            raise ValueError("Invalid value for `job_run`, must not be `None`")

        self._job_run = job_run
