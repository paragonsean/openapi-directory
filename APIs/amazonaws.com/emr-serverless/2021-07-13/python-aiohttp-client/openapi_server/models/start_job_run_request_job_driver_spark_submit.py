# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartJobRunRequestJobDriverSparkSubmit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_point: str=None, entry_point_arguments: List=None, spark_submit_parameters: str=None):
        """StartJobRunRequestJobDriverSparkSubmit - a model defined in OpenAPI

        :param entry_point: The entry_point of this StartJobRunRequestJobDriverSparkSubmit.
        :param entry_point_arguments: The entry_point_arguments of this StartJobRunRequestJobDriverSparkSubmit.
        :param spark_submit_parameters: The spark_submit_parameters of this StartJobRunRequestJobDriverSparkSubmit.
        """
        self.openapi_types = {
            'entry_point': str,
            'entry_point_arguments': List,
            'spark_submit_parameters': str
        }

        self.attribute_map = {
            'entry_point': 'entryPoint',
            'entry_point_arguments': 'entryPointArguments',
            'spark_submit_parameters': 'sparkSubmitParameters'
        }

        self._entry_point = entry_point
        self._entry_point_arguments = entry_point_arguments
        self._spark_submit_parameters = spark_submit_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartJobRunRequestJobDriverSparkSubmit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartJobRun_request_jobDriver_sparkSubmit of this StartJobRunRequestJobDriverSparkSubmit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_point(self):
        """Gets the entry_point of this StartJobRunRequestJobDriverSparkSubmit.


        :return: The entry_point of this StartJobRunRequestJobDriverSparkSubmit.
        :rtype: str
        """
        return self._entry_point

    @entry_point.setter
    def entry_point(self, entry_point):
        """Sets the entry_point of this StartJobRunRequestJobDriverSparkSubmit.


        :param entry_point: The entry_point of this StartJobRunRequestJobDriverSparkSubmit.
        :type entry_point: str
        """
        if entry_point is None:
            raise ValueError("Invalid value for `entry_point`, must not be `None`")

        self._entry_point = entry_point

    @property
    def entry_point_arguments(self):
        """Gets the entry_point_arguments of this StartJobRunRequestJobDriverSparkSubmit.


        :return: The entry_point_arguments of this StartJobRunRequestJobDriverSparkSubmit.
        :rtype: List
        """
        return self._entry_point_arguments

    @entry_point_arguments.setter
    def entry_point_arguments(self, entry_point_arguments):
        """Sets the entry_point_arguments of this StartJobRunRequestJobDriverSparkSubmit.


        :param entry_point_arguments: The entry_point_arguments of this StartJobRunRequestJobDriverSparkSubmit.
        :type entry_point_arguments: List
        """

        self._entry_point_arguments = entry_point_arguments

    @property
    def spark_submit_parameters(self):
        """Gets the spark_submit_parameters of this StartJobRunRequestJobDriverSparkSubmit.


        :return: The spark_submit_parameters of this StartJobRunRequestJobDriverSparkSubmit.
        :rtype: str
        """
        return self._spark_submit_parameters

    @spark_submit_parameters.setter
    def spark_submit_parameters(self, spark_submit_parameters):
        """Sets the spark_submit_parameters of this StartJobRunRequestJobDriverSparkSubmit.


        :param spark_submit_parameters: The spark_submit_parameters of this StartJobRunRequestJobDriverSparkSubmit.
        :type spark_submit_parameters: str
        """

        self._spark_submit_parameters = spark_submit_parameters
