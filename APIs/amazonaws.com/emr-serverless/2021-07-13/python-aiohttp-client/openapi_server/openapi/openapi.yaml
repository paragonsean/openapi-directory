openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon EMR Serverless is a new deployment option for Amazon EMR.\
    \ Amazon EMR Serverless provides a serverless runtime environment that simplifies\
    \ running analytics applications using the latest open source frameworks such\
    \ as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have\
    \ to configure, optimize, secure, or operate clusters to run applications with\
    \ these frameworks.</p> <p>The API reference to Amazon EMR Serverless is <code>emr-serverless</code>.\
    \ The <code>emr-serverless</code> prefix is used in the following scenarios: </p>\
    \ <ul> <li> <p>It is the prefix in the CLI commands for Amazon EMR Serverless.\
    \ For example, <code>aws emr-serverless start-job-run</code>.</p> </li> <li> <p>It\
    \ is the prefix before IAM policy actions for Amazon EMR Serverless. For example,\
    \ <code>\"Action\": [\"emr-serverless:StartJobRun\"]</code>. For more information,\
    \ see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\"\
    >Policy actions for Amazon EMR Serverless</a>.</p> </li> <li> <p>It is the prefix\
    \ used in Amazon EMR Serverless service endpoints. For example, <code>emr-serverless.us-east-2.amazonaws.com</code>.</p>\
    \ </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: EMR Serverless
  version: 2021-07-13
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: emr-serverless
  x-aws-signingName: emr-serverless
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/emr-serverless-2021-07-13.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/emr-serverless/
servers:
- description: The EMR Serverless multi-region endpoint
  url: "http://emr-serverless.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The EMR Serverless multi-region endpoint
  url: "https://emr-serverless.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The EMR Serverless endpoint for China (Beijing) and China (Ningxia)
  url: "http://emr-serverless.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The EMR Serverless endpoint for China (Beijing) and China (Ningxia)
  url: "https://emr-serverless.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /applications:
    get:
      description: Lists applications based on a set of parameters.
      operationId: list_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token for the next set of application results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[A-Za-z0-9_=-]+"
          type: string
        style: form
      - description: The maximum number of applications that can be listed.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: "An optional filter for application states. Note that if this\
          \ filter contains multiple states, the resulting list will be grouped by\
          \ the state."
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ApplicationState'
          maxItems: 7
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates an application.
      operationId: create_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}:
    delete:
      description: Deletes an application. An application has to be in a stopped or
        created state in order to be deleted.
      operationId: delete_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application that will be deleted.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Displays detailed information about a specified application.
      operationId: get_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application that will be described.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: Updates a specified application. An application has to be in a
        stopped or created state in order to be updated.
      operationId: update_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application to update.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/jobruns:
    get:
      description: Lists job runs based on a set of parameters.
      operationId: list_job_runs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application for which to list the job run.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      - description: The token for the next set of job run results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[A-Za-z0-9_=-]+"
          type: string
        style: form
      - description: The maximum number of job runs that can be listed.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The lower bound of the option to filter by creation date and
          time.
        explode: true
        in: query
        name: createdAtAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The upper bound of the option to filter by creation date and
          time.
        explode: true
        in: query
        name: createdAtBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "An optional filter for job run states. Note that if this filter\
          \ contains multiple states, the resulting list will be grouped by the state."
        explode: true
        in: query
        name: states
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobRunState'
          maxItems: 8
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Starts a job run.
      operationId: start_job_run
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application on which to run the job.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartJobRun_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /applications/{applicationId}/jobruns/{jobRunId}:
    delete:
      description: Cancels a job run.
      operationId: cancel_job_run
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application on which the job run will be canceled.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      - description: The ID of the job run to cancel.
        explode: false
        in: path
        name: jobRunId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Displays detailed information about a job run.
      operationId: get_job_run
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application on which the job run is submitted.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      - description: The ID of the job run.
        explode: false
        in: path
        name: jobRunId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/jobruns/{jobRunId}/dashboard:
    get:
      description: "<p>Creates and returns a URL that you can use to access the application\
        \ UIs for a job run.</p> <p>For jobs in a running state, the application UI\
        \ is a live user interface such as the Spark or Tez web UI. For completed\
        \ jobs, the application UI is a persistent application user interface such\
        \ as the Spark History Server or persistent Tez UI.</p> <note> <p>The URL\
        \ is valid for one hour after you generate it. To access the application UI\
        \ after that hour elapses, you must invoke the API again to generate a new\
        \ URL.</p> </note>"
      operationId: get_dashboard_for_job_run
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      - description: The ID of the job run.
        explode: false
        in: path
        name: jobRunId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboardForJobRunResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/start:
    post:
      description: Starts a specified application and initializes initial capacity
        if configured.
      operationId: start_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application to start.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /applications/{applicationId}/stop:
    post:
      description: Stops a specified application and releases initial capacity if
        configured. All scheduled and running jobs must be completed or cancelled
        before stopping an application.
      operationId: stop_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the application to stop.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-z]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Lists the tags assigned to the resources.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that identifies the resource\
          \ to list the tags for. Currently, the supported resources are Amazon EMR\
          \ Serverless applications and job runs."
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1024
          minLength: 60
          pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
            /[0-9a-zA-Z]+(\\/jobruns\\/[0-9a-zA-Z]+)?"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Assigns tags to resources. A tag is a label that you assign to\
        \ an Amazon Web Services resource. Each tag consists of a key and an optional\
        \ value, both of which you define. Tags enable you to categorize your Amazon\
        \ Web Services resources by attributes such as purpose, owner, or environment.\
        \ When you have many resources of the same type, you can quickly identify\
        \ a specific resource based on the tags you've assigned to it. "
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that identifies the resource\
          \ to list the tags for. Currently, the supported resources are Amazon EMR\
          \ Serverless applications and job runs."
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1024
          minLength: 60
          pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
            /[0-9a-zA-Z]+(\\/jobruns\\/[0-9a-zA-Z]+)?"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes tags from resources.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The Amazon Resource Name (ARN) that identifies the resource\
          \ to list the tags for. Currently, the supported resources are Amazon EMR\
          \ Serverless applications and job runs."
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1024
          minLength: 60
          pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
            /[0-9a-zA-Z]+(\\/jobruns\\/[0-9a-zA-Z]+)?"
          type: string
        style: simple
      - description: The keys of the tags to be removed.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelJobRunResponse:
      example:
        applicationId: ""
        jobRunId: ""
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The output contains the application ID on which the job run
              is cancelled.
          title: applicationId
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          - description: The output contains the ID of the cancelled job run.
          title: jobRunId
      required:
      - applicationId
      - jobRunId
      title: CancelJobRunResponse
      type: object
    ValidationException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    CreateApplicationResponse:
      example:
        name: ""
        applicationId: ""
        arn: ""
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The output contains the application ID.
          title: applicationId
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The output contains the name of the application.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The output contains the ARN of the application.
          title: arn
      required:
      - applicationId
      - arn
      title: CreateApplicationResponse
      type: object
    InitialCapacityConfig:
      description: The initial capacity configuration per worker.
      properties:
        workerCount:
          allOf:
          - $ref: '#/components/schemas/WorkerCounts'
          - description: The number of workers in the initial capacity configuration.
          title: workerCount
        workerConfiguration:
          $ref: '#/components/schemas/InitialCapacityConfig_workerConfiguration'
      required:
      - workerCount
      title: InitialCapacityConfig
      type: object
    CpuSize:
      maxLength: 15
      minLength: 1
      pattern: "[1-9][0-9]*(\\s)?(vCPU|vcpu|VCPU)?"
      type: string
    MemorySize:
      maxLength: 15
      minLength: 1
      pattern: "[1-9][0-9]*(\\s)?(GB|gb|gB|Gb)?"
      type: string
    DiskSize:
      maxLength: 15
      minLength: 1
      pattern: "[1-9][0-9]*(\\s)?(GB|gb|gB|Gb)"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "[A-Za-z0-9 /_.:=+@-]*"
      title: TagValue
      type: string
    Boolean:
      type: boolean
    AutoStopConfigIdleTimeoutMinutesInteger:
      maximum: 10080
      minimum: 1
      type: integer
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetString'
      maxItems: 16
      minItems: 0
      type: array
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupString'
      maxItems: 5
      minItems: 0
      type: array
    ImageUri:
      maxLength: 1024
      minLength: 1
      pattern: "([a-z0-9]+[a-z0-9-.]*)\\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\\\
        :([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))"
      type: string
    WorkerTypeSpecificationInput:
      description: The specifications for a worker type.
      properties:
        imageConfiguration:
          $ref: '#/components/schemas/WorkerTypeSpecificationInput_imageConfiguration'
      title: WorkerTypeSpecificationInput
      type: object
    ConflictException: {}
    DeleteApplicationResponse:
      properties: {}
      type: object
    GetApplicationResponse:
      example:
        application:
          networkConfiguration:
            securityGroupIds: ""
            subnetIds: ""
          initialCapacity: ""
          releaseLabel: ""
          type: ""
          tags: ""
          autoStopConfiguration:
            idleTimeoutMinutes: ""
            enabled: ""
          createdAt: ""
          imageConfiguration:
            resolvedImageDigest: ""
            imageUri: ""
          workerTypeSpecifications: ""
          name: ""
          autoStartConfiguration:
            enabled: ""
          state: ""
          maximumCapacity:
            disk: ""
            memory: ""
            cpu: ""
          applicationId: ""
          arn: ""
          stateDetails: ""
          updatedAt: ""
          architecture: ""
      properties:
        application:
          $ref: '#/components/schemas/GetApplicationResponse_application'
      required:
      - application
      title: GetApplicationResponse
      type: object
    GetDashboardForJobRunResponse:
      example:
        url: ""
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL to view job run's dashboard.
          title: url
      title: GetDashboardForJobRunResponse
      type: object
    GetJobRunResponse:
      example:
        jobRun:
          executionTimeoutMinutes: ""
          totalExecutionDurationSeconds: ""
          networkConfiguration:
            securityGroupIds: ""
            subnetIds: ""
          totalResourceUtilization:
            memoryGBHour: ""
            vCPUHour: ""
            storageGBHour: ""
          releaseLabel: ""
          jobRunId: ""
          tags: ""
          createdAt: ""
          configurationOverrides:
            monitoringConfiguration:
              cloudWatchLoggingConfiguration:
                encryptionKeyArn: ""
                logGroupName: ""
                logStreamNamePrefix: ""
                logTypes: ""
                enabled: ""
              s3MonitoringConfiguration:
                encryptionKeyArn: ""
                logUri: ""
              managedPersistenceMonitoringConfiguration:
                encryptionKeyArn: ""
                enabled: ""
            applicationConfiguration: ""
          createdBy: ""
          name: ""
          jobDriver:
            hive:
              initQueryFile: ""
              query: ""
              parameters: ""
            sparkSubmit:
              entryPointArguments: ""
              entryPoint: ""
              sparkSubmitParameters: ""
          billedResourceUtilization:
            memoryGBHour: ""
            vCPUHour: ""
            storageGBHour: ""
          executionRole: ""
          state: ""
          applicationId: ""
          arn: ""
          stateDetails: ""
          updatedAt: ""
      properties:
        jobRun:
          $ref: '#/components/schemas/GetJobRunResponse_jobRun'
      required:
      - jobRun
      title: GetJobRunResponse
      type: object
    ListApplicationsResponse:
      example:
        nextToken: ""
        applications: ""
      properties:
        applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationList'
          - description: The output lists the specified applications.
          title: applications
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The output displays the token for the next set of application
              results. This is required for pagination and is available as a response
              of the previous request.
          title: nextToken
      required:
      - applications
      title: ListApplicationsResponse
      type: object
    ApplicationState:
      enum:
      - CREATING
      - CREATED
      - STARTING
      - STARTED
      - STOPPING
      - STOPPED
      - TERMINATED
      title: ApplicationState
      type: string
    ListJobRunsResponse:
      example:
        nextToken: ""
        jobRuns: ""
      properties:
        jobRuns:
          allOf:
          - $ref: '#/components/schemas/JobRuns'
          - description: The output lists information about the specified job runs.
          title: jobRuns
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The output displays the token for the next set of job run
              results. This is required for pagination and is available as a response
              of the previous request.
          title: nextToken
      required:
      - jobRuns
      title: ListJobRunsResponse
      type: object
    JobRunState:
      enum:
      - SUBMITTED
      - PENDING
      - SCHEDULED
      - RUNNING
      - SUCCESS
      - FAILED
      - CANCELLING
      - CANCELLED
      title: JobRunState
      type: string
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    StartApplicationResponse:
      properties: {}
      type: object
    ServiceQuotaExceededException: {}
    StartJobRunResponse:
      example:
        applicationId: ""
        jobRunId: ""
        arn: ""
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: This output displays the application ID on which the job
              run was submitted.
          title: applicationId
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          - description: The output contains the ID of the started job run.
          title: jobRunId
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: This output displays the ARN of the job run..
          title: arn
      required:
      - applicationId
      - arn
      - jobRunId
      title: StartJobRunResponse
      type: object
    SparkSubmit:
      description: The configurations for the Spark submit job driver.
      properties:
        entryPoint:
          allOf:
          - $ref: '#/components/schemas/EntryPointPath'
          - description: The entry point for the Spark submit job run.
          title: entryPoint
        entryPointArguments:
          allOf:
          - $ref: '#/components/schemas/EntryPointArguments'
          - description: The arguments for the Spark submit job run.
          title: entryPointArguments
        sparkSubmitParameters:
          allOf:
          - $ref: '#/components/schemas/SparkSubmitParameters'
          - description: The parameters for the Spark submit job run.
          title: sparkSubmitParameters
      required:
      - entryPoint
      title: SparkSubmit
      type: object
    Hive:
      description: The configurations for the Hive job driver.
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/Query'
          - description: The query for the Hive job run.
          title: query
        initQueryFile:
          allOf:
          - $ref: '#/components/schemas/InitScriptPath'
          - description: The query file for the Hive job run.
          title: initQueryFile
        parameters:
          allOf:
          - $ref: '#/components/schemas/HiveCliParameters'
          - description: The parameters for the Hive job run.
          title: parameters
      required:
      - query
      title: Hive
      type: object
    ConfigurationList:
      items:
        $ref: '#/components/schemas/Configuration'
      maxItems: 100
      minItems: 0
      type: array
    MonitoringConfiguration:
      description: The configuration setting for monitoring.
      properties:
        s3MonitoringConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration_s3MonitoringConfiguration'
        managedPersistenceMonitoringConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration_managedPersistenceMonitoringConfiguration'
        cloudWatchLoggingConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration_cloudWatchLoggingConfiguration'
      title: MonitoringConfiguration
      type: object
    StopApplicationResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "[A-Za-z0-9 /_.:=+@-]+"
      title: TagKey
      type: string
    UpdateApplicationResponse:
      example:
        application:
          networkConfiguration:
            securityGroupIds: ""
            subnetIds: ""
          initialCapacity: ""
          releaseLabel: ""
          type: ""
          tags: ""
          autoStopConfiguration:
            idleTimeoutMinutes: ""
            enabled: ""
          createdAt: ""
          imageConfiguration:
            resolvedImageDigest: ""
            imageUri: ""
          workerTypeSpecifications: ""
          name: ""
          autoStartConfiguration:
            enabled: ""
          state: ""
          maximumCapacity:
            disk: ""
            memory: ""
            cpu: ""
          applicationId: ""
          arn: ""
          stateDetails: ""
          updatedAt: ""
          architecture: ""
      properties:
        application:
          $ref: '#/components/schemas/UpdateApplicationResponse_application'
      required:
      - application
      title: UpdateApplicationResponse
      type: object
    ApplicationId:
      maxLength: 64
      minLength: 1
      pattern: "[0-9a-z]+"
      type: string
    ApplicationName:
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9._/#-]+"
      type: string
    ApplicationArn:
      maxLength: 1024
      minLength: 60
      pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
        /[0-9a-zA-Z]+"
      type: string
    ReleaseLabel:
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9._/-]+"
      type: string
    EngineType:
      maxLength: 64
      minLength: 1
      type: string
    String256:
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    InitialCapacityConfigMap:
      additionalProperties:
        $ref: '#/components/schemas/InitialCapacityConfig'
      maxProperties: 10
      minProperties: 0
      type: object
    MaximumAllowedResources:
      description: The maximum allowed cumulative resources for an application. No
        new resources will be created once the limit is hit.
      properties:
        cpu:
          allOf:
          - $ref: '#/components/schemas/CpuSize'
          - description: The maximum allowed CPU for an application.
          title: cpu
        memory:
          allOf:
          - $ref: '#/components/schemas/MemorySize'
          - description: The maximum allowed resources for an application.
          title: memory
        disk:
          allOf:
          - $ref: '#/components/schemas/DiskSize'
          - description: The maximum allowed disk for an application.
          title: disk
      required:
      - cpu
      - memory
      title: MaximumAllowedResources
      type: object
    Date:
      format: date-time
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    AutoStartConfig:
      description: The configuration for an application to automatically start on
        job submission.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables the application to automatically start on job submission.
              Defaults to true.
          title: enabled
      title: AutoStartConfig
      type: object
    AutoStopConfig:
      description: The configuration for an application to automatically stop after
        a certain amount of time being idle.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables the application to automatically stop after a certain
              amount of time being idle. Defaults to true.
          title: enabled
        idleTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/AutoStopConfigIdleTimeoutMinutesInteger'
          - description: The amount of idle time in minutes after which your application
              will automatically stop. Defaults to 15 minutes.
          title: idleTimeoutMinutes
      title: AutoStopConfig
      type: object
    NetworkConfiguration:
      description: The network configuration for customer VPC connectivity.
      example:
        securityGroupIds: ""
        subnetIds: ""
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The array of subnet Ids for customer VPC connectivity.
          title: subnetIds
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The array of security group Ids for customer VPC connectivity.
          title: securityGroupIds
      title: NetworkConfiguration
      type: object
    Architecture:
      enum:
      - ARM64
      - X86_64
      title: Architecture
      type: string
    ImageConfiguration:
      description: The applied image configuration.
      properties:
        imageUri:
          allOf:
          - $ref: '#/components/schemas/ImageUri'
          - description: The image URI.
          title: imageUri
        resolvedImageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          - description: The SHA256 digest of the image URI. This indicates which
              specific image the application is configured for. The image digest doesn't
              exist until an application has started.
          title: resolvedImageDigest
      required:
      - imageUri
      title: ImageConfiguration
      type: object
    WorkerTypeSpecificationMap:
      additionalProperties:
        $ref: '#/components/schemas/WorkerTypeSpecification'
      type: object
    Application:
      description: Information about an application. Amazon EMR Serverless uses applications
        to run jobs.
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
          title: applicationId
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The ARN of the application.
          title: arn
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release associated with the application.
          title: releaseLabel
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: "The type of application, such as Spark or Hive."
          title: type
        state:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: The state of the application.
          title: state
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The state details of the application.
          title: stateDetails
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          - description: The initial capacity of the application.
          title: initialCapacity
        maximumCapacity:
          $ref: '#/components/schemas/Application_maximumCapacity'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the application run was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the application run was last updated.
          title: updatedAt
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags assigned to the application.
          title: tags
        autoStartConfiguration:
          $ref: '#/components/schemas/Application_autoStartConfiguration'
        autoStopConfiguration:
          $ref: '#/components/schemas/Application_autoStopConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/Application_networkConfiguration'
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The CPU architecture of an application.
          title: architecture
        imageConfiguration:
          $ref: '#/components/schemas/Application_imageConfiguration'
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationMap'
          - description: The specification applied to each worker type.
          title: workerTypeSpecifications
      required:
      - applicationId
      - arn
      - createdAt
      - releaseLabel
      - state
      - type
      - updatedAt
      title: Application
      type: object
    ApplicationSummary:
      description: The summary of attributes associated with an application.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          - description: The ARN of the application.
          title: arn
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release associated with the application.
          title: releaseLabel
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: "The type of application, such as Spark or Hive."
          title: type
        state:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          - description: The state of the application.
          title: state
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The state details of the application.
          title: stateDetails
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the application was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the application was last updated.
          title: updatedAt
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The CPU architecture of an application.
          title: architecture
      required:
      - arn
      - createdAt
      - id
      - releaseLabel
      - state
      - type
      - updatedAt
      title: ApplicationSummary
      type: object
    ApplicationList:
      items:
        $ref: '#/components/schemas/ApplicationSummary'
      type: array
    ApplicationStateSet:
      items:
        $ref: '#/components/schemas/ApplicationState'
      maxItems: 7
      minItems: 1
      type: array
    JobRunId:
      maxLength: 64
      minLength: 1
      pattern: "[0-9a-z]+"
      type: string
    CancelJobRunRequest:
      properties: {}
      title: CancelJobRunRequest
      type: object
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9._-]+"
      type: string
    LogGroupName:
      maxLength: 512
      minLength: 1
      pattern: "[\\.\\-_/#A-Za-z0-9]+"
      type: string
    LogStreamNamePrefix:
      maxLength: 512
      minLength: 1
      pattern: "[^:*]*"
      type: string
    EncryptionKeyArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\\-]*:(\\d{12})?:key\\/[a-zA-Z0-9-]+"
      type: string
    LogTypeMap:
      additionalProperties:
        $ref: '#/components/schemas/LogTypeList'
      maxProperties: 4
      minProperties: 1
      type: object
    CloudWatchLoggingConfiguration:
      description: The Amazon CloudWatch configuration for monitoring logs. You can
        configure your jobs to send log information to CloudWatch.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables CloudWatch logging.
          title: enabled
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          - description: The name of the log group in Amazon CloudWatch Logs where
              you want to publish your logs.
          title: logGroupName
        logStreamNamePrefix:
          allOf:
          - $ref: '#/components/schemas/LogStreamNamePrefix'
          - description: Prefix for the CloudWatch log stream name.
          title: logStreamNamePrefix
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          - description: The Key Management Service (KMS) key ARN to encrypt the logs
              that you store in CloudWatch Logs.
          title: encryptionKeyArn
        logTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeMap'
          - description: "<p>The types of logs that you want to publish to CloudWatch.\
              \ If you don't specify any log types, driver STDOUT and STDERR logs\
              \ will be published to CloudWatch Logs by default. For more information\
              \ including the supported worker types for Hive and Spark, see <a href=\"\
              https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/logging.html#jobs-log-storage-cw\"\
              >Logging for EMR Serverless with CloudWatch</a>.</p> <ul> <li> <p> <b>Key\
              \ Valid Values</b>: <code>SPARK_DRIVER</code>, <code>SPARK_EXECUTOR</code>,\
              \ <code>HIVE_DRIVER</code>, <code>TEZ_TASK</code> </p> </li> <li> <p>\
              \ <b>Array Members Valid Values</b>: <code>STDOUT</code>, <code>STDERR</code>,\
              \ <code>HIVE_LOG</code>, <code>TEZ_AM</code>, <code>SYSTEM_LOGS</code>\
              \ </p> </li> </ul>"
          title: logTypes
      required:
      - enabled
      title: CloudWatchLoggingConfiguration
      type: object
    String1024:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    Configuration:
      description: "A configuration specification to be used when provisioning an\
        \ application. A configuration consists of a classification, properties, and\
        \ optional nested configurations. A classification refers to an application-specific\
        \ configuration file. Properties are the settings you want to change in that\
        \ file."
      properties:
        classification:
          allOf:
          - $ref: '#/components/schemas/String1024'
          - description: The classification within a configuration.
          title: classification
        properties:
          description: A set of properties specified within a configuration classification.
          title: properties
        configurations:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          - description: A list of additional configurations to apply within a configuration
              object.
          title: configurations
      required:
      - classification
      title: Configuration
      type: object
    ConfigurationOverrides:
      description: A configuration specification to be used to override existing configurations.
      properties:
        applicationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          - description: The override configurations for the application.
          title: applicationConfiguration
        monitoringConfiguration:
          $ref: '#/components/schemas/StartJobRun_request_configurationOverrides_monitoringConfiguration'
      title: ConfigurationOverrides
      type: object
    ImageConfigurationInput:
      description: The image configuration.
      properties:
        imageUri:
          allOf:
          - $ref: '#/components/schemas/ImageUri'
          - description: "The URI of an image in the Amazon ECR registry. This field\
              \ is required when you create a new application. If you leave this field\
              \ blank in an update, Amazon EMR will remove the image configuration."
          title: imageUri
      title: ImageConfigurationInput
      type: object
    WorkerTypeSpecificationInputMap:
      additionalProperties:
        $ref: '#/components/schemas/WorkerTypeSpecificationInput'
      type: object
    CreateApplicationRequest:
      example:
        networkConfiguration:
          securityGroupIds: ""
          subnetIds: ""
        clientToken: ""
        initialCapacity: ""
        releaseLabel: ""
        type: ""
        tags: ""
        autoStopConfiguration:
          idleTimeoutMinutes: ""
          enabled: ""
        imageConfiguration:
          imageUri: ""
        workerTypeSpecifications: ""
        name: ""
        autoStartConfiguration:
          enabled: ""
        maximumCapacity:
          disk: ""
          memory: ""
          cpu: ""
        architecture: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: The name of the application.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release associated with the application.
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          - description: "The type of application you want to start, such as Spark\
              \ or Hive."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client idempotency token of the application to create.
              Its value must be unique for each request.
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          - description: The capacity to initialize when the application is created.
        maximumCapacity:
          $ref: '#/components/schemas/CreateApplicationRequest_maximumCapacity'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags assigned to the application.
        autoStartConfiguration:
          $ref: '#/components/schemas/Application_autoStartConfiguration'
        autoStopConfiguration:
          $ref: '#/components/schemas/Application_autoStopConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/CreateApplicationRequest_networkConfiguration'
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The CPU architecture of an application.
        imageConfiguration:
          $ref: '#/components/schemas/CreateApplicationRequest_imageConfiguration'
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
          - description: "The key-value pairs that specify worker type to <code>WorkerTypeSpecificationInput</code>.\
              \ This parameter must contain all valid worker types for a Spark or\
              \ Hive application. Valid worker types include <code>Driver</code> and\
              \ <code>Executor</code> for Spark applications and <code>HiveDriver</code>\
              \ and <code>TezTask</code> for Hive applications. You can either set\
              \ image details in this parameter for each worker type, or in <code>imageConfiguration</code>\
              \ for all worker types."
      required:
      - clientToken
      - releaseLabel
      - type
      title: CreateApplicationRequest
      type: object
    DeleteApplicationRequest:
      properties: {}
      title: DeleteApplicationRequest
      type: object
    Double:
      format: double
      type: number
    Duration:
      maximum: 1000000
      minimum: 0
      type: integer
    EntryPointArgument:
      format: password
      maxLength: 10280
      minLength: 1
      pattern: .*\S.*
      title: EntryPointArgument
      type: string
    EntryPointArguments:
      items:
        $ref: '#/components/schemas/EntryPointArgument'
      type: array
    EntryPointPath:
      format: password
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    GetApplicationRequest:
      properties: {}
      title: GetApplicationRequest
      type: object
    GetDashboardForJobRunRequest:
      properties: {}
      title: GetDashboardForJobRunRequest
      type: object
    Url:
      maxLength: 2048
      minLength: 1
      type: string
    GetJobRunRequest:
      properties: {}
      title: GetJobRunRequest
      type: object
    JobRun:
      description: "Information about a job run. A job run is a unit of work, such\
        \ as a Spark JAR, Hive query, or SparkSQL query, that you submit to an Amazon\
        \ EMR Serverless application."
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application the job is running on.
          title: applicationId
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          - description: The ID of the job run.
          title: jobRunId
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The optional job run name. This doesn't have to be unique.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The execution role ARN of the job run.
          title: arn
        createdBy:
          allOf:
          - $ref: '#/components/schemas/RequestIdentityUserArn'
          - description: The user who created the job run.
          title: createdBy
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the job run was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the job run was updated.
          title: updatedAt
        executionRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The execution role ARN of the job run.
          title: executionRole
        state:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          - description: The state of the job run.
          title: state
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The state details of the job run.
          title: stateDetails
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release associated with the application your
              job is running on.
          title: releaseLabel
        configurationOverrides:
          $ref: '#/components/schemas/JobRun_configurationOverrides'
        jobDriver:
          $ref: '#/components/schemas/JobRun_jobDriver'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags assigned to the job run.
          title: tags
        totalResourceUtilization:
          $ref: '#/components/schemas/JobRun_totalResourceUtilization'
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        totalExecutionDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The job run total execution duration in seconds. This field\
              \ is only available for job runs in a <code>COMPLETED</code>, <code>FAILED</code>,\
              \ or <code>CANCELLED</code> state."
          title: totalExecutionDurationSeconds
        executionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "Returns the job run timeout value from the <code>StartJobRun</code>\
              \ call. If no timeout was specified, then it returns the default timeout\
              \ of 720 minutes."
          title: executionTimeoutMinutes
        billedResourceUtilization:
          $ref: '#/components/schemas/JobRun_billedResourceUtilization'
      required:
      - applicationId
      - arn
      - createdAt
      - createdBy
      - executionRole
      - jobDriver
      - jobRunId
      - releaseLabel
      - state
      - stateDetails
      - updatedAt
      title: JobRun
      type: object
    Query:
      format: password
      maxLength: 10280
      minLength: 1
      pattern: .*\S.*
      type: string
    InitScriptPath:
      format: password
      maxLength: 256
      minLength: 1
      pattern: .*\S.*
      type: string
    HiveCliParameters:
      format: password
      maxLength: 102400
      minLength: 1
      pattern: .*\S.*
      type: string
    IAMRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\\
        u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)"
      type: string
    ImageDigest:
      pattern: "sha256:[0-9a-f]{64}"
      type: string
    WorkerCounts:
      maximum: 1000000
      minimum: 1
      type: integer
    WorkerResourceConfig:
      description: The cumulative configuration requirements for every worker instance
        of the worker type.
      properties:
        cpu:
          allOf:
          - $ref: '#/components/schemas/CpuSize'
          - description: The CPU requirements for every worker instance of the worker
              type.
          title: cpu
        memory:
          allOf:
          - $ref: '#/components/schemas/MemorySize'
          - description: The memory requirements for every worker instance of the
              worker type.
          title: memory
        disk:
          allOf:
          - $ref: '#/components/schemas/DiskSize'
          - description: The disk requirements for every worker instance of the worker
              type.
          title: disk
      required:
      - cpu
      - memory
      title: WorkerResourceConfig
      type: object
    Integer:
      type: integer
    JobArn:
      maxLength: 1024
      minLength: 60
      pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
        /[0-9a-zA-Z]+\\/jobruns\\/[0-9a-zA-Z]+"
      type: string
    JobDriver:
      description: The driver that the job runs on.
      properties:
        sparkSubmit:
          $ref: '#/components/schemas/StartJobRun_request_jobDriver_sparkSubmit'
        hive:
          $ref: '#/components/schemas/StartJobRun_request_jobDriver_hive'
      title: JobDriver
      type: object
    RequestIdentityUserArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws[a-zA-Z0-9-]*):(iam|sts)::(\\d{12})?:[\\w/+=,.@-]+"
      type: string
    TotalResourceUtilization:
      description: "The aggregate vCPU, memory, and storage resources used from the\
        \ time job start executing till the time job is terminated, rounded up to\
        \ the nearest second."
      properties:
        vCPUHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated vCPU used per hour from the time job start
              executing till the time job is terminated.
          title: vCPUHour
        memoryGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated memory used per hour from the time job start
              executing till the time job is terminated.
          title: memoryGBHour
        storageGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated storage used per hour from the time job start
              executing till the time job is terminated.
          title: storageGBHour
      title: TotalResourceUtilization
      type: object
    ResourceUtilization:
      description: "The resource utilization for memory, storage, and vCPU for jobs."
      properties:
        vCPUHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated vCPU used per hour from the time the job starts
              executing until the job is terminated.
          title: vCPUHour
        memoryGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated memory used per hour from the time the job
              starts executing until the job is terminated.
          title: memoryGBHour
        storageGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The aggregated storage used per hour from the time the job
              starts executing until the job is terminated.
          title: storageGBHour
      title: ResourceUtilization
      type: object
    JobRunStateSet:
      items:
        $ref: '#/components/schemas/JobRunState'
      maxItems: 8
      minItems: 0
      type: array
    JobRunType:
      type: string
    JobRunSummary:
      description: The summary of attributes associated with a job run.
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          - description: The ID of the application the job is running on.
          title: applicationId
        id:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          - description: The ID of the job run.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The optional job run name. This doesn't have to be unique.
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the job run.
          title: arn
        createdBy:
          allOf:
          - $ref: '#/components/schemas/RequestIdentityUserArn'
          - description: The user who created the job run.
          title: createdBy
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the job run was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the job run was last updated.
          title: updatedAt
        executionRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The execution role ARN of the job run.
          title: executionRole
        state:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          - description: The state of the job run.
          title: state
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The state details of the job run.
          title: stateDetails
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release associated with the application your
              job is running on.
          title: releaseLabel
        type:
          allOf:
          - $ref: '#/components/schemas/JobRunType'
          - description: "The type of job run, such as Spark or Hive."
          title: type
      required:
      - applicationId
      - arn
      - createdAt
      - createdBy
      - executionRole
      - id
      - releaseLabel
      - state
      - stateDetails
      - updatedAt
      title: JobRunSummary
      type: object
    JobRuns:
      items:
        $ref: '#/components/schemas/JobRunSummary'
      type: array
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: "[A-Za-z0-9_=-]+"
      type: string
    ListApplicationsRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    ListApplicationsRequest:
      properties: {}
      title: ListApplicationsRequest
      type: object
    ListJobRunsRequestMaxResultsInteger:
      maximum: 50
      minimum: 1
      type: integer
    ListJobRunsRequest:
      properties: {}
      title: ListJobRunsRequest
      type: object
    ResourceArn:
      maxLength: 1024
      minLength: 60
      pattern: "arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\\d{12}):\\/applications\\\
        /[0-9a-zA-Z]+(\\/jobruns\\/[0-9a-zA-Z]+)?"
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogTypeString:
      description: Log type for a Spark/Hive job-run.
      maxLength: 50
      minLength: 1
      pattern: "[a-zA-Z]+[-_]*[a-zA-Z]+"
      title: LogTypeString
      type: string
    LogTypeList:
      items:
        $ref: '#/components/schemas/LogTypeString'
      maxItems: 5
      minItems: 1
      title: LogTypeList
      type: array
    ManagedPersistenceMonitoringConfiguration:
      description: The managed log persistence configuration for a job run.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Enables managed logging and defaults to true. If set to\
              \ false, managed logging will be turned off."
          title: enabled
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          - description: The KMS key ARN to encrypt the logs stored in managed log
              persistence.
          title: encryptionKeyArn
      title: ManagedPersistenceMonitoringConfiguration
      type: object
    S3MonitoringConfiguration:
      description: The Amazon S3 configuration for monitoring log publishing. You
        can configure your jobs to send log information to Amazon S3.
      properties:
        logUri:
          allOf:
          - $ref: '#/components/schemas/UriString'
          - description: The Amazon S3 destination URI for log publishing.
          title: logUri
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          - description: The KMS key ARN to encrypt the logs published to the given
              Amazon S3 destination.
          title: encryptionKeyArn
      title: S3MonitoringConfiguration
      type: object
    UriString:
      maxLength: 10280
      minLength: 1
      pattern: ".*[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\r\\\
        n\\t]*.*"
      type: string
    SecurityGroupString:
      maxLength: 32
      minLength: 1
      pattern: "[-0-9a-zA-Z]+.*"
      title: SecurityGroupString
      type: string
    SensitivePropertiesMap:
      additionalProperties:
        $ref: '#/components/schemas/String1024'
      maxProperties: 100
      minProperties: 0
      type: object
    SparkSubmitParameters:
      format: password
      maxLength: 102400
      minLength: 1
      pattern: .*\S.*
      type: string
    StartApplicationRequest:
      properties: {}
      title: StartApplicationRequest
      type: object
    StartJobRunRequest:
      example:
        executionTimeoutMinutes: ""
        configurationOverrides:
          monitoringConfiguration:
            cloudWatchLoggingConfiguration:
              encryptionKeyArn: ""
              logGroupName: ""
              logStreamNamePrefix: ""
              logTypes: ""
              enabled: ""
            s3MonitoringConfiguration:
              encryptionKeyArn: ""
              logUri: ""
            managedPersistenceMonitoringConfiguration:
              encryptionKeyArn: ""
              enabled: ""
          applicationConfiguration: ""
        executionRoleArn: ""
        clientToken: ""
        name: ""
        jobDriver:
          hive:
            initQueryFile: ""
            query: ""
            parameters: ""
          sparkSubmit:
            entryPointArguments: ""
            entryPoint: ""
            sparkSubmitParameters: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client idempotency token of the job run to start. Its
              value must be unique for each request.
        executionRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: The execution role ARN for the job run.
        jobDriver:
          $ref: '#/components/schemas/JobRun_jobDriver'
        configurationOverrides:
          $ref: '#/components/schemas/StartJobRunRequest_configurationOverrides'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags assigned to the job run.
        executionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: "The maximum duration for the job run to run. If the job\
              \ run runs beyond this duration, it will be automatically cancelled."
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The optional job run name. This doesn't have to be unique.
      required:
      - clientToken
      - executionRoleArn
      title: StartJobRunRequest
      type: object
    StopApplicationRequest:
      properties: {}
      title: StopApplicationRequest
      type: object
    SubnetString:
      maxLength: 32
      minLength: 1
      pattern: "[-0-9a-zA-Z]+.*"
      title: SubnetString
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to add to the resource. A tag is an array of key-value
              pairs.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationRequest:
      example:
        imageConfiguration:
          imageUri: ""
        networkConfiguration:
          securityGroupIds: ""
          subnetIds: ""
        clientToken: ""
        workerTypeSpecifications: ""
        initialCapacity: ""
        autoStartConfiguration:
          enabled: ""
        maximumCapacity:
          disk: ""
          memory: ""
          cpu: ""
        releaseLabel: ""
        autoStopConfiguration:
          idleTimeoutMinutes: ""
          enabled: ""
        architecture: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The client idempotency token of the application to update.
              Its value must be unique for each request.
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          - description: The capacity to initialize when the application is updated.
        maximumCapacity:
          $ref: '#/components/schemas/UpdateApplicationRequest_maximumCapacity'
        autoStartConfiguration:
          $ref: '#/components/schemas/Application_autoStartConfiguration'
        autoStopConfiguration:
          $ref: '#/components/schemas/Application_autoStopConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          - description: The CPU architecture of an application.
        imageConfiguration:
          $ref: '#/components/schemas/UpdateApplicationRequest_imageConfiguration'
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
          - description: "The key-value pairs that specify worker type to <code>WorkerTypeSpecificationInput</code>.\
              \ This parameter must contain all valid worker types for a Spark or\
              \ Hive application. Valid worker types include <code>Driver</code> and\
              \ <code>Executor</code> for Spark applications and <code>HiveDriver</code>\
              \ and <code>TezTask</code> for Hive applications. You can either set\
              \ image details in this parameter for each worker type, or in <code>imageConfiguration</code>\
              \ for all worker types."
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          - description: The Amazon EMR release label for the application. You can
              change the release label to use a different release of Amazon EMR.
      required:
      - clientToken
      title: UpdateApplicationRequest
      type: object
    WorkerTypeSpecification:
      description: The specifications for a worker type.
      properties:
        imageConfiguration:
          $ref: '#/components/schemas/WorkerTypeSpecification_imageConfiguration'
      title: WorkerTypeSpecification
      type: object
    WorkerTypeString:
      description: Worker type for an analytics framework.
      maxLength: 50
      minLength: 1
      pattern: "[a-zA-Z]+[-_]*[a-zA-Z]+"
      type: string
    CreateApplication_request_maximumCapacity:
      description: The maximum allowed cumulative resources for an application. No
        new resources will be created once the limit is hit.
      properties:
        cpu:
          allOf:
          - $ref: '#/components/schemas/CpuSize'
          - description: The maximum allowed CPU for an application.
          title: cpu
        memory:
          allOf:
          - $ref: '#/components/schemas/MemorySize'
          - description: The maximum allowed resources for an application.
          title: memory
        disk:
          allOf:
          - $ref: '#/components/schemas/DiskSize'
          - description: The maximum allowed disk for an application.
          title: disk
      title: CreateApplication_request_maximumCapacity
      type: object
    CreateApplication_request_autoStartConfiguration:
      description: The configuration for an application to automatically start on
        job submission.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables the application to automatically start on job submission.
              Defaults to true.
          title: enabled
      title: CreateApplication_request_autoStartConfiguration
      type: object
    CreateApplication_request_autoStopConfiguration:
      description: The configuration for an application to automatically stop after
        a certain amount of time being idle.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables the application to automatically stop after a certain
              amount of time being idle. Defaults to true.
          title: enabled
        idleTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/AutoStopConfigIdleTimeoutMinutesInteger'
          - description: The amount of idle time in minutes after which your application
              will automatically stop. Defaults to 15 minutes.
          title: idleTimeoutMinutes
      title: CreateApplication_request_autoStopConfiguration
      type: object
    CreateApplication_request_networkConfiguration:
      description: The network configuration for customer VPC connectivity.
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The array of subnet Ids for customer VPC connectivity.
          title: subnetIds
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The array of security group Ids for customer VPC connectivity.
          title: securityGroupIds
      title: CreateApplication_request_networkConfiguration
      type: object
    CreateApplication_request_imageConfiguration:
      description: The image configuration.
      properties:
        imageUri:
          allOf:
          - $ref: '#/components/schemas/ImageUri'
          - description: "The URI of an image in the Amazon ECR registry. This field\
              \ is required when you create a new application. If you leave this field\
              \ blank in an update, Amazon EMR will remove the image configuration."
          title: imageUri
      title: CreateApplication_request_imageConfiguration
      type: object
    CreateApplication_request:
      properties:
        name:
          description: The name of the application.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._/#-]+"
          title: name
          type: string
        releaseLabel:
          description: The Amazon EMR release associated with the application.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._/-]+"
          title: releaseLabel
          type: string
        type:
          description: "The type of application you want to start, such as Spark or\
            \ Hive."
          maxLength: 64
          minLength: 1
          title: type
          type: string
        clientToken:
          description: The client idempotency token of the application to create.
            Its value must be unique for each request.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._-]+"
          title: clientToken
          type: string
        initialCapacity:
          additionalProperties:
            $ref: '#/components/schemas/InitialCapacityConfig'
          description: The capacity to initialize when the application is created.
          maxProperties: 10
          minProperties: 0
          title: initialCapacity
          type: object
        maximumCapacity:
          $ref: '#/components/schemas/CreateApplication_request_maximumCapacity'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags assigned to the application.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
        autoStartConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_autoStartConfiguration'
        autoStopConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_autoStopConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_networkConfiguration'
        architecture:
          description: The CPU architecture of an application.
          enum:
          - ARM64
          - X86_64
          title: architecture
          type: string
        imageConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_imageConfiguration'
        workerTypeSpecifications:
          additionalProperties:
            $ref: '#/components/schemas/WorkerTypeSpecificationInput'
          description: "The key-value pairs that specify worker type to <code>WorkerTypeSpecificationInput</code>.\
            \ This parameter must contain all valid worker types for a Spark or Hive\
            \ application. Valid worker types include <code>Driver</code> and <code>Executor</code>\
            \ for Spark applications and <code>HiveDriver</code> and <code>TezTask</code>\
            \ for Hive applications. You can either set image details in this parameter\
            \ for each worker type, or in <code>imageConfiguration</code> for all\
            \ worker types."
          title: workerTypeSpecifications
          type: object
      required:
      - clientToken
      - releaseLabel
      - type
      title: CreateApplication_request
      type: object
    UpdateApplication_request:
      properties:
        clientToken:
          description: The client idempotency token of the application to update.
            Its value must be unique for each request.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._-]+"
          title: clientToken
          type: string
        initialCapacity:
          additionalProperties:
            $ref: '#/components/schemas/InitialCapacityConfig'
          description: The capacity to initialize when the application is updated.
          maxProperties: 10
          minProperties: 0
          title: initialCapacity
          type: object
        maximumCapacity:
          $ref: '#/components/schemas/CreateApplication_request_maximumCapacity'
        autoStartConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_autoStartConfiguration'
        autoStopConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_autoStopConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_networkConfiguration'
        architecture:
          description: The CPU architecture of an application.
          enum:
          - ARM64
          - X86_64
          title: architecture
          type: string
        imageConfiguration:
          $ref: '#/components/schemas/CreateApplication_request_imageConfiguration'
        workerTypeSpecifications:
          additionalProperties:
            $ref: '#/components/schemas/WorkerTypeSpecificationInput'
          description: "The key-value pairs that specify worker type to <code>WorkerTypeSpecificationInput</code>.\
            \ This parameter must contain all valid worker types for a Spark or Hive\
            \ application. Valid worker types include <code>Driver</code> and <code>Executor</code>\
            \ for Spark applications and <code>HiveDriver</code> and <code>TezTask</code>\
            \ for Hive applications. You can either set image details in this parameter\
            \ for each worker type, or in <code>imageConfiguration</code> for all\
            \ worker types."
          title: workerTypeSpecifications
          type: object
        releaseLabel:
          description: The Amazon EMR release label for the application. You can change
            the release label to use a different release of Amazon EMR.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._/-]+"
          title: releaseLabel
          type: string
      required:
      - clientToken
      title: UpdateApplication_request
      type: object
    StartJobRun_request_jobDriver_sparkSubmit:
      allOf:
      - $ref: '#/components/schemas/SparkSubmit'
      - description: The job driver parameters specified for Spark.
      example:
        entryPointArguments: ""
        entryPoint: ""
        sparkSubmitParameters: ""
      title: StartJobRun_request_jobDriver_sparkSubmit
    StartJobRun_request_jobDriver_hive:
      allOf:
      - $ref: '#/components/schemas/Hive'
      - description: The job driver parameters specified for Hive.
      example:
        initQueryFile: ""
        query: ""
        parameters: ""
      title: StartJobRun_request_jobDriver_hive
    StartJobRun_request_jobDriver:
      description: The driver that the job runs on.
      properties:
        sparkSubmit:
          $ref: '#/components/schemas/StartJobRun_request_jobDriver_sparkSubmit'
        hive:
          $ref: '#/components/schemas/StartJobRun_request_jobDriver_hive'
      title: StartJobRun_request_jobDriver
      type: object
    StartJobRun_request_configurationOverrides_monitoringConfiguration:
      allOf:
      - $ref: '#/components/schemas/MonitoringConfiguration'
      - description: The override configurations for monitoring.
      example:
        cloudWatchLoggingConfiguration:
          encryptionKeyArn: ""
          logGroupName: ""
          logStreamNamePrefix: ""
          logTypes: ""
          enabled: ""
        s3MonitoringConfiguration:
          encryptionKeyArn: ""
          logUri: ""
        managedPersistenceMonitoringConfiguration:
          encryptionKeyArn: ""
          enabled: ""
      title: StartJobRun_request_configurationOverrides_monitoringConfiguration
    StartJobRun_request_configurationOverrides:
      description: A configuration specification to be used to override existing configurations.
      properties:
        applicationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          - description: The override configurations for the application.
          title: applicationConfiguration
        monitoringConfiguration:
          $ref: '#/components/schemas/StartJobRun_request_configurationOverrides_monitoringConfiguration'
      title: StartJobRun_request_configurationOverrides
      type: object
    StartJobRun_request:
      properties:
        clientToken:
          description: The client idempotency token of the job run to start. Its value
            must be unique for each request.
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9._-]+"
          title: clientToken
          type: string
        executionRoleArn:
          description: The execution role ARN for the job run.
          maxLength: 2048
          minLength: 20
          pattern: "arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\\
            u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)"
          title: executionRoleArn
          type: string
        jobDriver:
          $ref: '#/components/schemas/StartJobRun_request_jobDriver'
        configurationOverrides:
          $ref: '#/components/schemas/StartJobRun_request_configurationOverrides'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags assigned to the job run.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
        executionTimeoutMinutes:
          description: "The maximum duration for the job run to run. If the job run\
            \ runs beyond this duration, it will be automatically cancelled."
          maximum: 1000000
          minimum: 0
          title: executionTimeoutMinutes
          type: integer
        name:
          description: The optional job run name. This doesn't have to be unique.
          maxLength: 256
          minLength: 1
          pattern: .*\S.*
          title: name
          type: string
      required:
      - clientToken
      - executionRoleArn
      title: StartJobRun_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the resource. A tag is an array of key-value
            pairs.
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    InitialCapacityConfig_workerConfiguration:
      allOf:
      - $ref: '#/components/schemas/WorkerResourceConfig'
      - description: The resource configuration of the initial capacity configuration.
      title: InitialCapacityConfig_workerConfiguration
    WorkerTypeSpecificationInput_imageConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageConfigurationInput'
      - description: The image configuration for a worker type.
      title: WorkerTypeSpecificationInput_imageConfiguration
    GetApplicationResponse_application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: The output displays information about the specified application.
      example:
        networkConfiguration:
          securityGroupIds: ""
          subnetIds: ""
        initialCapacity: ""
        releaseLabel: ""
        type: ""
        tags: ""
        autoStopConfiguration:
          idleTimeoutMinutes: ""
          enabled: ""
        createdAt: ""
        imageConfiguration:
          resolvedImageDigest: ""
          imageUri: ""
        workerTypeSpecifications: ""
        name: ""
        autoStartConfiguration:
          enabled: ""
        state: ""
        maximumCapacity:
          disk: ""
          memory: ""
          cpu: ""
        applicationId: ""
        arn: ""
        stateDetails: ""
        updatedAt: ""
        architecture: ""
      title: GetApplicationResponse_application
    GetJobRunResponse_jobRun:
      allOf:
      - $ref: '#/components/schemas/JobRun'
      - description: The output displays information about the job run.
      example:
        executionTimeoutMinutes: ""
        totalExecutionDurationSeconds: ""
        networkConfiguration:
          securityGroupIds: ""
          subnetIds: ""
        totalResourceUtilization:
          memoryGBHour: ""
          vCPUHour: ""
          storageGBHour: ""
        releaseLabel: ""
        jobRunId: ""
        tags: ""
        createdAt: ""
        configurationOverrides:
          monitoringConfiguration:
            cloudWatchLoggingConfiguration:
              encryptionKeyArn: ""
              logGroupName: ""
              logStreamNamePrefix: ""
              logTypes: ""
              enabled: ""
            s3MonitoringConfiguration:
              encryptionKeyArn: ""
              logUri: ""
            managedPersistenceMonitoringConfiguration:
              encryptionKeyArn: ""
              enabled: ""
          applicationConfiguration: ""
        createdBy: ""
        name: ""
        jobDriver:
          hive:
            initQueryFile: ""
            query: ""
            parameters: ""
          sparkSubmit:
            entryPointArguments: ""
            entryPoint: ""
            sparkSubmitParameters: ""
        billedResourceUtilization:
          memoryGBHour: ""
          vCPUHour: ""
          storageGBHour: ""
        executionRole: ""
        state: ""
        applicationId: ""
        arn: ""
        stateDetails: ""
        updatedAt: ""
      title: GetJobRunResponse_jobRun
    MonitoringConfiguration_s3MonitoringConfiguration:
      allOf:
      - $ref: '#/components/schemas/S3MonitoringConfiguration'
      - description: The Amazon S3 configuration for monitoring log publishing.
      example:
        encryptionKeyArn: ""
        logUri: ""
      title: MonitoringConfiguration_s3MonitoringConfiguration
    MonitoringConfiguration_managedPersistenceMonitoringConfiguration:
      allOf:
      - $ref: '#/components/schemas/ManagedPersistenceMonitoringConfiguration'
      - description: The managed log persistence configuration for a job run.
      example:
        encryptionKeyArn: ""
        enabled: ""
      title: MonitoringConfiguration_managedPersistenceMonitoringConfiguration
    MonitoringConfiguration_cloudWatchLoggingConfiguration:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLoggingConfiguration'
      - description: The Amazon CloudWatch configuration for monitoring logs. You
          can configure your jobs to send log information to CloudWatch.
      example:
        encryptionKeyArn: ""
        logGroupName: ""
        logStreamNamePrefix: ""
        logTypes: ""
        enabled: ""
      title: MonitoringConfiguration_cloudWatchLoggingConfiguration
    UpdateApplicationResponse_application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - description: Information about the updated application.
      example:
        networkConfiguration:
          securityGroupIds: ""
          subnetIds: ""
        initialCapacity: ""
        releaseLabel: ""
        type: ""
        tags: ""
        autoStopConfiguration:
          idleTimeoutMinutes: ""
          enabled: ""
        createdAt: ""
        imageConfiguration:
          resolvedImageDigest: ""
          imageUri: ""
        workerTypeSpecifications: ""
        name: ""
        autoStartConfiguration:
          enabled: ""
        state: ""
        maximumCapacity:
          disk: ""
          memory: ""
          cpu: ""
        applicationId: ""
        arn: ""
        stateDetails: ""
        updatedAt: ""
        architecture: ""
      title: UpdateApplicationResponse_application
    Application_maximumCapacity:
      allOf:
      - $ref: '#/components/schemas/MaximumAllowedResources'
      - description: The maximum capacity of the application. This is cumulative across
          all workers at any given point in time during the lifespan of the application
          is created. No new resources will be created once any one of the defined
          limits is hit.
      example:
        disk: ""
        memory: ""
        cpu: ""
      title: Application_maximumCapacity
    Application_autoStartConfiguration:
      allOf:
      - $ref: '#/components/schemas/AutoStartConfig'
      - description: The configuration for an application to automatically start on
          job submission.
      example:
        enabled: ""
      title: Application_autoStartConfiguration
    Application_autoStopConfiguration:
      allOf:
      - $ref: '#/components/schemas/AutoStopConfig'
      - description: The configuration for an application to automatically stop after
          a certain amount of time being idle.
      example:
        idleTimeoutMinutes: ""
        enabled: ""
      title: Application_autoStopConfiguration
    Application_networkConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkConfiguration'
      - description: The network configuration for customer VPC connectivity for the
          application.
      example:
        securityGroupIds: ""
        subnetIds: ""
      title: Application_networkConfiguration
    Application_imageConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageConfiguration'
      - description: The image configuration applied to all worker types.
      example:
        resolvedImageDigest: ""
        imageUri: ""
      title: Application_imageConfiguration
    CreateApplicationRequest_maximumCapacity:
      allOf:
      - $ref: '#/components/schemas/MaximumAllowedResources'
      - description: "The maximum capacity to allocate when the application is created.\
          \ This is cumulative across all workers at any given point in time, not\
          \ just when an application is created. No new resources will be created\
          \ once any one of the defined limits is hit."
      example:
        disk: ""
        memory: ""
        cpu: ""
      title: CreateApplicationRequest_maximumCapacity
    CreateApplicationRequest_networkConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkConfiguration'
      - description: The network configuration for customer VPC connectivity.
      example:
        securityGroupIds: ""
        subnetIds: ""
      title: CreateApplicationRequest_networkConfiguration
    CreateApplicationRequest_imageConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageConfigurationInput'
      - description: The image configuration for all worker types. You can either
          set this parameter or <code>imageConfiguration</code> for each worker type
          in <code>workerTypeSpecifications</code>.
      example:
        imageUri: ""
      title: CreateApplicationRequest_imageConfiguration
    JobRun_configurationOverrides:
      allOf:
      - $ref: '#/components/schemas/ConfigurationOverrides'
      - description: The configuration settings that are used to override default
          configuration.
      example:
        monitoringConfiguration:
          cloudWatchLoggingConfiguration:
            encryptionKeyArn: ""
            logGroupName: ""
            logStreamNamePrefix: ""
            logTypes: ""
            enabled: ""
          s3MonitoringConfiguration:
            encryptionKeyArn: ""
            logUri: ""
          managedPersistenceMonitoringConfiguration:
            encryptionKeyArn: ""
            enabled: ""
        applicationConfiguration: ""
      title: JobRun_configurationOverrides
    JobRun_jobDriver:
      allOf:
      - $ref: '#/components/schemas/JobDriver'
      - description: The job driver for the job run.
      example:
        hive:
          initQueryFile: ""
          query: ""
          parameters: ""
        sparkSubmit:
          entryPointArguments: ""
          entryPoint: ""
          sparkSubmitParameters: ""
      title: JobRun_jobDriver
    JobRun_totalResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/TotalResourceUtilization'
      - description: "The aggregate vCPU, memory, and storage resources used from\
          \ the time the job starts to execute, until the time the job terminates,\
          \ rounded up to the nearest second."
      example:
        memoryGBHour: ""
        vCPUHour: ""
        storageGBHour: ""
      title: JobRun_totalResourceUtilization
    JobRun_billedResourceUtilization:
      allOf:
      - $ref: '#/components/schemas/ResourceUtilization'
      - description: "The aggregate vCPU, memory, and storage that Amazon Web Services\
          \ has billed for the job run. The billed resources include a 1-minute minimum\
          \ usage for workers, plus additional storage over 20 GB per worker. Note\
          \ that billed resources do not include usage for idle pre-initialized workers."
      example:
        memoryGBHour: ""
        vCPUHour: ""
        storageGBHour: ""
      title: JobRun_billedResourceUtilization
    StartJobRunRequest_configurationOverrides:
      allOf:
      - $ref: '#/components/schemas/ConfigurationOverrides'
      - description: The configuration overrides for the job run.
      example:
        monitoringConfiguration:
          cloudWatchLoggingConfiguration:
            encryptionKeyArn: ""
            logGroupName: ""
            logStreamNamePrefix: ""
            logTypes: ""
            enabled: ""
          s3MonitoringConfiguration:
            encryptionKeyArn: ""
            logUri: ""
          managedPersistenceMonitoringConfiguration:
            encryptionKeyArn: ""
            enabled: ""
        applicationConfiguration: ""
      title: StartJobRunRequest_configurationOverrides
    UpdateApplicationRequest_maximumCapacity:
      allOf:
      - $ref: '#/components/schemas/MaximumAllowedResources'
      - description: The maximum capacity to allocate when the application is updated.
          This is cumulative across all workers at any given point in time during
          the lifespan of the application. No new resources will be created once any
          one of the defined limits is hit.
      example:
        disk: ""
        memory: ""
        cpu: ""
      title: UpdateApplicationRequest_maximumCapacity
    UpdateApplicationRequest_imageConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageConfigurationInput'
      - description: The image configuration to be used for all worker types. You
          can either set this parameter or <code>imageConfiguration</code> for each
          worker type in <code>WorkerTypeSpecificationInput</code>.
      example:
        imageUri: ""
      title: UpdateApplicationRequest_imageConfiguration
    WorkerTypeSpecification_imageConfiguration:
      allOf:
      - $ref: '#/components/schemas/ImageConfiguration'
      - description: The image configuration for a worker type.
      title: WorkerTypeSpecification_imageConfiguration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
