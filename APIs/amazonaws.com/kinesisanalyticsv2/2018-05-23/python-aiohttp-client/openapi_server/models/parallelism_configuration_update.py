# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_type import ConfigurationType
from openapi_server import util


class ParallelismConfigurationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_type_update: ConfigurationType=None, parallelism_update: int=None, parallelism_per_kpu_update: int=None, auto_scaling_enabled_update: bool=None):
        """ParallelismConfigurationUpdate - a model defined in OpenAPI

        :param configuration_type_update: The configuration_type_update of this ParallelismConfigurationUpdate.
        :param parallelism_update: The parallelism_update of this ParallelismConfigurationUpdate.
        :param parallelism_per_kpu_update: The parallelism_per_kpu_update of this ParallelismConfigurationUpdate.
        :param auto_scaling_enabled_update: The auto_scaling_enabled_update of this ParallelismConfigurationUpdate.
        """
        self.openapi_types = {
            'configuration_type_update': ConfigurationType,
            'parallelism_update': int,
            'parallelism_per_kpu_update': int,
            'auto_scaling_enabled_update': bool
        }

        self.attribute_map = {
            'configuration_type_update': 'ConfigurationTypeUpdate',
            'parallelism_update': 'ParallelismUpdate',
            'parallelism_per_kpu_update': 'ParallelismPerKPUUpdate',
            'auto_scaling_enabled_update': 'AutoScalingEnabledUpdate'
        }

        self._configuration_type_update = configuration_type_update
        self._parallelism_update = parallelism_update
        self._parallelism_per_kpu_update = parallelism_per_kpu_update
        self._auto_scaling_enabled_update = auto_scaling_enabled_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParallelismConfigurationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParallelismConfigurationUpdate of this ParallelismConfigurationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_type_update(self):
        """Gets the configuration_type_update of this ParallelismConfigurationUpdate.


        :return: The configuration_type_update of this ParallelismConfigurationUpdate.
        :rtype: ConfigurationType
        """
        return self._configuration_type_update

    @configuration_type_update.setter
    def configuration_type_update(self, configuration_type_update):
        """Sets the configuration_type_update of this ParallelismConfigurationUpdate.


        :param configuration_type_update: The configuration_type_update of this ParallelismConfigurationUpdate.
        :type configuration_type_update: ConfigurationType
        """

        self._configuration_type_update = configuration_type_update

    @property
    def parallelism_update(self):
        """Gets the parallelism_update of this ParallelismConfigurationUpdate.


        :return: The parallelism_update of this ParallelismConfigurationUpdate.
        :rtype: int
        """
        return self._parallelism_update

    @parallelism_update.setter
    def parallelism_update(self, parallelism_update):
        """Sets the parallelism_update of this ParallelismConfigurationUpdate.


        :param parallelism_update: The parallelism_update of this ParallelismConfigurationUpdate.
        :type parallelism_update: int
        """

        self._parallelism_update = parallelism_update

    @property
    def parallelism_per_kpu_update(self):
        """Gets the parallelism_per_kpu_update of this ParallelismConfigurationUpdate.


        :return: The parallelism_per_kpu_update of this ParallelismConfigurationUpdate.
        :rtype: int
        """
        return self._parallelism_per_kpu_update

    @parallelism_per_kpu_update.setter
    def parallelism_per_kpu_update(self, parallelism_per_kpu_update):
        """Sets the parallelism_per_kpu_update of this ParallelismConfigurationUpdate.


        :param parallelism_per_kpu_update: The parallelism_per_kpu_update of this ParallelismConfigurationUpdate.
        :type parallelism_per_kpu_update: int
        """

        self._parallelism_per_kpu_update = parallelism_per_kpu_update

    @property
    def auto_scaling_enabled_update(self):
        """Gets the auto_scaling_enabled_update of this ParallelismConfigurationUpdate.


        :return: The auto_scaling_enabled_update of this ParallelismConfigurationUpdate.
        :rtype: bool
        """
        return self._auto_scaling_enabled_update

    @auto_scaling_enabled_update.setter
    def auto_scaling_enabled_update(self, auto_scaling_enabled_update):
        """Sets the auto_scaling_enabled_update of this ParallelismConfigurationUpdate.


        :param auto_scaling_enabled_update: The auto_scaling_enabled_update of this ParallelismConfigurationUpdate.
        :type auto_scaling_enabled_update: bool
        """

        self._auto_scaling_enabled_update = auto_scaling_enabled_update
