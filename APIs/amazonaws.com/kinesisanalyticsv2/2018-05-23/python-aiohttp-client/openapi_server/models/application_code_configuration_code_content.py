# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_content_s3_content_location import CodeContentS3ContentLocation
from openapi_server import util


class ApplicationCodeConfigurationCodeContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text_content: str=None, zip_file_content: str=None, s3_content_location: CodeContentS3ContentLocation=None):
        """ApplicationCodeConfigurationCodeContent - a model defined in OpenAPI

        :param text_content: The text_content of this ApplicationCodeConfigurationCodeContent.
        :param zip_file_content: The zip_file_content of this ApplicationCodeConfigurationCodeContent.
        :param s3_content_location: The s3_content_location of this ApplicationCodeConfigurationCodeContent.
        """
        self.openapi_types = {
            'text_content': str,
            'zip_file_content': str,
            's3_content_location': CodeContentS3ContentLocation
        }

        self.attribute_map = {
            'text_content': 'TextContent',
            'zip_file_content': 'ZipFileContent',
            's3_content_location': 'S3ContentLocation'
        }

        self._text_content = text_content
        self._zip_file_content = zip_file_content
        self._s3_content_location = s3_content_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationCodeConfigurationCodeContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationCodeConfiguration_CodeContent of this ApplicationCodeConfigurationCodeContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_content(self):
        """Gets the text_content of this ApplicationCodeConfigurationCodeContent.


        :return: The text_content of this ApplicationCodeConfigurationCodeContent.
        :rtype: str
        """
        return self._text_content

    @text_content.setter
    def text_content(self, text_content):
        """Sets the text_content of this ApplicationCodeConfigurationCodeContent.


        :param text_content: The text_content of this ApplicationCodeConfigurationCodeContent.
        :type text_content: str
        """

        self._text_content = text_content

    @property
    def zip_file_content(self):
        """Gets the zip_file_content of this ApplicationCodeConfigurationCodeContent.


        :return: The zip_file_content of this ApplicationCodeConfigurationCodeContent.
        :rtype: str
        """
        return self._zip_file_content

    @zip_file_content.setter
    def zip_file_content(self, zip_file_content):
        """Sets the zip_file_content of this ApplicationCodeConfigurationCodeContent.


        :param zip_file_content: The zip_file_content of this ApplicationCodeConfigurationCodeContent.
        :type zip_file_content: str
        """

        self._zip_file_content = zip_file_content

    @property
    def s3_content_location(self):
        """Gets the s3_content_location of this ApplicationCodeConfigurationCodeContent.


        :return: The s3_content_location of this ApplicationCodeConfigurationCodeContent.
        :rtype: CodeContentS3ContentLocation
        """
        return self._s3_content_location

    @s3_content_location.setter
    def s3_content_location(self, s3_content_location):
        """Sets the s3_content_location of this ApplicationCodeConfigurationCodeContent.


        :param s3_content_location: The s3_content_location of this ApplicationCodeConfigurationCodeContent.
        :type s3_content_location: CodeContentS3ContentLocation
        """

        self._s3_content_location = s3_content_location
