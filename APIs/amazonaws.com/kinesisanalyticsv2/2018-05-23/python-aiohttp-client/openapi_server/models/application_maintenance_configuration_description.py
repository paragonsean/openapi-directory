# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationMaintenanceConfigurationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_maintenance_window_start_time: str=None, application_maintenance_window_end_time: str=None):
        """ApplicationMaintenanceConfigurationDescription - a model defined in OpenAPI

        :param application_maintenance_window_start_time: The application_maintenance_window_start_time of this ApplicationMaintenanceConfigurationDescription.
        :param application_maintenance_window_end_time: The application_maintenance_window_end_time of this ApplicationMaintenanceConfigurationDescription.
        """
        self.openapi_types = {
            'application_maintenance_window_start_time': str,
            'application_maintenance_window_end_time': str
        }

        self.attribute_map = {
            'application_maintenance_window_start_time': 'ApplicationMaintenanceWindowStartTime',
            'application_maintenance_window_end_time': 'ApplicationMaintenanceWindowEndTime'
        }

        self._application_maintenance_window_start_time = application_maintenance_window_start_time
        self._application_maintenance_window_end_time = application_maintenance_window_end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationMaintenanceConfigurationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationMaintenanceConfigurationDescription of this ApplicationMaintenanceConfigurationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_maintenance_window_start_time(self):
        """Gets the application_maintenance_window_start_time of this ApplicationMaintenanceConfigurationDescription.


        :return: The application_maintenance_window_start_time of this ApplicationMaintenanceConfigurationDescription.
        :rtype: str
        """
        return self._application_maintenance_window_start_time

    @application_maintenance_window_start_time.setter
    def application_maintenance_window_start_time(self, application_maintenance_window_start_time):
        """Sets the application_maintenance_window_start_time of this ApplicationMaintenanceConfigurationDescription.


        :param application_maintenance_window_start_time: The application_maintenance_window_start_time of this ApplicationMaintenanceConfigurationDescription.
        :type application_maintenance_window_start_time: str
        """
        if application_maintenance_window_start_time is None:
            raise ValueError("Invalid value for `application_maintenance_window_start_time`, must not be `None`")

        self._application_maintenance_window_start_time = application_maintenance_window_start_time

    @property
    def application_maintenance_window_end_time(self):
        """Gets the application_maintenance_window_end_time of this ApplicationMaintenanceConfigurationDescription.


        :return: The application_maintenance_window_end_time of this ApplicationMaintenanceConfigurationDescription.
        :rtype: str
        """
        return self._application_maintenance_window_end_time

    @application_maintenance_window_end_time.setter
    def application_maintenance_window_end_time(self, application_maintenance_window_end_time):
        """Sets the application_maintenance_window_end_time of this ApplicationMaintenanceConfigurationDescription.


        :param application_maintenance_window_end_time: The application_maintenance_window_end_time of this ApplicationMaintenanceConfigurationDescription.
        :type application_maintenance_window_end_time: str
        """
        if application_maintenance_window_end_time is None:
            raise ValueError("Invalid value for `application_maintenance_window_end_time`, must not be `None`")

        self._application_maintenance_window_end_time = application_maintenance_window_end_time
