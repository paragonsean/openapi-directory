# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_processing_configuration_input_lambda_processor import InputProcessingConfigurationInputLambdaProcessor
from openapi_server import util


class AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_lambda_processor: InputProcessingConfigurationInputLambdaProcessor=None):
        """AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration - a model defined in OpenAPI

        :param input_lambda_processor: The input_lambda_processor of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.
        """
        self.openapi_types = {
            'input_lambda_processor': InputProcessingConfigurationInputLambdaProcessor
        }

        self.attribute_map = {
            'input_lambda_processor': 'InputLambdaProcessor'
        }

        self._input_lambda_processor = input_lambda_processor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddApplicationInputProcessingConfigurationRequest_InputProcessingConfiguration of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_lambda_processor(self):
        """Gets the input_lambda_processor of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.


        :return: The input_lambda_processor of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.
        :rtype: InputProcessingConfigurationInputLambdaProcessor
        """
        return self._input_lambda_processor

    @input_lambda_processor.setter
    def input_lambda_processor(self, input_lambda_processor):
        """Sets the input_lambda_processor of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.


        :param input_lambda_processor: The input_lambda_processor of this AddApplicationInputProcessingConfigurationRequestInputProcessingConfiguration.
        :type input_lambda_processor: InputProcessingConfigurationInputLambdaProcessor
        """
        if input_lambda_processor is None:
            raise ValueError("Invalid value for `input_lambda_processor`, must not be `None`")

        self._input_lambda_processor = input_lambda_processor
