# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.log_level import LogLevel
from openapi_server import util


class ZeppelinMonitoringConfigurationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_level: LogLevel=None):
        """ZeppelinMonitoringConfigurationDescription - a model defined in OpenAPI

        :param log_level: The log_level of this ZeppelinMonitoringConfigurationDescription.
        """
        self.openapi_types = {
            'log_level': LogLevel
        }

        self.attribute_map = {
            'log_level': 'LogLevel'
        }

        self._log_level = log_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ZeppelinMonitoringConfigurationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ZeppelinMonitoringConfigurationDescription of this ZeppelinMonitoringConfigurationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_level(self):
        """Gets the log_level of this ZeppelinMonitoringConfigurationDescription.


        :return: The log_level of this ZeppelinMonitoringConfigurationDescription.
        :rtype: LogLevel
        """
        return self._log_level

    @log_level.setter
    def log_level(self, log_level):
        """Sets the log_level of this ZeppelinMonitoringConfigurationDescription.


        :param log_level: The log_level of this ZeppelinMonitoringConfigurationDescription.
        :type log_level: LogLevel
        """

        self._log_level = log_level
