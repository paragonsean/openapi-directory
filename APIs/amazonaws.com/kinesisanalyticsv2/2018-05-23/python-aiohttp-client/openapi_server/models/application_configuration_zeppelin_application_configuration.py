# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.zeppelin_application_configuration_catalog_configuration import ZeppelinApplicationConfigurationCatalogConfiguration
from openapi_server.models.zeppelin_application_configuration_deploy_as_application_configuration import ZeppelinApplicationConfigurationDeployAsApplicationConfiguration
from openapi_server.models.zeppelin_application_configuration_monitoring_configuration import ZeppelinApplicationConfigurationMonitoringConfiguration
from openapi_server import util


class ApplicationConfigurationZeppelinApplicationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_configuration: ZeppelinApplicationConfigurationMonitoringConfiguration=None, catalog_configuration: ZeppelinApplicationConfigurationCatalogConfiguration=None, deploy_as_application_configuration: ZeppelinApplicationConfigurationDeployAsApplicationConfiguration=None, custom_artifacts_configuration: List=None):
        """ApplicationConfigurationZeppelinApplicationConfiguration - a model defined in OpenAPI

        :param monitoring_configuration: The monitoring_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :param catalog_configuration: The catalog_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :param deploy_as_application_configuration: The deploy_as_application_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :param custom_artifacts_configuration: The custom_artifacts_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        """
        self.openapi_types = {
            'monitoring_configuration': ZeppelinApplicationConfigurationMonitoringConfiguration,
            'catalog_configuration': ZeppelinApplicationConfigurationCatalogConfiguration,
            'deploy_as_application_configuration': ZeppelinApplicationConfigurationDeployAsApplicationConfiguration,
            'custom_artifacts_configuration': List
        }

        self.attribute_map = {
            'monitoring_configuration': 'MonitoringConfiguration',
            'catalog_configuration': 'CatalogConfiguration',
            'deploy_as_application_configuration': 'DeployAsApplicationConfiguration',
            'custom_artifacts_configuration': 'CustomArtifactsConfiguration'
        }

        self._monitoring_configuration = monitoring_configuration
        self._catalog_configuration = catalog_configuration
        self._deploy_as_application_configuration = deploy_as_application_configuration
        self._custom_artifacts_configuration = custom_artifacts_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationConfigurationZeppelinApplicationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationConfiguration_ZeppelinApplicationConfiguration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_configuration(self):
        """Gets the monitoring_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :return: The monitoring_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :rtype: ZeppelinApplicationConfigurationMonitoringConfiguration
        """
        return self._monitoring_configuration

    @monitoring_configuration.setter
    def monitoring_configuration(self, monitoring_configuration):
        """Sets the monitoring_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :param monitoring_configuration: The monitoring_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :type monitoring_configuration: ZeppelinApplicationConfigurationMonitoringConfiguration
        """

        self._monitoring_configuration = monitoring_configuration

    @property
    def catalog_configuration(self):
        """Gets the catalog_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :return: The catalog_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :rtype: ZeppelinApplicationConfigurationCatalogConfiguration
        """
        return self._catalog_configuration

    @catalog_configuration.setter
    def catalog_configuration(self, catalog_configuration):
        """Sets the catalog_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :param catalog_configuration: The catalog_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :type catalog_configuration: ZeppelinApplicationConfigurationCatalogConfiguration
        """

        self._catalog_configuration = catalog_configuration

    @property
    def deploy_as_application_configuration(self):
        """Gets the deploy_as_application_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :return: The deploy_as_application_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :rtype: ZeppelinApplicationConfigurationDeployAsApplicationConfiguration
        """
        return self._deploy_as_application_configuration

    @deploy_as_application_configuration.setter
    def deploy_as_application_configuration(self, deploy_as_application_configuration):
        """Sets the deploy_as_application_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :param deploy_as_application_configuration: The deploy_as_application_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :type deploy_as_application_configuration: ZeppelinApplicationConfigurationDeployAsApplicationConfiguration
        """

        self._deploy_as_application_configuration = deploy_as_application_configuration

    @property
    def custom_artifacts_configuration(self):
        """Gets the custom_artifacts_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :return: The custom_artifacts_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :rtype: List
        """
        return self._custom_artifacts_configuration

    @custom_artifacts_configuration.setter
    def custom_artifacts_configuration(self, custom_artifacts_configuration):
        """Sets the custom_artifacts_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.


        :param custom_artifacts_configuration: The custom_artifacts_configuration of this ApplicationConfigurationZeppelinApplicationConfiguration.
        :type custom_artifacts_configuration: List
        """

        self._custom_artifacts_configuration = custom_artifacts_configuration
