# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StopApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, force: bool=None):
        """StopApplicationRequest - a model defined in OpenAPI

        :param application_name: The application_name of this StopApplicationRequest.
        :param force: The force of this StopApplicationRequest.
        """
        self.openapi_types = {
            'application_name': str,
            'force': bool
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'force': 'Force'
        }

        self._application_name = application_name
        self._force = force

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopApplicationRequest of this StopApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this StopApplicationRequest.


        :return: The application_name of this StopApplicationRequest.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this StopApplicationRequest.


        :param application_name: The application_name of this StopApplicationRequest.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def force(self):
        """Gets the force of this StopApplicationRequest.


        :return: The force of this StopApplicationRequest.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force):
        """Sets the force of this StopApplicationRequest.


        :param force: The force of this StopApplicationRequest.
        :type force: bool
        """

        self._force = force
