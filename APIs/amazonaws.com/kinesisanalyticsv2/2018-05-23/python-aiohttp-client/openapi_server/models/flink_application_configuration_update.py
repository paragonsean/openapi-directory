# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flink_application_configuration_update_checkpoint_configuration_update import FlinkApplicationConfigurationUpdateCheckpointConfigurationUpdate
from openapi_server.models.flink_application_configuration_update_monitoring_configuration_update import FlinkApplicationConfigurationUpdateMonitoringConfigurationUpdate
from openapi_server.models.flink_application_configuration_update_parallelism_configuration_update import FlinkApplicationConfigurationUpdateParallelismConfigurationUpdate
from openapi_server import util


class FlinkApplicationConfigurationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checkpoint_configuration_update: FlinkApplicationConfigurationUpdateCheckpointConfigurationUpdate=None, monitoring_configuration_update: FlinkApplicationConfigurationUpdateMonitoringConfigurationUpdate=None, parallelism_configuration_update: FlinkApplicationConfigurationUpdateParallelismConfigurationUpdate=None):
        """FlinkApplicationConfigurationUpdate - a model defined in OpenAPI

        :param checkpoint_configuration_update: The checkpoint_configuration_update of this FlinkApplicationConfigurationUpdate.
        :param monitoring_configuration_update: The monitoring_configuration_update of this FlinkApplicationConfigurationUpdate.
        :param parallelism_configuration_update: The parallelism_configuration_update of this FlinkApplicationConfigurationUpdate.
        """
        self.openapi_types = {
            'checkpoint_configuration_update': FlinkApplicationConfigurationUpdateCheckpointConfigurationUpdate,
            'monitoring_configuration_update': FlinkApplicationConfigurationUpdateMonitoringConfigurationUpdate,
            'parallelism_configuration_update': FlinkApplicationConfigurationUpdateParallelismConfigurationUpdate
        }

        self.attribute_map = {
            'checkpoint_configuration_update': 'CheckpointConfigurationUpdate',
            'monitoring_configuration_update': 'MonitoringConfigurationUpdate',
            'parallelism_configuration_update': 'ParallelismConfigurationUpdate'
        }

        self._checkpoint_configuration_update = checkpoint_configuration_update
        self._monitoring_configuration_update = monitoring_configuration_update
        self._parallelism_configuration_update = parallelism_configuration_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlinkApplicationConfigurationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlinkApplicationConfigurationUpdate of this FlinkApplicationConfigurationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checkpoint_configuration_update(self):
        """Gets the checkpoint_configuration_update of this FlinkApplicationConfigurationUpdate.


        :return: The checkpoint_configuration_update of this FlinkApplicationConfigurationUpdate.
        :rtype: FlinkApplicationConfigurationUpdateCheckpointConfigurationUpdate
        """
        return self._checkpoint_configuration_update

    @checkpoint_configuration_update.setter
    def checkpoint_configuration_update(self, checkpoint_configuration_update):
        """Sets the checkpoint_configuration_update of this FlinkApplicationConfigurationUpdate.


        :param checkpoint_configuration_update: The checkpoint_configuration_update of this FlinkApplicationConfigurationUpdate.
        :type checkpoint_configuration_update: FlinkApplicationConfigurationUpdateCheckpointConfigurationUpdate
        """

        self._checkpoint_configuration_update = checkpoint_configuration_update

    @property
    def monitoring_configuration_update(self):
        """Gets the monitoring_configuration_update of this FlinkApplicationConfigurationUpdate.


        :return: The monitoring_configuration_update of this FlinkApplicationConfigurationUpdate.
        :rtype: FlinkApplicationConfigurationUpdateMonitoringConfigurationUpdate
        """
        return self._monitoring_configuration_update

    @monitoring_configuration_update.setter
    def monitoring_configuration_update(self, monitoring_configuration_update):
        """Sets the monitoring_configuration_update of this FlinkApplicationConfigurationUpdate.


        :param monitoring_configuration_update: The monitoring_configuration_update of this FlinkApplicationConfigurationUpdate.
        :type monitoring_configuration_update: FlinkApplicationConfigurationUpdateMonitoringConfigurationUpdate
        """

        self._monitoring_configuration_update = monitoring_configuration_update

    @property
    def parallelism_configuration_update(self):
        """Gets the parallelism_configuration_update of this FlinkApplicationConfigurationUpdate.


        :return: The parallelism_configuration_update of this FlinkApplicationConfigurationUpdate.
        :rtype: FlinkApplicationConfigurationUpdateParallelismConfigurationUpdate
        """
        return self._parallelism_configuration_update

    @parallelism_configuration_update.setter
    def parallelism_configuration_update(self, parallelism_configuration_update):
        """Sets the parallelism_configuration_update of this FlinkApplicationConfigurationUpdate.


        :param parallelism_configuration_update: The parallelism_configuration_update of this FlinkApplicationConfigurationUpdate.
        :type parallelism_configuration_update: FlinkApplicationConfigurationUpdateParallelismConfigurationUpdate
        """

        self._parallelism_configuration_update = parallelism_configuration_update
