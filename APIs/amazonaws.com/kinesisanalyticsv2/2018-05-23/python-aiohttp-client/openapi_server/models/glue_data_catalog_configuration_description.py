# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlueDataCatalogConfigurationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_arn: str=None):
        """GlueDataCatalogConfigurationDescription - a model defined in OpenAPI

        :param database_arn: The database_arn of this GlueDataCatalogConfigurationDescription.
        """
        self.openapi_types = {
            'database_arn': str
        }

        self.attribute_map = {
            'database_arn': 'DatabaseARN'
        }

        self._database_arn = database_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlueDataCatalogConfigurationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlueDataCatalogConfigurationDescription of this GlueDataCatalogConfigurationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_arn(self):
        """Gets the database_arn of this GlueDataCatalogConfigurationDescription.


        :return: The database_arn of this GlueDataCatalogConfigurationDescription.
        :rtype: str
        """
        return self._database_arn

    @database_arn.setter
    def database_arn(self, database_arn):
        """Sets the database_arn of this GlueDataCatalogConfigurationDescription.


        :param database_arn: The database_arn of this GlueDataCatalogConfigurationDescription.
        :type database_arn: str
        """
        if database_arn is None:
            raise ValueError("Invalid value for `database_arn`, must not be `None`")

        self._database_arn = database_arn
