# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_schema_record_format import SourceSchemaRecordFormat
from openapi_server import util


class InputSchemaUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, record_format_update: SourceSchemaRecordFormat=None, record_encoding_update: str=None, record_column_updates: List=None):
        """InputSchemaUpdate - a model defined in OpenAPI

        :param record_format_update: The record_format_update of this InputSchemaUpdate.
        :param record_encoding_update: The record_encoding_update of this InputSchemaUpdate.
        :param record_column_updates: The record_column_updates of this InputSchemaUpdate.
        """
        self.openapi_types = {
            'record_format_update': SourceSchemaRecordFormat,
            'record_encoding_update': str,
            'record_column_updates': List
        }

        self.attribute_map = {
            'record_format_update': 'RecordFormatUpdate',
            'record_encoding_update': 'RecordEncodingUpdate',
            'record_column_updates': 'RecordColumnUpdates'
        }

        self._record_format_update = record_format_update
        self._record_encoding_update = record_encoding_update
        self._record_column_updates = record_column_updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputSchemaUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputSchemaUpdate of this InputSchemaUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def record_format_update(self):
        """Gets the record_format_update of this InputSchemaUpdate.


        :return: The record_format_update of this InputSchemaUpdate.
        :rtype: SourceSchemaRecordFormat
        """
        return self._record_format_update

    @record_format_update.setter
    def record_format_update(self, record_format_update):
        """Sets the record_format_update of this InputSchemaUpdate.


        :param record_format_update: The record_format_update of this InputSchemaUpdate.
        :type record_format_update: SourceSchemaRecordFormat
        """

        self._record_format_update = record_format_update

    @property
    def record_encoding_update(self):
        """Gets the record_encoding_update of this InputSchemaUpdate.


        :return: The record_encoding_update of this InputSchemaUpdate.
        :rtype: str
        """
        return self._record_encoding_update

    @record_encoding_update.setter
    def record_encoding_update(self, record_encoding_update):
        """Sets the record_encoding_update of this InputSchemaUpdate.


        :param record_encoding_update: The record_encoding_update of this InputSchemaUpdate.
        :type record_encoding_update: str
        """

        self._record_encoding_update = record_encoding_update

    @property
    def record_column_updates(self):
        """Gets the record_column_updates of this InputSchemaUpdate.


        :return: The record_column_updates of this InputSchemaUpdate.
        :rtype: List
        """
        return self._record_column_updates

    @record_column_updates.setter
    def record_column_updates(self, record_column_updates):
        """Sets the record_column_updates of this InputSchemaUpdate.


        :param record_column_updates: The record_column_updates of this InputSchemaUpdate.
        :type record_column_updates: List
        """

        self._record_column_updates = record_column_updates
