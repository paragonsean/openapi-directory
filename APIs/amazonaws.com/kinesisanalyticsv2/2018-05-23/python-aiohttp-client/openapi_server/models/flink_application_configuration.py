# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flink_application_configuration_checkpoint_configuration import FlinkApplicationConfigurationCheckpointConfiguration
from openapi_server.models.flink_application_configuration_monitoring_configuration import FlinkApplicationConfigurationMonitoringConfiguration
from openapi_server.models.flink_application_configuration_parallelism_configuration import FlinkApplicationConfigurationParallelismConfiguration
from openapi_server import util


class FlinkApplicationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checkpoint_configuration: FlinkApplicationConfigurationCheckpointConfiguration=None, monitoring_configuration: FlinkApplicationConfigurationMonitoringConfiguration=None, parallelism_configuration: FlinkApplicationConfigurationParallelismConfiguration=None):
        """FlinkApplicationConfiguration - a model defined in OpenAPI

        :param checkpoint_configuration: The checkpoint_configuration of this FlinkApplicationConfiguration.
        :param monitoring_configuration: The monitoring_configuration of this FlinkApplicationConfiguration.
        :param parallelism_configuration: The parallelism_configuration of this FlinkApplicationConfiguration.
        """
        self.openapi_types = {
            'checkpoint_configuration': FlinkApplicationConfigurationCheckpointConfiguration,
            'monitoring_configuration': FlinkApplicationConfigurationMonitoringConfiguration,
            'parallelism_configuration': FlinkApplicationConfigurationParallelismConfiguration
        }

        self.attribute_map = {
            'checkpoint_configuration': 'CheckpointConfiguration',
            'monitoring_configuration': 'MonitoringConfiguration',
            'parallelism_configuration': 'ParallelismConfiguration'
        }

        self._checkpoint_configuration = checkpoint_configuration
        self._monitoring_configuration = monitoring_configuration
        self._parallelism_configuration = parallelism_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlinkApplicationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlinkApplicationConfiguration of this FlinkApplicationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checkpoint_configuration(self):
        """Gets the checkpoint_configuration of this FlinkApplicationConfiguration.


        :return: The checkpoint_configuration of this FlinkApplicationConfiguration.
        :rtype: FlinkApplicationConfigurationCheckpointConfiguration
        """
        return self._checkpoint_configuration

    @checkpoint_configuration.setter
    def checkpoint_configuration(self, checkpoint_configuration):
        """Sets the checkpoint_configuration of this FlinkApplicationConfiguration.


        :param checkpoint_configuration: The checkpoint_configuration of this FlinkApplicationConfiguration.
        :type checkpoint_configuration: FlinkApplicationConfigurationCheckpointConfiguration
        """

        self._checkpoint_configuration = checkpoint_configuration

    @property
    def monitoring_configuration(self):
        """Gets the monitoring_configuration of this FlinkApplicationConfiguration.


        :return: The monitoring_configuration of this FlinkApplicationConfiguration.
        :rtype: FlinkApplicationConfigurationMonitoringConfiguration
        """
        return self._monitoring_configuration

    @monitoring_configuration.setter
    def monitoring_configuration(self, monitoring_configuration):
        """Sets the monitoring_configuration of this FlinkApplicationConfiguration.


        :param monitoring_configuration: The monitoring_configuration of this FlinkApplicationConfiguration.
        :type monitoring_configuration: FlinkApplicationConfigurationMonitoringConfiguration
        """

        self._monitoring_configuration = monitoring_configuration

    @property
    def parallelism_configuration(self):
        """Gets the parallelism_configuration of this FlinkApplicationConfiguration.


        :return: The parallelism_configuration of this FlinkApplicationConfiguration.
        :rtype: FlinkApplicationConfigurationParallelismConfiguration
        """
        return self._parallelism_configuration

    @parallelism_configuration.setter
    def parallelism_configuration(self, parallelism_configuration):
        """Sets the parallelism_configuration of this FlinkApplicationConfiguration.


        :param parallelism_configuration: The parallelism_configuration of this FlinkApplicationConfiguration.
        :type parallelism_configuration: FlinkApplicationConfigurationParallelismConfiguration
        """

        self._parallelism_configuration = parallelism_configuration
