# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_content_description_s3_application_code_location_description import CodeContentDescriptionS3ApplicationCodeLocationDescription
from openapi_server import util


class ApplicationCodeConfigurationDescriptionCodeContentDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text_content: str=None, code_md5: str=None, code_size: int=None, s3_application_code_location_description: CodeContentDescriptionS3ApplicationCodeLocationDescription=None):
        """ApplicationCodeConfigurationDescriptionCodeContentDescription - a model defined in OpenAPI

        :param text_content: The text_content of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :param code_md5: The code_md5 of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :param code_size: The code_size of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :param s3_application_code_location_description: The s3_application_code_location_description of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        """
        self.openapi_types = {
            'text_content': str,
            'code_md5': str,
            'code_size': int,
            's3_application_code_location_description': CodeContentDescriptionS3ApplicationCodeLocationDescription
        }

        self.attribute_map = {
            'text_content': 'TextContent',
            'code_md5': 'CodeMD5',
            'code_size': 'CodeSize',
            's3_application_code_location_description': 'S3ApplicationCodeLocationDescription'
        }

        self._text_content = text_content
        self._code_md5 = code_md5
        self._code_size = code_size
        self._s3_application_code_location_description = s3_application_code_location_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationCodeConfigurationDescriptionCodeContentDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationCodeConfigurationDescription_CodeContentDescription of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_content(self):
        """Gets the text_content of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :return: The text_content of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :rtype: str
        """
        return self._text_content

    @text_content.setter
    def text_content(self, text_content):
        """Sets the text_content of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :param text_content: The text_content of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :type text_content: str
        """

        self._text_content = text_content

    @property
    def code_md5(self):
        """Gets the code_md5 of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :return: The code_md5 of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :rtype: str
        """
        return self._code_md5

    @code_md5.setter
    def code_md5(self, code_md5):
        """Sets the code_md5 of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :param code_md5: The code_md5 of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :type code_md5: str
        """

        self._code_md5 = code_md5

    @property
    def code_size(self):
        """Gets the code_size of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :return: The code_size of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :rtype: int
        """
        return self._code_size

    @code_size.setter
    def code_size(self, code_size):
        """Sets the code_size of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :param code_size: The code_size of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :type code_size: int
        """

        self._code_size = code_size

    @property
    def s3_application_code_location_description(self):
        """Gets the s3_application_code_location_description of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :return: The s3_application_code_location_description of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :rtype: CodeContentDescriptionS3ApplicationCodeLocationDescription
        """
        return self._s3_application_code_location_description

    @s3_application_code_location_description.setter
    def s3_application_code_location_description(self, s3_application_code_location_description):
        """Sets the s3_application_code_location_description of this ApplicationCodeConfigurationDescriptionCodeContentDescription.


        :param s3_application_code_location_description: The s3_application_code_location_description of this ApplicationCodeConfigurationDescriptionCodeContentDescription.
        :type s3_application_code_location_description: CodeContentDescriptionS3ApplicationCodeLocationDescription
        """

        self._s3_application_code_location_description = s3_application_code_location_description
