# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_code_configuration_description_code_content_description import ApplicationCodeConfigurationDescriptionCodeContentDescription
from openapi_server.models.code_content_type import CodeContentType
from openapi_server import util


class ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_content_type: CodeContentType=None, code_content_description: ApplicationCodeConfigurationDescriptionCodeContentDescription=None):
        """ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription - a model defined in OpenAPI

        :param code_content_type: The code_content_type of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        :param code_content_description: The code_content_description of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        """
        self.openapi_types = {
            'code_content_type': CodeContentType,
            'code_content_description': ApplicationCodeConfigurationDescriptionCodeContentDescription
        }

        self.attribute_map = {
            'code_content_type': 'CodeContentType',
            'code_content_description': 'CodeContentDescription'
        }

        self._code_content_type = code_content_type
        self._code_content_description = code_content_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationConfigurationDescription_ApplicationCodeConfigurationDescription of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_content_type(self):
        """Gets the code_content_type of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.


        :return: The code_content_type of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        :rtype: CodeContentType
        """
        return self._code_content_type

    @code_content_type.setter
    def code_content_type(self, code_content_type):
        """Sets the code_content_type of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.


        :param code_content_type: The code_content_type of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        :type code_content_type: CodeContentType
        """
        if code_content_type is None:
            raise ValueError("Invalid value for `code_content_type`, must not be `None`")

        self._code_content_type = code_content_type

    @property
    def code_content_description(self):
        """Gets the code_content_description of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.


        :return: The code_content_description of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        :rtype: ApplicationCodeConfigurationDescriptionCodeContentDescription
        """
        return self._code_content_description

    @code_content_description.setter
    def code_content_description(self, code_content_description):
        """Sets the code_content_description of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.


        :param code_content_description: The code_content_description of this ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.
        :type code_content_description: ApplicationCodeConfigurationDescriptionCodeContentDescription
        """

        self._code_content_description = code_content_description
