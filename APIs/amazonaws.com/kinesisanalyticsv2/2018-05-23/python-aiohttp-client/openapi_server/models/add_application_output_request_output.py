# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_destination_schema import OutputDestinationSchema
from openapi_server.models.output_kinesis_firehose_output import OutputKinesisFirehoseOutput
from openapi_server.models.output_kinesis_streams_output import OutputKinesisStreamsOutput
from openapi_server.models.output_lambda_output import OutputLambdaOutput
from openapi_server import util


class AddApplicationOutputRequestOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, kinesis_streams_output: OutputKinesisStreamsOutput=None, kinesis_firehose_output: OutputKinesisFirehoseOutput=None, lambda_output: OutputLambdaOutput=None, destination_schema: OutputDestinationSchema=None):
        """AddApplicationOutputRequestOutput - a model defined in OpenAPI

        :param name: The name of this AddApplicationOutputRequestOutput.
        :param kinesis_streams_output: The kinesis_streams_output of this AddApplicationOutputRequestOutput.
        :param kinesis_firehose_output: The kinesis_firehose_output of this AddApplicationOutputRequestOutput.
        :param lambda_output: The lambda_output of this AddApplicationOutputRequestOutput.
        :param destination_schema: The destination_schema of this AddApplicationOutputRequestOutput.
        """
        self.openapi_types = {
            'name': str,
            'kinesis_streams_output': OutputKinesisStreamsOutput,
            'kinesis_firehose_output': OutputKinesisFirehoseOutput,
            'lambda_output': OutputLambdaOutput,
            'destination_schema': OutputDestinationSchema
        }

        self.attribute_map = {
            'name': 'Name',
            'kinesis_streams_output': 'KinesisStreamsOutput',
            'kinesis_firehose_output': 'KinesisFirehoseOutput',
            'lambda_output': 'LambdaOutput',
            'destination_schema': 'DestinationSchema'
        }

        self._name = name
        self._kinesis_streams_output = kinesis_streams_output
        self._kinesis_firehose_output = kinesis_firehose_output
        self._lambda_output = lambda_output
        self._destination_schema = destination_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddApplicationOutputRequestOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddApplicationOutputRequest_Output of this AddApplicationOutputRequestOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AddApplicationOutputRequestOutput.


        :return: The name of this AddApplicationOutputRequestOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddApplicationOutputRequestOutput.


        :param name: The name of this AddApplicationOutputRequestOutput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def kinesis_streams_output(self):
        """Gets the kinesis_streams_output of this AddApplicationOutputRequestOutput.


        :return: The kinesis_streams_output of this AddApplicationOutputRequestOutput.
        :rtype: OutputKinesisStreamsOutput
        """
        return self._kinesis_streams_output

    @kinesis_streams_output.setter
    def kinesis_streams_output(self, kinesis_streams_output):
        """Sets the kinesis_streams_output of this AddApplicationOutputRequestOutput.


        :param kinesis_streams_output: The kinesis_streams_output of this AddApplicationOutputRequestOutput.
        :type kinesis_streams_output: OutputKinesisStreamsOutput
        """

        self._kinesis_streams_output = kinesis_streams_output

    @property
    def kinesis_firehose_output(self):
        """Gets the kinesis_firehose_output of this AddApplicationOutputRequestOutput.


        :return: The kinesis_firehose_output of this AddApplicationOutputRequestOutput.
        :rtype: OutputKinesisFirehoseOutput
        """
        return self._kinesis_firehose_output

    @kinesis_firehose_output.setter
    def kinesis_firehose_output(self, kinesis_firehose_output):
        """Sets the kinesis_firehose_output of this AddApplicationOutputRequestOutput.


        :param kinesis_firehose_output: The kinesis_firehose_output of this AddApplicationOutputRequestOutput.
        :type kinesis_firehose_output: OutputKinesisFirehoseOutput
        """

        self._kinesis_firehose_output = kinesis_firehose_output

    @property
    def lambda_output(self):
        """Gets the lambda_output of this AddApplicationOutputRequestOutput.


        :return: The lambda_output of this AddApplicationOutputRequestOutput.
        :rtype: OutputLambdaOutput
        """
        return self._lambda_output

    @lambda_output.setter
    def lambda_output(self, lambda_output):
        """Sets the lambda_output of this AddApplicationOutputRequestOutput.


        :param lambda_output: The lambda_output of this AddApplicationOutputRequestOutput.
        :type lambda_output: OutputLambdaOutput
        """

        self._lambda_output = lambda_output

    @property
    def destination_schema(self):
        """Gets the destination_schema of this AddApplicationOutputRequestOutput.


        :return: The destination_schema of this AddApplicationOutputRequestOutput.
        :rtype: OutputDestinationSchema
        """
        return self._destination_schema

    @destination_schema.setter
    def destination_schema(self, destination_schema):
        """Sets the destination_schema of this AddApplicationOutputRequestOutput.


        :param destination_schema: The destination_schema of this AddApplicationOutputRequestOutput.
        :type destination_schema: OutputDestinationSchema
        """
        if destination_schema is None:
            raise ValueError("Invalid value for `destination_schema`, must not be `None`")

        self._destination_schema = destination_schema
