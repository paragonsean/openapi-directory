# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.url_type import UrlType
from openapi_server import util


class CreateApplicationPresignedUrlRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, url_type: UrlType=None, session_expiration_duration_in_seconds: int=None):
        """CreateApplicationPresignedUrlRequest - a model defined in OpenAPI

        :param application_name: The application_name of this CreateApplicationPresignedUrlRequest.
        :param url_type: The url_type of this CreateApplicationPresignedUrlRequest.
        :param session_expiration_duration_in_seconds: The session_expiration_duration_in_seconds of this CreateApplicationPresignedUrlRequest.
        """
        self.openapi_types = {
            'application_name': str,
            'url_type': UrlType,
            'session_expiration_duration_in_seconds': int
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'url_type': 'UrlType',
            'session_expiration_duration_in_seconds': 'SessionExpirationDurationInSeconds'
        }

        self._application_name = application_name
        self._url_type = url_type
        self._session_expiration_duration_in_seconds = session_expiration_duration_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateApplicationPresignedUrlRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateApplicationPresignedUrlRequest of this CreateApplicationPresignedUrlRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this CreateApplicationPresignedUrlRequest.


        :return: The application_name of this CreateApplicationPresignedUrlRequest.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this CreateApplicationPresignedUrlRequest.


        :param application_name: The application_name of this CreateApplicationPresignedUrlRequest.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def url_type(self):
        """Gets the url_type of this CreateApplicationPresignedUrlRequest.


        :return: The url_type of this CreateApplicationPresignedUrlRequest.
        :rtype: UrlType
        """
        return self._url_type

    @url_type.setter
    def url_type(self, url_type):
        """Sets the url_type of this CreateApplicationPresignedUrlRequest.


        :param url_type: The url_type of this CreateApplicationPresignedUrlRequest.
        :type url_type: UrlType
        """
        if url_type is None:
            raise ValueError("Invalid value for `url_type`, must not be `None`")

        self._url_type = url_type

    @property
    def session_expiration_duration_in_seconds(self):
        """Gets the session_expiration_duration_in_seconds of this CreateApplicationPresignedUrlRequest.


        :return: The session_expiration_duration_in_seconds of this CreateApplicationPresignedUrlRequest.
        :rtype: int
        """
        return self._session_expiration_duration_in_seconds

    @session_expiration_duration_in_seconds.setter
    def session_expiration_duration_in_seconds(self, session_expiration_duration_in_seconds):
        """Sets the session_expiration_duration_in_seconds of this CreateApplicationPresignedUrlRequest.


        :param session_expiration_duration_in_seconds: The session_expiration_duration_in_seconds of this CreateApplicationPresignedUrlRequest.
        :type session_expiration_duration_in_seconds: int
        """

        self._session_expiration_duration_in_seconds = session_expiration_duration_in_seconds
