# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_name: str=None, create_timestamp: datetime=None):
        """DeleteApplicationRequest - a model defined in OpenAPI

        :param application_name: The application_name of this DeleteApplicationRequest.
        :param create_timestamp: The create_timestamp of this DeleteApplicationRequest.
        """
        self.openapi_types = {
            'application_name': str,
            'create_timestamp': datetime
        }

        self.attribute_map = {
            'application_name': 'ApplicationName',
            'create_timestamp': 'CreateTimestamp'
        }

        self._application_name = application_name
        self._create_timestamp = create_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteApplicationRequest of this DeleteApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_name(self):
        """Gets the application_name of this DeleteApplicationRequest.


        :return: The application_name of this DeleteApplicationRequest.
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this DeleteApplicationRequest.


        :param application_name: The application_name of this DeleteApplicationRequest.
        :type application_name: str
        """
        if application_name is None:
            raise ValueError("Invalid value for `application_name`, must not be `None`")

        self._application_name = application_name

    @property
    def create_timestamp(self):
        """Gets the create_timestamp of this DeleteApplicationRequest.


        :return: The create_timestamp of this DeleteApplicationRequest.
        :rtype: datetime
        """
        return self._create_timestamp

    @create_timestamp.setter
    def create_timestamp(self, create_timestamp):
        """Sets the create_timestamp of this DeleteApplicationRequest.


        :param create_timestamp: The create_timestamp of this DeleteApplicationRequest.
        :type create_timestamp: datetime
        """
        if create_timestamp is None:
            raise ValueError("Invalid value for `create_timestamp`, must not be `None`")

        self._create_timestamp = create_timestamp
