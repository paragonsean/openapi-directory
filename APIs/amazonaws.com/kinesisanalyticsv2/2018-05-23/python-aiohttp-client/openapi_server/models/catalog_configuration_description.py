# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_configuration_description_glue_data_catalog_configuration_description import CatalogConfigurationDescriptionGlueDataCatalogConfigurationDescription
from openapi_server import util


class CatalogConfigurationDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, glue_data_catalog_configuration_description: CatalogConfigurationDescriptionGlueDataCatalogConfigurationDescription=None):
        """CatalogConfigurationDescription - a model defined in OpenAPI

        :param glue_data_catalog_configuration_description: The glue_data_catalog_configuration_description of this CatalogConfigurationDescription.
        """
        self.openapi_types = {
            'glue_data_catalog_configuration_description': CatalogConfigurationDescriptionGlueDataCatalogConfigurationDescription
        }

        self.attribute_map = {
            'glue_data_catalog_configuration_description': 'GlueDataCatalogConfigurationDescription'
        }

        self._glue_data_catalog_configuration_description = glue_data_catalog_configuration_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogConfigurationDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CatalogConfigurationDescription of this CatalogConfigurationDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def glue_data_catalog_configuration_description(self):
        """Gets the glue_data_catalog_configuration_description of this CatalogConfigurationDescription.


        :return: The glue_data_catalog_configuration_description of this CatalogConfigurationDescription.
        :rtype: CatalogConfigurationDescriptionGlueDataCatalogConfigurationDescription
        """
        return self._glue_data_catalog_configuration_description

    @glue_data_catalog_configuration_description.setter
    def glue_data_catalog_configuration_description(self, glue_data_catalog_configuration_description):
        """Sets the glue_data_catalog_configuration_description of this CatalogConfigurationDescription.


        :param glue_data_catalog_configuration_description: The glue_data_catalog_configuration_description of this CatalogConfigurationDescription.
        :type glue_data_catalog_configuration_description: CatalogConfigurationDescriptionGlueDataCatalogConfigurationDescription
        """
        if glue_data_catalog_configuration_description is None:
            raise ValueError("Invalid value for `glue_data_catalog_configuration_description`, must not be `None`")

        self._glue_data_catalog_configuration_description = glue_data_catalog_configuration_description
