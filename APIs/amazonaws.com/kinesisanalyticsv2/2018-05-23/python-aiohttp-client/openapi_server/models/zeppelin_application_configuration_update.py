# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deploy_as_application_configuration_update import DeployAsApplicationConfigurationUpdate
from openapi_server.models.zeppelin_application_configuration_update_catalog_configuration_update import ZeppelinApplicationConfigurationUpdateCatalogConfigurationUpdate
from openapi_server.models.zeppelin_application_configuration_update_monitoring_configuration_update import ZeppelinApplicationConfigurationUpdateMonitoringConfigurationUpdate
from openapi_server import util


class ZeppelinApplicationConfigurationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitoring_configuration_update: ZeppelinApplicationConfigurationUpdateMonitoringConfigurationUpdate=None, catalog_configuration_update: ZeppelinApplicationConfigurationUpdateCatalogConfigurationUpdate=None, deploy_as_application_configuration_update: DeployAsApplicationConfigurationUpdate=None, custom_artifacts_configuration_update: List=None):
        """ZeppelinApplicationConfigurationUpdate - a model defined in OpenAPI

        :param monitoring_configuration_update: The monitoring_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :param catalog_configuration_update: The catalog_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :param deploy_as_application_configuration_update: The deploy_as_application_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :param custom_artifacts_configuration_update: The custom_artifacts_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        """
        self.openapi_types = {
            'monitoring_configuration_update': ZeppelinApplicationConfigurationUpdateMonitoringConfigurationUpdate,
            'catalog_configuration_update': ZeppelinApplicationConfigurationUpdateCatalogConfigurationUpdate,
            'deploy_as_application_configuration_update': DeployAsApplicationConfigurationUpdate,
            'custom_artifacts_configuration_update': List
        }

        self.attribute_map = {
            'monitoring_configuration_update': 'MonitoringConfigurationUpdate',
            'catalog_configuration_update': 'CatalogConfigurationUpdate',
            'deploy_as_application_configuration_update': 'DeployAsApplicationConfigurationUpdate',
            'custom_artifacts_configuration_update': 'CustomArtifactsConfigurationUpdate'
        }

        self._monitoring_configuration_update = monitoring_configuration_update
        self._catalog_configuration_update = catalog_configuration_update
        self._deploy_as_application_configuration_update = deploy_as_application_configuration_update
        self._custom_artifacts_configuration_update = custom_artifacts_configuration_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ZeppelinApplicationConfigurationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ZeppelinApplicationConfigurationUpdate of this ZeppelinApplicationConfigurationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_configuration_update(self):
        """Gets the monitoring_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :return: The monitoring_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :rtype: ZeppelinApplicationConfigurationUpdateMonitoringConfigurationUpdate
        """
        return self._monitoring_configuration_update

    @monitoring_configuration_update.setter
    def monitoring_configuration_update(self, monitoring_configuration_update):
        """Sets the monitoring_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :param monitoring_configuration_update: The monitoring_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :type monitoring_configuration_update: ZeppelinApplicationConfigurationUpdateMonitoringConfigurationUpdate
        """

        self._monitoring_configuration_update = monitoring_configuration_update

    @property
    def catalog_configuration_update(self):
        """Gets the catalog_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :return: The catalog_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :rtype: ZeppelinApplicationConfigurationUpdateCatalogConfigurationUpdate
        """
        return self._catalog_configuration_update

    @catalog_configuration_update.setter
    def catalog_configuration_update(self, catalog_configuration_update):
        """Sets the catalog_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :param catalog_configuration_update: The catalog_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :type catalog_configuration_update: ZeppelinApplicationConfigurationUpdateCatalogConfigurationUpdate
        """

        self._catalog_configuration_update = catalog_configuration_update

    @property
    def deploy_as_application_configuration_update(self):
        """Gets the deploy_as_application_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :return: The deploy_as_application_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :rtype: DeployAsApplicationConfigurationUpdate
        """
        return self._deploy_as_application_configuration_update

    @deploy_as_application_configuration_update.setter
    def deploy_as_application_configuration_update(self, deploy_as_application_configuration_update):
        """Sets the deploy_as_application_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :param deploy_as_application_configuration_update: The deploy_as_application_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :type deploy_as_application_configuration_update: DeployAsApplicationConfigurationUpdate
        """

        self._deploy_as_application_configuration_update = deploy_as_application_configuration_update

    @property
    def custom_artifacts_configuration_update(self):
        """Gets the custom_artifacts_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :return: The custom_artifacts_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :rtype: List
        """
        return self._custom_artifacts_configuration_update

    @custom_artifacts_configuration_update.setter
    def custom_artifacts_configuration_update(self, custom_artifacts_configuration_update):
        """Sets the custom_artifacts_configuration_update of this ZeppelinApplicationConfigurationUpdate.


        :param custom_artifacts_configuration_update: The custom_artifacts_configuration_update of this ZeppelinApplicationConfigurationUpdate.
        :type custom_artifacts_configuration_update: List
        """

        self._custom_artifacts_configuration_update = custom_artifacts_configuration_update
