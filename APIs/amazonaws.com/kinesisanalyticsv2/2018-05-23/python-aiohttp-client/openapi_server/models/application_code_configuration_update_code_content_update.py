# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.code_content_update_s3_content_location_update import CodeContentUpdateS3ContentLocationUpdate
from openapi_server import util


class ApplicationCodeConfigurationUpdateCodeContentUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text_content_update: str=None, zip_file_content_update: str=None, s3_content_location_update: CodeContentUpdateS3ContentLocationUpdate=None):
        """ApplicationCodeConfigurationUpdateCodeContentUpdate - a model defined in OpenAPI

        :param text_content_update: The text_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :param zip_file_content_update: The zip_file_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :param s3_content_location_update: The s3_content_location_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        """
        self.openapi_types = {
            'text_content_update': str,
            'zip_file_content_update': str,
            's3_content_location_update': CodeContentUpdateS3ContentLocationUpdate
        }

        self.attribute_map = {
            'text_content_update': 'TextContentUpdate',
            'zip_file_content_update': 'ZipFileContentUpdate',
            's3_content_location_update': 'S3ContentLocationUpdate'
        }

        self._text_content_update = text_content_update
        self._zip_file_content_update = zip_file_content_update
        self._s3_content_location_update = s3_content_location_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationCodeConfigurationUpdateCodeContentUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationCodeConfigurationUpdate_CodeContentUpdate of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_content_update(self):
        """Gets the text_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :return: The text_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :rtype: str
        """
        return self._text_content_update

    @text_content_update.setter
    def text_content_update(self, text_content_update):
        """Sets the text_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :param text_content_update: The text_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :type text_content_update: str
        """

        self._text_content_update = text_content_update

    @property
    def zip_file_content_update(self):
        """Gets the zip_file_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :return: The zip_file_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :rtype: str
        """
        return self._zip_file_content_update

    @zip_file_content_update.setter
    def zip_file_content_update(self, zip_file_content_update):
        """Sets the zip_file_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :param zip_file_content_update: The zip_file_content_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :type zip_file_content_update: str
        """

        self._zip_file_content_update = zip_file_content_update

    @property
    def s3_content_location_update(self):
        """Gets the s3_content_location_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :return: The s3_content_location_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :rtype: CodeContentUpdateS3ContentLocationUpdate
        """
        return self._s3_content_location_update

    @s3_content_location_update.setter
    def s3_content_location_update(self, s3_content_location_update):
        """Sets the s3_content_location_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.


        :param s3_content_location_update: The s3_content_location_update of this ApplicationCodeConfigurationUpdateCodeContentUpdate.
        :type s3_content_location_update: CodeContentUpdateS3ContentLocationUpdate
        """

        self._s3_content_location_update = s3_content_location_update
