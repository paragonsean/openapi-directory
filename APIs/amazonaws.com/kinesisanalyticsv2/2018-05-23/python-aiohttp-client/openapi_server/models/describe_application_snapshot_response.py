# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_application_snapshot_response_snapshot_details import DescribeApplicationSnapshotResponseSnapshotDetails
from openapi_server import util


class DescribeApplicationSnapshotResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_details: DescribeApplicationSnapshotResponseSnapshotDetails=None):
        """DescribeApplicationSnapshotResponse - a model defined in OpenAPI

        :param snapshot_details: The snapshot_details of this DescribeApplicationSnapshotResponse.
        """
        self.openapi_types = {
            'snapshot_details': DescribeApplicationSnapshotResponseSnapshotDetails
        }

        self.attribute_map = {
            'snapshot_details': 'SnapshotDetails'
        }

        self._snapshot_details = snapshot_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeApplicationSnapshotResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeApplicationSnapshotResponse of this DescribeApplicationSnapshotResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_details(self):
        """Gets the snapshot_details of this DescribeApplicationSnapshotResponse.


        :return: The snapshot_details of this DescribeApplicationSnapshotResponse.
        :rtype: DescribeApplicationSnapshotResponseSnapshotDetails
        """
        return self._snapshot_details

    @snapshot_details.setter
    def snapshot_details(self, snapshot_details):
        """Sets the snapshot_details of this DescribeApplicationSnapshotResponse.


        :param snapshot_details: The snapshot_details of this DescribeApplicationSnapshotResponse.
        :type snapshot_details: DescribeApplicationSnapshotResponseSnapshotDetails
        """
        if snapshot_details is None:
            raise ValueError("Invalid value for `snapshot_details`, must not be `None`")

        self._snapshot_details = snapshot_details
