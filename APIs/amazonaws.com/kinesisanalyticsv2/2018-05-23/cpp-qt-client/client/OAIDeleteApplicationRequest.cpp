/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteApplicationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteApplicationRequest::OAIDeleteApplicationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteApplicationRequest::OAIDeleteApplicationRequest() {
    this->initializeModel();
}

OAIDeleteApplicationRequest::~OAIDeleteApplicationRequest() {}

void OAIDeleteApplicationRequest::initializeModel() {

    m_application_name_isSet = false;
    m_application_name_isValid = false;

    m_create_timestamp_isSet = false;
    m_create_timestamp_isValid = false;
}

void OAIDeleteApplicationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteApplicationRequest::fromJsonObject(QJsonObject json) {

    m_application_name_isValid = ::OpenAPI::fromJsonValue(m_application_name, json[QString("ApplicationName")]);
    m_application_name_isSet = !json[QString("ApplicationName")].isNull() && m_application_name_isValid;

    m_create_timestamp_isValid = ::OpenAPI::fromJsonValue(m_create_timestamp, json[QString("CreateTimestamp")]);
    m_create_timestamp_isSet = !json[QString("CreateTimestamp")].isNull() && m_create_timestamp_isValid;
}

QString OAIDeleteApplicationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteApplicationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_application_name_isSet) {
        obj.insert(QString("ApplicationName"), ::OpenAPI::toJsonValue(m_application_name));
    }
    if (m_create_timestamp_isSet) {
        obj.insert(QString("CreateTimestamp"), ::OpenAPI::toJsonValue(m_create_timestamp));
    }
    return obj;
}

QString OAIDeleteApplicationRequest::getApplicationName() const {
    return m_application_name;
}
void OAIDeleteApplicationRequest::setApplicationName(const QString &application_name) {
    m_application_name = application_name;
    m_application_name_isSet = true;
}

bool OAIDeleteApplicationRequest::is_application_name_Set() const{
    return m_application_name_isSet;
}

bool OAIDeleteApplicationRequest::is_application_name_Valid() const{
    return m_application_name_isValid;
}

QDateTime OAIDeleteApplicationRequest::getCreateTimestamp() const {
    return m_create_timestamp;
}
void OAIDeleteApplicationRequest::setCreateTimestamp(const QDateTime &create_timestamp) {
    m_create_timestamp = create_timestamp;
    m_create_timestamp_isSet = true;
}

bool OAIDeleteApplicationRequest::is_create_timestamp_Set() const{
    return m_create_timestamp_isSet;
}

bool OAIDeleteApplicationRequest::is_create_timestamp_Valid() const{
    return m_create_timestamp_isValid;
}

bool OAIDeleteApplicationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteApplicationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_name_isValid && m_create_timestamp_isValid && true;
}

} // namespace OpenAPI
