/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVpcConfigurationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVpcConfigurationUpdate::OAIVpcConfigurationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVpcConfigurationUpdate::OAIVpcConfigurationUpdate() {
    this->initializeModel();
}

OAIVpcConfigurationUpdate::~OAIVpcConfigurationUpdate() {}

void OAIVpcConfigurationUpdate::initializeModel() {

    m_vpc_configuration_id_isSet = false;
    m_vpc_configuration_id_isValid = false;

    m_subnet_id_updates_isSet = false;
    m_subnet_id_updates_isValid = false;

    m_security_group_id_updates_isSet = false;
    m_security_group_id_updates_isValid = false;
}

void OAIVpcConfigurationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVpcConfigurationUpdate::fromJsonObject(QJsonObject json) {

    m_vpc_configuration_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_configuration_id, json[QString("VpcConfigurationId")]);
    m_vpc_configuration_id_isSet = !json[QString("VpcConfigurationId")].isNull() && m_vpc_configuration_id_isValid;

    m_subnet_id_updates_isValid = ::OpenAPI::fromJsonValue(m_subnet_id_updates, json[QString("SubnetIdUpdates")]);
    m_subnet_id_updates_isSet = !json[QString("SubnetIdUpdates")].isNull() && m_subnet_id_updates_isValid;

    m_security_group_id_updates_isValid = ::OpenAPI::fromJsonValue(m_security_group_id_updates, json[QString("SecurityGroupIdUpdates")]);
    m_security_group_id_updates_isSet = !json[QString("SecurityGroupIdUpdates")].isNull() && m_security_group_id_updates_isValid;
}

QString OAIVpcConfigurationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVpcConfigurationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_configuration_id_isSet) {
        obj.insert(QString("VpcConfigurationId"), ::OpenAPI::toJsonValue(m_vpc_configuration_id));
    }
    if (m_subnet_id_updates.isSet()) {
        obj.insert(QString("SubnetIdUpdates"), ::OpenAPI::toJsonValue(m_subnet_id_updates));
    }
    if (m_security_group_id_updates.isSet()) {
        obj.insert(QString("SecurityGroupIdUpdates"), ::OpenAPI::toJsonValue(m_security_group_id_updates));
    }
    return obj;
}

QString OAIVpcConfigurationUpdate::getVpcConfigurationId() const {
    return m_vpc_configuration_id;
}
void OAIVpcConfigurationUpdate::setVpcConfigurationId(const QString &vpc_configuration_id) {
    m_vpc_configuration_id = vpc_configuration_id;
    m_vpc_configuration_id_isSet = true;
}

bool OAIVpcConfigurationUpdate::is_vpc_configuration_id_Set() const{
    return m_vpc_configuration_id_isSet;
}

bool OAIVpcConfigurationUpdate::is_vpc_configuration_id_Valid() const{
    return m_vpc_configuration_id_isValid;
}

QList OAIVpcConfigurationUpdate::getSubnetIdUpdates() const {
    return m_subnet_id_updates;
}
void OAIVpcConfigurationUpdate::setSubnetIdUpdates(const QList &subnet_id_updates) {
    m_subnet_id_updates = subnet_id_updates;
    m_subnet_id_updates_isSet = true;
}

bool OAIVpcConfigurationUpdate::is_subnet_id_updates_Set() const{
    return m_subnet_id_updates_isSet;
}

bool OAIVpcConfigurationUpdate::is_subnet_id_updates_Valid() const{
    return m_subnet_id_updates_isValid;
}

QList OAIVpcConfigurationUpdate::getSecurityGroupIdUpdates() const {
    return m_security_group_id_updates;
}
void OAIVpcConfigurationUpdate::setSecurityGroupIdUpdates(const QList &security_group_id_updates) {
    m_security_group_id_updates = security_group_id_updates;
    m_security_group_id_updates_isSet = true;
}

bool OAIVpcConfigurationUpdate::is_security_group_id_updates_Set() const{
    return m_security_group_id_updates_isSet;
}

bool OAIVpcConfigurationUpdate::is_security_group_id_updates_Valid() const{
    return m_security_group_id_updates_isValid;
}

bool OAIVpcConfigurationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_configuration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_id_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_id_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVpcConfigurationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vpc_configuration_id_isValid && true;
}

} // namespace OpenAPI
