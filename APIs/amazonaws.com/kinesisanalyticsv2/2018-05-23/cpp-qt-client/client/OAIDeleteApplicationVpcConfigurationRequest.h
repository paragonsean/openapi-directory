/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteApplicationVpcConfigurationRequest.h
 *
 * 
 */

#ifndef OAIDeleteApplicationVpcConfigurationRequest_H
#define OAIDeleteApplicationVpcConfigurationRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteApplicationVpcConfigurationRequest : public OAIObject {
public:
    OAIDeleteApplicationVpcConfigurationRequest();
    OAIDeleteApplicationVpcConfigurationRequest(QString json);
    ~OAIDeleteApplicationVpcConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    qint32 getCurrentApplicationVersionId() const;
    void setCurrentApplicationVersionId(const qint32 &current_application_version_id);
    bool is_current_application_version_id_Set() const;
    bool is_current_application_version_id_Valid() const;

    QString getVpcConfigurationId() const;
    void setVpcConfigurationId(const QString &vpc_configuration_id);
    bool is_vpc_configuration_id_Set() const;
    bool is_vpc_configuration_id_Valid() const;

    QString getConditionalToken() const;
    void setConditionalToken(const QString &conditional_token);
    bool is_conditional_token_Set() const;
    bool is_conditional_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    qint32 m_current_application_version_id;
    bool m_current_application_version_id_isSet;
    bool m_current_application_version_id_isValid;

    QString m_vpc_configuration_id;
    bool m_vpc_configuration_id_isSet;
    bool m_vpc_configuration_id_isValid;

    QString m_conditional_token;
    bool m_conditional_token_isSet;
    bool m_conditional_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteApplicationVpcConfigurationRequest)

#endif // OAIDeleteApplicationVpcConfigurationRequest_H
