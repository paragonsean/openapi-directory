/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationCodeConfigurationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationCodeConfigurationUpdate::OAIApplicationCodeConfigurationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationCodeConfigurationUpdate::OAIApplicationCodeConfigurationUpdate() {
    this->initializeModel();
}

OAIApplicationCodeConfigurationUpdate::~OAIApplicationCodeConfigurationUpdate() {}

void OAIApplicationCodeConfigurationUpdate::initializeModel() {

    m_code_content_type_update_isSet = false;
    m_code_content_type_update_isValid = false;

    m_code_content_update_isSet = false;
    m_code_content_update_isValid = false;
}

void OAIApplicationCodeConfigurationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationCodeConfigurationUpdate::fromJsonObject(QJsonObject json) {

    m_code_content_type_update_isValid = ::OpenAPI::fromJsonValue(m_code_content_type_update, json[QString("CodeContentTypeUpdate")]);
    m_code_content_type_update_isSet = !json[QString("CodeContentTypeUpdate")].isNull() && m_code_content_type_update_isValid;

    m_code_content_update_isValid = ::OpenAPI::fromJsonValue(m_code_content_update, json[QString("CodeContentUpdate")]);
    m_code_content_update_isSet = !json[QString("CodeContentUpdate")].isNull() && m_code_content_update_isValid;
}

QString OAIApplicationCodeConfigurationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationCodeConfigurationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_code_content_type_update.isSet()) {
        obj.insert(QString("CodeContentTypeUpdate"), ::OpenAPI::toJsonValue(m_code_content_type_update));
    }
    if (m_code_content_update.isSet()) {
        obj.insert(QString("CodeContentUpdate"), ::OpenAPI::toJsonValue(m_code_content_update));
    }
    return obj;
}

OAICodeContentType OAIApplicationCodeConfigurationUpdate::getCodeContentTypeUpdate() const {
    return m_code_content_type_update;
}
void OAIApplicationCodeConfigurationUpdate::setCodeContentTypeUpdate(const OAICodeContentType &code_content_type_update) {
    m_code_content_type_update = code_content_type_update;
    m_code_content_type_update_isSet = true;
}

bool OAIApplicationCodeConfigurationUpdate::is_code_content_type_update_Set() const{
    return m_code_content_type_update_isSet;
}

bool OAIApplicationCodeConfigurationUpdate::is_code_content_type_update_Valid() const{
    return m_code_content_type_update_isValid;
}

OAIApplicationCodeConfigurationUpdate_CodeContentUpdate OAIApplicationCodeConfigurationUpdate::getCodeContentUpdate() const {
    return m_code_content_update;
}
void OAIApplicationCodeConfigurationUpdate::setCodeContentUpdate(const OAIApplicationCodeConfigurationUpdate_CodeContentUpdate &code_content_update) {
    m_code_content_update = code_content_update;
    m_code_content_update_isSet = true;
}

bool OAIApplicationCodeConfigurationUpdate::is_code_content_update_Set() const{
    return m_code_content_update_isSet;
}

bool OAIApplicationCodeConfigurationUpdate::is_code_content_update_Valid() const{
    return m_code_content_update_isValid;
}

bool OAIApplicationCodeConfigurationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_content_type_update.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_content_update.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationCodeConfigurationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
