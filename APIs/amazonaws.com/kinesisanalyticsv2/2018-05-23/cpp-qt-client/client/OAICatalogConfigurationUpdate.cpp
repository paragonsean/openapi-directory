/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogConfigurationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogConfigurationUpdate::OAICatalogConfigurationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogConfigurationUpdate::OAICatalogConfigurationUpdate() {
    this->initializeModel();
}

OAICatalogConfigurationUpdate::~OAICatalogConfigurationUpdate() {}

void OAICatalogConfigurationUpdate::initializeModel() {

    m_glue_data_catalog_configuration_update_isSet = false;
    m_glue_data_catalog_configuration_update_isValid = false;
}

void OAICatalogConfigurationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogConfigurationUpdate::fromJsonObject(QJsonObject json) {

    m_glue_data_catalog_configuration_update_isValid = ::OpenAPI::fromJsonValue(m_glue_data_catalog_configuration_update, json[QString("GlueDataCatalogConfigurationUpdate")]);
    m_glue_data_catalog_configuration_update_isSet = !json[QString("GlueDataCatalogConfigurationUpdate")].isNull() && m_glue_data_catalog_configuration_update_isValid;
}

QString OAICatalogConfigurationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogConfigurationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_glue_data_catalog_configuration_update.isSet()) {
        obj.insert(QString("GlueDataCatalogConfigurationUpdate"), ::OpenAPI::toJsonValue(m_glue_data_catalog_configuration_update));
    }
    return obj;
}

OAICatalogConfigurationUpdate_GlueDataCatalogConfigurationUpdate OAICatalogConfigurationUpdate::getGlueDataCatalogConfigurationUpdate() const {
    return m_glue_data_catalog_configuration_update;
}
void OAICatalogConfigurationUpdate::setGlueDataCatalogConfigurationUpdate(const OAICatalogConfigurationUpdate_GlueDataCatalogConfigurationUpdate &glue_data_catalog_configuration_update) {
    m_glue_data_catalog_configuration_update = glue_data_catalog_configuration_update;
    m_glue_data_catalog_configuration_update_isSet = true;
}

bool OAICatalogConfigurationUpdate::is_glue_data_catalog_configuration_update_Set() const{
    return m_glue_data_catalog_configuration_update_isSet;
}

bool OAICatalogConfigurationUpdate::is_glue_data_catalog_configuration_update_Valid() const{
    return m_glue_data_catalog_configuration_update_isValid;
}

bool OAICatalogConfigurationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_glue_data_catalog_configuration_update.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogConfigurationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_glue_data_catalog_configuration_update_isValid && true;
}

} // namespace OpenAPI
