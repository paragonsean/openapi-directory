/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJSONMappingParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJSONMappingParameters::OAIJSONMappingParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJSONMappingParameters::OAIJSONMappingParameters() {
    this->initializeModel();
}

OAIJSONMappingParameters::~OAIJSONMappingParameters() {}

void OAIJSONMappingParameters::initializeModel() {

    m_record_row_path_isSet = false;
    m_record_row_path_isValid = false;
}

void OAIJSONMappingParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJSONMappingParameters::fromJsonObject(QJsonObject json) {

    m_record_row_path_isValid = ::OpenAPI::fromJsonValue(m_record_row_path, json[QString("RecordRowPath")]);
    m_record_row_path_isSet = !json[QString("RecordRowPath")].isNull() && m_record_row_path_isValid;
}

QString OAIJSONMappingParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJSONMappingParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_record_row_path_isSet) {
        obj.insert(QString("RecordRowPath"), ::OpenAPI::toJsonValue(m_record_row_path));
    }
    return obj;
}

QString OAIJSONMappingParameters::getRecordRowPath() const {
    return m_record_row_path;
}
void OAIJSONMappingParameters::setRecordRowPath(const QString &record_row_path) {
    m_record_row_path = record_row_path;
    m_record_row_path_isSet = true;
}

bool OAIJSONMappingParameters::is_record_row_path_Set() const{
    return m_record_row_path_isSet;
}

bool OAIJSONMappingParameters::is_record_row_path_Valid() const{
    return m_record_row_path_isValid;
}

bool OAIJSONMappingParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_record_row_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJSONMappingParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_record_row_path_isValid && true;
}

} // namespace OpenAPI
