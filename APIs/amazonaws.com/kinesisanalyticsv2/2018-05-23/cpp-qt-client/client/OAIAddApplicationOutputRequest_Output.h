/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddApplicationOutputRequest_Output.h
 *
 * 
 */

#ifndef OAIAddApplicationOutputRequest_Output_H
#define OAIAddApplicationOutputRequest_Output_H

#include <QJsonObject>

#include "OAIOutput_DestinationSchema.h"
#include "OAIOutput_KinesisFirehoseOutput.h"
#include "OAIOutput_KinesisStreamsOutput.h"
#include "OAIOutput_LambdaOutput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOutput_KinesisStreamsOutput;
class OAIOutput_KinesisFirehoseOutput;
class OAIOutput_LambdaOutput;
class OAIOutput_DestinationSchema;

class OAIAddApplicationOutputRequest_Output : public OAIObject {
public:
    OAIAddApplicationOutputRequest_Output();
    OAIAddApplicationOutputRequest_Output(QString json);
    ~OAIAddApplicationOutputRequest_Output() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOutput_KinesisStreamsOutput getKinesisStreamsOutput() const;
    void setKinesisStreamsOutput(const OAIOutput_KinesisStreamsOutput &kinesis_streams_output);
    bool is_kinesis_streams_output_Set() const;
    bool is_kinesis_streams_output_Valid() const;

    OAIOutput_KinesisFirehoseOutput getKinesisFirehoseOutput() const;
    void setKinesisFirehoseOutput(const OAIOutput_KinesisFirehoseOutput &kinesis_firehose_output);
    bool is_kinesis_firehose_output_Set() const;
    bool is_kinesis_firehose_output_Valid() const;

    OAIOutput_LambdaOutput getLambdaOutput() const;
    void setLambdaOutput(const OAIOutput_LambdaOutput &lambda_output);
    bool is_lambda_output_Set() const;
    bool is_lambda_output_Valid() const;

    OAIOutput_DestinationSchema getDestinationSchema() const;
    void setDestinationSchema(const OAIOutput_DestinationSchema &destination_schema);
    bool is_destination_schema_Set() const;
    bool is_destination_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOutput_KinesisStreamsOutput m_kinesis_streams_output;
    bool m_kinesis_streams_output_isSet;
    bool m_kinesis_streams_output_isValid;

    OAIOutput_KinesisFirehoseOutput m_kinesis_firehose_output;
    bool m_kinesis_firehose_output_isSet;
    bool m_kinesis_firehose_output_isValid;

    OAIOutput_LambdaOutput m_lambda_output;
    bool m_lambda_output_isSet;
    bool m_lambda_output_isValid;

    OAIOutput_DestinationSchema m_destination_schema;
    bool m_destination_schema_isSet;
    bool m_destination_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddApplicationOutputRequest_Output)

#endif // OAIAddApplicationOutputRequest_Output_H
