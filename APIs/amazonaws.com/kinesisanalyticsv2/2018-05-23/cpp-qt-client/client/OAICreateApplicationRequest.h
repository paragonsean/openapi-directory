/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateApplicationRequest.h
 *
 * 
 */

#ifndef OAICreateApplicationRequest_H
#define OAICreateApplicationRequest_H

#include <QJsonObject>

#include "OAIApplicationMode.h"
#include "OAICreateApplicationRequest_ApplicationConfiguration.h"
#include "OAIRuntimeEnvironment.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateApplicationRequest_ApplicationConfiguration;

class OAICreateApplicationRequest : public OAIObject {
public:
    OAICreateApplicationRequest();
    OAICreateApplicationRequest(QString json);
    ~OAICreateApplicationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    QString getApplicationDescription() const;
    void setApplicationDescription(const QString &application_description);
    bool is_application_description_Set() const;
    bool is_application_description_Valid() const;

    OAIRuntimeEnvironment getRuntimeEnvironment() const;
    void setRuntimeEnvironment(const OAIRuntimeEnvironment &runtime_environment);
    bool is_runtime_environment_Set() const;
    bool is_runtime_environment_Valid() const;

    QString getServiceExecutionRole() const;
    void setServiceExecutionRole(const QString &service_execution_role);
    bool is_service_execution_role_Set() const;
    bool is_service_execution_role_Valid() const;

    OAICreateApplicationRequest_ApplicationConfiguration getApplicationConfiguration() const;
    void setApplicationConfiguration(const OAICreateApplicationRequest_ApplicationConfiguration &application_configuration);
    bool is_application_configuration_Set() const;
    bool is_application_configuration_Valid() const;

    QList getCloudWatchLoggingOptions() const;
    void setCloudWatchLoggingOptions(const QList &cloud_watch_logging_options);
    bool is_cloud_watch_logging_options_Set() const;
    bool is_cloud_watch_logging_options_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIApplicationMode getApplicationMode() const;
    void setApplicationMode(const OAIApplicationMode &application_mode);
    bool is_application_mode_Set() const;
    bool is_application_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    QString m_application_description;
    bool m_application_description_isSet;
    bool m_application_description_isValid;

    OAIRuntimeEnvironment m_runtime_environment;
    bool m_runtime_environment_isSet;
    bool m_runtime_environment_isValid;

    QString m_service_execution_role;
    bool m_service_execution_role_isSet;
    bool m_service_execution_role_isValid;

    OAICreateApplicationRequest_ApplicationConfiguration m_application_configuration;
    bool m_application_configuration_isSet;
    bool m_application_configuration_isValid;

    QList m_cloud_watch_logging_options;
    bool m_cloud_watch_logging_options_isSet;
    bool m_cloud_watch_logging_options_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIApplicationMode m_application_mode;
    bool m_application_mode_isSet;
    bool m_application_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateApplicationRequest)

#endif // OAICreateApplicationRequest_H
