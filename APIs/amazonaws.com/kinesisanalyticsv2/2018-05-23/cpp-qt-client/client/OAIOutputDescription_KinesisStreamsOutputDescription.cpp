/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputDescription_KinesisStreamsOutputDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputDescription_KinesisStreamsOutputDescription::OAIOutputDescription_KinesisStreamsOutputDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputDescription_KinesisStreamsOutputDescription::OAIOutputDescription_KinesisStreamsOutputDescription() {
    this->initializeModel();
}

OAIOutputDescription_KinesisStreamsOutputDescription::~OAIOutputDescription_KinesisStreamsOutputDescription() {}

void OAIOutputDescription_KinesisStreamsOutputDescription::initializeModel() {

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIOutputDescription_KinesisStreamsOutputDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputDescription_KinesisStreamsOutputDescription::fromJsonObject(QJsonObject json) {

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceARN")]);
    m_resource_arn_isSet = !json[QString("ResourceARN")].isNull() && m_resource_arn_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleARN")]);
    m_role_arn_isSet = !json[QString("RoleARN")].isNull() && m_role_arn_isValid;
}

QString OAIOutputDescription_KinesisStreamsOutputDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputDescription_KinesisStreamsOutputDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceARN"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleARN"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

QString OAIOutputDescription_KinesisStreamsOutputDescription::getResourceArn() const {
    return m_resource_arn;
}
void OAIOutputDescription_KinesisStreamsOutputDescription::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QString OAIOutputDescription_KinesisStreamsOutputDescription::getRoleArn() const {
    return m_role_arn;
}
void OAIOutputDescription_KinesisStreamsOutputDescription::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputDescription_KinesisStreamsOutputDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_arn_isValid && true;
}

} // namespace OpenAPI
