/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMappingParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMappingParameters::OAIMappingParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMappingParameters::OAIMappingParameters() {
    this->initializeModel();
}

OAIMappingParameters::~OAIMappingParameters() {}

void OAIMappingParameters::initializeModel() {

    m_json_mapping_parameters_isSet = false;
    m_json_mapping_parameters_isValid = false;

    m_csv_mapping_parameters_isSet = false;
    m_csv_mapping_parameters_isValid = false;
}

void OAIMappingParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMappingParameters::fromJsonObject(QJsonObject json) {

    m_json_mapping_parameters_isValid = ::OpenAPI::fromJsonValue(m_json_mapping_parameters, json[QString("JSONMappingParameters")]);
    m_json_mapping_parameters_isSet = !json[QString("JSONMappingParameters")].isNull() && m_json_mapping_parameters_isValid;

    m_csv_mapping_parameters_isValid = ::OpenAPI::fromJsonValue(m_csv_mapping_parameters, json[QString("CSVMappingParameters")]);
    m_csv_mapping_parameters_isSet = !json[QString("CSVMappingParameters")].isNull() && m_csv_mapping_parameters_isValid;
}

QString OAIMappingParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMappingParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_json_mapping_parameters.isSet()) {
        obj.insert(QString("JSONMappingParameters"), ::OpenAPI::toJsonValue(m_json_mapping_parameters));
    }
    if (m_csv_mapping_parameters.isSet()) {
        obj.insert(QString("CSVMappingParameters"), ::OpenAPI::toJsonValue(m_csv_mapping_parameters));
    }
    return obj;
}

OAIMappingParameters_JSONMappingParameters OAIMappingParameters::getJsonMappingParameters() const {
    return m_json_mapping_parameters;
}
void OAIMappingParameters::setJsonMappingParameters(const OAIMappingParameters_JSONMappingParameters &json_mapping_parameters) {
    m_json_mapping_parameters = json_mapping_parameters;
    m_json_mapping_parameters_isSet = true;
}

bool OAIMappingParameters::is_json_mapping_parameters_Set() const{
    return m_json_mapping_parameters_isSet;
}

bool OAIMappingParameters::is_json_mapping_parameters_Valid() const{
    return m_json_mapping_parameters_isValid;
}

OAIMappingParameters_CSVMappingParameters OAIMappingParameters::getCsvMappingParameters() const {
    return m_csv_mapping_parameters;
}
void OAIMappingParameters::setCsvMappingParameters(const OAIMappingParameters_CSVMappingParameters &csv_mapping_parameters) {
    m_csv_mapping_parameters = csv_mapping_parameters;
    m_csv_mapping_parameters_isSet = true;
}

bool OAIMappingParameters::is_csv_mapping_parameters_Set() const{
    return m_csv_mapping_parameters_isSet;
}

bool OAIMappingParameters::is_csv_mapping_parameters_Valid() const{
    return m_csv_mapping_parameters_isValid;
}

bool OAIMappingParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_json_mapping_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_mapping_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMappingParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
