/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationDetail.h
 *
 * Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
 */

#ifndef OAIApplicationDetail_H
#define OAIApplicationDetail_H

#include <QJsonObject>

#include "OAIApplicationDetail_ApplicationConfigurationDescription.h"
#include "OAIApplicationDetail_ApplicationMaintenanceConfigurationDescription.h"
#include "OAIApplicationMode.h"
#include "OAIApplicationStatus.h"
#include "OAIRuntimeEnvironment.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationDetail_ApplicationConfigurationDescription;
class OAIApplicationDetail_ApplicationMaintenanceConfigurationDescription;

class OAIApplicationDetail : public OAIObject {
public:
    OAIApplicationDetail();
    OAIApplicationDetail(QString json);
    ~OAIApplicationDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationArn() const;
    void setApplicationArn(const QString &application_arn);
    bool is_application_arn_Set() const;
    bool is_application_arn_Valid() const;

    QString getApplicationDescription() const;
    void setApplicationDescription(const QString &application_description);
    bool is_application_description_Set() const;
    bool is_application_description_Valid() const;

    QString getApplicationName() const;
    void setApplicationName(const QString &application_name);
    bool is_application_name_Set() const;
    bool is_application_name_Valid() const;

    OAIRuntimeEnvironment getRuntimeEnvironment() const;
    void setRuntimeEnvironment(const OAIRuntimeEnvironment &runtime_environment);
    bool is_runtime_environment_Set() const;
    bool is_runtime_environment_Valid() const;

    QString getServiceExecutionRole() const;
    void setServiceExecutionRole(const QString &service_execution_role);
    bool is_service_execution_role_Set() const;
    bool is_service_execution_role_Valid() const;

    OAIApplicationStatus getApplicationStatus() const;
    void setApplicationStatus(const OAIApplicationStatus &application_status);
    bool is_application_status_Set() const;
    bool is_application_status_Valid() const;

    qint32 getApplicationVersionId() const;
    void setApplicationVersionId(const qint32 &application_version_id);
    bool is_application_version_id_Set() const;
    bool is_application_version_id_Valid() const;

    QDateTime getCreateTimestamp() const;
    void setCreateTimestamp(const QDateTime &create_timestamp);
    bool is_create_timestamp_Set() const;
    bool is_create_timestamp_Valid() const;

    QDateTime getLastUpdateTimestamp() const;
    void setLastUpdateTimestamp(const QDateTime &last_update_timestamp);
    bool is_last_update_timestamp_Set() const;
    bool is_last_update_timestamp_Valid() const;

    OAIApplicationDetail_ApplicationConfigurationDescription getApplicationConfigurationDescription() const;
    void setApplicationConfigurationDescription(const OAIApplicationDetail_ApplicationConfigurationDescription &application_configuration_description);
    bool is_application_configuration_description_Set() const;
    bool is_application_configuration_description_Valid() const;

    QList getCloudWatchLoggingOptionDescriptions() const;
    void setCloudWatchLoggingOptionDescriptions(const QList &cloud_watch_logging_option_descriptions);
    bool is_cloud_watch_logging_option_descriptions_Set() const;
    bool is_cloud_watch_logging_option_descriptions_Valid() const;

    OAIApplicationDetail_ApplicationMaintenanceConfigurationDescription getApplicationMaintenanceConfigurationDescription() const;
    void setApplicationMaintenanceConfigurationDescription(const OAIApplicationDetail_ApplicationMaintenanceConfigurationDescription &application_maintenance_configuration_description);
    bool is_application_maintenance_configuration_description_Set() const;
    bool is_application_maintenance_configuration_description_Valid() const;

    qint32 getApplicationVersionUpdatedFrom() const;
    void setApplicationVersionUpdatedFrom(const qint32 &application_version_updated_from);
    bool is_application_version_updated_from_Set() const;
    bool is_application_version_updated_from_Valid() const;

    qint32 getApplicationVersionRolledBackFrom() const;
    void setApplicationVersionRolledBackFrom(const qint32 &application_version_rolled_back_from);
    bool is_application_version_rolled_back_from_Set() const;
    bool is_application_version_rolled_back_from_Valid() const;

    QString getConditionalToken() const;
    void setConditionalToken(const QString &conditional_token);
    bool is_conditional_token_Set() const;
    bool is_conditional_token_Valid() const;

    qint32 getApplicationVersionRolledBackTo() const;
    void setApplicationVersionRolledBackTo(const qint32 &application_version_rolled_back_to);
    bool is_application_version_rolled_back_to_Set() const;
    bool is_application_version_rolled_back_to_Valid() const;

    OAIApplicationMode getApplicationMode() const;
    void setApplicationMode(const OAIApplicationMode &application_mode);
    bool is_application_mode_Set() const;
    bool is_application_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_arn;
    bool m_application_arn_isSet;
    bool m_application_arn_isValid;

    QString m_application_description;
    bool m_application_description_isSet;
    bool m_application_description_isValid;

    QString m_application_name;
    bool m_application_name_isSet;
    bool m_application_name_isValid;

    OAIRuntimeEnvironment m_runtime_environment;
    bool m_runtime_environment_isSet;
    bool m_runtime_environment_isValid;

    QString m_service_execution_role;
    bool m_service_execution_role_isSet;
    bool m_service_execution_role_isValid;

    OAIApplicationStatus m_application_status;
    bool m_application_status_isSet;
    bool m_application_status_isValid;

    qint32 m_application_version_id;
    bool m_application_version_id_isSet;
    bool m_application_version_id_isValid;

    QDateTime m_create_timestamp;
    bool m_create_timestamp_isSet;
    bool m_create_timestamp_isValid;

    QDateTime m_last_update_timestamp;
    bool m_last_update_timestamp_isSet;
    bool m_last_update_timestamp_isValid;

    OAIApplicationDetail_ApplicationConfigurationDescription m_application_configuration_description;
    bool m_application_configuration_description_isSet;
    bool m_application_configuration_description_isValid;

    QList m_cloud_watch_logging_option_descriptions;
    bool m_cloud_watch_logging_option_descriptions_isSet;
    bool m_cloud_watch_logging_option_descriptions_isValid;

    OAIApplicationDetail_ApplicationMaintenanceConfigurationDescription m_application_maintenance_configuration_description;
    bool m_application_maintenance_configuration_description_isSet;
    bool m_application_maintenance_configuration_description_isValid;

    qint32 m_application_version_updated_from;
    bool m_application_version_updated_from_isSet;
    bool m_application_version_updated_from_isValid;

    qint32 m_application_version_rolled_back_from;
    bool m_application_version_rolled_back_from_isSet;
    bool m_application_version_rolled_back_from_isValid;

    QString m_conditional_token;
    bool m_conditional_token_isSet;
    bool m_conditional_token_isValid;

    qint32 m_application_version_rolled_back_to;
    bool m_application_version_rolled_back_to_isSet;
    bool m_application_version_rolled_back_to_isValid;

    OAIApplicationMode m_application_mode;
    bool m_application_mode_isSet;
    bool m_application_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationDetail)

#endif // OAIApplicationDetail_H
