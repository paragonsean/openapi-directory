/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApplicationMaintenanceConfigurationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApplicationMaintenanceConfigurationResponse::OAIUpdateApplicationMaintenanceConfigurationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApplicationMaintenanceConfigurationResponse::OAIUpdateApplicationMaintenanceConfigurationResponse() {
    this->initializeModel();
}

OAIUpdateApplicationMaintenanceConfigurationResponse::~OAIUpdateApplicationMaintenanceConfigurationResponse() {}

void OAIUpdateApplicationMaintenanceConfigurationResponse::initializeModel() {

    m_application_arn_isSet = false;
    m_application_arn_isValid = false;

    m_application_maintenance_configuration_description_isSet = false;
    m_application_maintenance_configuration_description_isValid = false;
}

void OAIUpdateApplicationMaintenanceConfigurationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApplicationMaintenanceConfigurationResponse::fromJsonObject(QJsonObject json) {

    m_application_arn_isValid = ::OpenAPI::fromJsonValue(m_application_arn, json[QString("ApplicationARN")]);
    m_application_arn_isSet = !json[QString("ApplicationARN")].isNull() && m_application_arn_isValid;

    m_application_maintenance_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_application_maintenance_configuration_description, json[QString("ApplicationMaintenanceConfigurationDescription")]);
    m_application_maintenance_configuration_description_isSet = !json[QString("ApplicationMaintenanceConfigurationDescription")].isNull() && m_application_maintenance_configuration_description_isValid;
}

QString OAIUpdateApplicationMaintenanceConfigurationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApplicationMaintenanceConfigurationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_arn_isSet) {
        obj.insert(QString("ApplicationARN"), ::OpenAPI::toJsonValue(m_application_arn));
    }
    if (m_application_maintenance_configuration_description.isSet()) {
        obj.insert(QString("ApplicationMaintenanceConfigurationDescription"), ::OpenAPI::toJsonValue(m_application_maintenance_configuration_description));
    }
    return obj;
}

QString OAIUpdateApplicationMaintenanceConfigurationResponse::getApplicationArn() const {
    return m_application_arn;
}
void OAIUpdateApplicationMaintenanceConfigurationResponse::setApplicationArn(const QString &application_arn) {
    m_application_arn = application_arn;
    m_application_arn_isSet = true;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::is_application_arn_Set() const{
    return m_application_arn_isSet;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::is_application_arn_Valid() const{
    return m_application_arn_isValid;
}

OAIUpdateApplicationMaintenanceConfigurationResponse_ApplicationMaintenanceConfigurationDescription OAIUpdateApplicationMaintenanceConfigurationResponse::getApplicationMaintenanceConfigurationDescription() const {
    return m_application_maintenance_configuration_description;
}
void OAIUpdateApplicationMaintenanceConfigurationResponse::setApplicationMaintenanceConfigurationDescription(const OAIUpdateApplicationMaintenanceConfigurationResponse_ApplicationMaintenanceConfigurationDescription &application_maintenance_configuration_description) {
    m_application_maintenance_configuration_description = application_maintenance_configuration_description;
    m_application_maintenance_configuration_description_isSet = true;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::is_application_maintenance_configuration_description_Set() const{
    return m_application_maintenance_configuration_description_isSet;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::is_application_maintenance_configuration_description_Valid() const{
    return m_application_maintenance_configuration_description_isValid;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_maintenance_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApplicationMaintenanceConfigurationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
