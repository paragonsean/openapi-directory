/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordFormatType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordFormatType::OAIRecordFormatType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordFormatType::OAIRecordFormatType() {
    this->initializeModel();
}

OAIRecordFormatType::~OAIRecordFormatType() {}

void OAIRecordFormatType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecordFormatType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecordFormatType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("JSON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordFormatType::JSON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CSV", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecordFormatType::CSV;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecordFormatType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecordFormatType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecordFormatType::JSON:
            val = "JSON";
            break;
        case eOAIRecordFormatType::CSV:
            val = "CSV";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecordFormatType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecordFormatType::eOAIRecordFormatType OAIRecordFormatType::getValue() const {
    return m_value;
}

void OAIRecordFormatType::setValue(const OAIRecordFormatType::eOAIRecordFormatType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecordFormatType::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecordFormatType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
