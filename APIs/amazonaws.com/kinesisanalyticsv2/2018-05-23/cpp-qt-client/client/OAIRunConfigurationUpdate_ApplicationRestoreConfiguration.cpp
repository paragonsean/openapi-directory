/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRunConfigurationUpdate_ApplicationRestoreConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::OAIRunConfigurationUpdate_ApplicationRestoreConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::OAIRunConfigurationUpdate_ApplicationRestoreConfiguration() {
    this->initializeModel();
}

OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::~OAIRunConfigurationUpdate_ApplicationRestoreConfiguration() {}

void OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::initializeModel() {

    m_application_restore_type_isSet = false;
    m_application_restore_type_isValid = false;

    m_snapshot_name_isSet = false;
    m_snapshot_name_isValid = false;
}

void OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::fromJsonObject(QJsonObject json) {

    m_application_restore_type_isValid = ::OpenAPI::fromJsonValue(m_application_restore_type, json[QString("ApplicationRestoreType")]);
    m_application_restore_type_isSet = !json[QString("ApplicationRestoreType")].isNull() && m_application_restore_type_isValid;

    m_snapshot_name_isValid = ::OpenAPI::fromJsonValue(m_snapshot_name, json[QString("SnapshotName")]);
    m_snapshot_name_isSet = !json[QString("SnapshotName")].isNull() && m_snapshot_name_isValid;
}

QString OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_application_restore_type.isSet()) {
        obj.insert(QString("ApplicationRestoreType"), ::OpenAPI::toJsonValue(m_application_restore_type));
    }
    if (m_snapshot_name_isSet) {
        obj.insert(QString("SnapshotName"), ::OpenAPI::toJsonValue(m_snapshot_name));
    }
    return obj;
}

OAIApplicationRestoreType OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::getApplicationRestoreType() const {
    return m_application_restore_type;
}
void OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::setApplicationRestoreType(const OAIApplicationRestoreType &application_restore_type) {
    m_application_restore_type = application_restore_type;
    m_application_restore_type_isSet = true;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::is_application_restore_type_Set() const{
    return m_application_restore_type_isSet;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::is_application_restore_type_Valid() const{
    return m_application_restore_type_isValid;
}

QString OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::getSnapshotName() const {
    return m_snapshot_name;
}
void OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::setSnapshotName(const QString &snapshot_name) {
    m_snapshot_name = snapshot_name;
    m_snapshot_name_isSet = true;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::is_snapshot_name_Set() const{
    return m_snapshot_name_isSet;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::is_snapshot_name_Valid() const{
    return m_snapshot_name_isValid;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_restore_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_snapshot_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRunConfigurationUpdate_ApplicationRestoreConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_restore_type_isValid && true;
}

} // namespace OpenAPI
