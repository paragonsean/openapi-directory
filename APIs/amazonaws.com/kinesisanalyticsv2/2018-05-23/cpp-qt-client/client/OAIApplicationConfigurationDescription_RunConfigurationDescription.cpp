/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationConfigurationDescription_RunConfigurationDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationConfigurationDescription_RunConfigurationDescription::OAIApplicationConfigurationDescription_RunConfigurationDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationConfigurationDescription_RunConfigurationDescription::OAIApplicationConfigurationDescription_RunConfigurationDescription() {
    this->initializeModel();
}

OAIApplicationConfigurationDescription_RunConfigurationDescription::~OAIApplicationConfigurationDescription_RunConfigurationDescription() {}

void OAIApplicationConfigurationDescription_RunConfigurationDescription::initializeModel() {

    m_application_restore_configuration_description_isSet = false;
    m_application_restore_configuration_description_isValid = false;

    m_flink_run_configuration_description_isSet = false;
    m_flink_run_configuration_description_isValid = false;
}

void OAIApplicationConfigurationDescription_RunConfigurationDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationConfigurationDescription_RunConfigurationDescription::fromJsonObject(QJsonObject json) {

    m_application_restore_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_application_restore_configuration_description, json[QString("ApplicationRestoreConfigurationDescription")]);
    m_application_restore_configuration_description_isSet = !json[QString("ApplicationRestoreConfigurationDescription")].isNull() && m_application_restore_configuration_description_isValid;

    m_flink_run_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_flink_run_configuration_description, json[QString("FlinkRunConfigurationDescription")]);
    m_flink_run_configuration_description_isSet = !json[QString("FlinkRunConfigurationDescription")].isNull() && m_flink_run_configuration_description_isValid;
}

QString OAIApplicationConfigurationDescription_RunConfigurationDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationConfigurationDescription_RunConfigurationDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_application_restore_configuration_description.isSet()) {
        obj.insert(QString("ApplicationRestoreConfigurationDescription"), ::OpenAPI::toJsonValue(m_application_restore_configuration_description));
    }
    if (m_flink_run_configuration_description.isSet()) {
        obj.insert(QString("FlinkRunConfigurationDescription"), ::OpenAPI::toJsonValue(m_flink_run_configuration_description));
    }
    return obj;
}

OAIRunConfigurationDescription_ApplicationRestoreConfigurationDescription OAIApplicationConfigurationDescription_RunConfigurationDescription::getApplicationRestoreConfigurationDescription() const {
    return m_application_restore_configuration_description;
}
void OAIApplicationConfigurationDescription_RunConfigurationDescription::setApplicationRestoreConfigurationDescription(const OAIRunConfigurationDescription_ApplicationRestoreConfigurationDescription &application_restore_configuration_description) {
    m_application_restore_configuration_description = application_restore_configuration_description;
    m_application_restore_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::is_application_restore_configuration_description_Set() const{
    return m_application_restore_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::is_application_restore_configuration_description_Valid() const{
    return m_application_restore_configuration_description_isValid;
}

OAIFlinkRunConfiguration OAIApplicationConfigurationDescription_RunConfigurationDescription::getFlinkRunConfigurationDescription() const {
    return m_flink_run_configuration_description;
}
void OAIApplicationConfigurationDescription_RunConfigurationDescription::setFlinkRunConfigurationDescription(const OAIFlinkRunConfiguration &flink_run_configuration_description) {
    m_flink_run_configuration_description = flink_run_configuration_description;
    m_flink_run_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::is_flink_run_configuration_description_Set() const{
    return m_flink_run_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::is_flink_run_configuration_description_Valid() const{
    return m_flink_run_configuration_description_isValid;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_restore_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_flink_run_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationConfigurationDescription_RunConfigurationDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
