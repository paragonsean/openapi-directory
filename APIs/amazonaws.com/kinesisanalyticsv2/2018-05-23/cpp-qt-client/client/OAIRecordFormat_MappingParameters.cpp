/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecordFormat_MappingParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecordFormat_MappingParameters::OAIRecordFormat_MappingParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecordFormat_MappingParameters::OAIRecordFormat_MappingParameters() {
    this->initializeModel();
}

OAIRecordFormat_MappingParameters::~OAIRecordFormat_MappingParameters() {}

void OAIRecordFormat_MappingParameters::initializeModel() {

    m_json_mapping_parameters_isSet = false;
    m_json_mapping_parameters_isValid = false;

    m_csv_mapping_parameters_isSet = false;
    m_csv_mapping_parameters_isValid = false;
}

void OAIRecordFormat_MappingParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecordFormat_MappingParameters::fromJsonObject(QJsonObject json) {

    m_json_mapping_parameters_isValid = ::OpenAPI::fromJsonValue(m_json_mapping_parameters, json[QString("JSONMappingParameters")]);
    m_json_mapping_parameters_isSet = !json[QString("JSONMappingParameters")].isNull() && m_json_mapping_parameters_isValid;

    m_csv_mapping_parameters_isValid = ::OpenAPI::fromJsonValue(m_csv_mapping_parameters, json[QString("CSVMappingParameters")]);
    m_csv_mapping_parameters_isSet = !json[QString("CSVMappingParameters")].isNull() && m_csv_mapping_parameters_isValid;
}

QString OAIRecordFormat_MappingParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecordFormat_MappingParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_json_mapping_parameters.isSet()) {
        obj.insert(QString("JSONMappingParameters"), ::OpenAPI::toJsonValue(m_json_mapping_parameters));
    }
    if (m_csv_mapping_parameters.isSet()) {
        obj.insert(QString("CSVMappingParameters"), ::OpenAPI::toJsonValue(m_csv_mapping_parameters));
    }
    return obj;
}

OAIMappingParameters_JSONMappingParameters OAIRecordFormat_MappingParameters::getJsonMappingParameters() const {
    return m_json_mapping_parameters;
}
void OAIRecordFormat_MappingParameters::setJsonMappingParameters(const OAIMappingParameters_JSONMappingParameters &json_mapping_parameters) {
    m_json_mapping_parameters = json_mapping_parameters;
    m_json_mapping_parameters_isSet = true;
}

bool OAIRecordFormat_MappingParameters::is_json_mapping_parameters_Set() const{
    return m_json_mapping_parameters_isSet;
}

bool OAIRecordFormat_MappingParameters::is_json_mapping_parameters_Valid() const{
    return m_json_mapping_parameters_isValid;
}

OAIMappingParameters_CSVMappingParameters OAIRecordFormat_MappingParameters::getCsvMappingParameters() const {
    return m_csv_mapping_parameters;
}
void OAIRecordFormat_MappingParameters::setCsvMappingParameters(const OAIMappingParameters_CSVMappingParameters &csv_mapping_parameters) {
    m_csv_mapping_parameters = csv_mapping_parameters;
    m_csv_mapping_parameters_isSet = true;
}

bool OAIRecordFormat_MappingParameters::is_csv_mapping_parameters_Set() const{
    return m_csv_mapping_parameters_isSet;
}

bool OAIRecordFormat_MappingParameters::is_csv_mapping_parameters_Valid() const{
    return m_csv_mapping_parameters_isValid;
}

bool OAIRecordFormat_MappingParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_json_mapping_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_csv_mapping_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecordFormat_MappingParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
