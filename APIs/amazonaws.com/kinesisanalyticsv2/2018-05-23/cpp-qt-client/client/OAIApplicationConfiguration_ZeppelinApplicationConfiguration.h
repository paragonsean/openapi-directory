/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationConfiguration_ZeppelinApplicationConfiguration.h
 *
 * 
 */

#ifndef OAIApplicationConfiguration_ZeppelinApplicationConfiguration_H
#define OAIApplicationConfiguration_ZeppelinApplicationConfiguration_H

#include <QJsonObject>

#include "OAIZeppelinApplicationConfiguration_CatalogConfiguration.h"
#include "OAIZeppelinApplicationConfiguration_DeployAsApplicationConfiguration.h"
#include "OAIZeppelinApplicationConfiguration_MonitoringConfiguration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIZeppelinApplicationConfiguration_MonitoringConfiguration;
class OAIZeppelinApplicationConfiguration_CatalogConfiguration;
class OAIZeppelinApplicationConfiguration_DeployAsApplicationConfiguration;

class OAIApplicationConfiguration_ZeppelinApplicationConfiguration : public OAIObject {
public:
    OAIApplicationConfiguration_ZeppelinApplicationConfiguration();
    OAIApplicationConfiguration_ZeppelinApplicationConfiguration(QString json);
    ~OAIApplicationConfiguration_ZeppelinApplicationConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIZeppelinApplicationConfiguration_MonitoringConfiguration getMonitoringConfiguration() const;
    void setMonitoringConfiguration(const OAIZeppelinApplicationConfiguration_MonitoringConfiguration &monitoring_configuration);
    bool is_monitoring_configuration_Set() const;
    bool is_monitoring_configuration_Valid() const;

    OAIZeppelinApplicationConfiguration_CatalogConfiguration getCatalogConfiguration() const;
    void setCatalogConfiguration(const OAIZeppelinApplicationConfiguration_CatalogConfiguration &catalog_configuration);
    bool is_catalog_configuration_Set() const;
    bool is_catalog_configuration_Valid() const;

    OAIZeppelinApplicationConfiguration_DeployAsApplicationConfiguration getDeployAsApplicationConfiguration() const;
    void setDeployAsApplicationConfiguration(const OAIZeppelinApplicationConfiguration_DeployAsApplicationConfiguration &deploy_as_application_configuration);
    bool is_deploy_as_application_configuration_Set() const;
    bool is_deploy_as_application_configuration_Valid() const;

    QList getCustomArtifactsConfiguration() const;
    void setCustomArtifactsConfiguration(const QList &custom_artifacts_configuration);
    bool is_custom_artifacts_configuration_Set() const;
    bool is_custom_artifacts_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIZeppelinApplicationConfiguration_MonitoringConfiguration m_monitoring_configuration;
    bool m_monitoring_configuration_isSet;
    bool m_monitoring_configuration_isValid;

    OAIZeppelinApplicationConfiguration_CatalogConfiguration m_catalog_configuration;
    bool m_catalog_configuration_isSet;
    bool m_catalog_configuration_isValid;

    OAIZeppelinApplicationConfiguration_DeployAsApplicationConfiguration m_deploy_as_application_configuration;
    bool m_deploy_as_application_configuration_isSet;
    bool m_deploy_as_application_configuration_isValid;

    QList m_custom_artifacts_configuration;
    bool m_custom_artifacts_configuration_isSet;
    bool m_custom_artifacts_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationConfiguration_ZeppelinApplicationConfiguration)

#endif // OAIApplicationConfiguration_ZeppelinApplicationConfiguration_H
