/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtifactType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtifactType::OAIArtifactType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtifactType::OAIArtifactType() {
    this->initializeModel();
}

OAIArtifactType::~OAIArtifactType() {}

void OAIArtifactType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIArtifactType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIArtifactType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UDF", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtifactType::UDF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEPENDENCY_JAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtifactType::DEPENDENCY_JAR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIArtifactType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIArtifactType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIArtifactType::UDF:
            val = "UDF";
            break;
        case eOAIArtifactType::DEPENDENCY_JAR:
            val = "DEPENDENCY_JAR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIArtifactType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIArtifactType::eOAIArtifactType OAIArtifactType::getValue() const {
    return m_value;
}

void OAIArtifactType::setValue(const OAIArtifactType::eOAIArtifactType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIArtifactType::isSet() const {
    
    return m_value_isSet;
}

bool OAIArtifactType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
