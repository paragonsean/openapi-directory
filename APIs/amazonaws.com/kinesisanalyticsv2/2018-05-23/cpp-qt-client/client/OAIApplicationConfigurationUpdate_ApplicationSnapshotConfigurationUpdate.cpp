/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate() {
    this->initializeModel();
}

OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::~OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate() {}

void OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::initializeModel() {

    m_snapshots_enabled_update_isSet = false;
    m_snapshots_enabled_update_isValid = false;
}

void OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::fromJsonObject(QJsonObject json) {

    m_snapshots_enabled_update_isValid = ::OpenAPI::fromJsonValue(m_snapshots_enabled_update, json[QString("SnapshotsEnabledUpdate")]);
    m_snapshots_enabled_update_isSet = !json[QString("SnapshotsEnabledUpdate")].isNull() && m_snapshots_enabled_update_isValid;
}

QString OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_snapshots_enabled_update_isSet) {
        obj.insert(QString("SnapshotsEnabledUpdate"), ::OpenAPI::toJsonValue(m_snapshots_enabled_update));
    }
    return obj;
}

bool OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::getSnapshotsEnabledUpdate() const {
    return m_snapshots_enabled_update;
}
void OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::setSnapshotsEnabledUpdate(const bool &snapshots_enabled_update) {
    m_snapshots_enabled_update = snapshots_enabled_update;
    m_snapshots_enabled_update_isSet = true;
}

bool OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::is_snapshots_enabled_update_Set() const{
    return m_snapshots_enabled_update_isSet;
}

bool OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::is_snapshots_enabled_update_Valid() const{
    return m_snapshots_enabled_update_isValid;
}

bool OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snapshots_enabled_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationConfigurationUpdate_ApplicationSnapshotConfigurationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_snapshots_enabled_update_isValid && true;
}

} // namespace OpenAPI
