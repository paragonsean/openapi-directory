/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddApplicationReferenceDataSourceResponse.h
 *
 * 
 */

#ifndef OAIAddApplicationReferenceDataSourceResponse_H
#define OAIAddApplicationReferenceDataSourceResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAddApplicationReferenceDataSourceResponse : public OAIObject {
public:
    OAIAddApplicationReferenceDataSourceResponse();
    OAIAddApplicationReferenceDataSourceResponse(QString json);
    ~OAIAddApplicationReferenceDataSourceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationArn() const;
    void setApplicationArn(const QString &application_arn);
    bool is_application_arn_Set() const;
    bool is_application_arn_Valid() const;

    qint32 getApplicationVersionId() const;
    void setApplicationVersionId(const qint32 &application_version_id);
    bool is_application_version_id_Set() const;
    bool is_application_version_id_Valid() const;

    QList getReferenceDataSourceDescriptions() const;
    void setReferenceDataSourceDescriptions(const QList &reference_data_source_descriptions);
    bool is_reference_data_source_descriptions_Set() const;
    bool is_reference_data_source_descriptions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_arn;
    bool m_application_arn_isSet;
    bool m_application_arn_isValid;

    qint32 m_application_version_id;
    bool m_application_version_id_isSet;
    bool m_application_version_id_isValid;

    QList m_reference_data_source_descriptions;
    bool m_reference_data_source_descriptions_isSet;
    bool m_reference_data_source_descriptions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddApplicationReferenceDataSourceResponse)

#endif // OAIAddApplicationReferenceDataSourceResponse_H
