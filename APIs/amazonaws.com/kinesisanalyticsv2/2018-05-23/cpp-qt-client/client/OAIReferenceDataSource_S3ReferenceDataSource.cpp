/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReferenceDataSource_S3ReferenceDataSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReferenceDataSource_S3ReferenceDataSource::OAIReferenceDataSource_S3ReferenceDataSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReferenceDataSource_S3ReferenceDataSource::OAIReferenceDataSource_S3ReferenceDataSource() {
    this->initializeModel();
}

OAIReferenceDataSource_S3ReferenceDataSource::~OAIReferenceDataSource_S3ReferenceDataSource() {}

void OAIReferenceDataSource_S3ReferenceDataSource::initializeModel() {

    m_bucket_arn_isSet = false;
    m_bucket_arn_isValid = false;

    m_file_key_isSet = false;
    m_file_key_isValid = false;
}

void OAIReferenceDataSource_S3ReferenceDataSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReferenceDataSource_S3ReferenceDataSource::fromJsonObject(QJsonObject json) {

    m_bucket_arn_isValid = ::OpenAPI::fromJsonValue(m_bucket_arn, json[QString("BucketARN")]);
    m_bucket_arn_isSet = !json[QString("BucketARN")].isNull() && m_bucket_arn_isValid;

    m_file_key_isValid = ::OpenAPI::fromJsonValue(m_file_key, json[QString("FileKey")]);
    m_file_key_isSet = !json[QString("FileKey")].isNull() && m_file_key_isValid;
}

QString OAIReferenceDataSource_S3ReferenceDataSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReferenceDataSource_S3ReferenceDataSource::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_arn_isSet) {
        obj.insert(QString("BucketARN"), ::OpenAPI::toJsonValue(m_bucket_arn));
    }
    if (m_file_key_isSet) {
        obj.insert(QString("FileKey"), ::OpenAPI::toJsonValue(m_file_key));
    }
    return obj;
}

QString OAIReferenceDataSource_S3ReferenceDataSource::getBucketArn() const {
    return m_bucket_arn;
}
void OAIReferenceDataSource_S3ReferenceDataSource::setBucketArn(const QString &bucket_arn) {
    m_bucket_arn = bucket_arn;
    m_bucket_arn_isSet = true;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::is_bucket_arn_Set() const{
    return m_bucket_arn_isSet;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::is_bucket_arn_Valid() const{
    return m_bucket_arn_isValid;
}

QString OAIReferenceDataSource_S3ReferenceDataSource::getFileKey() const {
    return m_file_key;
}
void OAIReferenceDataSource_S3ReferenceDataSource::setFileKey(const QString &file_key) {
    m_file_key = file_key;
    m_file_key_isSet = true;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::is_file_key_Set() const{
    return m_file_key_isSet;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::is_file_key_Valid() const{
    return m_file_key_isValid;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReferenceDataSource_S3ReferenceDataSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
