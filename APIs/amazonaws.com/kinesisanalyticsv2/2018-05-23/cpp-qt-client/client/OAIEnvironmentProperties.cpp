/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentProperties::OAIEnvironmentProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentProperties::OAIEnvironmentProperties() {
    this->initializeModel();
}

OAIEnvironmentProperties::~OAIEnvironmentProperties() {}

void OAIEnvironmentProperties::initializeModel() {

    m_property_groups_isSet = false;
    m_property_groups_isValid = false;
}

void OAIEnvironmentProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentProperties::fromJsonObject(QJsonObject json) {

    m_property_groups_isValid = ::OpenAPI::fromJsonValue(m_property_groups, json[QString("PropertyGroups")]);
    m_property_groups_isSet = !json[QString("PropertyGroups")].isNull() && m_property_groups_isValid;
}

QString OAIEnvironmentProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_property_groups.isSet()) {
        obj.insert(QString("PropertyGroups"), ::OpenAPI::toJsonValue(m_property_groups));
    }
    return obj;
}

QList OAIEnvironmentProperties::getPropertyGroups() const {
    return m_property_groups;
}
void OAIEnvironmentProperties::setPropertyGroups(const QList &property_groups) {
    m_property_groups = property_groups;
    m_property_groups_isSet = true;
}

bool OAIEnvironmentProperties::is_property_groups_Set() const{
    return m_property_groups_isSet;
}

bool OAIEnvironmentProperties::is_property_groups_Valid() const{
    return m_property_groups_isValid;
}

bool OAIEnvironmentProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_property_groups_isValid && true;
}

} // namespace OpenAPI
