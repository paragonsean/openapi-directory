/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceDataSourceUpdate.h
 *
 * When you update a reference data source configuration for a SQL-based Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.
 */

#ifndef OAIReferenceDataSourceUpdate_H
#define OAIReferenceDataSourceUpdate_H

#include <QJsonObject>

#include "OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate.h"
#include "OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate;
class OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate;

class OAIReferenceDataSourceUpdate : public OAIObject {
public:
    OAIReferenceDataSourceUpdate();
    OAIReferenceDataSourceUpdate(QString json);
    ~OAIReferenceDataSourceUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getTableNameUpdate() const;
    void setTableNameUpdate(const QString &table_name_update);
    bool is_table_name_update_Set() const;
    bool is_table_name_update_Valid() const;

    OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate getS3ReferenceDataSourceUpdate() const;
    void setS3ReferenceDataSourceUpdate(const OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate &s3_reference_data_source_update);
    bool is_s3_reference_data_source_update_Set() const;
    bool is_s3_reference_data_source_update_Valid() const;

    OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate getReferenceSchemaUpdate() const;
    void setReferenceSchemaUpdate(const OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate &reference_schema_update);
    bool is_reference_schema_update_Set() const;
    bool is_reference_schema_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_table_name_update;
    bool m_table_name_update_isSet;
    bool m_table_name_update_isValid;

    OAIReferenceDataSourceUpdate_S3ReferenceDataSourceUpdate m_s3_reference_data_source_update;
    bool m_s3_reference_data_source_update_isSet;
    bool m_s3_reference_data_source_update_isValid;

    OAIReferenceDataSourceUpdate_ReferenceSchemaUpdate m_reference_schema_update;
    bool m_reference_schema_update_isSet;
    bool m_reference_schema_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceDataSourceUpdate)

#endif // OAIReferenceDataSourceUpdate_H
