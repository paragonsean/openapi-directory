/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceDataSourceDescription.h
 *
 * For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.
 */

#ifndef OAIReferenceDataSourceDescription_H
#define OAIReferenceDataSourceDescription_H

#include <QJsonObject>

#include "OAIReferenceDataSourceDescription_S3ReferenceDataSourceDescription.h"
#include "OAIReferenceDataSource_ReferenceSchema.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceDataSourceDescription_S3ReferenceDataSourceDescription;
class OAIReferenceDataSource_ReferenceSchema;

class OAIReferenceDataSourceDescription : public OAIObject {
public:
    OAIReferenceDataSourceDescription();
    OAIReferenceDataSourceDescription(QString json);
    ~OAIReferenceDataSourceDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    OAIReferenceDataSourceDescription_S3ReferenceDataSourceDescription getS3ReferenceDataSourceDescription() const;
    void setS3ReferenceDataSourceDescription(const OAIReferenceDataSourceDescription_S3ReferenceDataSourceDescription &s3_reference_data_source_description);
    bool is_s3_reference_data_source_description_Set() const;
    bool is_s3_reference_data_source_description_Valid() const;

    OAIReferenceDataSource_ReferenceSchema getReferenceSchema() const;
    void setReferenceSchema(const OAIReferenceDataSource_ReferenceSchema &reference_schema);
    bool is_reference_schema_Set() const;
    bool is_reference_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    OAIReferenceDataSourceDescription_S3ReferenceDataSourceDescription m_s3_reference_data_source_description;
    bool m_s3_reference_data_source_description_isSet;
    bool m_s3_reference_data_source_description_isValid;

    OAIReferenceDataSource_ReferenceSchema m_reference_schema;
    bool m_reference_schema_isSet;
    bool m_reference_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceDataSourceDescription)

#endif // OAIReferenceDataSourceDescription_H
