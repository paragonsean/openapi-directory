/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscoverInputSchemaRequest_S3Configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscoverInputSchemaRequest_S3Configuration::OAIDiscoverInputSchemaRequest_S3Configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscoverInputSchemaRequest_S3Configuration::OAIDiscoverInputSchemaRequest_S3Configuration() {
    this->initializeModel();
}

OAIDiscoverInputSchemaRequest_S3Configuration::~OAIDiscoverInputSchemaRequest_S3Configuration() {}

void OAIDiscoverInputSchemaRequest_S3Configuration::initializeModel() {

    m_bucket_arn_isSet = false;
    m_bucket_arn_isValid = false;

    m_file_key_isSet = false;
    m_file_key_isValid = false;
}

void OAIDiscoverInputSchemaRequest_S3Configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscoverInputSchemaRequest_S3Configuration::fromJsonObject(QJsonObject json) {

    m_bucket_arn_isValid = ::OpenAPI::fromJsonValue(m_bucket_arn, json[QString("BucketARN")]);
    m_bucket_arn_isSet = !json[QString("BucketARN")].isNull() && m_bucket_arn_isValid;

    m_file_key_isValid = ::OpenAPI::fromJsonValue(m_file_key, json[QString("FileKey")]);
    m_file_key_isSet = !json[QString("FileKey")].isNull() && m_file_key_isValid;
}

QString OAIDiscoverInputSchemaRequest_S3Configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscoverInputSchemaRequest_S3Configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_arn_isSet) {
        obj.insert(QString("BucketARN"), ::OpenAPI::toJsonValue(m_bucket_arn));
    }
    if (m_file_key_isSet) {
        obj.insert(QString("FileKey"), ::OpenAPI::toJsonValue(m_file_key));
    }
    return obj;
}

QString OAIDiscoverInputSchemaRequest_S3Configuration::getBucketArn() const {
    return m_bucket_arn;
}
void OAIDiscoverInputSchemaRequest_S3Configuration::setBucketArn(const QString &bucket_arn) {
    m_bucket_arn = bucket_arn;
    m_bucket_arn_isSet = true;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::is_bucket_arn_Set() const{
    return m_bucket_arn_isSet;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::is_bucket_arn_Valid() const{
    return m_bucket_arn_isValid;
}

QString OAIDiscoverInputSchemaRequest_S3Configuration::getFileKey() const {
    return m_file_key;
}
void OAIDiscoverInputSchemaRequest_S3Configuration::setFileKey(const QString &file_key) {
    m_file_key = file_key;
    m_file_key_isSet = true;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::is_file_key_Set() const{
    return m_file_key_isSet;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::is_file_key_Valid() const{
    return m_file_key_isValid;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscoverInputSchemaRequest_S3Configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_arn_isValid && m_file_key_isValid && true;
}

} // namespace OpenAPI
