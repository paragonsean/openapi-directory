/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListApplicationVersionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListApplicationVersionsResponse::OAIListApplicationVersionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListApplicationVersionsResponse::OAIListApplicationVersionsResponse() {
    this->initializeModel();
}

OAIListApplicationVersionsResponse::~OAIListApplicationVersionsResponse() {}

void OAIListApplicationVersionsResponse::initializeModel() {

    m_application_version_summaries_isSet = false;
    m_application_version_summaries_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListApplicationVersionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListApplicationVersionsResponse::fromJsonObject(QJsonObject json) {

    m_application_version_summaries_isValid = ::OpenAPI::fromJsonValue(m_application_version_summaries, json[QString("ApplicationVersionSummaries")]);
    m_application_version_summaries_isSet = !json[QString("ApplicationVersionSummaries")].isNull() && m_application_version_summaries_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListApplicationVersionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListApplicationVersionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_version_summaries.isSet()) {
        obj.insert(QString("ApplicationVersionSummaries"), ::OpenAPI::toJsonValue(m_application_version_summaries));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListApplicationVersionsResponse::getApplicationVersionSummaries() const {
    return m_application_version_summaries;
}
void OAIListApplicationVersionsResponse::setApplicationVersionSummaries(const QList &application_version_summaries) {
    m_application_version_summaries = application_version_summaries;
    m_application_version_summaries_isSet = true;
}

bool OAIListApplicationVersionsResponse::is_application_version_summaries_Set() const{
    return m_application_version_summaries_isSet;
}

bool OAIListApplicationVersionsResponse::is_application_version_summaries_Valid() const{
    return m_application_version_summaries_isValid;
}

QString OAIListApplicationVersionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListApplicationVersionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListApplicationVersionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListApplicationVersionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListApplicationVersionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_version_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListApplicationVersionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
