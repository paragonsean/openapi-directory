/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate() {
    this->initializeModel();
}

OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::~OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate() {}

void OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::initializeModel() {

    m_glue_data_catalog_configuration_update_isSet = false;
    m_glue_data_catalog_configuration_update_isValid = false;
}

void OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::fromJsonObject(QJsonObject json) {

    m_glue_data_catalog_configuration_update_isValid = ::OpenAPI::fromJsonValue(m_glue_data_catalog_configuration_update, json[QString("GlueDataCatalogConfigurationUpdate")]);
    m_glue_data_catalog_configuration_update_isSet = !json[QString("GlueDataCatalogConfigurationUpdate")].isNull() && m_glue_data_catalog_configuration_update_isValid;
}

QString OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_glue_data_catalog_configuration_update.isSet()) {
        obj.insert(QString("GlueDataCatalogConfigurationUpdate"), ::OpenAPI::toJsonValue(m_glue_data_catalog_configuration_update));
    }
    return obj;
}

OAICatalogConfigurationUpdate_GlueDataCatalogConfigurationUpdate OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::getGlueDataCatalogConfigurationUpdate() const {
    return m_glue_data_catalog_configuration_update;
}
void OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::setGlueDataCatalogConfigurationUpdate(const OAICatalogConfigurationUpdate_GlueDataCatalogConfigurationUpdate &glue_data_catalog_configuration_update) {
    m_glue_data_catalog_configuration_update = glue_data_catalog_configuration_update;
    m_glue_data_catalog_configuration_update_isSet = true;
}

bool OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::is_glue_data_catalog_configuration_update_Set() const{
    return m_glue_data_catalog_configuration_update_isSet;
}

bool OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::is_glue_data_catalog_configuration_update_Valid() const{
    return m_glue_data_catalog_configuration_update_isValid;
}

bool OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_glue_data_catalog_configuration_update.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIZeppelinApplicationConfigurationUpdate_CatalogConfigurationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_glue_data_catalog_configuration_update_isValid && true;
}

} // namespace OpenAPI
