/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationSnapshotConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationSnapshotConfiguration::OAIApplicationSnapshotConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationSnapshotConfiguration::OAIApplicationSnapshotConfiguration() {
    this->initializeModel();
}

OAIApplicationSnapshotConfiguration::~OAIApplicationSnapshotConfiguration() {}

void OAIApplicationSnapshotConfiguration::initializeModel() {

    m_snapshots_enabled_isSet = false;
    m_snapshots_enabled_isValid = false;
}

void OAIApplicationSnapshotConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationSnapshotConfiguration::fromJsonObject(QJsonObject json) {

    m_snapshots_enabled_isValid = ::OpenAPI::fromJsonValue(m_snapshots_enabled, json[QString("SnapshotsEnabled")]);
    m_snapshots_enabled_isSet = !json[QString("SnapshotsEnabled")].isNull() && m_snapshots_enabled_isValid;
}

QString OAIApplicationSnapshotConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationSnapshotConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_snapshots_enabled_isSet) {
        obj.insert(QString("SnapshotsEnabled"), ::OpenAPI::toJsonValue(m_snapshots_enabled));
    }
    return obj;
}

bool OAIApplicationSnapshotConfiguration::getSnapshotsEnabled() const {
    return m_snapshots_enabled;
}
void OAIApplicationSnapshotConfiguration::setSnapshotsEnabled(const bool &snapshots_enabled) {
    m_snapshots_enabled = snapshots_enabled;
    m_snapshots_enabled_isSet = true;
}

bool OAIApplicationSnapshotConfiguration::is_snapshots_enabled_Set() const{
    return m_snapshots_enabled_isSet;
}

bool OAIApplicationSnapshotConfiguration::is_snapshots_enabled_Valid() const{
    return m_snapshots_enabled_isValid;
}

bool OAIApplicationSnapshotConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_snapshots_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationSnapshotConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_snapshots_enabled_isValid && true;
}

} // namespace OpenAPI
