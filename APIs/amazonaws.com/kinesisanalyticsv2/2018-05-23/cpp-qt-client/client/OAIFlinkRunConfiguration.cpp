/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlinkRunConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlinkRunConfiguration::OAIFlinkRunConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlinkRunConfiguration::OAIFlinkRunConfiguration() {
    this->initializeModel();
}

OAIFlinkRunConfiguration::~OAIFlinkRunConfiguration() {}

void OAIFlinkRunConfiguration::initializeModel() {

    m_allow_non_restored_state_isSet = false;
    m_allow_non_restored_state_isValid = false;
}

void OAIFlinkRunConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlinkRunConfiguration::fromJsonObject(QJsonObject json) {

    m_allow_non_restored_state_isValid = ::OpenAPI::fromJsonValue(m_allow_non_restored_state, json[QString("AllowNonRestoredState")]);
    m_allow_non_restored_state_isSet = !json[QString("AllowNonRestoredState")].isNull() && m_allow_non_restored_state_isValid;
}

QString OAIFlinkRunConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlinkRunConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_non_restored_state_isSet) {
        obj.insert(QString("AllowNonRestoredState"), ::OpenAPI::toJsonValue(m_allow_non_restored_state));
    }
    return obj;
}

bool OAIFlinkRunConfiguration::getAllowNonRestoredState() const {
    return m_allow_non_restored_state;
}
void OAIFlinkRunConfiguration::setAllowNonRestoredState(const bool &allow_non_restored_state) {
    m_allow_non_restored_state = allow_non_restored_state;
    m_allow_non_restored_state_isSet = true;
}

bool OAIFlinkRunConfiguration::is_allow_non_restored_state_Set() const{
    return m_allow_non_restored_state_isSet;
}

bool OAIFlinkRunConfiguration::is_allow_non_restored_state_Valid() const{
    return m_allow_non_restored_state_isValid;
}

bool OAIFlinkRunConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_non_restored_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlinkRunConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
