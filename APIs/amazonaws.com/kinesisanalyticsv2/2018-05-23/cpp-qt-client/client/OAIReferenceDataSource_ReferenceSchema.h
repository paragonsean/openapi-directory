/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceDataSource_ReferenceSchema.h
 *
 * 
 */

#ifndef OAIReferenceDataSource_ReferenceSchema_H
#define OAIReferenceDataSource_ReferenceSchema_H

#include <QJsonObject>

#include "OAISourceSchema_RecordFormat.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceSchema_RecordFormat;

class OAIReferenceDataSource_ReferenceSchema : public OAIObject {
public:
    OAIReferenceDataSource_ReferenceSchema();
    OAIReferenceDataSource_ReferenceSchema(QString json);
    ~OAIReferenceDataSource_ReferenceSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISourceSchema_RecordFormat getRecordFormat() const;
    void setRecordFormat(const OAISourceSchema_RecordFormat &record_format);
    bool is_record_format_Set() const;
    bool is_record_format_Valid() const;

    QString getRecordEncoding() const;
    void setRecordEncoding(const QString &record_encoding);
    bool is_record_encoding_Set() const;
    bool is_record_encoding_Valid() const;

    QList getRecordColumns() const;
    void setRecordColumns(const QList &record_columns);
    bool is_record_columns_Set() const;
    bool is_record_columns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISourceSchema_RecordFormat m_record_format;
    bool m_record_format_isSet;
    bool m_record_format_isValid;

    QString m_record_encoding;
    bool m_record_encoding_isSet;
    bool m_record_encoding_isValid;

    QList m_record_columns;
    bool m_record_columns_isSet;
    bool m_record_columns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceDataSource_ReferenceSchema)

#endif // OAIReferenceDataSource_ReferenceSchema_H
