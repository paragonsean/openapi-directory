/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscoverInputSchemaResponse.h
 *
 * 
 */

#ifndef OAIDiscoverInputSchemaResponse_H
#define OAIDiscoverInputSchemaResponse_H

#include <QJsonObject>

#include "OAIDiscoverInputSchemaResponse_InputSchema.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiscoverInputSchemaResponse_InputSchema;

class OAIDiscoverInputSchemaResponse : public OAIObject {
public:
    OAIDiscoverInputSchemaResponse();
    OAIDiscoverInputSchemaResponse(QString json);
    ~OAIDiscoverInputSchemaResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiscoverInputSchemaResponse_InputSchema getInputSchema() const;
    void setInputSchema(const OAIDiscoverInputSchemaResponse_InputSchema &input_schema);
    bool is_input_schema_Set() const;
    bool is_input_schema_Valid() const;

    QList getParsedInputRecords() const;
    void setParsedInputRecords(const QList &parsed_input_records);
    bool is_parsed_input_records_Set() const;
    bool is_parsed_input_records_Valid() const;

    QList getProcessedInputRecords() const;
    void setProcessedInputRecords(const QList &processed_input_records);
    bool is_processed_input_records_Set() const;
    bool is_processed_input_records_Valid() const;

    QList getRawInputRecords() const;
    void setRawInputRecords(const QList &raw_input_records);
    bool is_raw_input_records_Set() const;
    bool is_raw_input_records_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiscoverInputSchemaResponse_InputSchema m_input_schema;
    bool m_input_schema_isSet;
    bool m_input_schema_isValid;

    QList m_parsed_input_records;
    bool m_parsed_input_records_isSet;
    bool m_parsed_input_records_isValid;

    QList m_processed_input_records;
    bool m_processed_input_records_isSet;
    bool m_processed_input_records_isValid;

    QList m_raw_input_records;
    bool m_raw_input_records_isSet;
    bool m_raw_input_records_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscoverInputSchemaResponse)

#endif // OAIDiscoverInputSchemaResponse_H
