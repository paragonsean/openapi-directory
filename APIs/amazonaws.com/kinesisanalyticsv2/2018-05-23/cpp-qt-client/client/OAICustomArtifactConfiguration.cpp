/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomArtifactConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomArtifactConfiguration::OAICustomArtifactConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomArtifactConfiguration::OAICustomArtifactConfiguration() {
    this->initializeModel();
}

OAICustomArtifactConfiguration::~OAICustomArtifactConfiguration() {}

void OAICustomArtifactConfiguration::initializeModel() {

    m_artifact_type_isSet = false;
    m_artifact_type_isValid = false;

    m_s3_content_location_isSet = false;
    m_s3_content_location_isValid = false;

    m_maven_reference_isSet = false;
    m_maven_reference_isValid = false;
}

void OAICustomArtifactConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomArtifactConfiguration::fromJsonObject(QJsonObject json) {

    m_artifact_type_isValid = ::OpenAPI::fromJsonValue(m_artifact_type, json[QString("ArtifactType")]);
    m_artifact_type_isSet = !json[QString("ArtifactType")].isNull() && m_artifact_type_isValid;

    m_s3_content_location_isValid = ::OpenAPI::fromJsonValue(m_s3_content_location, json[QString("S3ContentLocation")]);
    m_s3_content_location_isSet = !json[QString("S3ContentLocation")].isNull() && m_s3_content_location_isValid;

    m_maven_reference_isValid = ::OpenAPI::fromJsonValue(m_maven_reference, json[QString("MavenReference")]);
    m_maven_reference_isSet = !json[QString("MavenReference")].isNull() && m_maven_reference_isValid;
}

QString OAICustomArtifactConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomArtifactConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_type.isSet()) {
        obj.insert(QString("ArtifactType"), ::OpenAPI::toJsonValue(m_artifact_type));
    }
    if (m_s3_content_location.isSet()) {
        obj.insert(QString("S3ContentLocation"), ::OpenAPI::toJsonValue(m_s3_content_location));
    }
    if (m_maven_reference.isSet()) {
        obj.insert(QString("MavenReference"), ::OpenAPI::toJsonValue(m_maven_reference));
    }
    return obj;
}

OAIArtifactType OAICustomArtifactConfiguration::getArtifactType() const {
    return m_artifact_type;
}
void OAICustomArtifactConfiguration::setArtifactType(const OAIArtifactType &artifact_type) {
    m_artifact_type = artifact_type;
    m_artifact_type_isSet = true;
}

bool OAICustomArtifactConfiguration::is_artifact_type_Set() const{
    return m_artifact_type_isSet;
}

bool OAICustomArtifactConfiguration::is_artifact_type_Valid() const{
    return m_artifact_type_isValid;
}

OAIS3ContentLocation OAICustomArtifactConfiguration::getS3ContentLocation() const {
    return m_s3_content_location;
}
void OAICustomArtifactConfiguration::setS3ContentLocation(const OAIS3ContentLocation &s3_content_location) {
    m_s3_content_location = s3_content_location;
    m_s3_content_location_isSet = true;
}

bool OAICustomArtifactConfiguration::is_s3_content_location_Set() const{
    return m_s3_content_location_isSet;
}

bool OAICustomArtifactConfiguration::is_s3_content_location_Valid() const{
    return m_s3_content_location_isValid;
}

OAICustomArtifactConfiguration_MavenReference OAICustomArtifactConfiguration::getMavenReference() const {
    return m_maven_reference;
}
void OAICustomArtifactConfiguration::setMavenReference(const OAICustomArtifactConfiguration_MavenReference &maven_reference) {
    m_maven_reference = maven_reference;
    m_maven_reference_isSet = true;
}

bool OAICustomArtifactConfiguration::is_maven_reference_Set() const{
    return m_maven_reference_isSet;
}

bool OAICustomArtifactConfiguration::is_maven_reference_Valid() const{
    return m_maven_reference_isValid;
}

bool OAICustomArtifactConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_content_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_maven_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomArtifactConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_artifact_type_isValid && true;
}

} // namespace OpenAPI
