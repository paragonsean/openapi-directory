/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription() {
    this->initializeModel();
}

OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::~OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription() {}

void OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::initializeModel() {

    m_glue_data_catalog_configuration_description_isSet = false;
    m_glue_data_catalog_configuration_description_isValid = false;
}

void OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::fromJsonObject(QJsonObject json) {

    m_glue_data_catalog_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_glue_data_catalog_configuration_description, json[QString("GlueDataCatalogConfigurationDescription")]);
    m_glue_data_catalog_configuration_description_isSet = !json[QString("GlueDataCatalogConfigurationDescription")].isNull() && m_glue_data_catalog_configuration_description_isValid;
}

QString OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_glue_data_catalog_configuration_description.isSet()) {
        obj.insert(QString("GlueDataCatalogConfigurationDescription"), ::OpenAPI::toJsonValue(m_glue_data_catalog_configuration_description));
    }
    return obj;
}

OAICatalogConfigurationDescription_GlueDataCatalogConfigurationDescription OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::getGlueDataCatalogConfigurationDescription() const {
    return m_glue_data_catalog_configuration_description;
}
void OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::setGlueDataCatalogConfigurationDescription(const OAICatalogConfigurationDescription_GlueDataCatalogConfigurationDescription &glue_data_catalog_configuration_description) {
    m_glue_data_catalog_configuration_description = glue_data_catalog_configuration_description;
    m_glue_data_catalog_configuration_description_isSet = true;
}

bool OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::is_glue_data_catalog_configuration_description_Set() const{
    return m_glue_data_catalog_configuration_description_isSet;
}

bool OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::is_glue_data_catalog_configuration_description_Valid() const{
    return m_glue_data_catalog_configuration_description_isValid;
}

bool OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_glue_data_catalog_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_glue_data_catalog_configuration_description_isValid && true;
}

} // namespace OpenAPI
