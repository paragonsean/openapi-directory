/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentPropertyDescriptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentPropertyDescriptions::OAIEnvironmentPropertyDescriptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentPropertyDescriptions::OAIEnvironmentPropertyDescriptions() {
    this->initializeModel();
}

OAIEnvironmentPropertyDescriptions::~OAIEnvironmentPropertyDescriptions() {}

void OAIEnvironmentPropertyDescriptions::initializeModel() {

    m_property_group_descriptions_isSet = false;
    m_property_group_descriptions_isValid = false;
}

void OAIEnvironmentPropertyDescriptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentPropertyDescriptions::fromJsonObject(QJsonObject json) {

    m_property_group_descriptions_isValid = ::OpenAPI::fromJsonValue(m_property_group_descriptions, json[QString("PropertyGroupDescriptions")]);
    m_property_group_descriptions_isSet = !json[QString("PropertyGroupDescriptions")].isNull() && m_property_group_descriptions_isValid;
}

QString OAIEnvironmentPropertyDescriptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentPropertyDescriptions::asJsonObject() const {
    QJsonObject obj;
    if (m_property_group_descriptions.isSet()) {
        obj.insert(QString("PropertyGroupDescriptions"), ::OpenAPI::toJsonValue(m_property_group_descriptions));
    }
    return obj;
}

QList OAIEnvironmentPropertyDescriptions::getPropertyGroupDescriptions() const {
    return m_property_group_descriptions;
}
void OAIEnvironmentPropertyDescriptions::setPropertyGroupDescriptions(const QList &property_group_descriptions) {
    m_property_group_descriptions = property_group_descriptions;
    m_property_group_descriptions_isSet = true;
}

bool OAIEnvironmentPropertyDescriptions::is_property_group_descriptions_Set() const{
    return m_property_group_descriptions_isSet;
}

bool OAIEnvironmentPropertyDescriptions::is_property_group_descriptions_Valid() const{
    return m_property_group_descriptions_isValid;
}

bool OAIEnvironmentPropertyDescriptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_group_descriptions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentPropertyDescriptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
