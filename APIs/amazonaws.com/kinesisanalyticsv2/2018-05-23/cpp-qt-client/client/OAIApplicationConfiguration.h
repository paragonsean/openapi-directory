/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationConfiguration.h
 *
 * Specifies the creation parameters for a Kinesis Data Analytics application.
 */

#ifndef OAIApplicationConfiguration_H
#define OAIApplicationConfiguration_H

#include <QJsonObject>

#include "OAIApplicationConfiguration_ApplicationCodeConfiguration.h"
#include "OAIApplicationConfiguration_ApplicationSnapshotConfiguration.h"
#include "OAIApplicationConfiguration_EnvironmentProperties.h"
#include "OAIApplicationConfiguration_FlinkApplicationConfiguration.h"
#include "OAIApplicationConfiguration_SqlApplicationConfiguration.h"
#include "OAIApplicationConfiguration_ZeppelinApplicationConfiguration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationConfiguration_SqlApplicationConfiguration;
class OAIApplicationConfiguration_FlinkApplicationConfiguration;
class OAIApplicationConfiguration_EnvironmentProperties;
class OAIApplicationConfiguration_ApplicationCodeConfiguration;
class OAIApplicationConfiguration_ApplicationSnapshotConfiguration;
class OAIApplicationConfiguration_ZeppelinApplicationConfiguration;

class OAIApplicationConfiguration : public OAIObject {
public:
    OAIApplicationConfiguration();
    OAIApplicationConfiguration(QString json);
    ~OAIApplicationConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationConfiguration_SqlApplicationConfiguration getSqlApplicationConfiguration() const;
    void setSqlApplicationConfiguration(const OAIApplicationConfiguration_SqlApplicationConfiguration &sql_application_configuration);
    bool is_sql_application_configuration_Set() const;
    bool is_sql_application_configuration_Valid() const;

    OAIApplicationConfiguration_FlinkApplicationConfiguration getFlinkApplicationConfiguration() const;
    void setFlinkApplicationConfiguration(const OAIApplicationConfiguration_FlinkApplicationConfiguration &flink_application_configuration);
    bool is_flink_application_configuration_Set() const;
    bool is_flink_application_configuration_Valid() const;

    OAIApplicationConfiguration_EnvironmentProperties getEnvironmentProperties() const;
    void setEnvironmentProperties(const OAIApplicationConfiguration_EnvironmentProperties &environment_properties);
    bool is_environment_properties_Set() const;
    bool is_environment_properties_Valid() const;

    OAIApplicationConfiguration_ApplicationCodeConfiguration getApplicationCodeConfiguration() const;
    void setApplicationCodeConfiguration(const OAIApplicationConfiguration_ApplicationCodeConfiguration &application_code_configuration);
    bool is_application_code_configuration_Set() const;
    bool is_application_code_configuration_Valid() const;

    OAIApplicationConfiguration_ApplicationSnapshotConfiguration getApplicationSnapshotConfiguration() const;
    void setApplicationSnapshotConfiguration(const OAIApplicationConfiguration_ApplicationSnapshotConfiguration &application_snapshot_configuration);
    bool is_application_snapshot_configuration_Set() const;
    bool is_application_snapshot_configuration_Valid() const;

    QList getVpcConfigurations() const;
    void setVpcConfigurations(const QList &vpc_configurations);
    bool is_vpc_configurations_Set() const;
    bool is_vpc_configurations_Valid() const;

    OAIApplicationConfiguration_ZeppelinApplicationConfiguration getZeppelinApplicationConfiguration() const;
    void setZeppelinApplicationConfiguration(const OAIApplicationConfiguration_ZeppelinApplicationConfiguration &zeppelin_application_configuration);
    bool is_zeppelin_application_configuration_Set() const;
    bool is_zeppelin_application_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationConfiguration_SqlApplicationConfiguration m_sql_application_configuration;
    bool m_sql_application_configuration_isSet;
    bool m_sql_application_configuration_isValid;

    OAIApplicationConfiguration_FlinkApplicationConfiguration m_flink_application_configuration;
    bool m_flink_application_configuration_isSet;
    bool m_flink_application_configuration_isValid;

    OAIApplicationConfiguration_EnvironmentProperties m_environment_properties;
    bool m_environment_properties_isSet;
    bool m_environment_properties_isValid;

    OAIApplicationConfiguration_ApplicationCodeConfiguration m_application_code_configuration;
    bool m_application_code_configuration_isSet;
    bool m_application_code_configuration_isValid;

    OAIApplicationConfiguration_ApplicationSnapshotConfiguration m_application_snapshot_configuration;
    bool m_application_snapshot_configuration_isSet;
    bool m_application_snapshot_configuration_isValid;

    QList m_vpc_configurations;
    bool m_vpc_configurations_isSet;
    bool m_vpc_configurations_isValid;

    OAIApplicationConfiguration_ZeppelinApplicationConfiguration m_zeppelin_application_configuration;
    bool m_zeppelin_application_configuration_isSet;
    bool m_zeppelin_application_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationConfiguration)

#endif // OAIApplicationConfiguration_H
