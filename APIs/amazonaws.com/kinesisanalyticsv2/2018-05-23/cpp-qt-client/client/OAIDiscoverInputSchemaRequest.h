/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscoverInputSchemaRequest.h
 *
 * 
 */

#ifndef OAIDiscoverInputSchemaRequest_H
#define OAIDiscoverInputSchemaRequest_H

#include <QJsonObject>

#include "OAIDiscoverInputSchemaRequest_InputProcessingConfiguration.h"
#include "OAIDiscoverInputSchemaRequest_InputStartingPositionConfiguration.h"
#include "OAIDiscoverInputSchemaRequest_S3Configuration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiscoverInputSchemaRequest_InputStartingPositionConfiguration;
class OAIDiscoverInputSchemaRequest_S3Configuration;
class OAIDiscoverInputSchemaRequest_InputProcessingConfiguration;

class OAIDiscoverInputSchemaRequest : public OAIObject {
public:
    OAIDiscoverInputSchemaRequest();
    OAIDiscoverInputSchemaRequest(QString json);
    ~OAIDiscoverInputSchemaRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QString getServiceExecutionRole() const;
    void setServiceExecutionRole(const QString &service_execution_role);
    bool is_service_execution_role_Set() const;
    bool is_service_execution_role_Valid() const;

    OAIDiscoverInputSchemaRequest_InputStartingPositionConfiguration getInputStartingPositionConfiguration() const;
    void setInputStartingPositionConfiguration(const OAIDiscoverInputSchemaRequest_InputStartingPositionConfiguration &input_starting_position_configuration);
    bool is_input_starting_position_configuration_Set() const;
    bool is_input_starting_position_configuration_Valid() const;

    OAIDiscoverInputSchemaRequest_S3Configuration getS3Configuration() const;
    void setS3Configuration(const OAIDiscoverInputSchemaRequest_S3Configuration &s3_configuration);
    bool is_s3_configuration_Set() const;
    bool is_s3_configuration_Valid() const;

    OAIDiscoverInputSchemaRequest_InputProcessingConfiguration getInputProcessingConfiguration() const;
    void setInputProcessingConfiguration(const OAIDiscoverInputSchemaRequest_InputProcessingConfiguration &input_processing_configuration);
    bool is_input_processing_configuration_Set() const;
    bool is_input_processing_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QString m_service_execution_role;
    bool m_service_execution_role_isSet;
    bool m_service_execution_role_isValid;

    OAIDiscoverInputSchemaRequest_InputStartingPositionConfiguration m_input_starting_position_configuration;
    bool m_input_starting_position_configuration_isSet;
    bool m_input_starting_position_configuration_isValid;

    OAIDiscoverInputSchemaRequest_S3Configuration m_s3_configuration;
    bool m_s3_configuration_isSet;
    bool m_s3_configuration_isValid;

    OAIDiscoverInputSchemaRequest_InputProcessingConfiguration m_input_processing_configuration;
    bool m_input_processing_configuration_isSet;
    bool m_input_processing_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscoverInputSchemaRequest)

#endif // OAIDiscoverInputSchemaRequest_H
