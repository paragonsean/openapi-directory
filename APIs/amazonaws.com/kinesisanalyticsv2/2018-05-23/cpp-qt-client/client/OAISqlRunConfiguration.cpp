/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlRunConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlRunConfiguration::OAISqlRunConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlRunConfiguration::OAISqlRunConfiguration() {
    this->initializeModel();
}

OAISqlRunConfiguration::~OAISqlRunConfiguration() {}

void OAISqlRunConfiguration::initializeModel() {

    m_input_id_isSet = false;
    m_input_id_isValid = false;

    m_input_starting_position_configuration_isSet = false;
    m_input_starting_position_configuration_isValid = false;
}

void OAISqlRunConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlRunConfiguration::fromJsonObject(QJsonObject json) {

    m_input_id_isValid = ::OpenAPI::fromJsonValue(m_input_id, json[QString("InputId")]);
    m_input_id_isSet = !json[QString("InputId")].isNull() && m_input_id_isValid;

    m_input_starting_position_configuration_isValid = ::OpenAPI::fromJsonValue(m_input_starting_position_configuration, json[QString("InputStartingPositionConfiguration")]);
    m_input_starting_position_configuration_isSet = !json[QString("InputStartingPositionConfiguration")].isNull() && m_input_starting_position_configuration_isValid;
}

QString OAISqlRunConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlRunConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_input_id_isSet) {
        obj.insert(QString("InputId"), ::OpenAPI::toJsonValue(m_input_id));
    }
    if (m_input_starting_position_configuration.isSet()) {
        obj.insert(QString("InputStartingPositionConfiguration"), ::OpenAPI::toJsonValue(m_input_starting_position_configuration));
    }
    return obj;
}

QString OAISqlRunConfiguration::getInputId() const {
    return m_input_id;
}
void OAISqlRunConfiguration::setInputId(const QString &input_id) {
    m_input_id = input_id;
    m_input_id_isSet = true;
}

bool OAISqlRunConfiguration::is_input_id_Set() const{
    return m_input_id_isSet;
}

bool OAISqlRunConfiguration::is_input_id_Valid() const{
    return m_input_id_isValid;
}

OAISqlRunConfiguration_InputStartingPositionConfiguration OAISqlRunConfiguration::getInputStartingPositionConfiguration() const {
    return m_input_starting_position_configuration;
}
void OAISqlRunConfiguration::setInputStartingPositionConfiguration(const OAISqlRunConfiguration_InputStartingPositionConfiguration &input_starting_position_configuration) {
    m_input_starting_position_configuration = input_starting_position_configuration;
    m_input_starting_position_configuration_isSet = true;
}

bool OAISqlRunConfiguration::is_input_starting_position_configuration_Set() const{
    return m_input_starting_position_configuration_isSet;
}

bool OAISqlRunConfiguration::is_input_starting_position_configuration_Valid() const{
    return m_input_starting_position_configuration_isValid;
}

bool OAISqlRunConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_starting_position_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlRunConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_id_isValid && m_input_starting_position_configuration_isValid && true;
}

} // namespace OpenAPI
