/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputDescription_InputStartingPositionConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputDescription_InputStartingPositionConfiguration::OAIInputDescription_InputStartingPositionConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputDescription_InputStartingPositionConfiguration::OAIInputDescription_InputStartingPositionConfiguration() {
    this->initializeModel();
}

OAIInputDescription_InputStartingPositionConfiguration::~OAIInputDescription_InputStartingPositionConfiguration() {}

void OAIInputDescription_InputStartingPositionConfiguration::initializeModel() {

    m_input_starting_position_isSet = false;
    m_input_starting_position_isValid = false;
}

void OAIInputDescription_InputStartingPositionConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputDescription_InputStartingPositionConfiguration::fromJsonObject(QJsonObject json) {

    m_input_starting_position_isValid = ::OpenAPI::fromJsonValue(m_input_starting_position, json[QString("InputStartingPosition")]);
    m_input_starting_position_isSet = !json[QString("InputStartingPosition")].isNull() && m_input_starting_position_isValid;
}

QString OAIInputDescription_InputStartingPositionConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputDescription_InputStartingPositionConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_input_starting_position.isSet()) {
        obj.insert(QString("InputStartingPosition"), ::OpenAPI::toJsonValue(m_input_starting_position));
    }
    return obj;
}

OAIInputStartingPosition OAIInputDescription_InputStartingPositionConfiguration::getInputStartingPosition() const {
    return m_input_starting_position;
}
void OAIInputDescription_InputStartingPositionConfiguration::setInputStartingPosition(const OAIInputStartingPosition &input_starting_position) {
    m_input_starting_position = input_starting_position;
    m_input_starting_position_isSet = true;
}

bool OAIInputDescription_InputStartingPositionConfiguration::is_input_starting_position_Set() const{
    return m_input_starting_position_isSet;
}

bool OAIInputDescription_InputStartingPositionConfiguration::is_input_starting_position_Valid() const{
    return m_input_starting_position_isValid;
}

bool OAIInputDescription_InputStartingPositionConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_starting_position.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputDescription_InputStartingPositionConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
