/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlinkApplicationConfigurationDescription.h
 *
 * Describes configuration parameters for a Flink-based Kinesis Data Analytics application.
 */

#ifndef OAIFlinkApplicationConfigurationDescription_H
#define OAIFlinkApplicationConfigurationDescription_H

#include <QJsonObject>

#include "OAIFlinkApplicationConfigurationDescription_CheckpointConfigurationDescription.h"
#include "OAIFlinkApplicationConfigurationDescription_MonitoringConfigurationDescription.h"
#include "OAIFlinkApplicationConfigurationDescription_ParallelismConfigurationDescription.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFlinkApplicationConfigurationDescription_CheckpointConfigurationDescription;
class OAIFlinkApplicationConfigurationDescription_MonitoringConfigurationDescription;
class OAIFlinkApplicationConfigurationDescription_ParallelismConfigurationDescription;

class OAIFlinkApplicationConfigurationDescription : public OAIObject {
public:
    OAIFlinkApplicationConfigurationDescription();
    OAIFlinkApplicationConfigurationDescription(QString json);
    ~OAIFlinkApplicationConfigurationDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFlinkApplicationConfigurationDescription_CheckpointConfigurationDescription getCheckpointConfigurationDescription() const;
    void setCheckpointConfigurationDescription(const OAIFlinkApplicationConfigurationDescription_CheckpointConfigurationDescription &checkpoint_configuration_description);
    bool is_checkpoint_configuration_description_Set() const;
    bool is_checkpoint_configuration_description_Valid() const;

    OAIFlinkApplicationConfigurationDescription_MonitoringConfigurationDescription getMonitoringConfigurationDescription() const;
    void setMonitoringConfigurationDescription(const OAIFlinkApplicationConfigurationDescription_MonitoringConfigurationDescription &monitoring_configuration_description);
    bool is_monitoring_configuration_description_Set() const;
    bool is_monitoring_configuration_description_Valid() const;

    OAIFlinkApplicationConfigurationDescription_ParallelismConfigurationDescription getParallelismConfigurationDescription() const;
    void setParallelismConfigurationDescription(const OAIFlinkApplicationConfigurationDescription_ParallelismConfigurationDescription &parallelism_configuration_description);
    bool is_parallelism_configuration_description_Set() const;
    bool is_parallelism_configuration_description_Valid() const;

    QString getJobPlanDescription() const;
    void setJobPlanDescription(const QString &job_plan_description);
    bool is_job_plan_description_Set() const;
    bool is_job_plan_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFlinkApplicationConfigurationDescription_CheckpointConfigurationDescription m_checkpoint_configuration_description;
    bool m_checkpoint_configuration_description_isSet;
    bool m_checkpoint_configuration_description_isValid;

    OAIFlinkApplicationConfigurationDescription_MonitoringConfigurationDescription m_monitoring_configuration_description;
    bool m_monitoring_configuration_description_isSet;
    bool m_monitoring_configuration_description_isValid;

    OAIFlinkApplicationConfigurationDescription_ParallelismConfigurationDescription m_parallelism_configuration_description;
    bool m_parallelism_configuration_description_isSet;
    bool m_parallelism_configuration_description_isValid;

    QString m_job_plan_description;
    bool m_job_plan_description_isSet;
    bool m_job_plan_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlinkApplicationConfigurationDescription)

#endif // OAIFlinkApplicationConfigurationDescription_H
