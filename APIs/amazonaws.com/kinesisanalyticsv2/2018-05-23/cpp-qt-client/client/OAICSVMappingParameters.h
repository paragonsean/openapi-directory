/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICSVMappingParameters.h
 *
 * &lt;p&gt;For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the &lt;i&gt;&#39;\\n&#39;&lt;/i&gt; as the row delimiter and a comma (\&quot;,\&quot;) as the column delimiter: &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;name1\&quot;, \&quot;address1\&quot;&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;code&gt;\&quot;name2\&quot;, \&quot;address2\&quot;&lt;/code&gt; &lt;/p&gt;
 */

#ifndef OAICSVMappingParameters_H
#define OAICSVMappingParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICSVMappingParameters : public OAIObject {
public:
    OAICSVMappingParameters();
    OAICSVMappingParameters(QString json);
    ~OAICSVMappingParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRecordRowDelimiter() const;
    void setRecordRowDelimiter(const QString &record_row_delimiter);
    bool is_record_row_delimiter_Set() const;
    bool is_record_row_delimiter_Valid() const;

    QString getRecordColumnDelimiter() const;
    void setRecordColumnDelimiter(const QString &record_column_delimiter);
    bool is_record_column_delimiter_Set() const;
    bool is_record_column_delimiter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_record_row_delimiter;
    bool m_record_row_delimiter_isSet;
    bool m_record_row_delimiter_isValid;

    QString m_record_column_delimiter;
    bool m_record_column_delimiter_isSet;
    bool m_record_column_delimiter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICSVMappingParameters)

#endif // OAICSVMappingParameters_H
