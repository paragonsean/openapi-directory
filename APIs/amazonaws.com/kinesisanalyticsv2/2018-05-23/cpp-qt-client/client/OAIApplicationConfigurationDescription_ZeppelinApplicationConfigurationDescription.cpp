/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription() {
    this->initializeModel();
}

OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::~OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription() {}

void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::initializeModel() {

    m_monitoring_configuration_description_isSet = false;
    m_monitoring_configuration_description_isValid = false;

    m_catalog_configuration_description_isSet = false;
    m_catalog_configuration_description_isValid = false;

    m_deploy_as_application_configuration_description_isSet = false;
    m_deploy_as_application_configuration_description_isValid = false;

    m_custom_artifacts_configuration_description_isSet = false;
    m_custom_artifacts_configuration_description_isValid = false;
}

void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::fromJsonObject(QJsonObject json) {

    m_monitoring_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_monitoring_configuration_description, json[QString("MonitoringConfigurationDescription")]);
    m_monitoring_configuration_description_isSet = !json[QString("MonitoringConfigurationDescription")].isNull() && m_monitoring_configuration_description_isValid;

    m_catalog_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_catalog_configuration_description, json[QString("CatalogConfigurationDescription")]);
    m_catalog_configuration_description_isSet = !json[QString("CatalogConfigurationDescription")].isNull() && m_catalog_configuration_description_isValid;

    m_deploy_as_application_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_deploy_as_application_configuration_description, json[QString("DeployAsApplicationConfigurationDescription")]);
    m_deploy_as_application_configuration_description_isSet = !json[QString("DeployAsApplicationConfigurationDescription")].isNull() && m_deploy_as_application_configuration_description_isValid;

    m_custom_artifacts_configuration_description_isValid = ::OpenAPI::fromJsonValue(m_custom_artifacts_configuration_description, json[QString("CustomArtifactsConfigurationDescription")]);
    m_custom_artifacts_configuration_description_isSet = !json[QString("CustomArtifactsConfigurationDescription")].isNull() && m_custom_artifacts_configuration_description_isValid;
}

QString OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_monitoring_configuration_description.isSet()) {
        obj.insert(QString("MonitoringConfigurationDescription"), ::OpenAPI::toJsonValue(m_monitoring_configuration_description));
    }
    if (m_catalog_configuration_description.isSet()) {
        obj.insert(QString("CatalogConfigurationDescription"), ::OpenAPI::toJsonValue(m_catalog_configuration_description));
    }
    if (m_deploy_as_application_configuration_description.isSet()) {
        obj.insert(QString("DeployAsApplicationConfigurationDescription"), ::OpenAPI::toJsonValue(m_deploy_as_application_configuration_description));
    }
    if (m_custom_artifacts_configuration_description.isSet()) {
        obj.insert(QString("CustomArtifactsConfigurationDescription"), ::OpenAPI::toJsonValue(m_custom_artifacts_configuration_description));
    }
    return obj;
}

OAIZeppelinApplicationConfigurationDescription_MonitoringConfigurationDescription OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::getMonitoringConfigurationDescription() const {
    return m_monitoring_configuration_description;
}
void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::setMonitoringConfigurationDescription(const OAIZeppelinApplicationConfigurationDescription_MonitoringConfigurationDescription &monitoring_configuration_description) {
    m_monitoring_configuration_description = monitoring_configuration_description;
    m_monitoring_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_monitoring_configuration_description_Set() const{
    return m_monitoring_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_monitoring_configuration_description_Valid() const{
    return m_monitoring_configuration_description_isValid;
}

OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::getCatalogConfigurationDescription() const {
    return m_catalog_configuration_description;
}
void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::setCatalogConfigurationDescription(const OAIZeppelinApplicationConfigurationDescription_CatalogConfigurationDescription &catalog_configuration_description) {
    m_catalog_configuration_description = catalog_configuration_description;
    m_catalog_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_catalog_configuration_description_Set() const{
    return m_catalog_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_catalog_configuration_description_Valid() const{
    return m_catalog_configuration_description_isValid;
}

OAIZeppelinApplicationConfigurationDescription_DeployAsApplicationConfigurationDescription OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::getDeployAsApplicationConfigurationDescription() const {
    return m_deploy_as_application_configuration_description;
}
void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::setDeployAsApplicationConfigurationDescription(const OAIZeppelinApplicationConfigurationDescription_DeployAsApplicationConfigurationDescription &deploy_as_application_configuration_description) {
    m_deploy_as_application_configuration_description = deploy_as_application_configuration_description;
    m_deploy_as_application_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_deploy_as_application_configuration_description_Set() const{
    return m_deploy_as_application_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_deploy_as_application_configuration_description_Valid() const{
    return m_deploy_as_application_configuration_description_isValid;
}

QList OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::getCustomArtifactsConfigurationDescription() const {
    return m_custom_artifacts_configuration_description;
}
void OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::setCustomArtifactsConfigurationDescription(const QList &custom_artifacts_configuration_description) {
    m_custom_artifacts_configuration_description = custom_artifacts_configuration_description;
    m_custom_artifacts_configuration_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_custom_artifacts_configuration_description_Set() const{
    return m_custom_artifacts_configuration_description_isSet;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::is_custom_artifacts_configuration_description_Valid() const{
    return m_custom_artifacts_configuration_description_isValid;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitoring_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deploy_as_application_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_artifacts_configuration_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationConfigurationDescription_ZeppelinApplicationConfigurationDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitoring_configuration_description_isValid && true;
}

} // namespace OpenAPI
