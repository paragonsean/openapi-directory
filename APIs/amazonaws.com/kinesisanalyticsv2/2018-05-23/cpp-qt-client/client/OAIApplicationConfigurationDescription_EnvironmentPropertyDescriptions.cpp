/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions() {
    this->initializeModel();
}

OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::~OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions() {}

void OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::initializeModel() {

    m_property_group_descriptions_isSet = false;
    m_property_group_descriptions_isValid = false;
}

void OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::fromJsonObject(QJsonObject json) {

    m_property_group_descriptions_isValid = ::OpenAPI::fromJsonValue(m_property_group_descriptions, json[QString("PropertyGroupDescriptions")]);
    m_property_group_descriptions_isSet = !json[QString("PropertyGroupDescriptions")].isNull() && m_property_group_descriptions_isValid;
}

QString OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::asJsonObject() const {
    QJsonObject obj;
    if (m_property_group_descriptions.isSet()) {
        obj.insert(QString("PropertyGroupDescriptions"), ::OpenAPI::toJsonValue(m_property_group_descriptions));
    }
    return obj;
}

QList OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::getPropertyGroupDescriptions() const {
    return m_property_group_descriptions;
}
void OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::setPropertyGroupDescriptions(const QList &property_group_descriptions) {
    m_property_group_descriptions = property_group_descriptions;
    m_property_group_descriptions_isSet = true;
}

bool OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::is_property_group_descriptions_Set() const{
    return m_property_group_descriptions_isSet;
}

bool OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::is_property_group_descriptions_Valid() const{
    return m_property_group_descriptions_isValid;
}

bool OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_group_descriptions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationConfigurationDescription_EnvironmentPropertyDescriptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
