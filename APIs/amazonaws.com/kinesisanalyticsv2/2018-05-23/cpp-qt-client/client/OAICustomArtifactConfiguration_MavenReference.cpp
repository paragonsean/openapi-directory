/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomArtifactConfiguration_MavenReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomArtifactConfiguration_MavenReference::OAICustomArtifactConfiguration_MavenReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomArtifactConfiguration_MavenReference::OAICustomArtifactConfiguration_MavenReference() {
    this->initializeModel();
}

OAICustomArtifactConfiguration_MavenReference::~OAICustomArtifactConfiguration_MavenReference() {}

void OAICustomArtifactConfiguration_MavenReference::initializeModel() {

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_artifact_id_isSet = false;
    m_artifact_id_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAICustomArtifactConfiguration_MavenReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomArtifactConfiguration_MavenReference::fromJsonObject(QJsonObject json) {

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("GroupId")]);
    m_group_id_isSet = !json[QString("GroupId")].isNull() && m_group_id_isValid;

    m_artifact_id_isValid = ::OpenAPI::fromJsonValue(m_artifact_id, json[QString("ArtifactId")]);
    m_artifact_id_isSet = !json[QString("ArtifactId")].isNull() && m_artifact_id_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAICustomArtifactConfiguration_MavenReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomArtifactConfiguration_MavenReference::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_isSet) {
        obj.insert(QString("GroupId"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_artifact_id_isSet) {
        obj.insert(QString("ArtifactId"), ::OpenAPI::toJsonValue(m_artifact_id));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAICustomArtifactConfiguration_MavenReference::getGroupId() const {
    return m_group_id;
}
void OAICustomArtifactConfiguration_MavenReference::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAICustomArtifactConfiguration_MavenReference::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAICustomArtifactConfiguration_MavenReference::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAICustomArtifactConfiguration_MavenReference::getArtifactId() const {
    return m_artifact_id;
}
void OAICustomArtifactConfiguration_MavenReference::setArtifactId(const QString &artifact_id) {
    m_artifact_id = artifact_id;
    m_artifact_id_isSet = true;
}

bool OAICustomArtifactConfiguration_MavenReference::is_artifact_id_Set() const{
    return m_artifact_id_isSet;
}

bool OAICustomArtifactConfiguration_MavenReference::is_artifact_id_Valid() const{
    return m_artifact_id_isValid;
}

QString OAICustomArtifactConfiguration_MavenReference::getVersion() const {
    return m_version;
}
void OAICustomArtifactConfiguration_MavenReference::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAICustomArtifactConfiguration_MavenReference::is_version_Set() const{
    return m_version_isSet;
}

bool OAICustomArtifactConfiguration_MavenReference::is_version_Valid() const{
    return m_version_isValid;
}

bool OAICustomArtifactConfiguration_MavenReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artifact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomArtifactConfiguration_MavenReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_group_id_isValid && m_artifact_id_isValid && m_version_isValid && true;
}

} // namespace OpenAPI
