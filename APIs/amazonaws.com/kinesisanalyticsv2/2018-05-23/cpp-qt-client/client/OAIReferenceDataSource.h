/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceDataSource.h
 *
 * For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.
 */

#ifndef OAIReferenceDataSource_H
#define OAIReferenceDataSource_H

#include <QJsonObject>

#include "OAIReferenceDataSource_ReferenceSchema.h"
#include "OAIReferenceDataSource_S3ReferenceDataSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceDataSource_S3ReferenceDataSource;
class OAIReferenceDataSource_ReferenceSchema;

class OAIReferenceDataSource : public OAIObject {
public:
    OAIReferenceDataSource();
    OAIReferenceDataSource(QString json);
    ~OAIReferenceDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTableName() const;
    void setTableName(const QString &table_name);
    bool is_table_name_Set() const;
    bool is_table_name_Valid() const;

    OAIReferenceDataSource_S3ReferenceDataSource getS3ReferenceDataSource() const;
    void setS3ReferenceDataSource(const OAIReferenceDataSource_S3ReferenceDataSource &s3_reference_data_source);
    bool is_s3_reference_data_source_Set() const;
    bool is_s3_reference_data_source_Valid() const;

    OAIReferenceDataSource_ReferenceSchema getReferenceSchema() const;
    void setReferenceSchema(const OAIReferenceDataSource_ReferenceSchema &reference_schema);
    bool is_reference_schema_Set() const;
    bool is_reference_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_table_name;
    bool m_table_name_isSet;
    bool m_table_name_isValid;

    OAIReferenceDataSource_S3ReferenceDataSource m_s3_reference_data_source;
    bool m_s3_reference_data_source_isSet;
    bool m_s3_reference_data_source_isValid;

    OAIReferenceDataSource_ReferenceSchema m_reference_schema;
    bool m_reference_schema_isSet;
    bool m_reference_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceDataSource)

#endif // OAIReferenceDataSource_H
