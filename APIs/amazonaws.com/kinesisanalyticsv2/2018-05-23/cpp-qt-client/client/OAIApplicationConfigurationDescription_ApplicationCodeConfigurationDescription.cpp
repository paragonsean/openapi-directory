/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription() {
    this->initializeModel();
}

OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::~OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription() {}

void OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::initializeModel() {

    m_code_content_type_isSet = false;
    m_code_content_type_isValid = false;

    m_code_content_description_isSet = false;
    m_code_content_description_isValid = false;
}

void OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::fromJsonObject(QJsonObject json) {

    m_code_content_type_isValid = ::OpenAPI::fromJsonValue(m_code_content_type, json[QString("CodeContentType")]);
    m_code_content_type_isSet = !json[QString("CodeContentType")].isNull() && m_code_content_type_isValid;

    m_code_content_description_isValid = ::OpenAPI::fromJsonValue(m_code_content_description, json[QString("CodeContentDescription")]);
    m_code_content_description_isSet = !json[QString("CodeContentDescription")].isNull() && m_code_content_description_isValid;
}

QString OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_code_content_type.isSet()) {
        obj.insert(QString("CodeContentType"), ::OpenAPI::toJsonValue(m_code_content_type));
    }
    if (m_code_content_description.isSet()) {
        obj.insert(QString("CodeContentDescription"), ::OpenAPI::toJsonValue(m_code_content_description));
    }
    return obj;
}

OAICodeContentType OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::getCodeContentType() const {
    return m_code_content_type;
}
void OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::setCodeContentType(const OAICodeContentType &code_content_type) {
    m_code_content_type = code_content_type;
    m_code_content_type_isSet = true;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::is_code_content_type_Set() const{
    return m_code_content_type_isSet;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::is_code_content_type_Valid() const{
    return m_code_content_type_isValid;
}

OAIApplicationCodeConfigurationDescription_CodeContentDescription OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::getCodeContentDescription() const {
    return m_code_content_description;
}
void OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::setCodeContentDescription(const OAIApplicationCodeConfigurationDescription_CodeContentDescription &code_content_description) {
    m_code_content_description = code_content_description;
    m_code_content_description_isSet = true;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::is_code_content_description_Set() const{
    return m_code_content_description_isSet;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::is_code_content_description_Valid() const{
    return m_code_content_description_isValid;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_content_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_content_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationConfigurationDescription_ApplicationCodeConfigurationDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_code_content_type_isValid && true;
}

} // namespace OpenAPI
