/*
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationConfigurationApplicationCodeConfiguration;
import org.openapitools.client.model.ApplicationConfigurationApplicationSnapshotConfiguration;
import org.openapitools.client.model.ApplicationConfigurationEnvironmentProperties;
import org.openapitools.client.model.ApplicationConfigurationFlinkApplicationConfiguration;
import org.openapitools.client.model.ApplicationConfigurationSqlApplicationConfiguration;
import org.openapitools.client.model.ApplicationConfigurationZeppelinApplicationConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationConfiguration
 */
public class ApplicationConfigurationTest {
    private final ApplicationConfiguration model = new ApplicationConfiguration();

    /**
     * Model tests for ApplicationConfiguration
     */
    @Test
    public void testApplicationConfiguration() {
        // TODO: test ApplicationConfiguration
    }

    /**
     * Test the property 'sqlApplicationConfiguration'
     */
    @Test
    public void sqlApplicationConfigurationTest() {
        // TODO: test sqlApplicationConfiguration
    }

    /**
     * Test the property 'flinkApplicationConfiguration'
     */
    @Test
    public void flinkApplicationConfigurationTest() {
        // TODO: test flinkApplicationConfiguration
    }

    /**
     * Test the property 'environmentProperties'
     */
    @Test
    public void environmentPropertiesTest() {
        // TODO: test environmentProperties
    }

    /**
     * Test the property 'applicationCodeConfiguration'
     */
    @Test
    public void applicationCodeConfigurationTest() {
        // TODO: test applicationCodeConfiguration
    }

    /**
     * Test the property 'applicationSnapshotConfiguration'
     */
    @Test
    public void applicationSnapshotConfigurationTest() {
        // TODO: test applicationSnapshotConfiguration
    }

    /**
     * Test the property 'vpcConfigurations'
     */
    @Test
    public void vpcConfigurationsTest() {
        // TODO: test vpcConfigurations
    }

    /**
     * Test the property 'zeppelinApplicationConfiguration'
     */
    @Test
    public void zeppelinApplicationConfigurationTest() {
        // TODO: test zeppelinApplicationConfiguration
    }

}
