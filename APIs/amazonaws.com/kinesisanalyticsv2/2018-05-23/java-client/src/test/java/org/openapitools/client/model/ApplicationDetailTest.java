/*
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationDetailApplicationConfigurationDescription;
import org.openapitools.client.model.ApplicationDetailApplicationMaintenanceConfigurationDescription;
import org.openapitools.client.model.ApplicationMode;
import org.openapitools.client.model.ApplicationStatus;
import org.openapitools.client.model.RuntimeEnvironment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationDetail
 */
public class ApplicationDetailTest {
    private final ApplicationDetail model = new ApplicationDetail();

    /**
     * Model tests for ApplicationDetail
     */
    @Test
    public void testApplicationDetail() {
        // TODO: test ApplicationDetail
    }

    /**
     * Test the property 'applicationARN'
     */
    @Test
    public void applicationARNTest() {
        // TODO: test applicationARN
    }

    /**
     * Test the property 'applicationDescription'
     */
    @Test
    public void applicationDescriptionTest() {
        // TODO: test applicationDescription
    }

    /**
     * Test the property 'applicationName'
     */
    @Test
    public void applicationNameTest() {
        // TODO: test applicationName
    }

    /**
     * Test the property 'runtimeEnvironment'
     */
    @Test
    public void runtimeEnvironmentTest() {
        // TODO: test runtimeEnvironment
    }

    /**
     * Test the property 'serviceExecutionRole'
     */
    @Test
    public void serviceExecutionRoleTest() {
        // TODO: test serviceExecutionRole
    }

    /**
     * Test the property 'applicationStatus'
     */
    @Test
    public void applicationStatusTest() {
        // TODO: test applicationStatus
    }

    /**
     * Test the property 'applicationVersionId'
     */
    @Test
    public void applicationVersionIdTest() {
        // TODO: test applicationVersionId
    }

    /**
     * Test the property 'createTimestamp'
     */
    @Test
    public void createTimestampTest() {
        // TODO: test createTimestamp
    }

    /**
     * Test the property 'lastUpdateTimestamp'
     */
    @Test
    public void lastUpdateTimestampTest() {
        // TODO: test lastUpdateTimestamp
    }

    /**
     * Test the property 'applicationConfigurationDescription'
     */
    @Test
    public void applicationConfigurationDescriptionTest() {
        // TODO: test applicationConfigurationDescription
    }

    /**
     * Test the property 'cloudWatchLoggingOptionDescriptions'
     */
    @Test
    public void cloudWatchLoggingOptionDescriptionsTest() {
        // TODO: test cloudWatchLoggingOptionDescriptions
    }

    /**
     * Test the property 'applicationMaintenanceConfigurationDescription'
     */
    @Test
    public void applicationMaintenanceConfigurationDescriptionTest() {
        // TODO: test applicationMaintenanceConfigurationDescription
    }

    /**
     * Test the property 'applicationVersionUpdatedFrom'
     */
    @Test
    public void applicationVersionUpdatedFromTest() {
        // TODO: test applicationVersionUpdatedFrom
    }

    /**
     * Test the property 'applicationVersionRolledBackFrom'
     */
    @Test
    public void applicationVersionRolledBackFromTest() {
        // TODO: test applicationVersionRolledBackFrom
    }

    /**
     * Test the property 'conditionalToken'
     */
    @Test
    public void conditionalTokenTest() {
        // TODO: test conditionalToken
    }

    /**
     * Test the property 'applicationVersionRolledBackTo'
     */
    @Test
    public void applicationVersionRolledBackToTest() {
        // TODO: test applicationVersionRolledBackTo
    }

    /**
     * Test the property 'applicationMode'
     */
    @Test
    public void applicationModeTest() {
        // TODO: test applicationMode
    }

}
