/*
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OutputDestinationSchema;
import org.openapitools.client.model.OutputUpdateKinesisFirehoseOutputUpdate;
import org.openapitools.client.model.OutputUpdateKinesisStreamsOutputUpdate;
import org.openapitools.client.model.OutputUpdateLambdaOutputUpdate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  For a SQL-based Kinesis Data Analytics application, describes updates to the output configuration identified by the &lt;code&gt;OutputId&lt;/code&gt;. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:08.997491-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OutputUpdate {
  public static final String SERIALIZED_NAME_OUTPUT_ID = "OutputId";
  @SerializedName(SERIALIZED_NAME_OUTPUT_ID)
  private String outputId;

  public static final String SERIALIZED_NAME_NAME_UPDATE = "NameUpdate";
  @SerializedName(SERIALIZED_NAME_NAME_UPDATE)
  private String nameUpdate;

  public static final String SERIALIZED_NAME_KINESIS_STREAMS_OUTPUT_UPDATE = "KinesisStreamsOutputUpdate";
  @SerializedName(SERIALIZED_NAME_KINESIS_STREAMS_OUTPUT_UPDATE)
  private OutputUpdateKinesisStreamsOutputUpdate kinesisStreamsOutputUpdate;

  public static final String SERIALIZED_NAME_KINESIS_FIREHOSE_OUTPUT_UPDATE = "KinesisFirehoseOutputUpdate";
  @SerializedName(SERIALIZED_NAME_KINESIS_FIREHOSE_OUTPUT_UPDATE)
  private OutputUpdateKinesisFirehoseOutputUpdate kinesisFirehoseOutputUpdate;

  public static final String SERIALIZED_NAME_LAMBDA_OUTPUT_UPDATE = "LambdaOutputUpdate";
  @SerializedName(SERIALIZED_NAME_LAMBDA_OUTPUT_UPDATE)
  private OutputUpdateLambdaOutputUpdate lambdaOutputUpdate;

  public static final String SERIALIZED_NAME_DESTINATION_SCHEMA_UPDATE = "DestinationSchemaUpdate";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SCHEMA_UPDATE)
  private OutputDestinationSchema destinationSchemaUpdate;

  public OutputUpdate() {
  }

  public OutputUpdate outputId(String outputId) {
    this.outputId = outputId;
    return this;
  }

  /**
   * Get outputId
   * @return outputId
   */
  @javax.annotation.Nonnull
  public String getOutputId() {
    return outputId;
  }

  public void setOutputId(String outputId) {
    this.outputId = outputId;
  }


  public OutputUpdate nameUpdate(String nameUpdate) {
    this.nameUpdate = nameUpdate;
    return this;
  }

  /**
   * Get nameUpdate
   * @return nameUpdate
   */
  @javax.annotation.Nullable
  public String getNameUpdate() {
    return nameUpdate;
  }

  public void setNameUpdate(String nameUpdate) {
    this.nameUpdate = nameUpdate;
  }


  public OutputUpdate kinesisStreamsOutputUpdate(OutputUpdateKinesisStreamsOutputUpdate kinesisStreamsOutputUpdate) {
    this.kinesisStreamsOutputUpdate = kinesisStreamsOutputUpdate;
    return this;
  }

  /**
   * Get kinesisStreamsOutputUpdate
   * @return kinesisStreamsOutputUpdate
   */
  @javax.annotation.Nullable
  public OutputUpdateKinesisStreamsOutputUpdate getKinesisStreamsOutputUpdate() {
    return kinesisStreamsOutputUpdate;
  }

  public void setKinesisStreamsOutputUpdate(OutputUpdateKinesisStreamsOutputUpdate kinesisStreamsOutputUpdate) {
    this.kinesisStreamsOutputUpdate = kinesisStreamsOutputUpdate;
  }


  public OutputUpdate kinesisFirehoseOutputUpdate(OutputUpdateKinesisFirehoseOutputUpdate kinesisFirehoseOutputUpdate) {
    this.kinesisFirehoseOutputUpdate = kinesisFirehoseOutputUpdate;
    return this;
  }

  /**
   * Get kinesisFirehoseOutputUpdate
   * @return kinesisFirehoseOutputUpdate
   */
  @javax.annotation.Nullable
  public OutputUpdateKinesisFirehoseOutputUpdate getKinesisFirehoseOutputUpdate() {
    return kinesisFirehoseOutputUpdate;
  }

  public void setKinesisFirehoseOutputUpdate(OutputUpdateKinesisFirehoseOutputUpdate kinesisFirehoseOutputUpdate) {
    this.kinesisFirehoseOutputUpdate = kinesisFirehoseOutputUpdate;
  }


  public OutputUpdate lambdaOutputUpdate(OutputUpdateLambdaOutputUpdate lambdaOutputUpdate) {
    this.lambdaOutputUpdate = lambdaOutputUpdate;
    return this;
  }

  /**
   * Get lambdaOutputUpdate
   * @return lambdaOutputUpdate
   */
  @javax.annotation.Nullable
  public OutputUpdateLambdaOutputUpdate getLambdaOutputUpdate() {
    return lambdaOutputUpdate;
  }

  public void setLambdaOutputUpdate(OutputUpdateLambdaOutputUpdate lambdaOutputUpdate) {
    this.lambdaOutputUpdate = lambdaOutputUpdate;
  }


  public OutputUpdate destinationSchemaUpdate(OutputDestinationSchema destinationSchemaUpdate) {
    this.destinationSchemaUpdate = destinationSchemaUpdate;
    return this;
  }

  /**
   * Get destinationSchemaUpdate
   * @return destinationSchemaUpdate
   */
  @javax.annotation.Nullable
  public OutputDestinationSchema getDestinationSchemaUpdate() {
    return destinationSchemaUpdate;
  }

  public void setDestinationSchemaUpdate(OutputDestinationSchema destinationSchemaUpdate) {
    this.destinationSchemaUpdate = destinationSchemaUpdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputUpdate outputUpdate = (OutputUpdate) o;
    return Objects.equals(this.outputId, outputUpdate.outputId) &&
        Objects.equals(this.nameUpdate, outputUpdate.nameUpdate) &&
        Objects.equals(this.kinesisStreamsOutputUpdate, outputUpdate.kinesisStreamsOutputUpdate) &&
        Objects.equals(this.kinesisFirehoseOutputUpdate, outputUpdate.kinesisFirehoseOutputUpdate) &&
        Objects.equals(this.lambdaOutputUpdate, outputUpdate.lambdaOutputUpdate) &&
        Objects.equals(this.destinationSchemaUpdate, outputUpdate.destinationSchemaUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputId, nameUpdate, kinesisStreamsOutputUpdate, kinesisFirehoseOutputUpdate, lambdaOutputUpdate, destinationSchemaUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputUpdate {\n");
    sb.append("    outputId: ").append(toIndentedString(outputId)).append("\n");
    sb.append("    nameUpdate: ").append(toIndentedString(nameUpdate)).append("\n");
    sb.append("    kinesisStreamsOutputUpdate: ").append(toIndentedString(kinesisStreamsOutputUpdate)).append("\n");
    sb.append("    kinesisFirehoseOutputUpdate: ").append(toIndentedString(kinesisFirehoseOutputUpdate)).append("\n");
    sb.append("    lambdaOutputUpdate: ").append(toIndentedString(lambdaOutputUpdate)).append("\n");
    sb.append("    destinationSchemaUpdate: ").append(toIndentedString(destinationSchemaUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OutputId");
    openapiFields.add("NameUpdate");
    openapiFields.add("KinesisStreamsOutputUpdate");
    openapiFields.add("KinesisFirehoseOutputUpdate");
    openapiFields.add("LambdaOutputUpdate");
    openapiFields.add("DestinationSchemaUpdate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("OutputId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OutputUpdate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OutputUpdate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OutputUpdate is not found in the empty JSON string", OutputUpdate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OutputUpdate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OutputUpdate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OutputUpdate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `OutputId`
      String.validateJsonElement(jsonObj.get("OutputId"));
      // validate the optional field `NameUpdate`
      if (jsonObj.get("NameUpdate") != null && !jsonObj.get("NameUpdate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NameUpdate"));
      }
      // validate the optional field `KinesisStreamsOutputUpdate`
      if (jsonObj.get("KinesisStreamsOutputUpdate") != null && !jsonObj.get("KinesisStreamsOutputUpdate").isJsonNull()) {
        OutputUpdateKinesisStreamsOutputUpdate.validateJsonElement(jsonObj.get("KinesisStreamsOutputUpdate"));
      }
      // validate the optional field `KinesisFirehoseOutputUpdate`
      if (jsonObj.get("KinesisFirehoseOutputUpdate") != null && !jsonObj.get("KinesisFirehoseOutputUpdate").isJsonNull()) {
        OutputUpdateKinesisFirehoseOutputUpdate.validateJsonElement(jsonObj.get("KinesisFirehoseOutputUpdate"));
      }
      // validate the optional field `LambdaOutputUpdate`
      if (jsonObj.get("LambdaOutputUpdate") != null && !jsonObj.get("LambdaOutputUpdate").isJsonNull()) {
        OutputUpdateLambdaOutputUpdate.validateJsonElement(jsonObj.get("LambdaOutputUpdate"));
      }
      // validate the optional field `DestinationSchemaUpdate`
      if (jsonObj.get("DestinationSchemaUpdate") != null && !jsonObj.get("DestinationSchemaUpdate").isJsonNull()) {
        OutputDestinationSchema.validateJsonElement(jsonObj.get("DestinationSchemaUpdate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OutputUpdate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OutputUpdate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OutputUpdate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OutputUpdate.class));

       return (TypeAdapter<T>) new TypeAdapter<OutputUpdate>() {
           @Override
           public void write(JsonWriter out, OutputUpdate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OutputUpdate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OutputUpdate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OutputUpdate
   * @throws IOException if the JSON string is invalid with respect to OutputUpdate
   */
  public static OutputUpdate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OutputUpdate.class);
  }

  /**
   * Convert an instance of OutputUpdate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

