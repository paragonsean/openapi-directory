/*
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription;
import org.openapitools.client.model.ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription;
import org.openapitools.client.model.ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions;
import org.openapitools.client.model.ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription;
import org.openapitools.client.model.ApplicationConfigurationDescriptionRunConfigurationDescription;
import org.openapitools.client.model.ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription;
import org.openapitools.client.model.ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApplicationDetailApplicationConfigurationDescription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:08.997491-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApplicationDetailApplicationConfigurationDescription {
  public static final String SERIALIZED_NAME_SQL_APPLICATION_CONFIGURATION_DESCRIPTION = "SqlApplicationConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_SQL_APPLICATION_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription sqlApplicationConfigurationDescription;

  public static final String SERIALIZED_NAME_APPLICATION_CODE_CONFIGURATION_DESCRIPTION = "ApplicationCodeConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CODE_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription applicationCodeConfigurationDescription;

  public static final String SERIALIZED_NAME_RUN_CONFIGURATION_DESCRIPTION = "RunConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_RUN_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionRunConfigurationDescription runConfigurationDescription;

  public static final String SERIALIZED_NAME_FLINK_APPLICATION_CONFIGURATION_DESCRIPTION = "FlinkApplicationConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_FLINK_APPLICATION_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription flinkApplicationConfigurationDescription;

  public static final String SERIALIZED_NAME_ENVIRONMENT_PROPERTY_DESCRIPTIONS = "EnvironmentPropertyDescriptions";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_PROPERTY_DESCRIPTIONS)
  private ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions environmentPropertyDescriptions;

  public static final String SERIALIZED_NAME_APPLICATION_SNAPSHOT_CONFIGURATION_DESCRIPTION = "ApplicationSnapshotConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_APPLICATION_SNAPSHOT_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription applicationSnapshotConfigurationDescription;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION_DESCRIPTIONS = "VpcConfigurationDescriptions";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION_DESCRIPTIONS)
  private List vpcConfigurationDescriptions;

  public static final String SERIALIZED_NAME_ZEPPELIN_APPLICATION_CONFIGURATION_DESCRIPTION = "ZeppelinApplicationConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_ZEPPELIN_APPLICATION_CONFIGURATION_DESCRIPTION)
  private ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription zeppelinApplicationConfigurationDescription;

  public ApplicationDetailApplicationConfigurationDescription() {
  }

  public ApplicationDetailApplicationConfigurationDescription sqlApplicationConfigurationDescription(ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription sqlApplicationConfigurationDescription) {
    this.sqlApplicationConfigurationDescription = sqlApplicationConfigurationDescription;
    return this;
  }

  /**
   * Get sqlApplicationConfigurationDescription
   * @return sqlApplicationConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription getSqlApplicationConfigurationDescription() {
    return sqlApplicationConfigurationDescription;
  }

  public void setSqlApplicationConfigurationDescription(ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription sqlApplicationConfigurationDescription) {
    this.sqlApplicationConfigurationDescription = sqlApplicationConfigurationDescription;
  }


  public ApplicationDetailApplicationConfigurationDescription applicationCodeConfigurationDescription(ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription applicationCodeConfigurationDescription) {
    this.applicationCodeConfigurationDescription = applicationCodeConfigurationDescription;
    return this;
  }

  /**
   * Get applicationCodeConfigurationDescription
   * @return applicationCodeConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription getApplicationCodeConfigurationDescription() {
    return applicationCodeConfigurationDescription;
  }

  public void setApplicationCodeConfigurationDescription(ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription applicationCodeConfigurationDescription) {
    this.applicationCodeConfigurationDescription = applicationCodeConfigurationDescription;
  }


  public ApplicationDetailApplicationConfigurationDescription runConfigurationDescription(ApplicationConfigurationDescriptionRunConfigurationDescription runConfigurationDescription) {
    this.runConfigurationDescription = runConfigurationDescription;
    return this;
  }

  /**
   * Get runConfigurationDescription
   * @return runConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionRunConfigurationDescription getRunConfigurationDescription() {
    return runConfigurationDescription;
  }

  public void setRunConfigurationDescription(ApplicationConfigurationDescriptionRunConfigurationDescription runConfigurationDescription) {
    this.runConfigurationDescription = runConfigurationDescription;
  }


  public ApplicationDetailApplicationConfigurationDescription flinkApplicationConfigurationDescription(ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription flinkApplicationConfigurationDescription) {
    this.flinkApplicationConfigurationDescription = flinkApplicationConfigurationDescription;
    return this;
  }

  /**
   * Get flinkApplicationConfigurationDescription
   * @return flinkApplicationConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription getFlinkApplicationConfigurationDescription() {
    return flinkApplicationConfigurationDescription;
  }

  public void setFlinkApplicationConfigurationDescription(ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription flinkApplicationConfigurationDescription) {
    this.flinkApplicationConfigurationDescription = flinkApplicationConfigurationDescription;
  }


  public ApplicationDetailApplicationConfigurationDescription environmentPropertyDescriptions(ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions environmentPropertyDescriptions) {
    this.environmentPropertyDescriptions = environmentPropertyDescriptions;
    return this;
  }

  /**
   * Get environmentPropertyDescriptions
   * @return environmentPropertyDescriptions
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions getEnvironmentPropertyDescriptions() {
    return environmentPropertyDescriptions;
  }

  public void setEnvironmentPropertyDescriptions(ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions environmentPropertyDescriptions) {
    this.environmentPropertyDescriptions = environmentPropertyDescriptions;
  }


  public ApplicationDetailApplicationConfigurationDescription applicationSnapshotConfigurationDescription(ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription applicationSnapshotConfigurationDescription) {
    this.applicationSnapshotConfigurationDescription = applicationSnapshotConfigurationDescription;
    return this;
  }

  /**
   * Get applicationSnapshotConfigurationDescription
   * @return applicationSnapshotConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription getApplicationSnapshotConfigurationDescription() {
    return applicationSnapshotConfigurationDescription;
  }

  public void setApplicationSnapshotConfigurationDescription(ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription applicationSnapshotConfigurationDescription) {
    this.applicationSnapshotConfigurationDescription = applicationSnapshotConfigurationDescription;
  }


  public ApplicationDetailApplicationConfigurationDescription vpcConfigurationDescriptions(List vpcConfigurationDescriptions) {
    this.vpcConfigurationDescriptions = vpcConfigurationDescriptions;
    return this;
  }

  /**
   * Get vpcConfigurationDescriptions
   * @return vpcConfigurationDescriptions
   */
  @javax.annotation.Nullable
  public List getVpcConfigurationDescriptions() {
    return vpcConfigurationDescriptions;
  }

  public void setVpcConfigurationDescriptions(List vpcConfigurationDescriptions) {
    this.vpcConfigurationDescriptions = vpcConfigurationDescriptions;
  }


  public ApplicationDetailApplicationConfigurationDescription zeppelinApplicationConfigurationDescription(ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription zeppelinApplicationConfigurationDescription) {
    this.zeppelinApplicationConfigurationDescription = zeppelinApplicationConfigurationDescription;
    return this;
  }

  /**
   * Get zeppelinApplicationConfigurationDescription
   * @return zeppelinApplicationConfigurationDescription
   */
  @javax.annotation.Nullable
  public ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription getZeppelinApplicationConfigurationDescription() {
    return zeppelinApplicationConfigurationDescription;
  }

  public void setZeppelinApplicationConfigurationDescription(ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription zeppelinApplicationConfigurationDescription) {
    this.zeppelinApplicationConfigurationDescription = zeppelinApplicationConfigurationDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationDetailApplicationConfigurationDescription applicationDetailApplicationConfigurationDescription = (ApplicationDetailApplicationConfigurationDescription) o;
    return Objects.equals(this.sqlApplicationConfigurationDescription, applicationDetailApplicationConfigurationDescription.sqlApplicationConfigurationDescription) &&
        Objects.equals(this.applicationCodeConfigurationDescription, applicationDetailApplicationConfigurationDescription.applicationCodeConfigurationDescription) &&
        Objects.equals(this.runConfigurationDescription, applicationDetailApplicationConfigurationDescription.runConfigurationDescription) &&
        Objects.equals(this.flinkApplicationConfigurationDescription, applicationDetailApplicationConfigurationDescription.flinkApplicationConfigurationDescription) &&
        Objects.equals(this.environmentPropertyDescriptions, applicationDetailApplicationConfigurationDescription.environmentPropertyDescriptions) &&
        Objects.equals(this.applicationSnapshotConfigurationDescription, applicationDetailApplicationConfigurationDescription.applicationSnapshotConfigurationDescription) &&
        Objects.equals(this.vpcConfigurationDescriptions, applicationDetailApplicationConfigurationDescription.vpcConfigurationDescriptions) &&
        Objects.equals(this.zeppelinApplicationConfigurationDescription, applicationDetailApplicationConfigurationDescription.zeppelinApplicationConfigurationDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sqlApplicationConfigurationDescription, applicationCodeConfigurationDescription, runConfigurationDescription, flinkApplicationConfigurationDescription, environmentPropertyDescriptions, applicationSnapshotConfigurationDescription, vpcConfigurationDescriptions, zeppelinApplicationConfigurationDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationDetailApplicationConfigurationDescription {\n");
    sb.append("    sqlApplicationConfigurationDescription: ").append(toIndentedString(sqlApplicationConfigurationDescription)).append("\n");
    sb.append("    applicationCodeConfigurationDescription: ").append(toIndentedString(applicationCodeConfigurationDescription)).append("\n");
    sb.append("    runConfigurationDescription: ").append(toIndentedString(runConfigurationDescription)).append("\n");
    sb.append("    flinkApplicationConfigurationDescription: ").append(toIndentedString(flinkApplicationConfigurationDescription)).append("\n");
    sb.append("    environmentPropertyDescriptions: ").append(toIndentedString(environmentPropertyDescriptions)).append("\n");
    sb.append("    applicationSnapshotConfigurationDescription: ").append(toIndentedString(applicationSnapshotConfigurationDescription)).append("\n");
    sb.append("    vpcConfigurationDescriptions: ").append(toIndentedString(vpcConfigurationDescriptions)).append("\n");
    sb.append("    zeppelinApplicationConfigurationDescription: ").append(toIndentedString(zeppelinApplicationConfigurationDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SqlApplicationConfigurationDescription");
    openapiFields.add("ApplicationCodeConfigurationDescription");
    openapiFields.add("RunConfigurationDescription");
    openapiFields.add("FlinkApplicationConfigurationDescription");
    openapiFields.add("EnvironmentPropertyDescriptions");
    openapiFields.add("ApplicationSnapshotConfigurationDescription");
    openapiFields.add("VpcConfigurationDescriptions");
    openapiFields.add("ZeppelinApplicationConfigurationDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApplicationDetailApplicationConfigurationDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApplicationDetailApplicationConfigurationDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationDetailApplicationConfigurationDescription is not found in the empty JSON string", ApplicationDetailApplicationConfigurationDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApplicationDetailApplicationConfigurationDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationDetailApplicationConfigurationDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SqlApplicationConfigurationDescription`
      if (jsonObj.get("SqlApplicationConfigurationDescription") != null && !jsonObj.get("SqlApplicationConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription.validateJsonElement(jsonObj.get("SqlApplicationConfigurationDescription"));
      }
      // validate the optional field `ApplicationCodeConfigurationDescription`
      if (jsonObj.get("ApplicationCodeConfigurationDescription") != null && !jsonObj.get("ApplicationCodeConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription.validateJsonElement(jsonObj.get("ApplicationCodeConfigurationDescription"));
      }
      // validate the optional field `RunConfigurationDescription`
      if (jsonObj.get("RunConfigurationDescription") != null && !jsonObj.get("RunConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionRunConfigurationDescription.validateJsonElement(jsonObj.get("RunConfigurationDescription"));
      }
      // validate the optional field `FlinkApplicationConfigurationDescription`
      if (jsonObj.get("FlinkApplicationConfigurationDescription") != null && !jsonObj.get("FlinkApplicationConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription.validateJsonElement(jsonObj.get("FlinkApplicationConfigurationDescription"));
      }
      // validate the optional field `EnvironmentPropertyDescriptions`
      if (jsonObj.get("EnvironmentPropertyDescriptions") != null && !jsonObj.get("EnvironmentPropertyDescriptions").isJsonNull()) {
        ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions.validateJsonElement(jsonObj.get("EnvironmentPropertyDescriptions"));
      }
      // validate the optional field `ApplicationSnapshotConfigurationDescription`
      if (jsonObj.get("ApplicationSnapshotConfigurationDescription") != null && !jsonObj.get("ApplicationSnapshotConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription.validateJsonElement(jsonObj.get("ApplicationSnapshotConfigurationDescription"));
      }
      // validate the optional field `VpcConfigurationDescriptions`
      if (jsonObj.get("VpcConfigurationDescriptions") != null && !jsonObj.get("VpcConfigurationDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcConfigurationDescriptions"));
      }
      // validate the optional field `ZeppelinApplicationConfigurationDescription`
      if (jsonObj.get("ZeppelinApplicationConfigurationDescription") != null && !jsonObj.get("ZeppelinApplicationConfigurationDescription").isJsonNull()) {
        ApplicationConfigurationDescriptionZeppelinApplicationConfigurationDescription.validateJsonElement(jsonObj.get("ZeppelinApplicationConfigurationDescription"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationDetailApplicationConfigurationDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationDetailApplicationConfigurationDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationDetailApplicationConfigurationDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationDetailApplicationConfigurationDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationDetailApplicationConfigurationDescription>() {
           @Override
           public void write(JsonWriter out, ApplicationDetailApplicationConfigurationDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationDetailApplicationConfigurationDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApplicationDetailApplicationConfigurationDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApplicationDetailApplicationConfigurationDescription
   * @throws IOException if the JSON string is invalid with respect to ApplicationDetailApplicationConfigurationDescription
   */
  public static ApplicationDetailApplicationConfigurationDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationDetailApplicationConfigurationDescription.class);
  }

  /**
   * Convert an instance of ApplicationDetailApplicationConfigurationDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

