/**
 * Amazon Kinesis Analytics
 * Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time series analytics, feed real-time dashboards, and create real-time metrics.
 *
 * The version of the OpenAPI document: 2018-05-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonKinesisAnalytics);
  }
}(this, function(expect, AmazonKinesisAnalytics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApplicationConfigurationUpdate', function() {
    it('should create an instance of ApplicationConfigurationUpdate', function() {
      // uncomment below and update the code to test ApplicationConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be.a(AmazonKinesisAnalytics.ApplicationConfigurationUpdate);
    });

    it('should have the property sqlApplicationConfigurationUpdate (base name: "SqlApplicationConfigurationUpdate")', function() {
      // uncomment below and update the code to test the property sqlApplicationConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property applicationCodeConfigurationUpdate (base name: "ApplicationCodeConfigurationUpdate")', function() {
      // uncomment below and update the code to test the property applicationCodeConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property flinkApplicationConfigurationUpdate (base name: "FlinkApplicationConfigurationUpdate")', function() {
      // uncomment below and update the code to test the property flinkApplicationConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property environmentPropertyUpdates (base name: "EnvironmentPropertyUpdates")', function() {
      // uncomment below and update the code to test the property environmentPropertyUpdates
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property applicationSnapshotConfigurationUpdate (base name: "ApplicationSnapshotConfigurationUpdate")', function() {
      // uncomment below and update the code to test the property applicationSnapshotConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property vpcConfigurationUpdates (base name: "VpcConfigurationUpdates")', function() {
      // uncomment below and update the code to test the property vpcConfigurationUpdates
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

    it('should have the property zeppelinApplicationConfigurationUpdate (base name: "ZeppelinApplicationConfigurationUpdate")', function() {
      // uncomment below and update the code to test the property zeppelinApplicationConfigurationUpdate
      //var instance = new AmazonKinesisAnalytics.ApplicationConfigurationUpdate();
      //expect(instance).to.be();
    });

  });

}));
