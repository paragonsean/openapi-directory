/**
 * Amazon Security Lake
 * <p>Amazon Security Lake is a fully managed security data lake service. You can use Security Lake to automatically centralize security data from cloud, on-premises, and custom sources into a data lake that's stored in your Amazon Web Services account. Amazon Web Services Organizations is an account management service that lets you consolidate multiple Amazon Web Services accounts into an organization that you create and centrally manage. With Organizations, you can create member accounts and invite existing accounts to join your organization. Security Lake helps you analyze security data for a more complete understanding of your security posture across the entire organization. It can also help you improve the protection of your workloads, applications, and data.</p> <p>The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and you retain ownership over your data.</p> <p>Amazon Security Lake integrates with CloudTrail, a service that provides a record of actions taken by a user, role, or an Amazon Web Services service. In Security Lake, CloudTrail captures API calls for Security Lake as events. The calls captured include calls from the Security Lake console and code calls to the Security Lake API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Security Lake. If you don't configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail you can determine the request that was made to Security Lake, the IP address from which the request was made, who made the request, when it was made, and additional details. To learn more about Security Lake information in CloudTrail, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html\">Amazon Security Lake User Guide</a>.</p> <p>Security Lake automates the collection of security-related log and event data from integrated Amazon Web Services and third-party services. It also helps you manage the lifecycle of data with customizable retention and replication settings. Security Lake converts ingested data into Apache Parquet format and a standard open-source schema called the Open Cybersecurity Schema Framework (OCSF).</p> <p>Other Amazon Web Services and third-party services can subscribe to the data that's stored in Security Lake for incident response and security data analytics.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessType from './model/AccessType';
import AwsIdentity from './model/AwsIdentity';
import AwsLogSourceConfiguration from './model/AwsLogSourceConfiguration';
import AwsLogSourceName from './model/AwsLogSourceName';
import AwsLogSourceResource from './model/AwsLogSourceResource';
import CreateAwsLogSourceRequest from './model/CreateAwsLogSourceRequest';
import CreateAwsLogSourceResponse from './model/CreateAwsLogSourceResponse';
import CreateCustomLogSourceRequest from './model/CreateCustomLogSourceRequest';
import CreateCustomLogSourceRequestConfiguration from './model/CreateCustomLogSourceRequestConfiguration';
import CreateCustomLogSourceRequestConfigurationCrawlerConfiguration from './model/CreateCustomLogSourceRequestConfigurationCrawlerConfiguration';
import CreateCustomLogSourceRequestConfigurationProviderIdentity from './model/CreateCustomLogSourceRequestConfigurationProviderIdentity';
import CreateCustomLogSourceResponse from './model/CreateCustomLogSourceResponse';
import CreateCustomLogSourceResponseSource from './model/CreateCustomLogSourceResponseSource';
import CreateDataLakeExceptionSubscriptionRequest from './model/CreateDataLakeExceptionSubscriptionRequest';
import CreateDataLakeOrganizationConfigurationRequest from './model/CreateDataLakeOrganizationConfigurationRequest';
import CreateDataLakeRequest from './model/CreateDataLakeRequest';
import CreateDataLakeResponse from './model/CreateDataLakeResponse';
import CreateSubscriberNotificationRequest from './model/CreateSubscriberNotificationRequest';
import CreateSubscriberNotificationRequestConfiguration from './model/CreateSubscriberNotificationRequestConfiguration';
import CreateSubscriberNotificationResponse from './model/CreateSubscriberNotificationResponse';
import CreateSubscriberRequest from './model/CreateSubscriberRequest';
import CreateSubscriberRequestSubscriberIdentity from './model/CreateSubscriberRequestSubscriberIdentity';
import CreateSubscriberResponse from './model/CreateSubscriberResponse';
import CreateSubscriberResponseSubscriber from './model/CreateSubscriberResponseSubscriber';
import CustomLogSourceAttributes from './model/CustomLogSourceAttributes';
import CustomLogSourceConfiguration from './model/CustomLogSourceConfiguration';
import CustomLogSourceCrawlerConfiguration from './model/CustomLogSourceCrawlerConfiguration';
import CustomLogSourceProvider from './model/CustomLogSourceProvider';
import CustomLogSourceResource from './model/CustomLogSourceResource';
import CustomLogSourceResourceAttributes from './model/CustomLogSourceResourceAttributes';
import CustomLogSourceResourceProvider from './model/CustomLogSourceResourceProvider';
import DataLakeAutoEnableNewAccountConfiguration from './model/DataLakeAutoEnableNewAccountConfiguration';
import DataLakeConfiguration from './model/DataLakeConfiguration';
import DataLakeConfigurationEncryptionConfiguration from './model/DataLakeConfigurationEncryptionConfiguration';
import DataLakeConfigurationLifecycleConfiguration from './model/DataLakeConfigurationLifecycleConfiguration';
import DataLakeConfigurationReplicationConfiguration from './model/DataLakeConfigurationReplicationConfiguration';
import DataLakeEncryptionConfiguration from './model/DataLakeEncryptionConfiguration';
import DataLakeException from './model/DataLakeException';
import DataLakeLifecycleConfiguration from './model/DataLakeLifecycleConfiguration';
import DataLakeLifecycleConfigurationExpiration from './model/DataLakeLifecycleConfigurationExpiration';
import DataLakeLifecycleExpiration from './model/DataLakeLifecycleExpiration';
import DataLakeLifecycleTransition from './model/DataLakeLifecycleTransition';
import DataLakeReplicationConfiguration from './model/DataLakeReplicationConfiguration';
import DataLakeResource from './model/DataLakeResource';
import DataLakeResourceUpdateStatus from './model/DataLakeResourceUpdateStatus';
import DataLakeSource from './model/DataLakeSource';
import DataLakeSourceStatus from './model/DataLakeSourceStatus';
import DataLakeStatus from './model/DataLakeStatus';
import DataLakeUpdateException from './model/DataLakeUpdateException';
import DataLakeUpdateStatus from './model/DataLakeUpdateStatus';
import DataLakeUpdateStatusException from './model/DataLakeUpdateStatusException';
import DeleteAwsLogSourceRequest from './model/DeleteAwsLogSourceRequest';
import DeleteAwsLogSourceResponse from './model/DeleteAwsLogSourceResponse';
import DeleteDataLakeOrganizationConfigurationRequest from './model/DeleteDataLakeOrganizationConfigurationRequest';
import DeleteDataLakeRequest from './model/DeleteDataLakeRequest';
import GetDataLakeExceptionSubscriptionResponse from './model/GetDataLakeExceptionSubscriptionResponse';
import GetDataLakeOrganizationConfigurationResponse from './model/GetDataLakeOrganizationConfigurationResponse';
import GetDataLakeSourcesRequest from './model/GetDataLakeSourcesRequest';
import GetDataLakeSourcesResponse from './model/GetDataLakeSourcesResponse';
import GetSubscriberResponse from './model/GetSubscriberResponse';
import GetSubscriberResponseSubscriber from './model/GetSubscriberResponseSubscriber';
import HttpMethod from './model/HttpMethod';
import HttpsNotificationConfiguration from './model/HttpsNotificationConfiguration';
import ListDataLakeExceptionsRequest from './model/ListDataLakeExceptionsRequest';
import ListDataLakeExceptionsResponse from './model/ListDataLakeExceptionsResponse';
import ListDataLakesResponse from './model/ListDataLakesResponse';
import ListLogSourcesRequest from './model/ListLogSourcesRequest';
import ListLogSourcesResponse from './model/ListLogSourcesResponse';
import ListSubscribersResponse from './model/ListSubscribersResponse';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import LogSource from './model/LogSource';
import LogSourceResource from './model/LogSourceResource';
import LogSourceResourceAwsLogSource from './model/LogSourceResourceAwsLogSource';
import LogSourceResourceCustomLogSource from './model/LogSourceResourceCustomLogSource';
import NotificationConfiguration from './model/NotificationConfiguration';
import RegisterDataLakeDelegatedAdministratorRequest from './model/RegisterDataLakeDelegatedAdministratorRequest';
import SourceCollectionStatus from './model/SourceCollectionStatus';
import SubscriberResource from './model/SubscriberResource';
import SubscriberStatus from './model/SubscriberStatus';
import Tag from './model/Tag';
import TagResourceRequest from './model/TagResourceRequest';
import UpdateDataLakeExceptionSubscriptionRequest from './model/UpdateDataLakeExceptionSubscriptionRequest';
import UpdateDataLakeRequest from './model/UpdateDataLakeRequest';
import UpdateDataLakeResponse from './model/UpdateDataLakeResponse';
import UpdateSubscriberNotificationRequest from './model/UpdateSubscriberNotificationRequest';
import UpdateSubscriberNotificationRequestConfiguration from './model/UpdateSubscriberNotificationRequestConfiguration';
import UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration from './model/UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration';
import UpdateSubscriberNotificationResponse from './model/UpdateSubscriberNotificationResponse';
import UpdateSubscriberRequest from './model/UpdateSubscriberRequest';
import UpdateSubscriberResponse from './model/UpdateSubscriberResponse';
import UpdateSubscriberResponseSubscriber from './model/UpdateSubscriberResponseSubscriber';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;Amazon Security Lake is a fully managed security data lake service. You can use Security Lake to automatically centralize security data from cloud, on-premises, and custom sources into a data lake that&#39;s stored in your Amazon Web Services account. Amazon Web Services Organizations is an account management service that lets you consolidate multiple Amazon Web Services accounts into an organization that you create and centrally manage. With Organizations, you can create member accounts and invite existing accounts to join your organization. Security Lake helps you analyze security data for a more complete understanding of your security posture across the entire organization. It can also help you improve the protection of your workloads, applications, and data.&lt;/p&gt; &lt;p&gt;The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and you retain ownership over your data.&lt;/p&gt; &lt;p&gt;Amazon Security Lake integrates with CloudTrail, a service that provides a record of actions taken by a user, role, or an Amazon Web Services service. In Security Lake, CloudTrail captures API calls for Security Lake as events. The calls captured include calls from the Security Lake console and code calls to the Security Lake API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Security Lake. If you don&#39;t configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail you can determine the request that was made to Security Lake, the IP address from which the request was made, who made the request, when it was made, and additional details. To learn more about Security Lake information in CloudTrail, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html\&quot;&gt;Amazon Security Lake User Guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Security Lake automates the collection of security-related log and event data from integrated Amazon Web Services and third-party services. It also helps you manage the lifecycle of data with customizable retention and replication settings. Security Lake converts ingested data into Apache Parquet format and a standard open-source schema called the Open Cybersecurity Schema Framework (OCSF).&lt;/p&gt; &lt;p&gt;Other Amazon Web Services and third-party services can subscribe to the data that&#39;s stored in Security Lake for incident response and security data analytics.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonSecurityLake = require('index'); // See note below*.
* var xxxSvc = new AmazonSecurityLake.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonSecurityLake.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonSecurityLake.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonSecurityLake.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-05-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessType model constructor.
     * @property {module:model/AccessType}
     */
    AccessType,

    /**
     * The AwsIdentity model constructor.
     * @property {module:model/AwsIdentity}
     */
    AwsIdentity,

    /**
     * The AwsLogSourceConfiguration model constructor.
     * @property {module:model/AwsLogSourceConfiguration}
     */
    AwsLogSourceConfiguration,

    /**
     * The AwsLogSourceName model constructor.
     * @property {module:model/AwsLogSourceName}
     */
    AwsLogSourceName,

    /**
     * The AwsLogSourceResource model constructor.
     * @property {module:model/AwsLogSourceResource}
     */
    AwsLogSourceResource,

    /**
     * The CreateAwsLogSourceRequest model constructor.
     * @property {module:model/CreateAwsLogSourceRequest}
     */
    CreateAwsLogSourceRequest,

    /**
     * The CreateAwsLogSourceResponse model constructor.
     * @property {module:model/CreateAwsLogSourceResponse}
     */
    CreateAwsLogSourceResponse,

    /**
     * The CreateCustomLogSourceRequest model constructor.
     * @property {module:model/CreateCustomLogSourceRequest}
     */
    CreateCustomLogSourceRequest,

    /**
     * The CreateCustomLogSourceRequestConfiguration model constructor.
     * @property {module:model/CreateCustomLogSourceRequestConfiguration}
     */
    CreateCustomLogSourceRequestConfiguration,

    /**
     * The CreateCustomLogSourceRequestConfigurationCrawlerConfiguration model constructor.
     * @property {module:model/CreateCustomLogSourceRequestConfigurationCrawlerConfiguration}
     */
    CreateCustomLogSourceRequestConfigurationCrawlerConfiguration,

    /**
     * The CreateCustomLogSourceRequestConfigurationProviderIdentity model constructor.
     * @property {module:model/CreateCustomLogSourceRequestConfigurationProviderIdentity}
     */
    CreateCustomLogSourceRequestConfigurationProviderIdentity,

    /**
     * The CreateCustomLogSourceResponse model constructor.
     * @property {module:model/CreateCustomLogSourceResponse}
     */
    CreateCustomLogSourceResponse,

    /**
     * The CreateCustomLogSourceResponseSource model constructor.
     * @property {module:model/CreateCustomLogSourceResponseSource}
     */
    CreateCustomLogSourceResponseSource,

    /**
     * The CreateDataLakeExceptionSubscriptionRequest model constructor.
     * @property {module:model/CreateDataLakeExceptionSubscriptionRequest}
     */
    CreateDataLakeExceptionSubscriptionRequest,

    /**
     * The CreateDataLakeOrganizationConfigurationRequest model constructor.
     * @property {module:model/CreateDataLakeOrganizationConfigurationRequest}
     */
    CreateDataLakeOrganizationConfigurationRequest,

    /**
     * The CreateDataLakeRequest model constructor.
     * @property {module:model/CreateDataLakeRequest}
     */
    CreateDataLakeRequest,

    /**
     * The CreateDataLakeResponse model constructor.
     * @property {module:model/CreateDataLakeResponse}
     */
    CreateDataLakeResponse,

    /**
     * The CreateSubscriberNotificationRequest model constructor.
     * @property {module:model/CreateSubscriberNotificationRequest}
     */
    CreateSubscriberNotificationRequest,

    /**
     * The CreateSubscriberNotificationRequestConfiguration model constructor.
     * @property {module:model/CreateSubscriberNotificationRequestConfiguration}
     */
    CreateSubscriberNotificationRequestConfiguration,

    /**
     * The CreateSubscriberNotificationResponse model constructor.
     * @property {module:model/CreateSubscriberNotificationResponse}
     */
    CreateSubscriberNotificationResponse,

    /**
     * The CreateSubscriberRequest model constructor.
     * @property {module:model/CreateSubscriberRequest}
     */
    CreateSubscriberRequest,

    /**
     * The CreateSubscriberRequestSubscriberIdentity model constructor.
     * @property {module:model/CreateSubscriberRequestSubscriberIdentity}
     */
    CreateSubscriberRequestSubscriberIdentity,

    /**
     * The CreateSubscriberResponse model constructor.
     * @property {module:model/CreateSubscriberResponse}
     */
    CreateSubscriberResponse,

    /**
     * The CreateSubscriberResponseSubscriber model constructor.
     * @property {module:model/CreateSubscriberResponseSubscriber}
     */
    CreateSubscriberResponseSubscriber,

    /**
     * The CustomLogSourceAttributes model constructor.
     * @property {module:model/CustomLogSourceAttributes}
     */
    CustomLogSourceAttributes,

    /**
     * The CustomLogSourceConfiguration model constructor.
     * @property {module:model/CustomLogSourceConfiguration}
     */
    CustomLogSourceConfiguration,

    /**
     * The CustomLogSourceCrawlerConfiguration model constructor.
     * @property {module:model/CustomLogSourceCrawlerConfiguration}
     */
    CustomLogSourceCrawlerConfiguration,

    /**
     * The CustomLogSourceProvider model constructor.
     * @property {module:model/CustomLogSourceProvider}
     */
    CustomLogSourceProvider,

    /**
     * The CustomLogSourceResource model constructor.
     * @property {module:model/CustomLogSourceResource}
     */
    CustomLogSourceResource,

    /**
     * The CustomLogSourceResourceAttributes model constructor.
     * @property {module:model/CustomLogSourceResourceAttributes}
     */
    CustomLogSourceResourceAttributes,

    /**
     * The CustomLogSourceResourceProvider model constructor.
     * @property {module:model/CustomLogSourceResourceProvider}
     */
    CustomLogSourceResourceProvider,

    /**
     * The DataLakeAutoEnableNewAccountConfiguration model constructor.
     * @property {module:model/DataLakeAutoEnableNewAccountConfiguration}
     */
    DataLakeAutoEnableNewAccountConfiguration,

    /**
     * The DataLakeConfiguration model constructor.
     * @property {module:model/DataLakeConfiguration}
     */
    DataLakeConfiguration,

    /**
     * The DataLakeConfigurationEncryptionConfiguration model constructor.
     * @property {module:model/DataLakeConfigurationEncryptionConfiguration}
     */
    DataLakeConfigurationEncryptionConfiguration,

    /**
     * The DataLakeConfigurationLifecycleConfiguration model constructor.
     * @property {module:model/DataLakeConfigurationLifecycleConfiguration}
     */
    DataLakeConfigurationLifecycleConfiguration,

    /**
     * The DataLakeConfigurationReplicationConfiguration model constructor.
     * @property {module:model/DataLakeConfigurationReplicationConfiguration}
     */
    DataLakeConfigurationReplicationConfiguration,

    /**
     * The DataLakeEncryptionConfiguration model constructor.
     * @property {module:model/DataLakeEncryptionConfiguration}
     */
    DataLakeEncryptionConfiguration,

    /**
     * The DataLakeException model constructor.
     * @property {module:model/DataLakeException}
     */
    DataLakeException,

    /**
     * The DataLakeLifecycleConfiguration model constructor.
     * @property {module:model/DataLakeLifecycleConfiguration}
     */
    DataLakeLifecycleConfiguration,

    /**
     * The DataLakeLifecycleConfigurationExpiration model constructor.
     * @property {module:model/DataLakeLifecycleConfigurationExpiration}
     */
    DataLakeLifecycleConfigurationExpiration,

    /**
     * The DataLakeLifecycleExpiration model constructor.
     * @property {module:model/DataLakeLifecycleExpiration}
     */
    DataLakeLifecycleExpiration,

    /**
     * The DataLakeLifecycleTransition model constructor.
     * @property {module:model/DataLakeLifecycleTransition}
     */
    DataLakeLifecycleTransition,

    /**
     * The DataLakeReplicationConfiguration model constructor.
     * @property {module:model/DataLakeReplicationConfiguration}
     */
    DataLakeReplicationConfiguration,

    /**
     * The DataLakeResource model constructor.
     * @property {module:model/DataLakeResource}
     */
    DataLakeResource,

    /**
     * The DataLakeResourceUpdateStatus model constructor.
     * @property {module:model/DataLakeResourceUpdateStatus}
     */
    DataLakeResourceUpdateStatus,

    /**
     * The DataLakeSource model constructor.
     * @property {module:model/DataLakeSource}
     */
    DataLakeSource,

    /**
     * The DataLakeSourceStatus model constructor.
     * @property {module:model/DataLakeSourceStatus}
     */
    DataLakeSourceStatus,

    /**
     * The DataLakeStatus model constructor.
     * @property {module:model/DataLakeStatus}
     */
    DataLakeStatus,

    /**
     * The DataLakeUpdateException model constructor.
     * @property {module:model/DataLakeUpdateException}
     */
    DataLakeUpdateException,

    /**
     * The DataLakeUpdateStatus model constructor.
     * @property {module:model/DataLakeUpdateStatus}
     */
    DataLakeUpdateStatus,

    /**
     * The DataLakeUpdateStatusException model constructor.
     * @property {module:model/DataLakeUpdateStatusException}
     */
    DataLakeUpdateStatusException,

    /**
     * The DeleteAwsLogSourceRequest model constructor.
     * @property {module:model/DeleteAwsLogSourceRequest}
     */
    DeleteAwsLogSourceRequest,

    /**
     * The DeleteAwsLogSourceResponse model constructor.
     * @property {module:model/DeleteAwsLogSourceResponse}
     */
    DeleteAwsLogSourceResponse,

    /**
     * The DeleteDataLakeOrganizationConfigurationRequest model constructor.
     * @property {module:model/DeleteDataLakeOrganizationConfigurationRequest}
     */
    DeleteDataLakeOrganizationConfigurationRequest,

    /**
     * The DeleteDataLakeRequest model constructor.
     * @property {module:model/DeleteDataLakeRequest}
     */
    DeleteDataLakeRequest,

    /**
     * The GetDataLakeExceptionSubscriptionResponse model constructor.
     * @property {module:model/GetDataLakeExceptionSubscriptionResponse}
     */
    GetDataLakeExceptionSubscriptionResponse,

    /**
     * The GetDataLakeOrganizationConfigurationResponse model constructor.
     * @property {module:model/GetDataLakeOrganizationConfigurationResponse}
     */
    GetDataLakeOrganizationConfigurationResponse,

    /**
     * The GetDataLakeSourcesRequest model constructor.
     * @property {module:model/GetDataLakeSourcesRequest}
     */
    GetDataLakeSourcesRequest,

    /**
     * The GetDataLakeSourcesResponse model constructor.
     * @property {module:model/GetDataLakeSourcesResponse}
     */
    GetDataLakeSourcesResponse,

    /**
     * The GetSubscriberResponse model constructor.
     * @property {module:model/GetSubscriberResponse}
     */
    GetSubscriberResponse,

    /**
     * The GetSubscriberResponseSubscriber model constructor.
     * @property {module:model/GetSubscriberResponseSubscriber}
     */
    GetSubscriberResponseSubscriber,

    /**
     * The HttpMethod model constructor.
     * @property {module:model/HttpMethod}
     */
    HttpMethod,

    /**
     * The HttpsNotificationConfiguration model constructor.
     * @property {module:model/HttpsNotificationConfiguration}
     */
    HttpsNotificationConfiguration,

    /**
     * The ListDataLakeExceptionsRequest model constructor.
     * @property {module:model/ListDataLakeExceptionsRequest}
     */
    ListDataLakeExceptionsRequest,

    /**
     * The ListDataLakeExceptionsResponse model constructor.
     * @property {module:model/ListDataLakeExceptionsResponse}
     */
    ListDataLakeExceptionsResponse,

    /**
     * The ListDataLakesResponse model constructor.
     * @property {module:model/ListDataLakesResponse}
     */
    ListDataLakesResponse,

    /**
     * The ListLogSourcesRequest model constructor.
     * @property {module:model/ListLogSourcesRequest}
     */
    ListLogSourcesRequest,

    /**
     * The ListLogSourcesResponse model constructor.
     * @property {module:model/ListLogSourcesResponse}
     */
    ListLogSourcesResponse,

    /**
     * The ListSubscribersResponse model constructor.
     * @property {module:model/ListSubscribersResponse}
     */
    ListSubscribersResponse,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The LogSource model constructor.
     * @property {module:model/LogSource}
     */
    LogSource,

    /**
     * The LogSourceResource model constructor.
     * @property {module:model/LogSourceResource}
     */
    LogSourceResource,

    /**
     * The LogSourceResourceAwsLogSource model constructor.
     * @property {module:model/LogSourceResourceAwsLogSource}
     */
    LogSourceResourceAwsLogSource,

    /**
     * The LogSourceResourceCustomLogSource model constructor.
     * @property {module:model/LogSourceResourceCustomLogSource}
     */
    LogSourceResourceCustomLogSource,

    /**
     * The NotificationConfiguration model constructor.
     * @property {module:model/NotificationConfiguration}
     */
    NotificationConfiguration,

    /**
     * The RegisterDataLakeDelegatedAdministratorRequest model constructor.
     * @property {module:model/RegisterDataLakeDelegatedAdministratorRequest}
     */
    RegisterDataLakeDelegatedAdministratorRequest,

    /**
     * The SourceCollectionStatus model constructor.
     * @property {module:model/SourceCollectionStatus}
     */
    SourceCollectionStatus,

    /**
     * The SubscriberResource model constructor.
     * @property {module:model/SubscriberResource}
     */
    SubscriberResource,

    /**
     * The SubscriberStatus model constructor.
     * @property {module:model/SubscriberStatus}
     */
    SubscriberStatus,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The UpdateDataLakeExceptionSubscriptionRequest model constructor.
     * @property {module:model/UpdateDataLakeExceptionSubscriptionRequest}
     */
    UpdateDataLakeExceptionSubscriptionRequest,

    /**
     * The UpdateDataLakeRequest model constructor.
     * @property {module:model/UpdateDataLakeRequest}
     */
    UpdateDataLakeRequest,

    /**
     * The UpdateDataLakeResponse model constructor.
     * @property {module:model/UpdateDataLakeResponse}
     */
    UpdateDataLakeResponse,

    /**
     * The UpdateSubscriberNotificationRequest model constructor.
     * @property {module:model/UpdateSubscriberNotificationRequest}
     */
    UpdateSubscriberNotificationRequest,

    /**
     * The UpdateSubscriberNotificationRequestConfiguration model constructor.
     * @property {module:model/UpdateSubscriberNotificationRequestConfiguration}
     */
    UpdateSubscriberNotificationRequestConfiguration,

    /**
     * The UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration model constructor.
     * @property {module:model/UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration}
     */
    UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration,

    /**
     * The UpdateSubscriberNotificationResponse model constructor.
     * @property {module:model/UpdateSubscriberNotificationResponse}
     */
    UpdateSubscriberNotificationResponse,

    /**
     * The UpdateSubscriberRequest model constructor.
     * @property {module:model/UpdateSubscriberRequest}
     */
    UpdateSubscriberRequest,

    /**
     * The UpdateSubscriberResponse model constructor.
     * @property {module:model/UpdateSubscriberResponse}
     */
    UpdateSubscriberResponse,

    /**
     * The UpdateSubscriberResponseSubscriber model constructor.
     * @property {module:model/UpdateSubscriberResponseSubscriber}
     */
    UpdateSubscriberResponseSubscriber,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
