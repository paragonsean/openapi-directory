/**
 * Amazon Security Lake
 * <p>Amazon Security Lake is a fully managed security data lake service. You can use Security Lake to automatically centralize security data from cloud, on-premises, and custom sources into a data lake that's stored in your Amazon Web Services account. Amazon Web Services Organizations is an account management service that lets you consolidate multiple Amazon Web Services accounts into an organization that you create and centrally manage. With Organizations, you can create member accounts and invite existing accounts to join your organization. Security Lake helps you analyze security data for a more complete understanding of your security posture across the entire organization. It can also help you improve the protection of your workloads, applications, and data.</p> <p>The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and you retain ownership over your data.</p> <p>Amazon Security Lake integrates with CloudTrail, a service that provides a record of actions taken by a user, role, or an Amazon Web Services service. In Security Lake, CloudTrail captures API calls for Security Lake as events. The calls captured include calls from the Security Lake console and code calls to the Security Lake API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Security Lake. If you don't configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail you can determine the request that was made to Security Lake, the IP address from which the request was made, who made the request, when it was made, and additional details. To learn more about Security Lake information in CloudTrail, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html\">Amazon Security Lake User Guide</a>.</p> <p>Security Lake automates the collection of security-related log and event data from integrated Amazon Web Services and third-party services. It also helps you manage the lifecycle of data with customizable retention and replication settings. Security Lake converts ingested data into Apache Parquet format and a standard open-source schema called the Open Cybersecurity Schema Framework (OCSF).</p> <p>Other Amazon Web Services and third-party services can subscribe to the data that's stored in Security Lake for incident response and security data analytics.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSecurityLake);
  }
}(this, function(expect, AmazonSecurityLake) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetSubscriberResponseSubscriber', function() {
    it('should create an instance of GetSubscriberResponseSubscriber', function() {
      // uncomment below and update the code to test GetSubscriberResponseSubscriber
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be.a(AmazonSecurityLake.GetSubscriberResponseSubscriber);
    });

    it('should have the property accessTypes (base name: "accessTypes")', function() {
      // uncomment below and update the code to test the property accessTypes
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property resourceShareArn (base name: "resourceShareArn")', function() {
      // uncomment below and update the code to test the property resourceShareArn
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property resourceShareName (base name: "resourceShareName")', function() {
      // uncomment below and update the code to test the property resourceShareName
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property roleArn (base name: "roleArn")', function() {
      // uncomment below and update the code to test the property roleArn
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property s3BucketArn (base name: "s3BucketArn")', function() {
      // uncomment below and update the code to test the property s3BucketArn
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberArn (base name: "subscriberArn")', function() {
      // uncomment below and update the code to test the property subscriberArn
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberDescription (base name: "subscriberDescription")', function() {
      // uncomment below and update the code to test the property subscriberDescription
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberEndpoint (base name: "subscriberEndpoint")', function() {
      // uncomment below and update the code to test the property subscriberEndpoint
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberId (base name: "subscriberId")', function() {
      // uncomment below and update the code to test the property subscriberId
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberIdentity (base name: "subscriberIdentity")', function() {
      // uncomment below and update the code to test the property subscriberIdentity
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberName (base name: "subscriberName")', function() {
      // uncomment below and update the code to test the property subscriberName
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property subscriberStatus (base name: "subscriberStatus")', function() {
      // uncomment below and update the code to test the property subscriberStatus
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new AmazonSecurityLake.GetSubscriberResponseSubscriber();
      //expect(instance).to.be();
    });

  });

}));
