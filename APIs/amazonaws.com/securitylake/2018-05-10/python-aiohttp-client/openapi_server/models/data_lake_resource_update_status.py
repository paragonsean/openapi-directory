# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_lake_status import DataLakeStatus
from openapi_server.models.data_lake_update_status_exception import DataLakeUpdateStatusException
from openapi_server import util


class DataLakeResourceUpdateStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exception: DataLakeUpdateStatusException=None, request_id: str=None, status: DataLakeStatus=None):
        """DataLakeResourceUpdateStatus - a model defined in OpenAPI

        :param exception: The exception of this DataLakeResourceUpdateStatus.
        :param request_id: The request_id of this DataLakeResourceUpdateStatus.
        :param status: The status of this DataLakeResourceUpdateStatus.
        """
        self.openapi_types = {
            'exception': DataLakeUpdateStatusException,
            'request_id': str,
            'status': DataLakeStatus
        }

        self.attribute_map = {
            'exception': 'exception',
            'request_id': 'requestId',
            'status': 'status'
        }

        self._exception = exception
        self._request_id = request_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataLakeResourceUpdateStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataLakeResource_updateStatus of this DataLakeResourceUpdateStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exception(self):
        """Gets the exception of this DataLakeResourceUpdateStatus.


        :return: The exception of this DataLakeResourceUpdateStatus.
        :rtype: DataLakeUpdateStatusException
        """
        return self._exception

    @exception.setter
    def exception(self, exception):
        """Sets the exception of this DataLakeResourceUpdateStatus.


        :param exception: The exception of this DataLakeResourceUpdateStatus.
        :type exception: DataLakeUpdateStatusException
        """

        self._exception = exception

    @property
    def request_id(self):
        """Gets the request_id of this DataLakeResourceUpdateStatus.


        :return: The request_id of this DataLakeResourceUpdateStatus.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this DataLakeResourceUpdateStatus.


        :param request_id: The request_id of this DataLakeResourceUpdateStatus.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def status(self):
        """Gets the status of this DataLakeResourceUpdateStatus.


        :return: The status of this DataLakeResourceUpdateStatus.
        :rtype: DataLakeStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataLakeResourceUpdateStatus.


        :param status: The status of this DataLakeResourceUpdateStatus.
        :type status: DataLakeStatus
        """

        self._status = status
