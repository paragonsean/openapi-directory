# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_method import HttpMethod
from openapi_server import util


class UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_api_key_name: str=None, authorization_api_key_value: str=None, endpoint: str=None, http_method: HttpMethod=None, target_role_arn: str=None):
        """UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration - a model defined in OpenAPI

        :param authorization_api_key_name: The authorization_api_key_name of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :param authorization_api_key_value: The authorization_api_key_value of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :param endpoint: The endpoint of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :param http_method: The http_method of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :param target_role_arn: The target_role_arn of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        """
        self.openapi_types = {
            'authorization_api_key_name': str,
            'authorization_api_key_value': str,
            'endpoint': str,
            'http_method': HttpMethod,
            'target_role_arn': str
        }

        self.attribute_map = {
            'authorization_api_key_name': 'authorizationApiKeyName',
            'authorization_api_key_value': 'authorizationApiKeyValue',
            'endpoint': 'endpoint',
            'http_method': 'httpMethod',
            'target_role_arn': 'targetRoleArn'
        }

        self._authorization_api_key_name = authorization_api_key_name
        self._authorization_api_key_value = authorization_api_key_value
        self._endpoint = endpoint
        self._http_method = http_method
        self._target_role_arn = target_role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSubscriberNotification_request_configuration_httpsNotificationConfiguration of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_api_key_name(self):
        """Gets the authorization_api_key_name of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :return: The authorization_api_key_name of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :rtype: str
        """
        return self._authorization_api_key_name

    @authorization_api_key_name.setter
    def authorization_api_key_name(self, authorization_api_key_name):
        """Sets the authorization_api_key_name of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :param authorization_api_key_name: The authorization_api_key_name of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :type authorization_api_key_name: str
        """

        self._authorization_api_key_name = authorization_api_key_name

    @property
    def authorization_api_key_value(self):
        """Gets the authorization_api_key_value of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :return: The authorization_api_key_value of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :rtype: str
        """
        return self._authorization_api_key_value

    @authorization_api_key_value.setter
    def authorization_api_key_value(self, authorization_api_key_value):
        """Sets the authorization_api_key_value of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :param authorization_api_key_value: The authorization_api_key_value of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :type authorization_api_key_value: str
        """

        self._authorization_api_key_value = authorization_api_key_value

    @property
    def endpoint(self):
        """Gets the endpoint of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :return: The endpoint of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :param endpoint: The endpoint of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :type endpoint: str
        """
        if endpoint is None:
            raise ValueError("Invalid value for `endpoint`, must not be `None`")

        self._endpoint = endpoint

    @property
    def http_method(self):
        """Gets the http_method of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :return: The http_method of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :rtype: HttpMethod
        """
        return self._http_method

    @http_method.setter
    def http_method(self, http_method):
        """Sets the http_method of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :param http_method: The http_method of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :type http_method: HttpMethod
        """

        self._http_method = http_method

    @property
    def target_role_arn(self):
        """Gets the target_role_arn of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :return: The target_role_arn of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :rtype: str
        """
        return self._target_role_arn

    @target_role_arn.setter
    def target_role_arn(self, target_role_arn):
        """Sets the target_role_arn of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.


        :param target_role_arn: The target_role_arn of this UpdateSubscriberNotificationRequestConfigurationHttpsNotificationConfiguration.
        :type target_role_arn: str
        """
        if target_role_arn is None:
            raise ValueError("Invalid value for `target_role_arn`, must not be `None`")

        self._target_role_arn = target_role_arn
