# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_subscriber_request_subscriber_identity import CreateSubscriberRequestSubscriberIdentity
from openapi_server.models.subscriber_status import SubscriberStatus
from openapi_server import util


class CreateSubscriberResponseSubscriber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_types: List=None, created_at: datetime=None, resource_share_arn: str=None, resource_share_name: str=None, role_arn: str=None, s3_bucket_arn: str=None, sources: List=None, subscriber_arn: str=None, subscriber_description: str=None, subscriber_endpoint: str=None, subscriber_id: str=None, subscriber_identity: CreateSubscriberRequestSubscriberIdentity=None, subscriber_name: str=None, subscriber_status: SubscriberStatus=None, updated_at: datetime=None):
        """CreateSubscriberResponseSubscriber - a model defined in OpenAPI

        :param access_types: The access_types of this CreateSubscriberResponseSubscriber.
        :param created_at: The created_at of this CreateSubscriberResponseSubscriber.
        :param resource_share_arn: The resource_share_arn of this CreateSubscriberResponseSubscriber.
        :param resource_share_name: The resource_share_name of this CreateSubscriberResponseSubscriber.
        :param role_arn: The role_arn of this CreateSubscriberResponseSubscriber.
        :param s3_bucket_arn: The s3_bucket_arn of this CreateSubscriberResponseSubscriber.
        :param sources: The sources of this CreateSubscriberResponseSubscriber.
        :param subscriber_arn: The subscriber_arn of this CreateSubscriberResponseSubscriber.
        :param subscriber_description: The subscriber_description of this CreateSubscriberResponseSubscriber.
        :param subscriber_endpoint: The subscriber_endpoint of this CreateSubscriberResponseSubscriber.
        :param subscriber_id: The subscriber_id of this CreateSubscriberResponseSubscriber.
        :param subscriber_identity: The subscriber_identity of this CreateSubscriberResponseSubscriber.
        :param subscriber_name: The subscriber_name of this CreateSubscriberResponseSubscriber.
        :param subscriber_status: The subscriber_status of this CreateSubscriberResponseSubscriber.
        :param updated_at: The updated_at of this CreateSubscriberResponseSubscriber.
        """
        self.openapi_types = {
            'access_types': List,
            'created_at': datetime,
            'resource_share_arn': str,
            'resource_share_name': str,
            'role_arn': str,
            's3_bucket_arn': str,
            'sources': List,
            'subscriber_arn': str,
            'subscriber_description': str,
            'subscriber_endpoint': str,
            'subscriber_id': str,
            'subscriber_identity': CreateSubscriberRequestSubscriberIdentity,
            'subscriber_name': str,
            'subscriber_status': SubscriberStatus,
            'updated_at': datetime
        }

        self.attribute_map = {
            'access_types': 'accessTypes',
            'created_at': 'createdAt',
            'resource_share_arn': 'resourceShareArn',
            'resource_share_name': 'resourceShareName',
            'role_arn': 'roleArn',
            's3_bucket_arn': 's3BucketArn',
            'sources': 'sources',
            'subscriber_arn': 'subscriberArn',
            'subscriber_description': 'subscriberDescription',
            'subscriber_endpoint': 'subscriberEndpoint',
            'subscriber_id': 'subscriberId',
            'subscriber_identity': 'subscriberIdentity',
            'subscriber_name': 'subscriberName',
            'subscriber_status': 'subscriberStatus',
            'updated_at': 'updatedAt'
        }

        self._access_types = access_types
        self._created_at = created_at
        self._resource_share_arn = resource_share_arn
        self._resource_share_name = resource_share_name
        self._role_arn = role_arn
        self._s3_bucket_arn = s3_bucket_arn
        self._sources = sources
        self._subscriber_arn = subscriber_arn
        self._subscriber_description = subscriber_description
        self._subscriber_endpoint = subscriber_endpoint
        self._subscriber_id = subscriber_id
        self._subscriber_identity = subscriber_identity
        self._subscriber_name = subscriber_name
        self._subscriber_status = subscriber_status
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSubscriberResponseSubscriber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSubscriberResponse_subscriber of this CreateSubscriberResponseSubscriber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_types(self):
        """Gets the access_types of this CreateSubscriberResponseSubscriber.


        :return: The access_types of this CreateSubscriberResponseSubscriber.
        :rtype: List
        """
        return self._access_types

    @access_types.setter
    def access_types(self, access_types):
        """Sets the access_types of this CreateSubscriberResponseSubscriber.


        :param access_types: The access_types of this CreateSubscriberResponseSubscriber.
        :type access_types: List
        """

        self._access_types = access_types

    @property
    def created_at(self):
        """Gets the created_at of this CreateSubscriberResponseSubscriber.


        :return: The created_at of this CreateSubscriberResponseSubscriber.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateSubscriberResponseSubscriber.


        :param created_at: The created_at of this CreateSubscriberResponseSubscriber.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def resource_share_arn(self):
        """Gets the resource_share_arn of this CreateSubscriberResponseSubscriber.


        :return: The resource_share_arn of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._resource_share_arn

    @resource_share_arn.setter
    def resource_share_arn(self, resource_share_arn):
        """Sets the resource_share_arn of this CreateSubscriberResponseSubscriber.


        :param resource_share_arn: The resource_share_arn of this CreateSubscriberResponseSubscriber.
        :type resource_share_arn: str
        """

        self._resource_share_arn = resource_share_arn

    @property
    def resource_share_name(self):
        """Gets the resource_share_name of this CreateSubscriberResponseSubscriber.


        :return: The resource_share_name of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._resource_share_name

    @resource_share_name.setter
    def resource_share_name(self, resource_share_name):
        """Sets the resource_share_name of this CreateSubscriberResponseSubscriber.


        :param resource_share_name: The resource_share_name of this CreateSubscriberResponseSubscriber.
        :type resource_share_name: str
        """

        self._resource_share_name = resource_share_name

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateSubscriberResponseSubscriber.


        :return: The role_arn of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateSubscriberResponseSubscriber.


        :param role_arn: The role_arn of this CreateSubscriberResponseSubscriber.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def s3_bucket_arn(self):
        """Gets the s3_bucket_arn of this CreateSubscriberResponseSubscriber.


        :return: The s3_bucket_arn of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._s3_bucket_arn

    @s3_bucket_arn.setter
    def s3_bucket_arn(self, s3_bucket_arn):
        """Sets the s3_bucket_arn of this CreateSubscriberResponseSubscriber.


        :param s3_bucket_arn: The s3_bucket_arn of this CreateSubscriberResponseSubscriber.
        :type s3_bucket_arn: str
        """

        self._s3_bucket_arn = s3_bucket_arn

    @property
    def sources(self):
        """Gets the sources of this CreateSubscriberResponseSubscriber.


        :return: The sources of this CreateSubscriberResponseSubscriber.
        :rtype: List
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this CreateSubscriberResponseSubscriber.


        :param sources: The sources of this CreateSubscriberResponseSubscriber.
        :type sources: List
        """
        if sources is None:
            raise ValueError("Invalid value for `sources`, must not be `None`")

        self._sources = sources

    @property
    def subscriber_arn(self):
        """Gets the subscriber_arn of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_arn of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._subscriber_arn

    @subscriber_arn.setter
    def subscriber_arn(self, subscriber_arn):
        """Sets the subscriber_arn of this CreateSubscriberResponseSubscriber.


        :param subscriber_arn: The subscriber_arn of this CreateSubscriberResponseSubscriber.
        :type subscriber_arn: str
        """
        if subscriber_arn is None:
            raise ValueError("Invalid value for `subscriber_arn`, must not be `None`")

        self._subscriber_arn = subscriber_arn

    @property
    def subscriber_description(self):
        """Gets the subscriber_description of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_description of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._subscriber_description

    @subscriber_description.setter
    def subscriber_description(self, subscriber_description):
        """Sets the subscriber_description of this CreateSubscriberResponseSubscriber.


        :param subscriber_description: The subscriber_description of this CreateSubscriberResponseSubscriber.
        :type subscriber_description: str
        """

        self._subscriber_description = subscriber_description

    @property
    def subscriber_endpoint(self):
        """Gets the subscriber_endpoint of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_endpoint of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._subscriber_endpoint

    @subscriber_endpoint.setter
    def subscriber_endpoint(self, subscriber_endpoint):
        """Sets the subscriber_endpoint of this CreateSubscriberResponseSubscriber.


        :param subscriber_endpoint: The subscriber_endpoint of this CreateSubscriberResponseSubscriber.
        :type subscriber_endpoint: str
        """

        self._subscriber_endpoint = subscriber_endpoint

    @property
    def subscriber_id(self):
        """Gets the subscriber_id of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_id of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._subscriber_id

    @subscriber_id.setter
    def subscriber_id(self, subscriber_id):
        """Sets the subscriber_id of this CreateSubscriberResponseSubscriber.


        :param subscriber_id: The subscriber_id of this CreateSubscriberResponseSubscriber.
        :type subscriber_id: str
        """
        if subscriber_id is None:
            raise ValueError("Invalid value for `subscriber_id`, must not be `None`")

        self._subscriber_id = subscriber_id

    @property
    def subscriber_identity(self):
        """Gets the subscriber_identity of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_identity of this CreateSubscriberResponseSubscriber.
        :rtype: CreateSubscriberRequestSubscriberIdentity
        """
        return self._subscriber_identity

    @subscriber_identity.setter
    def subscriber_identity(self, subscriber_identity):
        """Sets the subscriber_identity of this CreateSubscriberResponseSubscriber.


        :param subscriber_identity: The subscriber_identity of this CreateSubscriberResponseSubscriber.
        :type subscriber_identity: CreateSubscriberRequestSubscriberIdentity
        """
        if subscriber_identity is None:
            raise ValueError("Invalid value for `subscriber_identity`, must not be `None`")

        self._subscriber_identity = subscriber_identity

    @property
    def subscriber_name(self):
        """Gets the subscriber_name of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_name of this CreateSubscriberResponseSubscriber.
        :rtype: str
        """
        return self._subscriber_name

    @subscriber_name.setter
    def subscriber_name(self, subscriber_name):
        """Sets the subscriber_name of this CreateSubscriberResponseSubscriber.


        :param subscriber_name: The subscriber_name of this CreateSubscriberResponseSubscriber.
        :type subscriber_name: str
        """
        if subscriber_name is None:
            raise ValueError("Invalid value for `subscriber_name`, must not be `None`")

        self._subscriber_name = subscriber_name

    @property
    def subscriber_status(self):
        """Gets the subscriber_status of this CreateSubscriberResponseSubscriber.


        :return: The subscriber_status of this CreateSubscriberResponseSubscriber.
        :rtype: SubscriberStatus
        """
        return self._subscriber_status

    @subscriber_status.setter
    def subscriber_status(self, subscriber_status):
        """Sets the subscriber_status of this CreateSubscriberResponseSubscriber.


        :param subscriber_status: The subscriber_status of this CreateSubscriberResponseSubscriber.
        :type subscriber_status: SubscriberStatus
        """

        self._subscriber_status = subscriber_status

    @property
    def updated_at(self):
        """Gets the updated_at of this CreateSubscriberResponseSubscriber.


        :return: The updated_at of this CreateSubscriberResponseSubscriber.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CreateSubscriberResponseSubscriber.


        :param updated_at: The updated_at of this CreateSubscriberResponseSubscriber.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
