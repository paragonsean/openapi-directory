# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_log_source_resource_attributes import CustomLogSourceResourceAttributes
from openapi_server.models.custom_log_source_resource_provider import CustomLogSourceResourceProvider
from openapi_server import util


class CreateCustomLogSourceResponseSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: CustomLogSourceResourceAttributes=None, provider: CustomLogSourceResourceProvider=None, source_name: str=None, source_version: str=None):
        """CreateCustomLogSourceResponseSource - a model defined in OpenAPI

        :param attributes: The attributes of this CreateCustomLogSourceResponseSource.
        :param provider: The provider of this CreateCustomLogSourceResponseSource.
        :param source_name: The source_name of this CreateCustomLogSourceResponseSource.
        :param source_version: The source_version of this CreateCustomLogSourceResponseSource.
        """
        self.openapi_types = {
            'attributes': CustomLogSourceResourceAttributes,
            'provider': CustomLogSourceResourceProvider,
            'source_name': str,
            'source_version': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'provider': 'provider',
            'source_name': 'sourceName',
            'source_version': 'sourceVersion'
        }

        self._attributes = attributes
        self._provider = provider
        self._source_name = source_name
        self._source_version = source_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCustomLogSourceResponseSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCustomLogSourceResponse_source of this CreateCustomLogSourceResponseSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this CreateCustomLogSourceResponseSource.


        :return: The attributes of this CreateCustomLogSourceResponseSource.
        :rtype: CustomLogSourceResourceAttributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this CreateCustomLogSourceResponseSource.


        :param attributes: The attributes of this CreateCustomLogSourceResponseSource.
        :type attributes: CustomLogSourceResourceAttributes
        """

        self._attributes = attributes

    @property
    def provider(self):
        """Gets the provider of this CreateCustomLogSourceResponseSource.


        :return: The provider of this CreateCustomLogSourceResponseSource.
        :rtype: CustomLogSourceResourceProvider
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this CreateCustomLogSourceResponseSource.


        :param provider: The provider of this CreateCustomLogSourceResponseSource.
        :type provider: CustomLogSourceResourceProvider
        """

        self._provider = provider

    @property
    def source_name(self):
        """Gets the source_name of this CreateCustomLogSourceResponseSource.


        :return: The source_name of this CreateCustomLogSourceResponseSource.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this CreateCustomLogSourceResponseSource.


        :param source_name: The source_name of this CreateCustomLogSourceResponseSource.
        :type source_name: str
        """

        self._source_name = source_name

    @property
    def source_version(self):
        """Gets the source_version of this CreateCustomLogSourceResponseSource.


        :return: The source_version of this CreateCustomLogSourceResponseSource.
        :rtype: str
        """
        return self._source_version

    @source_version.setter
    def source_version(self, source_version):
        """Sets the source_version of this CreateCustomLogSourceResponseSource.


        :param source_version: The source_version of this CreateCustomLogSourceResponseSource.
        :type source_version: str
        """

        self._source_version = source_version
