# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_lake_lifecycle_configuration_expiration import DataLakeLifecycleConfigurationExpiration
from openapi_server import util


class DataLakeConfigurationLifecycleConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration: DataLakeLifecycleConfigurationExpiration=None, transitions: List=None):
        """DataLakeConfigurationLifecycleConfiguration - a model defined in OpenAPI

        :param expiration: The expiration of this DataLakeConfigurationLifecycleConfiguration.
        :param transitions: The transitions of this DataLakeConfigurationLifecycleConfiguration.
        """
        self.openapi_types = {
            'expiration': DataLakeLifecycleConfigurationExpiration,
            'transitions': List
        }

        self.attribute_map = {
            'expiration': 'expiration',
            'transitions': 'transitions'
        }

        self._expiration = expiration
        self._transitions = transitions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataLakeConfigurationLifecycleConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataLakeConfiguration_lifecycleConfiguration of this DataLakeConfigurationLifecycleConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration(self):
        """Gets the expiration of this DataLakeConfigurationLifecycleConfiguration.


        :return: The expiration of this DataLakeConfigurationLifecycleConfiguration.
        :rtype: DataLakeLifecycleConfigurationExpiration
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this DataLakeConfigurationLifecycleConfiguration.


        :param expiration: The expiration of this DataLakeConfigurationLifecycleConfiguration.
        :type expiration: DataLakeLifecycleConfigurationExpiration
        """

        self._expiration = expiration

    @property
    def transitions(self):
        """Gets the transitions of this DataLakeConfigurationLifecycleConfiguration.


        :return: The transitions of this DataLakeConfigurationLifecycleConfiguration.
        :rtype: List
        """
        return self._transitions

    @transitions.setter
    def transitions(self, transitions):
        """Sets the transitions of this DataLakeConfigurationLifecycleConfiguration.


        :param transitions: The transitions of this DataLakeConfigurationLifecycleConfiguration.
        :type transitions: List
        """

        self._transitions = transitions
