# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataLakeLifecycleExpiration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days: int=None):
        """DataLakeLifecycleExpiration - a model defined in OpenAPI

        :param days: The days of this DataLakeLifecycleExpiration.
        """
        self.openapi_types = {
            'days': int
        }

        self.attribute_map = {
            'days': 'days'
        }

        self._days = days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataLakeLifecycleExpiration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataLakeLifecycleExpiration of this DataLakeLifecycleExpiration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days(self):
        """Gets the days of this DataLakeLifecycleExpiration.


        :return: The days of this DataLakeLifecycleExpiration.
        :rtype: int
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this DataLakeLifecycleExpiration.


        :param days: The days of this DataLakeLifecycleExpiration.
        :type days: int
        """

        self._days = days
