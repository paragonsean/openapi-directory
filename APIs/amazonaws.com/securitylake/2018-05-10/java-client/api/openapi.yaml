openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon Security Lake is a fully managed security data lake service.\
    \ You can use Security Lake to automatically centralize security data from cloud,\
    \ on-premises, and custom sources into a data lake that's stored in your Amazon\
    \ Web Services account. Amazon Web Services Organizations is an account management\
    \ service that lets you consolidate multiple Amazon Web Services accounts into\
    \ an organization that you create and centrally manage. With Organizations, you\
    \ can create member accounts and invite existing accounts to join your organization.\
    \ Security Lake helps you analyze security data for a more complete understanding\
    \ of your security posture across the entire organization. It can also help you\
    \ improve the protection of your workloads, applications, and data.</p> <p>The\
    \ data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and\
    \ you retain ownership over your data.</p> <p>Amazon Security Lake integrates\
    \ with CloudTrail, a service that provides a record of actions taken by a user,\
    \ role, or an Amazon Web Services service. In Security Lake, CloudTrail captures\
    \ API calls for Security Lake as events. The calls captured include calls from\
    \ the Security Lake console and code calls to the Security Lake API operations.\
    \ If you create a trail, you can enable continuous delivery of CloudTrail events\
    \ to an Amazon S3 bucket, including events for Security Lake. If you don't configure\
    \ a trail, you can still view the most recent events in the CloudTrail console\
    \ in Event history. Using the information collected by CloudTrail you can determine\
    \ the request that was made to Security Lake, the IP address from which the request\
    \ was made, who made the request, when it was made, and additional details. To\
    \ learn more about Security Lake information in CloudTrail, see the <a href=\"\
    https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html\"\
    >Amazon Security Lake User Guide</a>.</p> <p>Security Lake automates the collection\
    \ of security-related log and event data from integrated Amazon Web Services and\
    \ third-party services. It also helps you manage the lifecycle of data with customizable\
    \ retention and replication settings. Security Lake converts ingested data into\
    \ Apache Parquet format and a standard open-source schema called the Open Cybersecurity\
    \ Schema Framework (OCSF).</p> <p>Other Amazon Web Services and third-party services\
    \ can subscribe to the data that's stored in Security Lake for incident response\
    \ and security data analytics.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Security Lake
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: securitylake
  x-aws-signingName: securitylake
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/securitylake-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/securitylake/
servers:
- description: The Amazon Security Lake multi-region endpoint
  url: "http://securitylake.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Security Lake multi-region endpoint
  url: "https://securitylake.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Security Lake endpoint for China (Beijing) and China (Ningxia)
  url: "http://securitylake.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Security Lake endpoint for China (Beijing) and China (Ningxia)
  url: "https://securitylake.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/datalake/logsources/aws:
    post:
      description: "<p>Adds a natively supported Amazon Web Service as an Amazon Security\
        \ Lake source. Enables source types for member accounts in required Amazon\
        \ Web Services Regions, based on the parameters you specify. You can choose\
        \ any source type in any Region for either accounts that are part of a trusted\
        \ organization or standalone accounts. Once you add an Amazon Web Service\
        \ as a source, Security Lake starts collecting logs and events from it.</p>\
        \ <p>You can use this API only to enable natively supported Amazon Web Services\
        \ as a source. Use <code>CreateCustomLogSource</code> to enable data collection\
        \ from a custom source.</p>"
      operationId: CreateAwsLogSource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAwsLogSource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAwsLogSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/logsources/custom:
    post:
      description: "Adds a third-party custom source in Amazon Security Lake, from\
        \ the Amazon Web Services Region where you want to create a custom source.\
        \ Security Lake can collect logs and events from third-party custom sources.\
        \ After creating the appropriate IAM role to invoke Glue crawler, use this\
        \ API to add a custom source name in Security Lake. This operation creates\
        \ a partition in the Amazon S3 bucket for Security Lake as the target location\
        \ for log files from the custom source. In addition, this operation also creates\
        \ an associated Glue table and an Glue crawler."
      operationId: CreateCustomLogSource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomLogSource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomLogSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake:
    post:
      description: "<p>Initializes an Amazon Security Lake instance with the provided\
        \ (or default) configuration. You can enable Security Lake in Amazon Web Services\
        \ Regions with customized settings before enabling log collection in Regions.\
        \ To specify particular Regions, configure these Regions using the <code>configurations</code>\
        \ parameter. If you have already enabled Security Lake in a Region when you\
        \ call this command, the command will update the Region if you provide new\
        \ configuration parameters. If you have not already enabled Security Lake\
        \ in the Region when you call this API, it will set up the data lake in the\
        \ Region with the specified configurations.</p> <p>When you enable Security\
        \ Lake, it starts ingesting security data after the <code>CreateAwsLogSource</code>\
        \ call. This includes ingesting security data from sources, storing data,\
        \ and making data accessible to subscribers. Security Lake also enables all\
        \ the existing settings and resources that it stores or maintains for your\
        \ Amazon Web Services account in the current Region, including security log\
        \ and event data. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html\"\
        >Amazon Security Lake User Guide</a>.</p>"
      operationId: CreateDataLake
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLake_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Specifies where to store your security data and for how long. You
        can add a rollup Region to consolidate data from multiple Amazon Web Services
        Regions.
      operationId: UpdateDataLake
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLake_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataLakeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/exceptions/subscription:
    delete:
      description: Deletes the specified notification subscription in Amazon Security
        Lake for the organization you specify.
      operationId: DeleteDataLakeExceptionSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeExceptionSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Retrieves the details of exception notifications for the account
        in Amazon Security Lake.
      operationId: GetDataLakeExceptionSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeExceptionSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates the specified notification subscription in Amazon Security
        Lake for the organization you specify.
      operationId: CreateDataLakeExceptionSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeExceptionSubscription_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeExceptionSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates the specified notification subscription in Amazon Security
        Lake for the organization you specify.
      operationId: UpdateDataLakeExceptionSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLakeExceptionSubscription_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataLakeExceptionSubscriptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/organization/configuration:
    get:
      description: Retrieves the configuration that will be automatically set up for
        accounts added to the organization after the organization has onboarded to
        Amazon Security Lake. This API does not take input parameters.
      operationId: GetDataLakeOrganizationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeOrganizationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Automatically enables Amazon Security Lake for new member accounts
        in your organization. Security Lake is not automatically enabled for any existing
        member accounts in your organization.
      operationId: CreateDataLakeOrganizationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeOrganizationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataLakeOrganizationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/subscribers:
    get:
      description: List all subscribers for the specific Amazon Security Lake account
        ID. You can retrieve a list of subscriptions associated with a specific organization
        or Amazon Web Services account.
      operationId: ListSubscribers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of accounts for which the configuration is
          displayed.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "If nextToken is returned, there are more results available.\
          \ You can repeat the call using the returned token to retrieve the next\
          \ page."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscribersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Creates a subscription permission for accounts that are already
        enabled in Amazon Security Lake. You can create a subscriber with access to
        data in the current Amazon Web Services Region.
      operationId: CreateSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriber_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/subscribers/{subscriberId}/notification:
    delete:
      description: Deletes the specified notification subscription in Amazon Security
        Lake for the organization you specify.
      operationId: DeleteSubscriberNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the Security Lake subscriber account.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriberNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Notifies the subscriber when new data is written to the data lake
        for the sources that the subscriber consumes in Security Lake. You can create
        only one subscriber notification per subscriber.
      operationId: CreateSubscriberNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The subscriber ID for the notification subscription.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberNotification_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriberNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing notification method for the subscription (SQS
        or HTTPs endpoint) or switches the notification subscription endpoint for
        a subscriber.
      operationId: UpdateSubscriberNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The subscription ID for which the subscription notification is
          specified.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberNotification_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriberNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/logsources/aws/delete:
    post:
      description: "<p>Removes a natively supported Amazon Web Service as an Amazon\
        \ Security Lake source. You can remove a source for one or more Regions. When\
        \ you remove the source, Security Lake stops collecting data from that source\
        \ in the specified Regions and accounts, and subscribers can no longer consume\
        \ new data from the source. However, subscribers can still consume data that\
        \ Security Lake collected from the source before removal.</p> <p>You can choose\
        \ any source type in any Amazon Web Services Region for either accounts that\
        \ are part of a trusted organization or standalone accounts. </p>"
      operationId: DeleteAwsLogSource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAwsLogSource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAwsLogSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/logsources/custom/{sourceName}:
    delete:
      description: "Removes a custom log source from Amazon Security Lake, to stop\
        \ sending data from the custom source to Security Lake."
      operationId: DeleteCustomLogSource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The source name of custom log source that you want to delete.
        explode: false
        in: path
        name: sourceName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\\\\\w\\-_:/.]*$"
          type: string
        style: simple
      - description: The source version for the third-party custom source. You can
          limit the custom source removal to the specified source version.
        explode: true
        in: query
        name: sourceVersion
        required: false
        schema:
          maxLength: 32
          minLength: 1
          pattern: "^[A-Za-z0-9\\-\\.\\_]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomLogSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /v1/datalake/delete:
    post:
      description: "<p>When you disable Amazon Security Lake from your account, Security\
        \ Lake is disabled in all Amazon Web Services Regions and it stops collecting\
        \ data from your sources. Also, this API automatically takes steps to remove\
        \ the account from Security Lake. However, Security Lake retains all of your\
        \ existing settings and the resources that it created in your Amazon Web Services\
        \ account in the current Amazon Web Services Region.</p> <p>The <code>DeleteDataLake</code>\
        \ operation does not delete the data that is stored in your Amazon S3 bucket,\
        \ which is owned by your Amazon Web Services account. For more information,\
        \ see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html\"\
        >Amazon Security Lake User Guide</a>.</p>"
      operationId: DeleteDataLake
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataLake_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/organization/configuration/delete:
    post:
      description: "Turns off automatic enablement of Amazon Security Lake for member\
        \ accounts that are added to an organization in Organizations. Only the delegated\
        \ Security Lake administrator for an organization can perform this operation.\
        \ If the delegated Security Lake administrator performs this operation, new\
        \ member accounts won't automatically contribute data to the data lake."
      operationId: DeleteDataLakeOrganizationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataLakeOrganizationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataLakeOrganizationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/subscribers/{subscriberId}:
    delete:
      description: "Deletes the subscription permission and all notification settings\
        \ for accounts that are already enabled in Amazon Security Lake. When you\
        \ run <code>DeleteSubscriber</code>, the subscriber will no longer consume\
        \ data from Security Lake and the subscriber is removed. This operation deletes\
        \ the subscriber and removes access to data in the current Amazon Web Services\
        \ Region."
      operationId: DeleteSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A value created by Security Lake that uniquely identifies your
          <code>DeleteSubscriber</code> API request.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    get:
      description: Retrieves the subscription information for the specified subscription
        ID. You can get information about a specific subscriber.
      operationId: GetSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A value created by Amazon Security Lake that uniquely identifies
          your <code>GetSubscriber</code> API request.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    put:
      description: Updates an existing subscription for the given Amazon Security
        Lake account ID. You can update a subscriber by changing the sources that
        the subscriber consumes data from.
      operationId: UpdateSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A value created by Security Lake that uniquely identifies your
          subscription.
        explode: false
        in: path
        name: subscriberId
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriber_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/delegate:
    delete:
      description: Deletes the Amazon Security Lake delegated administrator account
        for the organization. This API can only be called by the organization management
        account. The organization management account cannot be the delegated administrator
        account.
      operationId: DeregisterDataLakeDelegatedAdministrator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterDataLakeDelegatedAdministratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Designates the Amazon Security Lake delegated administrator account
        for the organization. This API can only be called by the organization management
        account. The organization management account cannot be the delegated administrator
        account.
      operationId: RegisterDataLakeDelegatedAdministrator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDataLakeDelegatedAdministrator_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDataLakeDelegatedAdministratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/sources:
    post:
      description: "Retrieves a snapshot of the current Region, including whether\
        \ Amazon Security Lake is enabled for those accounts and which sources Security\
        \ Lake is collecting data from."
      operationId: GetDataLakeSources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDataLakeSources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataLakeSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalake/exceptions:
    post:
      description: Lists the Amazon Security Lake exceptions that you can use to find
        the source of problems and fix them.
      operationId: ListDataLakeExceptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataLakeExceptions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataLakeExceptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/datalakes:
    get:
      description: Retrieves the Amazon Security Lake configuration object for the
        specified Amazon Web Services Regions. You can use this operation to determine
        whether Security Lake is enabled for a Region.
      operationId: ListDataLakes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The list of regions where Security Lake is enabled.
        explode: true
        in: query
        name: regions
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Region'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataLakesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /v1/datalake/logsources/list:
    post:
      description: Retrieves the log sources in the current Amazon Web Services Region.
      operationId: ListLogSources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLogSources_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/tags/{resourceArn}:
    get:
      description: "Retrieves the tags (keys and values) that are associated with\
        \ an Amazon Security Lake resource: a subscriber, or the data lake configuration\
        \ for your Amazon Web Services account in a particular Amazon Web Services\
        \ Region."
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource
          to retrieve the tags for.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\\
            -]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\-]{0,127}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: "Adds or updates one or more tags that are associated with an Amazon\
        \ Security Lake resource: a subscriber, or the data lake configuration for\
        \ your Amazon Web Services account in a particular Amazon Web Services Region.\
        \ A <i>tag</i> is a label that you can define and associate with Amazon Web\
        \ Services resources. Each tag consists of a required <i>tag key</i> and an\
        \ associated <i>tag value</i>. A <i>tag key</i> is a general label that acts\
        \ as a category for a more specific tag value. A <i>tag value</i> acts as\
        \ a descriptor for a tag key. Tags can help you identify, categorize, and\
        \ manage resources in different ways, such as by owner, environment, or other\
        \ criteria. For more information, see <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\"\
        >Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake\
        \ User Guide</i>."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource
          to add or update the tags for.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\\
            -]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\-]{0,127}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/tags/{resourceArn}#tagKeys:
    delete:
      description: "Removes one or more tags (keys and values) from an Amazon Security\
        \ Lake resource: a subscriber, or the data lake configuration for your Amazon\
        \ Web Services account in a particular Amazon Web Services Region."
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the Amazon Security Lake resource
          to remove one or more tags from.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 1
          pattern: "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\\
            -]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\-]{0,127}$"
          type: string
        style: simple
      - description: "A list of one or more tag keys. For each value in the list,\
          \ specify the tag key for a tag to remove from the Amazon Security Lake\
          \ resource."
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAwsLogSourceResponse:
      example:
        failed: ""
      properties:
        failed:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: Lists all accounts in which enabling a natively supported
              Amazon Web Service as a Security Lake source failed. The failure occurred
              as these accounts are not part of an organization.
      type: object
    AwsLogSourceConfiguration:
      description: 'The Security Lake logs source configuration file describes the
        information needed to generate Security Lake logs. '
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: Specify the Amazon Web Services account information where
              you want to enable Security Lake.
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: Specify the Regions where you want to enable Security Lake.
        sourceName:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceName'
          - description: The name for a Amazon Web Services source. This must be a
              Regionally unique value.
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceVersion'
          - description: The version for a Amazon Web Services source. This must be
              a Regionally unique value.
      required:
      - regions
      - sourceName
      type: object
    BadRequestException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ConflictException: {}
    ThrottlingException: {}
    CreateCustomLogSourceResponse:
      example:
        source:
          provider:
            roleArn: ""
            location: ""
          sourceVersion: ""
          attributes:
            databaseArn: ""
            crawlerArn: ""
            tableArn: ""
          sourceName: ""
      properties:
        source:
          $ref: '#/components/schemas/CreateCustomLogSourceResponse_source'
      type: object
    CustomLogSourceCrawlerConfiguration:
      description: The configuration for the Glue Crawler for the third-party custom
        source.
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: <p>The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role to be used by the Glue crawler. The recommended
              IAM policies are:</p> <ul> <li> <p>The managed policy <code>AWSGlueServiceRole</code>
              </p> </li> <li> <p>A custom policy granting access to your Amazon S3
              Data Lake</p> </li> </ul>
      required:
      - roleArn
      type: object
    AwsIdentity:
      description: The AWS identity.
      properties:
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: The external ID used to estalish trust relationship with
              the AWS identity.
        principal:
          allOf:
          - $ref: '#/components/schemas/AwsPrincipal'
          - description: The AWS identity principal.
      required:
      - externalId
      - principal
      type: object
    OcsfEventClass:
      pattern: "^[A-Z\\_0-9]*$"
      type: string
    CreateDataLakeResponse:
      example:
        dataLakes: ""
      properties:
        dataLakes:
          allOf:
          - $ref: '#/components/schemas/DataLakeResourceList'
          - description: The created Security Lake configuration object.
      type: object
    DataLakeConfiguration:
      description: Provides details of Amazon Security Lake object.
      properties:
        encryptionConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_encryptionConfiguration'
        lifecycleConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_lifecycleConfiguration'
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Regions where Security Lake is automatically
              enabled.
        replicationConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_replicationConfiguration'
      required:
      - region
      type: object
    Tag:
      description: "<p>A <i>tag</i> is a label that you can define and associate with\
        \ Amazon Web Services resources, including certain types of Amazon Security\
        \ Lake resources. Tags can help you identify, categorize, and manage resources\
        \ in different ways, such as by owner, environment, or other criteria. You\
        \ can associate tags with the following types of Security Lake resources:\
        \ subscribers, and the data lake configuration for your Amazon Web Services\
        \ account in individual Amazon Web Services Regions.</p> <p>A resource can\
        \ have up to 50 tags. Each tag consists of a required <i>tag key</i> and an\
        \ associated <i>tag value</i>. A <i>tag key</i> is a general label that acts\
        \ as a category for a more specific tag value. Each tag key must be unique\
        \ and it can have only one tag value. A <i>tag value</i> acts as a descriptor\
        \ for a tag key. Tag keys and values are case sensitive. They can contain\
        \ letters, numbers, spaces, or the following symbols: _ . : / = + @ -</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\"\
        >Tagging Amazon Security Lake resources</a> in the <i>Amazon Security Lake\
        \ User Guide</i>.</p>"
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The name of the tag. This is a general label that acts as
              a category for a more specific tag value (<code>value</code>).
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The value that’s associated with the specified tag key (<code>key</code>).\
              \ This value acts as a descriptor for the tag key. A tag value cannot\
              \ be null, but it can be an empty string."
      required:
      - key
      - value
      type: object
    CreateDataLakeExceptionSubscriptionResponse:
      properties: {}
      type: object
    CreateDataLakeOrganizationConfigurationResponse:
      properties: {}
      type: object
    DataLakeAutoEnableNewAccountConfiguration:
      description: Automatically enable new organization accounts as member accounts
        from an Amazon Security Lake administrator account.
      properties:
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Regions where Security Lake is automatically
              enabled.
        sources:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceResourceList'
          - description: The Amazon Web Services sources that are automatically enabled
              in Security Lake.
      required:
      - region
      - sources
      type: object
    CreateSubscriberResponse:
      example:
        subscriber:
          s3BucketArn: ""
          resourceShareName: ""
          sources: ""
          resourceShareArn: ""
          subscriberStatus: ""
          subscriberId: ""
          subscriberIdentity:
            principal: ""
            externalId: ""
          accessTypes: ""
          createdAt: ""
          subscriberDescription: ""
          subscriberEndpoint: ""
          subscriberArn: ""
          roleArn: ""
          subscriberName: ""
          updatedAt: ""
      properties:
        subscriber:
          $ref: '#/components/schemas/CreateSubscriberResponse_subscriber'
      type: object
    AccessType:
      enum:
      - LAKEFORMATION
      - S3
      type: string
    LogSourceResource:
      description: "The supported source types from which logs and events are collected\
        \ in Amazon Security Lake. For a list of supported Amazon Web Services, see\
        \ the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\"\
        >Amazon Security Lake User Guide</a>."
      properties:
        awsLogSource:
          $ref: '#/components/schemas/LogSourceResource_awsLogSource'
        customLogSource:
          $ref: '#/components/schemas/LogSourceResource_customLogSource'
      type: object
    ExternalId:
      maxLength: 1224
      minLength: 2
      pattern: "^[\\w+=,.@:\\/-]*$"
      type: string
    AwsPrincipal:
      pattern: "^([0-9]{12}|[a-z0-9\\.\\-]*\\.(amazonaws|amazon)\\.com)$"
      type: string
    CreateSubscriberNotificationResponse:
      example:
        subscriberEndpoint: ""
      properties:
        subscriberEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The subscriber endpoint to which exception messages are posted.
      type: object
    HttpsNotificationConfiguration:
      description: The configurations for HTTPS subscriber notification.
      properties:
        authorizationApiKeyName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key name for the notification subscription.
        authorizationApiKeyValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key value for the notification subscription.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsNotificationConfigurationEndpointString'
          - description: "The subscription endpoint in Security Lake. If you prefer\
              \ notification with an HTTPs endpoint, populate this field."
        httpMethod:
          allOf:
          - $ref: '#/components/schemas/HttpMethod'
          - description: The HTTPS method used for the notification subscription.
        targetRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) of the EventBridge API destinations\
              \ IAM role that you created. For more information about ARNs and how\
              \ to use them in policies, see <a href=\"https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html\"\
              >Managing data access</a> and <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html\"\
              >Amazon Web Services Managed Policies</a> in the <i>Amazon Security\
              \ Lake User Guide</i>."
      required:
      - endpoint
      - targetRoleArn
      type: object
    SqsNotificationConfiguration:
      description: The configurations for SQS subscriber notification.
      properties: {}
      type: object
    DeleteAwsLogSourceResponse:
      example:
        failed: ""
      properties:
        failed:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: Deletion of the Amazon Web Services sources failed as the
              account is not a part of the organization.
      type: object
    DeleteCustomLogSourceResponse:
      properties: {}
      type: object
    DeleteDataLakeResponse:
      properties: {}
      type: object
    Region:
      pattern: ^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\d+$
      type: string
    DeleteDataLakeExceptionSubscriptionResponse:
      properties: {}
      type: object
    DeleteDataLakeOrganizationConfigurationResponse:
      properties: {}
      type: object
    DeleteSubscriberResponse:
      properties: {}
      type: object
    DeleteSubscriberNotificationResponse:
      properties: {}
      type: object
    DeregisterDataLakeDelegatedAdministratorResponse:
      properties: {}
      type: object
    GetDataLakeExceptionSubscriptionResponse:
      example:
        exceptionTimeToLive: ""
        notificationEndpoint: ""
        subscriptionProtocol: ""
      properties:
        exceptionTimeToLive:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The expiration period and time-to-live (TTL).
        notificationEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The Amazon Web Services account where you receive exception
              notifications.
        subscriptionProtocol:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProtocol'
          - description: The subscription protocol to which exception notifications
              are posted.
      type: object
    GetDataLakeOrganizationConfigurationResponse:
      example:
        autoEnableNewAccount: ""
      properties:
        autoEnableNewAccount:
          allOf:
          - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
          - description: The configuration for new accounts.
      type: object
    GetDataLakeSourcesResponse:
      example:
        dataLakeSources: ""
        dataLakeArn: ""
        nextToken: ""
      properties:
        dataLakeArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The Amazon Resource Name (ARN) created by you to provide\
              \ to the subscriber. For more information about ARNs and how to use\
              \ them in policies, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html\"\
              >Amazon Security Lake User Guide</a>."
        dataLakeSources:
          allOf:
          - $ref: '#/components/schemas/DataLakeSourceList'
          - description: The list of enabled accounts and enabled sources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>Lists if there are more results available. The value of
              nextToken is a unique pagination token for each page. Repeat the call
              using the returned token to retrieve the next page. Keep all other arguments
              unchanged.</p> <p>Each pagination token expires after 24 hours. Using
              an expired pagination token will return an HTTP 400 InvalidToken error.</p>
      type: object
    AwsAccountId:
      maxLength: 12
      minLength: 12
      pattern: "^[0-9]{12}$"
      type: string
    GetSubscriberResponse:
      example:
        subscriber:
          s3BucketArn: ""
          resourceShareName: ""
          sources: ""
          resourceShareArn: ""
          subscriberStatus: ""
          subscriberId: ""
          subscriberIdentity:
            principal: ""
            externalId: ""
          accessTypes: ""
          createdAt: ""
          subscriberDescription: ""
          subscriberEndpoint: ""
          subscriberArn: ""
          roleArn: ""
          subscriberName: ""
          updatedAt: ""
      properties:
        subscriber:
          $ref: '#/components/schemas/GetSubscriberResponse_subscriber'
      type: object
    ListDataLakeExceptionsResponse:
      example:
        nextToken: ""
        exceptions: ""
      properties:
        exceptions:
          allOf:
          - $ref: '#/components/schemas/DataLakeExceptionList'
          - description: Lists the failures that cannot be retried in the current
              Region.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>List if there are more results available. The value of
              nextToken is a unique pagination token for each page. Repeat the call
              using the returned token to retrieve the next page. Keep all other arguments
              unchanged.</p> <p>Each pagination token expires after 24 hours. Using
              an expired pagination token will return an HTTP 400 InvalidToken error.</p>
      type: object
    ListDataLakesResponse:
      example:
        dataLakes: ""
      properties:
        dataLakes:
          allOf:
          - $ref: '#/components/schemas/DataLakeResourceList'
          - description: Retrieves the Security Lake configuration object.
      type: object
    ListLogSourcesResponse:
      example:
        sources: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If nextToken is returned, there are more results available.\
              \ You can repeat the call using the returned token to retrieve the next\
              \ page."
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceList'
          - description: The list of log sources in your organization that send data
              to the data lake.
      type: object
    ListSubscribersResponse:
      example:
        nextToken: ""
        subscribers: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If nextToken is returned, there are more results available.\
              \ You can repeat the call using the returned token to retrieve the next\
              \ page."
        subscribers:
          allOf:
          - $ref: '#/components/schemas/SubscriberResourceList'
          - description: The subscribers available for the specified Security Lake
              account ID.
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "An array of objects, one for each tag (key and value) that’\
              s associated with the Amazon Security Lake resource."
      type: object
    RegisterDataLakeDelegatedAdministratorResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateDataLakeResponse:
      example:
        dataLakes: ""
      properties:
        dataLakes:
          allOf:
          - $ref: '#/components/schemas/DataLakeResourceList'
          - description: The created Security Lake configuration object.
      type: object
    UpdateDataLakeExceptionSubscriptionResponse:
      properties: {}
      type: object
    UpdateSubscriberResponse:
      example:
        subscriber:
          s3BucketArn: ""
          resourceShareName: ""
          sources: ""
          resourceShareArn: ""
          subscriberStatus: ""
          subscriberId: ""
          subscriberIdentity:
            principal: ""
            externalId: ""
          accessTypes: ""
          createdAt: ""
          subscriberDescription: ""
          subscriberEndpoint: ""
          subscriberArn: ""
          roleArn: ""
          subscriberName: ""
          updatedAt: ""
      properties:
        subscriber:
          $ref: '#/components/schemas/UpdateSubscriberResponse_subscriber'
      type: object
    UpdateSubscriberNotificationResponse:
      example:
        subscriberEndpoint: ""
      properties:
        subscriberEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The subscriber endpoint to which exception messages are posted.
      type: object
    AccessTypeList:
      items:
        $ref: '#/components/schemas/AccessType'
      type: array
    AccountList:
      items:
        $ref: '#/components/schemas/AwsAccountId'
      type: array
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      pattern: "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\\
        -]{0,127}$"
      type: string
    RegionList:
      items:
        $ref: '#/components/schemas/Region'
      type: array
    AwsLogSourceName:
      enum:
      - ROUTE53
      - VPC_FLOW
      - SH_FINDINGS
      - CLOUD_TRAIL_MGMT
      - LAMBDA_EXECUTION
      - S3_DATA
      type: string
    AwsLogSourceVersion:
      pattern: "^(latest|[0-9]\\.[0-9])$"
      type: string
    AwsLogSourceConfigurationList:
      items:
        $ref: '#/components/schemas/AwsLogSourceConfiguration'
      maxItems: 50
      minItems: 0
      type: array
    AwsLogSourceResource:
      description: Amazon Security Lake can collect logs and events from natively-supported
        Amazon Web Services services.
      properties:
        sourceName:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceName'
          - description: The name for a Amazon Web Services source. This must be a
              Regionally unique value.
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceVersion'
          - description: The version for a Amazon Web Services source. This must be
              a Regionally unique value.
      type: object
    AwsLogSourceResourceList:
      items:
        $ref: '#/components/schemas/AwsLogSourceResource'
      type: array
    CreateAwsLogSourceRequest:
      example:
        sources: ""
      properties:
        sources:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceConfigurationList'
          - description: Specify the natively-supported Amazon Web Services service
              to add as a source in Security Lake.
      required:
      - sources
      title: CreateAwsLogSourceRequest
      type: object
    CustomLogSourceConfiguration:
      description: The configuration for the third-party custom source.
      properties:
        crawlerConfiguration:
          $ref: '#/components/schemas/CreateCustomLogSource_request_configuration_crawlerConfiguration'
        providerIdentity:
          $ref: '#/components/schemas/CreateCustomLogSource_request_configuration_providerIdentity'
      required:
      - crawlerConfiguration
      - providerIdentity
      type: object
    OcsfEventClassList:
      items:
        $ref: '#/components/schemas/OcsfEventClass'
      type: array
    CustomLogSourceName:
      maxLength: 64
      minLength: 1
      pattern: "^[\\\\\\w\\-_:/.]*$"
      type: string
    CustomLogSourceVersion:
      maxLength: 32
      minLength: 1
      pattern: "^[A-Za-z0-9\\-\\.\\_]*$"
      type: string
    CreateCustomLogSourceRequest:
      example:
        configuration:
          crawlerConfiguration:
            roleArn: ""
          providerIdentity:
            principal: ""
            externalId: ""
        sourceVersion: ""
        eventClasses: ""
        sourceName: ""
      properties:
        configuration:
          $ref: '#/components/schemas/CreateCustomLogSourceRequest_configuration'
        eventClasses:
          allOf:
          - $ref: '#/components/schemas/OcsfEventClassList'
          - description: <p>The Open Cybersecurity Schema Framework (OCSF) event classes
              which describes the type of data that the custom source will send to
              Security Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code>
              </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code>
              </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p>
              <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code>
              </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p>
              <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code>
              </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p>
              <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code>
              </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p>
              <code>AUTHENTICATION</code> </p> </li> <li> <p> <code>AUTHORIZATION</code>
              </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code> </p> </li>
              <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code>
              </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code>
              </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code>
              </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code>
              </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code>
              </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p>
              <code>API_ACTIVITY</code> </p> </li> <li> <p> <code>CLOUD_API</code>
              </p> </li> </ul>
        sourceName:
          allOf:
          - $ref: '#/components/schemas/CustomLogSourceName'
          - description: Specify the name for a third-party custom source. This must
              be a Regionally unique value.
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/CustomLogSourceVersion'
          - description: "Specify the source version for the third-party custom source,\
              \ to limit log collection to a specific version of custom data source."
      required:
      - sourceName
      title: CreateCustomLogSourceRequest
      type: object
    CustomLogSourceResource:
      description: Amazon Security Lake can collect logs and events from third-party
        custom sources.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomLogSourceResource_attributes'
        provider:
          $ref: '#/components/schemas/CustomLogSourceResource_provider'
        sourceName:
          allOf:
          - $ref: '#/components/schemas/CustomLogSourceName'
          - description: The name for a third-party custom source. This must be a
              Regionally unique value.
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/CustomLogSourceVersion'
          - description: The version for a third-party custom source. This must be
              a Regionally unique value.
      type: object
    CreateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong:
      minimum: 1
      type: integer
    SafeString:
      pattern: "^[\\\\\\w\\-_:/.@=+]*$"
      type: string
    SubscriptionProtocol:
      pattern: "^[a-z\\-]*$"
      type: string
    CreateDataLakeExceptionSubscriptionRequest:
      example:
        exceptionTimeToLive: ""
        notificationEndpoint: ""
        subscriptionProtocol: ""
      properties:
        exceptionTimeToLive:
          allOf:
          - $ref: '#/components/schemas/CreateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong'
          - description: The expiration period and time-to-live (TTL).
        notificationEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The Amazon Web Services account where you want to receive
              exception notifications.
        subscriptionProtocol:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProtocol'
          - description: The subscription protocol to which exception notifications
              are posted.
      required:
      - notificationEndpoint
      - subscriptionProtocol
      title: CreateDataLakeExceptionSubscriptionRequest
      type: object
    DataLakeAutoEnableNewAccountConfigurationList:
      items:
        $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
      type: array
    CreateDataLakeOrganizationConfigurationRequest:
      example:
        autoEnableNewAccount: ""
      properties:
        autoEnableNewAccount:
          allOf:
          - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
          - description: "Enable Security Lake with the specified configuration settings,\
              \ to begin collecting security data for new accounts in your organization."
      required:
      - autoEnableNewAccount
      title: CreateDataLakeOrganizationConfigurationRequest
      type: object
    DataLakeConfigurationList:
      items:
        $ref: '#/components/schemas/DataLakeConfiguration'
      type: array
    RoleArn:
      pattern: ^arn:.*$
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    CreateDataLakeRequest:
      example:
        configurations: ""
        metaStoreManagerRoleArn: ""
        tags: ""
      properties:
        configurations:
          allOf:
          - $ref: '#/components/schemas/DataLakeConfigurationList'
          - description: Specify the Region or Regions that will contribute data to
              the rollup region.
        metaStoreManagerRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) used to create and update
              the Glue table. This table contains partitions generated by the ingestion
              and normalization of Amazon Web Services log sources and custom sources.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "An array of objects, one for each tag to associate with\
              \ the data lake configuration. For each tag, you must specify both a\
              \ tag key and a tag value. A tag value cannot be null, but it can be\
              \ an empty string."
      required:
      - configurations
      - metaStoreManagerRoleArn
      title: CreateDataLakeRequest
      type: object
    DataLakeResourceList:
      items:
        $ref: '#/components/schemas/DataLakeResource'
      type: array
    NotificationConfiguration:
      description: 'Specify the configurations you want to use for subscriber notification
        to notify the subscriber when new data is written to the data lake for sources
        that the subscriber consumes in Security Lake. '
      properties:
        httpsNotificationConfiguration:
          $ref: '#/components/schemas/UpdateSubscriberNotification_request_configuration_httpsNotificationConfiguration'
        sqsNotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/SqsNotificationConfiguration'
          - description: The configurations for SQS subscriber notification.
      type: object
    UUID:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    CreateSubscriberNotificationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/CreateSubscriberNotificationRequest_configuration'
      required:
      - configuration
      title: CreateSubscriberNotificationRequest
      type: object
    LogSourceResourceList:
      items:
        $ref: '#/components/schemas/LogSourceResource'
      type: array
    DescriptionString:
      pattern: "^[\\\\\\w\\s\\-_:/,.@=+]*$"
      type: string
    CreateSubscriberRequestSubscriberNameString:
      maxLength: 64
      minLength: 0
      type: string
    CreateSubscriberRequest:
      example:
        subscriberDescription: ""
        sources: ""
        subscriberName: ""
        subscriberIdentity:
          principal: ""
          externalId: ""
        accessTypes: ""
        tags: ""
      properties:
        accessTypes:
          allOf:
          - $ref: '#/components/schemas/AccessTypeList'
          - description: The Amazon S3 or Lake Formation access type.
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceResourceList'
          - description: The supported Amazon Web Services from which logs and events
              are collected. Security Lake supports log and event collection for natively
              supported Amazon Web Services.
        subscriberDescription:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description for your subscriber account in Security Lake.
        subscriberIdentity:
          $ref: '#/components/schemas/CreateSubscriberRequest_subscriberIdentity'
        subscriberName:
          allOf:
          - $ref: '#/components/schemas/CreateSubscriberRequestSubscriberNameString'
          - description: The name of your Security Lake subscriber account.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "An array of objects, one for each tag to associate with\
              \ the subscriber. For each tag, you must specify both a tag key and\
              \ a tag value. A tag value cannot be null, but it can be an empty string."
      required:
      - sources
      - subscriberIdentity
      - subscriberName
      title: CreateSubscriberRequest
      type: object
    SubscriberResource:
      description: Provides details about the Amazon Security Lake account subscription.
        Subscribers are notified of new objects for a source as the data is written
        to your Amazon S3 bucket for Security Lake.
      properties:
        accessTypes:
          allOf:
          - $ref: '#/components/schemas/AccessTypeList'
          - description: <p>You can choose to notify subscribers of new objects with
              an Amazon Simple Queue Service (Amazon SQS) queue or through messaging
              to an HTTPS endpoint provided by the subscriber.</p> <p> Subscribers
              can consume data by directly querying Lake Formation tables in your
              Amazon S3 bucket through services like Amazon Athena. This subscription
              type is defined as <code>LAKEFORMATION</code>.</p>
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time when the subscriber was created.
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArn'
          - description: "<p>The Amazon Resource Name (ARN) which uniquely defines\
              \ the AWS RAM resource share. Before accepting the RAM resource share\
              \ invitation, you can view details related to the RAM resource share.</p>\
              \ <p>This field is available only for Lake Formation subscribers created\
              \ after March 8, 2023.</p>"
        resourceShareName:
          allOf:
          - $ref: '#/components/schemas/ResourceShareName'
          - description: The name of the resource share.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) specifying the role of the
              subscriber.
        s3BucketArn:
          allOf:
          - $ref: '#/components/schemas/S3BucketArn'
          - description: The ARN for the Amazon S3 bucket.
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceResourceList'
          - description: "Amazon Security Lake supports log and event collection for\
              \ natively supported Amazon Web Services. For more information, see\
              \ the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/source-management.html\"\
              >Amazon Security Lake User Guide</a>."
        subscriberArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The subscriber ARN of the Amazon Security Lake subscriber
              account.
        subscriberDescription:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: "The subscriber descriptions for a subscriber account. The\
              \ description for a subscriber includes <code>subscriberName</code>,\
              \ <code>accountID</code>, <code>externalID</code>, and <code>subscriberId</code>."
        subscriberEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The subscriber endpoint to which exception messages are posted.
        subscriberId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The subscriber ID of the Amazon Security Lake subscriber
              account.
        subscriberIdentity:
          $ref: '#/components/schemas/CreateSubscriberRequest_subscriberIdentity'
        subscriberName:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The name of your Amazon Security Lake subscriber account.
        subscriberStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriberStatus'
          - description: The subscriber status of the Amazon Security Lake subscriber
              account.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time when the subscriber was last updated.
      required:
      - sources
      - subscriberArn
      - subscriberId
      - subscriberIdentity
      - subscriberName
      type: object
    CustomLogSourceAttributes:
      description: The attributes of a third-party custom source.
      properties:
        crawlerArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the Glue crawler.
        databaseArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the Glue database where results are written,\
              \ such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>."
        tableArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the Glue table.
      type: object
    S3URI:
      description: A complete S3 URI pointing to a valid S3 object.
      maxLength: 1024
      minLength: 0
      pattern: "^s3[an]?://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/[^/].*)+$"
      type: string
    CustomLogSourceProvider:
      description: The details of the log provider for a third-party custom source.
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/S3URI'
          - description: The location of the partition in the Amazon S3 bucket for
              Security Lake.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The ARN of the IAM role to be used by the entity putting\
              \ logs into your custom source partition. Security Lake will apply the\
              \ correct access policies to this role, but you must first manually\
              \ create the trust policy for this role. The IAM role name must start\
              \ with the text 'Security Lake'. The IAM role must trust the <code>logProviderAccountId</code>\
              \ to assume the role."
      type: object
    DataLakeEncryptionConfiguration:
      description: Provides encryption details of Amazon Security Lake object.
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The id of KMS encryption key used by Amazon Security Lake
              to encrypt the Security Lake object.
      type: object
    DataLakeLifecycleConfiguration:
      description: Provides lifecycle details of Amazon Security Lake object.
      properties:
        expiration:
          $ref: '#/components/schemas/DataLakeLifecycleConfiguration_expiration'
        transitions:
          allOf:
          - $ref: '#/components/schemas/DataLakeLifecycleTransitionList'
          - description: Provides data storage transition details of Amazon Security
              Lake object.
      type: object
    DataLakeReplicationConfiguration:
      description: Provides replication details of Amazon Security Lake object.
      properties:
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: "<p>Replication enables automatic, asynchronous copying of\
              \ objects across Amazon S3 buckets. Amazon S3 buckets that are configured\
              \ for object replication can be owned by the same Amazon Web Services\
              \ account or by different accounts. You can replicate objects to a single\
              \ destination bucket or to multiple destination buckets. The destination\
              \ buckets can be in different Amazon Web Services Regions or within\
              \ the same Region as the source bucket.</p> <p>Set up one or more rollup\
              \ Regions by providing the Region or Regions that should contribute\
              \ to the central rollup Region.</p>"
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "Replication settings for the Amazon S3 buckets. This parameter\
              \ uses the Identity and Access Management (IAM) role you created that\
              \ is managed by Security Lake, to ensure the replication setting is\
              \ correct."
      type: object
    String:
      type: string
    SyntheticTimestamp_date_time:
      format: date-time
      type: string
    DataLakeException:
      description: The details for an Amazon Security Lake exception.
      properties:
        exception:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The underlying exception of a Security Lake exception.
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Regions where the exception occurred.
        remediation:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: List of all remediation steps for a Security Lake exception.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: "This error can occur if you configure the wrong timestamp\
              \ format, or if the subset of entries used for validation had errors\
              \ or missing values."
      type: object
    DataLakeExceptionList:
      items:
        $ref: '#/components/schemas/DataLakeException'
      type: array
    DataLakeLifecycleExpiration:
      description: Provide expiration lifecycle details of Amazon Security Lake object.
      properties:
        days:
          allOf:
          - $ref: '#/components/schemas/DataLakeLifecycleExpirationDaysInteger'
          - description: Number of days before data expires in the Amazon Security
              Lake object.
      type: object
    DataLakeLifecycleTransitionList:
      items:
        $ref: '#/components/schemas/DataLakeLifecycleTransition'
      type: array
    DataLakeLifecycleExpirationDaysInteger:
      minimum: 1
      type: integer
    DataLakeLifecycleTransitionDaysInteger:
      minimum: 1
      type: integer
    DataLakeStorageClass:
      type: string
    DataLakeLifecycleTransition:
      description: Provide transition lifecycle details of Amazon Security Lake object.
      properties:
        days:
          allOf:
          - $ref: '#/components/schemas/DataLakeLifecycleTransitionDaysInteger'
          - description: Number of days before data transitions to a different S3
              Storage Class in the Amazon Security Lake object.
        storageClass:
          allOf:
          - $ref: '#/components/schemas/DataLakeStorageClass'
          - description: "The range of storage classes that you can choose from based\
              \ on the data access, resiliency, and cost requirements of your workloads."
      type: object
    DataLakeStatus:
      enum:
      - INITIALIZED
      - PENDING
      - COMPLETED
      - FAILED
      type: string
    S3BucketArn:
      type: string
    DataLakeUpdateStatus:
      description: "The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>\
        \ API request. This is set to Completed after the configuration is updated,\
        \ or removed if deletion of the data lake is successful."
      properties:
        exception:
          $ref: '#/components/schemas/DataLakeUpdateStatus_exception'
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID for the last <code>UpdateDataLake</code> or
              <code>DeleteDataLake</code> API request.
        status:
          allOf:
          - $ref: '#/components/schemas/DataLakeStatus'
          - description: The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
              API request that was requested.
      type: object
    DataLakeResource:
      description: Provides details of Amazon Security Lake object.
      properties:
        createStatus:
          allOf:
          - $ref: '#/components/schemas/DataLakeStatus'
          - description: Retrieves the status of the configuration operation for an
              account in Amazon Security Lake.
        dataLakeArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The Amazon Resource Name (ARN) created by you to provide\
              \ to the subscriber. For more information about ARNs and how to use\
              \ them in policies, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html\"\
              >Amazon Security Lake User Guide</a>."
        encryptionConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_encryptionConfiguration'
        lifecycleConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_lifecycleConfiguration'
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Regions where Security Lake is enabled.
        replicationConfiguration:
          $ref: '#/components/schemas/DataLakeConfiguration_replicationConfiguration'
        s3BucketArn:
          allOf:
          - $ref: '#/components/schemas/S3BucketArn'
          - description: The ARN for the Amazon Security Lake Amazon S3 bucket.
        updateStatus:
          $ref: '#/components/schemas/DataLakeResource_updateStatus'
      required:
      - dataLakeArn
      - region
      type: object
    DataLakeSourceStatusList:
      items:
        $ref: '#/components/schemas/DataLakeSourceStatus'
      type: array
    DataLakeSource:
      description: "Amazon Security Lake collects logs and events from supported Amazon\
        \ Web Services and custom sources. For the list of supported Amazon Web Services,\
        \ see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\"\
        >Amazon Security Lake User Guide</a>."
      properties:
        account:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the Security Lake account for which logs are collected.
        eventClasses:
          allOf:
          - $ref: '#/components/schemas/OcsfEventClassList'
          - description: <p>The Open Cybersecurity Schema Framework (OCSF) event classes
              which describes the type of data that the custom source will send to
              Security Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code>
              </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code>
              </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p>
              <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code>
              </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p>
              <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code>
              </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p>
              <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code>
              </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p>
              <code>AUTHENTICATION</code> </p> </li> <li> <p> <code>AUTHORIZATION</code>
              </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code> </p> </li>
              <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code>
              </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code>
              </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code>
              </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code>
              </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code>
              </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p>
              <code>API_ACTIVITY</code> </p> </li> <li> <p> <code>CLOUD_API</code>
              </p> </li> </ul>
        sourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The supported Amazon Web Services from which logs and events
              are collected. Amazon Security Lake supports log and event collection
              for natively supported Amazon Web Services.
        sourceStatuses:
          allOf:
          - $ref: '#/components/schemas/DataLakeSourceStatusList'
          - description: The log status for the Security Lake account.
      type: object
    DataLakeSourceList:
      items:
        $ref: '#/components/schemas/DataLakeSource'
      type: array
    SourceCollectionStatus:
      enum:
      - COLLECTING
      - MISCONFIGURED
      - NOT_COLLECTING
      type: string
    DataLakeSourceStatus:
      description: Retrieves the Logs status for the Amazon Security Lake account.
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Defines path the stored logs are available which has information\
              \ on your systems, applications, and services."
        status:
          allOf:
          - $ref: '#/components/schemas/SourceCollectionStatus'
          - description: "The health status of services, including error codes and\
              \ patterns."
      type: object
    DataLakeUpdateException:
      description: The details of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>
        API request which failed.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason code for the exception of the last <code>UpdateDataLake</code>
              or <code>DeleteDataLake</code> API request.
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for the exception of the last <code>UpdateDataLake</code>or
              <code>DeleteDataLake</code> API request.
      type: object
    DeleteAwsLogSourceRequest:
      example:
        sources: ""
      properties:
        sources:
          allOf:
          - $ref: '#/components/schemas/AwsLogSourceConfigurationList'
          - description: Specify the natively-supported Amazon Web Services service
              to remove as a source in Security Lake.
      required:
      - sources
      title: DeleteAwsLogSourceRequest
      type: object
    DeleteCustomLogSourceRequest:
      properties: {}
      title: DeleteCustomLogSourceRequest
      type: object
    DeleteDataLakeExceptionSubscriptionRequest:
      properties: {}
      title: DeleteDataLakeExceptionSubscriptionRequest
      type: object
    DeleteDataLakeOrganizationConfigurationRequest:
      example:
        autoEnableNewAccount: ""
      properties:
        autoEnableNewAccount:
          allOf:
          - $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfigurationList'
          - description: Turns off automatic enablement of Security Lake for member
              accounts that are added to an organization.
      required:
      - autoEnableNewAccount
      title: DeleteDataLakeOrganizationConfigurationRequest
      type: object
    DeleteDataLakeRequest:
      example:
        regions: ""
      properties:
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: The list of Regions where Security Lake is enabled.
      required:
      - regions
      title: DeleteDataLakeRequest
      type: object
    DeleteSubscriberNotificationRequest:
      properties: {}
      title: DeleteSubscriberNotificationRequest
      type: object
    DeleteSubscriberRequest:
      properties: {}
      title: DeleteSubscriberRequest
      type: object
    DeregisterDataLakeDelegatedAdministratorRequest:
      properties: {}
      title: DeregisterDataLakeDelegatedAdministratorRequest
      type: object
    GetDataLakeExceptionSubscriptionRequest:
      properties: {}
      title: GetDataLakeExceptionSubscriptionRequest
      type: object
    Long:
      type: integer
    GetDataLakeOrganizationConfigurationRequest:
      properties: {}
      title: GetDataLakeOrganizationConfigurationRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      pattern: "^[\\\\\\w\\-_:/.@=+]*$"
      type: string
    GetDataLakeSourcesRequest:
      example:
        maxResults: ""
        nextToken: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: "The Amazon Web Services account ID for which a static snapshot\
              \ of the current Amazon Web Services Region, including enabled accounts\
              \ and log sources, is retrieved."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum limit of accounts for which the static snapshot\
              \ of the current Region, including enabled accounts and log sources,\
              \ is retrieved."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>Lists if there are more results available. The value of
              nextToken is a unique pagination token for each page. Repeat the call
              using the returned token to retrieve the next page. Keep all other arguments
              unchanged.</p> <p>Each pagination token expires after 24 hours. Using
              an expired pagination token will return an HTTP 400 InvalidToken error.</p>
      title: GetDataLakeSourcesRequest
      type: object
    GetSubscriberRequest:
      properties: {}
      title: GetSubscriberRequest
      type: object
    HttpMethod:
      enum:
      - POST
      - PUT
      type: string
    HttpsNotificationConfigurationEndpointString:
      pattern: ^https?://.+$
      type: string
    ListDataLakeExceptionsRequest:
      example:
        regions: ""
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: List the maximum number of failures in Security Lake.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: <p>List if there are more results available. The value of
              nextToken is a unique pagination token for each page. Repeat the call
              using the returned token to retrieve the next page. Keep all other arguments
              unchanged.</p> <p>Each pagination token expires after 24 hours. Using
              an expired pagination token will return an HTTP 400 InvalidToken error.</p>
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: List the Amazon Web Services Regions from which exceptions
              are retrieved.
      title: ListDataLakeExceptionsRequest
      type: object
    ListDataLakesRequest:
      properties: {}
      title: ListDataLakesRequest
      type: object
    ListLogSourcesRequest:
      example:
        regions: ""
        sources: ""
        maxResults: ""
        nextToken: ""
        accounts: ""
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          - description: The list of Amazon Web Services accounts for which log sources
              are displayed.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of accounts for which the log sources
              are displayed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If nextToken is returned, there are more results available.\
              \ You can repeat the call using the returned token to retrieve the next\
              \ page."
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          - description: The list of regions for which log sources are displayed.
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceResourceList'
          - description: The list of sources for which log sources are displayed.
      title: ListLogSourcesRequest
      type: object
    LogSourceList:
      items:
        $ref: '#/components/schemas/LogSource'
      type: array
    ListSubscribersRequest:
      properties: {}
      title: ListSubscribersRequest
      type: object
    SubscriberResourceList:
      items:
        $ref: '#/components/schemas/SubscriberResource'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LogSource:
      description: 'Amazon Security Lake can collect logs and events from natively-supported
        Amazon Web Services services and custom sources. '
      properties:
        account:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: Specify the account from which you want to collect logs.
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: Specify the Regions from which you want to collect logs.
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceResourceList'
          - description: Specify the sources from which you want to collect logs.
      type: object
    RegisterDataLakeDelegatedAdministratorRequest:
      example:
        accountId: ""
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The Amazon Web Services account ID of the Security Lake delegated
              administrator.
      required:
      - accountId
      title: RegisterDataLakeDelegatedAdministratorRequest
      type: object
    ResourceShareArn:
      type: string
    ResourceShareName:
      pattern: "^LakeFormation(?:-V[0-9]+)-([a-zA-Z0-9]+)-([\\\\\\w\\-_:/.@=+]*)$"
      type: string
    SubscriberStatus:
      enum:
      - ACTIVE
      - DEACTIVATED
      - PENDING
      - READY
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "An array of objects, one for each tag (key and value) to\
              \ associate with the Amazon Security Lake resource. For each tag, you\
              \ must specify both a tag key and a tag value. A tag value cannot be\
              \ null, but it can be an empty string."
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong:
      minimum: 1
      type: integer
    UpdateDataLakeExceptionSubscriptionRequest:
      example:
        exceptionTimeToLive: ""
        notificationEndpoint: ""
        subscriptionProtocol: ""
      properties:
        exceptionTimeToLive:
          allOf:
          - $ref: '#/components/schemas/UpdateDataLakeExceptionSubscriptionRequestExceptionTimeToLiveLong'
          - description: The time-to-live (TTL) for the exception message to remain.
        notificationEndpoint:
          allOf:
          - $ref: '#/components/schemas/SafeString'
          - description: The account that is subscribed to receive exception notifications.
        subscriptionProtocol:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProtocol'
          - description: The subscription protocol to which exception messages are
              posted.
      required:
      - notificationEndpoint
      - subscriptionProtocol
      title: UpdateDataLakeExceptionSubscriptionRequest
      type: object
    UpdateDataLakeRequest:
      example:
        configurations: ""
      properties:
        configurations:
          allOf:
          - $ref: '#/components/schemas/DataLakeConfigurationList'
          - description: Specify the Region or Regions that will contribute data to
              the rollup region.
      required:
      - configurations
      title: UpdateDataLakeRequest
      type: object
    UpdateSubscriberNotificationRequest:
      example:
        configuration:
          sqsNotificationConfiguration: ""
          httpsNotificationConfiguration:
            endpoint: ""
            targetRoleArn: ""
            authorizationApiKeyValue: ""
            httpMethod: ""
            authorizationApiKeyName: ""
      properties:
        configuration:
          $ref: '#/components/schemas/UpdateSubscriberNotificationRequest_configuration'
      required:
      - configuration
      title: UpdateSubscriberNotificationRequest
      type: object
    UpdateSubscriberRequestSubscriberNameString:
      maxLength: 64
      minLength: 0
      pattern: "^[\\\\\\w\\-_:/.@=+]*$"
      type: string
    UpdateSubscriberRequest:
      example:
        subscriberDescription: ""
        sources: ""
        subscriberName: ""
        subscriberIdentity:
          principal: ""
          externalId: ""
      properties:
        sources:
          allOf:
          - $ref: '#/components/schemas/LogSourceResourceList'
          - description: "The supported Amazon Web Services from which logs and events\
              \ are collected. For the list of supported Amazon Web Services, see\
              \ the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\"\
              >Amazon Security Lake User Guide</a>."
        subscriberDescription:
          allOf:
          - $ref: '#/components/schemas/DescriptionString'
          - description: The description of the Security Lake account subscriber.
        subscriberIdentity:
          $ref: '#/components/schemas/CreateSubscriberRequest_subscriberIdentity'
        subscriberName:
          allOf:
          - $ref: '#/components/schemas/UpdateSubscriberRequestSubscriberNameString'
          - description: The name of the Security Lake account subscriber.
      title: UpdateSubscriberRequest
      type: object
    CreateAwsLogSource_request:
      properties:
        sources:
          description: Specify the natively-supported Amazon Web Services service
            to add as a source in Security Lake.
          items:
            $ref: '#/components/schemas/AwsLogSourceConfiguration'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - sources
      type: object
    CreateCustomLogSource_request_configuration_crawlerConfiguration:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceCrawlerConfiguration'
      - description: The configuration for the Glue Crawler for the third-party custom
          source.
      example:
        roleArn: ""
    CreateCustomLogSource_request_configuration_providerIdentity:
      allOf:
      - $ref: '#/components/schemas/AwsIdentity'
      - description: The identity of the log provider for the third-party custom source.
      example:
        principal: ""
        externalId: ""
    CreateCustomLogSource_request_configuration:
      description: The configuration for the third-party custom source.
      properties:
        crawlerConfiguration:
          $ref: '#/components/schemas/CreateCustomLogSource_request_configuration_crawlerConfiguration'
        providerIdentity:
          $ref: '#/components/schemas/CreateCustomLogSource_request_configuration_providerIdentity'
      type: object
    CreateCustomLogSource_request:
      properties:
        configuration:
          $ref: '#/components/schemas/CreateCustomLogSource_request_configuration'
        eventClasses:
          description: <p>The Open Cybersecurity Schema Framework (OCSF) event classes
            which describes the type of data that the custom source will send to Security
            Lake. The supported event classes are:</p> <ul> <li> <p> <code>ACCESS_ACTIVITY</code>
            </p> </li> <li> <p> <code>FILE_ACTIVITY</code> </p> </li> <li> <p> <code>KERNEL_ACTIVITY</code>
            </p> </li> <li> <p> <code>KERNEL_EXTENSION</code> </p> </li> <li> <p>
            <code>MEMORY_ACTIVITY</code> </p> </li> <li> <p> <code>MODULE_ACTIVITY</code>
            </p> </li> <li> <p> <code>PROCESS_ACTIVITY</code> </p> </li> <li> <p>
            <code>REGISTRY_KEY_ACTIVITY</code> </p> </li> <li> <p> <code>REGISTRY_VALUE_ACTIVITY</code>
            </p> </li> <li> <p> <code>RESOURCE_ACTIVITY</code> </p> </li> <li> <p>
            <code>SCHEDULED_JOB_ACTIVITY</code> </p> </li> <li> <p> <code>SECURITY_FINDING</code>
            </p> </li> <li> <p> <code>ACCOUNT_CHANGE</code> </p> </li> <li> <p> <code>AUTHENTICATION</code>
            </p> </li> <li> <p> <code>AUTHORIZATION</code> </p> </li> <li> <p> <code>ENTITY_MANAGEMENT_AUDIT</code>
            </p> </li> <li> <p> <code>DHCP_ACTIVITY</code> </p> </li> <li> <p> <code>NETWORK_ACTIVITY</code>
            </p> </li> <li> <p> <code>DNS_ACTIVITY</code> </p> </li> <li> <p> <code>FTP_ACTIVITY</code>
            </p> </li> <li> <p> <code>HTTP_ACTIVITY</code> </p> </li> <li> <p> <code>RDP_ACTIVITY</code>
            </p> </li> <li> <p> <code>SMB_ACTIVITY</code> </p> </li> <li> <p> <code>SSH_ACTIVITY</code>
            </p> </li> <li> <p> <code>CONFIG_STATE</code> </p> </li> <li> <p> <code>INVENTORY_INFO</code>
            </p> </li> <li> <p> <code>EMAIL_ACTIVITY</code> </p> </li> <li> <p> <code>API_ACTIVITY</code>
            </p> </li> <li> <p> <code>CLOUD_API</code> </p> </li> </ul>
          items:
            $ref: '#/components/schemas/OcsfEventClass'
          type: array
        sourceName:
          description: Specify the name for a third-party custom source. This must
            be a Regionally unique value.
          maxLength: 64
          minLength: 1
          pattern: "^[\\\\\\w\\-_:/.]*$"
          type: string
        sourceVersion:
          description: "Specify the source version for the third-party custom source,\
            \ to limit log collection to a specific version of custom data source."
          maxLength: 32
          minLength: 1
          pattern: "^[A-Za-z0-9\\-\\.\\_]*$"
          type: string
      required:
      - sourceName
      type: object
    UpdateDataLake_request:
      properties:
        configurations:
          description: Specify the Region or Regions that will contribute data to
            the rollup region.
          items:
            $ref: '#/components/schemas/DataLakeConfiguration'
          type: array
      required:
      - configurations
      type: object
    CreateDataLake_request:
      properties:
        configurations:
          description: Specify the Region or Regions that will contribute data to
            the rollup region.
          items:
            $ref: '#/components/schemas/DataLakeConfiguration'
          type: array
        metaStoreManagerRoleArn:
          description: The Amazon Resource Name (ARN) used to create and update the
            Glue table. This table contains partitions generated by the ingestion
            and normalization of Amazon Web Services log sources and custom sources.
          pattern: ^arn:.*$
          type: string
        tags:
          description: "An array of objects, one for each tag to associate with the\
            \ data lake configuration. For each tag, you must specify both a tag key\
            \ and a tag value. A tag value cannot be null, but it can be an empty\
            \ string."
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - configurations
      - metaStoreManagerRoleArn
      type: object
    UpdateDataLakeExceptionSubscription_request:
      properties:
        exceptionTimeToLive:
          description: The time-to-live (TTL) for the exception message to remain.
          minimum: 1
          type: integer
        notificationEndpoint:
          description: The account that is subscribed to receive exception notifications.
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
        subscriptionProtocol:
          description: The subscription protocol to which exception messages are posted.
          pattern: "^[a-z\\-]*$"
          type: string
      required:
      - notificationEndpoint
      - subscriptionProtocol
      type: object
    CreateDataLakeExceptionSubscription_request:
      properties:
        exceptionTimeToLive:
          description: The expiration period and time-to-live (TTL).
          minimum: 1
          type: integer
        notificationEndpoint:
          description: The Amazon Web Services account where you want to receive exception
            notifications.
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
        subscriptionProtocol:
          description: The subscription protocol to which exception notifications
            are posted.
          pattern: "^[a-z\\-]*$"
          type: string
      required:
      - notificationEndpoint
      - subscriptionProtocol
      type: object
    CreateDataLakeOrganizationConfiguration_request:
      properties:
        autoEnableNewAccount:
          description: "Enable Security Lake with the specified configuration settings,\
            \ to begin collecting security data for new accounts in your organization."
          items:
            $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
          type: array
      required:
      - autoEnableNewAccount
      type: object
    CreateSubscriber_request_subscriberIdentity:
      description: The AWS identity.
      properties:
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          - description: The external ID used to estalish trust relationship with
              the AWS identity.
        principal:
          allOf:
          - $ref: '#/components/schemas/AwsPrincipal'
          - description: The AWS identity principal.
      type: object
    CreateSubscriber_request:
      properties:
        accessTypes:
          description: The Amazon S3 or Lake Formation access type.
          items:
            $ref: '#/components/schemas/AccessType'
          type: array
        sources:
          description: The supported Amazon Web Services from which logs and events
            are collected. Security Lake supports log and event collection for natively
            supported Amazon Web Services.
          items:
            $ref: '#/components/schemas/LogSourceResource'
          type: array
        subscriberDescription:
          description: The description for your subscriber account in Security Lake.
          pattern: "^[\\\\\\w\\s\\-_:/,.@=+]*$"
          type: string
        subscriberIdentity:
          $ref: '#/components/schemas/CreateSubscriber_request_subscriberIdentity'
        subscriberName:
          description: The name of your Security Lake subscriber account.
          maxLength: 64
          minLength: 0
          type: string
        tags:
          description: "An array of objects, one for each tag to associate with the\
            \ subscriber. For each tag, you must specify both a tag key and a tag\
            \ value. A tag value cannot be null, but it can be an empty string."
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - sources
      - subscriberIdentity
      - subscriberName
      type: object
    UpdateSubscriberNotification_request_configuration_httpsNotificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/HttpsNotificationConfiguration'
      - description: The configurations for HTTPS subscriber notification.
      example:
        endpoint: ""
        targetRoleArn: ""
        authorizationApiKeyValue: ""
        httpMethod: ""
        authorizationApiKeyName: ""
    UpdateSubscriberNotification_request_configuration:
      description: 'Specify the configurations you want to use for subscriber notification
        to notify the subscriber when new data is written to the data lake for sources
        that the subscriber consumes in Security Lake. '
      properties:
        httpsNotificationConfiguration:
          $ref: '#/components/schemas/UpdateSubscriberNotification_request_configuration_httpsNotificationConfiguration'
        sqsNotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/SqsNotificationConfiguration'
          - description: The configurations for SQS subscriber notification.
      type: object
    UpdateSubscriberNotification_request:
      properties:
        configuration:
          $ref: '#/components/schemas/UpdateSubscriberNotification_request_configuration'
      required:
      - configuration
      type: object
    DeleteAwsLogSource_request:
      properties:
        sources:
          description: Specify the natively-supported Amazon Web Services service
            to remove as a source in Security Lake.
          items:
            $ref: '#/components/schemas/AwsLogSourceConfiguration'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - sources
      type: object
    DeleteDataLake_request:
      properties:
        regions:
          description: The list of Regions where Security Lake is enabled.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      required:
      - regions
      type: object
    DeleteDataLakeOrganizationConfiguration_request:
      properties:
        autoEnableNewAccount:
          description: Turns off automatic enablement of Security Lake for member
            accounts that are added to an organization.
          items:
            $ref: '#/components/schemas/DataLakeAutoEnableNewAccountConfiguration'
          type: array
      required:
      - autoEnableNewAccount
      type: object
    UpdateSubscriber_request:
      properties:
        sources:
          description: "The supported Amazon Web Services from which logs and events\
            \ are collected. For the list of supported Amazon Web Services, see the\
            \ <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\"\
            >Amazon Security Lake User Guide</a>."
          items:
            $ref: '#/components/schemas/LogSourceResource'
          type: array
        subscriberDescription:
          description: The description of the Security Lake account subscriber.
          pattern: "^[\\\\\\w\\s\\-_:/,.@=+]*$"
          type: string
        subscriberIdentity:
          $ref: '#/components/schemas/CreateSubscriber_request_subscriberIdentity'
        subscriberName:
          description: The name of the Security Lake account subscriber.
          maxLength: 64
          minLength: 0
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
      type: object
    RegisterDataLakeDelegatedAdministrator_request:
      properties:
        accountId:
          description: The Amazon Web Services account ID of the Security Lake delegated
            administrator.
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
      required:
      - accountId
      type: object
    GetDataLakeSources_request:
      properties:
        accounts:
          description: "The Amazon Web Services account ID for which a static snapshot\
            \ of the current Amazon Web Services Region, including enabled accounts\
            \ and log sources, is retrieved."
          items:
            $ref: '#/components/schemas/AwsAccountId'
          type: array
        maxResults:
          description: "The maximum limit of accounts for which the static snapshot\
            \ of the current Region, including enabled accounts and log sources, is\
            \ retrieved."
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: <p>Lists if there are more results available. The value of
            nextToken is a unique pagination token for each page. Repeat the call
            using the returned token to retrieve the next page. Keep all other arguments
            unchanged.</p> <p>Each pagination token expires after 24 hours. Using
            an expired pagination token will return an HTTP 400 InvalidToken error.</p>
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
      type: object
    ListDataLakeExceptions_request:
      properties:
        maxResults:
          description: List the maximum number of failures in Security Lake.
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: <p>List if there are more results available. The value of nextToken
            is a unique pagination token for each page. Repeat the call using the
            returned token to retrieve the next page. Keep all other arguments unchanged.</p>
            <p>Each pagination token expires after 24 hours. Using an expired pagination
            token will return an HTTP 400 InvalidToken error.</p>
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
        regions:
          description: List the Amazon Web Services Regions from which exceptions
            are retrieved.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      type: object
    ListLogSources_request:
      properties:
        accounts:
          description: The list of Amazon Web Services accounts for which log sources
            are displayed.
          items:
            $ref: '#/components/schemas/AwsAccountId'
          type: array
        maxResults:
          description: The maximum number of accounts for which the log sources are
            displayed.
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: "If nextToken is returned, there are more results available.\
            \ You can repeat the call using the returned token to retrieve the next\
            \ page."
          pattern: "^[\\\\\\w\\-_:/.@=+]*$"
          type: string
        regions:
          description: The list of regions for which log sources are displayed.
          items:
            $ref: '#/components/schemas/Region'
          type: array
        sources:
          description: The list of sources for which log sources are displayed.
          items:
            $ref: '#/components/schemas/LogSourceResource'
          type: array
      type: object
    TagResource_request:
      properties:
        tags:
          description: "An array of objects, one for each tag (key and value) to associate\
            \ with the Amazon Security Lake resource. For each tag, you must specify\
            \ both a tag key and a tag value. A tag value cannot be null, but it can\
            \ be an empty string."
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - tags
      type: object
    CreateCustomLogSourceResponse_source:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceResource'
      - description: The created third-party custom source.
      example:
        provider:
          roleArn: ""
          location: ""
        sourceVersion: ""
        attributes:
          databaseArn: ""
          crawlerArn: ""
          tableArn: ""
        sourceName: ""
    DataLakeConfiguration_encryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/DataLakeEncryptionConfiguration'
      - description: Provides encryption details of Amazon Security Lake object.
    DataLakeConfiguration_lifecycleConfiguration:
      allOf:
      - $ref: '#/components/schemas/DataLakeLifecycleConfiguration'
      - description: Provides lifecycle details of Amazon Security Lake object.
    DataLakeConfiguration_replicationConfiguration:
      allOf:
      - $ref: '#/components/schemas/DataLakeReplicationConfiguration'
      - description: Provides replication details of Amazon Security Lake object.
    CreateSubscriberResponse_subscriber:
      allOf:
      - $ref: '#/components/schemas/SubscriberResource'
      - description: Retrieve information about the subscriber created using the <code>CreateSubscriber</code>
          API.
      example:
        s3BucketArn: ""
        resourceShareName: ""
        sources: ""
        resourceShareArn: ""
        subscriberStatus: ""
        subscriberId: ""
        subscriberIdentity:
          principal: ""
          externalId: ""
        accessTypes: ""
        createdAt: ""
        subscriberDescription: ""
        subscriberEndpoint: ""
        subscriberArn: ""
        roleArn: ""
        subscriberName: ""
        updatedAt: ""
    LogSourceResource_awsLogSource:
      allOf:
      - $ref: '#/components/schemas/AwsLogSourceResource'
      - description: "Amazon Security Lake supports log and event collection for natively\
          \ supported Amazon Web Services. For more information, see the <a href=\"\
          https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\"\
          >Amazon Security Lake User Guide</a>."
    LogSourceResource_customLogSource:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceResource'
      - description: "Amazon Security Lake supports custom source types. For more\
          \ information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/custom-sources.html\"\
          >Amazon Security Lake User Guide</a>."
    GetSubscriberResponse_subscriber:
      allOf:
      - $ref: '#/components/schemas/SubscriberResource'
      - description: The subscriber information for the specified subscriber ID.
      example:
        s3BucketArn: ""
        resourceShareName: ""
        sources: ""
        resourceShareArn: ""
        subscriberStatus: ""
        subscriberId: ""
        subscriberIdentity:
          principal: ""
          externalId: ""
        accessTypes: ""
        createdAt: ""
        subscriberDescription: ""
        subscriberEndpoint: ""
        subscriberArn: ""
        roleArn: ""
        subscriberName: ""
        updatedAt: ""
    UpdateSubscriberResponse_subscriber:
      allOf:
      - $ref: '#/components/schemas/SubscriberResource'
      - description: The updated subscriber information.
      example:
        s3BucketArn: ""
        resourceShareName: ""
        sources: ""
        resourceShareArn: ""
        subscriberStatus: ""
        subscriberId: ""
        subscriberIdentity:
          principal: ""
          externalId: ""
        accessTypes: ""
        createdAt: ""
        subscriberDescription: ""
        subscriberEndpoint: ""
        subscriberArn: ""
        roleArn: ""
        subscriberName: ""
        updatedAt: ""
    CreateCustomLogSourceRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceConfiguration'
      - description: The configuration for the third-party custom source.
      example:
        crawlerConfiguration:
          roleArn: ""
        providerIdentity:
          principal: ""
          externalId: ""
    CustomLogSourceResource_attributes:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceAttributes'
      - description: The attributes of a third-party custom source.
      example:
        databaseArn: ""
        crawlerArn: ""
        tableArn: ""
    CustomLogSourceResource_provider:
      allOf:
      - $ref: '#/components/schemas/CustomLogSourceProvider'
      - description: The details of the log provider for a third-party custom source.
      example:
        roleArn: ""
        location: ""
    CreateSubscriberNotificationRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: Specify the configuration using which you want to create the
          subscriber notification.
    CreateSubscriberRequest_subscriberIdentity:
      allOf:
      - $ref: '#/components/schemas/AwsIdentity'
      - description: The AWS identity used to access your data.
      example:
        principal: ""
        externalId: ""
    DataLakeLifecycleConfiguration_expiration:
      allOf:
      - $ref: '#/components/schemas/DataLakeLifecycleExpiration'
      - description: Provides data expiration details of Amazon Security Lake object.
    DataLakeUpdateStatus_exception:
      allOf:
      - $ref: '#/components/schemas/DataLakeUpdateException'
      - description: The details of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code>
          API request which failed.
    DataLakeResource_updateStatus:
      allOf:
      - $ref: '#/components/schemas/DataLakeUpdateStatus'
      - description: The status of the last <code>UpdateDataLake </code>or <code>DeleteDataLake</code>
          API request.
    UpdateSubscriberNotificationRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: The configuration for subscriber notification.
      example:
        sqsNotificationConfiguration: ""
        httpsNotificationConfiguration:
          endpoint: ""
          targetRoleArn: ""
          authorizationApiKeyValue: ""
          httpMethod: ""
          authorizationApiKeyName: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

