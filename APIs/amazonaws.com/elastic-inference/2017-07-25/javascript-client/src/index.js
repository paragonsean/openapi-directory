/**
 * Amazon Elastic  Inference
 * <p> Elastic Inference public APIs. </p> <p> February 15, 2023: Starting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. </p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceleratorType from './model/AcceleratorType';
import AcceleratorTypeMemoryInfo from './model/AcceleratorTypeMemoryInfo';
import AcceleratorTypeOffering from './model/AcceleratorTypeOffering';
import DescribeAcceleratorOfferingsRequest from './model/DescribeAcceleratorOfferingsRequest';
import DescribeAcceleratorOfferingsResponse from './model/DescribeAcceleratorOfferingsResponse';
import DescribeAcceleratorTypesResponse from './model/DescribeAcceleratorTypesResponse';
import DescribeAcceleratorsRequest from './model/DescribeAcceleratorsRequest';
import DescribeAcceleratorsResponse from './model/DescribeAcceleratorsResponse';
import ElasticInferenceAccelerator from './model/ElasticInferenceAccelerator';
import ElasticInferenceAcceleratorAcceleratorHealth from './model/ElasticInferenceAcceleratorAcceleratorHealth';
import ElasticInferenceAcceleratorHealth from './model/ElasticInferenceAcceleratorHealth';
import Filter from './model/Filter';
import KeyValuePair from './model/KeyValuePair';
import ListTagsForResourceResult from './model/ListTagsForResourceResult';
import LocationType from './model/LocationType';
import MemoryInfo from './model/MemoryInfo';
import TagResourceRequest from './model/TagResourceRequest';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt; Elastic Inference public APIs. &lt;/p&gt; &lt;p&gt; February 15, 2023: Starting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. &lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonElasticInference = require('index'); // See note below*.
* var xxxSvc = new AmazonElasticInference.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonElasticInference.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonElasticInference.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonElasticInference.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-07-25
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceleratorType model constructor.
     * @property {module:model/AcceleratorType}
     */
    AcceleratorType,

    /**
     * The AcceleratorTypeMemoryInfo model constructor.
     * @property {module:model/AcceleratorTypeMemoryInfo}
     */
    AcceleratorTypeMemoryInfo,

    /**
     * The AcceleratorTypeOffering model constructor.
     * @property {module:model/AcceleratorTypeOffering}
     */
    AcceleratorTypeOffering,

    /**
     * The DescribeAcceleratorOfferingsRequest model constructor.
     * @property {module:model/DescribeAcceleratorOfferingsRequest}
     */
    DescribeAcceleratorOfferingsRequest,

    /**
     * The DescribeAcceleratorOfferingsResponse model constructor.
     * @property {module:model/DescribeAcceleratorOfferingsResponse}
     */
    DescribeAcceleratorOfferingsResponse,

    /**
     * The DescribeAcceleratorTypesResponse model constructor.
     * @property {module:model/DescribeAcceleratorTypesResponse}
     */
    DescribeAcceleratorTypesResponse,

    /**
     * The DescribeAcceleratorsRequest model constructor.
     * @property {module:model/DescribeAcceleratorsRequest}
     */
    DescribeAcceleratorsRequest,

    /**
     * The DescribeAcceleratorsResponse model constructor.
     * @property {module:model/DescribeAcceleratorsResponse}
     */
    DescribeAcceleratorsResponse,

    /**
     * The ElasticInferenceAccelerator model constructor.
     * @property {module:model/ElasticInferenceAccelerator}
     */
    ElasticInferenceAccelerator,

    /**
     * The ElasticInferenceAcceleratorAcceleratorHealth model constructor.
     * @property {module:model/ElasticInferenceAcceleratorAcceleratorHealth}
     */
    ElasticInferenceAcceleratorAcceleratorHealth,

    /**
     * The ElasticInferenceAcceleratorHealth model constructor.
     * @property {module:model/ElasticInferenceAcceleratorHealth}
     */
    ElasticInferenceAcceleratorHealth,

    /**
     * The Filter model constructor.
     * @property {module:model/Filter}
     */
    Filter,

    /**
     * The KeyValuePair model constructor.
     * @property {module:model/KeyValuePair}
     */
    KeyValuePair,

    /**
     * The ListTagsForResourceResult model constructor.
     * @property {module:model/ListTagsForResourceResult}
     */
    ListTagsForResourceResult,

    /**
     * The LocationType model constructor.
     * @property {module:model/LocationType}
     */
    LocationType,

    /**
     * The MemoryInfo model constructor.
     * @property {module:model/MemoryInfo}
     */
    MemoryInfo,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
