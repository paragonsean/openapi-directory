/**
 * Amazon Elastic  Inference
 * <p> Elastic Inference public APIs. </p> <p> February 15, 2023: Starting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. </p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Filter from './Filter';

/**
 * The DescribeAcceleratorsRequest model module.
 * @module model/DescribeAcceleratorsRequest
 * @version 2017-07-25
 */
class DescribeAcceleratorsRequest {
    /**
     * Constructs a new <code>DescribeAcceleratorsRequest</code>.
     * @alias module:model/DescribeAcceleratorsRequest
     */
    constructor() { 
        
        DescribeAcceleratorsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeAcceleratorsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeAcceleratorsRequest} obj Optional instance to populate.
     * @return {module:model/DescribeAcceleratorsRequest} The populated <code>DescribeAcceleratorsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeAcceleratorsRequest();

            if (data.hasOwnProperty('acceleratorIds')) {
                obj['acceleratorIds'] = ApiClient.convertToType(data['acceleratorIds'], ['String']);
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [Filter]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeAcceleratorsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeAcceleratorsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['acceleratorIds'])) {
            throw new Error("Expected the field `acceleratorIds` to be an array in the JSON data but got " + data['acceleratorIds']);
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                Filter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}



/**
 *  The IDs of the accelerators to describe. 
 * @member {Array.<String>} acceleratorIds
 */
DescribeAcceleratorsRequest.prototype['acceleratorIds'] = undefined;

/**
 *  One or more filters. Filter names and values are case-sensitive. Valid filter names are: accelerator-types: can provide a list of accelerator type names to filter for. instance-id: can provide a list of EC2 instance ids to filter for. 
 * @member {Array.<module:model/Filter>} filters
 */
DescribeAcceleratorsRequest.prototype['filters'] = undefined;

/**
 *  The total number of items to return in the command's output. If the total number of items available is more than the value specified, a NextToken is provided in the command's output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI. 
 * @member {Number} maxResults
 */
DescribeAcceleratorsRequest.prototype['maxResults'] = undefined;

/**
 *  A token to specify where to start paginating. This is the NextToken from a previously truncated response. 
 * @member {String} nextToken
 */
DescribeAcceleratorsRequest.prototype['nextToken'] = undefined;






export default DescribeAcceleratorsRequest;

