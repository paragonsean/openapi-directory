/**
 * Amazon Elastic  Inference
 * <p> Elastic Inference public APIs. </p> <p> February 15, 2023: Starting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. </p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAcceleratorType.h
 *
 *  The details of an Elastic Inference Accelerator type. 
 */

#ifndef OAIAcceleratorType_H
#define OAIAcceleratorType_H

#include <QJsonObject>

#include "OAIAcceleratorType_memoryInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAcceleratorType_memoryInfo;

class OAIAcceleratorType : public OAIObject {
public:
    OAIAcceleratorType();
    OAIAcceleratorType(QString json);
    ~OAIAcceleratorType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceleratorTypeName() const;
    void setAcceleratorTypeName(const QString &accelerator_type_name);
    bool is_accelerator_type_name_Set() const;
    bool is_accelerator_type_name_Valid() const;

    OAIAcceleratorType_memoryInfo getMemoryInfo() const;
    void setMemoryInfo(const OAIAcceleratorType_memoryInfo &memory_info);
    bool is_memory_info_Set() const;
    bool is_memory_info_Valid() const;

    QList getThroughputInfo() const;
    void setThroughputInfo(const QList &throughput_info);
    bool is_throughput_info_Set() const;
    bool is_throughput_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accelerator_type_name;
    bool m_accelerator_type_name_isSet;
    bool m_accelerator_type_name_isValid;

    OAIAcceleratorType_memoryInfo m_memory_info;
    bool m_memory_info_isSet;
    bool m_memory_info_isValid;

    QList m_throughput_info;
    bool m_throughput_info_isSet;
    bool m_throughput_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAcceleratorType)

#endif // OAIAcceleratorType_H
