/**
 * Amazon Elastic  Inference
 * <p> Elastic Inference public APIs. </p> <p> February 15, 2023: Starting April 15, 2023, AWS will not onboard new customers to Amazon Elastic Inference (EI), and will help current customers migrate their workloads to options that offer better price and performance. After April 15, 2023, new customers will not be able to launch instances with Amazon EI accelerators in Amazon SageMaker, Amazon ECS, or Amazon EC2. However, customers who have used Amazon EI at least once during the past 30-day period are considered current customers and will be able to continue using the service. </p>
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAcceleratorOfferingsResponse.h
 *
 * 
 */

#ifndef OAIDescribeAcceleratorOfferingsResponse_H
#define OAIDescribeAcceleratorOfferingsResponse_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeAcceleratorOfferingsResponse : public OAIObject {
public:
    OAIDescribeAcceleratorOfferingsResponse();
    OAIDescribeAcceleratorOfferingsResponse(QString json);
    ~OAIDescribeAcceleratorOfferingsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAcceleratorTypeOfferings() const;
    void setAcceleratorTypeOfferings(const QList &accelerator_type_offerings);
    bool is_accelerator_type_offerings_Set() const;
    bool is_accelerator_type_offerings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_accelerator_type_offerings;
    bool m_accelerator_type_offerings_isSet;
    bool m_accelerator_type_offerings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAcceleratorOfferingsResponse)

#endif // OAIDescribeAcceleratorOfferingsResponse_H
