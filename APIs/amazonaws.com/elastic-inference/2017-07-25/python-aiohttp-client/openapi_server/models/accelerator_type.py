# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accelerator_type_memory_info import AcceleratorTypeMemoryInfo
from openapi_server import util


class AcceleratorType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_type_name: str=None, memory_info: AcceleratorTypeMemoryInfo=None, throughput_info: List=None):
        """AcceleratorType - a model defined in OpenAPI

        :param accelerator_type_name: The accelerator_type_name of this AcceleratorType.
        :param memory_info: The memory_info of this AcceleratorType.
        :param throughput_info: The throughput_info of this AcceleratorType.
        """
        self.openapi_types = {
            'accelerator_type_name': str,
            'memory_info': AcceleratorTypeMemoryInfo,
            'throughput_info': List
        }

        self.attribute_map = {
            'accelerator_type_name': 'acceleratorTypeName',
            'memory_info': 'memoryInfo',
            'throughput_info': 'throughputInfo'
        }

        self._accelerator_type_name = accelerator_type_name
        self._memory_info = memory_info
        self._throughput_info = throughput_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceleratorType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceleratorType of this AcceleratorType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_type_name(self):
        """Gets the accelerator_type_name of this AcceleratorType.


        :return: The accelerator_type_name of this AcceleratorType.
        :rtype: str
        """
        return self._accelerator_type_name

    @accelerator_type_name.setter
    def accelerator_type_name(self, accelerator_type_name):
        """Sets the accelerator_type_name of this AcceleratorType.


        :param accelerator_type_name: The accelerator_type_name of this AcceleratorType.
        :type accelerator_type_name: str
        """

        self._accelerator_type_name = accelerator_type_name

    @property
    def memory_info(self):
        """Gets the memory_info of this AcceleratorType.


        :return: The memory_info of this AcceleratorType.
        :rtype: AcceleratorTypeMemoryInfo
        """
        return self._memory_info

    @memory_info.setter
    def memory_info(self, memory_info):
        """Sets the memory_info of this AcceleratorType.


        :param memory_info: The memory_info of this AcceleratorType.
        :type memory_info: AcceleratorTypeMemoryInfo
        """

        self._memory_info = memory_info

    @property
    def throughput_info(self):
        """Gets the throughput_info of this AcceleratorType.


        :return: The throughput_info of this AcceleratorType.
        :rtype: List
        """
        return self._throughput_info

    @throughput_info.setter
    def throughput_info(self, throughput_info):
        """Sets the throughput_info of this AcceleratorType.


        :param throughput_info: The throughput_info of this AcceleratorType.
        :type throughput_info: List
        """

        self._throughput_info = throughput_info
