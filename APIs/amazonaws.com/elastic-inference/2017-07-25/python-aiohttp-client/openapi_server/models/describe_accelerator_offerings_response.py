# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeAcceleratorOfferingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_type_offerings: List=None):
        """DescribeAcceleratorOfferingsResponse - a model defined in OpenAPI

        :param accelerator_type_offerings: The accelerator_type_offerings of this DescribeAcceleratorOfferingsResponse.
        """
        self.openapi_types = {
            'accelerator_type_offerings': List
        }

        self.attribute_map = {
            'accelerator_type_offerings': 'acceleratorTypeOfferings'
        }

        self._accelerator_type_offerings = accelerator_type_offerings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAcceleratorOfferingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAcceleratorOfferingsResponse of this DescribeAcceleratorOfferingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_type_offerings(self):
        """Gets the accelerator_type_offerings of this DescribeAcceleratorOfferingsResponse.


        :return: The accelerator_type_offerings of this DescribeAcceleratorOfferingsResponse.
        :rtype: List
        """
        return self._accelerator_type_offerings

    @accelerator_type_offerings.setter
    def accelerator_type_offerings(self, accelerator_type_offerings):
        """Sets the accelerator_type_offerings of this DescribeAcceleratorOfferingsResponse.


        :param accelerator_type_offerings: The accelerator_type_offerings of this DescribeAcceleratorOfferingsResponse.
        :type accelerator_type_offerings: List
        """

        self._accelerator_type_offerings = accelerator_type_offerings
