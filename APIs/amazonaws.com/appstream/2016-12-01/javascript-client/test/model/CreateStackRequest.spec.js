/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonAppStream);
  }
}(this, function(expect, AmazonAppStream) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonAppStream.CreateStackRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateStackRequest', function() {
    it('should create an instance of CreateStackRequest', function() {
      // uncomment below and update the code to test CreateStackRequest
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be.a(AmazonAppStream.CreateStackRequest);
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "DisplayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property storageConnectors (base name: "StorageConnectors")', function() {
      // uncomment below and update the code to test the property storageConnectors
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property redirectURL (base name: "RedirectURL")', function() {
      // uncomment below and update the code to test the property redirectURL
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property feedbackURL (base name: "FeedbackURL")', function() {
      // uncomment below and update the code to test the property feedbackURL
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property userSettings (base name: "UserSettings")', function() {
      // uncomment below and update the code to test the property userSettings
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property applicationSettings (base name: "ApplicationSettings")', function() {
      // uncomment below and update the code to test the property applicationSettings
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property accessEndpoints (base name: "AccessEndpoints")', function() {
      // uncomment below and update the code to test the property accessEndpoints
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property embedHostDomains (base name: "EmbedHostDomains")', function() {
      // uncomment below and update the code to test the property embedHostDomains
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

    it('should have the property streamingExperienceSettings (base name: "StreamingExperienceSettings")', function() {
      // uncomment below and update the code to test the property streamingExperienceSettings
      //var instance = new AmazonAppStream.CreateStackRequest();
      //expect(instance).to.be();
    });

  });

}));
