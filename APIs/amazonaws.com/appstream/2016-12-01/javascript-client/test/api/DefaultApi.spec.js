/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonAppStream);
  }
}(this, function(expect, AmazonAppStream) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonAppStream.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateAppBlockBuilderAppBlock', function() {
      it('should call associateAppBlockBuilderAppBlock successfully', function(done) {
        //uncomment below and update the code to test associateAppBlockBuilderAppBlock
        //instance.associateAppBlockBuilderAppBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateApplicationFleet', function() {
      it('should call associateApplicationFleet successfully', function(done) {
        //uncomment below and update the code to test associateApplicationFleet
        //instance.associateApplicationFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateApplicationToEntitlement', function() {
      it('should call associateApplicationToEntitlement successfully', function(done) {
        //uncomment below and update the code to test associateApplicationToEntitlement
        //instance.associateApplicationToEntitlement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateFleet', function() {
      it('should call associateFleet successfully', function(done) {
        //uncomment below and update the code to test associateFleet
        //instance.associateFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchAssociateUserStack', function() {
      it('should call batchAssociateUserStack successfully', function(done) {
        //uncomment below and update the code to test batchAssociateUserStack
        //instance.batchAssociateUserStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDisassociateUserStack', function() {
      it('should call batchDisassociateUserStack successfully', function(done) {
        //uncomment below and update the code to test batchDisassociateUserStack
        //instance.batchDisassociateUserStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyImage', function() {
      it('should call copyImage successfully', function(done) {
        //uncomment below and update the code to test copyImage
        //instance.copyImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppBlock', function() {
      it('should call createAppBlock successfully', function(done) {
        //uncomment below and update the code to test createAppBlock
        //instance.createAppBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppBlockBuilder', function() {
      it('should call createAppBlockBuilder successfully', function(done) {
        //uncomment below and update the code to test createAppBlockBuilder
        //instance.createAppBlockBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppBlockBuilderStreamingURL', function() {
      it('should call createAppBlockBuilderStreamingURL successfully', function(done) {
        //uncomment below and update the code to test createAppBlockBuilderStreamingURL
        //instance.createAppBlockBuilderStreamingURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createApplication', function() {
      it('should call createApplication successfully', function(done) {
        //uncomment below and update the code to test createApplication
        //instance.createApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDirectoryConfig', function() {
      it('should call createDirectoryConfig successfully', function(done) {
        //uncomment below and update the code to test createDirectoryConfig
        //instance.createDirectoryConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEntitlement', function() {
      it('should call createEntitlement successfully', function(done) {
        //uncomment below and update the code to test createEntitlement
        //instance.createEntitlement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFleet', function() {
      it('should call createFleet successfully', function(done) {
        //uncomment below and update the code to test createFleet
        //instance.createFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImageBuilder', function() {
      it('should call createImageBuilder successfully', function(done) {
        //uncomment below and update the code to test createImageBuilder
        //instance.createImageBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImageBuilderStreamingURL', function() {
      it('should call createImageBuilderStreamingURL successfully', function(done) {
        //uncomment below and update the code to test createImageBuilderStreamingURL
        //instance.createImageBuilderStreamingURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStack', function() {
      it('should call createStack successfully', function(done) {
        //uncomment below and update the code to test createStack
        //instance.createStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStreamingURL', function() {
      it('should call createStreamingURL successfully', function(done) {
        //uncomment below and update the code to test createStreamingURL
        //instance.createStreamingURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUpdatedImage', function() {
      it('should call createUpdatedImage successfully', function(done) {
        //uncomment below and update the code to test createUpdatedImage
        //instance.createUpdatedImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUsageReportSubscription', function() {
      it('should call createUsageReportSubscription successfully', function(done) {
        //uncomment below and update the code to test createUsageReportSubscription
        //instance.createUsageReportSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppBlock', function() {
      it('should call deleteAppBlock successfully', function(done) {
        //uncomment below and update the code to test deleteAppBlock
        //instance.deleteAppBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppBlockBuilder', function() {
      it('should call deleteAppBlockBuilder successfully', function(done) {
        //uncomment below and update the code to test deleteAppBlockBuilder
        //instance.deleteAppBlockBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApplication', function() {
      it('should call deleteApplication successfully', function(done) {
        //uncomment below and update the code to test deleteApplication
        //instance.deleteApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDirectoryConfig', function() {
      it('should call deleteDirectoryConfig successfully', function(done) {
        //uncomment below and update the code to test deleteDirectoryConfig
        //instance.deleteDirectoryConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntitlement', function() {
      it('should call deleteEntitlement successfully', function(done) {
        //uncomment below and update the code to test deleteEntitlement
        //instance.deleteEntitlement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFleet', function() {
      it('should call deleteFleet successfully', function(done) {
        //uncomment below and update the code to test deleteFleet
        //instance.deleteFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImage', function() {
      it('should call deleteImage successfully', function(done) {
        //uncomment below and update the code to test deleteImage
        //instance.deleteImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImageBuilder', function() {
      it('should call deleteImageBuilder successfully', function(done) {
        //uncomment below and update the code to test deleteImageBuilder
        //instance.deleteImageBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImagePermissions', function() {
      it('should call deleteImagePermissions successfully', function(done) {
        //uncomment below and update the code to test deleteImagePermissions
        //instance.deleteImagePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStack', function() {
      it('should call deleteStack successfully', function(done) {
        //uncomment below and update the code to test deleteStack
        //instance.deleteStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUsageReportSubscription', function() {
      it('should call deleteUsageReportSubscription successfully', function(done) {
        //uncomment below and update the code to test deleteUsageReportSubscription
        //instance.deleteUsageReportSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUser', function() {
      it('should call deleteUser successfully', function(done) {
        //uncomment below and update the code to test deleteUser
        //instance.deleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAppBlockBuilderAppBlockAssociations', function() {
      it('should call describeAppBlockBuilderAppBlockAssociations successfully', function(done) {
        //uncomment below and update the code to test describeAppBlockBuilderAppBlockAssociations
        //instance.describeAppBlockBuilderAppBlockAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAppBlockBuilders', function() {
      it('should call describeAppBlockBuilders successfully', function(done) {
        //uncomment below and update the code to test describeAppBlockBuilders
        //instance.describeAppBlockBuilders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAppBlocks', function() {
      it('should call describeAppBlocks successfully', function(done) {
        //uncomment below and update the code to test describeAppBlocks
        //instance.describeAppBlocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeApplicationFleetAssociations', function() {
      it('should call describeApplicationFleetAssociations successfully', function(done) {
        //uncomment below and update the code to test describeApplicationFleetAssociations
        //instance.describeApplicationFleetAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeApplications', function() {
      it('should call describeApplications successfully', function(done) {
        //uncomment below and update the code to test describeApplications
        //instance.describeApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDirectoryConfigs', function() {
      it('should call describeDirectoryConfigs successfully', function(done) {
        //uncomment below and update the code to test describeDirectoryConfigs
        //instance.describeDirectoryConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEntitlements', function() {
      it('should call describeEntitlements successfully', function(done) {
        //uncomment below and update the code to test describeEntitlements
        //instance.describeEntitlements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFleets', function() {
      it('should call describeFleets successfully', function(done) {
        //uncomment below and update the code to test describeFleets
        //instance.describeFleets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImageBuilders', function() {
      it('should call describeImageBuilders successfully', function(done) {
        //uncomment below and update the code to test describeImageBuilders
        //instance.describeImageBuilders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImagePermissions', function() {
      it('should call describeImagePermissions successfully', function(done) {
        //uncomment below and update the code to test describeImagePermissions
        //instance.describeImagePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImages', function() {
      it('should call describeImages successfully', function(done) {
        //uncomment below and update the code to test describeImages
        //instance.describeImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSessions', function() {
      it('should call describeSessions successfully', function(done) {
        //uncomment below and update the code to test describeSessions
        //instance.describeSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStacks', function() {
      it('should call describeStacks successfully', function(done) {
        //uncomment below and update the code to test describeStacks
        //instance.describeStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUsageReportSubscriptions', function() {
      it('should call describeUsageReportSubscriptions successfully', function(done) {
        //uncomment below and update the code to test describeUsageReportSubscriptions
        //instance.describeUsageReportSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserStackAssociations', function() {
      it('should call describeUserStackAssociations successfully', function(done) {
        //uncomment below and update the code to test describeUserStackAssociations
        //instance.describeUserStackAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUsers', function() {
      it('should call describeUsers successfully', function(done) {
        //uncomment below and update the code to test describeUsers
        //instance.describeUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableUser', function() {
      it('should call disableUser successfully', function(done) {
        //uncomment below and update the code to test disableUser
        //instance.disableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateAppBlockBuilderAppBlock', function() {
      it('should call disassociateAppBlockBuilderAppBlock successfully', function(done) {
        //uncomment below and update the code to test disassociateAppBlockBuilderAppBlock
        //instance.disassociateAppBlockBuilderAppBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateApplicationFleet', function() {
      it('should call disassociateApplicationFleet successfully', function(done) {
        //uncomment below and update the code to test disassociateApplicationFleet
        //instance.disassociateApplicationFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateApplicationFromEntitlement', function() {
      it('should call disassociateApplicationFromEntitlement successfully', function(done) {
        //uncomment below and update the code to test disassociateApplicationFromEntitlement
        //instance.disassociateApplicationFromEntitlement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateFleet', function() {
      it('should call disassociateFleet successfully', function(done) {
        //uncomment below and update the code to test disassociateFleet
        //instance.disassociateFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableUser', function() {
      it('should call enableUser successfully', function(done) {
        //uncomment below and update the code to test enableUser
        //instance.enableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expireSession', function() {
      it('should call expireSession successfully', function(done) {
        //uncomment below and update the code to test expireSession
        //instance.expireSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedFleets', function() {
      it('should call listAssociatedFleets successfully', function(done) {
        //uncomment below and update the code to test listAssociatedFleets
        //instance.listAssociatedFleets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedStacks', function() {
      it('should call listAssociatedStacks successfully', function(done) {
        //uncomment below and update the code to test listAssociatedStacks
        //instance.listAssociatedStacks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEntitledApplications', function() {
      it('should call listEntitledApplications successfully', function(done) {
        //uncomment below and update the code to test listEntitledApplications
        //instance.listEntitledApplications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startAppBlockBuilder', function() {
      it('should call startAppBlockBuilder successfully', function(done) {
        //uncomment below and update the code to test startAppBlockBuilder
        //instance.startAppBlockBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startFleet', function() {
      it('should call startFleet successfully', function(done) {
        //uncomment below and update the code to test startFleet
        //instance.startFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startImageBuilder', function() {
      it('should call startImageBuilder successfully', function(done) {
        //uncomment below and update the code to test startImageBuilder
        //instance.startImageBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopAppBlockBuilder', function() {
      it('should call stopAppBlockBuilder successfully', function(done) {
        //uncomment below and update the code to test stopAppBlockBuilder
        //instance.stopAppBlockBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopFleet', function() {
      it('should call stopFleet successfully', function(done) {
        //uncomment below and update the code to test stopFleet
        //instance.stopFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopImageBuilder', function() {
      it('should call stopImageBuilder successfully', function(done) {
        //uncomment below and update the code to test stopImageBuilder
        //instance.stopImageBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAppBlockBuilder', function() {
      it('should call updateAppBlockBuilder successfully', function(done) {
        //uncomment below and update the code to test updateAppBlockBuilder
        //instance.updateAppBlockBuilder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplication', function() {
      it('should call updateApplication successfully', function(done) {
        //uncomment below and update the code to test updateApplication
        //instance.updateApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDirectoryConfig', function() {
      it('should call updateDirectoryConfig successfully', function(done) {
        //uncomment below and update the code to test updateDirectoryConfig
        //instance.updateDirectoryConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEntitlement', function() {
      it('should call updateEntitlement successfully', function(done) {
        //uncomment below and update the code to test updateEntitlement
        //instance.updateEntitlement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFleet', function() {
      it('should call updateFleet successfully', function(done) {
        //uncomment below and update the code to test updateFleet
        //instance.updateFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateImagePermissions', function() {
      it('should call updateImagePermissions successfully', function(done) {
        //uncomment below and update the code to test updateImagePermissions
        //instance.updateImagePermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStack', function() {
      it('should call updateStack successfully', function(done) {
        //uncomment below and update the code to test updateStack
        //instance.updateStack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
