/*
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeApplicationFleetAssociationsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:46.976213-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeApplicationFleetAssociationsRequest {
  public static final String SERIALIZED_NAME_FLEET_NAME = "FleetName";
  @SerializedName(SERIALIZED_NAME_FLEET_NAME)
  private String fleetName;

  public static final String SERIALIZED_NAME_APPLICATION_ARN = "ApplicationArn";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ARN)
  private String applicationArn;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public DescribeApplicationFleetAssociationsRequest() {
  }

  public DescribeApplicationFleetAssociationsRequest fleetName(String fleetName) {
    this.fleetName = fleetName;
    return this;
  }

  /**
   * Get fleetName
   * @return fleetName
   */
  @javax.annotation.Nullable
  public String getFleetName() {
    return fleetName;
  }

  public void setFleetName(String fleetName) {
    this.fleetName = fleetName;
  }


  public DescribeApplicationFleetAssociationsRequest applicationArn(String applicationArn) {
    this.applicationArn = applicationArn;
    return this;
  }

  /**
   * Get applicationArn
   * @return applicationArn
   */
  @javax.annotation.Nullable
  public String getApplicationArn() {
    return applicationArn;
  }

  public void setApplicationArn(String applicationArn) {
    this.applicationArn = applicationArn;
  }


  public DescribeApplicationFleetAssociationsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public DescribeApplicationFleetAssociationsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeApplicationFleetAssociationsRequest describeApplicationFleetAssociationsRequest = (DescribeApplicationFleetAssociationsRequest) o;
    return Objects.equals(this.fleetName, describeApplicationFleetAssociationsRequest.fleetName) &&
        Objects.equals(this.applicationArn, describeApplicationFleetAssociationsRequest.applicationArn) &&
        Objects.equals(this.maxResults, describeApplicationFleetAssociationsRequest.maxResults) &&
        Objects.equals(this.nextToken, describeApplicationFleetAssociationsRequest.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fleetName, applicationArn, maxResults, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeApplicationFleetAssociationsRequest {\n");
    sb.append("    fleetName: ").append(toIndentedString(fleetName)).append("\n");
    sb.append("    applicationArn: ").append(toIndentedString(applicationArn)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FleetName");
    openapiFields.add("ApplicationArn");
    openapiFields.add("MaxResults");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeApplicationFleetAssociationsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeApplicationFleetAssociationsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeApplicationFleetAssociationsRequest is not found in the empty JSON string", DescribeApplicationFleetAssociationsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeApplicationFleetAssociationsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeApplicationFleetAssociationsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FleetName`
      if (jsonObj.get("FleetName") != null && !jsonObj.get("FleetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FleetName"));
      }
      // validate the optional field `ApplicationArn`
      if (jsonObj.get("ApplicationArn") != null && !jsonObj.get("ApplicationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationArn"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeApplicationFleetAssociationsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeApplicationFleetAssociationsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeApplicationFleetAssociationsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeApplicationFleetAssociationsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeApplicationFleetAssociationsRequest>() {
           @Override
           public void write(JsonWriter out, DescribeApplicationFleetAssociationsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeApplicationFleetAssociationsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeApplicationFleetAssociationsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeApplicationFleetAssociationsRequest
   * @throws IOException if the JSON string is invalid with respect to DescribeApplicationFleetAssociationsRequest
   */
  public static DescribeApplicationFleetAssociationsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeApplicationFleetAssociationsRequest.class);
  }

  /**
   * Convert an instance of DescribeApplicationFleetAssociationsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

