/*
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAppBlockBuilderRequestVpcConfig;
import org.openapitools.client.model.PlatformType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAppBlockBuilderRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:46.976213-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateAppBlockBuilderRequest {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private PlatformType platform;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "InstanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private String instanceType;

  public static final String SERIALIZED_NAME_VPC_CONFIG = "VpcConfig";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIG)
  private CreateAppBlockBuilderRequestVpcConfig vpcConfig;

  public static final String SERIALIZED_NAME_ENABLE_DEFAULT_INTERNET_ACCESS = "EnableDefaultInternetAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEFAULT_INTERNET_ACCESS)
  private Boolean enableDefaultInternetAccess;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_ACCESS_ENDPOINTS = "AccessEndpoints";
  @SerializedName(SERIALIZED_NAME_ACCESS_ENDPOINTS)
  private List accessEndpoints;

  public static final String SERIALIZED_NAME_ATTRIBUTES_TO_DELETE = "AttributesToDelete";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES_TO_DELETE)
  private List attributesToDelete;

  public UpdateAppBlockBuilderRequest() {
  }

  public UpdateAppBlockBuilderRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateAppBlockBuilderRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateAppBlockBuilderRequest displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public UpdateAppBlockBuilderRequest platform(PlatformType platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public PlatformType getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformType platform) {
    this.platform = platform;
  }


  public UpdateAppBlockBuilderRequest instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

  /**
   * Get instanceType
   * @return instanceType
   */
  @javax.annotation.Nullable
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }


  public UpdateAppBlockBuilderRequest vpcConfig(CreateAppBlockBuilderRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
    return this;
  }

  /**
   * Get vpcConfig
   * @return vpcConfig
   */
  @javax.annotation.Nullable
  public CreateAppBlockBuilderRequestVpcConfig getVpcConfig() {
    return vpcConfig;
  }

  public void setVpcConfig(CreateAppBlockBuilderRequestVpcConfig vpcConfig) {
    this.vpcConfig = vpcConfig;
  }


  public UpdateAppBlockBuilderRequest enableDefaultInternetAccess(Boolean enableDefaultInternetAccess) {
    this.enableDefaultInternetAccess = enableDefaultInternetAccess;
    return this;
  }

  /**
   * Get enableDefaultInternetAccess
   * @return enableDefaultInternetAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableDefaultInternetAccess() {
    return enableDefaultInternetAccess;
  }

  public void setEnableDefaultInternetAccess(Boolean enableDefaultInternetAccess) {
    this.enableDefaultInternetAccess = enableDefaultInternetAccess;
  }


  public UpdateAppBlockBuilderRequest iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public UpdateAppBlockBuilderRequest accessEndpoints(List accessEndpoints) {
    this.accessEndpoints = accessEndpoints;
    return this;
  }

  /**
   * Get accessEndpoints
   * @return accessEndpoints
   */
  @javax.annotation.Nullable
  public List getAccessEndpoints() {
    return accessEndpoints;
  }

  public void setAccessEndpoints(List accessEndpoints) {
    this.accessEndpoints = accessEndpoints;
  }


  public UpdateAppBlockBuilderRequest attributesToDelete(List attributesToDelete) {
    this.attributesToDelete = attributesToDelete;
    return this;
  }

  /**
   * Get attributesToDelete
   * @return attributesToDelete
   */
  @javax.annotation.Nullable
  public List getAttributesToDelete() {
    return attributesToDelete;
  }

  public void setAttributesToDelete(List attributesToDelete) {
    this.attributesToDelete = attributesToDelete;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAppBlockBuilderRequest updateAppBlockBuilderRequest = (UpdateAppBlockBuilderRequest) o;
    return Objects.equals(this.name, updateAppBlockBuilderRequest.name) &&
        Objects.equals(this.description, updateAppBlockBuilderRequest.description) &&
        Objects.equals(this.displayName, updateAppBlockBuilderRequest.displayName) &&
        Objects.equals(this.platform, updateAppBlockBuilderRequest.platform) &&
        Objects.equals(this.instanceType, updateAppBlockBuilderRequest.instanceType) &&
        Objects.equals(this.vpcConfig, updateAppBlockBuilderRequest.vpcConfig) &&
        Objects.equals(this.enableDefaultInternetAccess, updateAppBlockBuilderRequest.enableDefaultInternetAccess) &&
        Objects.equals(this.iamRoleArn, updateAppBlockBuilderRequest.iamRoleArn) &&
        Objects.equals(this.accessEndpoints, updateAppBlockBuilderRequest.accessEndpoints) &&
        Objects.equals(this.attributesToDelete, updateAppBlockBuilderRequest.attributesToDelete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, displayName, platform, instanceType, vpcConfig, enableDefaultInternetAccess, iamRoleArn, accessEndpoints, attributesToDelete);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAppBlockBuilderRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    vpcConfig: ").append(toIndentedString(vpcConfig)).append("\n");
    sb.append("    enableDefaultInternetAccess: ").append(toIndentedString(enableDefaultInternetAccess)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    accessEndpoints: ").append(toIndentedString(accessEndpoints)).append("\n");
    sb.append("    attributesToDelete: ").append(toIndentedString(attributesToDelete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("DisplayName");
    openapiFields.add("Platform");
    openapiFields.add("InstanceType");
    openapiFields.add("VpcConfig");
    openapiFields.add("EnableDefaultInternetAccess");
    openapiFields.add("IamRoleArn");
    openapiFields.add("AccessEndpoints");
    openapiFields.add("AttributesToDelete");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAppBlockBuilderRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAppBlockBuilderRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAppBlockBuilderRequest is not found in the empty JSON string", UpdateAppBlockBuilderRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAppBlockBuilderRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAppBlockBuilderRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateAppBlockBuilderRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `DisplayName`
      if (jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DisplayName"));
      }
      // validate the optional field `Platform`
      if (jsonObj.get("Platform") != null && !jsonObj.get("Platform").isJsonNull()) {
        PlatformType.validateJsonElement(jsonObj.get("Platform"));
      }
      // validate the optional field `InstanceType`
      if (jsonObj.get("InstanceType") != null && !jsonObj.get("InstanceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceType"));
      }
      // validate the optional field `VpcConfig`
      if (jsonObj.get("VpcConfig") != null && !jsonObj.get("VpcConfig").isJsonNull()) {
        CreateAppBlockBuilderRequestVpcConfig.validateJsonElement(jsonObj.get("VpcConfig"));
      }
      // validate the optional field `EnableDefaultInternetAccess`
      if (jsonObj.get("EnableDefaultInternetAccess") != null && !jsonObj.get("EnableDefaultInternetAccess").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableDefaultInternetAccess"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `AccessEndpoints`
      if (jsonObj.get("AccessEndpoints") != null && !jsonObj.get("AccessEndpoints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AccessEndpoints"));
      }
      // validate the optional field `AttributesToDelete`
      if (jsonObj.get("AttributesToDelete") != null && !jsonObj.get("AttributesToDelete").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AttributesToDelete"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAppBlockBuilderRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAppBlockBuilderRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAppBlockBuilderRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAppBlockBuilderRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAppBlockBuilderRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAppBlockBuilderRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAppBlockBuilderRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAppBlockBuilderRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAppBlockBuilderRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAppBlockBuilderRequest
   */
  public static UpdateAppBlockBuilderRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAppBlockBuilderRequest.class);
  }

  /**
   * Convert an instance of UpdateAppBlockBuilderRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

