/*
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateStackRequestApplicationSettings;
import org.openapitools.client.model.CreateStackRequestStreamingExperienceSettings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateStackRequest
 */
public class UpdateStackRequestTest {
    private final UpdateStackRequest model = new UpdateStackRequest();

    /**
     * Model tests for UpdateStackRequest
     */
    @Test
    public void testUpdateStackRequest() {
        // TODO: test UpdateStackRequest
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'storageConnectors'
     */
    @Test
    public void storageConnectorsTest() {
        // TODO: test storageConnectors
    }

    /**
     * Test the property 'deleteStorageConnectors'
     */
    @Test
    public void deleteStorageConnectorsTest() {
        // TODO: test deleteStorageConnectors
    }

    /**
     * Test the property 'redirectURL'
     */
    @Test
    public void redirectURLTest() {
        // TODO: test redirectURL
    }

    /**
     * Test the property 'feedbackURL'
     */
    @Test
    public void feedbackURLTest() {
        // TODO: test feedbackURL
    }

    /**
     * Test the property 'attributesToDelete'
     */
    @Test
    public void attributesToDeleteTest() {
        // TODO: test attributesToDelete
    }

    /**
     * Test the property 'userSettings'
     */
    @Test
    public void userSettingsTest() {
        // TODO: test userSettings
    }

    /**
     * Test the property 'applicationSettings'
     */
    @Test
    public void applicationSettingsTest() {
        // TODO: test applicationSettings
    }

    /**
     * Test the property 'accessEndpoints'
     */
    @Test
    public void accessEndpointsTest() {
        // TODO: test accessEndpoints
    }

    /**
     * Test the property 'embedHostDomains'
     */
    @Test
    public void embedHostDomainsTest() {
        // TODO: test embedHostDomains
    }

    /**
     * Test the property 'streamingExperienceSettings'
     */
    @Test
    public void streamingExperienceSettingsTest() {
        // TODO: test streamingExperienceSettings
    }

}
