openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon\
    \ AppStream 2.0 API Reference</i>. This documentation provides descriptions and\
    \ syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0\
    \ is a fully managed, secure application streaming service that lets you stream\
    \ desktop applications to users without rewriting applications. AppStream 2.0\
    \ manages the AWS resources that are required to host and run your applications,\
    \ scales automatically, and provides access to your users on demand. </p> <note>\
    \ <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint\
    \ (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\"\
    >Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC\
    \ Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note>\
    \ <p>To learn more about AppStream 2.0, see the following resources:</p> <ul>\
    \ <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product\
    \ page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\"\
    >Amazon AppStream 2.0 documentation</a> </p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon AppStream
  version: 2016-12-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: appstream
  x-aws-signingName: appstream
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/appstream2/
servers:
- description: The Amazon AppStream multi-region endpoint
  url: "http://appstream2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon AppStream multi-region endpoint
  url: "https://appstream2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
  url: "http://appstream2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
  url: "https://appstream2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=PhotonAdminProxyService.AssociateAppBlockBuilderAppBlock:
    post:
      description: Associates the specified app block builder with the specified app
        block.
      operationId: associate_app_block_builder_app_block
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.AssociateAppBlockBuilderAppBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateAppBlockBuilderAppBlockRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateAppBlockBuilderAppBlockResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.AssociateApplicationFleet:
    post:
      description: Associates the specified application with the specified fleet.
        This is only supported for Elastic fleets.
      operationId: associate_application_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.AssociateApplicationFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateApplicationFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateApplicationFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.AssociateApplicationToEntitlement:
    post:
      description: Associates an application to entitle.
      operationId: associate_application_to_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.AssociateApplicationToEntitlement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateApplicationToEntitlementRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateApplicationToEntitlementResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.AssociateFleet:
    post:
      description: Associates the specified fleet with the specified stack.
      operationId: associate_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.AssociateFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.BatchAssociateUserStack:
    post:
      description: Associates the specified users with the specified stacks. Users
        in a user pool cannot be assigned to stacks with fleets that are joined to
        an Active Directory domain.
      operationId: batch_associate_user_stack
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.BatchAssociateUserStack
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAssociateUserStackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAssociateUserStackResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.BatchDisassociateUserStack:
    post:
      description: Disassociates the specified users from the specified stacks.
      operationId: batch_disassociate_user_stack
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.BatchDisassociateUserStack
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDisassociateUserStackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDisassociateUserStackResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CopyImage:
    post:
      description: Copies the image within the same region or to a new region within
        the same AWS account. Note that any tags you added to the image will not be
        copied.
      operationId: copy_image
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CopyImage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyImageRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyImageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateAppBlock:
    post:
      description: <p>Creates an app block.</p> <p>App blocks are an Amazon AppStream
        2.0 resource that stores the details about the virtual hard disk in an S3
        bucket. It also stores the setup script with details about how to mount the
        virtual hard disk. The virtual hard disk includes the application binaries
        and other files necessary to launch your applications. Multiple applications
        can be assigned to a single app block.</p> <p>This is only supported for Elastic
        fleets.</p>
      operationId: create_app_block
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateAppBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppBlockRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppBlockResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateAppBlockBuilder:
    post:
      description: Creates an app block builder.
      operationId: create_app_block_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateAppBlockBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppBlockBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppBlockBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateAppBlockBuilderStreamingURL:
    post:
      description: Creates a URL to start a create app block builder streaming session.
      operationId: create_app_block_builder_streaming_url
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateAppBlockBuilderStreamingURL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppBlockBuilderStreamingURLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppBlockBuilderStreamingURLResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateApplication:
    post:
      description: "<p>Creates an application.</p> <p>Applications are an Amazon AppStream\
        \ 2.0 resource that stores the details about how to launch applications on\
        \ Elastic fleet streaming instances. An application consists of the launch\
        \ details, icon, and display name. Applications are associated with an app\
        \ block that contains the application binaries and other files. The applications\
        \ assigned to an Elastic fleet are the applications users can launch. </p>\
        \ <p>This is only supported for Elastic fleets.</p>"
      operationId: create_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateApplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateDirectoryConfig:
    post:
      description: Creates a Directory Config object in AppStream 2.0. This object
        includes the configuration information required to join fleets and image builders
        to Microsoft Active Directory domains.
      operationId: create_directory_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateDirectoryConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryConfigResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateEntitlement:
    post:
      description: "Creates a new entitlement. Entitlements control access to specific\
        \ applications within a stack, based on user attributes. Entitlements apply\
        \ to SAML 2.0 federated user identities. Amazon AppStream 2.0 user pool and\
        \ streaming URL users are entitled to all applications in a stack. Entitlements\
        \ don't apply to the desktop stream view application, or to applications managed\
        \ by a dynamic app provider using the Dynamic Application Framework."
      operationId: create_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateEntitlement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntitlementRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEntitlementResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementAlreadyExistsException'
          description: EntitlementAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateFleet:
    post:
      description: Creates a fleet. A fleet consists of streaming instances that your
        users access for their applications and desktops.
      operationId: create_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilder:
    post:
      description: "<p>Creates an image builder. An image builder is a virtual machine\
        \ that is used to create an image.</p> <p>The initial state of the builder\
        \ is <code>PENDING</code>. When it is ready, the state is <code>RUNNING</code>.</p>"
      operationId: create_image_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateImageBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilderStreamingURL:
    post:
      description: Creates a URL to start an image builder streaming session.
      operationId: create_image_builder_streaming_url
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateImageBuilderStreamingURL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageBuilderStreamingURLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImageBuilderStreamingURLResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateStack:
    post:
      description: "Creates a stack to start streaming applications to users. A stack\
        \ consists of an associated fleet, user access policies, and storage configurations. "
      operationId: create_stack
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateStack
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStackResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateStreamingURL:
    post:
      description: 'Creates a temporary URL to start an AppStream 2.0 streaming session
        for the specified user. A streaming URL enables application streaming to be
        tested without user setup. '
      operationId: create_streaming_url
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateStreamingURL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamingURLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamingURLResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateUpdatedImage:
    post:
      description: "<p>Creates a new image with the latest Windows operating system\
        \ updates, driver updates, and AppStream 2.0 agent software.</p> <p>For more\
        \ information, see the \"Update an Image by Using Managed AppStream 2.0 Image\
        \ Updates\" section in <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/administer-images.html\"\
        >Administer Your AppStream 2.0 Images</a>, in the <i>Amazon AppStream 2.0\
        \ Administration Guide</i>.</p>"
      operationId: create_updated_image
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateUpdatedImage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatedImageRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdatedImageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateUsageReportSubscription:
    post:
      description: Creates a usage report subscription. Usage reports are generated
        daily.
      operationId: create_usage_report_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateUsageReportSubscription
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUsageReportSubscriptionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUsageReportSubscriptionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.CreateUser:
    post:
      description: Creates a new user in the user pool.
      operationId: create_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.CreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteAppBlock:
    post:
      description: Deletes an app block.
      operationId: delete_app_block
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteAppBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppBlockRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppBlockResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteAppBlockBuilder:
    post:
      description: <p>Deletes an app block builder.</p> <p>An app block builder can
        only be deleted when it has no association with an app block.</p>
      operationId: delete_app_block_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteAppBlockBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppBlockBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppBlockBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteApplication:
    post:
      description: Deletes an application.
      operationId: delete_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteApplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApplicationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteDirectoryConfig:
    post:
      description: Deletes the specified Directory Config object from AppStream 2.0.
        This object includes the information required to join streaming instances
        to an Active Directory domain.
      operationId: delete_directory_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteDirectoryConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDirectoryConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryConfigResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteEntitlement:
    post:
      description: Deletes the specified entitlement.
      operationId: delete_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteEntitlement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEntitlementRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntitlementResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteFleet:
    post:
      description: Deletes the specified fleet.
      operationId: delete_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImage:
    post:
      description: "Deletes the specified image. You cannot delete an image when it\
        \ is in use. After you delete an image, you cannot provision new capacity\
        \ using the image."
      operationId: delete_image
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteImage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImageBuilder:
    post:
      description: Deletes the specified image builder and releases the capacity.
      operationId: delete_image_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteImageBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImageBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImageBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImagePermissions:
    post:
      description: "Deletes permissions for the specified private image. After you\
        \ delete permissions for an image, AWS accounts to which you previously granted\
        \ these permissions can no longer use the image."
      operationId: delete_image_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteImagePermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteImagePermissionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImagePermissionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteStack:
    post:
      description: "Deletes the specified stack. After the stack is deleted, the application\
        \ streaming environment provided by the stack is no longer available to users.\
        \ Also, any reservations made for application streaming sessions for the stack\
        \ are released."
      operationId: delete_stack
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteStack
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStackResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUsageReportSubscription:
    post:
      description: Disables usage report generation.
      operationId: delete_usage_report_subscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteUsageReportSubscription
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUsageReportSubscriptionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsageReportSubscriptionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUser:
    post:
      description: Deletes a user from the user pool.
      operationId: delete_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeAppBlockBuilderAppBlockAssociations:
    post:
      description: Retrieves a list that describes one or more app block builder associations.
      operationId: describe_app_block_builder_app_block_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeAppBlockBuilderAppBlockAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppBlockBuilderAppBlockAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppBlockBuilderAppBlockAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeAppBlockBuilders:
    post:
      description: Retrieves a list that describes one or more app block builders.
      operationId: describe_app_block_builders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeAppBlockBuilders
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppBlockBuildersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppBlockBuildersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeAppBlocks:
    post:
      description: Retrieves a list that describes one or more app blocks.
      operationId: describe_app_blocks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeAppBlocks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppBlocksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppBlocksResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeApplicationFleetAssociations:
    post:
      description: Retrieves a list that describes one or more application fleet associations.
        Either ApplicationArn or FleetName must be specified.
      operationId: describe_application_fleet_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeApplicationFleetAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeApplicationFleetAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeApplicationFleetAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeApplications:
    post:
      description: Retrieves a list that describes one or more applications.
      operationId: describe_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeApplications
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeApplicationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeApplicationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeDirectoryConfigs:
    post:
      description: "<p>Retrieves a list that describes one or more specified Directory\
        \ Config objects for AppStream 2.0, if the names for these objects are provided.\
        \ Otherwise, all Directory Config objects in the account are described. These\
        \ objects include the configuration information required to join fleets and\
        \ image builders to Microsoft Active Directory domains. </p> <p>Although the\
        \ response syntax in this topic includes the account password, this password\
        \ is not returned in the actual response.</p>"
      operationId: describe_directory_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeDirectoryConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDirectoryConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDirectoryConfigsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeEntitlements:
    post:
      description: Retrieves a list that describes one of more entitlements.
      operationId: describe_entitlements
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeEntitlements
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEntitlementsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntitlementsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeFleets:
    post:
      description: "Retrieves a list that describes one or more specified fleets,\
        \ if the fleet names are provided. Otherwise, all fleets in the account are\
        \ described."
      operationId: describe_fleets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeFleets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFleetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImageBuilders:
    post:
      description: "Retrieves a list that describes one or more specified image builders,\
        \ if the image builder names are provided. Otherwise, all image builders in\
        \ the account are described."
      operationId: describe_image_builders
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeImageBuilders
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImageBuildersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImageBuildersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImagePermissions:
    post:
      description: 'Retrieves a list that describes the permissions for shared AWS
        account IDs on a private image that you own. '
      operationId: describe_image_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeImagePermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImagePermissionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImagePermissionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImages:
    post:
      description: "Retrieves a list that describes one or more specified images,\
        \ if the image names or image ARNs are provided. Otherwise, all images in\
        \ the account are described."
      operationId: describe_images
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeImages
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeImagesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeImagesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeSessions:
    post:
      description: "Retrieves a list that describes the streaming sessions for a specified\
        \ stack and fleet. If a UserId is provided for the stack and fleet, only streaming\
        \ sessions for that user are described. If an authentication type is not provided,\
        \ the default is to authenticate users using a streaming URL."
      operationId: describe_sessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeSessions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSessionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSessionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeStacks:
    post:
      description: "Retrieves a list that describes one or more specified stacks,\
        \ if the stack names are provided. Otherwise, all stacks in the account are\
        \ described."
      operationId: describe_stacks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeStacks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStacksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStacksResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsageReportSubscriptions:
    post:
      description: Retrieves a list that describes one or more usage report subscriptions.
      operationId: describe_usage_report_subscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeUsageReportSubscriptions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUsageReportSubscriptionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUsageReportSubscriptionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUserStackAssociations:
    post:
      description: <p>Retrieves a list that describes the UserStackAssociation objects.
        You must specify either or both of the following:</p> <ul> <li> <p>The stack
        name</p> </li> <li> <p>The user name (email address of the user associated
        with the stack) and the authentication type for the user</p> </li> </ul>
      operationId: describe_user_stack_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeUserStackAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserStackAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserStackAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsers:
    post:
      description: Retrieves a list that describes one or more specified users in
        the user pool.
      operationId: describe_users
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DescribeUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUsersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUsersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DisableUser:
    post:
      description: 'Disables the specified user in the user pool. Users can''t sign
        in to AppStream 2.0 until they are re-enabled. This action does not delete
        the user. '
      operationId: disable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DisableUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableUserResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateAppBlockBuilderAppBlock:
    post:
      description: Disassociates a specified app block builder from a specified app
        block.
      operationId: disassociate_app_block_builder_app_block
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DisassociateAppBlockBuilderAppBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateAppBlockBuilderAppBlockRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateAppBlockBuilderAppBlockResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateApplicationFleet:
    post:
      description: Disassociates the specified application from the fleet.
      operationId: disassociate_application_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DisassociateApplicationFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateApplicationFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateApplicationFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateApplicationFromEntitlement:
    post:
      description: Deletes the specified application from the specified entitlement.
      operationId: disassociate_application_from_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DisassociateApplicationFromEntitlement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateApplicationFromEntitlementRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateApplicationFromEntitlementResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateFleet:
    post:
      description: Disassociates the specified fleet from the specified stack.
      operationId: disassociate_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.DisassociateFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.EnableUser:
    post:
      description: "Enables a user in the user pool. After being enabled, users can\
        \ sign in to AppStream 2.0 and open applications from the stacks to which\
        \ they are assigned."
      operationId: enable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.EnableUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableUserResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.ExpireSession:
    post:
      description: Immediately stops the specified streaming session.
      operationId: expire_session
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.ExpireSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpireSessionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpireSessionResult'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedFleets:
    post:
      description: Retrieves the name of the fleet that is associated with the specified
        stack.
      operationId: list_associated_fleets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.ListAssociatedFleets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociatedFleetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedFleetsResult'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedStacks:
    post:
      description: Retrieves the name of the stack with which the specified fleet
        is associated.
      operationId: list_associated_stacks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.ListAssociatedStacks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociatedStacksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociatedStacksResult'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.ListEntitledApplications:
    post:
      description: Retrieves a list of entitled applications.
      operationId: list_entitled_applications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.ListEntitledApplications
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntitledApplicationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitledApplicationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.ListTagsForResource:
    post:
      description: "<p>Retrieves a list of all tags for the specified AppStream 2.0\
        \ resource. You can tag AppStream 2.0 image builders, images, fleets, and\
        \ stacks.</p> <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
        >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
        \ Guide</i>.</p>"
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StartAppBlockBuilder:
    post:
      description: "<p>Starts an app block builder.</p> <p>An app block builder can\
        \ only be started when it's associated with an app block.</p> <p>Starting\
        \ an app block builder starts a new instance, which is equivalent to an elastic\
        \ fleet instance with application builder assistance functionality.</p>"
      operationId: start_app_block_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StartAppBlockBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAppBlockBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAppBlockBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StartFleet:
    post:
      description: Starts the specified fleet.
      operationId: start_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StartFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StartImageBuilder:
    post:
      description: Starts the specified image builder.
      operationId: start_image_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StartImageBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImageBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImageBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StopAppBlockBuilder:
    post:
      description: "<p>Stops an app block builder.</p> <p>Stopping an app block builder\
        \ terminates the instance, and the instance state is not persisted.</p>"
      operationId: stop_app_block_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StopAppBlockBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAppBlockBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAppBlockBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StopFleet:
    post:
      description: Stops the specified fleet.
      operationId: stop_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StopFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.StopImageBuilder:
    post:
      description: Stops the specified image builder.
      operationId: stop_image_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.StopImageBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopImageBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopImageBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.TagResource:
    post:
      description: "<p>Adds or overwrites one or more tags for the specified AppStream\
        \ 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets,\
        \ and stacks.</p> <p>Each tag consists of a key and an optional value. If\
        \ a resource already has a tag with the same key, this operation updates its\
        \ value.</p> <p>To list the current tags for your resources, use <a>ListTagsForResource</a>.\
        \ To disassociate tags from your resources, use <a>UntagResource</a>.</p>\
        \ <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
        >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
        \ Guide</i>.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UntagResource:
    post:
      description: "<p>Disassociates one or more specified tags from the specified\
        \ AppStream 2.0 resource.</p> <p>To list the current tags for your resources,\
        \ use <a>ListTagsForResource</a>.</p> <p>For more information about tags,\
        \ see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
        >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
        \ Guide</i>.</p>"
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateAppBlockBuilder:
    post:
      description: "<p>Updates an app block builder.</p> <p>If the app block builder\
        \ is in the <code>STARTING</code> or <code>STOPPING</code> state, you can't\
        \ update it. If the app block builder is in the <code>RUNNING</code> state,\
        \ you can only update the DisplayName and Description. If the app block builder\
        \ is in the <code>STOPPED</code> state, you can update any attribute except\
        \ the Name.</p>"
      operationId: update_app_block_builder
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateAppBlockBuilder
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppBlockBuilderRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppBlockBuilderResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateApplication:
    post:
      description: Updates the specified application.
      operationId: update_application
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateApplication
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateDirectoryConfig:
    post:
      description: Updates the specified Directory Config object in AppStream 2.0.
        This object includes the configuration information required to join fleets
        and image builders to Microsoft Active Directory domains.
      operationId: update_directory_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateDirectoryConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDirectoryConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDirectoryConfigResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateEntitlement:
    post:
      description: Updates the specified entitlement.
      operationId: update_entitlement
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateEntitlement
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEntitlementResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNotFoundException'
          description: EntitlementNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateFleet:
    post:
      description: "<p>Updates the specified fleet.</p> <p>If the fleet is in the\
        \ <code>STOPPED</code> state, you can update any attribute except the fleet\
        \ name.</p> <p>If the fleet is in the <code>RUNNING</code> state, you can\
        \ update the following based on the fleet type:</p> <ul> <li> <p>Always-On\
        \ and On-Demand fleet types</p> <p>You can update the <code>DisplayName</code>,\
        \ <code>ComputeCapacity</code>, <code>ImageARN</code>, <code>ImageName</code>,\
        \ <code>IdleDisconnectTimeoutInSeconds</code>, and <code>DisconnectTimeoutInSeconds</code>\
        \ attributes.</p> </li> <li> <p>Elastic fleet type</p> <p>You can update the\
        \ <code>DisplayName</code>, <code>IdleDisconnectTimeoutInSeconds</code>, <code>DisconnectTimeoutInSeconds</code>,\
        \ <code>MaxConcurrentSessions</code>, <code>SessionScriptS3Location</code>\
        \ and <code>UsbDeviceFilterStrings</code> attributes.</p> </li> </ul> <p>If\
        \ the fleet is in the <code>STARTING</code> or <code>STOPPED</code> state,\
        \ you can't update it.</p>"
      operationId: update_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateFleet
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFleetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFleetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLimitExceededException'
          description: RequestLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateImagePermissions:
    post:
      description: 'Adds or updates permissions for the specified private image. '
      operationId: update_image_permissions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateImagePermissions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagePermissionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImagePermissionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotAvailableException'
          description: ResourceNotAvailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=PhotonAdminProxyService.UpdateStack:
    post:
      description: Updates the specified fields for the specified stack.
      operationId: update_stack
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - PhotonAdminProxyService.UpdateStack
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStackRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStackResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRoleException'
          description: InvalidRoleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccountStatusException'
          description: InvalidAccountStatusException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatibleImageException'
          description: IncompatibleImageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
          description: OperationNotPermittedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateAppBlockBuilderAppBlockResult:
      example:
        AppBlockBuilderAppBlockAssociation:
          AppBlockArn: ""
          AppBlockBuilderName: ""
      properties:
        AppBlockBuilderAppBlockAssociation:
          $ref: '#/components/schemas/AssociateAppBlockBuilderAppBlockResult_AppBlockBuilderAppBlockAssociation'
      title: AssociateAppBlockBuilderAppBlockResult
      type: object
    AssociateAppBlockBuilderAppBlockRequest:
      example:
        AppBlockArn: ""
        AppBlockBuilderName: ""
      properties:
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: AppBlockArn
        AppBlockBuilderName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: AppBlockBuilderName
      required:
      - AppBlockArn
      - AppBlockBuilderName
      title: AssociateAppBlockBuilderAppBlockRequest
      type: object
    ConcurrentModificationException: {}
    LimitExceededException: {}
    ResourceNotFoundException: {}
    InvalidParameterCombinationException: {}
    OperationNotPermittedException: {}
    AssociateApplicationFleetResult:
      example:
        ApplicationFleetAssociation:
          FleetName: ""
          ApplicationArn: ""
      properties:
        ApplicationFleetAssociation:
          $ref: '#/components/schemas/AssociateApplicationFleetResult_ApplicationFleetAssociation'
      title: AssociateApplicationFleetResult
      type: object
    AssociateApplicationFleetRequest:
      example:
        FleetName: ""
        ApplicationArn: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: FleetName
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the application.
          title: ApplicationArn
      required:
      - ApplicationArn
      - FleetName
      title: AssociateApplicationFleetRequest
      type: object
    AssociateApplicationToEntitlementResult:
      properties: {}
      type: object
    AssociateApplicationToEntitlementRequest:
      example:
        EntitlementName: ""
        ApplicationIdentifier: ""
        StackName: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack.
          title: StackName
        EntitlementName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: EntitlementName
        ApplicationIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the application.
          title: ApplicationIdentifier
      required:
      - ApplicationIdentifier
      - EntitlementName
      - StackName
      title: AssociateApplicationToEntitlementRequest
      type: object
    EntitlementNotFoundException: {}
    AssociateFleetResult:
      properties: {}
      type: object
    AssociateFleetRequest:
      example:
        FleetName: ""
        StackName: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The name of the fleet. '
          title: FleetName
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: StackName
      required:
      - FleetName
      - StackName
      title: AssociateFleetRequest
      type: object
    InvalidAccountStatusException: {}
    IncompatibleImageException: {}
    BatchAssociateUserStackResult:
      example:
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationErrorList'
          - description: The list of UserStackAssociationError objects.
          title: errors
      title: BatchAssociateUserStackResult
      type: object
    BatchAssociateUserStackRequest:
      example:
        UserStackAssociations: ""
      properties:
        UserStackAssociations:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationList'
          - description: The list of UserStackAssociation objects.
          title: UserStackAssociations
      required:
      - UserStackAssociations
      title: BatchAssociateUserStackRequest
      type: object
    BatchDisassociateUserStackResult:
      example:
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationErrorList'
          - description: The list of UserStackAssociationError objects.
          title: errors
      title: BatchDisassociateUserStackResult
      type: object
    BatchDisassociateUserStackRequest:
      example:
        UserStackAssociations: ""
      properties:
        UserStackAssociations:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationList'
          - description: The list of UserStackAssociation objects.
          title: UserStackAssociations
      required:
      - UserStackAssociations
      title: BatchDisassociateUserStackRequest
      type: object
    CopyImageResponse:
      example:
        DestinationImageName: ""
      properties:
        DestinationImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the destination image.
          title: DestinationImageName
      title: CopyImageResponse
      type: object
    CopyImageRequest:
      example:
        SourceImageName: ""
        DestinationRegion: ""
        DestinationImageDescription: ""
        DestinationImageName: ""
      properties:
        SourceImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the image to copy.
          title: SourceImageName
        DestinationImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name that the image will have when it is copied to the
              destination.
          title: DestinationImageName
        DestinationRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          - description: "The destination region to which the image will be copied.\
              \ This parameter is required, even if you are copying an image within\
              \ the same region."
          title: DestinationRegion
        DestinationImageDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description that the image will have when it is copied
              to the destination.
          title: DestinationImageDescription
      required:
      - DestinationImageName
      - DestinationRegion
      - SourceImageName
      title: CopyImageRequest
      type: object
    ResourceAlreadyExistsException: {}
    ResourceNotAvailableException: {}
    CreateAppBlockResult:
      example:
        AppBlock:
          SetupScriptDetails:
            TimeoutInSeconds: ""
            ScriptS3Location:
              S3Bucket: ""
              S3Key: ""
            ExecutablePath: ""
            ExecutableParameters: ""
          Description: ""
          CreatedTime: ""
          AppBlockErrors: ""
          State: ""
          PostSetupScriptDetails:
            TimeoutInSeconds: ""
            ScriptS3Location:
              S3Bucket: ""
              S3Key: ""
            ExecutablePath: ""
            ExecutableParameters: ""
          DisplayName: ""
          Arn: ""
          SourceS3Location:
            S3Bucket: ""
            S3Key: ""
          PackagingType: ""
          Name: ""
      properties:
        AppBlock:
          $ref: '#/components/schemas/CreateAppBlockResult_AppBlock'
      title: CreateAppBlockResult
      type: object
    CreateAppBlockRequest:
      example:
        SetupScriptDetails:
          TimeoutInSeconds: ""
          ScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          ExecutablePath: ""
          ExecutableParameters: ""
        Description: ""
        PostSetupScriptDetails:
          TimeoutInSeconds: ""
          ScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          ExecutablePath: ""
          ExecutableParameters: ""
        DisplayName: ""
        SourceS3Location:
          S3Bucket: ""
          S3Key: ""
        Tags: ""
        PackagingType: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the app block.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the app block. This is not displayed
              to the user.
          title: DisplayName
        SourceS3Location:
          $ref: '#/components/schemas/CreateAppBlockRequest_SourceS3Location'
        SetupScriptDetails:
          $ref: '#/components/schemas/CreateAppBlockRequest_SetupScriptDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags assigned to the app block.
          title: Tags
        PostSetupScriptDetails:
          $ref: '#/components/schemas/CreateAppBlockRequest_PostSetupScriptDetails'
        PackagingType:
          allOf:
          - $ref: '#/components/schemas/PackagingType'
          - description: The packaging type of the app block.
          title: PackagingType
      required:
      - Name
      - SourceS3Location
      title: CreateAppBlockRequest
      type: object
    CreateAppBlockBuilderResult:
      example:
        AppBlockBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          EnableDefaultInternetAccess: ""
          Name: ""
          AppBlockBuilderErrors: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          AccessEndpoints: ""
      properties:
        AppBlockBuilder:
          $ref: '#/components/schemas/AppBlockBuilder'
      title: CreateAppBlockBuilderResult
      type: object
    CreateAppBlockBuilderRequest:
      example:
        Description: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        EnableDefaultInternetAccess: ""
        DisplayName: ""
        IamRoleArn: ""
        InstanceType: ""
        Tags: ""
        Name: ""
        AccessEndpoints: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The unique name for the app block builder.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the app block builder.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the app block builder.
          title: DisplayName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate with the app block builder. A tag\
              \ is a key-value pair, and the value is optional. For example, Environment=Test.\
              \ If you do not specify a value, Environment=. </p> <p>If you do not\
              \ specify a value, the value is set to an empty string.</p> <p>Generally\
              \ allowed characters are: letters, numbers, and spaces representable\
              \ in UTF-8, and the following special characters: </p> <p>_ . : / =\
              \ + \\ - @</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
              >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
              \ Guide</i>.</p>"
          title: Tags
        Platform:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderPlatformType'
          - description: <p>The platform of the app block builder.</p> <p> <code>WINDOWS_SERVER_2019</code>
              is the only valid value.</p>
          title: Platform
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching the app block
              builder. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.standard.xlarge</p> </li> <li> <p>stream.standard.2xlarge</p>
              </li> </ul>
          title: InstanceType
        VpcConfig:
          $ref: '#/components/schemas/CreateAppBlockBuilderRequest_VpcConfig'
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the app block
              builder.
          title: EnableDefaultInternetAccess
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role to apply\
              \ to the app block builder. To assume a role, the app block builder\
              \ calls the AWS Security Token Service (STS) <code>AssumeRole</code>\
              \ API operation and passes the ARN of the role to use. The operation\
              \ creates a new session with temporary credentials. AppStream 2.0 retrieves\
              \ the temporary credentials and creates the <b>appstream_machine_role</b>\
              \ credential profile on the instance.</p> <p>For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Administrators can connect to the app block builder only through the
              specified endpoints.
          title: AccessEndpoints
      required:
      - InstanceType
      - Name
      - Platform
      - VpcConfig
      title: CreateAppBlockBuilderRequest
      type: object
    RequestLimitExceededException: {}
    InvalidRoleException: {}
    CreateAppBlockBuilderStreamingURLResult:
      example:
        Expires: ""
        StreamingURL: ""
      properties:
        StreamingURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL to start the streaming session.
          title: StreamingURL
        Expires:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The elapsed time, in seconds after the Unix epoch, when\
              \ this URL expires."
          title: Expires
      title: CreateAppBlockBuilderStreamingURLResult
      type: object
    CreateAppBlockBuilderStreamingURLRequest:
      example:
        Validity: ""
        AppBlockBuilderName: ""
      properties:
        AppBlockBuilderName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: AppBlockBuilderName
        Validity:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The time that the streaming URL will be valid, in seconds.\
              \ Specify a value between 1 and 604800 seconds. The default is 3600\
              \ seconds."
          title: Validity
      required:
      - AppBlockBuilderName
      title: CreateAppBlockBuilderStreamingURLRequest
      type: object
    CreateApplicationResult:
      example:
        Application:
          WorkingDirectory: ""
          Platforms: ""
          Description: ""
          CreatedTime: ""
          Metadata: ""
          Enabled: ""
          Name: ""
          IconURL: ""
          AppBlockArn: ""
          InstanceFamilies: ""
          DisplayName: ""
          LaunchPath: ""
          Arn: ""
          LaunchParameters: ""
          IconS3Location:
            S3Bucket: ""
            S3Key: ""
      properties:
        Application:
          $ref: '#/components/schemas/Application'
      title: CreateApplicationResult
      type: object
    CreateApplicationRequest:
      example:
        WorkingDirectory: ""
        Platforms: ""
        AppBlockArn: ""
        Description: ""
        InstanceFamilies: ""
        DisplayName: ""
        LaunchPath: ""
        LaunchParameters: ""
        Tags: ""
        Name: ""
        IconS3Location:
          S3Bucket: ""
          S3Key: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. This name is visible to users
              when display name is not specified.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the application. This name is visible
              to users in the application catalog.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
          title: Description
        IconS3Location:
          $ref: '#/components/schemas/CreateApplicationRequest_IconS3Location'
        LaunchPath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The launch path of the application.
          title: LaunchPath
        WorkingDirectory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The working directory of the application.
          title: WorkingDirectory
        LaunchParameters:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The launch parameters of the application.
          title: LaunchParameters
        Platforms:
          allOf:
          - $ref: '#/components/schemas/Platforms'
          - description: The platforms the application supports. WINDOWS_SERVER_2019
              and AMAZON_LINUX2 are supported for Elastic fleets.
          title: Platforms
        InstanceFamilies:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The instance families the application supports. Valid values
              are GENERAL_PURPOSE and GRAPHICS_G4.
          title: InstanceFamilies
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The app block ARN to which the application should be associated
          title: AppBlockArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags assigned to the application.
          title: Tags
      required:
      - AppBlockArn
      - IconS3Location
      - InstanceFamilies
      - LaunchPath
      - Name
      - Platforms
      title: CreateApplicationRequest
      type: object
    CreateDirectoryConfigResult:
      example:
        DirectoryConfig:
          CreatedTime: ""
          OrganizationalUnitDistinguishedNames: ""
          ServiceAccountCredentials:
            AccountName: ""
            AccountPassword: ""
          CertificateBasedAuthProperties:
            Status: ""
            CertificateAuthorityArn: ""
          DirectoryName: ""
      properties:
        DirectoryConfig:
          $ref: '#/components/schemas/CreateDirectoryConfigResult_DirectoryConfig'
      title: CreateDirectoryConfigResult
      type: object
    CreateDirectoryConfigRequest:
      example:
        OrganizationalUnitDistinguishedNames: ""
        ServiceAccountCredentials:
          AccountName: ""
          AccountPassword: ""
        CertificateBasedAuthProperties:
          Status: ""
          CertificateAuthorityArn: ""
        DirectoryName: ""
      properties:
        DirectoryName:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: "The fully qualified name of the directory (for example,\
              \ corp.example.com)."
          title: DirectoryName
        OrganizationalUnitDistinguishedNames:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          - description: The distinguished names of the organizational units for computer
              accounts.
          title: OrganizationalUnitDistinguishedNames
        ServiceAccountCredentials:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_ServiceAccountCredentials'
        CertificateBasedAuthProperties:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_CertificateBasedAuthProperties'
      required:
      - DirectoryName
      - OrganizationalUnitDistinguishedNames
      title: CreateDirectoryConfigRequest
      type: object
    CreateEntitlementResult:
      example:
        Entitlement:
          AppVisibility: ""
          Description: ""
          CreatedTime: ""
          Attributes: ""
          LastModifiedTime: ""
          StackName: ""
          Name: ""
      properties:
        Entitlement:
          $ref: '#/components/schemas/CreateEntitlementResult_Entitlement'
      title: CreateEntitlementResult
      type: object
    CreateEntitlementRequest:
      example:
        AppVisibility: ""
        Description: ""
        Attributes: ""
        StackName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: Name
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the entitlement.
          title: Description
        AppVisibility:
          allOf:
          - $ref: '#/components/schemas/AppVisibility'
          - description: Specifies whether all or selected apps are entitled.
          title: AppVisibility
        Attributes:
          allOf:
          - $ref: '#/components/schemas/EntitlementAttributeList'
          - description: The attributes of the entitlement.
          title: Attributes
      required:
      - AppVisibility
      - Attributes
      - Name
      - StackName
      title: CreateEntitlementRequest
      type: object
    EntitlementAlreadyExistsException: {}
    CreateFleetResult:
      example:
        Fleet:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          FleetType: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          SessionScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          Name: ""
          ImageName: ""
          FleetErrors: ""
          MaxUserDurationInSeconds: ""
          IdleDisconnectTimeoutInSeconds: ""
          UsbDeviceFilterStrings: ""
          DisconnectTimeoutInSeconds: ""
          ComputeCapacityStatus:
            Running: ""
            InUse: ""
            Available: ""
            Desired: ""
          State: ""
          DisplayName: ""
          StreamView: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          MaxConcurrentSessions: ""
          ImageArn: ""
      properties:
        Fleet:
          $ref: '#/components/schemas/CreateFleetResult_Fleet'
      title: CreateFleetResult
      type: object
    CreateFleetRequest:
      example:
        Description: ""
        ComputeCapacity:
          DesiredInstances: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        FleetType: ""
        EnableDefaultInternetAccess: ""
        DomainJoinInfo:
          OrganizationalUnitDistinguishedName: ""
          DirectoryName: ""
        SessionScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        Name: ""
        ImageName: ""
        MaxUserDurationInSeconds: ""
        IdleDisconnectTimeoutInSeconds: ""
        UsbDeviceFilterStrings: ""
        DisconnectTimeoutInSeconds: ""
        DisplayName: ""
        StreamView: ""
        IamRoleArn: ""
        InstanceType: ""
        Tags: ""
        MaxConcurrentSessions: ""
        ImageArn: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A unique name for the fleet.
          title: Name
        ImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the image used to create the fleet.
          title: ImageName
        ImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the public, private, or shared image to use."
          title: ImageArn
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching fleet instances.
              The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.standard.xlarge</p> </li> <li> <p>stream.standard.2xlarge</p>
              </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p>
              </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p>
              </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p>
              </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p>
              </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p>
              </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p>
              </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p>
              </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p>
              </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p>
              </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p>
              </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p>
              </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p>
              </li> </ul> <p>The following instance types are available for Elastic
              fleets:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p>
              </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.standard.xlarge</p>
              </li> <li> <p>stream.standard.2xlarge</p> </li> </ul>
          title: InstanceType
        FleetType:
          allOf:
          - $ref: '#/components/schemas/FleetType'
          - description: "<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides\
              \ users with instant-on access to their apps. You are charged for all\
              \ running instances in your fleet, even if no users are streaming apps.</p>\
              \ </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications\
              \ after they connect, which takes one to two minutes. You are charged\
              \ for instance streaming when users are connected and a small hourly\
              \ fee for instances that are not streaming apps.</p> </dd> </dl>"
          title: FleetType
        ComputeCapacity:
          $ref: '#/components/schemas/CreateFleetRequest_ComputeCapacity'
        VpcConfig:
          $ref: '#/components/schemas/CreateFleetRequest_VpcConfig'
        MaxUserDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The maximum amount of time that a streaming session can\
              \ remain active, in seconds. If users are still connected to a streaming\
              \ instance five minutes before this limit is reached, they are prompted\
              \ to save any open documents before being disconnected. After this time\
              \ elapses, the instance is terminated and replaced by a new instance.</p>\
              \ <p>Specify a value between 600 and 360000.</p>"
          title: MaxUserDurationInSeconds
        DisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that a streaming session remains active\
              \ after users disconnect. If users try to reconnect to the streaming\
              \ session after a disconnection or network interruption within this\
              \ time interval, they are connected to their previous session. Otherwise,\
              \ they are connected to a new session with a new streaming instance.\
              \ </p> <p>Specify a value between 60 and 360000.</p>"
          title: DisconnectTimeoutInSeconds
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The fleet name to display.
          title: DisplayName
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the fleet.
          title: EnableDefaultInternetAccess
        DomainJoinInfo:
          $ref: '#/components/schemas/CreateFleetRequest_DomainJoinInfo'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate with the fleet. A tag is a key-value\
              \ pair, and the value is optional. For example, Environment=Test. If\
              \ you do not specify a value, Environment=. </p> <p>If you do not specify\
              \ a value, the value is set to an empty string.</p> <p>Generally allowed\
              \ characters are: letters, numbers, and spaces representable in UTF-8,\
              \ and the following special characters: </p> <p>_ . : / = + \\ - @</p>\
              \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
              >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
              \ Guide</i>.</p>"
          title: Tags
        IdleDisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that users can be idle (inactive)\
              \ before they are disconnected from their streaming session and the\
              \ <code>DisconnectTimeoutInSeconds</code> time interval begins. Users\
              \ are notified before they are disconnected due to inactivity. If they\
              \ try to reconnect to the streaming session before the time interval\
              \ specified in <code>DisconnectTimeoutInSeconds</code> elapses, they\
              \ are connected to their previous session. Users are considered idle\
              \ when they stop providing keyboard or mouse input during their streaming\
              \ session. File uploads and downloads, audio in, audio out, and pixels\
              \ changing do not qualify as user activity. If users continue to be\
              \ idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code>\
              \ elapses, they are disconnected.</p> <p>To prevent users from being\
              \ disconnected due to inactivity, specify a value of 0. Otherwise, specify\
              \ a value between 60 and 3600. The default value is 0.</p> <note> <p>If\
              \ you enable this feature, we recommend that you specify a value that\
              \ corresponds exactly to a whole number of minutes (for example, 60,\
              \ 120, and 180). If you don't do this, the value is rounded to the nearest\
              \ minute. For example, if you specify a value of 70, users are disconnected\
              \ after 1 minute of inactivity. If you specify a value that is at the\
              \ midpoint between two different minutes, the value is rounded up. For\
              \ example, if you specify a value of 90, users are disconnected after\
              \ 2 minutes of inactivity. </p> </note>"
          title: IdleDisconnectTimeoutInSeconds
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role to apply\
              \ to the fleet. To assume a role, a fleet instance calls the AWS Security\
              \ Token Service (STS) <code>AssumeRole</code> API operation and passes\
              \ the ARN of the role to use. The operation creates a new session with\
              \ temporary credentials. AppStream 2.0 retrieves the temporary credentials\
              \ and creates the <b>appstream_machine_role</b> credential profile on\
              \ the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        StreamView:
          allOf:
          - $ref: '#/components/schemas/StreamView'
          - description: "<p>The AppStream 2.0 view that is displayed to your users\
              \ when they stream from the fleet. When <code>APP</code> is specified,\
              \ only the windows of applications opened by users display. When <code>DESKTOP</code>\
              \ is specified, the standard desktop that is provided by the operating\
              \ system displays.</p> <p>The default value is <code>APP</code>.</p>"
          title: StreamView
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: 'The fleet platform. WINDOWS_SERVER_2019 and AMAZON_LINUX2
              are supported for Elastic fleets. '
          title: Platform
        MaxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The maximum concurrent sessions of the Elastic fleet. This\
              \ is required for Elastic fleets, and not allowed for other fleet types."
          title: MaxConcurrentSessions
        UsbDeviceFilterStrings:
          allOf:
          - $ref: '#/components/schemas/UsbDeviceFilterStrings'
          - description: "The USB device filter strings that specify which USB devices\
              \ a user can redirect to the fleet streaming session, when using the\
              \ Windows native client. This is allowed but not required for Elastic\
              \ fleets."
          title: UsbDeviceFilterStrings
        SessionScriptS3Location:
          $ref: '#/components/schemas/CreateFleetRequest_SessionScriptS3Location'
      required:
      - InstanceType
      - Name
      title: CreateFleetRequest
      type: object
    CreateImageBuilderResult:
      example:
        ImageBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          ImageBuilderErrors: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          AppstreamAgentVersion: ""
          Name: ""
          NetworkAccessConfiguration:
            EniId: ""
            EniPrivateIpAddress: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          ImageArn: ""
          AccessEndpoints: ""
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/CreateImageBuilderResult_ImageBuilder'
      title: CreateImageBuilderResult
      type: object
    CreateImageBuilderRequest:
      example:
        Description: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        EnableDefaultInternetAccess: ""
        DomainJoinInfo:
          OrganizationalUnitDistinguishedName: ""
          DirectoryName: ""
        AppstreamAgentVersion: ""
        Name: ""
        ImageName: ""
        DisplayName: ""
        IamRoleArn: ""
        InstanceType: ""
        Tags: ""
        ImageArn: ""
        AccessEndpoints: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A unique name for the image builder.
          title: Name
        ImageName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image used to create the image builder.
          title: ImageName
        ImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the public, private, or shared image to use."
          title: ImageArn
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching the image builder.
              The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p>
              </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p>
              </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p>
              </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p>
              </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p>
              </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p>
              </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p>
              </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p>
              </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p>
              </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p>
              </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p>
              </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p>
              </li> </ul>
          title: InstanceType
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The image builder name to display.
          title: DisplayName
        VpcConfig:
          $ref: '#/components/schemas/CreateImageBuilderRequest_VpcConfig'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role to apply\
              \ to the image builder. To assume a role, the image builder calls the\
              \ AWS Security Token Service (STS) <code>AssumeRole</code> API operation\
              \ and passes the ARN of the role to use. The operation creates a new\
              \ session with temporary credentials. AppStream 2.0 retrieves the temporary\
              \ credentials and creates the <b>appstream_machine_role</b> credential\
              \ profile on the instance.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the image
              builder.
          title: EnableDefaultInternetAccess
        DomainJoinInfo:
          $ref: '#/components/schemas/CreateImageBuilderRequest_DomainJoinInfo'
        AppstreamAgentVersion:
          allOf:
          - $ref: '#/components/schemas/AppstreamAgentVersion'
          - description: "The version of the AppStream 2.0 agent to use for this image\
              \ builder. To use the latest version of the AppStream 2.0 agent, specify\
              \ [LATEST]. "
          title: AppstreamAgentVersion
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate with the image builder. A tag is\
              \ a key-value pair, and the value is optional. For example, Environment=Test.\
              \ If you do not specify a value, Environment=. </p> <p>Generally allowed\
              \ characters are: letters, numbers, and spaces representable in UTF-8,\
              \ and the following special characters: </p> <p>_ . : / = + \\ - @</p>\
              \ <p>If you do not specify a value, the value is set to an empty string.</p>\
              \ <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
              >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
              \ Guide</i>.</p>"
          title: Tags
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Administrators can connect to the image builder only through the specified
              endpoints.
          title: AccessEndpoints
      required:
      - InstanceType
      - Name
      title: CreateImageBuilderRequest
      type: object
    CreateImageBuilderStreamingURLResult:
      example:
        Expires: ""
        StreamingURL: ""
      properties:
        StreamingURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL to start the AppStream 2.0 streaming session.
          title: StreamingURL
        Expires:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The elapsed time, in seconds after the Unix epoch, when\
              \ this URL expires."
          title: Expires
      title: CreateImageBuilderStreamingURLResult
      type: object
    CreateImageBuilderStreamingURLRequest:
      example:
        Validity: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image builder.
          title: Name
        Validity:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The time that the streaming URL will be valid, in seconds.\
              \ Specify a value between 1 and 604800 seconds. The default is 3600\
              \ seconds."
          title: Validity
      required:
      - Name
      title: CreateImageBuilderStreamingURLRequest
      type: object
    CreateStackResult:
      example:
        Stack:
          Description: ""
          CreatedTime: ""
          StorageConnectors: ""
          EmbedHostDomains: ""
          UserSettings: ""
          RedirectURL: ""
          StreamingExperienceSettings:
            PreferredProtocol: ""
          Name: ""
          FeedbackURL: ""
          ApplicationSettings:
            SettingsGroup: ""
            Enabled: ""
            S3BucketName: ""
          StackErrors: ""
          DisplayName: ""
          Arn: ""
          AccessEndpoints: ""
      properties:
        Stack:
          $ref: '#/components/schemas/CreateStackResult_Stack'
      title: CreateStackResult
      type: object
    CreateStackRequest:
      example:
        ApplicationSettings:
          SettingsGroup: ""
          Enabled: ""
        Description: ""
        StorageConnectors: ""
        EmbedHostDomains: ""
        UserSettings: ""
        DisplayName: ""
        RedirectURL: ""
        StreamingExperienceSettings:
          PreferredProtocol: ""
        Tags: ""
        Name: ""
        FeedbackURL: ""
        AccessEndpoints: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The stack name to display.
          title: DisplayName
        StorageConnectors:
          allOf:
          - $ref: '#/components/schemas/StorageConnectorList'
          - description: The storage connectors to enable.
          title: StorageConnectors
        RedirectURL:
          allOf:
          - $ref: '#/components/schemas/RedirectURL'
          - description: The URL that users are redirected to after their streaming
              session ends.
          title: RedirectURL
        FeedbackURL:
          allOf:
          - $ref: '#/components/schemas/FeedbackURL'
          - description: "The URL that users are redirected to after they click the\
              \ Send Feedback link. If no URL is specified, no Send Feedback link\
              \ is displayed."
          title: FeedbackURL
        UserSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettingList'
          - description: "The actions that are enabled or disabled for users during\
              \ their streaming sessions. By default, these actions are enabled. "
          title: UserSettings
        ApplicationSettings:
          $ref: '#/components/schemas/CreateStackRequest_ApplicationSettings'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate with the stack. A tag is a key-value\
              \ pair, and the value is optional. For example, Environment=Test. If\
              \ you do not specify a value, Environment=. </p> <p>If you do not specify\
              \ a value, the value is set to an empty string.</p> <p>Generally allowed\
              \ characters are: letters, numbers, and spaces representable in UTF-8,\
              \ and the following special characters: </p> <p>_ . : / = + \\ - @</p>\
              \ <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
              >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
              \ Guide</i>.</p>"
          title: Tags
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Users of the stack can connect to AppStream 2.0 only through the specified
              endpoints.
          title: AccessEndpoints
        EmbedHostDomains:
          allOf:
          - $ref: '#/components/schemas/EmbedHostDomains'
          - description: 'The domains where AppStream 2.0 streaming sessions can be
              embedded in an iframe. You must approve the domains that you want to
              host embedded AppStream 2.0 streaming sessions. '
          title: EmbedHostDomains
        StreamingExperienceSettings:
          $ref: '#/components/schemas/CreateStackRequest_StreamingExperienceSettings'
      required:
      - Name
      title: CreateStackRequest
      type: object
    CreateStreamingURLResult:
      example:
        Expires: ""
        StreamingURL: ""
      properties:
        StreamingURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL to start the AppStream 2.0 streaming session.
          title: StreamingURL
        Expires:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The elapsed time, in seconds after the Unix epoch, when\
              \ this URL expires."
          title: Expires
      title: CreateStreamingURLResult
      type: object
    CreateStreamingURLRequest:
      example:
        Validity: ""
        FleetName: ""
        UserId: ""
        SessionContext: ""
        ApplicationId: ""
        StackName: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: StackName
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: FleetName
        UserId:
          allOf:
          - $ref: '#/components/schemas/StreamingUrlUserId'
          - description: The identifier of the user.
          title: UserId
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the application to launch after the session\
              \ starts. This is the name that you specified as <b>Name</b> in the\
              \ Image Assistant. If your fleet is enabled for the <b>Desktop</b> stream\
              \ view, you can also choose to launch directly to the operating system\
              \ desktop. To do so, specify <b>Desktop</b>."
          title: ApplicationId
        Validity:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The time that the streaming URL will be valid, in seconds.\
              \ Specify a value between 1 and 604800 seconds. The default is 60 seconds."
          title: Validity
        SessionContext:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The session context. For more information, see <a href=\"\
              https://docs.aws.amazon.com/appstream2/latest/developerguide/managing-stacks-fleets.html#managing-stacks-fleets-parameters\"\
              >Session Context</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>."
          title: SessionContext
      required:
      - FleetName
      - StackName
      - UserId
      title: CreateStreamingURLRequest
      type: object
    CreateUpdatedImageResult:
      example:
        image:
          Description: ""
          CreatedTime: ""
          Platform: ""
          Applications: ""
          PublicBaseImageReleasedDate: ""
          ImageBuilderSupported: ""
          AppstreamAgentVersion: ""
          ImageBuilderName: ""
          Name: ""
          ImagePermissions:
            allowFleet: ""
            allowImageBuilder: ""
          ImageErrors: ""
          State: ""
          DisplayName: ""
          Visibility: ""
          Arn: ""
          BaseImageArn: ""
          StateChangeReason:
            Message: ""
            Code: ""
        canUpdateImage: ""
      properties:
        image:
          $ref: '#/components/schemas/Image'
        canUpdateImage:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether a new image can be created.
          title: canUpdateImage
      title: CreateUpdatedImageResult
      type: object
    CreateUpdatedImageRequest:
      example:
        existingImageName: ""
        dryRun: ""
        newImageDescription: ""
        newImageDisplayName: ""
        newImageTags: ""
        newImageName: ""
      properties:
        existingImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the image to update.
          title: existingImageName
        newImageName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the new image. The name must be unique within
              the AWS account and Region.
          title: newImageName
        newImageDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display for the new image.
          title: newImageDescription
        newImageDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display for the new image.
          title: newImageDisplayName
        newImageTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate with the new image. A tag is a\
              \ key-value pair, and the value is optional. For example, Environment=Test.\
              \ If you do not specify a value, Environment=. </p> <p>Generally allowed\
              \ characters are: letters, numbers, and spaces representable in UTF-8,\
              \ and the following special characters: </p> <p>_ . : / = + \\ - @</p>\
              \ <p>If you do not specify a value, the value is set to an empty string.</p>\
              \ <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html\"\
              >Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Administration\
              \ Guide</i>.</p>"
          title: newImageTags
        dryRun:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether to display the status of image update\
              \ availability before AppStream 2.0 initiates the process of creating\
              \ a new updated image. If this value is set to <code>true</code>, AppStream\
              \ 2.0 displays whether image updates are available. If this value is\
              \ set to <code>false</code>, AppStream 2.0 initiates the process of\
              \ creating a new updated image without displaying whether image updates\
              \ are available."
          title: dryRun
      required:
      - existingImageName
      - newImageName
      title: CreateUpdatedImageRequest
      type: object
    CreateUsageReportSubscriptionResult:
      example:
        Schedule: ""
        S3BucketName: ""
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon S3 bucket where generated reports are stored.</p>\
              \ <p>If you enabled on-instance session scripts and Amazon S3 logging\
              \ for your session script configuration, AppStream 2.0 created an S3\
              \ bucket to store the script output. The bucket is unique to your account\
              \ and Region. When you enable usage reporting in this case, AppStream\
              \ 2.0 uses the same bucket to store your usage reports. If you haven't\
              \ already enabled on-instance session scripts, when you enable usage\
              \ reports, AppStream 2.0 creates a new S3 bucket.</p>"
          title: S3BucketName
        Schedule:
          allOf:
          - $ref: '#/components/schemas/UsageReportSchedule'
          - description: The schedule for generating usage reports.
          title: Schedule
      title: CreateUsageReportSubscriptionResult
      type: object
    CreateUsageReportSubscriptionRequest:
      properties: {}
      title: CreateUsageReportSubscriptionRequest
      type: object
    CreateUserResult:
      properties: {}
      type: object
    CreateUserRequest:
      example:
        UserName: ""
        FirstName: ""
        MessageAction: ""
        LastName: ""
        AuthenticationType: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: "<p>The email address of the user.</p> <note> <p>Users' email\
              \ addresses are case-sensitive. During login, if they specify an email\
              \ address that doesn't use the same capitalization as the email address\
              \ specified when their user pool account was created, a \"user does\
              \ not exist\" error message displays.</p> </note>"
          title: UserName
        MessageAction:
          allOf:
          - $ref: '#/components/schemas/MessageAction'
          - description: "<p>The action to take for the welcome email that is sent\
              \ to a user after the user is created in the user pool. If you specify\
              \ SUPPRESS, no email is sent. If you specify RESEND, do not specify\
              \ the first name or last name of the user. If the value is null, the\
              \ email is sent. </p> <note> <p>The temporary password in the welcome\
              \ email is valid for only 7 days. If users don’t set their passwords\
              \ within 7 days, you must send them a new welcome email.</p> </note>"
          title: MessageAction
        FirstName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValue'
          - description: "The first name, or given name, of the user."
          title: FirstName
        LastName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValue'
          - description: "The last name, or surname, of the user."
          title: LastName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: 'The authentication type for the user. You must specify USERPOOL. '
          title: AuthenticationType
      required:
      - AuthenticationType
      - UserName
      title: CreateUserRequest
      type: object
    DeleteAppBlockResult:
      properties: {}
      type: object
    DeleteAppBlockRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block.
          title: Name
      required:
      - Name
      title: DeleteAppBlockRequest
      type: object
    ResourceInUseException: {}
    DeleteAppBlockBuilderResult:
      properties: {}
      type: object
    DeleteAppBlockBuilderRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: Name
      required:
      - Name
      title: DeleteAppBlockBuilderRequest
      type: object
    DeleteApplicationResult:
      properties: {}
      type: object
    DeleteApplicationRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application.
          title: Name
      required:
      - Name
      title: DeleteApplicationRequest
      type: object
    DeleteDirectoryConfigResult:
      properties: {}
      type: object
    DeleteDirectoryConfigRequest:
      example:
        DirectoryName: ""
      properties:
        DirectoryName:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: The name of the directory configuration.
          title: DirectoryName
      required:
      - DirectoryName
      title: DeleteDirectoryConfigRequest
      type: object
    DeleteEntitlementResult:
      properties: {}
      type: object
    DeleteEntitlementRequest:
      example:
        StackName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: Name
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
      required:
      - Name
      - StackName
      title: DeleteEntitlementRequest
      type: object
    DeleteFleetResult:
      properties: {}
      type: object
    DeleteFleetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: Name
      required:
      - Name
      title: DeleteFleetRequest
      type: object
    DeleteImageResult:
      example:
        Image:
          Description: ""
          CreatedTime: ""
          Platform: ""
          Applications: ""
          PublicBaseImageReleasedDate: ""
          ImageBuilderSupported: ""
          AppstreamAgentVersion: ""
          ImageBuilderName: ""
          Name: ""
          ImagePermissions:
            allowFleet: ""
            allowImageBuilder: ""
          ImageErrors: ""
          State: ""
          DisplayName: ""
          Visibility: ""
          Arn: ""
          BaseImageArn: ""
          StateChangeReason:
            Message: ""
            Code: ""
      properties:
        Image:
          $ref: '#/components/schemas/DeleteImageResult_Image'
      title: DeleteImageResult
      type: object
    DeleteImageRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the image.
          title: Name
      required:
      - Name
      title: DeleteImageRequest
      type: object
    DeleteImageBuilderResult:
      example:
        ImageBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          ImageBuilderErrors: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          AppstreamAgentVersion: ""
          Name: ""
          NetworkAccessConfiguration:
            EniId: ""
            EniPrivateIpAddress: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          ImageArn: ""
          AccessEndpoints: ""
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/CreateImageBuilderResult_ImageBuilder'
      title: DeleteImageBuilderResult
      type: object
    DeleteImageBuilderRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the image builder.
          title: Name
      required:
      - Name
      title: DeleteImageBuilderRequest
      type: object
    DeleteImagePermissionsResult:
      properties: {}
      type: object
    DeleteImagePermissionsRequest:
      example:
        SharedAccountId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the private image.
          title: Name
        SharedAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The 12-digit identifier of the AWS account for which to delete
              image permissions.
          title: SharedAccountId
      required:
      - Name
      - SharedAccountId
      title: DeleteImagePermissionsRequest
      type: object
    DeleteStackResult:
      properties: {}
      type: object
    DeleteStackRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: Name
      required:
      - Name
      title: DeleteStackRequest
      type: object
    DeleteUsageReportSubscriptionResult:
      properties: {}
      type: object
    DeleteUsageReportSubscriptionRequest:
      properties: {}
      title: DeleteUsageReportSubscriptionRequest
      type: object
    DeleteUserResult:
      properties: {}
      type: object
    DeleteUserRequest:
      example:
        UserName: ""
        AuthenticationType: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: <p>The email address of the user.</p> <note> <p>Users' email
              addresses are case-sensitive.</p> </note>
          title: UserName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user. You must specify USERPOOL.
          title: AuthenticationType
      required:
      - AuthenticationType
      - UserName
      title: DeleteUserRequest
      type: object
    DescribeAppBlockBuilderAppBlockAssociationsResult:
      example:
        AppBlockBuilderAppBlockAssociations: ""
        NextToken: ""
      properties:
        AppBlockBuilderAppBlockAssociations:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderAppBlockAssociationsList'
          - description: This list of app block builders associated with app blocks.
          title: AppBlockBuilderAppBlockAssociations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeAppBlockBuilderAppBlockAssociationsResult
      type: object
    DescribeAppBlockBuilderAppBlockAssociationsRequest:
      example:
        AppBlockArn: ""
        NextToken: ""
        MaxResults: ""
        AppBlockBuilderName: ""
      properties:
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: AppBlockArn
        AppBlockBuilderName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: AppBlockBuilderName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeAppBlockBuilderAppBlockAssociationsRequest
      type: object
    DescribeAppBlockBuildersResult:
      example:
        NextToken: ""
        AppBlockBuilders: ""
      properties:
        AppBlockBuilders:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderList'
          - description: The list that describes one or more app block builders.
          title: AppBlockBuilders
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeAppBlockBuildersResult
      type: object
    DescribeAppBlockBuildersRequest:
      example:
        Names: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The names of the app block builders.
          title: Names
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results. The maximum value
              is 25.
          title: MaxResults
      title: DescribeAppBlockBuildersRequest
      type: object
    DescribeAppBlocksResult:
      example:
        AppBlocks: ""
        NextToken: ""
      properties:
        AppBlocks:
          allOf:
          - $ref: '#/components/schemas/AppBlocks'
          - description: The app blocks in the list.
          title: AppBlocks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeAppBlocksResult
      type: object
    DescribeAppBlocksRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Arns: ""
      properties:
        Arns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: The ARNs of the app blocks.
          title: Arns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
      title: DescribeAppBlocksRequest
      type: object
    DescribeApplicationFleetAssociationsResult:
      example:
        NextToken: ""
        ApplicationFleetAssociations: ""
      properties:
        ApplicationFleetAssociations:
          allOf:
          - $ref: '#/components/schemas/ApplicationFleetAssociationList'
          - description: The application fleet associations in the list.
          title: ApplicationFleetAssociations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeApplicationFleetAssociationsResult
      type: object
    DescribeApplicationFleetAssociationsRequest:
      example:
        FleetName: ""
        ApplicationArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: FleetName
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the application.
          title: ApplicationArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeApplicationFleetAssociationsRequest
      type: object
    DescribeApplicationsResult:
      example:
        Applications: ""
        NextToken: ""
      properties:
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          - description: The applications in the list.
          title: Applications
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeApplicationsResult
      type: object
    DescribeApplicationsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Arns: ""
      properties:
        Arns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: The ARNs for the applications.
          title: Arns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
      title: DescribeApplicationsRequest
      type: object
    DescribeDirectoryConfigsResult:
      example:
        NextToken: ""
        DirectoryConfigs: ""
      properties:
        DirectoryConfigs:
          allOf:
          - $ref: '#/components/schemas/DirectoryConfigList'
          - description: "Information about the directory configurations. Note that\
              \ although the response syntax in this topic includes the account password,\
              \ this password is not returned in the actual response. "
          title: DirectoryConfigs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeDirectoryConfigsResult
      type: object
    DescribeDirectoryConfigsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        DirectoryNames: ""
      properties:
        DirectoryNames:
          allOf:
          - $ref: '#/components/schemas/DirectoryNameList'
          - description: The directory names.
          title: DirectoryNames
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeDirectoryConfigsRequest
      type: object
    DescribeEntitlementsResult:
      example:
        NextToken: ""
        Entitlements: ""
      properties:
        Entitlements:
          allOf:
          - $ref: '#/components/schemas/EntitlementList'
          - description: The entitlements.
          title: Entitlements
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: DescribeEntitlementsResult
      type: object
    DescribeEntitlementsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        StackName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: Name
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
      required:
      - StackName
      title: DescribeEntitlementsRequest
      type: object
    DescribeFleetsResult:
      example:
        Fleets: ""
        NextToken: ""
      properties:
        Fleets:
          allOf:
          - $ref: '#/components/schemas/FleetList'
          - description: Information about the fleets.
          title: Fleets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeFleetsResult
      type: object
    DescribeFleetsRequest:
      example:
        Names: ""
        NextToken: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The names of the fleets to describe.
          title: Names
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeFleetsRequest
      type: object
    DescribeImageBuildersResult:
      example:
        NextToken: ""
        ImageBuilders: ""
      properties:
        ImageBuilders:
          allOf:
          - $ref: '#/components/schemas/ImageBuilderList'
          - description: Information about the image builders.
          title: ImageBuilders
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeImageBuildersResult
      type: object
    DescribeImageBuildersRequest:
      example:
        Names: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The names of the image builders to describe.
          title: Names
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeImageBuildersRequest
      type: object
    DescribeImagePermissionsResult:
      example:
        NextToken: ""
        SharedImagePermissionsList: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the private image.
          title: Name
        SharedImagePermissionsList:
          allOf:
          - $ref: '#/components/schemas/SharedImagePermissionsList'
          - description: 'The permissions for a private image that you own. '
          title: SharedImagePermissionsList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeImagePermissionsResult
      type: object
    DescribeImagePermissionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        SharedAwsAccountIds: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the private image for which to describe permissions.
              The image must be one that you own. '
          title: Name
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum size of each page of results.
          title: MaxResults
        SharedAwsAccountIds:
          allOf:
          - $ref: '#/components/schemas/AwsAccountIdList'
          - description: The 12-digit identifier of one or more AWS accounts with
              which the image is shared.
          title: SharedAwsAccountIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      required:
      - Name
      title: DescribeImagePermissionsRequest
      type: object
    DescribeImagesResult:
      example:
        NextToken: ""
        Images: ""
      properties:
        Images:
          allOf:
          - $ref: '#/components/schemas/ImageList'
          - description: Information about the images.
          title: Images
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeImagesResult
      type: object
    DescribeImagesRequest:
      example:
        Names: ""
        Type: ""
        NextToken: ""
        MaxResults: ""
        Arns: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The names of the public or private images to describe.
          title: Names
        Arns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          - description: "The ARNs of the public, private, and shared images to describe."
          title: Arns
        Type:
          allOf:
          - $ref: '#/components/schemas/VisibilityType'
          - description: "The type of image (public, private, or shared) to describe. "
          title: Type
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/DescribeImagesMaxResults'
          - description: The maximum size of each page of results.
          title: MaxResults
      title: DescribeImagesRequest
      type: object
    DescribeSessionsResult:
      example:
        NextToken: ""
        Sessions: ""
      properties:
        Sessions:
          allOf:
          - $ref: '#/components/schemas/SessionList'
          - description: Information about the streaming sessions.
          title: Sessions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeSessionsResult
      type: object
    DescribeSessionsRequest:
      example:
        FleetName: ""
        NextToken: ""
        UserId: ""
        Limit: ""
        StackName: ""
        AuthenticationType: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack. This value is case-sensitive.
          title: StackName
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet. This value is case-sensitive.
          title: FleetName
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: "The user identifier (ID). If you specify a user ID, you\
              \ must also specify the authentication type."
          title: UserId
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The size of each page of results. The default value is 20
              and the maximum value is 50.
          title: Limit
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication method. Specify <code>API</code> for a
              user authenticated using a streaming URL or <code>SAML</code> for a
              SAML federated user. The default is to authenticate users using a streaming
              URL.
          title: AuthenticationType
      required:
      - FleetName
      - StackName
      title: DescribeSessionsRequest
      type: object
    DescribeStacksResult:
      example:
        NextToken: ""
        Stacks: ""
      properties:
        Stacks:
          allOf:
          - $ref: '#/components/schemas/StackList'
          - description: Information about the stacks.
          title: Stacks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeStacksResult
      type: object
    DescribeStacksRequest:
      example:
        Names: ""
        NextToken: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The names of the stacks to describe.
          title: Names
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeStacksRequest
      type: object
    DescribeUsageReportSubscriptionsResult:
      example:
        NextToken: ""
        UsageReportSubscriptions: ""
      properties:
        UsageReportSubscriptions:
          allOf:
          - $ref: '#/components/schemas/UsageReportSubscriptionList'
          - description: Information about the usage report subscription.
          title: UsageReportSubscriptions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeUsageReportSubscriptionsResult
      type: object
    DescribeUsageReportSubscriptionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeUsageReportSubscriptionsRequest
      type: object
    DescribeUserStackAssociationsResult:
      example:
        NextToken: ""
        UserStackAssociations: ""
      properties:
        UserStackAssociations:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationList'
          - description: The UserStackAssociation objects.
          title: UserStackAssociations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeUserStackAssociationsResult
      type: object
    DescribeUserStackAssociationsRequest:
      example:
        UserName: ""
        NextToken: ""
        MaxResults: ""
        StackName: ""
        AuthenticationType: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack that is associated with the user.
          title: StackName
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: <p>The email address of the user who is associated with the
              stack.</p> <note> <p>Users' email addresses are case-sensitive.</p>
              </note>
          title: UserName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user who is associated with
              the stack. You must specify USERPOOL.
          title: AuthenticationType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: DescribeUserStackAssociationsRequest
      type: object
    DescribeUsersResult:
      example:
        NextToken: ""
        Users: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          - description: Information about users in the user pool.
          title: Users
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: DescribeUsersResult
      type: object
    DescribeUsersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AuthenticationType: ""
      properties:
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the users in the user pool to
              describe. You must specify USERPOOL.
          title: AuthenticationType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      required:
      - AuthenticationType
      title: DescribeUsersRequest
      type: object
    DisableUserResult:
      properties: {}
      type: object
    DisableUserRequest:
      example:
        UserName: ""
        AuthenticationType: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: <p>The email address of the user.</p> <note> <p>Users' email
              addresses are case-sensitive.</p> </note>
          title: UserName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user. You must specify USERPOOL.
          title: AuthenticationType
      required:
      - AuthenticationType
      - UserName
      title: DisableUserRequest
      type: object
    DisassociateAppBlockBuilderAppBlockResult:
      properties: {}
      type: object
    DisassociateAppBlockBuilderAppBlockRequest:
      example:
        AppBlockArn: ""
        AppBlockBuilderName: ""
      properties:
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: AppBlockArn
        AppBlockBuilderName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: AppBlockBuilderName
      required:
      - AppBlockArn
      - AppBlockBuilderName
      title: DisassociateAppBlockBuilderAppBlockRequest
      type: object
    DisassociateApplicationFleetResult:
      properties: {}
      type: object
    DisassociateApplicationFleetRequest:
      example:
        FleetName: ""
        ApplicationArn: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the fleet.
          title: FleetName
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the application.
          title: ApplicationArn
      required:
      - ApplicationArn
      - FleetName
      title: DisassociateApplicationFleetRequest
      type: object
    DisassociateApplicationFromEntitlementResult:
      properties: {}
      type: object
    DisassociateApplicationFromEntitlementRequest:
      example:
        EntitlementName: ""
        ApplicationIdentifier: ""
        StackName: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        EntitlementName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: EntitlementName
        ApplicationIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the application to remove from the entitlement.
          title: ApplicationIdentifier
      required:
      - ApplicationIdentifier
      - EntitlementName
      - StackName
      title: DisassociateApplicationFromEntitlementRequest
      type: object
    DisassociateFleetResult:
      properties: {}
      type: object
    DisassociateFleetRequest:
      example:
        FleetName: ""
        StackName: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: FleetName
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: StackName
      required:
      - FleetName
      - StackName
      title: DisassociateFleetRequest
      type: object
    EnableUserResult:
      properties: {}
      type: object
    EnableUserRequest:
      example:
        UserName: ""
        AuthenticationType: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: "<p>The email address of the user.</p> <note> <p>Users' email\
              \ addresses are case-sensitive. During login, if they specify an email\
              \ address that doesn't use the same capitalization as the email address\
              \ specified when their user pool account was created, a \"user does\
              \ not exist\" error message displays. </p> </note>"
          title: UserName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user. You must specify USERPOOL.
          title: AuthenticationType
      required:
      - AuthenticationType
      - UserName
      title: EnableUserRequest
      type: object
    ExpireSessionResult:
      properties: {}
      type: object
    ExpireSessionRequest:
      example:
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the streaming session.
          title: SessionId
      required:
      - SessionId
      title: ExpireSessionRequest
      type: object
    ListAssociatedFleetsResult:
      example:
        Names: ""
        NextToken: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The name of the fleet.
          title: Names
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: ListAssociatedFleetsResult
      type: object
    ListAssociatedFleetsRequest:
      example:
        NextToken: ""
        StackName: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: StackName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      required:
      - StackName
      title: ListAssociatedFleetsRequest
      type: object
    ListAssociatedStacksResult:
      example:
        Names: ""
        NextToken: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The name of the stack.
          title: Names
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If there are no more pages, this value\
              \ is null."
          title: NextToken
      title: ListAssociatedStacksResult
      type: object
    ListAssociatedStacksRequest:
      example:
        FleetName: ""
        NextToken: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: FleetName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      required:
      - FleetName
      title: ListAssociatedStacksRequest
      type: object
    ListEntitledApplicationsResult:
      example:
        EntitledApplications: ""
        NextToken: ""
      properties:
        EntitledApplications:
          allOf:
          - $ref: '#/components/schemas/EntitledApplicationList'
          - description: The entitled applications.
          title: EntitledApplications
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
      title: ListEntitledApplicationsResult
      type: object
    ListEntitledApplicationsRequest:
      example:
        EntitlementName: ""
        NextToken: ""
        MaxResults: ""
        StackName: ""
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        EntitlementName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: EntitlementName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token used to retrieve the next page of results
              for this operation.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum size of each page of results.
          title: MaxResults
      required:
      - EntitlementName
      - StackName
      title: ListEntitledApplicationsRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The information about the tags.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    StartAppBlockBuilderResult:
      example:
        AppBlockBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          EnableDefaultInternetAccess: ""
          Name: ""
          AppBlockBuilderErrors: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          AccessEndpoints: ""
      properties:
        AppBlockBuilder:
          $ref: '#/components/schemas/AppBlockBuilder'
      title: StartAppBlockBuilderResult
      type: object
    StartAppBlockBuilderRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: Name
      required:
      - Name
      title: StartAppBlockBuilderRequest
      type: object
    StartFleetResult:
      properties: {}
      type: object
    StartFleetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: Name
      required:
      - Name
      title: StartFleetRequest
      type: object
    StartImageBuilderResult:
      example:
        ImageBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          ImageBuilderErrors: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          AppstreamAgentVersion: ""
          Name: ""
          NetworkAccessConfiguration:
            EniId: ""
            EniPrivateIpAddress: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          ImageArn: ""
          AccessEndpoints: ""
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/CreateImageBuilderResult_ImageBuilder'
      title: StartImageBuilderResult
      type: object
    StartImageBuilderRequest:
      example:
        AppstreamAgentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image builder.
          title: Name
        AppstreamAgentVersion:
          allOf:
          - $ref: '#/components/schemas/AppstreamAgentVersion'
          - description: "The version of the AppStream 2.0 agent to use for this image\
              \ builder. To use the latest version of the AppStream 2.0 agent, specify\
              \ [LATEST]. "
          title: AppstreamAgentVersion
      required:
      - Name
      title: StartImageBuilderRequest
      type: object
    StopAppBlockBuilderResult:
      example:
        AppBlockBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          EnableDefaultInternetAccess: ""
          Name: ""
          AppBlockBuilderErrors: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          AccessEndpoints: ""
      properties:
        AppBlockBuilder:
          $ref: '#/components/schemas/AppBlockBuilder'
      title: StopAppBlockBuilderResult
      type: object
    StopAppBlockBuilderRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: Name
      required:
      - Name
      title: StopAppBlockBuilderRequest
      type: object
    StopFleetResult:
      properties: {}
      type: object
    StopFleetRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: Name
      required:
      - Name
      title: StopFleetRequest
      type: object
    StopImageBuilderResult:
      example:
        ImageBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          ImageBuilderErrors: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          AppstreamAgentVersion: ""
          Name: ""
          NetworkAccessConfiguration:
            EniId: ""
            EniPrivateIpAddress: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          ImageArn: ""
          AccessEndpoints: ""
      properties:
        ImageBuilder:
          $ref: '#/components/schemas/CreateImageBuilderResult_ImageBuilder'
      title: StopImageBuilderResult
      type: object
    StopImageBuilderRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image builder.
          title: Name
      required:
      - Name
      title: StopImageBuilderRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>The tags to associate. A tag is a key-value pair, and\
              \ the value is optional. For example, Environment=Test. If you do not\
              \ specify a value, Environment=. </p> <p>If you do not specify a value,\
              \ the value is set to an empty string.</p> <p>Generally allowed characters\
              \ are: letters, numbers, and spaces representable in UTF-8, and the\
              \ following special characters: </p> <p>_ . : / = + \\ - @</p>"
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag keys for the tags to disassociate.
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAppBlockBuilderResult:
      example:
        AppBlockBuilder:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          EnableDefaultInternetAccess: ""
          Name: ""
          AppBlockBuilderErrors: ""
          State: ""
          DisplayName: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          StateChangeReason:
            Message: ""
            Code: ""
          AccessEndpoints: ""
      properties:
        AppBlockBuilder:
          $ref: '#/components/schemas/AppBlockBuilder'
      title: UpdateAppBlockBuilderResult
      type: object
    UpdateAppBlockBuilderRequest:
      example:
        Description: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        AttributesToDelete: ""
        EnableDefaultInternetAccess: ""
        DisplayName: ""
        IamRoleArn: ""
        InstanceType: ""
        Name: ""
        AccessEndpoints: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The unique name for the app block builder.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the app block builder.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the app block builder.
          title: DisplayName
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: <p>The platform of the app block builder.</p> <p> <code>WINDOWS_SERVER_2019</code>
              is the only valid value.</p>
          title: Platform
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching the app block
              builder. The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.standard.xlarge</p> </li> <li> <p>stream.standard.2xlarge</p>
              </li> </ul>
          title: InstanceType
        VpcConfig:
          $ref: '#/components/schemas/CreateAppBlockBuilderRequest_VpcConfig'
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the app block
              builder.
          title: EnableDefaultInternetAccess
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role to apply\
              \ to the app block builder. To assume a role, the app block builder\
              \ calls the AWS Security Token Service (STS) <code>AssumeRole</code>\
              \ API operation and passes the ARN of the role to use. The operation\
              \ creates a new session with temporary credentials. AppStream 2.0 retrieves\
              \ the temporary credentials and creates the <b>appstream_machine_role</b>\
              \ credential profile on the instance.</p> <p>For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Administrators can connect to the app block builder only through the
              specified endpoints.
          title: AccessEndpoints
        AttributesToDelete:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderAttributes'
          - description: The attributes to delete from the app block builder.
          title: AttributesToDelete
      required:
      - Name
      title: UpdateAppBlockBuilderRequest
      type: object
    UpdateApplicationResult:
      example:
        Application:
          WorkingDirectory: ""
          Platforms: ""
          Description: ""
          CreatedTime: ""
          Metadata: ""
          Enabled: ""
          Name: ""
          IconURL: ""
          AppBlockArn: ""
          InstanceFamilies: ""
          DisplayName: ""
          LaunchPath: ""
          Arn: ""
          LaunchParameters: ""
          IconS3Location:
            S3Bucket: ""
            S3Key: ""
      properties:
        Application:
          $ref: '#/components/schemas/Application'
      title: UpdateApplicationResult
      type: object
    UpdateApplicationRequest:
      example:
        WorkingDirectory: ""
        AppBlockArn: ""
        Description: ""
        AttributesToDelete: ""
        DisplayName: ""
        LaunchPath: ""
        LaunchParameters: ""
        Name: ""
        IconS3Location:
          S3Bucket: ""
          S3Key: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the application. This name is visible to users
              when display name is not specified.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The display name of the application. This name is visible
              to users in the application catalog.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the application.
          title: Description
        IconS3Location:
          $ref: '#/components/schemas/UpdateApplicationRequest_IconS3Location'
        LaunchPath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The launch path of the application.
          title: LaunchPath
        WorkingDirectory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The working directory of the application.
          title: WorkingDirectory
        LaunchParameters:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The launch parameters of the application.
          title: LaunchParameters
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: AppBlockArn
        AttributesToDelete:
          allOf:
          - $ref: '#/components/schemas/ApplicationAttributes'
          - description: The attributes to delete for an application.
          title: AttributesToDelete
      required:
      - Name
      title: UpdateApplicationRequest
      type: object
    UpdateDirectoryConfigResult:
      example:
        DirectoryConfig:
          CreatedTime: ""
          OrganizationalUnitDistinguishedNames: ""
          ServiceAccountCredentials:
            AccountName: ""
            AccountPassword: ""
          CertificateBasedAuthProperties:
            Status: ""
            CertificateAuthorityArn: ""
          DirectoryName: ""
      properties:
        DirectoryConfig:
          $ref: '#/components/schemas/UpdateDirectoryConfigResult_DirectoryConfig'
      title: UpdateDirectoryConfigResult
      type: object
    UpdateDirectoryConfigRequest:
      example:
        OrganizationalUnitDistinguishedNames: ""
        ServiceAccountCredentials:
          AccountName: ""
          AccountPassword: ""
        CertificateBasedAuthProperties:
          Status: ""
          CertificateAuthorityArn: ""
        DirectoryName: ""
      properties:
        DirectoryName:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: The name of the Directory Config object.
          title: DirectoryName
        OrganizationalUnitDistinguishedNames:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          - description: The distinguished names of the organizational units for computer
              accounts.
          title: OrganizationalUnitDistinguishedNames
        ServiceAccountCredentials:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_ServiceAccountCredentials'
        CertificateBasedAuthProperties:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_CertificateBasedAuthProperties'
      required:
      - DirectoryName
      title: UpdateDirectoryConfigRequest
      type: object
    UpdateEntitlementResult:
      example:
        Entitlement:
          AppVisibility: ""
          Description: ""
          CreatedTime: ""
          Attributes: ""
          LastModifiedTime: ""
          StackName: ""
          Name: ""
      properties:
        Entitlement:
          $ref: '#/components/schemas/CreateEntitlementResult_Entitlement'
      title: UpdateEntitlementResult
      type: object
    UpdateEntitlementRequest:
      example:
        AppVisibility: ""
        Description: ""
        Attributes: ""
        StackName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: Name
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the entitlement.
          title: Description
        AppVisibility:
          allOf:
          - $ref: '#/components/schemas/AppVisibility'
          - description: Specifies whether all or only selected apps are entitled.
          title: AppVisibility
        Attributes:
          allOf:
          - $ref: '#/components/schemas/EntitlementAttributeList'
          - description: The attributes of the entitlement.
          title: Attributes
      required:
      - Name
      - StackName
      title: UpdateEntitlementRequest
      type: object
    UpdateFleetResult:
      example:
        Fleet:
          Description: ""
          CreatedTime: ""
          Platform: ""
          VpcConfig:
            SubnetIds: ""
            SecurityGroupIds: ""
          FleetType: ""
          EnableDefaultInternetAccess: ""
          DomainJoinInfo:
            OrganizationalUnitDistinguishedName: ""
            DirectoryName: ""
          SessionScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          Name: ""
          ImageName: ""
          FleetErrors: ""
          MaxUserDurationInSeconds: ""
          IdleDisconnectTimeoutInSeconds: ""
          UsbDeviceFilterStrings: ""
          DisconnectTimeoutInSeconds: ""
          ComputeCapacityStatus:
            Running: ""
            InUse: ""
            Available: ""
            Desired: ""
          State: ""
          DisplayName: ""
          StreamView: ""
          IamRoleArn: ""
          Arn: ""
          InstanceType: ""
          MaxConcurrentSessions: ""
          ImageArn: ""
      properties:
        Fleet:
          $ref: '#/components/schemas/CreateFleetResult_Fleet'
      title: UpdateFleetResult
      type: object
    UpdateFleetRequest:
      example:
        Description: ""
        ComputeCapacity:
          DesiredInstances: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        AttributesToDelete: ""
        EnableDefaultInternetAccess: ""
        DomainJoinInfo:
          OrganizationalUnitDistinguishedName: ""
          DirectoryName: ""
        SessionScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        DeleteVpcConfig: ""
        Name: ""
        ImageName: ""
        MaxUserDurationInSeconds: ""
        IdleDisconnectTimeoutInSeconds: ""
        UsbDeviceFilterStrings: ""
        DisconnectTimeoutInSeconds: ""
        DisplayName: ""
        StreamView: ""
        IamRoleArn: ""
        InstanceType: ""
        MaxConcurrentSessions: ""
        ImageArn: ""
      properties:
        ImageName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image used to create the fleet.
          title: ImageName
        ImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN of the public, private, or shared image to use."
          title: ImageArn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A unique name for the fleet.
          title: Name
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching fleet instances.
              The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.standard.xlarge</p> </li> <li> <p>stream.standard.2xlarge</p>
              </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p>
              </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p>
              </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p>
              </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p>
              </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p>
              </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p>
              </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p>
              </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p>
              </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p>
              </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p>
              </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p>
              </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p>
              </li> </ul> <p>The following instance types are available for Elastic
              fleets:</p> <ul> <li> <p>stream.standard.small</p> </li> <li> <p>stream.standard.medium</p>
              </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.standard.xlarge</p>
              </li> <li> <p>stream.standard.2xlarge</p> </li> </ul>
          title: InstanceType
        ComputeCapacity:
          $ref: '#/components/schemas/UpdateFleetRequest_ComputeCapacity'
        VpcConfig:
          $ref: '#/components/schemas/UpdateFleetRequest_VpcConfig'
        MaxUserDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The maximum amount of time that a streaming session can\
              \ remain active, in seconds. If users are still connected to a streaming\
              \ instance five minutes before this limit is reached, they are prompted\
              \ to save any open documents before being disconnected. After this time\
              \ elapses, the instance is terminated and replaced by a new instance.</p>\
              \ <p>Specify a value between 600 and 432000.</p>"
          title: MaxUserDurationInSeconds
        DisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that a streaming session remains active\
              \ after users disconnect. If users try to reconnect to the streaming\
              \ session after a disconnection or network interruption within this\
              \ time interval, they are connected to their previous session. Otherwise,\
              \ they are connected to a new session with a new streaming instance.\
              \ </p> <p>Specify a value between 60 and 360000.</p>"
          title: DisconnectTimeoutInSeconds
        DeleteVpcConfig:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: Deletes the VPC association for the specified fleet.
          title: DeleteVpcConfig
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The fleet name to display.
          title: DisplayName
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the fleet.
          title: EnableDefaultInternetAccess
        DomainJoinInfo:
          $ref: '#/components/schemas/UpdateFleetRequest_DomainJoinInfo'
        IdleDisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that users can be idle (inactive)\
              \ before they are disconnected from their streaming session and the\
              \ <code>DisconnectTimeoutInSeconds</code> time interval begins. Users\
              \ are notified before they are disconnected due to inactivity. If users\
              \ try to reconnect to the streaming session before the time interval\
              \ specified in <code>DisconnectTimeoutInSeconds</code> elapses, they\
              \ are connected to their previous session. Users are considered idle\
              \ when they stop providing keyboard or mouse input during their streaming\
              \ session. File uploads and downloads, audio in, audio out, and pixels\
              \ changing do not qualify as user activity. If users continue to be\
              \ idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code>\
              \ elapses, they are disconnected. </p> <p>To prevent users from being\
              \ disconnected due to inactivity, specify a value of 0. Otherwise, specify\
              \ a value between 60 and 3600. The default value is 0.</p> <note> <p>If\
              \ you enable this feature, we recommend that you specify a value that\
              \ corresponds exactly to a whole number of minutes (for example, 60,\
              \ 120, and 180). If you don't do this, the value is rounded to the nearest\
              \ minute. For example, if you specify a value of 70, users are disconnected\
              \ after 1 minute of inactivity. If you specify a value that is at the\
              \ midpoint between two different minutes, the value is rounded up. For\
              \ example, if you specify a value of 90, users are disconnected after\
              \ 2 minutes of inactivity. </p> </note>"
          title: IdleDisconnectTimeoutInSeconds
        AttributesToDelete:
          allOf:
          - $ref: '#/components/schemas/FleetAttributes'
          - description: The fleet attributes to delete.
          title: AttributesToDelete
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role to apply\
              \ to the fleet. To assume a role, a fleet instance calls the AWS Security\
              \ Token Service (STS) <code>AssumeRole</code> API operation and passes\
              \ the ARN of the role to use. The operation creates a new session with\
              \ temporary credentials. AppStream 2.0 retrieves the temporary credentials\
              \ and creates the <b>appstream_machine_role</b> credential profile on\
              \ the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        StreamView:
          allOf:
          - $ref: '#/components/schemas/StreamView'
          - description: "<p>The AppStream 2.0 view that is displayed to your users\
              \ when they stream from the fleet. When <code>APP</code> is specified,\
              \ only the windows of applications opened by users display. When <code>DESKTOP</code>\
              \ is specified, the standard desktop that is provided by the operating\
              \ system displays.</p> <p>The default value is <code>APP</code>.</p>"
          title: StreamView
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: 'The platform of the fleet. WINDOWS_SERVER_2019 and AMAZON_LINUX2
              are supported for Elastic fleets. '
          title: Platform
        MaxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of concurrent sessions for a fleet.
          title: MaxConcurrentSessions
        UsbDeviceFilterStrings:
          allOf:
          - $ref: '#/components/schemas/UsbDeviceFilterStrings'
          - description: "The USB device filter strings that specify which USB devices\
              \ a user can redirect to the fleet streaming session, when using the\
              \ Windows native client. This is allowed but not required for Elastic\
              \ fleets."
          title: UsbDeviceFilterStrings
        SessionScriptS3Location:
          $ref: '#/components/schemas/UpdateFleetRequest_SessionScriptS3Location'
      title: UpdateFleetRequest
      type: object
    UpdateImagePermissionsResult:
      properties: {}
      type: object
    UpdateImagePermissionsRequest:
      example:
        ImagePermissions:
          allowFleet: ""
          allowImageBuilder: ""
        SharedAccountId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the private image.
          title: Name
        SharedAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The 12-digit identifier of the AWS account for which you
              want add or update image permissions.
          title: SharedAccountId
        ImagePermissions:
          $ref: '#/components/schemas/UpdateImagePermissionsRequest_ImagePermissions'
      required:
      - ImagePermissions
      - Name
      - SharedAccountId
      title: UpdateImagePermissionsRequest
      type: object
    UpdateStackResult:
      example:
        Stack:
          Description: ""
          CreatedTime: ""
          StorageConnectors: ""
          EmbedHostDomains: ""
          UserSettings: ""
          RedirectURL: ""
          StreamingExperienceSettings:
            PreferredProtocol: ""
          Name: ""
          FeedbackURL: ""
          ApplicationSettings:
            SettingsGroup: ""
            Enabled: ""
            S3BucketName: ""
          StackErrors: ""
          DisplayName: ""
          Arn: ""
          AccessEndpoints: ""
      properties:
        Stack:
          $ref: '#/components/schemas/CreateStackResult_Stack'
      title: UpdateStackResult
      type: object
    UpdateStackRequest:
      example:
        Description: ""
        StorageConnectors: ""
        DeleteStorageConnectors: ""
        EmbedHostDomains: ""
        AttributesToDelete: ""
        UserSettings: ""
        RedirectURL: ""
        StreamingExperienceSettings:
          PreferredProtocol: ""
        Name: ""
        FeedbackURL: ""
        ApplicationSettings:
          SettingsGroup: ""
          Enabled: ""
        DisplayName: ""
        AccessEndpoints: ""
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The stack name to display.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description to display.
          title: Description
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: Name
        StorageConnectors:
          allOf:
          - $ref: '#/components/schemas/StorageConnectorList'
          - description: The storage connectors to enable.
          title: StorageConnectors
        DeleteStorageConnectors:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: Deletes the storage connectors currently enabled for the
              stack.
          title: DeleteStorageConnectors
        RedirectURL:
          allOf:
          - $ref: '#/components/schemas/RedirectURL'
          - description: The URL that users are redirected to after their streaming
              session ends.
          title: RedirectURL
        FeedbackURL:
          allOf:
          - $ref: '#/components/schemas/FeedbackURL'
          - description: "The URL that users are redirected to after they choose the\
              \ Send Feedback link. If no URL is specified, no Send Feedback link\
              \ is displayed."
          title: FeedbackURL
        AttributesToDelete:
          allOf:
          - $ref: '#/components/schemas/StackAttributes'
          - description: The stack attributes to delete.
          title: AttributesToDelete
        UserSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettingList'
          - description: "The actions that are enabled or disabled for users during\
              \ their streaming sessions. By default, these actions are enabled."
          title: UserSettings
        ApplicationSettings:
          $ref: '#/components/schemas/CreateStackRequest_ApplicationSettings'
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Users of the stack can connect to AppStream 2.0 only through the specified
              endpoints.
          title: AccessEndpoints
        EmbedHostDomains:
          allOf:
          - $ref: '#/components/schemas/EmbedHostDomains'
          - description: 'The domains where AppStream 2.0 streaming sessions can be
              embedded in an iframe. You must approve the domains that you want to
              host embedded AppStream 2.0 streaming sessions. '
          title: EmbedHostDomains
        StreamingExperienceSettings:
          $ref: '#/components/schemas/CreateStackRequest_StreamingExperienceSettings'
      required:
      - Name
      title: UpdateStackRequest
      type: object
    AccessEndpointType:
      enum:
      - STREAMING
      title: AccessEndpointType
      type: string
    String:
      minLength: 1
      title: String
      type: string
    AccessEndpoint:
      description: "Describes an interface VPC endpoint (interface endpoint) that\
        \ lets you create a private connection between the virtual private cloud (VPC)\
        \ that you specify and AppStream 2.0. When you specify an interface endpoint\
        \ for a stack, users of the stack can connect to AppStream 2.0 only through\
        \ that endpoint. When you specify an interface endpoint for an image builder,\
        \ administrators can connect to the image builder only through that endpoint."
      properties:
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointType'
          - description: The type of interface endpoint.
          title: EndpointType
        VpceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier (ID) of the VPC in which the interface endpoint
              is used.
          title: VpceId
      required:
      - EndpointType
      title: AccessEndpoint
      type: object
    AccessEndpointList:
      items:
        $ref: '#/components/schemas/AccessEndpoint'
      maxItems: 4
      minItems: 1
      type: array
    AccountName:
      format: password
      minLength: 1
      type: string
    AccountPassword:
      format: password
      maxLength: 127
      minLength: 1
      type: string
    Action:
      enum:
      - CLIPBOARD_COPY_FROM_LOCAL_DEVICE
      - CLIPBOARD_COPY_TO_LOCAL_DEVICE
      - FILE_UPLOAD
      - FILE_DOWNLOAD
      - PRINTING_TO_LOCAL_DEVICE
      - DOMAIN_PASSWORD_SIGNIN
      - DOMAIN_SMART_CARD_SIGNIN
      title: Action
      type: string
    Arn:
      pattern: "^arn:aws(?:\\-cn|\\-iso\\-b|\\-iso|\\-us\\-gov)?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.\\\
        \\-]{0,1023}$"
      title: Arn
      type: string
    S3Location:
      description: Describes the S3 location.
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The S3 bucket of the S3 object.
          title: S3Bucket
        S3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: "<p>The S3 key of the S3 object.</p> <p>This is required\
              \ when used for the following:</p> <ul> <li> <p>IconS3Location (Actions:\
              \ CreateApplication and UpdateApplication)</p> </li> <li> <p>SessionScriptS3Location\
              \ (Actions: CreateFleet and UpdateFleet)</p> </li> <li> <p>ScriptDetails\
              \ (Actions: CreateAppBlock)</p> </li> <li> <p>SourceS3Location when\
              \ creating an app block with <code>CUSTOM</code> PackagingType (Actions:\
              \ CreateAppBlock)</p> </li> <li> <p>SourceS3Location when creating an\
              \ app block with <code>APPSTREAM2</code> PackagingType, and using an\
              \ existing application package (VHD file). In this case, <code>S3Key</code>\
              \ refers to the VHD file. If a new application package is required,\
              \ then <code>S3Key</code> is not required. (Actions: CreateAppBlock)</p>\
              \ </li> </ul>"
          title: S3Key
      required:
      - S3Bucket
      title: S3Location
      type: object
    ScriptDetails:
      description: Describes the details of the script.
      properties:
        ScriptS3Location:
          $ref: '#/components/schemas/ScriptDetails_ScriptS3Location'
        ExecutablePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The run path for the script.
          title: ExecutablePath
        ExecutableParameters:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The runtime parameters passed to the run path for the script.
          title: ExecutableParameters
        TimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The run timeout, in seconds, for the script."
          title: TimeoutInSeconds
      required:
      - ExecutablePath
      - ScriptS3Location
      - TimeoutInSeconds
      title: ScriptDetails
      type: object
    Timestamp:
      format: date-time
      type: string
    PackagingType:
      enum:
      - CUSTOM
      - APPSTREAM2
      title: PackagingType
      type: string
    AppBlockState:
      enum:
      - INACTIVE
      - ACTIVE
      title: AppBlockState
      type: string
    ErrorDetailsList:
      items:
        $ref: '#/components/schemas/ErrorDetails'
      type: array
    AppBlock:
      description: <p>Describes an app block.</p> <p>App blocks are an Amazon AppStream
        2.0 resource that stores the details about the virtual hard disk in an S3
        bucket. It also stores the setup script with details about how to mount the
        virtual hard disk. The virtual hard disk includes the application binaries
        and other files necessary to launch your applications. Multiple applications
        can be assigned to a single app block.</p> <p>This is only supported for Elastic
        fleets.</p>
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the app block.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: Arn
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the app block.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name of the app block.
          title: DisplayName
        SourceS3Location:
          $ref: '#/components/schemas/CreateAppBlockRequest_SourceS3Location'
        SetupScriptDetails:
          $ref: '#/components/schemas/AppBlock_SetupScriptDetails'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The created time of the app block.
          title: CreatedTime
        PostSetupScriptDetails:
          $ref: '#/components/schemas/AppBlock_PostSetupScriptDetails'
        PackagingType:
          allOf:
          - $ref: '#/components/schemas/PackagingType'
          - description: The packaging type of the app block.
          title: PackagingType
        State:
          allOf:
          - $ref: '#/components/schemas/AppBlockState'
          - description: "<p>The state of the app block.</p> <p>An app block with\
              \ AppStream 2.0 packaging will be in the <code>INACTIVE</code> state\
              \ if no application package (VHD) is assigned to it. After an application\
              \ package (VHD) is created by an app block builder for an app block,\
              \ it becomes <code>ACTIVE</code>. </p> <p>Custom app blocks are always\
              \ in the <code>ACTIVE</code> state and no action is required to use\
              \ them.</p>"
          title: State
        AppBlockErrors:
          allOf:
          - $ref: '#/components/schemas/ErrorDetailsList'
          - description: The errors of the app block.
          title: AppBlockErrors
      required:
      - Arn
      - Name
      title: AppBlock
      type: object
    AppBlockBuilderPlatformType:
      enum:
      - WINDOWS_SERVER_2019
      title: AppBlockBuilderPlatformType
      type: string
    BooleanObject:
      type: boolean
    VpcConfig:
      description: Describes VPC configuration information for fleets and image builders.
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          - description: The identifiers of the subnets to which a network interface
              is attached from the fleet instance or image builder instance. Fleet
              instances use one or more subnets. Image builder instances use one subnet.
          title: SubnetIds
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          - description: The identifiers of the security groups for the fleet or image
              builder.
          title: SecurityGroupIds
      title: VpcConfig
      type: object
    AppBlockBuilderState:
      enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      title: AppBlockBuilderState
      type: string
    ResourceErrors:
      items:
        $ref: '#/components/schemas/ResourceError'
      type: array
    AppBlockBuilderStateChangeReason:
      description: Describes the reason why the last app block builder state change
        occurred.
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderStateChangeReasonCode'
          - description: The state change reason code.
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state change reason message.
          title: Message
      title: AppBlockBuilderStateChangeReason
      type: object
    AppBlockBuilder:
      description: Describes an app block builder.
      example:
        Description: ""
        CreatedTime: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        EnableDefaultInternetAccess: ""
        Name: ""
        AppBlockBuilderErrors: ""
        State: ""
        DisplayName: ""
        IamRoleArn: ""
        Arn: ""
        InstanceType: ""
        StateChangeReason:
          Message: ""
          Code: ""
        AccessEndpoints: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block builder.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the app block builder.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The display name of the app block builder.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the app block builder.
          title: Description
        Platform:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderPlatformType'
          - description: <p>The platform of the app block builder.</p> <p> <code>WINDOWS_SERVER_2019</code>
              is the only valid value.</p>
          title: Platform
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The instance type of the app block builder.
          title: InstanceType
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Indicates whether default internet access is enabled for
              the app block builder.
          title: EnableDefaultInternetAccess
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the IAM role that is applied to the app block
              builder.
          title: IamRoleArn
        VpcConfig:
          $ref: '#/components/schemas/AppBlockBuilder_VpcConfig'
        State:
          allOf:
          - $ref: '#/components/schemas/AppBlockBuilderState'
          - description: The state of the app block builder.
          title: State
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The creation time of the app block builder.
          title: CreatedTime
        AppBlockBuilderErrors:
          allOf:
          - $ref: '#/components/schemas/ResourceErrors'
          - description: The app block builder errors.
          title: AppBlockBuilderErrors
        StateChangeReason:
          $ref: '#/components/schemas/AppBlockBuilder_StateChangeReason'
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of interface VPC endpoint (interface endpoint) objects.
              Administrators can connect to the app block builder only through the
              specified endpoints.
          title: AccessEndpoints
      required:
      - Arn
      - InstanceType
      - Name
      - Platform
      - State
      - VpcConfig
      title: AppBlockBuilder
      type: object
    Name:
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$"
      type: string
    AppBlockBuilderAppBlockAssociation:
      description: Describes an association between an app block builder and app block.
      properties:
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the app block.
          title: AppBlockArn
        AppBlockBuilderName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the app block builder.
          title: AppBlockBuilderName
      required:
      - AppBlockArn
      - AppBlockBuilderName
      title: AppBlockBuilderAppBlockAssociation
      type: object
    AppBlockBuilderAppBlockAssociationsList:
      items:
        $ref: '#/components/schemas/AppBlockBuilderAppBlockAssociation'
      maxItems: 25
      minItems: 1
      type: array
    AppBlockBuilderAttribute:
      enum:
      - IAM_ROLE_ARN
      - ACCESS_ENDPOINTS
      - VPC_CONFIGURATION_SECURITY_GROUP_IDS
      title: AppBlockBuilderAttribute
      type: string
    AppBlockBuilderAttributes:
      items:
        $ref: '#/components/schemas/AppBlockBuilderAttribute'
      type: array
    AppBlockBuilderList:
      items:
        $ref: '#/components/schemas/AppBlockBuilder'
      type: array
    AppBlockBuilderStateChangeReasonCode:
      enum:
      - INTERNAL_ERROR
      title: AppBlockBuilderStateChangeReasonCode
      type: string
    AppBlocks:
      items:
        $ref: '#/components/schemas/AppBlock'
      type: array
    AppVisibility:
      enum:
      - ALL
      - ASSOCIATED
      title: AppVisibility
      type: string
    Boolean:
      type: boolean
    Metadata:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    Platforms:
      items:
        $ref: '#/components/schemas/PlatformType'
      maxItems: 4
      type: array
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Application:
      description: Describes an application in the application catalog.
      example:
        WorkingDirectory: ""
        Platforms: ""
        Description: ""
        CreatedTime: ""
        Metadata: ""
        Enabled: ""
        Name: ""
        IconURL: ""
        AppBlockArn: ""
        InstanceFamilies: ""
        DisplayName: ""
        LaunchPath: ""
        Arn: ""
        LaunchParameters: ""
        IconS3Location:
          S3Bucket: ""
          S3Key: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the application.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The application name to display.
          title: DisplayName
        IconURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL for the application icon. This URL might be time-limited.
          title: IconURL
        LaunchPath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The path to the application executable in the instance.
          title: LaunchPath
        LaunchParameters:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The arguments that are passed to the application at launch.
          title: LaunchParameters
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If there is a problem, the application can be disabled after\
              \ image creation."
          title: Enabled
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: Additional attributes that describe the application.
          title: Metadata
        WorkingDirectory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The working directory for the application.
          title: WorkingDirectory
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the application.
          title: Description
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the application.
          title: Arn
        AppBlockArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The app block ARN of the application.
          title: AppBlockArn
        IconS3Location:
          $ref: '#/components/schemas/Application_IconS3Location'
        Platforms:
          allOf:
          - $ref: '#/components/schemas/Platforms'
          - description: The platforms on which the application can run.
          title: Platforms
        InstanceFamilies:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The instance families for the application.
          title: InstanceFamilies
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the application was created within the
              app block.
          title: CreatedTime
      title: Application
      type: object
    ApplicationAttribute:
      enum:
      - LAUNCH_PARAMETERS
      - WORKING_DIRECTORY
      title: ApplicationAttribute
      type: string
    ApplicationAttributes:
      items:
        $ref: '#/components/schemas/ApplicationAttribute'
      maxItems: 2
      type: array
    ApplicationFleetAssociation:
      description: Describes the application fleet association.
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet associated with the application.
          title: FleetName
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the application associated with the fleet.
          title: ApplicationArn
      required:
      - ApplicationArn
      - FleetName
      title: ApplicationFleetAssociation
      type: object
    ApplicationFleetAssociationList:
      items:
        $ref: '#/components/schemas/ApplicationFleetAssociation'
      maxItems: 25
      minItems: 1
      type: array
    SettingsGroup:
      maxLength: 100
      type: string
    ApplicationSettings:
      description: The persistent application settings for users of a stack.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: 'Enables or disables persistent application settings for
              users during their streaming sessions. '
          title: Enabled
        SettingsGroup:
          allOf:
          - $ref: '#/components/schemas/SettingsGroup'
          - description: 'The path prefix for the S3 bucket where users’ persistent
              application settings are stored. You can allow the same persistent application
              settings to be used across multiple stacks by specifying the same settings
              group for each stack. '
          title: SettingsGroup
      required:
      - Enabled
      title: ApplicationSettings
      type: object
    ApplicationSettingsResponse:
      description: Describes the persistent application settings for users of a stack.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether persistent application settings are enabled
              for users during their streaming sessions.
          title: Enabled
        SettingsGroup:
          allOf:
          - $ref: '#/components/schemas/SettingsGroup'
          - description: The path prefix for the S3 bucket where users’ persistent
              application settings are stored.
          title: SettingsGroup
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The S3 bucket where users’ persistent application settings\
              \ are stored. When persistent application settings are enabled for the\
              \ first time for an account in an AWS Region, an S3 bucket is created.\
              \ The bucket is unique to the AWS account and the Region. "
          title: S3BucketName
      title: ApplicationSettingsResponse
      type: object
    Applications:
      items:
        $ref: '#/components/schemas/Application'
      type: array
    AppstreamAgentVersion:
      maxLength: 100
      minLength: 1
      type: string
    ArnList:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    AuthenticationType:
      enum:
      - API
      - SAML
      - USERPOOL
      - AWS_AD
      title: AuthenticationType
      type: string
    AwsAccountId:
      pattern: ^\d+$
      title: AwsAccountId
      type: string
    AwsAccountIdList:
      items:
        $ref: '#/components/schemas/AwsAccountId'
      maxItems: 5
      minItems: 1
      type: array
    UserStackAssociationList:
      items:
        $ref: '#/components/schemas/UserStackAssociation'
      maxItems: 25
      minItems: 1
      type: array
    UserStackAssociationErrorList:
      items:
        $ref: '#/components/schemas/UserStackAssociationError'
      type: array
    CertificateBasedAuthStatus:
      enum:
      - DISABLED
      - ENABLED
      - ENABLED_NO_DIRECTORY_LOGIN_FALLBACK
      title: CertificateBasedAuthStatus
      type: string
    CertificateBasedAuthProperties:
      description: "The certificate-based authentication properties used to authenticate\
        \ SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined\
        \ streaming instances. Fallback is turned on by default when certificate-based\
        \ authentication is <b>Enabled</b> . Fallback allows users to log in using\
        \ their AD domain password if certificate-based authentication is unsuccessful,\
        \ or to unlock a desktop lock screen. <b>Enabled_no_directory_login_fallback</b>\
        \ enables certificate-based authentication, but does not allow users to log\
        \ in using their AD domain password. Users will be disconnected to re-authenticate\
        \ using certificates."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/CertificateBasedAuthStatus'
          - description: The status of the certificate-based authentication properties.
          title: Status
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the AWS Certificate Manager Private CA resource.
          title: CertificateAuthorityArn
      title: CertificateBasedAuthProperties
      type: object
    Integer:
      type: integer
    ComputeCapacity:
      description: Describes the capacity for a fleet.
      properties:
        DesiredInstances:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The desired number of streaming instances.
          title: DesiredInstances
      required:
      - DesiredInstances
      title: ComputeCapacity
      type: object
    ComputeCapacityStatus:
      description: Describes the capacity status for a fleet.
      properties:
        Desired:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The desired number of streaming instances.
          title: Desired
        Running:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of simultaneous streaming instances that
              are running.
          title: Running
        InUse:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of instances in use for streaming.
          title: InUse
        Available:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of currently available instances that can be used
              to stream sessions.
          title: Available
      required:
      - Desired
      title: ComputeCapacityStatus
      type: object
    RegionName:
      maxLength: 32
      minLength: 1
      type: string
    Description:
      maxLength: 256
      type: string
    DisplayName:
      maxLength: 100
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    Long:
      type: integer
    DirectoryName:
      title: DirectoryName
      type: string
    OrganizationalUnitDistinguishedNamesList:
      items:
        $ref: '#/components/schemas/OrganizationalUnitDistinguishedName'
      type: array
    ServiceAccountCredentials:
      description: Describes the credentials for the service account used by the fleet
        or image builder to connect to the directory.
      properties:
        AccountName:
          allOf:
          - $ref: '#/components/schemas/AccountName'
          - description: "The user name of the account. This account must have the\
              \ following privileges: create computer objects, join computers to the\
              \ domain, and change/reset the password on descendant computer objects\
              \ for the organizational units specified."
          title: AccountName
        AccountPassword:
          allOf:
          - $ref: '#/components/schemas/AccountPassword'
          - description: The password for the account.
          title: AccountPassword
      required:
      - AccountName
      - AccountPassword
      title: ServiceAccountCredentials
      type: object
    DirectoryConfig:
      description: Describes the configuration information required to join fleets
        and image builders to Microsoft Active Directory domains.
      properties:
        DirectoryName:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: "The fully qualified name of the directory (for example,\
              \ corp.example.com)."
          title: DirectoryName
        OrganizationalUnitDistinguishedNames:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitDistinguishedNamesList'
          - description: The distinguished names of the organizational units for computer
              accounts.
          title: OrganizationalUnitDistinguishedNames
        ServiceAccountCredentials:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_ServiceAccountCredentials'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the directory configuration was created.
          title: CreatedTime
        CertificateBasedAuthProperties:
          $ref: '#/components/schemas/CreateDirectoryConfigRequest_CertificateBasedAuthProperties'
      required:
      - DirectoryName
      title: DirectoryConfig
      type: object
    EntitlementAttributeList:
      items:
        $ref: '#/components/schemas/EntitlementAttribute'
      minItems: 1
      type: array
    Entitlement:
      description: "Specifies an entitlement. Entitlements control access to specific\
        \ applications within a stack, based on user attributes. Entitlements apply\
        \ to SAML 2.0 federated user identities. Amazon AppStream 2.0 user pool and\
        \ streaming URL users are entitled to all applications in a stack. Entitlements\
        \ don't apply to the desktop stream view application, or to applications managed\
        \ by a dynamic app provider using the Dynamic Application Framework."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the entitlement.
          title: Name
        StackName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the stack with which the entitlement is associated.
          title: StackName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the entitlement.
          title: Description
        AppVisibility:
          allOf:
          - $ref: '#/components/schemas/AppVisibility'
          - description: Specifies whether all or selected apps are entitled.
          title: AppVisibility
        Attributes:
          allOf:
          - $ref: '#/components/schemas/EntitlementAttributeList'
          - description: The attributes of the entitlement.
          title: Attributes
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the entitlement was created.
          title: CreatedTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the entitlement was last modified.
          title: LastModifiedTime
      required:
      - AppVisibility
      - Attributes
      - Name
      - StackName
      title: Entitlement
      type: object
    FleetType:
      enum:
      - ALWAYS_ON
      - ON_DEMAND
      - ELASTIC
      title: FleetType
      type: string
    DomainJoinInfo:
      description: Describes the configuration information required to join fleets
        and image builders to Microsoft Active Directory domains.
      properties:
        DirectoryName:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          - description: "The fully qualified name of the directory (for example,\
              \ corp.example.com)."
          title: DirectoryName
        OrganizationalUnitDistinguishedName:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitDistinguishedName'
          - description: The distinguished name of the organizational unit for computer
              accounts.
          title: OrganizationalUnitDistinguishedName
      title: DomainJoinInfo
      type: object
    StreamView:
      enum:
      - APP
      - DESKTOP
      title: StreamView
      type: string
    PlatformType:
      enum:
      - WINDOWS
      - WINDOWS_SERVER_2016
      - WINDOWS_SERVER_2019
      - AMAZON_LINUX2
      title: PlatformType
      type: string
    UsbDeviceFilterStrings:
      items:
        $ref: '#/components/schemas/UsbDeviceFilterString'
      type: array
    Fleet:
      description: Describes a fleet.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the fleet.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The fleet name to display.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description to display.
          title: Description
        ImageName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image used to create the fleet.
          title: ImageName
        ImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The ARN for the public, private, or shared image."
          title: ImageArn
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type to use when launching fleet instances.
              The following instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p>
              </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p>
              </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p>
              </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p>
              </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p>
              </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p>
              </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p>
              </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p>
              </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p>
              </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p>
              </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p>
              </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p>
              </li> </ul>
          title: InstanceType
        FleetType:
          allOf:
          - $ref: '#/components/schemas/FleetType'
          - description: "<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides\
              \ users with instant-on access to their apps. You are charged for all\
              \ running instances in your fleet, even if no users are streaming apps.</p>\
              \ </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications\
              \ after they connect, which takes one to two minutes. You are charged\
              \ for instance streaming when users are connected and a small hourly\
              \ fee for instances that are not streaming apps.</p> </dd> </dl>"
          title: FleetType
        ComputeCapacityStatus:
          $ref: '#/components/schemas/Fleet_ComputeCapacityStatus'
        MaxUserDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The maximum amount of time that a streaming session can\
              \ remain active, in seconds. If users are still connected to a streaming\
              \ instance five minutes before this limit is reached, they are prompted\
              \ to save any open documents before being disconnected. After this time\
              \ elapses, the instance is terminated and replaced by a new instance.\
              \ </p> <p>Specify a value between 600 and 360000.</p>"
          title: MaxUserDurationInSeconds
        DisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that a streaming session remains active\
              \ after users disconnect. If they try to reconnect to the streaming\
              \ session after a disconnection or network interruption within this\
              \ time interval, they are connected to their previous session. Otherwise,\
              \ they are connected to a new session with a new streaming instance.</p>\
              \ <p>Specify a value between 60 and 360000.</p>"
          title: DisconnectTimeoutInSeconds
        State:
          allOf:
          - $ref: '#/components/schemas/FleetState'
          - description: The current state for the fleet.
          title: State
        VpcConfig:
          $ref: '#/components/schemas/Fleet_VpcConfig'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the fleet was created.
          title: CreatedTime
        FleetErrors:
          allOf:
          - $ref: '#/components/schemas/FleetErrors'
          - description: The fleet errors.
          title: FleetErrors
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Indicates whether default internet access is enabled for
              the fleet.
          title: EnableDefaultInternetAccess
        DomainJoinInfo:
          $ref: '#/components/schemas/UpdateFleetRequest_DomainJoinInfo'
        IdleDisconnectTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The amount of time that users can be idle (inactive)\
              \ before they are disconnected from their streaming session and the\
              \ <code>DisconnectTimeoutInSeconds</code> time interval begins. Users\
              \ are notified before they are disconnected due to inactivity. If users\
              \ try to reconnect to the streaming session before the time interval\
              \ specified in <code>DisconnectTimeoutInSeconds</code> elapses, they\
              \ are connected to their previous session. Users are considered idle\
              \ when they stop providing keyboard or mouse input during their streaming\
              \ session. File uploads and downloads, audio in, audio out, and pixels\
              \ changing do not qualify as user activity. If users continue to be\
              \ idle after the time interval in <code>IdleDisconnectTimeoutInSeconds</code>\
              \ elapses, they are disconnected.</p> <p>To prevent users from being\
              \ disconnected due to inactivity, specify a value of 0. Otherwise, specify\
              \ a value between 60 and 3600. The default value is 0.</p> <note> <p>If\
              \ you enable this feature, we recommend that you specify a value that\
              \ corresponds exactly to a whole number of minutes (for example, 60,\
              \ 120, and 180). If you don't do this, the value is rounded to the nearest\
              \ minute. For example, if you specify a value of 70, users are disconnected\
              \ after 1 minute of inactivity. If you specify a value that is at the\
              \ midpoint between two different minutes, the value is rounded up. For\
              \ example, if you specify a value of 90, users are disconnected after\
              \ 2 minutes of inactivity. </p> </note>"
          title: IdleDisconnectTimeoutInSeconds
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the IAM role that is applied to the fleet.\
              \ To assume a role, the fleet instance calls the AWS Security Token\
              \ Service (STS) <code>AssumeRole</code> API operation and passes the\
              \ ARN of the role to use. The operation creates a new session with temporary\
              \ credentials. AppStream 2.0 retrieves the temporary credentials and\
              \ creates the <b>appstream_machine_role</b> credential profile on the\
              \ instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        StreamView:
          allOf:
          - $ref: '#/components/schemas/StreamView'
          - description: "<p>The AppStream 2.0 view that is displayed to your users\
              \ when they stream from the fleet. When <code>APP</code> is specified,\
              \ only the windows of applications opened by users display. When <code>DESKTOP</code>\
              \ is specified, the standard desktop that is provided by the operating\
              \ system displays.</p> <p>The default value is <code>APP</code>.</p>"
          title: StreamView
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: The platform of the fleet.
          title: Platform
        MaxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of concurrent sessions for the fleet.
          title: MaxConcurrentSessions
        UsbDeviceFilterStrings:
          allOf:
          - $ref: '#/components/schemas/UsbDeviceFilterStrings'
          - description: The USB device filter strings associated with the fleet.
          title: UsbDeviceFilterStrings
        SessionScriptS3Location:
          $ref: '#/components/schemas/CreateFleetRequest_SessionScriptS3Location'
      required:
      - Arn
      - ComputeCapacityStatus
      - InstanceType
      - Name
      - State
      title: Fleet
      type: object
    ImageBuilder:
      description: 'Describes a virtual machine that is used to create an image. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image builder.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN for the image builder.
          title: Arn
        ImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the image from which this builder was created.
          title: ImageArn
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The image builder name to display.
          title: DisplayName
        VpcConfig:
          $ref: '#/components/schemas/ImageBuilder_VpcConfig'
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance type for the image builder. The following
              instance types are available:</p> <ul> <li> <p>stream.standard.small</p>
              </li> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p>
              </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p>
              </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p>
              </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p>
              </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p>
              </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p>
              </li> <li> <p>stream.memory.z1d.large</p> </li> <li> <p>stream.memory.z1d.xlarge</p>
              </li> <li> <p>stream.memory.z1d.2xlarge</p> </li> <li> <p>stream.memory.z1d.3xlarge</p>
              </li> <li> <p>stream.memory.z1d.6xlarge</p> </li> <li> <p>stream.memory.z1d.12xlarge</p>
              </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p>
              </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p>
              </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.2xlarge</p> </li> <li> <p>stream.graphics.g4dn.4xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.8xlarge</p> </li> <li> <p>stream.graphics.g4dn.12xlarge</p>
              </li> <li> <p>stream.graphics.g4dn.16xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p>
              </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p>
              </li> </ul>
          title: InstanceType
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: The operating system platform of the image builder.
          title: Platform
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The ARN of the IAM role that is applied to the image\
              \ builder. To assume a role, the image builder calls the AWS Security\
              \ Token Service (STS) <code>AssumeRole</code> API operation and passes\
              \ the ARN of the role to use. The operation creates a new session with\
              \ temporary credentials. AppStream 2.0 retrieves the temporary credentials\
              \ and creates the <b>appstream_machine_role</b> credential profile on\
              \ the instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html\"\
              >Using an IAM Role to Grant Permissions to Applications and Scripts\
              \ Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon\
              \ AppStream 2.0 Administration Guide</i>.</p>"
          title: IamRoleArn
        State:
          allOf:
          - $ref: '#/components/schemas/ImageBuilderState'
          - description: The state of the image builder.
          title: State
        StateChangeReason:
          $ref: '#/components/schemas/ImageBuilder_StateChangeReason'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp when the image builder was created.
          title: CreatedTime
        EnableDefaultInternetAccess:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Enables or disables default internet access for the image
              builder.
          title: EnableDefaultInternetAccess
        DomainJoinInfo:
          $ref: '#/components/schemas/CreateImageBuilderRequest_DomainJoinInfo'
        NetworkAccessConfiguration:
          $ref: '#/components/schemas/NetworkAccessConfiguration'
        ImageBuilderErrors:
          allOf:
          - $ref: '#/components/schemas/ResourceErrors'
          - description: The image builder errors.
          title: ImageBuilderErrors
        AppstreamAgentVersion:
          allOf:
          - $ref: '#/components/schemas/AppstreamAgentVersion'
          - description: 'The version of the AppStream 2.0 agent that is currently
              being used by the image builder. '
          title: AppstreamAgentVersion
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: The list of virtual private cloud (VPC) interface endpoint
              objects. Administrators can connect to the image builder only through
              the specified endpoints.
          title: AccessEndpoints
      required:
      - Name
      title: ImageBuilder
      type: object
    StorageConnectorList:
      description: The storage connectors.
      items:
        $ref: '#/components/schemas/StorageConnector'
      type: array
    RedirectURL:
      maxLength: 1000
      type: string
    FeedbackURL:
      maxLength: 1000
      type: string
    UserSettingList:
      items:
        $ref: '#/components/schemas/UserSetting'
      minItems: 1
      type: array
    EmbedHostDomains:
      items:
        $ref: '#/components/schemas/EmbedHostDomain'
      maxItems: 20
      minItems: 1
      type: array
    StreamingExperienceSettings:
      description: "The streaming protocol you want your stack to prefer. This can\
        \ be UDP or TCP. Currently, UDP is only supported in the Windows native client."
      properties:
        PreferredProtocol:
          allOf:
          - $ref: '#/components/schemas/PreferredProtocol'
          - description: The preferred protocol that you want to use while streaming
              your application.
          title: PreferredProtocol
      title: StreamingExperienceSettings
      type: object
    Stack:
      description: Describes a stack.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the stack.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description to display.
          title: Description
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The stack name to display.
          title: DisplayName
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the stack was created.
          title: CreatedTime
        StorageConnectors:
          allOf:
          - $ref: '#/components/schemas/StorageConnectorList'
          - description: The storage connectors to enable.
          title: StorageConnectors
        RedirectURL:
          allOf:
          - $ref: '#/components/schemas/RedirectURL'
          - description: The URL that users are redirected to after their streaming
              session ends.
          title: RedirectURL
        FeedbackURL:
          allOf:
          - $ref: '#/components/schemas/FeedbackURL'
          - description: "The URL that users are redirected to after they click the\
              \ Send Feedback link. If no URL is specified, no Send Feedback link\
              \ is displayed."
          title: FeedbackURL
        StackErrors:
          allOf:
          - $ref: '#/components/schemas/StackErrors'
          - description: The errors for the stack.
          title: StackErrors
        UserSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettingList'
          - description: The actions that are enabled or disabled for users during
              their streaming sessions. By default these actions are enabled.
          title: UserSettings
        ApplicationSettings:
          $ref: '#/components/schemas/Stack_ApplicationSettings'
        AccessEndpoints:
          allOf:
          - $ref: '#/components/schemas/AccessEndpointList'
          - description: 'The list of virtual private cloud (VPC) interface endpoint
              objects. Users of the stack can connect to AppStream 2.0 only through
              the specified endpoints. '
          title: AccessEndpoints
        EmbedHostDomains:
          allOf:
          - $ref: '#/components/schemas/EmbedHostDomains'
          - description: The domains where AppStream 2.0 streaming sessions can be
              embedded in an iframe. You must approve the domains that you want to
              host embedded AppStream 2.0 streaming sessions.
          title: EmbedHostDomains
        StreamingExperienceSettings:
          $ref: '#/components/schemas/CreateStackRequest_StreamingExperienceSettings'
      required:
      - Name
      title: Stack
      type: object
    StreamingUrlUserId:
      maxLength: 32
      minLength: 2
      pattern: "[\\w+=,.@-]*"
      type: string
    Image:
      description: Describes an image.
      example:
        Description: ""
        CreatedTime: ""
        Platform: ""
        Applications: ""
        PublicBaseImageReleasedDate: ""
        ImageBuilderSupported: ""
        AppstreamAgentVersion: ""
        ImageBuilderName: ""
        Name: ""
        ImagePermissions:
          allowFleet: ""
          allowImageBuilder: ""
        ImageErrors: ""
        State: ""
        DisplayName: ""
        Visibility: ""
        Arn: ""
        BaseImageArn: ""
        StateChangeReason:
          Message: ""
          Code: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the image.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the image.
          title: Arn
        BaseImageArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the image from which this image was created.
          title: BaseImageArn
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The image name to display.
          title: DisplayName
        State:
          allOf:
          - $ref: '#/components/schemas/ImageState'
          - description: "The image starts in the <code>PENDING</code> state. If image\
              \ creation succeeds, the state is <code>AVAILABLE</code>. If image creation\
              \ fails, the state is <code>FAILED</code>."
          title: State
        Visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityType'
          - description: Indicates whether the image is public or private.
          title: Visibility
        ImageBuilderSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an image builder can be launched from this
              image.
          title: ImageBuilderSupported
        ImageBuilderName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the image builder that was used to create the\
              \ private image. If the image is shared, this value is null."
          title: ImageBuilderName
        Platform:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: The operating system platform of the image.
          title: Platform
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description to display.
          title: Description
        StateChangeReason:
          $ref: '#/components/schemas/Image_StateChangeReason'
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          - description: The applications associated with the image.
          title: Applications
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the image was created.
          title: CreatedTime
        PublicBaseImageReleasedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The release date of the public base image. For private images,\
              \ this date is the release date of the base image from which the image\
              \ was created."
          title: PublicBaseImageReleasedDate
        AppstreamAgentVersion:
          allOf:
          - $ref: '#/components/schemas/AppstreamAgentVersion'
          - description: 'The version of the AppStream 2.0 agent to use for instances
              that are launched from this image. '
          title: AppstreamAgentVersion
        ImagePermissions:
          $ref: '#/components/schemas/Image_ImagePermissions'
        ImageErrors:
          allOf:
          - $ref: '#/components/schemas/ResourceErrors'
          - description: Describes the errors that are returned when a new image can't
              be created.
          title: ImageErrors
      required:
      - Name
      title: Image
      type: object
    UsageReportSchedule:
      enum:
      - DAILY
      title: UsageReportSchedule
      type: string
    Username:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      type: string
    MessageAction:
      enum:
      - SUPPRESS
      - RESEND
      title: MessageAction
      type: string
    UserAttributeValue:
      format: password
      maxLength: 2048
      pattern: "^[A-Za-z0-9_\\-\\s]+$"
      type: string
    DirectoryNameList:
      items:
        $ref: '#/components/schemas/DirectoryName'
      type: array
    DirectoryConfigList:
      items:
        $ref: '#/components/schemas/DirectoryConfig'
      type: array
    EntitlementList:
      items:
        $ref: '#/components/schemas/Entitlement'
      type: array
    FleetList:
      description: The fleets.
      items:
        $ref: '#/components/schemas/Fleet'
      type: array
    ImageBuilderList:
      items:
        $ref: '#/components/schemas/ImageBuilder'
      type: array
    MaxResults:
      maximum: 500
      minimum: 0
      type: integer
    SharedImagePermissionsList:
      items:
        $ref: '#/components/schemas/SharedImagePermissions'
      type: array
    DescribeImagesMaxResults:
      maximum: 25
      minimum: 0
      type: integer
    VisibilityType:
      enum:
      - PUBLIC
      - PRIVATE
      - SHARED
      title: VisibilityType
      type: string
    ImageList:
      items:
        $ref: '#/components/schemas/Image'
      type: array
    UserId:
      maxLength: 128
      minLength: 2
      type: string
    SessionList:
      description: List of sessions.
      items:
        $ref: '#/components/schemas/Session'
      type: array
    StackList:
      description: The stacks.
      items:
        $ref: '#/components/schemas/Stack'
      type: array
    UsageReportSubscriptionList:
      items:
        $ref: '#/components/schemas/UsageReportSubscription'
      type: array
    UserList:
      items:
        $ref: '#/components/schemas/User'
      type: array
    Domain:
      description: GSuite domain for GDrive integration.
      maxLength: 64
      minLength: 1
      title: Domain
      type: string
    OrganizationalUnitDistinguishedName:
      maxLength: 2000
      title: OrganizationalUnitDistinguishedName
      type: string
    DomainList:
      items:
        $ref: '#/components/schemas/Domain'
      maxItems: 50
      type: array
    EmbedHostDomain:
      description: "Specifies a valid domain that can embed AppStream. Valid examples\
        \ include: [\"testorigin.tt--com\", \"testingorigin.com.us\", \"test.com.us\"\
        ] Invalid examples include: [\"test,com\", \".com\", \"h*llo.com\". \"\"]"
      maxLength: 128
      pattern: "(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]"
      title: EmbedHostDomain
      type: string
    EntitledApplication:
      description: The application associated to an entitlement. Access is controlled
        based on user attributes.
      properties:
        ApplicationIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the application.
          title: ApplicationIdentifier
      required:
      - ApplicationIdentifier
      title: EntitledApplication
      type: object
    EntitledApplicationList:
      items:
        $ref: '#/components/schemas/EntitledApplication'
      type: array
    EntitlementAttribute:
      description: An attribute associated with an entitlement. Application entitlements
        work by matching a supported SAML 2.0 attribute name to a value when a user
        identity federates to an Amazon AppStream 2.0 SAML application.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>A supported AWS IAM SAML <code>PrincipalTag</code> attribute
              that is matched to the associated value when a user identity federates
              into an Amazon AppStream 2.0 SAML application.</p> <p>The following
              are valid values:</p> <ul> <li> <p>roles</p> </li> <li> <p>department
              </p> </li> <li> <p>organization </p> </li> <li> <p>groups </p> </li>
              <li> <p>title </p> </li> <li> <p>costCenter </p> </li> <li> <p>userType</p>
              </li> </ul> <p> </p>
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'A value that is matched to a supported SAML attribute name
              when a user identity federates into an Amazon AppStream 2.0 SAML application. '
          title: Value
      required:
      - Name
      - Value
      title: EntitlementAttribute
      type: object
    ErrorDetails:
      description: The error details.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: ErrorMessage
      title: ErrorDetails
      type: object
    FleetState:
      enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      title: FleetState
      type: string
    FleetErrors:
      items:
        $ref: '#/components/schemas/FleetError'
      type: array
    FleetAttribute:
      description: The fleet attribute.
      enum:
      - VPC_CONFIGURATION
      - VPC_CONFIGURATION_SECURITY_GROUP_IDS
      - DOMAIN_JOIN_INFO
      - IAM_ROLE_ARN
      - USB_DEVICE_FILTER_STRINGS
      - SESSION_SCRIPT_S3_LOCATION
      title: FleetAttribute
      type: string
    FleetAttributes:
      description: The fleet attributes.
      items:
        $ref: '#/components/schemas/FleetAttribute'
      type: array
    FleetErrorCode:
      enum:
      - IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION
      - NETWORK_INTERFACE_LIMIT_EXCEEDED
      - INTERNAL_SERVICE_ERROR
      - IAM_SERVICE_ROLE_IS_MISSING
      - MACHINE_ROLE_IS_MISSING
      - STS_DISABLED_IN_REGION
      - SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION
      - SUBNET_NOT_FOUND
      - IMAGE_NOT_FOUND
      - INVALID_SUBNET_CONFIGURATION
      - SECURITY_GROUPS_NOT_FOUND
      - IGW_NOT_ATTACHED
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION
      - FLEET_STOPPED
      - FLEET_INSTANCE_PROVISIONING_FAILURE
      - DOMAIN_JOIN_ERROR_FILE_NOT_FOUND
      - DOMAIN_JOIN_ERROR_ACCESS_DENIED
      - DOMAIN_JOIN_ERROR_LOGON_FAILURE
      - DOMAIN_JOIN_ERROR_INVALID_PARAMETER
      - DOMAIN_JOIN_ERROR_MORE_DATA
      - DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN
      - DOMAIN_JOIN_ERROR_NOT_SUPPORTED
      - DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME
      - DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED
      - DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED
      - DOMAIN_JOIN_NERR_PASSWORD_EXPIRED
      - DOMAIN_JOIN_INTERNAL_SERVICE_ERROR
      title: FleetErrorCode
      type: string
    FleetError:
      description: Describes a fleet error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/FleetErrorCode'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: ErrorMessage
      title: FleetError
      type: object
    ImageState:
      enum:
      - PENDING
      - AVAILABLE
      - FAILED
      - COPYING
      - DELETING
      - CREATING
      - IMPORTING
      title: ImageState
      type: string
    ImageStateChangeReason:
      description: Describes the reason why the last image state change occurred.
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/ImageStateChangeReasonCode'
          - description: The state change reason code.
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state change reason message.
          title: Message
      title: ImageStateChangeReason
      type: object
    ImagePermissions:
      description: 'Describes the permissions for an image. '
      properties:
        allowFleet:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Indicates whether the image can be used for a fleet.
          title: allowFleet
        allowImageBuilder:
          allOf:
          - $ref: '#/components/schemas/BooleanObject'
          - description: Indicates whether the image can be used for an image builder.
          title: allowImageBuilder
      title: ImagePermissions
      type: object
    ImageBuilderState:
      enum:
      - PENDING
      - UPDATING_AGENT
      - RUNNING
      - STOPPING
      - STOPPED
      - REBOOTING
      - SNAPSHOTTING
      - DELETING
      - FAILED
      - UPDATING
      - PENDING_QUALIFICATION
      title: ImageBuilderState
      type: string
    ImageBuilderStateChangeReason:
      description: Describes the reason why the last image builder state change occurred.
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/ImageBuilderStateChangeReasonCode'
          - description: The state change reason code.
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state change reason message.
          title: Message
      title: ImageBuilderStateChangeReason
      type: object
    NetworkAccessConfiguration:
      description: Describes the network details of the fleet or image builder instance.
      example:
        EniId: ""
        EniPrivateIpAddress: ""
      properties:
        EniPrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The private IP address of the elastic network interface that
              is attached to instances in your VPC.
          title: EniPrivateIpAddress
        EniId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The resource identifier of the elastic network interface
              that is attached to instances in your VPC. All network interfaces have
              the eni-xxxxxxxx resource identifier.
          title: EniId
      title: NetworkAccessConfiguration
      type: object
    ImageBuilderStateChangeReasonCode:
      enum:
      - INTERNAL_ERROR
      - IMAGE_UNAVAILABLE
      title: ImageBuilderStateChangeReasonCode
      type: string
    ImageStateChangeReasonCode:
      enum:
      - INTERNAL_ERROR
      - IMAGE_BUILDER_NOT_AVAILABLE
      - IMAGE_COPY_FAILURE
      title: ImageStateChangeReasonCode
      type: string
    UsageReportExecutionErrorCode:
      enum:
      - RESOURCE_NOT_FOUND
      - ACCESS_DENIED
      - INTERNAL_SERVICE_ERROR
      title: UsageReportExecutionErrorCode
      type: string
    LastReportGenerationExecutionError:
      description: Describes the error that is returned when a usage report can't
        be generated.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/UsageReportExecutionErrorCode'
          - description: The error code for the error that is returned when a usage
              report can't be generated.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message for the error that is returned when a usage
              report can't be generated.
          title: ErrorMessage
      title: LastReportGenerationExecutionError
      type: object
    LastReportGenerationExecutionErrors:
      items:
        $ref: '#/components/schemas/LastReportGenerationExecutionError'
      type: array
    Permission:
      enum:
      - ENABLED
      - DISABLED
      title: Permission
      type: string
    PreferredProtocol:
      enum:
      - TCP
      - UDP
      title: PreferredProtocol
      type: string
    ResourceError:
      description: Describes a resource error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/FleetErrorCode'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: ErrorMessage
        ErrorTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the error occurred.
          title: ErrorTimestamp
      title: ResourceError
      type: object
    ResourceIdentifier:
      description: The ARN of the resource.
      maxLength: 2048
      minLength: 1
      type: string
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "^[0-9a-z\\.\\-]*(?<!\\.)$"
      type: string
    S3Key:
      maxLength: 1024
      minLength: 1
      type: string
    SecurityGroupIdList:
      description: The security group identifiers.
      items:
        $ref: '#/components/schemas/String'
      maxItems: 5
      type: array
    SessionState:
      description: Possible values for the state of a streaming session.
      enum:
      - ACTIVE
      - PENDING
      - EXPIRED
      title: SessionState
      type: string
    SessionConnectionState:
      enum:
      - CONNECTED
      - NOT_CONNECTED
      title: SessionConnectionState
      type: string
    Session:
      description: Describes a streaming session.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the streaming session.
          title: Id
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The identifier of the user for whom the session was created.
          title: UserId
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack for the streaming session.
          title: StackName
        FleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet for the streaming session.
          title: FleetName
        State:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          - description: The current state of the streaming session.
          title: State
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/SessionConnectionState'
          - description: Specifies whether a user is connected to the streaming session.
          title: ConnectionState
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when a streaming instance is dedicated for the user.
          title: StartTime
        MaxExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time when the streaming session is set to expire. This\
              \ time is based on the <code>MaxUserDurationinSeconds</code> value,\
              \ which determines the maximum length of time that a streaming session\
              \ can run. A streaming session might end earlier than the time specified\
              \ in <code>SessionMaxExpirationTime</code>, when the <code>DisconnectTimeOutInSeconds</code>\
              \ elapses or the user chooses to end his or her session. If the <code>DisconnectTimeOutInSeconds</code>\
              \ elapses, or the user chooses to end his or her session, the streaming\
              \ instance is terminated and the streaming session ends."
          title: MaxExpirationTime
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication method. The user is authenticated using
              a streaming URL (<code>API</code>) or SAML 2.0 federation (<code>SAML</code>).
          title: AuthenticationType
        NetworkAccessConfiguration:
          $ref: '#/components/schemas/Session_NetworkAccessConfiguration'
      required:
      - FleetName
      - Id
      - StackName
      - State
      - UserId
      title: Session
      type: object
    SharedImagePermissions:
      description: Describes the permissions that are available to the specified AWS
        account for a shared image.
      properties:
        sharedAccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          - description: The 12-digit identifier of the AWS account with which the
              image is shared.
          title: sharedAccountId
        imagePermissions:
          $ref: '#/components/schemas/SharedImagePermissions_imagePermissions'
      required:
      - imagePermissions
      - sharedAccountId
      title: SharedImagePermissions
      type: object
    StackErrors:
      description: The stack errors.
      items:
        $ref: '#/components/schemas/StackError'
      type: array
    StackAttribute:
      enum:
      - STORAGE_CONNECTORS
      - STORAGE_CONNECTOR_HOMEFOLDERS
      - STORAGE_CONNECTOR_GOOGLE_DRIVE
      - STORAGE_CONNECTOR_ONE_DRIVE
      - REDIRECT_URL
      - FEEDBACK_URL
      - THEME_NAME
      - USER_SETTINGS
      - EMBED_HOST_DOMAINS
      - IAM_ROLE_ARN
      - ACCESS_ENDPOINTS
      - STREAMING_EXPERIENCE_SETTINGS
      title: StackAttribute
      type: string
    StackAttributes:
      items:
        $ref: '#/components/schemas/StackAttribute'
      type: array
    StackErrorCode:
      enum:
      - STORAGE_CONNECTOR_ERROR
      - INTERNAL_SERVICE_ERROR
      title: StackErrorCode
      type: string
    StackError:
      description: Describes a stack error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/StackErrorCode'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: ErrorMessage
      title: StackError
      type: object
    StorageConnectorType:
      description: The type of storage connector.
      enum:
      - HOMEFOLDERS
      - GOOGLE_DRIVE
      - ONE_DRIVE
      title: StorageConnectorType
      type: string
    StorageConnector:
      description: Describes a connector that enables persistent storage for users.
      properties:
        ConnectorType:
          allOf:
          - $ref: '#/components/schemas/StorageConnectorType'
          - description: The type of storage connector.
          title: ConnectorType
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: The ARN of the storage connector.
          title: ResourceIdentifier
        Domains:
          allOf:
          - $ref: '#/components/schemas/DomainList'
          - description: The names of the domains for the account.
          title: Domains
      required:
      - ConnectorType
      title: StorageConnector
      type: object
    SubnetIdList:
      description: The subnet identifiers.
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(^(?!aws:).[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagValue
      type: string
    UsageReportSubscription:
      description: Describes information about the usage report subscription.
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon S3 bucket where generated reports are stored.</p>\
              \ <p>If you enabled on-instance session scripts and Amazon S3 logging\
              \ for your session script configuration, AppStream 2.0 created an S3\
              \ bucket to store the script output. The bucket is unique to your account\
              \ and Region. When you enable usage reporting in this case, AppStream\
              \ 2.0 uses the same bucket to store your usage reports. If you haven't\
              \ already enabled on-instance session scripts, when you enable usage\
              \ reports, AppStream 2.0 creates a new S3 bucket.</p>"
          title: S3BucketName
        Schedule:
          allOf:
          - $ref: '#/components/schemas/UsageReportSchedule'
          - description: The schedule for generating usage reports.
          title: Schedule
        LastGeneratedReportDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the last usage report was generated.
          title: LastGeneratedReportDate
        SubscriptionErrors:
          allOf:
          - $ref: '#/components/schemas/LastReportGenerationExecutionErrors'
          - description: The errors that were returned if usage reports couldn't be
              generated.
          title: SubscriptionErrors
      title: UsageReportSubscription
      type: object
    UsbDeviceFilterString:
      maxLength: 100
      minLength: 0
      pattern: "^((\\w*)\\s*(\\w*)\\s*\\,\\s*(\\w*)\\s*\\,\\s*\\*?(\\w*)\\s*\\,\\\
        s*\\*?(\\w*)\\s*\\,\\s*\\*?\\d*\\s*\\,\\s*\\*?\\d*\\s*\\,\\s*[0-1]\\s*\\,\\\
        s*[0-1]\\s*)$"
      title: UsbDeviceFilterString
      type: string
    User:
      description: Describes a user in the user pool.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the user.
          title: Arn
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: <p>The email address of the user.</p> <note> <p>Users' email
              addresses are case-sensitive.</p> </note>
          title: UserName
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the user in the user pool is enabled.
          title: Enabled
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The status of the user in the user pool. The status can
              be one of the following:</p> <ul> <li> <p>UNCONFIRMED – The user is
              created but not confirmed.</p> </li> <li> <p>CONFIRMED – The user is
              confirmed.</p> </li> <li> <p>ARCHIVED – The user is no longer active.</p>
              </li> <li> <p>COMPROMISED – The user is disabled because of a potential
              security threat.</p> </li> <li> <p>UNKNOWN – The user status is not
              known.</p> </li> </ul>
          title: Status
        FirstName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValue'
          - description: "The first name, or given name, of the user."
          title: FirstName
        LastName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValue'
          - description: "The last name, or surname, of the user."
          title: LastName
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the user was created in the user pool.
          title: CreatedTime
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user.
          title: AuthenticationType
      required:
      - AuthenticationType
      title: User
      type: object
    UserSetting:
      description: Describes an action and whether the action is enabled or disabled
        for users during their streaming sessions.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: The action that is enabled or disabled.
          title: Action
        Permission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          - description: Indicates whether the action is enabled or disabled.
          title: Permission
      required:
      - Action
      - Permission
      title: UserSetting
      type: object
    UserStackAssociation:
      description: Describes a user in the user pool and the associated stack.
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the stack that is associated with the user.
          title: StackName
        UserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: <p>The email address of the user who is associated with the
              stack.</p> <note> <p>Users' email addresses are case-sensitive.</p>
              </note>
          title: UserName
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: The authentication type for the user.
          title: AuthenticationType
        SendEmailNotification:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether a welcome email is sent to a user after
              the user is created in the user pool.
          title: SendEmailNotification
      required:
      - AuthenticationType
      - StackName
      - UserName
      title: UserStackAssociation
      type: object
    UserStackAssociationErrorCode:
      enum:
      - STACK_NOT_FOUND
      - USER_NAME_NOT_FOUND
      - DIRECTORY_NOT_FOUND
      - INTERNAL_ERROR
      title: UserStackAssociationErrorCode
      type: string
    UserStackAssociationError:
      description: 'Describes the error that is returned when a user can’t be associated
        with or disassociated from a stack. '
      properties:
        UserStackAssociation:
          $ref: '#/components/schemas/UserStackAssociationError_UserStackAssociation'
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/UserStackAssociationErrorCode'
          - description: The error code for the error that is returned when a user
              can’t be associated with or disassociated from a stack.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message for the error that is returned when a user
              can’t be associated with or disassociated from a stack.
          title: ErrorMessage
      title: UserStackAssociationError
      type: object
    AssociateAppBlockBuilderAppBlockResult_AppBlockBuilderAppBlockAssociation:
      allOf:
      - $ref: '#/components/schemas/AppBlockBuilderAppBlockAssociation'
      - description: The list of app block builders associated with app blocks.
      example:
        AppBlockArn: ""
        AppBlockBuilderName: ""
      title: AssociateAppBlockBuilderAppBlockResult_AppBlockBuilderAppBlockAssociation
    AssociateApplicationFleetResult_ApplicationFleetAssociation:
      allOf:
      - $ref: '#/components/schemas/ApplicationFleetAssociation'
      - description: "If fleet name is specified, this returns the list of applications\
          \ that are associated to it. If application ARN is specified, this returns\
          \ the list of fleets to which it is associated."
      example:
        FleetName: ""
        ApplicationArn: ""
      title: AssociateApplicationFleetResult_ApplicationFleetAssociation
    CreateAppBlockResult_AppBlock:
      allOf:
      - $ref: '#/components/schemas/AppBlock'
      - description: The app block.
      example:
        SetupScriptDetails:
          TimeoutInSeconds: ""
          ScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          ExecutablePath: ""
          ExecutableParameters: ""
        Description: ""
        CreatedTime: ""
        AppBlockErrors: ""
        State: ""
        PostSetupScriptDetails:
          TimeoutInSeconds: ""
          ScriptS3Location:
            S3Bucket: ""
            S3Key: ""
          ExecutablePath: ""
          ExecutableParameters: ""
        DisplayName: ""
        Arn: ""
        SourceS3Location:
          S3Bucket: ""
          S3Key: ""
        PackagingType: ""
        Name: ""
      title: CreateAppBlockResult_AppBlock
    CreateAppBlockRequest_SourceS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The source S3 location of the app block.
      example:
        S3Bucket: ""
        S3Key: ""
      title: CreateAppBlockRequest_SourceS3Location
    CreateAppBlockRequest_SetupScriptDetails:
      allOf:
      - $ref: '#/components/schemas/ScriptDetails'
      - description: The setup script details of the app block. This must be provided
          for the <code>CUSTOM</code> PackagingType.
      example:
        TimeoutInSeconds: ""
        ScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        ExecutablePath: ""
        ExecutableParameters: ""
      title: CreateAppBlockRequest_SetupScriptDetails
    CreateAppBlockRequest_PostSetupScriptDetails:
      allOf:
      - $ref: '#/components/schemas/ScriptDetails'
      - description: The post setup script details of the app block. This can only
          be provided for the <code>APPSTREAM2</code> PackagingType.
      example:
        TimeoutInSeconds: ""
        ScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        ExecutablePath: ""
        ExecutableParameters: ""
      title: CreateAppBlockRequest_PostSetupScriptDetails
    CreateAppBlockBuilderRequest_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: <p>The VPC configuration for the app block builder.</p> <p>App
          block builders require that you specify at least two subnets in different
          availability zones.</p>
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: CreateAppBlockBuilderRequest_VpcConfig
    CreateApplicationRequest_IconS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The location in S3 of the application icon.
      example:
        S3Bucket: ""
        S3Key: ""
      title: CreateApplicationRequest_IconS3Location
    CreateDirectoryConfigResult_DirectoryConfig:
      allOf:
      - $ref: '#/components/schemas/DirectoryConfig'
      - description: Information about the directory configuration.
      example:
        CreatedTime: ""
        OrganizationalUnitDistinguishedNames: ""
        ServiceAccountCredentials:
          AccountName: ""
          AccountPassword: ""
        CertificateBasedAuthProperties:
          Status: ""
          CertificateAuthorityArn: ""
        DirectoryName: ""
      title: CreateDirectoryConfigResult_DirectoryConfig
    CreateDirectoryConfigRequest_ServiceAccountCredentials:
      allOf:
      - $ref: '#/components/schemas/ServiceAccountCredentials'
      - description: The credentials for the service account used by the fleet or
          image builder to connect to the directory.
      example:
        AccountName: ""
        AccountPassword: ""
      title: CreateDirectoryConfigRequest_ServiceAccountCredentials
    CreateDirectoryConfigRequest_CertificateBasedAuthProperties:
      allOf:
      - $ref: '#/components/schemas/CertificateBasedAuthProperties'
      - description: "The certificate-based authentication properties used to authenticate\
          \ SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined\
          \ streaming instances. Fallback is turned on by default when certificate-based\
          \ authentication is <b>Enabled</b> . Fallback allows users to log in using\
          \ their AD domain password if certificate-based authentication is unsuccessful,\
          \ or to unlock a desktop lock screen. <b>Enabled_no_directory_login_fallback</b>\
          \ enables certificate-based authentication, but does not allow users to\
          \ log in using their AD domain password. Users will be disconnected to re-authenticate\
          \ using certificates."
      example:
        Status: ""
        CertificateAuthorityArn: ""
      title: CreateDirectoryConfigRequest_CertificateBasedAuthProperties
    CreateEntitlementResult_Entitlement:
      allOf:
      - $ref: '#/components/schemas/Entitlement'
      - description: The entitlement.
      example:
        AppVisibility: ""
        Description: ""
        CreatedTime: ""
        Attributes: ""
        LastModifiedTime: ""
        StackName: ""
        Name: ""
      title: CreateEntitlementResult_Entitlement
    CreateFleetResult_Fleet:
      allOf:
      - $ref: '#/components/schemas/Fleet'
      - description: Information about the fleet.
      example:
        Description: ""
        CreatedTime: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        FleetType: ""
        EnableDefaultInternetAccess: ""
        DomainJoinInfo:
          OrganizationalUnitDistinguishedName: ""
          DirectoryName: ""
        SessionScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        Name: ""
        ImageName: ""
        FleetErrors: ""
        MaxUserDurationInSeconds: ""
        IdleDisconnectTimeoutInSeconds: ""
        UsbDeviceFilterStrings: ""
        DisconnectTimeoutInSeconds: ""
        ComputeCapacityStatus:
          Running: ""
          InUse: ""
          Available: ""
          Desired: ""
        State: ""
        DisplayName: ""
        StreamView: ""
        IamRoleArn: ""
        Arn: ""
        InstanceType: ""
        MaxConcurrentSessions: ""
        ImageArn: ""
      title: CreateFleetResult_Fleet
    CreateFleetRequest_ComputeCapacity:
      allOf:
      - $ref: '#/components/schemas/ComputeCapacity'
      - description: "The desired capacity for the fleet. This is not allowed for\
          \ Elastic fleets. For Elastic fleets, specify MaxConcurrentSessions instead."
      example:
        DesiredInstances: ""
      title: CreateFleetRequest_ComputeCapacity
    CreateFleetRequest_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: "The VPC configuration for the fleet. This is required for Elastic\
          \ fleets, but not required for other fleet types. Elastic fleets require\
          \ that you specify at least two subnets in different availability zones."
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: CreateFleetRequest_VpcConfig
    CreateFleetRequest_DomainJoinInfo:
      allOf:
      - $ref: '#/components/schemas/DomainJoinInfo'
      - description: 'The name of the directory and organizational unit (OU) to use
          to join the fleet to a Microsoft Active Directory domain. This is not allowed
          for Elastic fleets. '
      example:
        OrganizationalUnitDistinguishedName: ""
        DirectoryName: ""
      title: CreateFleetRequest_DomainJoinInfo
    CreateFleetRequest_SessionScriptS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The S3 location of the session scripts configuration zip file.
          This only applies to Elastic fleets.
      example:
        S3Bucket: ""
        S3Key: ""
      title: CreateFleetRequest_SessionScriptS3Location
    CreateImageBuilderResult_ImageBuilder:
      allOf:
      - $ref: '#/components/schemas/ImageBuilder'
      - description: Information about the image builder.
      example:
        Description: ""
        CreatedTime: ""
        Platform: ""
        VpcConfig:
          SubnetIds: ""
          SecurityGroupIds: ""
        ImageBuilderErrors: ""
        EnableDefaultInternetAccess: ""
        DomainJoinInfo:
          OrganizationalUnitDistinguishedName: ""
          DirectoryName: ""
        AppstreamAgentVersion: ""
        Name: ""
        NetworkAccessConfiguration:
          EniId: ""
          EniPrivateIpAddress: ""
        State: ""
        DisplayName: ""
        IamRoleArn: ""
        Arn: ""
        InstanceType: ""
        StateChangeReason:
          Message: ""
          Code: ""
        ImageArn: ""
        AccessEndpoints: ""
      title: CreateImageBuilderResult_ImageBuilder
    CreateImageBuilderRequest_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: The VPC configuration for the image builder. You can specify
          only one subnet.
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: CreateImageBuilderRequest_VpcConfig
    CreateImageBuilderRequest_DomainJoinInfo:
      allOf:
      - $ref: '#/components/schemas/DomainJoinInfo'
      - description: 'The name of the directory and organizational unit (OU) to use
          to join the image builder to a Microsoft Active Directory domain. '
      example:
        OrganizationalUnitDistinguishedName: ""
        DirectoryName: ""
      title: CreateImageBuilderRequest_DomainJoinInfo
    CreateStackResult_Stack:
      allOf:
      - $ref: '#/components/schemas/Stack'
      - description: Information about the stack.
      example:
        Description: ""
        CreatedTime: ""
        StorageConnectors: ""
        EmbedHostDomains: ""
        UserSettings: ""
        RedirectURL: ""
        StreamingExperienceSettings:
          PreferredProtocol: ""
        Name: ""
        FeedbackURL: ""
        ApplicationSettings:
          SettingsGroup: ""
          Enabled: ""
          S3BucketName: ""
        StackErrors: ""
        DisplayName: ""
        Arn: ""
        AccessEndpoints: ""
      title: CreateStackResult_Stack
    CreateStackRequest_ApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - description: "The persistent application settings for users of a stack. When\
          \ these settings are enabled, changes that users make to applications and\
          \ Windows settings are automatically saved after each session and applied\
          \ to the next session."
      example:
        SettingsGroup: ""
        Enabled: ""
      title: CreateStackRequest_ApplicationSettings
    CreateStackRequest_StreamingExperienceSettings:
      allOf:
      - $ref: '#/components/schemas/StreamingExperienceSettings'
      - description: "The streaming protocol you want your stack to prefer. This can\
          \ be UDP or TCP. Currently, UDP is only supported in the Windows native\
          \ client."
      example:
        PreferredProtocol: ""
      title: CreateStackRequest_StreamingExperienceSettings
    DeleteImageResult_Image:
      allOf:
      - $ref: '#/components/schemas/Image'
      - description: Information about the image.
      example:
        Description: ""
        CreatedTime: ""
        Platform: ""
        Applications: ""
        PublicBaseImageReleasedDate: ""
        ImageBuilderSupported: ""
        AppstreamAgentVersion: ""
        ImageBuilderName: ""
        Name: ""
        ImagePermissions:
          allowFleet: ""
          allowImageBuilder: ""
        ImageErrors: ""
        State: ""
        DisplayName: ""
        Visibility: ""
        Arn: ""
        BaseImageArn: ""
        StateChangeReason:
          Message: ""
          Code: ""
      title: DeleteImageResult_Image
    UpdateApplicationRequest_IconS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The icon S3 location of the application.
      example:
        S3Bucket: ""
        S3Key: ""
      title: UpdateApplicationRequest_IconS3Location
    UpdateDirectoryConfigResult_DirectoryConfig:
      allOf:
      - $ref: '#/components/schemas/DirectoryConfig'
      - description: Information about the Directory Config object.
      example:
        CreatedTime: ""
        OrganizationalUnitDistinguishedNames: ""
        ServiceAccountCredentials:
          AccountName: ""
          AccountPassword: ""
        CertificateBasedAuthProperties:
          Status: ""
          CertificateAuthorityArn: ""
        DirectoryName: ""
      title: UpdateDirectoryConfigResult_DirectoryConfig
    UpdateFleetRequest_ComputeCapacity:
      allOf:
      - $ref: '#/components/schemas/ComputeCapacity'
      - description: The desired capacity for the fleet. This is not allowed for Elastic
          fleets.
      example:
        DesiredInstances: ""
      title: UpdateFleetRequest_ComputeCapacity
    UpdateFleetRequest_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: "The VPC configuration for the fleet. This is required for Elastic\
          \ fleets, but not required for other fleet types. Elastic fleets require\
          \ that you specify at least two subnets in different availability zones. "
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: UpdateFleetRequest_VpcConfig
    UpdateFleetRequest_DomainJoinInfo:
      allOf:
      - $ref: '#/components/schemas/DomainJoinInfo'
      - description: 'The name of the directory and organizational unit (OU) to use
          to join the fleet to a Microsoft Active Directory domain. '
      example:
        OrganizationalUnitDistinguishedName: ""
        DirectoryName: ""
      title: UpdateFleetRequest_DomainJoinInfo
    UpdateFleetRequest_SessionScriptS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: 'The S3 location of the session scripts configuration zip file.
          This only applies to Elastic fleets. '
      example:
        S3Bucket: ""
        S3Key: ""
      title: UpdateFleetRequest_SessionScriptS3Location
    UpdateImagePermissionsRequest_ImagePermissions:
      allOf:
      - $ref: '#/components/schemas/ImagePermissions'
      - description: The permissions for the image.
      example:
        allowFleet: ""
        allowImageBuilder: ""
      title: UpdateImagePermissionsRequest_ImagePermissions
    ScriptDetails_ScriptS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The S3 object location for the script.
      example:
        S3Bucket: ""
        S3Key: ""
      title: ScriptDetails_ScriptS3Location
    AppBlock_SetupScriptDetails:
      allOf:
      - $ref: '#/components/schemas/ScriptDetails'
      - description: <p>The setup script details of the app block.</p> <p>This only
          applies to app blocks with PackagingType <code>CUSTOM</code>.</p>
      example:
        TimeoutInSeconds: ""
        ScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        ExecutablePath: ""
        ExecutableParameters: ""
      title: AppBlock_SetupScriptDetails
    AppBlock_PostSetupScriptDetails:
      allOf:
      - $ref: '#/components/schemas/ScriptDetails'
      - description: <p>The post setup script details of the app block.</p> <p>This
          only applies to app blocks with PackagingType <code>APPSTREAM2</code>.</p>
      example:
        TimeoutInSeconds: ""
        ScriptS3Location:
          S3Bucket: ""
          S3Key: ""
        ExecutablePath: ""
        ExecutableParameters: ""
      title: AppBlock_PostSetupScriptDetails
    AppBlockBuilder_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: The VPC configuration for the app block builder.
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: AppBlockBuilder_VpcConfig
    AppBlockBuilder_StateChangeReason:
      allOf:
      - $ref: '#/components/schemas/AppBlockBuilderStateChangeReason'
      - description: The state change reason.
      example:
        Message: ""
        Code: ""
      title: AppBlockBuilder_StateChangeReason
    Application_IconS3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The S3 location of the application icon.
      example:
        S3Bucket: ""
        S3Key: ""
      title: Application_IconS3Location
    Fleet_ComputeCapacityStatus:
      allOf:
      - $ref: '#/components/schemas/ComputeCapacityStatus'
      - description: The capacity status for the fleet.
      example:
        Running: ""
        InUse: ""
        Available: ""
        Desired: ""
      title: Fleet_ComputeCapacityStatus
    Fleet_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: The VPC configuration for the fleet.
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: Fleet_VpcConfig
    ImageBuilder_VpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: The VPC configuration of the image builder.
      example:
        SubnetIds: ""
        SecurityGroupIds: ""
      title: ImageBuilder_VpcConfig
    ImageBuilder_StateChangeReason:
      allOf:
      - $ref: '#/components/schemas/ImageBuilderStateChangeReason'
      - description: The reason why the last state change occurred.
      example:
        Message: ""
        Code: ""
      title: ImageBuilder_StateChangeReason
    Stack_ApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsResponse'
      - description: The persistent application settings for users of the stack.
      example:
        SettingsGroup: ""
        Enabled: ""
        S3BucketName: ""
      title: Stack_ApplicationSettings
    Image_StateChangeReason:
      allOf:
      - $ref: '#/components/schemas/ImageStateChangeReason'
      - description: The reason why the last state change occurred.
      example:
        Message: ""
        Code: ""
      title: Image_StateChangeReason
    Image_ImagePermissions:
      allOf:
      - $ref: '#/components/schemas/ImagePermissions'
      - description: The permissions to provide to the destination AWS account for
          the specified image.
      example:
        allowFleet: ""
        allowImageBuilder: ""
      title: Image_ImagePermissions
    Session_NetworkAccessConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkAccessConfiguration'
      - description: The network details for the streaming session.
      title: Session_NetworkAccessConfiguration
    SharedImagePermissions_imagePermissions:
      allOf:
      - $ref: '#/components/schemas/ImagePermissions'
      - description: Describes the permissions for a shared image.
      title: SharedImagePermissions_imagePermissions
    UserStackAssociationError_UserStackAssociation:
      allOf:
      - $ref: '#/components/schemas/UserStackAssociation'
      - description: Information about the user and associated stack.
      title: UserStackAssociationError_UserStackAssociation
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
