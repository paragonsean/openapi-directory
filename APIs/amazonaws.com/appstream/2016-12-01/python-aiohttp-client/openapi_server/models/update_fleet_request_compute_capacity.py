# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateFleetRequestComputeCapacity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, desired_instances: int=None):
        """UpdateFleetRequestComputeCapacity - a model defined in OpenAPI

        :param desired_instances: The desired_instances of this UpdateFleetRequestComputeCapacity.
        """
        self.openapi_types = {
            'desired_instances': int
        }

        self.attribute_map = {
            'desired_instances': 'DesiredInstances'
        }

        self._desired_instances = desired_instances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFleetRequestComputeCapacity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFleetRequest_ComputeCapacity of this UpdateFleetRequestComputeCapacity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def desired_instances(self):
        """Gets the desired_instances of this UpdateFleetRequestComputeCapacity.


        :return: The desired_instances of this UpdateFleetRequestComputeCapacity.
        :rtype: int
        """
        return self._desired_instances

    @desired_instances.setter
    def desired_instances(self, desired_instances):
        """Sets the desired_instances of this UpdateFleetRequestComputeCapacity.


        :param desired_instances: The desired_instances of this UpdateFleetRequestComputeCapacity.
        :type desired_instances: int
        """
        if desired_instances is None:
            raise ValueError("Invalid value for `desired_instances`, must not be `None`")

        self._desired_instances = desired_instances
