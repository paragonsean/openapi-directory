# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_stack_request_application_settings import CreateStackRequestApplicationSettings
from openapi_server.models.create_stack_request_streaming_experience_settings import CreateStackRequestStreamingExperienceSettings
from openapi_server import util


class UpdateStackRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, description: str=None, name: str=None, storage_connectors: List=None, delete_storage_connectors: bool=None, redirect_url: str=None, feedback_url: str=None, attributes_to_delete: List=None, user_settings: List=None, application_settings: CreateStackRequestApplicationSettings=None, access_endpoints: List=None, embed_host_domains: List=None, streaming_experience_settings: CreateStackRequestStreamingExperienceSettings=None):
        """UpdateStackRequest - a model defined in OpenAPI

        :param display_name: The display_name of this UpdateStackRequest.
        :param description: The description of this UpdateStackRequest.
        :param name: The name of this UpdateStackRequest.
        :param storage_connectors: The storage_connectors of this UpdateStackRequest.
        :param delete_storage_connectors: The delete_storage_connectors of this UpdateStackRequest.
        :param redirect_url: The redirect_url of this UpdateStackRequest.
        :param feedback_url: The feedback_url of this UpdateStackRequest.
        :param attributes_to_delete: The attributes_to_delete of this UpdateStackRequest.
        :param user_settings: The user_settings of this UpdateStackRequest.
        :param application_settings: The application_settings of this UpdateStackRequest.
        :param access_endpoints: The access_endpoints of this UpdateStackRequest.
        :param embed_host_domains: The embed_host_domains of this UpdateStackRequest.
        :param streaming_experience_settings: The streaming_experience_settings of this UpdateStackRequest.
        """
        self.openapi_types = {
            'display_name': str,
            'description': str,
            'name': str,
            'storage_connectors': List,
            'delete_storage_connectors': bool,
            'redirect_url': str,
            'feedback_url': str,
            'attributes_to_delete': List,
            'user_settings': List,
            'application_settings': CreateStackRequestApplicationSettings,
            'access_endpoints': List,
            'embed_host_domains': List,
            'streaming_experience_settings': CreateStackRequestStreamingExperienceSettings
        }

        self.attribute_map = {
            'display_name': 'DisplayName',
            'description': 'Description',
            'name': 'Name',
            'storage_connectors': 'StorageConnectors',
            'delete_storage_connectors': 'DeleteStorageConnectors',
            'redirect_url': 'RedirectURL',
            'feedback_url': 'FeedbackURL',
            'attributes_to_delete': 'AttributesToDelete',
            'user_settings': 'UserSettings',
            'application_settings': 'ApplicationSettings',
            'access_endpoints': 'AccessEndpoints',
            'embed_host_domains': 'EmbedHostDomains',
            'streaming_experience_settings': 'StreamingExperienceSettings'
        }

        self._display_name = display_name
        self._description = description
        self._name = name
        self._storage_connectors = storage_connectors
        self._delete_storage_connectors = delete_storage_connectors
        self._redirect_url = redirect_url
        self._feedback_url = feedback_url
        self._attributes_to_delete = attributes_to_delete
        self._user_settings = user_settings
        self._application_settings = application_settings
        self._access_endpoints = access_endpoints
        self._embed_host_domains = embed_host_domains
        self._streaming_experience_settings = streaming_experience_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateStackRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateStackRequest of this UpdateStackRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this UpdateStackRequest.


        :return: The display_name of this UpdateStackRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UpdateStackRequest.


        :param display_name: The display_name of this UpdateStackRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def description(self):
        """Gets the description of this UpdateStackRequest.


        :return: The description of this UpdateStackRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateStackRequest.


        :param description: The description of this UpdateStackRequest.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this UpdateStackRequest.


        :return: The name of this UpdateStackRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateStackRequest.


        :param name: The name of this UpdateStackRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def storage_connectors(self):
        """Gets the storage_connectors of this UpdateStackRequest.


        :return: The storage_connectors of this UpdateStackRequest.
        :rtype: List
        """
        return self._storage_connectors

    @storage_connectors.setter
    def storage_connectors(self, storage_connectors):
        """Sets the storage_connectors of this UpdateStackRequest.


        :param storage_connectors: The storage_connectors of this UpdateStackRequest.
        :type storage_connectors: List
        """

        self._storage_connectors = storage_connectors

    @property
    def delete_storage_connectors(self):
        """Gets the delete_storage_connectors of this UpdateStackRequest.


        :return: The delete_storage_connectors of this UpdateStackRequest.
        :rtype: bool
        """
        return self._delete_storage_connectors

    @delete_storage_connectors.setter
    def delete_storage_connectors(self, delete_storage_connectors):
        """Sets the delete_storage_connectors of this UpdateStackRequest.


        :param delete_storage_connectors: The delete_storage_connectors of this UpdateStackRequest.
        :type delete_storage_connectors: bool
        """

        self._delete_storage_connectors = delete_storage_connectors

    @property
    def redirect_url(self):
        """Gets the redirect_url of this UpdateStackRequest.


        :return: The redirect_url of this UpdateStackRequest.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this UpdateStackRequest.


        :param redirect_url: The redirect_url of this UpdateStackRequest.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url

    @property
    def feedback_url(self):
        """Gets the feedback_url of this UpdateStackRequest.


        :return: The feedback_url of this UpdateStackRequest.
        :rtype: str
        """
        return self._feedback_url

    @feedback_url.setter
    def feedback_url(self, feedback_url):
        """Sets the feedback_url of this UpdateStackRequest.


        :param feedback_url: The feedback_url of this UpdateStackRequest.
        :type feedback_url: str
        """

        self._feedback_url = feedback_url

    @property
    def attributes_to_delete(self):
        """Gets the attributes_to_delete of this UpdateStackRequest.


        :return: The attributes_to_delete of this UpdateStackRequest.
        :rtype: List
        """
        return self._attributes_to_delete

    @attributes_to_delete.setter
    def attributes_to_delete(self, attributes_to_delete):
        """Sets the attributes_to_delete of this UpdateStackRequest.


        :param attributes_to_delete: The attributes_to_delete of this UpdateStackRequest.
        :type attributes_to_delete: List
        """

        self._attributes_to_delete = attributes_to_delete

    @property
    def user_settings(self):
        """Gets the user_settings of this UpdateStackRequest.


        :return: The user_settings of this UpdateStackRequest.
        :rtype: List
        """
        return self._user_settings

    @user_settings.setter
    def user_settings(self, user_settings):
        """Sets the user_settings of this UpdateStackRequest.


        :param user_settings: The user_settings of this UpdateStackRequest.
        :type user_settings: List
        """

        self._user_settings = user_settings

    @property
    def application_settings(self):
        """Gets the application_settings of this UpdateStackRequest.


        :return: The application_settings of this UpdateStackRequest.
        :rtype: CreateStackRequestApplicationSettings
        """
        return self._application_settings

    @application_settings.setter
    def application_settings(self, application_settings):
        """Sets the application_settings of this UpdateStackRequest.


        :param application_settings: The application_settings of this UpdateStackRequest.
        :type application_settings: CreateStackRequestApplicationSettings
        """

        self._application_settings = application_settings

    @property
    def access_endpoints(self):
        """Gets the access_endpoints of this UpdateStackRequest.


        :return: The access_endpoints of this UpdateStackRequest.
        :rtype: List
        """
        return self._access_endpoints

    @access_endpoints.setter
    def access_endpoints(self, access_endpoints):
        """Sets the access_endpoints of this UpdateStackRequest.


        :param access_endpoints: The access_endpoints of this UpdateStackRequest.
        :type access_endpoints: List
        """

        self._access_endpoints = access_endpoints

    @property
    def embed_host_domains(self):
        """Gets the embed_host_domains of this UpdateStackRequest.


        :return: The embed_host_domains of this UpdateStackRequest.
        :rtype: List
        """
        return self._embed_host_domains

    @embed_host_domains.setter
    def embed_host_domains(self, embed_host_domains):
        """Sets the embed_host_domains of this UpdateStackRequest.


        :param embed_host_domains: The embed_host_domains of this UpdateStackRequest.
        :type embed_host_domains: List
        """

        self._embed_host_domains = embed_host_domains

    @property
    def streaming_experience_settings(self):
        """Gets the streaming_experience_settings of this UpdateStackRequest.


        :return: The streaming_experience_settings of this UpdateStackRequest.
        :rtype: CreateStackRequestStreamingExperienceSettings
        """
        return self._streaming_experience_settings

    @streaming_experience_settings.setter
    def streaming_experience_settings(self, streaming_experience_settings):
        """Sets the streaming_experience_settings of this UpdateStackRequest.


        :param streaming_experience_settings: The streaming_experience_settings of this UpdateStackRequest.
        :type streaming_experience_settings: CreateStackRequestStreamingExperienceSettings
        """

        self._streaming_experience_settings = streaming_experience_settings
