# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_icon_s3_location import ApplicationIconS3Location
from openapi_server import util


class Application(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, display_name: str=None, icon_url: str=None, launch_path: str=None, launch_parameters: str=None, enabled: bool=None, metadata: Dict=None, working_directory: str=None, description: str=None, arn: str=None, app_block_arn: str=None, icon_s3_location: ApplicationIconS3Location=None, platforms: List=None, instance_families: List=None, created_time: datetime=None):
        """Application - a model defined in OpenAPI

        :param name: The name of this Application.
        :param display_name: The display_name of this Application.
        :param icon_url: The icon_url of this Application.
        :param launch_path: The launch_path of this Application.
        :param launch_parameters: The launch_parameters of this Application.
        :param enabled: The enabled of this Application.
        :param metadata: The metadata of this Application.
        :param working_directory: The working_directory of this Application.
        :param description: The description of this Application.
        :param arn: The arn of this Application.
        :param app_block_arn: The app_block_arn of this Application.
        :param icon_s3_location: The icon_s3_location of this Application.
        :param platforms: The platforms of this Application.
        :param instance_families: The instance_families of this Application.
        :param created_time: The created_time of this Application.
        """
        self.openapi_types = {
            'name': str,
            'display_name': str,
            'icon_url': str,
            'launch_path': str,
            'launch_parameters': str,
            'enabled': bool,
            'metadata': Dict,
            'working_directory': str,
            'description': str,
            'arn': str,
            'app_block_arn': str,
            'icon_s3_location': ApplicationIconS3Location,
            'platforms': List,
            'instance_families': List,
            'created_time': datetime
        }

        self.attribute_map = {
            'name': 'Name',
            'display_name': 'DisplayName',
            'icon_url': 'IconURL',
            'launch_path': 'LaunchPath',
            'launch_parameters': 'LaunchParameters',
            'enabled': 'Enabled',
            'metadata': 'Metadata',
            'working_directory': 'WorkingDirectory',
            'description': 'Description',
            'arn': 'Arn',
            'app_block_arn': 'AppBlockArn',
            'icon_s3_location': 'IconS3Location',
            'platforms': 'Platforms',
            'instance_families': 'InstanceFamilies',
            'created_time': 'CreatedTime'
        }

        self._name = name
        self._display_name = display_name
        self._icon_url = icon_url
        self._launch_path = launch_path
        self._launch_parameters = launch_parameters
        self._enabled = enabled
        self._metadata = metadata
        self._working_directory = working_directory
        self._description = description
        self._arn = arn
        self._app_block_arn = app_block_arn
        self._icon_s3_location = icon_s3_location
        self._platforms = platforms
        self._instance_families = instance_families
        self._created_time = created_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Application':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Application of this Application.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Application.


        :return: The name of this Application.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Application.


        :param name: The name of this Application.
        :type name: str
        """

        self._name = name

    @property
    def display_name(self):
        """Gets the display_name of this Application.


        :return: The display_name of this Application.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Application.


        :param display_name: The display_name of this Application.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def icon_url(self):
        """Gets the icon_url of this Application.


        :return: The icon_url of this Application.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this Application.


        :param icon_url: The icon_url of this Application.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def launch_path(self):
        """Gets the launch_path of this Application.


        :return: The launch_path of this Application.
        :rtype: str
        """
        return self._launch_path

    @launch_path.setter
    def launch_path(self, launch_path):
        """Sets the launch_path of this Application.


        :param launch_path: The launch_path of this Application.
        :type launch_path: str
        """

        self._launch_path = launch_path

    @property
    def launch_parameters(self):
        """Gets the launch_parameters of this Application.


        :return: The launch_parameters of this Application.
        :rtype: str
        """
        return self._launch_parameters

    @launch_parameters.setter
    def launch_parameters(self, launch_parameters):
        """Sets the launch_parameters of this Application.


        :param launch_parameters: The launch_parameters of this Application.
        :type launch_parameters: str
        """

        self._launch_parameters = launch_parameters

    @property
    def enabled(self):
        """Gets the enabled of this Application.


        :return: The enabled of this Application.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this Application.


        :param enabled: The enabled of this Application.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def metadata(self):
        """Gets the metadata of this Application.


        :return: The metadata of this Application.
        :rtype: Dict
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Application.


        :param metadata: The metadata of this Application.
        :type metadata: Dict
        """

        self._metadata = metadata

    @property
    def working_directory(self):
        """Gets the working_directory of this Application.


        :return: The working_directory of this Application.
        :rtype: str
        """
        return self._working_directory

    @working_directory.setter
    def working_directory(self, working_directory):
        """Sets the working_directory of this Application.


        :param working_directory: The working_directory of this Application.
        :type working_directory: str
        """

        self._working_directory = working_directory

    @property
    def description(self):
        """Gets the description of this Application.


        :return: The description of this Application.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Application.


        :param description: The description of this Application.
        :type description: str
        """

        self._description = description

    @property
    def arn(self):
        """Gets the arn of this Application.


        :return: The arn of this Application.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Application.


        :param arn: The arn of this Application.
        :type arn: str
        """

        self._arn = arn

    @property
    def app_block_arn(self):
        """Gets the app_block_arn of this Application.


        :return: The app_block_arn of this Application.
        :rtype: str
        """
        return self._app_block_arn

    @app_block_arn.setter
    def app_block_arn(self, app_block_arn):
        """Sets the app_block_arn of this Application.


        :param app_block_arn: The app_block_arn of this Application.
        :type app_block_arn: str
        """

        self._app_block_arn = app_block_arn

    @property
    def icon_s3_location(self):
        """Gets the icon_s3_location of this Application.


        :return: The icon_s3_location of this Application.
        :rtype: ApplicationIconS3Location
        """
        return self._icon_s3_location

    @icon_s3_location.setter
    def icon_s3_location(self, icon_s3_location):
        """Sets the icon_s3_location of this Application.


        :param icon_s3_location: The icon_s3_location of this Application.
        :type icon_s3_location: ApplicationIconS3Location
        """

        self._icon_s3_location = icon_s3_location

    @property
    def platforms(self):
        """Gets the platforms of this Application.


        :return: The platforms of this Application.
        :rtype: List
        """
        return self._platforms

    @platforms.setter
    def platforms(self, platforms):
        """Sets the platforms of this Application.


        :param platforms: The platforms of this Application.
        :type platforms: List
        """

        self._platforms = platforms

    @property
    def instance_families(self):
        """Gets the instance_families of this Application.


        :return: The instance_families of this Application.
        :rtype: List
        """
        return self._instance_families

    @instance_families.setter
    def instance_families(self, instance_families):
        """Sets the instance_families of this Application.


        :param instance_families: The instance_families of this Application.
        :type instance_families: List
        """

        self._instance_families = instance_families

    @property
    def created_time(self):
        """Gets the created_time of this Application.


        :return: The created_time of this Application.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Application.


        :param created_time: The created_time of this Application.
        :type created_time: datetime
        """

        self._created_time = created_time
