# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_block_builder_platform_type import AppBlockBuilderPlatformType
from openapi_server.models.app_block_builder_state import AppBlockBuilderState
from openapi_server.models.app_block_builder_state_change_reason import AppBlockBuilderStateChangeReason
from openapi_server.models.app_block_builder_vpc_config import AppBlockBuilderVpcConfig
from openapi_server import util


class AppBlockBuilder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, display_name: str=None, description: str=None, platform: AppBlockBuilderPlatformType=None, instance_type: str=None, enable_default_internet_access: bool=None, iam_role_arn: str=None, vpc_config: AppBlockBuilderVpcConfig=None, state: AppBlockBuilderState=None, created_time: datetime=None, app_block_builder_errors: List=None, state_change_reason: AppBlockBuilderStateChangeReason=None, access_endpoints: List=None):
        """AppBlockBuilder - a model defined in OpenAPI

        :param arn: The arn of this AppBlockBuilder.
        :param name: The name of this AppBlockBuilder.
        :param display_name: The display_name of this AppBlockBuilder.
        :param description: The description of this AppBlockBuilder.
        :param platform: The platform of this AppBlockBuilder.
        :param instance_type: The instance_type of this AppBlockBuilder.
        :param enable_default_internet_access: The enable_default_internet_access of this AppBlockBuilder.
        :param iam_role_arn: The iam_role_arn of this AppBlockBuilder.
        :param vpc_config: The vpc_config of this AppBlockBuilder.
        :param state: The state of this AppBlockBuilder.
        :param created_time: The created_time of this AppBlockBuilder.
        :param app_block_builder_errors: The app_block_builder_errors of this AppBlockBuilder.
        :param state_change_reason: The state_change_reason of this AppBlockBuilder.
        :param access_endpoints: The access_endpoints of this AppBlockBuilder.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'display_name': str,
            'description': str,
            'platform': AppBlockBuilderPlatformType,
            'instance_type': str,
            'enable_default_internet_access': bool,
            'iam_role_arn': str,
            'vpc_config': AppBlockBuilderVpcConfig,
            'state': AppBlockBuilderState,
            'created_time': datetime,
            'app_block_builder_errors': List,
            'state_change_reason': AppBlockBuilderStateChangeReason,
            'access_endpoints': List
        }

        self.attribute_map = {
            'arn': 'Arn',
            'name': 'Name',
            'display_name': 'DisplayName',
            'description': 'Description',
            'platform': 'Platform',
            'instance_type': 'InstanceType',
            'enable_default_internet_access': 'EnableDefaultInternetAccess',
            'iam_role_arn': 'IamRoleArn',
            'vpc_config': 'VpcConfig',
            'state': 'State',
            'created_time': 'CreatedTime',
            'app_block_builder_errors': 'AppBlockBuilderErrors',
            'state_change_reason': 'StateChangeReason',
            'access_endpoints': 'AccessEndpoints'
        }

        self._arn = arn
        self._name = name
        self._display_name = display_name
        self._description = description
        self._platform = platform
        self._instance_type = instance_type
        self._enable_default_internet_access = enable_default_internet_access
        self._iam_role_arn = iam_role_arn
        self._vpc_config = vpc_config
        self._state = state
        self._created_time = created_time
        self._app_block_builder_errors = app_block_builder_errors
        self._state_change_reason = state_change_reason
        self._access_endpoints = access_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppBlockBuilder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppBlockBuilder of this AppBlockBuilder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this AppBlockBuilder.


        :return: The arn of this AppBlockBuilder.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this AppBlockBuilder.


        :param arn: The arn of this AppBlockBuilder.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this AppBlockBuilder.


        :return: The name of this AppBlockBuilder.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppBlockBuilder.


        :param name: The name of this AppBlockBuilder.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def display_name(self):
        """Gets the display_name of this AppBlockBuilder.


        :return: The display_name of this AppBlockBuilder.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AppBlockBuilder.


        :param display_name: The display_name of this AppBlockBuilder.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def description(self):
        """Gets the description of this AppBlockBuilder.


        :return: The description of this AppBlockBuilder.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AppBlockBuilder.


        :param description: The description of this AppBlockBuilder.
        :type description: str
        """

        self._description = description

    @property
    def platform(self):
        """Gets the platform of this AppBlockBuilder.


        :return: The platform of this AppBlockBuilder.
        :rtype: AppBlockBuilderPlatformType
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this AppBlockBuilder.


        :param platform: The platform of this AppBlockBuilder.
        :type platform: AppBlockBuilderPlatformType
        """
        if platform is None:
            raise ValueError("Invalid value for `platform`, must not be `None`")

        self._platform = platform

    @property
    def instance_type(self):
        """Gets the instance_type of this AppBlockBuilder.


        :return: The instance_type of this AppBlockBuilder.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this AppBlockBuilder.


        :param instance_type: The instance_type of this AppBlockBuilder.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type

    @property
    def enable_default_internet_access(self):
        """Gets the enable_default_internet_access of this AppBlockBuilder.


        :return: The enable_default_internet_access of this AppBlockBuilder.
        :rtype: bool
        """
        return self._enable_default_internet_access

    @enable_default_internet_access.setter
    def enable_default_internet_access(self, enable_default_internet_access):
        """Sets the enable_default_internet_access of this AppBlockBuilder.


        :param enable_default_internet_access: The enable_default_internet_access of this AppBlockBuilder.
        :type enable_default_internet_access: bool
        """

        self._enable_default_internet_access = enable_default_internet_access

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this AppBlockBuilder.


        :return: The iam_role_arn of this AppBlockBuilder.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this AppBlockBuilder.


        :param iam_role_arn: The iam_role_arn of this AppBlockBuilder.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def vpc_config(self):
        """Gets the vpc_config of this AppBlockBuilder.


        :return: The vpc_config of this AppBlockBuilder.
        :rtype: AppBlockBuilderVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this AppBlockBuilder.


        :param vpc_config: The vpc_config of this AppBlockBuilder.
        :type vpc_config: AppBlockBuilderVpcConfig
        """
        if vpc_config is None:
            raise ValueError("Invalid value for `vpc_config`, must not be `None`")

        self._vpc_config = vpc_config

    @property
    def state(self):
        """Gets the state of this AppBlockBuilder.


        :return: The state of this AppBlockBuilder.
        :rtype: AppBlockBuilderState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AppBlockBuilder.


        :param state: The state of this AppBlockBuilder.
        :type state: AppBlockBuilderState
        """
        if state is None:
            raise ValueError("Invalid value for `state`, must not be `None`")

        self._state = state

    @property
    def created_time(self):
        """Gets the created_time of this AppBlockBuilder.


        :return: The created_time of this AppBlockBuilder.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this AppBlockBuilder.


        :param created_time: The created_time of this AppBlockBuilder.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def app_block_builder_errors(self):
        """Gets the app_block_builder_errors of this AppBlockBuilder.


        :return: The app_block_builder_errors of this AppBlockBuilder.
        :rtype: List
        """
        return self._app_block_builder_errors

    @app_block_builder_errors.setter
    def app_block_builder_errors(self, app_block_builder_errors):
        """Sets the app_block_builder_errors of this AppBlockBuilder.


        :param app_block_builder_errors: The app_block_builder_errors of this AppBlockBuilder.
        :type app_block_builder_errors: List
        """

        self._app_block_builder_errors = app_block_builder_errors

    @property
    def state_change_reason(self):
        """Gets the state_change_reason of this AppBlockBuilder.


        :return: The state_change_reason of this AppBlockBuilder.
        :rtype: AppBlockBuilderStateChangeReason
        """
        return self._state_change_reason

    @state_change_reason.setter
    def state_change_reason(self, state_change_reason):
        """Sets the state_change_reason of this AppBlockBuilder.


        :param state_change_reason: The state_change_reason of this AppBlockBuilder.
        :type state_change_reason: AppBlockBuilderStateChangeReason
        """

        self._state_change_reason = state_change_reason

    @property
    def access_endpoints(self):
        """Gets the access_endpoints of this AppBlockBuilder.


        :return: The access_endpoints of this AppBlockBuilder.
        :rtype: List
        """
        return self._access_endpoints

    @access_endpoints.setter
    def access_endpoints(self, access_endpoints):
        """Sets the access_endpoints of this AppBlockBuilder.


        :param access_endpoints: The access_endpoints of this AppBlockBuilder.
        :type access_endpoints: List
        """

        self._access_endpoints = access_endpoints
