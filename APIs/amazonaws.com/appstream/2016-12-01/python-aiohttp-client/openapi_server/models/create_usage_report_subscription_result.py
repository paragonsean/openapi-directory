# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_report_schedule import UsageReportSchedule
from openapi_server import util


class CreateUsageReportSubscriptionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_bucket_name: str=None, schedule: UsageReportSchedule=None):
        """CreateUsageReportSubscriptionResult - a model defined in OpenAPI

        :param s3_bucket_name: The s3_bucket_name of this CreateUsageReportSubscriptionResult.
        :param schedule: The schedule of this CreateUsageReportSubscriptionResult.
        """
        self.openapi_types = {
            's3_bucket_name': str,
            'schedule': UsageReportSchedule
        }

        self.attribute_map = {
            's3_bucket_name': 'S3BucketName',
            'schedule': 'Schedule'
        }

        self._s3_bucket_name = s3_bucket_name
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUsageReportSubscriptionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateUsageReportSubscriptionResult of this CreateUsageReportSubscriptionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this CreateUsageReportSubscriptionResult.


        :return: The s3_bucket_name of this CreateUsageReportSubscriptionResult.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this CreateUsageReportSubscriptionResult.


        :param s3_bucket_name: The s3_bucket_name of this CreateUsageReportSubscriptionResult.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name

    @property
    def schedule(self):
        """Gets the schedule of this CreateUsageReportSubscriptionResult.


        :return: The schedule of this CreateUsageReportSubscriptionResult.
        :rtype: UsageReportSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this CreateUsageReportSubscriptionResult.


        :param schedule: The schedule of this CreateUsageReportSubscriptionResult.
        :type schedule: UsageReportSchedule
        """

        self._schedule = schedule
