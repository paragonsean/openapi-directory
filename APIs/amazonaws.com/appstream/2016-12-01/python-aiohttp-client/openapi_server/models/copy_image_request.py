# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyImageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_image_name: str=None, destination_image_name: str=None, destination_region: str=None, destination_image_description: str=None):
        """CopyImageRequest - a model defined in OpenAPI

        :param source_image_name: The source_image_name of this CopyImageRequest.
        :param destination_image_name: The destination_image_name of this CopyImageRequest.
        :param destination_region: The destination_region of this CopyImageRequest.
        :param destination_image_description: The destination_image_description of this CopyImageRequest.
        """
        self.openapi_types = {
            'source_image_name': str,
            'destination_image_name': str,
            'destination_region': str,
            'destination_image_description': str
        }

        self.attribute_map = {
            'source_image_name': 'SourceImageName',
            'destination_image_name': 'DestinationImageName',
            'destination_region': 'DestinationRegion',
            'destination_image_description': 'DestinationImageDescription'
        }

        self._source_image_name = source_image_name
        self._destination_image_name = destination_image_name
        self._destination_region = destination_region
        self._destination_image_description = destination_image_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyImageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyImageRequest of this CopyImageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_image_name(self):
        """Gets the source_image_name of this CopyImageRequest.


        :return: The source_image_name of this CopyImageRequest.
        :rtype: str
        """
        return self._source_image_name

    @source_image_name.setter
    def source_image_name(self, source_image_name):
        """Sets the source_image_name of this CopyImageRequest.


        :param source_image_name: The source_image_name of this CopyImageRequest.
        :type source_image_name: str
        """
        if source_image_name is None:
            raise ValueError("Invalid value for `source_image_name`, must not be `None`")

        self._source_image_name = source_image_name

    @property
    def destination_image_name(self):
        """Gets the destination_image_name of this CopyImageRequest.


        :return: The destination_image_name of this CopyImageRequest.
        :rtype: str
        """
        return self._destination_image_name

    @destination_image_name.setter
    def destination_image_name(self, destination_image_name):
        """Sets the destination_image_name of this CopyImageRequest.


        :param destination_image_name: The destination_image_name of this CopyImageRequest.
        :type destination_image_name: str
        """
        if destination_image_name is None:
            raise ValueError("Invalid value for `destination_image_name`, must not be `None`")

        self._destination_image_name = destination_image_name

    @property
    def destination_region(self):
        """Gets the destination_region of this CopyImageRequest.


        :return: The destination_region of this CopyImageRequest.
        :rtype: str
        """
        return self._destination_region

    @destination_region.setter
    def destination_region(self, destination_region):
        """Sets the destination_region of this CopyImageRequest.


        :param destination_region: The destination_region of this CopyImageRequest.
        :type destination_region: str
        """
        if destination_region is None:
            raise ValueError("Invalid value for `destination_region`, must not be `None`")

        self._destination_region = destination_region

    @property
    def destination_image_description(self):
        """Gets the destination_image_description of this CopyImageRequest.


        :return: The destination_image_description of this CopyImageRequest.
        :rtype: str
        """
        return self._destination_image_description

    @destination_image_description.setter
    def destination_image_description(self, destination_image_description):
        """Sets the destination_image_description of this CopyImageRequest.


        :param destination_image_description: The destination_image_description of this CopyImageRequest.
        :type destination_image_description: str
        """

        self._destination_image_description = destination_image_description
