# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StackApplicationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, settings_group: str=None, s3_bucket_name: str=None):
        """StackApplicationSettings - a model defined in OpenAPI

        :param enabled: The enabled of this StackApplicationSettings.
        :param settings_group: The settings_group of this StackApplicationSettings.
        :param s3_bucket_name: The s3_bucket_name of this StackApplicationSettings.
        """
        self.openapi_types = {
            'enabled': bool,
            'settings_group': str,
            's3_bucket_name': str
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'settings_group': 'SettingsGroup',
            's3_bucket_name': 'S3BucketName'
        }

        self._enabled = enabled
        self._settings_group = settings_group
        self._s3_bucket_name = s3_bucket_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackApplicationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stack_ApplicationSettings of this StackApplicationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this StackApplicationSettings.


        :return: The enabled of this StackApplicationSettings.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this StackApplicationSettings.


        :param enabled: The enabled of this StackApplicationSettings.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def settings_group(self):
        """Gets the settings_group of this StackApplicationSettings.


        :return: The settings_group of this StackApplicationSettings.
        :rtype: str
        """
        return self._settings_group

    @settings_group.setter
    def settings_group(self, settings_group):
        """Sets the settings_group of this StackApplicationSettings.


        :param settings_group: The settings_group of this StackApplicationSettings.
        :type settings_group: str
        """

        self._settings_group = settings_group

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this StackApplicationSettings.


        :return: The s3_bucket_name of this StackApplicationSettings.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this StackApplicationSettings.


        :param s3_bucket_name: The s3_bucket_name of this StackApplicationSettings.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name
