# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_image_permissions import ImageImagePermissions
from openapi_server.models.image_state import ImageState
from openapi_server.models.image_state_change_reason import ImageStateChangeReason
from openapi_server.models.platform_type import PlatformType
from openapi_server.models.visibility_type import VisibilityType
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, arn: str=None, base_image_arn: str=None, display_name: str=None, state: ImageState=None, visibility: VisibilityType=None, image_builder_supported: bool=None, image_builder_name: str=None, platform: PlatformType=None, description: str=None, state_change_reason: ImageStateChangeReason=None, applications: List=None, created_time: datetime=None, public_base_image_released_date: datetime=None, appstream_agent_version: str=None, image_permissions: ImageImagePermissions=None, image_errors: List=None):
        """Image - a model defined in OpenAPI

        :param name: The name of this Image.
        :param arn: The arn of this Image.
        :param base_image_arn: The base_image_arn of this Image.
        :param display_name: The display_name of this Image.
        :param state: The state of this Image.
        :param visibility: The visibility of this Image.
        :param image_builder_supported: The image_builder_supported of this Image.
        :param image_builder_name: The image_builder_name of this Image.
        :param platform: The platform of this Image.
        :param description: The description of this Image.
        :param state_change_reason: The state_change_reason of this Image.
        :param applications: The applications of this Image.
        :param created_time: The created_time of this Image.
        :param public_base_image_released_date: The public_base_image_released_date of this Image.
        :param appstream_agent_version: The appstream_agent_version of this Image.
        :param image_permissions: The image_permissions of this Image.
        :param image_errors: The image_errors of this Image.
        """
        self.openapi_types = {
            'name': str,
            'arn': str,
            'base_image_arn': str,
            'display_name': str,
            'state': ImageState,
            'visibility': VisibilityType,
            'image_builder_supported': bool,
            'image_builder_name': str,
            'platform': PlatformType,
            'description': str,
            'state_change_reason': ImageStateChangeReason,
            'applications': List,
            'created_time': datetime,
            'public_base_image_released_date': datetime,
            'appstream_agent_version': str,
            'image_permissions': ImageImagePermissions,
            'image_errors': List
        }

        self.attribute_map = {
            'name': 'Name',
            'arn': 'Arn',
            'base_image_arn': 'BaseImageArn',
            'display_name': 'DisplayName',
            'state': 'State',
            'visibility': 'Visibility',
            'image_builder_supported': 'ImageBuilderSupported',
            'image_builder_name': 'ImageBuilderName',
            'platform': 'Platform',
            'description': 'Description',
            'state_change_reason': 'StateChangeReason',
            'applications': 'Applications',
            'created_time': 'CreatedTime',
            'public_base_image_released_date': 'PublicBaseImageReleasedDate',
            'appstream_agent_version': 'AppstreamAgentVersion',
            'image_permissions': 'ImagePermissions',
            'image_errors': 'ImageErrors'
        }

        self._name = name
        self._arn = arn
        self._base_image_arn = base_image_arn
        self._display_name = display_name
        self._state = state
        self._visibility = visibility
        self._image_builder_supported = image_builder_supported
        self._image_builder_name = image_builder_name
        self._platform = platform
        self._description = description
        self._state_change_reason = state_change_reason
        self._applications = applications
        self._created_time = created_time
        self._public_base_image_released_date = public_base_image_released_date
        self._appstream_agent_version = appstream_agent_version
        self._image_permissions = image_permissions
        self._image_errors = image_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Image.


        :return: The name of this Image.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Image.


        :param name: The name of this Image.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def arn(self):
        """Gets the arn of this Image.


        :return: The arn of this Image.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Image.


        :param arn: The arn of this Image.
        :type arn: str
        """

        self._arn = arn

    @property
    def base_image_arn(self):
        """Gets the base_image_arn of this Image.


        :return: The base_image_arn of this Image.
        :rtype: str
        """
        return self._base_image_arn

    @base_image_arn.setter
    def base_image_arn(self, base_image_arn):
        """Sets the base_image_arn of this Image.


        :param base_image_arn: The base_image_arn of this Image.
        :type base_image_arn: str
        """

        self._base_image_arn = base_image_arn

    @property
    def display_name(self):
        """Gets the display_name of this Image.


        :return: The display_name of this Image.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Image.


        :param display_name: The display_name of this Image.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def state(self):
        """Gets the state of this Image.


        :return: The state of this Image.
        :rtype: ImageState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Image.


        :param state: The state of this Image.
        :type state: ImageState
        """

        self._state = state

    @property
    def visibility(self):
        """Gets the visibility of this Image.


        :return: The visibility of this Image.
        :rtype: VisibilityType
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this Image.


        :param visibility: The visibility of this Image.
        :type visibility: VisibilityType
        """

        self._visibility = visibility

    @property
    def image_builder_supported(self):
        """Gets the image_builder_supported of this Image.


        :return: The image_builder_supported of this Image.
        :rtype: bool
        """
        return self._image_builder_supported

    @image_builder_supported.setter
    def image_builder_supported(self, image_builder_supported):
        """Sets the image_builder_supported of this Image.


        :param image_builder_supported: The image_builder_supported of this Image.
        :type image_builder_supported: bool
        """

        self._image_builder_supported = image_builder_supported

    @property
    def image_builder_name(self):
        """Gets the image_builder_name of this Image.


        :return: The image_builder_name of this Image.
        :rtype: str
        """
        return self._image_builder_name

    @image_builder_name.setter
    def image_builder_name(self, image_builder_name):
        """Sets the image_builder_name of this Image.


        :param image_builder_name: The image_builder_name of this Image.
        :type image_builder_name: str
        """

        self._image_builder_name = image_builder_name

    @property
    def platform(self):
        """Gets the platform of this Image.


        :return: The platform of this Image.
        :rtype: PlatformType
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this Image.


        :param platform: The platform of this Image.
        :type platform: PlatformType
        """

        self._platform = platform

    @property
    def description(self):
        """Gets the description of this Image.


        :return: The description of this Image.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Image.


        :param description: The description of this Image.
        :type description: str
        """

        self._description = description

    @property
    def state_change_reason(self):
        """Gets the state_change_reason of this Image.


        :return: The state_change_reason of this Image.
        :rtype: ImageStateChangeReason
        """
        return self._state_change_reason

    @state_change_reason.setter
    def state_change_reason(self, state_change_reason):
        """Sets the state_change_reason of this Image.


        :param state_change_reason: The state_change_reason of this Image.
        :type state_change_reason: ImageStateChangeReason
        """

        self._state_change_reason = state_change_reason

    @property
    def applications(self):
        """Gets the applications of this Image.


        :return: The applications of this Image.
        :rtype: List
        """
        return self._applications

    @applications.setter
    def applications(self, applications):
        """Sets the applications of this Image.


        :param applications: The applications of this Image.
        :type applications: List
        """

        self._applications = applications

    @property
    def created_time(self):
        """Gets the created_time of this Image.


        :return: The created_time of this Image.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this Image.


        :param created_time: The created_time of this Image.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def public_base_image_released_date(self):
        """Gets the public_base_image_released_date of this Image.


        :return: The public_base_image_released_date of this Image.
        :rtype: datetime
        """
        return self._public_base_image_released_date

    @public_base_image_released_date.setter
    def public_base_image_released_date(self, public_base_image_released_date):
        """Sets the public_base_image_released_date of this Image.


        :param public_base_image_released_date: The public_base_image_released_date of this Image.
        :type public_base_image_released_date: datetime
        """

        self._public_base_image_released_date = public_base_image_released_date

    @property
    def appstream_agent_version(self):
        """Gets the appstream_agent_version of this Image.


        :return: The appstream_agent_version of this Image.
        :rtype: str
        """
        return self._appstream_agent_version

    @appstream_agent_version.setter
    def appstream_agent_version(self, appstream_agent_version):
        """Sets the appstream_agent_version of this Image.


        :param appstream_agent_version: The appstream_agent_version of this Image.
        :type appstream_agent_version: str
        """

        self._appstream_agent_version = appstream_agent_version

    @property
    def image_permissions(self):
        """Gets the image_permissions of this Image.


        :return: The image_permissions of this Image.
        :rtype: ImageImagePermissions
        """
        return self._image_permissions

    @image_permissions.setter
    def image_permissions(self, image_permissions):
        """Sets the image_permissions of this Image.


        :param image_permissions: The image_permissions of this Image.
        :type image_permissions: ImageImagePermissions
        """

        self._image_permissions = image_permissions

    @property
    def image_errors(self):
        """Gets the image_errors of this Image.


        :return: The image_errors of this Image.
        :rtype: List
        """
        return self._image_errors

    @image_errors.setter
    def image_errors(self, image_errors):
        """Sets the image_errors of this Image.


        :param image_errors: The image_errors of this Image.
        :type image_errors: List
        """

        self._image_errors = image_errors
