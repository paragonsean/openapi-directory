# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_image_builder_request_domain_join_info import CreateImageBuilderRequestDomainJoinInfo
from openapi_server.models.create_image_builder_request_vpc_config import CreateImageBuilderRequestVpcConfig
from openapi_server import util


class CreateImageBuilderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, image_name: str=None, image_arn: str=None, instance_type: str=None, description: str=None, display_name: str=None, vpc_config: CreateImageBuilderRequestVpcConfig=None, iam_role_arn: str=None, enable_default_internet_access: bool=None, domain_join_info: CreateImageBuilderRequestDomainJoinInfo=None, appstream_agent_version: str=None, tags: Dict=None, access_endpoints: List=None):
        """CreateImageBuilderRequest - a model defined in OpenAPI

        :param name: The name of this CreateImageBuilderRequest.
        :param image_name: The image_name of this CreateImageBuilderRequest.
        :param image_arn: The image_arn of this CreateImageBuilderRequest.
        :param instance_type: The instance_type of this CreateImageBuilderRequest.
        :param description: The description of this CreateImageBuilderRequest.
        :param display_name: The display_name of this CreateImageBuilderRequest.
        :param vpc_config: The vpc_config of this CreateImageBuilderRequest.
        :param iam_role_arn: The iam_role_arn of this CreateImageBuilderRequest.
        :param enable_default_internet_access: The enable_default_internet_access of this CreateImageBuilderRequest.
        :param domain_join_info: The domain_join_info of this CreateImageBuilderRequest.
        :param appstream_agent_version: The appstream_agent_version of this CreateImageBuilderRequest.
        :param tags: The tags of this CreateImageBuilderRequest.
        :param access_endpoints: The access_endpoints of this CreateImageBuilderRequest.
        """
        self.openapi_types = {
            'name': str,
            'image_name': str,
            'image_arn': str,
            'instance_type': str,
            'description': str,
            'display_name': str,
            'vpc_config': CreateImageBuilderRequestVpcConfig,
            'iam_role_arn': str,
            'enable_default_internet_access': bool,
            'domain_join_info': CreateImageBuilderRequestDomainJoinInfo,
            'appstream_agent_version': str,
            'tags': Dict,
            'access_endpoints': List
        }

        self.attribute_map = {
            'name': 'Name',
            'image_name': 'ImageName',
            'image_arn': 'ImageArn',
            'instance_type': 'InstanceType',
            'description': 'Description',
            'display_name': 'DisplayName',
            'vpc_config': 'VpcConfig',
            'iam_role_arn': 'IamRoleArn',
            'enable_default_internet_access': 'EnableDefaultInternetAccess',
            'domain_join_info': 'DomainJoinInfo',
            'appstream_agent_version': 'AppstreamAgentVersion',
            'tags': 'Tags',
            'access_endpoints': 'AccessEndpoints'
        }

        self._name = name
        self._image_name = image_name
        self._image_arn = image_arn
        self._instance_type = instance_type
        self._description = description
        self._display_name = display_name
        self._vpc_config = vpc_config
        self._iam_role_arn = iam_role_arn
        self._enable_default_internet_access = enable_default_internet_access
        self._domain_join_info = domain_join_info
        self._appstream_agent_version = appstream_agent_version
        self._tags = tags
        self._access_endpoints = access_endpoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateImageBuilderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateImageBuilderRequest of this CreateImageBuilderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateImageBuilderRequest.


        :return: The name of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateImageBuilderRequest.


        :param name: The name of this CreateImageBuilderRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def image_name(self):
        """Gets the image_name of this CreateImageBuilderRequest.


        :return: The image_name of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name):
        """Sets the image_name of this CreateImageBuilderRequest.


        :param image_name: The image_name of this CreateImageBuilderRequest.
        :type image_name: str
        """

        self._image_name = image_name

    @property
    def image_arn(self):
        """Gets the image_arn of this CreateImageBuilderRequest.


        :return: The image_arn of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._image_arn

    @image_arn.setter
    def image_arn(self, image_arn):
        """Sets the image_arn of this CreateImageBuilderRequest.


        :param image_arn: The image_arn of this CreateImageBuilderRequest.
        :type image_arn: str
        """

        self._image_arn = image_arn

    @property
    def instance_type(self):
        """Gets the instance_type of this CreateImageBuilderRequest.


        :return: The instance_type of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this CreateImageBuilderRequest.


        :param instance_type: The instance_type of this CreateImageBuilderRequest.
        :type instance_type: str
        """
        if instance_type is None:
            raise ValueError("Invalid value for `instance_type`, must not be `None`")

        self._instance_type = instance_type

    @property
    def description(self):
        """Gets the description of this CreateImageBuilderRequest.


        :return: The description of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateImageBuilderRequest.


        :param description: The description of this CreateImageBuilderRequest.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this CreateImageBuilderRequest.


        :return: The display_name of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateImageBuilderRequest.


        :param display_name: The display_name of this CreateImageBuilderRequest.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def vpc_config(self):
        """Gets the vpc_config of this CreateImageBuilderRequest.


        :return: The vpc_config of this CreateImageBuilderRequest.
        :rtype: CreateImageBuilderRequestVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this CreateImageBuilderRequest.


        :param vpc_config: The vpc_config of this CreateImageBuilderRequest.
        :type vpc_config: CreateImageBuilderRequestVpcConfig
        """

        self._vpc_config = vpc_config

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this CreateImageBuilderRequest.


        :return: The iam_role_arn of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this CreateImageBuilderRequest.


        :param iam_role_arn: The iam_role_arn of this CreateImageBuilderRequest.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def enable_default_internet_access(self):
        """Gets the enable_default_internet_access of this CreateImageBuilderRequest.


        :return: The enable_default_internet_access of this CreateImageBuilderRequest.
        :rtype: bool
        """
        return self._enable_default_internet_access

    @enable_default_internet_access.setter
    def enable_default_internet_access(self, enable_default_internet_access):
        """Sets the enable_default_internet_access of this CreateImageBuilderRequest.


        :param enable_default_internet_access: The enable_default_internet_access of this CreateImageBuilderRequest.
        :type enable_default_internet_access: bool
        """

        self._enable_default_internet_access = enable_default_internet_access

    @property
    def domain_join_info(self):
        """Gets the domain_join_info of this CreateImageBuilderRequest.


        :return: The domain_join_info of this CreateImageBuilderRequest.
        :rtype: CreateImageBuilderRequestDomainJoinInfo
        """
        return self._domain_join_info

    @domain_join_info.setter
    def domain_join_info(self, domain_join_info):
        """Sets the domain_join_info of this CreateImageBuilderRequest.


        :param domain_join_info: The domain_join_info of this CreateImageBuilderRequest.
        :type domain_join_info: CreateImageBuilderRequestDomainJoinInfo
        """

        self._domain_join_info = domain_join_info

    @property
    def appstream_agent_version(self):
        """Gets the appstream_agent_version of this CreateImageBuilderRequest.


        :return: The appstream_agent_version of this CreateImageBuilderRequest.
        :rtype: str
        """
        return self._appstream_agent_version

    @appstream_agent_version.setter
    def appstream_agent_version(self, appstream_agent_version):
        """Sets the appstream_agent_version of this CreateImageBuilderRequest.


        :param appstream_agent_version: The appstream_agent_version of this CreateImageBuilderRequest.
        :type appstream_agent_version: str
        """

        self._appstream_agent_version = appstream_agent_version

    @property
    def tags(self):
        """Gets the tags of this CreateImageBuilderRequest.


        :return: The tags of this CreateImageBuilderRequest.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateImageBuilderRequest.


        :param tags: The tags of this CreateImageBuilderRequest.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def access_endpoints(self):
        """Gets the access_endpoints of this CreateImageBuilderRequest.


        :return: The access_endpoints of this CreateImageBuilderRequest.
        :rtype: List
        """
        return self._access_endpoints

    @access_endpoints.setter
    def access_endpoints(self, access_endpoints):
        """Sets the access_endpoints of this CreateImageBuilderRequest.


        :param access_endpoints: The access_endpoints of this CreateImageBuilderRequest.
        :type access_endpoints: List
        """

        self._access_endpoints = access_endpoints
