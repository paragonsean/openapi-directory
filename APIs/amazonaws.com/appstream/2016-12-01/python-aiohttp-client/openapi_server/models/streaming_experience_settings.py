# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.preferred_protocol import PreferredProtocol
from openapi_server import util


class StreamingExperienceSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preferred_protocol: PreferredProtocol=None):
        """StreamingExperienceSettings - a model defined in OpenAPI

        :param preferred_protocol: The preferred_protocol of this StreamingExperienceSettings.
        """
        self.openapi_types = {
            'preferred_protocol': PreferredProtocol
        }

        self.attribute_map = {
            'preferred_protocol': 'PreferredProtocol'
        }

        self._preferred_protocol = preferred_protocol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamingExperienceSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamingExperienceSettings of this StreamingExperienceSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preferred_protocol(self):
        """Gets the preferred_protocol of this StreamingExperienceSettings.


        :return: The preferred_protocol of this StreamingExperienceSettings.
        :rtype: PreferredProtocol
        """
        return self._preferred_protocol

    @preferred_protocol.setter
    def preferred_protocol(self, preferred_protocol):
        """Sets the preferred_protocol of this StreamingExperienceSettings.


        :param preferred_protocol: The preferred_protocol of this StreamingExperienceSettings.
        :type preferred_protocol: PreferredProtocol
        """

        self._preferred_protocol = preferred_protocol
