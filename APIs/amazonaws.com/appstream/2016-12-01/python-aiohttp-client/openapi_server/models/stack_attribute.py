# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StackAttribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    STORAGE_CONNECTORS = 'STORAGE_CONNECTORS'
    STORAGE_CONNECTOR_HOMEFOLDERS = 'STORAGE_CONNECTOR_HOMEFOLDERS'
    STORAGE_CONNECTOR_GOOGLE_DRIVE = 'STORAGE_CONNECTOR_GOOGLE_DRIVE'
    STORAGE_CONNECTOR_ONE_DRIVE = 'STORAGE_CONNECTOR_ONE_DRIVE'
    REDIRECT_URL = 'REDIRECT_URL'
    FEEDBACK_URL = 'FEEDBACK_URL'
    THEME_NAME = 'THEME_NAME'
    USER_SETTINGS = 'USER_SETTINGS'
    EMBED_HOST_DOMAINS = 'EMBED_HOST_DOMAINS'
    IAM_ROLE_ARN = 'IAM_ROLE_ARN'
    ACCESS_ENDPOINTS = 'ACCESS_ENDPOINTS'
    STREAMING_EXPERIENCE_SETTINGS = 'STREAMING_EXPERIENCE_SETTINGS'

    def __init__(self):
        """StackAttribute - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackAttribute of this StackAttribute.
        """
        return util.deserialize_model(dikt, cls)
