# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_visibility import AppVisibility
from openapi_server import util


class UpdateEntitlementRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, stack_name: str=None, description: str=None, app_visibility: AppVisibility=None, attributes: List=None):
        """UpdateEntitlementRequest - a model defined in OpenAPI

        :param name: The name of this UpdateEntitlementRequest.
        :param stack_name: The stack_name of this UpdateEntitlementRequest.
        :param description: The description of this UpdateEntitlementRequest.
        :param app_visibility: The app_visibility of this UpdateEntitlementRequest.
        :param attributes: The attributes of this UpdateEntitlementRequest.
        """
        self.openapi_types = {
            'name': str,
            'stack_name': str,
            'description': str,
            'app_visibility': AppVisibility,
            'attributes': List
        }

        self.attribute_map = {
            'name': 'Name',
            'stack_name': 'StackName',
            'description': 'Description',
            'app_visibility': 'AppVisibility',
            'attributes': 'Attributes'
        }

        self._name = name
        self._stack_name = stack_name
        self._description = description
        self._app_visibility = app_visibility
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEntitlementRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEntitlementRequest of this UpdateEntitlementRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateEntitlementRequest.


        :return: The name of this UpdateEntitlementRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateEntitlementRequest.


        :param name: The name of this UpdateEntitlementRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def stack_name(self):
        """Gets the stack_name of this UpdateEntitlementRequest.


        :return: The stack_name of this UpdateEntitlementRequest.
        :rtype: str
        """
        return self._stack_name

    @stack_name.setter
    def stack_name(self, stack_name):
        """Sets the stack_name of this UpdateEntitlementRequest.


        :param stack_name: The stack_name of this UpdateEntitlementRequest.
        :type stack_name: str
        """
        if stack_name is None:
            raise ValueError("Invalid value for `stack_name`, must not be `None`")

        self._stack_name = stack_name

    @property
    def description(self):
        """Gets the description of this UpdateEntitlementRequest.


        :return: The description of this UpdateEntitlementRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateEntitlementRequest.


        :param description: The description of this UpdateEntitlementRequest.
        :type description: str
        """

        self._description = description

    @property
    def app_visibility(self):
        """Gets the app_visibility of this UpdateEntitlementRequest.


        :return: The app_visibility of this UpdateEntitlementRequest.
        :rtype: AppVisibility
        """
        return self._app_visibility

    @app_visibility.setter
    def app_visibility(self, app_visibility):
        """Sets the app_visibility of this UpdateEntitlementRequest.


        :param app_visibility: The app_visibility of this UpdateEntitlementRequest.
        :type app_visibility: AppVisibility
        """

        self._app_visibility = app_visibility

    @property
    def attributes(self):
        """Gets the attributes of this UpdateEntitlementRequest.


        :return: The attributes of this UpdateEntitlementRequest.
        :rtype: List
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this UpdateEntitlementRequest.


        :param attributes: The attributes of this UpdateEntitlementRequest.
        :type attributes: List
        """

        self._attributes = attributes
