# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAppBlockBuilderStreamingURLRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_block_builder_name: str=None, validity: int=None):
        """CreateAppBlockBuilderStreamingURLRequest - a model defined in OpenAPI

        :param app_block_builder_name: The app_block_builder_name of this CreateAppBlockBuilderStreamingURLRequest.
        :param validity: The validity of this CreateAppBlockBuilderStreamingURLRequest.
        """
        self.openapi_types = {
            'app_block_builder_name': str,
            'validity': int
        }

        self.attribute_map = {
            'app_block_builder_name': 'AppBlockBuilderName',
            'validity': 'Validity'
        }

        self._app_block_builder_name = app_block_builder_name
        self._validity = validity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAppBlockBuilderStreamingURLRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAppBlockBuilderStreamingURLRequest of this CreateAppBlockBuilderStreamingURLRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_block_builder_name(self):
        """Gets the app_block_builder_name of this CreateAppBlockBuilderStreamingURLRequest.


        :return: The app_block_builder_name of this CreateAppBlockBuilderStreamingURLRequest.
        :rtype: str
        """
        return self._app_block_builder_name

    @app_block_builder_name.setter
    def app_block_builder_name(self, app_block_builder_name):
        """Sets the app_block_builder_name of this CreateAppBlockBuilderStreamingURLRequest.


        :param app_block_builder_name: The app_block_builder_name of this CreateAppBlockBuilderStreamingURLRequest.
        :type app_block_builder_name: str
        """
        if app_block_builder_name is None:
            raise ValueError("Invalid value for `app_block_builder_name`, must not be `None`")

        self._app_block_builder_name = app_block_builder_name

    @property
    def validity(self):
        """Gets the validity of this CreateAppBlockBuilderStreamingURLRequest.


        :return: The validity of this CreateAppBlockBuilderStreamingURLRequest.
        :rtype: int
        """
        return self._validity

    @validity.setter
    def validity(self, validity):
        """Sets the validity of this CreateAppBlockBuilderStreamingURLRequest.


        :param validity: The validity of this CreateAppBlockBuilderStreamingURLRequest.
        :type validity: int
        """

        self._validity = validity
