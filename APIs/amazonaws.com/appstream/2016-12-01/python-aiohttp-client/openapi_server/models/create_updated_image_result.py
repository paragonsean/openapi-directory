# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image import Image
from openapi_server import util


class CreateUpdatedImageResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image: Image=None, can_update_image: bool=None):
        """CreateUpdatedImageResult - a model defined in OpenAPI

        :param image: The image of this CreateUpdatedImageResult.
        :param can_update_image: The can_update_image of this CreateUpdatedImageResult.
        """
        self.openapi_types = {
            'image': Image,
            'can_update_image': bool
        }

        self.attribute_map = {
            'image': 'image',
            'can_update_image': 'canUpdateImage'
        }

        self._image = image
        self._can_update_image = can_update_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUpdatedImageResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateUpdatedImageResult of this CreateUpdatedImageResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self):
        """Gets the image of this CreateUpdatedImageResult.


        :return: The image of this CreateUpdatedImageResult.
        :rtype: Image
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this CreateUpdatedImageResult.


        :param image: The image of this CreateUpdatedImageResult.
        :type image: Image
        """

        self._image = image

    @property
    def can_update_image(self):
        """Gets the can_update_image of this CreateUpdatedImageResult.


        :return: The can_update_image of this CreateUpdatedImageResult.
        :rtype: bool
        """
        return self._can_update_image

    @can_update_image.setter
    def can_update_image(self, can_update_image):
        """Sets the can_update_image of this CreateUpdatedImageResult.


        :param can_update_image: The can_update_image of this CreateUpdatedImageResult.
        :type can_update_image: bool
        """

        self._can_update_image = can_update_image
