# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_endpoint_type import AccessEndpointType
from openapi_server import util


class AccessEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_type: AccessEndpointType=None, vpce_id: str=None):
        """AccessEndpoint - a model defined in OpenAPI

        :param endpoint_type: The endpoint_type of this AccessEndpoint.
        :param vpce_id: The vpce_id of this AccessEndpoint.
        """
        self.openapi_types = {
            'endpoint_type': AccessEndpointType,
            'vpce_id': str
        }

        self.attribute_map = {
            'endpoint_type': 'EndpointType',
            'vpce_id': 'VpceId'
        }

        self._endpoint_type = endpoint_type
        self._vpce_id = vpce_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessEndpoint of this AccessEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_type(self):
        """Gets the endpoint_type of this AccessEndpoint.


        :return: The endpoint_type of this AccessEndpoint.
        :rtype: AccessEndpointType
        """
        return self._endpoint_type

    @endpoint_type.setter
    def endpoint_type(self, endpoint_type):
        """Sets the endpoint_type of this AccessEndpoint.


        :param endpoint_type: The endpoint_type of this AccessEndpoint.
        :type endpoint_type: AccessEndpointType
        """
        if endpoint_type is None:
            raise ValueError("Invalid value for `endpoint_type`, must not be `None`")

        self._endpoint_type = endpoint_type

    @property
    def vpce_id(self):
        """Gets the vpce_id of this AccessEndpoint.


        :return: The vpce_id of this AccessEndpoint.
        :rtype: str
        """
        return self._vpce_id

    @vpce_id.setter
    def vpce_id(self, vpce_id):
        """Sets the vpce_id of this AccessEndpoint.


        :param vpce_id: The vpce_id of this AccessEndpoint.
        :type vpce_id: str
        """

        self._vpce_id = vpce_id
