/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppBlockResult_AppBlock.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppBlockResult_AppBlock::OAICreateAppBlockResult_AppBlock(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppBlockResult_AppBlock::OAICreateAppBlockResult_AppBlock() {
    this->initializeModel();
}

OAICreateAppBlockResult_AppBlock::~OAICreateAppBlockResult_AppBlock() {}

void OAICreateAppBlockResult_AppBlock::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_source_s3_location_isSet = false;
    m_source_s3_location_isValid = false;

    m_setup_script_details_isSet = false;
    m_setup_script_details_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_post_setup_script_details_isSet = false;
    m_post_setup_script_details_isValid = false;

    m_packaging_type_isSet = false;
    m_packaging_type_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_app_block_errors_isSet = false;
    m_app_block_errors_isValid = false;
}

void OAICreateAppBlockResult_AppBlock::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppBlockResult_AppBlock::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_source_s3_location_isValid = ::OpenAPI::fromJsonValue(m_source_s3_location, json[QString("SourceS3Location")]);
    m_source_s3_location_isSet = !json[QString("SourceS3Location")].isNull() && m_source_s3_location_isValid;

    m_setup_script_details_isValid = ::OpenAPI::fromJsonValue(m_setup_script_details, json[QString("SetupScriptDetails")]);
    m_setup_script_details_isSet = !json[QString("SetupScriptDetails")].isNull() && m_setup_script_details_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_post_setup_script_details_isValid = ::OpenAPI::fromJsonValue(m_post_setup_script_details, json[QString("PostSetupScriptDetails")]);
    m_post_setup_script_details_isSet = !json[QString("PostSetupScriptDetails")].isNull() && m_post_setup_script_details_isValid;

    m_packaging_type_isValid = ::OpenAPI::fromJsonValue(m_packaging_type, json[QString("PackagingType")]);
    m_packaging_type_isSet = !json[QString("PackagingType")].isNull() && m_packaging_type_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_app_block_errors_isValid = ::OpenAPI::fromJsonValue(m_app_block_errors, json[QString("AppBlockErrors")]);
    m_app_block_errors_isSet = !json[QString("AppBlockErrors")].isNull() && m_app_block_errors_isValid;
}

QString OAICreateAppBlockResult_AppBlock::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppBlockResult_AppBlock::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_source_s3_location.isSet()) {
        obj.insert(QString("SourceS3Location"), ::OpenAPI::toJsonValue(m_source_s3_location));
    }
    if (m_setup_script_details.isSet()) {
        obj.insert(QString("SetupScriptDetails"), ::OpenAPI::toJsonValue(m_setup_script_details));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_post_setup_script_details.isSet()) {
        obj.insert(QString("PostSetupScriptDetails"), ::OpenAPI::toJsonValue(m_post_setup_script_details));
    }
    if (m_packaging_type.isSet()) {
        obj.insert(QString("PackagingType"), ::OpenAPI::toJsonValue(m_packaging_type));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_app_block_errors.isSet()) {
        obj.insert(QString("AppBlockErrors"), ::OpenAPI::toJsonValue(m_app_block_errors));
    }
    return obj;
}

QString OAICreateAppBlockResult_AppBlock::getName() const {
    return m_name;
}
void OAICreateAppBlockResult_AppBlock::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateAppBlockResult_AppBlock::getArn() const {
    return m_arn;
}
void OAICreateAppBlockResult_AppBlock::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateAppBlockResult_AppBlock::getDescription() const {
    return m_description;
}
void OAICreateAppBlockResult_AppBlock::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateAppBlockResult_AppBlock::getDisplayName() const {
    return m_display_name;
}
void OAICreateAppBlockResult_AppBlock::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAICreateAppBlockRequest_SourceS3Location OAICreateAppBlockResult_AppBlock::getSourceS3Location() const {
    return m_source_s3_location;
}
void OAICreateAppBlockResult_AppBlock::setSourceS3Location(const OAICreateAppBlockRequest_SourceS3Location &source_s3_location) {
    m_source_s3_location = source_s3_location;
    m_source_s3_location_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_source_s3_location_Set() const{
    return m_source_s3_location_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_source_s3_location_Valid() const{
    return m_source_s3_location_isValid;
}

OAIAppBlock_SetupScriptDetails OAICreateAppBlockResult_AppBlock::getSetupScriptDetails() const {
    return m_setup_script_details;
}
void OAICreateAppBlockResult_AppBlock::setSetupScriptDetails(const OAIAppBlock_SetupScriptDetails &setup_script_details) {
    m_setup_script_details = setup_script_details;
    m_setup_script_details_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_setup_script_details_Set() const{
    return m_setup_script_details_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_setup_script_details_Valid() const{
    return m_setup_script_details_isValid;
}

QDateTime OAICreateAppBlockResult_AppBlock::getCreatedTime() const {
    return m_created_time;
}
void OAICreateAppBlockResult_AppBlock::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_created_time_Valid() const{
    return m_created_time_isValid;
}

OAIAppBlock_PostSetupScriptDetails OAICreateAppBlockResult_AppBlock::getPostSetupScriptDetails() const {
    return m_post_setup_script_details;
}
void OAICreateAppBlockResult_AppBlock::setPostSetupScriptDetails(const OAIAppBlock_PostSetupScriptDetails &post_setup_script_details) {
    m_post_setup_script_details = post_setup_script_details;
    m_post_setup_script_details_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_post_setup_script_details_Set() const{
    return m_post_setup_script_details_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_post_setup_script_details_Valid() const{
    return m_post_setup_script_details_isValid;
}

OAIPackagingType OAICreateAppBlockResult_AppBlock::getPackagingType() const {
    return m_packaging_type;
}
void OAICreateAppBlockResult_AppBlock::setPackagingType(const OAIPackagingType &packaging_type) {
    m_packaging_type = packaging_type;
    m_packaging_type_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_packaging_type_Set() const{
    return m_packaging_type_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_packaging_type_Valid() const{
    return m_packaging_type_isValid;
}

OAIAppBlockState OAICreateAppBlockResult_AppBlock::getState() const {
    return m_state;
}
void OAICreateAppBlockResult_AppBlock::setState(const OAIAppBlockState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_state_Set() const{
    return m_state_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_state_Valid() const{
    return m_state_isValid;
}

QList OAICreateAppBlockResult_AppBlock::getAppBlockErrors() const {
    return m_app_block_errors;
}
void OAICreateAppBlockResult_AppBlock::setAppBlockErrors(const QList &app_block_errors) {
    m_app_block_errors = app_block_errors;
    m_app_block_errors_isSet = true;
}

bool OAICreateAppBlockResult_AppBlock::is_app_block_errors_Set() const{
    return m_app_block_errors_isSet;
}

bool OAICreateAppBlockResult_AppBlock::is_app_block_errors_Valid() const{
    return m_app_block_errors_isValid;
}

bool OAICreateAppBlockResult_AppBlock::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_s3_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_setup_script_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_setup_script_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_packaging_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_block_errors.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppBlockResult_AppBlock::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_arn_isValid && true;
}

} // namespace OpenAPI
