/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserStackAssociationError.h
 *
 * Describes the error that is returned when a user canâ€™t be associated with or disassociated from a stack. 
 */

#ifndef OAIUserStackAssociationError_H
#define OAIUserStackAssociationError_H

#include <QJsonObject>

#include "OAIUserStackAssociationErrorCode.h"
#include "OAIUserStackAssociationError_UserStackAssociation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserStackAssociationError_UserStackAssociation;

class OAIUserStackAssociationError : public OAIObject {
public:
    OAIUserStackAssociationError();
    OAIUserStackAssociationError(QString json);
    ~OAIUserStackAssociationError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserStackAssociationError_UserStackAssociation getUserStackAssociation() const;
    void setUserStackAssociation(const OAIUserStackAssociationError_UserStackAssociation &user_stack_association);
    bool is_user_stack_association_Set() const;
    bool is_user_stack_association_Valid() const;

    OAIUserStackAssociationErrorCode getErrorCode() const;
    void setErrorCode(const OAIUserStackAssociationErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserStackAssociationError_UserStackAssociation m_user_stack_association;
    bool m_user_stack_association_isSet;
    bool m_user_stack_association_isValid;

    OAIUserStackAssociationErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserStackAssociationError)

#endif // OAIUserStackAssociationError_H
