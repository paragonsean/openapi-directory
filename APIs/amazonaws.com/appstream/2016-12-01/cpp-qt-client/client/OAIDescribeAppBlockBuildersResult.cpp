/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppBlockBuildersResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppBlockBuildersResult::OAIDescribeAppBlockBuildersResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppBlockBuildersResult::OAIDescribeAppBlockBuildersResult() {
    this->initializeModel();
}

OAIDescribeAppBlockBuildersResult::~OAIDescribeAppBlockBuildersResult() {}

void OAIDescribeAppBlockBuildersResult::initializeModel() {

    m_app_block_builders_isSet = false;
    m_app_block_builders_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIDescribeAppBlockBuildersResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppBlockBuildersResult::fromJsonObject(QJsonObject json) {

    m_app_block_builders_isValid = ::OpenAPI::fromJsonValue(m_app_block_builders, json[QString("AppBlockBuilders")]);
    m_app_block_builders_isSet = !json[QString("AppBlockBuilders")].isNull() && m_app_block_builders_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIDescribeAppBlockBuildersResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppBlockBuildersResult::asJsonObject() const {
    QJsonObject obj;
    if (m_app_block_builders.isSet()) {
        obj.insert(QString("AppBlockBuilders"), ::OpenAPI::toJsonValue(m_app_block_builders));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIDescribeAppBlockBuildersResult::getAppBlockBuilders() const {
    return m_app_block_builders;
}
void OAIDescribeAppBlockBuildersResult::setAppBlockBuilders(const QList &app_block_builders) {
    m_app_block_builders = app_block_builders;
    m_app_block_builders_isSet = true;
}

bool OAIDescribeAppBlockBuildersResult::is_app_block_builders_Set() const{
    return m_app_block_builders_isSet;
}

bool OAIDescribeAppBlockBuildersResult::is_app_block_builders_Valid() const{
    return m_app_block_builders_isValid;
}

QString OAIDescribeAppBlockBuildersResult::getNextToken() const {
    return m_next_token;
}
void OAIDescribeAppBlockBuildersResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIDescribeAppBlockBuildersResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIDescribeAppBlockBuildersResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIDescribeAppBlockBuildersResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_block_builders.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppBlockBuildersResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
