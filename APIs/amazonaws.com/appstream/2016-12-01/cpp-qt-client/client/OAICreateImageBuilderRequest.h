/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateImageBuilderRequest.h
 *
 * 
 */

#ifndef OAICreateImageBuilderRequest_H
#define OAICreateImageBuilderRequest_H

#include <QJsonObject>

#include "OAICreateImageBuilderRequest_DomainJoinInfo.h"
#include "OAICreateImageBuilderRequest_VpcConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateImageBuilderRequest_VpcConfig;
class OAICreateImageBuilderRequest_DomainJoinInfo;

class OAICreateImageBuilderRequest : public OAIObject {
public:
    OAICreateImageBuilderRequest();
    OAICreateImageBuilderRequest(QString json);
    ~OAICreateImageBuilderRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getImageName() const;
    void setImageName(const QString &image_name);
    bool is_image_name_Set() const;
    bool is_image_name_Valid() const;

    QString getImageArn() const;
    void setImageArn(const QString &image_arn);
    bool is_image_arn_Set() const;
    bool is_image_arn_Valid() const;

    QString getInstanceType() const;
    void setInstanceType(const QString &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAICreateImageBuilderRequest_VpcConfig getVpcConfig() const;
    void setVpcConfig(const OAICreateImageBuilderRequest_VpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    QString getIamRoleArn() const;
    void setIamRoleArn(const QString &iam_role_arn);
    bool is_iam_role_arn_Set() const;
    bool is_iam_role_arn_Valid() const;

    bool getEnableDefaultInternetAccess() const;
    void setEnableDefaultInternetAccess(const bool &enable_default_internet_access);
    bool is_enable_default_internet_access_Set() const;
    bool is_enable_default_internet_access_Valid() const;

    OAICreateImageBuilderRequest_DomainJoinInfo getDomainJoinInfo() const;
    void setDomainJoinInfo(const OAICreateImageBuilderRequest_DomainJoinInfo &domain_join_info);
    bool is_domain_join_info_Set() const;
    bool is_domain_join_info_Valid() const;

    QString getAppstreamAgentVersion() const;
    void setAppstreamAgentVersion(const QString &appstream_agent_version);
    bool is_appstream_agent_version_Set() const;
    bool is_appstream_agent_version_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList getAccessEndpoints() const;
    void setAccessEndpoints(const QList &access_endpoints);
    bool is_access_endpoints_Set() const;
    bool is_access_endpoints_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_image_name;
    bool m_image_name_isSet;
    bool m_image_name_isValid;

    QString m_image_arn;
    bool m_image_arn_isSet;
    bool m_image_arn_isValid;

    QString m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAICreateImageBuilderRequest_VpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    QString m_iam_role_arn;
    bool m_iam_role_arn_isSet;
    bool m_iam_role_arn_isValid;

    bool m_enable_default_internet_access;
    bool m_enable_default_internet_access_isSet;
    bool m_enable_default_internet_access_isValid;

    OAICreateImageBuilderRequest_DomainJoinInfo m_domain_join_info;
    bool m_domain_join_info_isSet;
    bool m_domain_join_info_isValid;

    QString m_appstream_agent_version;
    bool m_appstream_agent_version_isSet;
    bool m_appstream_agent_version_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList m_access_endpoints;
    bool m_access_endpoints_isSet;
    bool m_access_endpoints_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateImageBuilderRequest)

#endif // OAICreateImageBuilderRequest_H
