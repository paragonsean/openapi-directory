/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAppBlockBuilderAppBlockAssociationsRequest.h
 *
 * 
 */

#ifndef OAIDescribeAppBlockBuilderAppBlockAssociationsRequest_H
#define OAIDescribeAppBlockBuilderAppBlockAssociationsRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeAppBlockBuilderAppBlockAssociationsRequest : public OAIObject {
public:
    OAIDescribeAppBlockBuilderAppBlockAssociationsRequest();
    OAIDescribeAppBlockBuilderAppBlockAssociationsRequest(QString json);
    ~OAIDescribeAppBlockBuilderAppBlockAssociationsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppBlockArn() const;
    void setAppBlockArn(const QString &app_block_arn);
    bool is_app_block_arn_Set() const;
    bool is_app_block_arn_Valid() const;

    QString getAppBlockBuilderName() const;
    void setAppBlockBuilderName(const QString &app_block_builder_name);
    bool is_app_block_builder_name_Set() const;
    bool is_app_block_builder_name_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_block_arn;
    bool m_app_block_arn_isSet;
    bool m_app_block_arn_isValid;

    QString m_app_block_builder_name;
    bool m_app_block_builder_name_isSet;
    bool m_app_block_builder_name_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAppBlockBuilderAppBlockAssociationsRequest)

#endif // OAIDescribeAppBlockBuilderAppBlockAssociationsRequest_H
