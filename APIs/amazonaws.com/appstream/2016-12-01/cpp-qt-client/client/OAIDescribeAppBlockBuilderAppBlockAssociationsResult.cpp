/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppBlockBuilderAppBlockAssociationsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppBlockBuilderAppBlockAssociationsResult::OAIDescribeAppBlockBuilderAppBlockAssociationsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppBlockBuilderAppBlockAssociationsResult::OAIDescribeAppBlockBuilderAppBlockAssociationsResult() {
    this->initializeModel();
}

OAIDescribeAppBlockBuilderAppBlockAssociationsResult::~OAIDescribeAppBlockBuilderAppBlockAssociationsResult() {}

void OAIDescribeAppBlockBuilderAppBlockAssociationsResult::initializeModel() {

    m_app_block_builder_app_block_associations_isSet = false;
    m_app_block_builder_app_block_associations_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIDescribeAppBlockBuilderAppBlockAssociationsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppBlockBuilderAppBlockAssociationsResult::fromJsonObject(QJsonObject json) {

    m_app_block_builder_app_block_associations_isValid = ::OpenAPI::fromJsonValue(m_app_block_builder_app_block_associations, json[QString("AppBlockBuilderAppBlockAssociations")]);
    m_app_block_builder_app_block_associations_isSet = !json[QString("AppBlockBuilderAppBlockAssociations")].isNull() && m_app_block_builder_app_block_associations_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIDescribeAppBlockBuilderAppBlockAssociationsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppBlockBuilderAppBlockAssociationsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_app_block_builder_app_block_associations.isSet()) {
        obj.insert(QString("AppBlockBuilderAppBlockAssociations"), ::OpenAPI::toJsonValue(m_app_block_builder_app_block_associations));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIDescribeAppBlockBuilderAppBlockAssociationsResult::getAppBlockBuilderAppBlockAssociations() const {
    return m_app_block_builder_app_block_associations;
}
void OAIDescribeAppBlockBuilderAppBlockAssociationsResult::setAppBlockBuilderAppBlockAssociations(const QList &app_block_builder_app_block_associations) {
    m_app_block_builder_app_block_associations = app_block_builder_app_block_associations;
    m_app_block_builder_app_block_associations_isSet = true;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::is_app_block_builder_app_block_associations_Set() const{
    return m_app_block_builder_app_block_associations_isSet;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::is_app_block_builder_app_block_associations_Valid() const{
    return m_app_block_builder_app_block_associations_isValid;
}

QString OAIDescribeAppBlockBuilderAppBlockAssociationsResult::getNextToken() const {
    return m_next_token;
}
void OAIDescribeAppBlockBuilderAppBlockAssociationsResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_block_builder_app_block_associations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppBlockBuilderAppBlockAssociationsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
