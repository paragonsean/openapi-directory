/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStorageConnector.h
 *
 * Describes a connector that enables persistent storage for users.
 */

#ifndef OAIStorageConnector_H
#define OAIStorageConnector_H

#include <QJsonObject>

#include "OAIStorageConnectorType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStorageConnector : public OAIObject {
public:
    OAIStorageConnector();
    OAIStorageConnector(QString json);
    ~OAIStorageConnector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStorageConnectorType getConnectorType() const;
    void setConnectorType(const OAIStorageConnectorType &connector_type);
    bool is_connector_type_Set() const;
    bool is_connector_type_Valid() const;

    QString getResourceIdentifier() const;
    void setResourceIdentifier(const QString &resource_identifier);
    bool is_resource_identifier_Set() const;
    bool is_resource_identifier_Valid() const;

    QList getDomains() const;
    void setDomains(const QList &domains);
    bool is_domains_Set() const;
    bool is_domains_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStorageConnectorType m_connector_type;
    bool m_connector_type_isSet;
    bool m_connector_type_isValid;

    QString m_resource_identifier;
    bool m_resource_identifier_isSet;
    bool m_resource_identifier_isValid;

    QList m_domains;
    bool m_domains_isSet;
    bool m_domains_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStorageConnector)

#endif // OAIStorageConnector_H
