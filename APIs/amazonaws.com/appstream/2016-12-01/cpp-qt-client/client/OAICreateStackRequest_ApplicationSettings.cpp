/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateStackRequest_ApplicationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateStackRequest_ApplicationSettings::OAICreateStackRequest_ApplicationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateStackRequest_ApplicationSettings::OAICreateStackRequest_ApplicationSettings() {
    this->initializeModel();
}

OAICreateStackRequest_ApplicationSettings::~OAICreateStackRequest_ApplicationSettings() {}

void OAICreateStackRequest_ApplicationSettings::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_settings_group_isSet = false;
    m_settings_group_isValid = false;
}

void OAICreateStackRequest_ApplicationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateStackRequest_ApplicationSettings::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_settings_group_isValid = ::OpenAPI::fromJsonValue(m_settings_group, json[QString("SettingsGroup")]);
    m_settings_group_isSet = !json[QString("SettingsGroup")].isNull() && m_settings_group_isValid;
}

QString OAICreateStackRequest_ApplicationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateStackRequest_ApplicationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_settings_group_isSet) {
        obj.insert(QString("SettingsGroup"), ::OpenAPI::toJsonValue(m_settings_group));
    }
    return obj;
}

bool OAICreateStackRequest_ApplicationSettings::getEnabled() const {
    return m_enabled;
}
void OAICreateStackRequest_ApplicationSettings::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAICreateStackRequest_ApplicationSettings::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAICreateStackRequest_ApplicationSettings::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAICreateStackRequest_ApplicationSettings::getSettingsGroup() const {
    return m_settings_group;
}
void OAICreateStackRequest_ApplicationSettings::setSettingsGroup(const QString &settings_group) {
    m_settings_group = settings_group;
    m_settings_group_isSet = true;
}

bool OAICreateStackRequest_ApplicationSettings::is_settings_group_Set() const{
    return m_settings_group_isSet;
}

bool OAICreateStackRequest_ApplicationSettings::is_settings_group_Valid() const{
    return m_settings_group_isValid;
}

bool OAICreateStackRequest_ApplicationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateStackRequest_ApplicationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
