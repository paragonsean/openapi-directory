/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComputeCapacityStatus.h
 *
 * Describes the capacity status for a fleet.
 */

#ifndef OAIComputeCapacityStatus_H
#define OAIComputeCapacityStatus_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComputeCapacityStatus : public OAIObject {
public:
    OAIComputeCapacityStatus();
    OAIComputeCapacityStatus(QString json);
    ~OAIComputeCapacityStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDesired() const;
    void setDesired(const qint32 &desired);
    bool is_desired_Set() const;
    bool is_desired_Valid() const;

    qint32 getRunning() const;
    void setRunning(const qint32 &running);
    bool is_running_Set() const;
    bool is_running_Valid() const;

    qint32 getInUse() const;
    void setInUse(const qint32 &in_use);
    bool is_in_use_Set() const;
    bool is_in_use_Valid() const;

    qint32 getAvailable() const;
    void setAvailable(const qint32 &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_desired;
    bool m_desired_isSet;
    bool m_desired_isValid;

    qint32 m_running;
    bool m_running_isSet;
    bool m_running_isValid;

    qint32 m_in_use;
    bool m_in_use_isSet;
    bool m_in_use_isValid;

    qint32 m_available;
    bool m_available_isSet;
    bool m_available_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComputeCapacityStatus)

#endif // OAIComputeCapacityStatus_H
