/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateFleetRequest_SessionScriptS3Location.h
 *
 * 
 */

#ifndef OAIUpdateFleetRequest_SessionScriptS3Location_H
#define OAIUpdateFleetRequest_SessionScriptS3Location_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateFleetRequest_SessionScriptS3Location : public OAIObject {
public:
    OAIUpdateFleetRequest_SessionScriptS3Location();
    OAIUpdateFleetRequest_SessionScriptS3Location(QString json);
    ~OAIUpdateFleetRequest_SessionScriptS3Location() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3Bucket() const;
    void setS3Bucket(const QString &s3_bucket);
    bool is_s3_bucket_Set() const;
    bool is_s3_bucket_Valid() const;

    QString getS3Key() const;
    void setS3Key(const QString &s3_key);
    bool is_s3_key_Set() const;
    bool is_s3_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket;
    bool m_s3_bucket_isSet;
    bool m_s3_bucket_isValid;

    QString m_s3_key;
    bool m_s3_key_isSet;
    bool m_s3_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateFleetRequest_SessionScriptS3Location)

#endif // OAIUpdateFleetRequest_SessionScriptS3Location_H
