/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateEntitlementResult_Entitlement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateEntitlementResult_Entitlement::OAICreateEntitlementResult_Entitlement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateEntitlementResult_Entitlement::OAICreateEntitlementResult_Entitlement() {
    this->initializeModel();
}

OAICreateEntitlementResult_Entitlement::~OAICreateEntitlementResult_Entitlement() {}

void OAICreateEntitlementResult_Entitlement::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_stack_name_isSet = false;
    m_stack_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_app_visibility_isSet = false;
    m_app_visibility_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAICreateEntitlementResult_Entitlement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateEntitlementResult_Entitlement::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_stack_name_isValid = ::OpenAPI::fromJsonValue(m_stack_name, json[QString("StackName")]);
    m_stack_name_isSet = !json[QString("StackName")].isNull() && m_stack_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_app_visibility_isValid = ::OpenAPI::fromJsonValue(m_app_visibility, json[QString("AppVisibility")]);
    m_app_visibility_isSet = !json[QString("AppVisibility")].isNull() && m_app_visibility_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("CreatedTime")]);
    m_created_time_isSet = !json[QString("CreatedTime")].isNull() && m_created_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAICreateEntitlementResult_Entitlement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateEntitlementResult_Entitlement::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_stack_name_isSet) {
        obj.insert(QString("StackName"), ::OpenAPI::toJsonValue(m_stack_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_app_visibility.isSet()) {
        obj.insert(QString("AppVisibility"), ::OpenAPI::toJsonValue(m_app_visibility));
    }
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_created_time_isSet) {
        obj.insert(QString("CreatedTime"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAICreateEntitlementResult_Entitlement::getName() const {
    return m_name;
}
void OAICreateEntitlementResult_Entitlement::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateEntitlementResult_Entitlement::getStackName() const {
    return m_stack_name;
}
void OAICreateEntitlementResult_Entitlement::setStackName(const QString &stack_name) {
    m_stack_name = stack_name;
    m_stack_name_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_stack_name_Set() const{
    return m_stack_name_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_stack_name_Valid() const{
    return m_stack_name_isValid;
}

QString OAICreateEntitlementResult_Entitlement::getDescription() const {
    return m_description;
}
void OAICreateEntitlementResult_Entitlement::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_description_Valid() const{
    return m_description_isValid;
}

OAIAppVisibility OAICreateEntitlementResult_Entitlement::getAppVisibility() const {
    return m_app_visibility;
}
void OAICreateEntitlementResult_Entitlement::setAppVisibility(const OAIAppVisibility &app_visibility) {
    m_app_visibility = app_visibility;
    m_app_visibility_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_app_visibility_Set() const{
    return m_app_visibility_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_app_visibility_Valid() const{
    return m_app_visibility_isValid;
}

QList OAICreateEntitlementResult_Entitlement::getAttributes() const {
    return m_attributes;
}
void OAICreateEntitlementResult_Entitlement::setAttributes(const QList &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QDateTime OAICreateEntitlementResult_Entitlement::getCreatedTime() const {
    return m_created_time;
}
void OAICreateEntitlementResult_Entitlement::setCreatedTime(const QDateTime &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QDateTime OAICreateEntitlementResult_Entitlement::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAICreateEntitlementResult_Entitlement::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAICreateEntitlementResult_Entitlement::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAICreateEntitlementResult_Entitlement::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAICreateEntitlementResult_Entitlement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stack_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_visibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateEntitlementResult_Entitlement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_stack_name_isValid && m_app_visibility_isValid && m_attributes_isValid && true;
}

} // namespace OpenAPI
