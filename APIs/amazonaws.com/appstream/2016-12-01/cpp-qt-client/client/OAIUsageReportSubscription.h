/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsageReportSubscription.h
 *
 * Describes information about the usage report subscription.
 */

#ifndef OAIUsageReportSubscription_H
#define OAIUsageReportSubscription_H

#include <QJsonObject>

#include "OAIUsageReportSchedule.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsageReportSubscription : public OAIObject {
public:
    OAIUsageReportSubscription();
    OAIUsageReportSubscription(QString json);
    ~OAIUsageReportSubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3BucketName() const;
    void setS3BucketName(const QString &s3_bucket_name);
    bool is_s3_bucket_name_Set() const;
    bool is_s3_bucket_name_Valid() const;

    OAIUsageReportSchedule getSchedule() const;
    void setSchedule(const OAIUsageReportSchedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QDateTime getLastGeneratedReportDate() const;
    void setLastGeneratedReportDate(const QDateTime &last_generated_report_date);
    bool is_last_generated_report_date_Set() const;
    bool is_last_generated_report_date_Valid() const;

    QList getSubscriptionErrors() const;
    void setSubscriptionErrors(const QList &subscription_errors);
    bool is_subscription_errors_Set() const;
    bool is_subscription_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket_name;
    bool m_s3_bucket_name_isSet;
    bool m_s3_bucket_name_isValid;

    OAIUsageReportSchedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QDateTime m_last_generated_report_date;
    bool m_last_generated_report_date_isSet;
    bool m_last_generated_report_date_isValid;

    QList m_subscription_errors;
    bool m_subscription_errors_isSet;
    bool m_subscription_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsageReportSubscription)

#endif // OAIUsageReportSubscription_H
