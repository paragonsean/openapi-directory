/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAppBlockRequest_SetupScriptDetails.h
 *
 * 
 */

#ifndef OAICreateAppBlockRequest_SetupScriptDetails_H
#define OAICreateAppBlockRequest_SetupScriptDetails_H

#include <QJsonObject>

#include "OAIScriptDetails_ScriptS3Location.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScriptDetails_ScriptS3Location;

class OAICreateAppBlockRequest_SetupScriptDetails : public OAIObject {
public:
    OAICreateAppBlockRequest_SetupScriptDetails();
    OAICreateAppBlockRequest_SetupScriptDetails(QString json);
    ~OAICreateAppBlockRequest_SetupScriptDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIScriptDetails_ScriptS3Location getScriptS3Location() const;
    void setScriptS3Location(const OAIScriptDetails_ScriptS3Location &script_s3_location);
    bool is_script_s3_location_Set() const;
    bool is_script_s3_location_Valid() const;

    QString getExecutablePath() const;
    void setExecutablePath(const QString &executable_path);
    bool is_executable_path_Set() const;
    bool is_executable_path_Valid() const;

    QString getExecutableParameters() const;
    void setExecutableParameters(const QString &executable_parameters);
    bool is_executable_parameters_Set() const;
    bool is_executable_parameters_Valid() const;

    qint32 getTimeoutInSeconds() const;
    void setTimeoutInSeconds(const qint32 &timeout_in_seconds);
    bool is_timeout_in_seconds_Set() const;
    bool is_timeout_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIScriptDetails_ScriptS3Location m_script_s3_location;
    bool m_script_s3_location_isSet;
    bool m_script_s3_location_isValid;

    QString m_executable_path;
    bool m_executable_path_isSet;
    bool m_executable_path_isValid;

    QString m_executable_parameters;
    bool m_executable_parameters_isSet;
    bool m_executable_parameters_isValid;

    qint32 m_timeout_in_seconds;
    bool m_timeout_in_seconds_isSet;
    bool m_timeout_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAppBlockRequest_SetupScriptDetails)

#endif // OAICreateAppBlockRequest_SetupScriptDetails_H
