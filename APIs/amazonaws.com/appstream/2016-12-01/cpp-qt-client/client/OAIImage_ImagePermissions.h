/**
 * Amazon AppStream
 * <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream 2.0 API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a fully managed, secure application streaming service that lets you stream desktop applications to users without rewriting applications. AppStream 2.0 manages the AWS resources that are required to host and run your applications, scales automatically, and provides access to your users on demand. </p> <note> <p>You can call the AppStream 2.0 API operations by using an interface VPC endpoint (interface endpoint). For more information, see <a href=\"https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html\">Access AppStream 2.0 API Operations and CLI Commands Through an Interface VPC Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p> </note> <p>To learn more about AppStream 2.0, see the following resources:</p> <ul> <li> <p> <a href=\"http://aws.amazon.com/appstream2\">Amazon AppStream 2.0 product page</a> </p> </li> <li> <p> <a href=\"http://aws.amazon.com/documentation/appstream2\">Amazon AppStream 2.0 documentation</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImage_ImagePermissions.h
 *
 * 
 */

#ifndef OAIImage_ImagePermissions_H
#define OAIImage_ImagePermissions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImage_ImagePermissions : public OAIObject {
public:
    OAIImage_ImagePermissions();
    OAIImage_ImagePermissions(QString json);
    ~OAIImage_ImagePermissions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getAllowFleet() const;
    void setAllowFleet(const bool &allow_fleet);
    bool is_allow_fleet_Set() const;
    bool is_allow_fleet_Valid() const;

    bool getAllowImageBuilder() const;
    void setAllowImageBuilder(const bool &allow_image_builder);
    bool is_allow_image_builder_Set() const;
    bool is_allow_image_builder_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_fleet;
    bool m_allow_fleet_isSet;
    bool m_allow_fleet_isValid;

    bool m_allow_image_builder;
    bool m_allow_image_builder_isSet;
    bool m_allow_image_builder_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImage_ImagePermissions)

#endif // OAIImage_ImagePermissions_H
