/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeAssetResponseAssetStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAssetResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAssetResponse {
  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_ASSET_ARN = "assetArn";
  @SerializedName(SERIALIZED_NAME_ASSET_ARN)
  private String assetArn;

  public static final String SERIALIZED_NAME_ASSET_NAME = "assetName";
  @SerializedName(SERIALIZED_NAME_ASSET_NAME)
  private String assetName;

  public static final String SERIALIZED_NAME_ASSET_MODEL_ID = "assetModelId";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_ID)
  private String assetModelId;

  public static final String SERIALIZED_NAME_ASSET_PROPERTIES = "assetProperties";
  @SerializedName(SERIALIZED_NAME_ASSET_PROPERTIES)
  private List assetProperties;

  public static final String SERIALIZED_NAME_ASSET_HIERARCHIES = "assetHierarchies";
  @SerializedName(SERIALIZED_NAME_ASSET_HIERARCHIES)
  private List assetHierarchies;

  public static final String SERIALIZED_NAME_ASSET_COMPOSITE_MODELS = "assetCompositeModels";
  @SerializedName(SERIALIZED_NAME_ASSET_COMPOSITE_MODELS)
  private List assetCompositeModels;

  public static final String SERIALIZED_NAME_ASSET_CREATION_DATE = "assetCreationDate";
  @SerializedName(SERIALIZED_NAME_ASSET_CREATION_DATE)
  private OffsetDateTime assetCreationDate;

  public static final String SERIALIZED_NAME_ASSET_LAST_UPDATE_DATE = "assetLastUpdateDate";
  @SerializedName(SERIALIZED_NAME_ASSET_LAST_UPDATE_DATE)
  private OffsetDateTime assetLastUpdateDate;

  public static final String SERIALIZED_NAME_ASSET_STATUS = "assetStatus";
  @SerializedName(SERIALIZED_NAME_ASSET_STATUS)
  private DescribeAssetResponseAssetStatus assetStatus;

  public static final String SERIALIZED_NAME_ASSET_DESCRIPTION = "assetDescription";
  @SerializedName(SERIALIZED_NAME_ASSET_DESCRIPTION)
  private String assetDescription;

  public DescribeAssetResponse() {
  }

  public DescribeAssetResponse assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Get assetId
   * @return assetId
   */
  @javax.annotation.Nonnull
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public DescribeAssetResponse assetArn(String assetArn) {
    this.assetArn = assetArn;
    return this;
  }

  /**
   * Get assetArn
   * @return assetArn
   */
  @javax.annotation.Nonnull
  public String getAssetArn() {
    return assetArn;
  }

  public void setAssetArn(String assetArn) {
    this.assetArn = assetArn;
  }


  public DescribeAssetResponse assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

  /**
   * Get assetName
   * @return assetName
   */
  @javax.annotation.Nonnull
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }


  public DescribeAssetResponse assetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
    return this;
  }

  /**
   * Get assetModelId
   * @return assetModelId
   */
  @javax.annotation.Nonnull
  public String getAssetModelId() {
    return assetModelId;
  }

  public void setAssetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
  }


  public DescribeAssetResponse assetProperties(List assetProperties) {
    this.assetProperties = assetProperties;
    return this;
  }

  /**
   * Get assetProperties
   * @return assetProperties
   */
  @javax.annotation.Nonnull
  public List getAssetProperties() {
    return assetProperties;
  }

  public void setAssetProperties(List assetProperties) {
    this.assetProperties = assetProperties;
  }


  public DescribeAssetResponse assetHierarchies(List assetHierarchies) {
    this.assetHierarchies = assetHierarchies;
    return this;
  }

  /**
   * Get assetHierarchies
   * @return assetHierarchies
   */
  @javax.annotation.Nonnull
  public List getAssetHierarchies() {
    return assetHierarchies;
  }

  public void setAssetHierarchies(List assetHierarchies) {
    this.assetHierarchies = assetHierarchies;
  }


  public DescribeAssetResponse assetCompositeModels(List assetCompositeModels) {
    this.assetCompositeModels = assetCompositeModels;
    return this;
  }

  /**
   * Get assetCompositeModels
   * @return assetCompositeModels
   */
  @javax.annotation.Nullable
  public List getAssetCompositeModels() {
    return assetCompositeModels;
  }

  public void setAssetCompositeModels(List assetCompositeModels) {
    this.assetCompositeModels = assetCompositeModels;
  }


  public DescribeAssetResponse assetCreationDate(OffsetDateTime assetCreationDate) {
    this.assetCreationDate = assetCreationDate;
    return this;
  }

  /**
   * Get assetCreationDate
   * @return assetCreationDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAssetCreationDate() {
    return assetCreationDate;
  }

  public void setAssetCreationDate(OffsetDateTime assetCreationDate) {
    this.assetCreationDate = assetCreationDate;
  }


  public DescribeAssetResponse assetLastUpdateDate(OffsetDateTime assetLastUpdateDate) {
    this.assetLastUpdateDate = assetLastUpdateDate;
    return this;
  }

  /**
   * Get assetLastUpdateDate
   * @return assetLastUpdateDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAssetLastUpdateDate() {
    return assetLastUpdateDate;
  }

  public void setAssetLastUpdateDate(OffsetDateTime assetLastUpdateDate) {
    this.assetLastUpdateDate = assetLastUpdateDate;
  }


  public DescribeAssetResponse assetStatus(DescribeAssetResponseAssetStatus assetStatus) {
    this.assetStatus = assetStatus;
    return this;
  }

  /**
   * Get assetStatus
   * @return assetStatus
   */
  @javax.annotation.Nonnull
  public DescribeAssetResponseAssetStatus getAssetStatus() {
    return assetStatus;
  }

  public void setAssetStatus(DescribeAssetResponseAssetStatus assetStatus) {
    this.assetStatus = assetStatus;
  }


  public DescribeAssetResponse assetDescription(String assetDescription) {
    this.assetDescription = assetDescription;
    return this;
  }

  /**
   * Get assetDescription
   * @return assetDescription
   */
  @javax.annotation.Nullable
  public String getAssetDescription() {
    return assetDescription;
  }

  public void setAssetDescription(String assetDescription) {
    this.assetDescription = assetDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAssetResponse describeAssetResponse = (DescribeAssetResponse) o;
    return Objects.equals(this.assetId, describeAssetResponse.assetId) &&
        Objects.equals(this.assetArn, describeAssetResponse.assetArn) &&
        Objects.equals(this.assetName, describeAssetResponse.assetName) &&
        Objects.equals(this.assetModelId, describeAssetResponse.assetModelId) &&
        Objects.equals(this.assetProperties, describeAssetResponse.assetProperties) &&
        Objects.equals(this.assetHierarchies, describeAssetResponse.assetHierarchies) &&
        Objects.equals(this.assetCompositeModels, describeAssetResponse.assetCompositeModels) &&
        Objects.equals(this.assetCreationDate, describeAssetResponse.assetCreationDate) &&
        Objects.equals(this.assetLastUpdateDate, describeAssetResponse.assetLastUpdateDate) &&
        Objects.equals(this.assetStatus, describeAssetResponse.assetStatus) &&
        Objects.equals(this.assetDescription, describeAssetResponse.assetDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetId, assetArn, assetName, assetModelId, assetProperties, assetHierarchies, assetCompositeModels, assetCreationDate, assetLastUpdateDate, assetStatus, assetDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAssetResponse {\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetArn: ").append(toIndentedString(assetArn)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    assetModelId: ").append(toIndentedString(assetModelId)).append("\n");
    sb.append("    assetProperties: ").append(toIndentedString(assetProperties)).append("\n");
    sb.append("    assetHierarchies: ").append(toIndentedString(assetHierarchies)).append("\n");
    sb.append("    assetCompositeModels: ").append(toIndentedString(assetCompositeModels)).append("\n");
    sb.append("    assetCreationDate: ").append(toIndentedString(assetCreationDate)).append("\n");
    sb.append("    assetLastUpdateDate: ").append(toIndentedString(assetLastUpdateDate)).append("\n");
    sb.append("    assetStatus: ").append(toIndentedString(assetStatus)).append("\n");
    sb.append("    assetDescription: ").append(toIndentedString(assetDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetId");
    openapiFields.add("assetArn");
    openapiFields.add("assetName");
    openapiFields.add("assetModelId");
    openapiFields.add("assetProperties");
    openapiFields.add("assetHierarchies");
    openapiFields.add("assetCompositeModels");
    openapiFields.add("assetCreationDate");
    openapiFields.add("assetLastUpdateDate");
    openapiFields.add("assetStatus");
    openapiFields.add("assetDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assetId");
    openapiRequiredFields.add("assetArn");
    openapiRequiredFields.add("assetName");
    openapiRequiredFields.add("assetModelId");
    openapiRequiredFields.add("assetProperties");
    openapiRequiredFields.add("assetHierarchies");
    openapiRequiredFields.add("assetCreationDate");
    openapiRequiredFields.add("assetLastUpdateDate");
    openapiRequiredFields.add("assetStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAssetResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAssetResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAssetResponse is not found in the empty JSON string", DescribeAssetResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAssetResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAssetResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAssetResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `assetId`
      String.validateJsonElement(jsonObj.get("assetId"));
      // validate the required field `assetArn`
      String.validateJsonElement(jsonObj.get("assetArn"));
      // validate the required field `assetName`
      String.validateJsonElement(jsonObj.get("assetName"));
      // validate the required field `assetModelId`
      String.validateJsonElement(jsonObj.get("assetModelId"));
      // validate the required field `assetProperties`
      List.validateJsonElement(jsonObj.get("assetProperties"));
      // validate the required field `assetHierarchies`
      List.validateJsonElement(jsonObj.get("assetHierarchies"));
      // validate the optional field `assetCompositeModels`
      if (jsonObj.get("assetCompositeModels") != null && !jsonObj.get("assetCompositeModels").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("assetCompositeModels"));
      }
      // validate the required field `assetCreationDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("assetCreationDate"));
      // validate the required field `assetLastUpdateDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("assetLastUpdateDate"));
      // validate the required field `assetStatus`
      DescribeAssetResponseAssetStatus.validateJsonElement(jsonObj.get("assetStatus"));
      // validate the optional field `assetDescription`
      if (jsonObj.get("assetDescription") != null && !jsonObj.get("assetDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assetDescription"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAssetResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAssetResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAssetResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAssetResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAssetResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAssetResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAssetResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAssetResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAssetResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAssetResponse
   */
  public static DescribeAssetResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAssetResponse.class);
  }

  /**
   * Convert an instance of DescribeAssetResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

