/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DescribeAccessPolicyResponseAccessPolicyIdentity;
import org.openapitools.client.model.DescribeAccessPolicyResponseAccessPolicyResource;
import org.openapitools.client.model.Permission;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAccessPolicyResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAccessPolicyResponse {
  public static final String SERIALIZED_NAME_ACCESS_POLICY_ID = "accessPolicyId";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_ID)
  private String accessPolicyId;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_ARN = "accessPolicyArn";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_ARN)
  private String accessPolicyArn;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_IDENTITY = "accessPolicyIdentity";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_IDENTITY)
  private DescribeAccessPolicyResponseAccessPolicyIdentity accessPolicyIdentity;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_RESOURCE = "accessPolicyResource";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_RESOURCE)
  private DescribeAccessPolicyResponseAccessPolicyResource accessPolicyResource;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_PERMISSION = "accessPolicyPermission";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_PERMISSION)
  private Permission accessPolicyPermission;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_CREATION_DATE = "accessPolicyCreationDate";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_CREATION_DATE)
  private OffsetDateTime accessPolicyCreationDate;

  public static final String SERIALIZED_NAME_ACCESS_POLICY_LAST_UPDATE_DATE = "accessPolicyLastUpdateDate";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICY_LAST_UPDATE_DATE)
  private OffsetDateTime accessPolicyLastUpdateDate;

  public DescribeAccessPolicyResponse() {
  }

  public DescribeAccessPolicyResponse accessPolicyId(String accessPolicyId) {
    this.accessPolicyId = accessPolicyId;
    return this;
  }

  /**
   * Get accessPolicyId
   * @return accessPolicyId
   */
  @javax.annotation.Nonnull
  public String getAccessPolicyId() {
    return accessPolicyId;
  }

  public void setAccessPolicyId(String accessPolicyId) {
    this.accessPolicyId = accessPolicyId;
  }


  public DescribeAccessPolicyResponse accessPolicyArn(String accessPolicyArn) {
    this.accessPolicyArn = accessPolicyArn;
    return this;
  }

  /**
   * Get accessPolicyArn
   * @return accessPolicyArn
   */
  @javax.annotation.Nonnull
  public String getAccessPolicyArn() {
    return accessPolicyArn;
  }

  public void setAccessPolicyArn(String accessPolicyArn) {
    this.accessPolicyArn = accessPolicyArn;
  }


  public DescribeAccessPolicyResponse accessPolicyIdentity(DescribeAccessPolicyResponseAccessPolicyIdentity accessPolicyIdentity) {
    this.accessPolicyIdentity = accessPolicyIdentity;
    return this;
  }

  /**
   * Get accessPolicyIdentity
   * @return accessPolicyIdentity
   */
  @javax.annotation.Nonnull
  public DescribeAccessPolicyResponseAccessPolicyIdentity getAccessPolicyIdentity() {
    return accessPolicyIdentity;
  }

  public void setAccessPolicyIdentity(DescribeAccessPolicyResponseAccessPolicyIdentity accessPolicyIdentity) {
    this.accessPolicyIdentity = accessPolicyIdentity;
  }


  public DescribeAccessPolicyResponse accessPolicyResource(DescribeAccessPolicyResponseAccessPolicyResource accessPolicyResource) {
    this.accessPolicyResource = accessPolicyResource;
    return this;
  }

  /**
   * Get accessPolicyResource
   * @return accessPolicyResource
   */
  @javax.annotation.Nonnull
  public DescribeAccessPolicyResponseAccessPolicyResource getAccessPolicyResource() {
    return accessPolicyResource;
  }

  public void setAccessPolicyResource(DescribeAccessPolicyResponseAccessPolicyResource accessPolicyResource) {
    this.accessPolicyResource = accessPolicyResource;
  }


  public DescribeAccessPolicyResponse accessPolicyPermission(Permission accessPolicyPermission) {
    this.accessPolicyPermission = accessPolicyPermission;
    return this;
  }

  /**
   * Get accessPolicyPermission
   * @return accessPolicyPermission
   */
  @javax.annotation.Nonnull
  public Permission getAccessPolicyPermission() {
    return accessPolicyPermission;
  }

  public void setAccessPolicyPermission(Permission accessPolicyPermission) {
    this.accessPolicyPermission = accessPolicyPermission;
  }


  public DescribeAccessPolicyResponse accessPolicyCreationDate(OffsetDateTime accessPolicyCreationDate) {
    this.accessPolicyCreationDate = accessPolicyCreationDate;
    return this;
  }

  /**
   * Get accessPolicyCreationDate
   * @return accessPolicyCreationDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAccessPolicyCreationDate() {
    return accessPolicyCreationDate;
  }

  public void setAccessPolicyCreationDate(OffsetDateTime accessPolicyCreationDate) {
    this.accessPolicyCreationDate = accessPolicyCreationDate;
  }


  public DescribeAccessPolicyResponse accessPolicyLastUpdateDate(OffsetDateTime accessPolicyLastUpdateDate) {
    this.accessPolicyLastUpdateDate = accessPolicyLastUpdateDate;
    return this;
  }

  /**
   * Get accessPolicyLastUpdateDate
   * @return accessPolicyLastUpdateDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAccessPolicyLastUpdateDate() {
    return accessPolicyLastUpdateDate;
  }

  public void setAccessPolicyLastUpdateDate(OffsetDateTime accessPolicyLastUpdateDate) {
    this.accessPolicyLastUpdateDate = accessPolicyLastUpdateDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAccessPolicyResponse describeAccessPolicyResponse = (DescribeAccessPolicyResponse) o;
    return Objects.equals(this.accessPolicyId, describeAccessPolicyResponse.accessPolicyId) &&
        Objects.equals(this.accessPolicyArn, describeAccessPolicyResponse.accessPolicyArn) &&
        Objects.equals(this.accessPolicyIdentity, describeAccessPolicyResponse.accessPolicyIdentity) &&
        Objects.equals(this.accessPolicyResource, describeAccessPolicyResponse.accessPolicyResource) &&
        Objects.equals(this.accessPolicyPermission, describeAccessPolicyResponse.accessPolicyPermission) &&
        Objects.equals(this.accessPolicyCreationDate, describeAccessPolicyResponse.accessPolicyCreationDate) &&
        Objects.equals(this.accessPolicyLastUpdateDate, describeAccessPolicyResponse.accessPolicyLastUpdateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessPolicyId, accessPolicyArn, accessPolicyIdentity, accessPolicyResource, accessPolicyPermission, accessPolicyCreationDate, accessPolicyLastUpdateDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAccessPolicyResponse {\n");
    sb.append("    accessPolicyId: ").append(toIndentedString(accessPolicyId)).append("\n");
    sb.append("    accessPolicyArn: ").append(toIndentedString(accessPolicyArn)).append("\n");
    sb.append("    accessPolicyIdentity: ").append(toIndentedString(accessPolicyIdentity)).append("\n");
    sb.append("    accessPolicyResource: ").append(toIndentedString(accessPolicyResource)).append("\n");
    sb.append("    accessPolicyPermission: ").append(toIndentedString(accessPolicyPermission)).append("\n");
    sb.append("    accessPolicyCreationDate: ").append(toIndentedString(accessPolicyCreationDate)).append("\n");
    sb.append("    accessPolicyLastUpdateDate: ").append(toIndentedString(accessPolicyLastUpdateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessPolicyId");
    openapiFields.add("accessPolicyArn");
    openapiFields.add("accessPolicyIdentity");
    openapiFields.add("accessPolicyResource");
    openapiFields.add("accessPolicyPermission");
    openapiFields.add("accessPolicyCreationDate");
    openapiFields.add("accessPolicyLastUpdateDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accessPolicyId");
    openapiRequiredFields.add("accessPolicyArn");
    openapiRequiredFields.add("accessPolicyIdentity");
    openapiRequiredFields.add("accessPolicyResource");
    openapiRequiredFields.add("accessPolicyPermission");
    openapiRequiredFields.add("accessPolicyCreationDate");
    openapiRequiredFields.add("accessPolicyLastUpdateDate");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAccessPolicyResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAccessPolicyResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAccessPolicyResponse is not found in the empty JSON string", DescribeAccessPolicyResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAccessPolicyResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAccessPolicyResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAccessPolicyResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `accessPolicyId`
      String.validateJsonElement(jsonObj.get("accessPolicyId"));
      // validate the required field `accessPolicyArn`
      String.validateJsonElement(jsonObj.get("accessPolicyArn"));
      // validate the required field `accessPolicyIdentity`
      DescribeAccessPolicyResponseAccessPolicyIdentity.validateJsonElement(jsonObj.get("accessPolicyIdentity"));
      // validate the required field `accessPolicyResource`
      DescribeAccessPolicyResponseAccessPolicyResource.validateJsonElement(jsonObj.get("accessPolicyResource"));
      // validate the required field `accessPolicyPermission`
      Permission.validateJsonElement(jsonObj.get("accessPolicyPermission"));
      // validate the required field `accessPolicyCreationDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("accessPolicyCreationDate"));
      // validate the required field `accessPolicyLastUpdateDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("accessPolicyLastUpdateDate"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAccessPolicyResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAccessPolicyResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAccessPolicyResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAccessPolicyResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAccessPolicyResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAccessPolicyResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAccessPolicyResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAccessPolicyResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAccessPolicyResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAccessPolicyResponse
   */
  public static DescribeAccessPolicyResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAccessPolicyResponse.class);
  }

  /**
   * Convert an instance of DescribeAccessPolicyResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

