/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreatePortalRequestAlarms;
import org.openapitools.client.model.CreatePortalRequestPortalLogoImageFile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePortalRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePortalRequest {
  public static final String SERIALIZED_NAME_PORTAL_NAME = "portalName";
  @SerializedName(SERIALIZED_NAME_PORTAL_NAME)
  private String portalName;

  public static final String SERIALIZED_NAME_PORTAL_DESCRIPTION = "portalDescription";
  @SerializedName(SERIALIZED_NAME_PORTAL_DESCRIPTION)
  private String portalDescription;

  public static final String SERIALIZED_NAME_PORTAL_CONTACT_EMAIL = "portalContactEmail";
  @SerializedName(SERIALIZED_NAME_PORTAL_CONTACT_EMAIL)
  private String portalContactEmail;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_PORTAL_LOGO_IMAGE_FILE = "portalLogoImageFile";
  @SerializedName(SERIALIZED_NAME_PORTAL_LOGO_IMAGE_FILE)
  private CreatePortalRequestPortalLogoImageFile portalLogoImageFile;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  /**
   * &lt;p&gt;The service to use to authenticate users to the portal. Choose from the following options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SSO&lt;/code&gt; – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso\&quot;&gt;Enabling IAM Identity Center&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;. This option is only available in Amazon Web Services Regions other than the China Regions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IAM&lt;/code&gt; – The portal uses Identity and Access Management to authenticate users and manage user permissions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can&#39;t change this value after you create a portal.&lt;/p&gt; &lt;p&gt;Default: &lt;code&gt;SSO&lt;/code&gt; &lt;/p&gt;
   */
  @JsonAdapter(PortalAuthModeEnum.Adapter.class)
  public enum PortalAuthModeEnum {
    IAM("IAM"),
    
    SSO("SSO");

    private String value;

    PortalAuthModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PortalAuthModeEnum fromValue(String value) {
      for (PortalAuthModeEnum b : PortalAuthModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PortalAuthModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PortalAuthModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PortalAuthModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PortalAuthModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PortalAuthModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PORTAL_AUTH_MODE = "portalAuthMode";
  @SerializedName(SERIALIZED_NAME_PORTAL_AUTH_MODE)
  private PortalAuthModeEnum portalAuthMode;

  public static final String SERIALIZED_NAME_NOTIFICATION_SENDER_EMAIL = "notificationSenderEmail";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_SENDER_EMAIL)
  private String notificationSenderEmail;

  public static final String SERIALIZED_NAME_ALARMS = "alarms";
  @SerializedName(SERIALIZED_NAME_ALARMS)
  private CreatePortalRequestAlarms alarms;

  public CreatePortalRequest() {
  }

  public CreatePortalRequest portalName(String portalName) {
    this.portalName = portalName;
    return this;
  }

  /**
   * A friendly name for the portal.
   * @return portalName
   */
  @javax.annotation.Nonnull
  public String getPortalName() {
    return portalName;
  }

  public void setPortalName(String portalName) {
    this.portalName = portalName;
  }


  public CreatePortalRequest portalDescription(String portalDescription) {
    this.portalDescription = portalDescription;
    return this;
  }

  /**
   * A description for the portal.
   * @return portalDescription
   */
  @javax.annotation.Nullable
  public String getPortalDescription() {
    return portalDescription;
  }

  public void setPortalDescription(String portalDescription) {
    this.portalDescription = portalDescription;
  }


  public CreatePortalRequest portalContactEmail(String portalContactEmail) {
    this.portalContactEmail = portalContactEmail;
    return this;
  }

  /**
   * The Amazon Web Services administrator&#39;s contact email address.
   * @return portalContactEmail
   */
  @javax.annotation.Nonnull
  public String getPortalContactEmail() {
    return portalContactEmail;
  }

  public void setPortalContactEmail(String portalContactEmail) {
    this.portalContactEmail = portalContactEmail;
  }


  public CreatePortalRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don&#39;t reuse this client token if a new idempotent request is required.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreatePortalRequest portalLogoImageFile(CreatePortalRequestPortalLogoImageFile portalLogoImageFile) {
    this.portalLogoImageFile = portalLogoImageFile;
    return this;
  }

  /**
   * Get portalLogoImageFile
   * @return portalLogoImageFile
   */
  @javax.annotation.Nullable
  public CreatePortalRequestPortalLogoImageFile getPortalLogoImageFile() {
    return portalLogoImageFile;
  }

  public void setPortalLogoImageFile(CreatePortalRequestPortalLogoImageFile portalLogoImageFile) {
    this.portalLogoImageFile = portalLogoImageFile;
  }


  public CreatePortalRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * The &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt;ARN&lt;/a&gt; of a service role that allows the portal&#39;s users to access your IoT SiteWise resources on your behalf. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html\&quot;&gt;Using service roles for IoT SiteWise Monitor&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreatePortalRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreatePortalRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * A list of key-value pairs that contain metadata for the portal. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html\&quot;&gt;Tagging your IoT SiteWise resources&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public CreatePortalRequest portalAuthMode(PortalAuthModeEnum portalAuthMode) {
    this.portalAuthMode = portalAuthMode;
    return this;
  }

  /**
   * &lt;p&gt;The service to use to authenticate users to the portal. Choose from the following options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SSO&lt;/code&gt; – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso\&quot;&gt;Enabling IAM Identity Center&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;. This option is only available in Amazon Web Services Regions other than the China Regions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IAM&lt;/code&gt; – The portal uses Identity and Access Management to authenticate users and manage user permissions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can&#39;t change this value after you create a portal.&lt;/p&gt; &lt;p&gt;Default: &lt;code&gt;SSO&lt;/code&gt; &lt;/p&gt;
   * @return portalAuthMode
   */
  @javax.annotation.Nullable
  public PortalAuthModeEnum getPortalAuthMode() {
    return portalAuthMode;
  }

  public void setPortalAuthMode(PortalAuthModeEnum portalAuthMode) {
    this.portalAuthMode = portalAuthMode;
  }


  public CreatePortalRequest notificationSenderEmail(String notificationSenderEmail) {
    this.notificationSenderEmail = notificationSenderEmail;
    return this;
  }

  /**
   * &lt;p&gt;The email address that sends alarm notifications.&lt;/p&gt; &lt;important&gt; &lt;p&gt;If you use the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html\&quot;&gt;IoT Events managed Lambda function&lt;/a&gt; to manage your emails, you must &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html\&quot;&gt;verify the sender email address in Amazon SES&lt;/a&gt;.&lt;/p&gt; &lt;/important&gt;
   * @return notificationSenderEmail
   */
  @javax.annotation.Nullable
  public String getNotificationSenderEmail() {
    return notificationSenderEmail;
  }

  public void setNotificationSenderEmail(String notificationSenderEmail) {
    this.notificationSenderEmail = notificationSenderEmail;
  }


  public CreatePortalRequest alarms(CreatePortalRequestAlarms alarms) {
    this.alarms = alarms;
    return this;
  }

  /**
   * Get alarms
   * @return alarms
   */
  @javax.annotation.Nullable
  public CreatePortalRequestAlarms getAlarms() {
    return alarms;
  }

  public void setAlarms(CreatePortalRequestAlarms alarms) {
    this.alarms = alarms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePortalRequest createPortalRequest = (CreatePortalRequest) o;
    return Objects.equals(this.portalName, createPortalRequest.portalName) &&
        Objects.equals(this.portalDescription, createPortalRequest.portalDescription) &&
        Objects.equals(this.portalContactEmail, createPortalRequest.portalContactEmail) &&
        Objects.equals(this.clientToken, createPortalRequest.clientToken) &&
        Objects.equals(this.portalLogoImageFile, createPortalRequest.portalLogoImageFile) &&
        Objects.equals(this.roleArn, createPortalRequest.roleArn) &&
        Objects.equals(this.tags, createPortalRequest.tags) &&
        Objects.equals(this.portalAuthMode, createPortalRequest.portalAuthMode) &&
        Objects.equals(this.notificationSenderEmail, createPortalRequest.notificationSenderEmail) &&
        Objects.equals(this.alarms, createPortalRequest.alarms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portalName, portalDescription, portalContactEmail, clientToken, portalLogoImageFile, roleArn, tags, portalAuthMode, notificationSenderEmail, alarms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePortalRequest {\n");
    sb.append("    portalName: ").append(toIndentedString(portalName)).append("\n");
    sb.append("    portalDescription: ").append(toIndentedString(portalDescription)).append("\n");
    sb.append("    portalContactEmail: ").append(toIndentedString(portalContactEmail)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    portalLogoImageFile: ").append(toIndentedString(portalLogoImageFile)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    portalAuthMode: ").append(toIndentedString(portalAuthMode)).append("\n");
    sb.append("    notificationSenderEmail: ").append(toIndentedString(notificationSenderEmail)).append("\n");
    sb.append("    alarms: ").append(toIndentedString(alarms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("portalName");
    openapiFields.add("portalDescription");
    openapiFields.add("portalContactEmail");
    openapiFields.add("clientToken");
    openapiFields.add("portalLogoImageFile");
    openapiFields.add("roleArn");
    openapiFields.add("tags");
    openapiFields.add("portalAuthMode");
    openapiFields.add("notificationSenderEmail");
    openapiFields.add("alarms");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("portalName");
    openapiRequiredFields.add("portalContactEmail");
    openapiRequiredFields.add("roleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePortalRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePortalRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePortalRequest is not found in the empty JSON string", CreatePortalRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePortalRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePortalRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreatePortalRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("portalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portalName").toString()));
      }
      if ((jsonObj.get("portalDescription") != null && !jsonObj.get("portalDescription").isJsonNull()) && !jsonObj.get("portalDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portalDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portalDescription").toString()));
      }
      if (!jsonObj.get("portalContactEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portalContactEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portalContactEmail").toString()));
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      // validate the optional field `portalLogoImageFile`
      if (jsonObj.get("portalLogoImageFile") != null && !jsonObj.get("portalLogoImageFile").isJsonNull()) {
        CreatePortalRequestPortalLogoImageFile.validateJsonElement(jsonObj.get("portalLogoImageFile"));
      }
      if (!jsonObj.get("roleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleArn").toString()));
      }
      if ((jsonObj.get("portalAuthMode") != null && !jsonObj.get("portalAuthMode").isJsonNull()) && !jsonObj.get("portalAuthMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portalAuthMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portalAuthMode").toString()));
      }
      // validate the optional field `portalAuthMode`
      if (jsonObj.get("portalAuthMode") != null && !jsonObj.get("portalAuthMode").isJsonNull()) {
        PortalAuthModeEnum.validateJsonElement(jsonObj.get("portalAuthMode"));
      }
      if ((jsonObj.get("notificationSenderEmail") != null && !jsonObj.get("notificationSenderEmail").isJsonNull()) && !jsonObj.get("notificationSenderEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notificationSenderEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notificationSenderEmail").toString()));
      }
      // validate the optional field `alarms`
      if (jsonObj.get("alarms") != null && !jsonObj.get("alarms").isJsonNull()) {
        CreatePortalRequestAlarms.validateJsonElement(jsonObj.get("alarms"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePortalRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePortalRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePortalRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePortalRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePortalRequest>() {
           @Override
           public void write(JsonWriter out, CreatePortalRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePortalRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePortalRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePortalRequest
   * @throws IOException if the JSON string is invalid with respect to CreatePortalRequest
   */
  public static CreatePortalRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePortalRequest.class);
  }

  /**
   * Convert an instance of CreatePortalRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

