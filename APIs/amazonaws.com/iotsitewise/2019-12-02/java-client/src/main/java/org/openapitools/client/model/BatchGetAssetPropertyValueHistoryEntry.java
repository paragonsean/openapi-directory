/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TimeOrdering;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Contains information for an asset property historical value entry that is associated with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html\&quot;&gt;BatchGetAssetPropertyValueHistory&lt;/a&gt; API.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchGetAssetPropertyValueHistoryEntry {
  public static final String SERIALIZED_NAME_ENTRY_ID = "entryId";
  @SerializedName(SERIALIZED_NAME_ENTRY_ID)
  private String entryId;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "propertyId";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private String propertyId;

  public static final String SERIALIZED_NAME_PROPERTY_ALIAS = "propertyAlias";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ALIAS)
  private String propertyAlias;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_QUALITIES = "qualities";
  @SerializedName(SERIALIZED_NAME_QUALITIES)
  private List qualities;

  public static final String SERIALIZED_NAME_TIME_ORDERING = "timeOrdering";
  @SerializedName(SERIALIZED_NAME_TIME_ORDERING)
  private TimeOrdering timeOrdering;

  public BatchGetAssetPropertyValueHistoryEntry() {
  }

  public BatchGetAssetPropertyValueHistoryEntry entryId(String entryId) {
    this.entryId = entryId;
    return this;
  }

  /**
   * Get entryId
   * @return entryId
   */
  @javax.annotation.Nonnull
  public String getEntryId() {
    return entryId;
  }

  public void setEntryId(String entryId) {
    this.entryId = entryId;
  }


  public BatchGetAssetPropertyValueHistoryEntry assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Get assetId
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public BatchGetAssetPropertyValueHistoryEntry propertyId(String propertyId) {
    this.propertyId = propertyId;
    return this;
  }

  /**
   * Get propertyId
   * @return propertyId
   */
  @javax.annotation.Nullable
  public String getPropertyId() {
    return propertyId;
  }

  public void setPropertyId(String propertyId) {
    this.propertyId = propertyId;
  }


  public BatchGetAssetPropertyValueHistoryEntry propertyAlias(String propertyAlias) {
    this.propertyAlias = propertyAlias;
    return this;
  }

  /**
   * Get propertyAlias
   * @return propertyAlias
   */
  @javax.annotation.Nullable
  public String getPropertyAlias() {
    return propertyAlias;
  }

  public void setPropertyAlias(String propertyAlias) {
    this.propertyAlias = propertyAlias;
  }


  public BatchGetAssetPropertyValueHistoryEntry startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public BatchGetAssetPropertyValueHistoryEntry endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public BatchGetAssetPropertyValueHistoryEntry qualities(List qualities) {
    this.qualities = qualities;
    return this;
  }

  /**
   * Get qualities
   * @return qualities
   */
  @javax.annotation.Nullable
  public List getQualities() {
    return qualities;
  }

  public void setQualities(List qualities) {
    this.qualities = qualities;
  }


  public BatchGetAssetPropertyValueHistoryEntry timeOrdering(TimeOrdering timeOrdering) {
    this.timeOrdering = timeOrdering;
    return this;
  }

  /**
   * Get timeOrdering
   * @return timeOrdering
   */
  @javax.annotation.Nullable
  public TimeOrdering getTimeOrdering() {
    return timeOrdering;
  }

  public void setTimeOrdering(TimeOrdering timeOrdering) {
    this.timeOrdering = timeOrdering;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchGetAssetPropertyValueHistoryEntry batchGetAssetPropertyValueHistoryEntry = (BatchGetAssetPropertyValueHistoryEntry) o;
    return Objects.equals(this.entryId, batchGetAssetPropertyValueHistoryEntry.entryId) &&
        Objects.equals(this.assetId, batchGetAssetPropertyValueHistoryEntry.assetId) &&
        Objects.equals(this.propertyId, batchGetAssetPropertyValueHistoryEntry.propertyId) &&
        Objects.equals(this.propertyAlias, batchGetAssetPropertyValueHistoryEntry.propertyAlias) &&
        Objects.equals(this.startDate, batchGetAssetPropertyValueHistoryEntry.startDate) &&
        Objects.equals(this.endDate, batchGetAssetPropertyValueHistoryEntry.endDate) &&
        Objects.equals(this.qualities, batchGetAssetPropertyValueHistoryEntry.qualities) &&
        Objects.equals(this.timeOrdering, batchGetAssetPropertyValueHistoryEntry.timeOrdering);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryId, assetId, propertyId, propertyAlias, startDate, endDate, qualities, timeOrdering);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchGetAssetPropertyValueHistoryEntry {\n");
    sb.append("    entryId: ").append(toIndentedString(entryId)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    propertyAlias: ").append(toIndentedString(propertyAlias)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    qualities: ").append(toIndentedString(qualities)).append("\n");
    sb.append("    timeOrdering: ").append(toIndentedString(timeOrdering)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entryId");
    openapiFields.add("assetId");
    openapiFields.add("propertyId");
    openapiFields.add("propertyAlias");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("qualities");
    openapiFields.add("timeOrdering");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("entryId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchGetAssetPropertyValueHistoryEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchGetAssetPropertyValueHistoryEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchGetAssetPropertyValueHistoryEntry is not found in the empty JSON string", BatchGetAssetPropertyValueHistoryEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchGetAssetPropertyValueHistoryEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchGetAssetPropertyValueHistoryEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BatchGetAssetPropertyValueHistoryEntry.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `entryId`
      String.validateJsonElement(jsonObj.get("entryId"));
      // validate the optional field `assetId`
      if (jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assetId"));
      }
      // validate the optional field `propertyId`
      if (jsonObj.get("propertyId") != null && !jsonObj.get("propertyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("propertyId"));
      }
      // validate the optional field `propertyAlias`
      if (jsonObj.get("propertyAlias") != null && !jsonObj.get("propertyAlias").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("propertyAlias"));
      }
      // validate the optional field `startDate`
      if (jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startDate"));
      }
      // validate the optional field `endDate`
      if (jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("endDate"));
      }
      // validate the optional field `qualities`
      if (jsonObj.get("qualities") != null && !jsonObj.get("qualities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("qualities"));
      }
      // validate the optional field `timeOrdering`
      if (jsonObj.get("timeOrdering") != null && !jsonObj.get("timeOrdering").isJsonNull()) {
        TimeOrdering.validateJsonElement(jsonObj.get("timeOrdering"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchGetAssetPropertyValueHistoryEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchGetAssetPropertyValueHistoryEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchGetAssetPropertyValueHistoryEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchGetAssetPropertyValueHistoryEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchGetAssetPropertyValueHistoryEntry>() {
           @Override
           public void write(JsonWriter out, BatchGetAssetPropertyValueHistoryEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchGetAssetPropertyValueHistoryEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchGetAssetPropertyValueHistoryEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchGetAssetPropertyValueHistoryEntry
   * @throws IOException if the JSON string is invalid with respect to BatchGetAssetPropertyValueHistoryEntry
   */
  public static BatchGetAssetPropertyValueHistoryEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchGetAssetPropertyValueHistoryEntry.class);
  }

  /**
   * Convert an instance of BatchGetAssetPropertyValueHistoryEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

