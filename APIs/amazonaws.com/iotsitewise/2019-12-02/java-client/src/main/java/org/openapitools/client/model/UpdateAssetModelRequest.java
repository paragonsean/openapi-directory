/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AssetModelCompositeModel;
import org.openapitools.client.model.AssetModelHierarchy;
import org.openapitools.client.model.AssetModelProperty;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAssetModelRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateAssetModelRequest {
  public static final String SERIALIZED_NAME_ASSET_MODEL_NAME = "assetModelName";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_NAME)
  private String assetModelName;

  public static final String SERIALIZED_NAME_ASSET_MODEL_DESCRIPTION = "assetModelDescription";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_DESCRIPTION)
  private String assetModelDescription;

  public static final String SERIALIZED_NAME_ASSET_MODEL_PROPERTIES = "assetModelProperties";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_PROPERTIES)
  private List<AssetModelProperty> assetModelProperties = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASSET_MODEL_HIERARCHIES = "assetModelHierarchies";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_HIERARCHIES)
  private List<AssetModelHierarchy> assetModelHierarchies = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASSET_MODEL_COMPOSITE_MODELS = "assetModelCompositeModels";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_COMPOSITE_MODELS)
  private List<AssetModelCompositeModel> assetModelCompositeModels = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public UpdateAssetModelRequest() {
  }

  public UpdateAssetModelRequest assetModelName(String assetModelName) {
    this.assetModelName = assetModelName;
    return this;
  }

  /**
   * A unique, friendly name for the asset model.
   * @return assetModelName
   */
  @javax.annotation.Nonnull
  public String getAssetModelName() {
    return assetModelName;
  }

  public void setAssetModelName(String assetModelName) {
    this.assetModelName = assetModelName;
  }


  public UpdateAssetModelRequest assetModelDescription(String assetModelDescription) {
    this.assetModelDescription = assetModelDescription;
    return this;
  }

  /**
   * A description for the asset model.
   * @return assetModelDescription
   */
  @javax.annotation.Nullable
  public String getAssetModelDescription() {
    return assetModelDescription;
  }

  public void setAssetModelDescription(String assetModelDescription) {
    this.assetModelDescription = assetModelDescription;
  }


  public UpdateAssetModelRequest assetModelProperties(List<AssetModelProperty> assetModelProperties) {
    this.assetModelProperties = assetModelProperties;
    return this;
  }

  public UpdateAssetModelRequest addAssetModelPropertiesItem(AssetModelProperty assetModelPropertiesItem) {
    if (this.assetModelProperties == null) {
      this.assetModelProperties = new ArrayList<>();
    }
    this.assetModelProperties.add(assetModelPropertiesItem);
    return this;
  }

  /**
   * &lt;p&gt;The updated property definitions of the asset model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html\&quot;&gt;Asset properties&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You can specify up to 200 properties per asset model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\&quot;&gt;Quotas&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return assetModelProperties
   */
  @javax.annotation.Nullable
  public List<AssetModelProperty> getAssetModelProperties() {
    return assetModelProperties;
  }

  public void setAssetModelProperties(List<AssetModelProperty> assetModelProperties) {
    this.assetModelProperties = assetModelProperties;
  }


  public UpdateAssetModelRequest assetModelHierarchies(List<AssetModelHierarchy> assetModelHierarchies) {
    this.assetModelHierarchies = assetModelHierarchies;
    return this;
  }

  public UpdateAssetModelRequest addAssetModelHierarchiesItem(AssetModelHierarchy assetModelHierarchiesItem) {
    if (this.assetModelHierarchies == null) {
      this.assetModelHierarchies = new ArrayList<>();
    }
    this.assetModelHierarchies.add(assetModelHierarchiesItem);
    return this;
  }

  /**
   * &lt;p&gt;The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html\&quot;&gt;Asset hierarchies&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You can specify up to 10 hierarchies per asset model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\&quot;&gt;Quotas&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return assetModelHierarchies
   */
  @javax.annotation.Nullable
  public List<AssetModelHierarchy> getAssetModelHierarchies() {
    return assetModelHierarchies;
  }

  public void setAssetModelHierarchies(List<AssetModelHierarchy> assetModelHierarchies) {
    this.assetModelHierarchies = assetModelHierarchies;
  }


  public UpdateAssetModelRequest assetModelCompositeModels(List<AssetModelCompositeModel> assetModelCompositeModels) {
    this.assetModelCompositeModels = assetModelCompositeModels;
    return this;
  }

  public UpdateAssetModelRequest addAssetModelCompositeModelsItem(AssetModelCompositeModel assetModelCompositeModelsItem) {
    if (this.assetModelCompositeModels == null) {
      this.assetModelCompositeModels = new ArrayList<>();
    }
    this.assetModelCompositeModels.add(assetModelCompositeModelsItem);
    return this;
  }

  /**
   * The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
   * @return assetModelCompositeModels
   */
  @javax.annotation.Nullable
  public List<AssetModelCompositeModel> getAssetModelCompositeModels() {
    return assetModelCompositeModels;
  }

  public void setAssetModelCompositeModels(List<AssetModelCompositeModel> assetModelCompositeModels) {
    this.assetModelCompositeModels = assetModelCompositeModels;
  }


  public UpdateAssetModelRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don&#39;t reuse this client token if a new idempotent request is required.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAssetModelRequest updateAssetModelRequest = (UpdateAssetModelRequest) o;
    return Objects.equals(this.assetModelName, updateAssetModelRequest.assetModelName) &&
        Objects.equals(this.assetModelDescription, updateAssetModelRequest.assetModelDescription) &&
        Objects.equals(this.assetModelProperties, updateAssetModelRequest.assetModelProperties) &&
        Objects.equals(this.assetModelHierarchies, updateAssetModelRequest.assetModelHierarchies) &&
        Objects.equals(this.assetModelCompositeModels, updateAssetModelRequest.assetModelCompositeModels) &&
        Objects.equals(this.clientToken, updateAssetModelRequest.clientToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetModelName, assetModelDescription, assetModelProperties, assetModelHierarchies, assetModelCompositeModels, clientToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAssetModelRequest {\n");
    sb.append("    assetModelName: ").append(toIndentedString(assetModelName)).append("\n");
    sb.append("    assetModelDescription: ").append(toIndentedString(assetModelDescription)).append("\n");
    sb.append("    assetModelProperties: ").append(toIndentedString(assetModelProperties)).append("\n");
    sb.append("    assetModelHierarchies: ").append(toIndentedString(assetModelHierarchies)).append("\n");
    sb.append("    assetModelCompositeModels: ").append(toIndentedString(assetModelCompositeModels)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetModelName");
    openapiFields.add("assetModelDescription");
    openapiFields.add("assetModelProperties");
    openapiFields.add("assetModelHierarchies");
    openapiFields.add("assetModelCompositeModels");
    openapiFields.add("clientToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assetModelName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAssetModelRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAssetModelRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAssetModelRequest is not found in the empty JSON string", UpdateAssetModelRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAssetModelRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAssetModelRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateAssetModelRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("assetModelName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetModelName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetModelName").toString()));
      }
      if ((jsonObj.get("assetModelDescription") != null && !jsonObj.get("assetModelDescription").isJsonNull()) && !jsonObj.get("assetModelDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetModelDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetModelDescription").toString()));
      }
      if (jsonObj.get("assetModelProperties") != null && !jsonObj.get("assetModelProperties").isJsonNull()) {
        JsonArray jsonArrayassetModelProperties = jsonObj.getAsJsonArray("assetModelProperties");
        if (jsonArrayassetModelProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("assetModelProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `assetModelProperties` to be an array in the JSON string but got `%s`", jsonObj.get("assetModelProperties").toString()));
          }

          // validate the optional field `assetModelProperties` (array)
          for (int i = 0; i < jsonArrayassetModelProperties.size(); i++) {
            AssetModelProperty.validateJsonElement(jsonArrayassetModelProperties.get(i));
          };
        }
      }
      if (jsonObj.get("assetModelHierarchies") != null && !jsonObj.get("assetModelHierarchies").isJsonNull()) {
        JsonArray jsonArrayassetModelHierarchies = jsonObj.getAsJsonArray("assetModelHierarchies");
        if (jsonArrayassetModelHierarchies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("assetModelHierarchies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `assetModelHierarchies` to be an array in the JSON string but got `%s`", jsonObj.get("assetModelHierarchies").toString()));
          }

          // validate the optional field `assetModelHierarchies` (array)
          for (int i = 0; i < jsonArrayassetModelHierarchies.size(); i++) {
            AssetModelHierarchy.validateJsonElement(jsonArrayassetModelHierarchies.get(i));
          };
        }
      }
      if (jsonObj.get("assetModelCompositeModels") != null && !jsonObj.get("assetModelCompositeModels").isJsonNull()) {
        JsonArray jsonArrayassetModelCompositeModels = jsonObj.getAsJsonArray("assetModelCompositeModels");
        if (jsonArrayassetModelCompositeModels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("assetModelCompositeModels").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `assetModelCompositeModels` to be an array in the JSON string but got `%s`", jsonObj.get("assetModelCompositeModels").toString()));
          }

          // validate the optional field `assetModelCompositeModels` (array)
          for (int i = 0; i < jsonArrayassetModelCompositeModels.size(); i++) {
            AssetModelCompositeModel.validateJsonElement(jsonArrayassetModelCompositeModels.get(i));
          };
        }
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAssetModelRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAssetModelRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAssetModelRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAssetModelRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAssetModelRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAssetModelRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAssetModelRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAssetModelRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAssetModelRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAssetModelRequest
   */
  public static UpdateAssetModelRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAssetModelRequest.class);
  }

  /**
   * Convert an instance of UpdateAssetModelRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

