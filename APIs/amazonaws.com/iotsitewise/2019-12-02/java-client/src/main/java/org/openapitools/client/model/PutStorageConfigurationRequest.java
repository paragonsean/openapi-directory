/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PutStorageConfigurationRequestMultiLayerStorage;
import org.openapitools.client.model.PutStorageConfigurationRequestRetentionPeriod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutStorageConfigurationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutStorageConfigurationRequest {
  /**
   * &lt;p&gt;The storage tier that you specified for your data. The &lt;code&gt;storageType&lt;/code&gt; parameter can be one of the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SITEWISE_DEFAULT_STORAGE&lt;/code&gt; – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MULTI_LAYER_STORAGE&lt;/code&gt; – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   */
  @JsonAdapter(StorageTypeEnum.Adapter.class)
  public enum StorageTypeEnum {
    SITEWISE_DEFAULT_STORAGE("SITEWISE_DEFAULT_STORAGE"),
    
    MULTI_LAYER_STORAGE("MULTI_LAYER_STORAGE");

    private String value;

    StorageTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StorageTypeEnum fromValue(String value) {
      for (StorageTypeEnum b : StorageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StorageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StorageTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StorageTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StorageTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StorageTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "storageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageTypeEnum storageType;

  public static final String SERIALIZED_NAME_MULTI_LAYER_STORAGE = "multiLayerStorage";
  @SerializedName(SERIALIZED_NAME_MULTI_LAYER_STORAGE)
  private PutStorageConfigurationRequestMultiLayerStorage multiLayerStorage;

  /**
   * &lt;p&gt;Contains the storage configuration for time series (data streams) that aren&#39;t associated with asset properties. The &lt;code&gt;disassociatedDataStorage&lt;/code&gt; can be one of the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ENABLED&lt;/code&gt; – IoT SiteWise accepts time series that aren&#39;t associated with asset properties.&lt;/p&gt; &lt;important&gt; &lt;p&gt;After the &lt;code&gt;disassociatedDataStorage&lt;/code&gt; is enabled, you can&#39;t disable it.&lt;/p&gt; &lt;/important&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DISABLED&lt;/code&gt; – IoT SiteWise doesn&#39;t accept time series (data streams) that aren&#39;t associated with asset properties.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html\&quot;&gt;Data streams&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt;
   */
  @JsonAdapter(DisassociatedDataStorageEnum.Adapter.class)
  public enum DisassociatedDataStorageEnum {
    ENABLED("ENABLED"),
    
    DISABLED("DISABLED");

    private String value;

    DisassociatedDataStorageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DisassociatedDataStorageEnum fromValue(String value) {
      for (DisassociatedDataStorageEnum b : DisassociatedDataStorageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DisassociatedDataStorageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DisassociatedDataStorageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DisassociatedDataStorageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DisassociatedDataStorageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DisassociatedDataStorageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DISASSOCIATED_DATA_STORAGE = "disassociatedDataStorage";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATED_DATA_STORAGE)
  private DisassociatedDataStorageEnum disassociatedDataStorage;

  public static final String SERIALIZED_NAME_RETENTION_PERIOD = "retentionPeriod";
  @SerializedName(SERIALIZED_NAME_RETENTION_PERIOD)
  private PutStorageConfigurationRequestRetentionPeriod retentionPeriod;

  public PutStorageConfigurationRequest() {
  }

  public PutStorageConfigurationRequest storageType(StorageTypeEnum storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * &lt;p&gt;The storage tier that you specified for your data. The &lt;code&gt;storageType&lt;/code&gt; parameter can be one of the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SITEWISE_DEFAULT_STORAGE&lt;/code&gt; – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MULTI_LAYER_STORAGE&lt;/code&gt; – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return storageType
   */
  @javax.annotation.Nonnull
  public StorageTypeEnum getStorageType() {
    return storageType;
  }

  public void setStorageType(StorageTypeEnum storageType) {
    this.storageType = storageType;
  }


  public PutStorageConfigurationRequest multiLayerStorage(PutStorageConfigurationRequestMultiLayerStorage multiLayerStorage) {
    this.multiLayerStorage = multiLayerStorage;
    return this;
  }

  /**
   * Get multiLayerStorage
   * @return multiLayerStorage
   */
  @javax.annotation.Nullable
  public PutStorageConfigurationRequestMultiLayerStorage getMultiLayerStorage() {
    return multiLayerStorage;
  }

  public void setMultiLayerStorage(PutStorageConfigurationRequestMultiLayerStorage multiLayerStorage) {
    this.multiLayerStorage = multiLayerStorage;
  }


  public PutStorageConfigurationRequest disassociatedDataStorage(DisassociatedDataStorageEnum disassociatedDataStorage) {
    this.disassociatedDataStorage = disassociatedDataStorage;
    return this;
  }

  /**
   * &lt;p&gt;Contains the storage configuration for time series (data streams) that aren&#39;t associated with asset properties. The &lt;code&gt;disassociatedDataStorage&lt;/code&gt; can be one of the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ENABLED&lt;/code&gt; – IoT SiteWise accepts time series that aren&#39;t associated with asset properties.&lt;/p&gt; &lt;important&gt; &lt;p&gt;After the &lt;code&gt;disassociatedDataStorage&lt;/code&gt; is enabled, you can&#39;t disable it.&lt;/p&gt; &lt;/important&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DISABLED&lt;/code&gt; – IoT SiteWise doesn&#39;t accept time series (data streams) that aren&#39;t associated with asset properties.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html\&quot;&gt;Data streams&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return disassociatedDataStorage
   */
  @javax.annotation.Nullable
  public DisassociatedDataStorageEnum getDisassociatedDataStorage() {
    return disassociatedDataStorage;
  }

  public void setDisassociatedDataStorage(DisassociatedDataStorageEnum disassociatedDataStorage) {
    this.disassociatedDataStorage = disassociatedDataStorage;
  }


  public PutStorageConfigurationRequest retentionPeriod(PutStorageConfigurationRequestRetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
    return this;
  }

  /**
   * Get retentionPeriod
   * @return retentionPeriod
   */
  @javax.annotation.Nullable
  public PutStorageConfigurationRequestRetentionPeriod getRetentionPeriod() {
    return retentionPeriod;
  }

  public void setRetentionPeriod(PutStorageConfigurationRequestRetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutStorageConfigurationRequest putStorageConfigurationRequest = (PutStorageConfigurationRequest) o;
    return Objects.equals(this.storageType, putStorageConfigurationRequest.storageType) &&
        Objects.equals(this.multiLayerStorage, putStorageConfigurationRequest.multiLayerStorage) &&
        Objects.equals(this.disassociatedDataStorage, putStorageConfigurationRequest.disassociatedDataStorage) &&
        Objects.equals(this.retentionPeriod, putStorageConfigurationRequest.retentionPeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageType, multiLayerStorage, disassociatedDataStorage, retentionPeriod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutStorageConfigurationRequest {\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    multiLayerStorage: ").append(toIndentedString(multiLayerStorage)).append("\n");
    sb.append("    disassociatedDataStorage: ").append(toIndentedString(disassociatedDataStorage)).append("\n");
    sb.append("    retentionPeriod: ").append(toIndentedString(retentionPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("storageType");
    openapiFields.add("multiLayerStorage");
    openapiFields.add("disassociatedDataStorage");
    openapiFields.add("retentionPeriod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("storageType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutStorageConfigurationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutStorageConfigurationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutStorageConfigurationRequest is not found in the empty JSON string", PutStorageConfigurationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutStorageConfigurationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutStorageConfigurationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutStorageConfigurationRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("storageType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageType").toString()));
      }
      // validate the required field `storageType`
      StorageTypeEnum.validateJsonElement(jsonObj.get("storageType"));
      // validate the optional field `multiLayerStorage`
      if (jsonObj.get("multiLayerStorage") != null && !jsonObj.get("multiLayerStorage").isJsonNull()) {
        PutStorageConfigurationRequestMultiLayerStorage.validateJsonElement(jsonObj.get("multiLayerStorage"));
      }
      if ((jsonObj.get("disassociatedDataStorage") != null && !jsonObj.get("disassociatedDataStorage").isJsonNull()) && !jsonObj.get("disassociatedDataStorage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disassociatedDataStorage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disassociatedDataStorage").toString()));
      }
      // validate the optional field `disassociatedDataStorage`
      if (jsonObj.get("disassociatedDataStorage") != null && !jsonObj.get("disassociatedDataStorage").isJsonNull()) {
        DisassociatedDataStorageEnum.validateJsonElement(jsonObj.get("disassociatedDataStorage"));
      }
      // validate the optional field `retentionPeriod`
      if (jsonObj.get("retentionPeriod") != null && !jsonObj.get("retentionPeriod").isJsonNull()) {
        PutStorageConfigurationRequestRetentionPeriod.validateJsonElement(jsonObj.get("retentionPeriod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutStorageConfigurationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutStorageConfigurationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutStorageConfigurationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutStorageConfigurationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutStorageConfigurationRequest>() {
           @Override
           public void write(JsonWriter out, PutStorageConfigurationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutStorageConfigurationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutStorageConfigurationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutStorageConfigurationRequest
   * @throws IOException if the JSON string is invalid with respect to PutStorageConfigurationRequest
   */
  public static PutStorageConfigurationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutStorageConfigurationRequest.class);
  }

  /**
   * Convert an instance of PutStorageConfigurationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

