/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeAssetModelResponseAssetModelStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAssetModelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAssetModelResponse {
  public static final String SERIALIZED_NAME_ASSET_MODEL_ID = "assetModelId";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_ID)
  private String assetModelId;

  public static final String SERIALIZED_NAME_ASSET_MODEL_ARN = "assetModelArn";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_ARN)
  private String assetModelArn;

  public static final String SERIALIZED_NAME_ASSET_MODEL_NAME = "assetModelName";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_NAME)
  private String assetModelName;

  public static final String SERIALIZED_NAME_ASSET_MODEL_DESCRIPTION = "assetModelDescription";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_DESCRIPTION)
  private String assetModelDescription;

  public static final String SERIALIZED_NAME_ASSET_MODEL_PROPERTIES = "assetModelProperties";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_PROPERTIES)
  private List assetModelProperties;

  public static final String SERIALIZED_NAME_ASSET_MODEL_HIERARCHIES = "assetModelHierarchies";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_HIERARCHIES)
  private List assetModelHierarchies;

  public static final String SERIALIZED_NAME_ASSET_MODEL_COMPOSITE_MODELS = "assetModelCompositeModels";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_COMPOSITE_MODELS)
  private List assetModelCompositeModels;

  public static final String SERIALIZED_NAME_ASSET_MODEL_CREATION_DATE = "assetModelCreationDate";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_CREATION_DATE)
  private OffsetDateTime assetModelCreationDate;

  public static final String SERIALIZED_NAME_ASSET_MODEL_LAST_UPDATE_DATE = "assetModelLastUpdateDate";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_LAST_UPDATE_DATE)
  private OffsetDateTime assetModelLastUpdateDate;

  public static final String SERIALIZED_NAME_ASSET_MODEL_STATUS = "assetModelStatus";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_STATUS)
  private DescribeAssetModelResponseAssetModelStatus assetModelStatus;

  public DescribeAssetModelResponse() {
  }

  public DescribeAssetModelResponse assetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
    return this;
  }

  /**
   * Get assetModelId
   * @return assetModelId
   */
  @javax.annotation.Nonnull
  public String getAssetModelId() {
    return assetModelId;
  }

  public void setAssetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
  }


  public DescribeAssetModelResponse assetModelArn(String assetModelArn) {
    this.assetModelArn = assetModelArn;
    return this;
  }

  /**
   * Get assetModelArn
   * @return assetModelArn
   */
  @javax.annotation.Nonnull
  public String getAssetModelArn() {
    return assetModelArn;
  }

  public void setAssetModelArn(String assetModelArn) {
    this.assetModelArn = assetModelArn;
  }


  public DescribeAssetModelResponse assetModelName(String assetModelName) {
    this.assetModelName = assetModelName;
    return this;
  }

  /**
   * Get assetModelName
   * @return assetModelName
   */
  @javax.annotation.Nonnull
  public String getAssetModelName() {
    return assetModelName;
  }

  public void setAssetModelName(String assetModelName) {
    this.assetModelName = assetModelName;
  }


  public DescribeAssetModelResponse assetModelDescription(String assetModelDescription) {
    this.assetModelDescription = assetModelDescription;
    return this;
  }

  /**
   * Get assetModelDescription
   * @return assetModelDescription
   */
  @javax.annotation.Nonnull
  public String getAssetModelDescription() {
    return assetModelDescription;
  }

  public void setAssetModelDescription(String assetModelDescription) {
    this.assetModelDescription = assetModelDescription;
  }


  public DescribeAssetModelResponse assetModelProperties(List assetModelProperties) {
    this.assetModelProperties = assetModelProperties;
    return this;
  }

  /**
   * Get assetModelProperties
   * @return assetModelProperties
   */
  @javax.annotation.Nonnull
  public List getAssetModelProperties() {
    return assetModelProperties;
  }

  public void setAssetModelProperties(List assetModelProperties) {
    this.assetModelProperties = assetModelProperties;
  }


  public DescribeAssetModelResponse assetModelHierarchies(List assetModelHierarchies) {
    this.assetModelHierarchies = assetModelHierarchies;
    return this;
  }

  /**
   * Get assetModelHierarchies
   * @return assetModelHierarchies
   */
  @javax.annotation.Nonnull
  public List getAssetModelHierarchies() {
    return assetModelHierarchies;
  }

  public void setAssetModelHierarchies(List assetModelHierarchies) {
    this.assetModelHierarchies = assetModelHierarchies;
  }


  public DescribeAssetModelResponse assetModelCompositeModels(List assetModelCompositeModels) {
    this.assetModelCompositeModels = assetModelCompositeModels;
    return this;
  }

  /**
   * Get assetModelCompositeModels
   * @return assetModelCompositeModels
   */
  @javax.annotation.Nullable
  public List getAssetModelCompositeModels() {
    return assetModelCompositeModels;
  }

  public void setAssetModelCompositeModels(List assetModelCompositeModels) {
    this.assetModelCompositeModels = assetModelCompositeModels;
  }


  public DescribeAssetModelResponse assetModelCreationDate(OffsetDateTime assetModelCreationDate) {
    this.assetModelCreationDate = assetModelCreationDate;
    return this;
  }

  /**
   * Get assetModelCreationDate
   * @return assetModelCreationDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAssetModelCreationDate() {
    return assetModelCreationDate;
  }

  public void setAssetModelCreationDate(OffsetDateTime assetModelCreationDate) {
    this.assetModelCreationDate = assetModelCreationDate;
  }


  public DescribeAssetModelResponse assetModelLastUpdateDate(OffsetDateTime assetModelLastUpdateDate) {
    this.assetModelLastUpdateDate = assetModelLastUpdateDate;
    return this;
  }

  /**
   * Get assetModelLastUpdateDate
   * @return assetModelLastUpdateDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getAssetModelLastUpdateDate() {
    return assetModelLastUpdateDate;
  }

  public void setAssetModelLastUpdateDate(OffsetDateTime assetModelLastUpdateDate) {
    this.assetModelLastUpdateDate = assetModelLastUpdateDate;
  }


  public DescribeAssetModelResponse assetModelStatus(DescribeAssetModelResponseAssetModelStatus assetModelStatus) {
    this.assetModelStatus = assetModelStatus;
    return this;
  }

  /**
   * Get assetModelStatus
   * @return assetModelStatus
   */
  @javax.annotation.Nonnull
  public DescribeAssetModelResponseAssetModelStatus getAssetModelStatus() {
    return assetModelStatus;
  }

  public void setAssetModelStatus(DescribeAssetModelResponseAssetModelStatus assetModelStatus) {
    this.assetModelStatus = assetModelStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAssetModelResponse describeAssetModelResponse = (DescribeAssetModelResponse) o;
    return Objects.equals(this.assetModelId, describeAssetModelResponse.assetModelId) &&
        Objects.equals(this.assetModelArn, describeAssetModelResponse.assetModelArn) &&
        Objects.equals(this.assetModelName, describeAssetModelResponse.assetModelName) &&
        Objects.equals(this.assetModelDescription, describeAssetModelResponse.assetModelDescription) &&
        Objects.equals(this.assetModelProperties, describeAssetModelResponse.assetModelProperties) &&
        Objects.equals(this.assetModelHierarchies, describeAssetModelResponse.assetModelHierarchies) &&
        Objects.equals(this.assetModelCompositeModels, describeAssetModelResponse.assetModelCompositeModels) &&
        Objects.equals(this.assetModelCreationDate, describeAssetModelResponse.assetModelCreationDate) &&
        Objects.equals(this.assetModelLastUpdateDate, describeAssetModelResponse.assetModelLastUpdateDate) &&
        Objects.equals(this.assetModelStatus, describeAssetModelResponse.assetModelStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetModelId, assetModelArn, assetModelName, assetModelDescription, assetModelProperties, assetModelHierarchies, assetModelCompositeModels, assetModelCreationDate, assetModelLastUpdateDate, assetModelStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAssetModelResponse {\n");
    sb.append("    assetModelId: ").append(toIndentedString(assetModelId)).append("\n");
    sb.append("    assetModelArn: ").append(toIndentedString(assetModelArn)).append("\n");
    sb.append("    assetModelName: ").append(toIndentedString(assetModelName)).append("\n");
    sb.append("    assetModelDescription: ").append(toIndentedString(assetModelDescription)).append("\n");
    sb.append("    assetModelProperties: ").append(toIndentedString(assetModelProperties)).append("\n");
    sb.append("    assetModelHierarchies: ").append(toIndentedString(assetModelHierarchies)).append("\n");
    sb.append("    assetModelCompositeModels: ").append(toIndentedString(assetModelCompositeModels)).append("\n");
    sb.append("    assetModelCreationDate: ").append(toIndentedString(assetModelCreationDate)).append("\n");
    sb.append("    assetModelLastUpdateDate: ").append(toIndentedString(assetModelLastUpdateDate)).append("\n");
    sb.append("    assetModelStatus: ").append(toIndentedString(assetModelStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetModelId");
    openapiFields.add("assetModelArn");
    openapiFields.add("assetModelName");
    openapiFields.add("assetModelDescription");
    openapiFields.add("assetModelProperties");
    openapiFields.add("assetModelHierarchies");
    openapiFields.add("assetModelCompositeModels");
    openapiFields.add("assetModelCreationDate");
    openapiFields.add("assetModelLastUpdateDate");
    openapiFields.add("assetModelStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assetModelId");
    openapiRequiredFields.add("assetModelArn");
    openapiRequiredFields.add("assetModelName");
    openapiRequiredFields.add("assetModelDescription");
    openapiRequiredFields.add("assetModelProperties");
    openapiRequiredFields.add("assetModelHierarchies");
    openapiRequiredFields.add("assetModelCreationDate");
    openapiRequiredFields.add("assetModelLastUpdateDate");
    openapiRequiredFields.add("assetModelStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAssetModelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAssetModelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAssetModelResponse is not found in the empty JSON string", DescribeAssetModelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAssetModelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAssetModelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAssetModelResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `assetModelId`
      String.validateJsonElement(jsonObj.get("assetModelId"));
      // validate the required field `assetModelArn`
      String.validateJsonElement(jsonObj.get("assetModelArn"));
      // validate the required field `assetModelName`
      String.validateJsonElement(jsonObj.get("assetModelName"));
      // validate the required field `assetModelDescription`
      String.validateJsonElement(jsonObj.get("assetModelDescription"));
      // validate the required field `assetModelProperties`
      List.validateJsonElement(jsonObj.get("assetModelProperties"));
      // validate the required field `assetModelHierarchies`
      List.validateJsonElement(jsonObj.get("assetModelHierarchies"));
      // validate the optional field `assetModelCompositeModels`
      if (jsonObj.get("assetModelCompositeModels") != null && !jsonObj.get("assetModelCompositeModels").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("assetModelCompositeModels"));
      }
      // validate the required field `assetModelCreationDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("assetModelCreationDate"));
      // validate the required field `assetModelLastUpdateDate`
      OffsetDateTime.validateJsonElement(jsonObj.get("assetModelLastUpdateDate"));
      // validate the required field `assetModelStatus`
      DescribeAssetModelResponseAssetModelStatus.validateJsonElement(jsonObj.get("assetModelStatus"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAssetModelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAssetModelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAssetModelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAssetModelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAssetModelResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAssetModelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAssetModelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAssetModelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAssetModelResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAssetModelResponse
   */
  public static DescribeAssetModelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAssetModelResponse.class);
  }

  /**
   * Convert an instance of DescribeAssetModelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

