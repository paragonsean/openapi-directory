/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ConfigurationStatus;
import org.openapitools.client.model.DescribeStorageConfigurationResponseMultiLayerStorage;
import org.openapitools.client.model.DisassociatedDataStorageState;
import org.openapitools.client.model.RetentionPeriod;
import org.openapitools.client.model.StorageType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutStorageConfigurationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:16.403232-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutStorageConfigurationResponse {
  public static final String SERIALIZED_NAME_STORAGE_TYPE = "storageType";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  private StorageType storageType;

  public static final String SERIALIZED_NAME_MULTI_LAYER_STORAGE = "multiLayerStorage";
  @SerializedName(SERIALIZED_NAME_MULTI_LAYER_STORAGE)
  private DescribeStorageConfigurationResponseMultiLayerStorage multiLayerStorage;

  public static final String SERIALIZED_NAME_DISASSOCIATED_DATA_STORAGE = "disassociatedDataStorage";
  @SerializedName(SERIALIZED_NAME_DISASSOCIATED_DATA_STORAGE)
  private DisassociatedDataStorageState disassociatedDataStorage;

  public static final String SERIALIZED_NAME_RETENTION_PERIOD = "retentionPeriod";
  @SerializedName(SERIALIZED_NAME_RETENTION_PERIOD)
  private RetentionPeriod retentionPeriod;

  public static final String SERIALIZED_NAME_CONFIGURATION_STATUS = "configurationStatus";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_STATUS)
  private ConfigurationStatus configurationStatus;

  public PutStorageConfigurationResponse() {
  }

  public PutStorageConfigurationResponse storageType(StorageType storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nonnull
  public StorageType getStorageType() {
    return storageType;
  }

  public void setStorageType(StorageType storageType) {
    this.storageType = storageType;
  }


  public PutStorageConfigurationResponse multiLayerStorage(DescribeStorageConfigurationResponseMultiLayerStorage multiLayerStorage) {
    this.multiLayerStorage = multiLayerStorage;
    return this;
  }

  /**
   * Get multiLayerStorage
   * @return multiLayerStorage
   */
  @javax.annotation.Nullable
  public DescribeStorageConfigurationResponseMultiLayerStorage getMultiLayerStorage() {
    return multiLayerStorage;
  }

  public void setMultiLayerStorage(DescribeStorageConfigurationResponseMultiLayerStorage multiLayerStorage) {
    this.multiLayerStorage = multiLayerStorage;
  }


  public PutStorageConfigurationResponse disassociatedDataStorage(DisassociatedDataStorageState disassociatedDataStorage) {
    this.disassociatedDataStorage = disassociatedDataStorage;
    return this;
  }

  /**
   * Get disassociatedDataStorage
   * @return disassociatedDataStorage
   */
  @javax.annotation.Nullable
  public DisassociatedDataStorageState getDisassociatedDataStorage() {
    return disassociatedDataStorage;
  }

  public void setDisassociatedDataStorage(DisassociatedDataStorageState disassociatedDataStorage) {
    this.disassociatedDataStorage = disassociatedDataStorage;
  }


  public PutStorageConfigurationResponse retentionPeriod(RetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
    return this;
  }

  /**
   * Get retentionPeriod
   * @return retentionPeriod
   */
  @javax.annotation.Nullable
  public RetentionPeriod getRetentionPeriod() {
    return retentionPeriod;
  }

  public void setRetentionPeriod(RetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
  }


  public PutStorageConfigurationResponse configurationStatus(ConfigurationStatus configurationStatus) {
    this.configurationStatus = configurationStatus;
    return this;
  }

  /**
   * Get configurationStatus
   * @return configurationStatus
   */
  @javax.annotation.Nonnull
  public ConfigurationStatus getConfigurationStatus() {
    return configurationStatus;
  }

  public void setConfigurationStatus(ConfigurationStatus configurationStatus) {
    this.configurationStatus = configurationStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutStorageConfigurationResponse putStorageConfigurationResponse = (PutStorageConfigurationResponse) o;
    return Objects.equals(this.storageType, putStorageConfigurationResponse.storageType) &&
        Objects.equals(this.multiLayerStorage, putStorageConfigurationResponse.multiLayerStorage) &&
        Objects.equals(this.disassociatedDataStorage, putStorageConfigurationResponse.disassociatedDataStorage) &&
        Objects.equals(this.retentionPeriod, putStorageConfigurationResponse.retentionPeriod) &&
        Objects.equals(this.configurationStatus, putStorageConfigurationResponse.configurationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageType, multiLayerStorage, disassociatedDataStorage, retentionPeriod, configurationStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutStorageConfigurationResponse {\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    multiLayerStorage: ").append(toIndentedString(multiLayerStorage)).append("\n");
    sb.append("    disassociatedDataStorage: ").append(toIndentedString(disassociatedDataStorage)).append("\n");
    sb.append("    retentionPeriod: ").append(toIndentedString(retentionPeriod)).append("\n");
    sb.append("    configurationStatus: ").append(toIndentedString(configurationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("storageType");
    openapiFields.add("multiLayerStorage");
    openapiFields.add("disassociatedDataStorage");
    openapiFields.add("retentionPeriod");
    openapiFields.add("configurationStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("storageType");
    openapiRequiredFields.add("configurationStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutStorageConfigurationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutStorageConfigurationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutStorageConfigurationResponse is not found in the empty JSON string", PutStorageConfigurationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutStorageConfigurationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutStorageConfigurationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutStorageConfigurationResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `storageType`
      StorageType.validateJsonElement(jsonObj.get("storageType"));
      // validate the optional field `multiLayerStorage`
      if (jsonObj.get("multiLayerStorage") != null && !jsonObj.get("multiLayerStorage").isJsonNull()) {
        DescribeStorageConfigurationResponseMultiLayerStorage.validateJsonElement(jsonObj.get("multiLayerStorage"));
      }
      // validate the optional field `disassociatedDataStorage`
      if (jsonObj.get("disassociatedDataStorage") != null && !jsonObj.get("disassociatedDataStorage").isJsonNull()) {
        DisassociatedDataStorageState.validateJsonElement(jsonObj.get("disassociatedDataStorage"));
      }
      // validate the optional field `retentionPeriod`
      if (jsonObj.get("retentionPeriod") != null && !jsonObj.get("retentionPeriod").isJsonNull()) {
        RetentionPeriod.validateJsonElement(jsonObj.get("retentionPeriod"));
      }
      // validate the required field `configurationStatus`
      ConfigurationStatus.validateJsonElement(jsonObj.get("configurationStatus"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutStorageConfigurationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutStorageConfigurationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutStorageConfigurationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutStorageConfigurationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PutStorageConfigurationResponse>() {
           @Override
           public void write(JsonWriter out, PutStorageConfigurationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutStorageConfigurationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutStorageConfigurationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutStorageConfigurationResponse
   * @throws IOException if the JSON string is invalid with respect to PutStorageConfigurationResponse
   */
  public static PutStorageConfigurationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutStorageConfigurationResponse.class);
  }

  /**
   * Convert an instance of PutStorageConfigurationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

