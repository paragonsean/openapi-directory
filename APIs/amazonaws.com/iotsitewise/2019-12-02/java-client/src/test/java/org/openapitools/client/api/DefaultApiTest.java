/*
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AggregateType;
import org.openapitools.client.model.AssociateAssetsRequest;
import org.openapitools.client.model.AssociateTimeSeriesToAssetPropertyRequest;
import org.openapitools.client.model.BatchAssociateProjectAssetsRequest;
import org.openapitools.client.model.BatchAssociateProjectAssetsResponse;
import org.openapitools.client.model.BatchDisassociateProjectAssetsRequest;
import org.openapitools.client.model.BatchDisassociateProjectAssetsResponse;
import org.openapitools.client.model.BatchGetAssetPropertyAggregatesRequest;
import org.openapitools.client.model.BatchGetAssetPropertyAggregatesResponse;
import org.openapitools.client.model.BatchGetAssetPropertyValueHistoryRequest;
import org.openapitools.client.model.BatchGetAssetPropertyValueHistoryResponse;
import org.openapitools.client.model.BatchGetAssetPropertyValueRequest;
import org.openapitools.client.model.BatchGetAssetPropertyValueResponse;
import org.openapitools.client.model.BatchPutAssetPropertyValueRequest;
import org.openapitools.client.model.BatchPutAssetPropertyValueResponse;
import org.openapitools.client.model.CreateAccessPolicyRequest;
import org.openapitools.client.model.CreateAccessPolicyResponse;
import org.openapitools.client.model.CreateAssetModelRequest;
import org.openapitools.client.model.CreateAssetModelResponse;
import org.openapitools.client.model.CreateAssetRequest;
import org.openapitools.client.model.CreateAssetResponse;
import org.openapitools.client.model.CreateBulkImportJobRequest;
import org.openapitools.client.model.CreateBulkImportJobResponse;
import org.openapitools.client.model.CreateDashboardRequest;
import org.openapitools.client.model.CreateDashboardResponse;
import org.openapitools.client.model.CreateGatewayRequest;
import org.openapitools.client.model.CreateGatewayResponse;
import org.openapitools.client.model.CreatePortalRequest;
import org.openapitools.client.model.CreatePortalResponse;
import org.openapitools.client.model.CreateProjectRequest;
import org.openapitools.client.model.CreateProjectResponse;
import org.openapitools.client.model.DeleteAssetModelResponse;
import org.openapitools.client.model.DeleteAssetResponse;
import org.openapitools.client.model.DeletePortalResponse;
import org.openapitools.client.model.DescribeAccessPolicyResponse;
import org.openapitools.client.model.DescribeAssetModelResponse;
import org.openapitools.client.model.DescribeAssetPropertyResponse;
import org.openapitools.client.model.DescribeAssetResponse;
import org.openapitools.client.model.DescribeBulkImportJobResponse;
import org.openapitools.client.model.DescribeDashboardResponse;
import org.openapitools.client.model.DescribeDefaultEncryptionConfigurationResponse;
import org.openapitools.client.model.DescribeGatewayCapabilityConfigurationResponse;
import org.openapitools.client.model.DescribeGatewayResponse;
import org.openapitools.client.model.DescribeLoggingOptionsResponse;
import org.openapitools.client.model.DescribePortalResponse;
import org.openapitools.client.model.DescribeProjectResponse;
import org.openapitools.client.model.DescribeStorageConfigurationResponse;
import org.openapitools.client.model.DescribeTimeSeriesResponse;
import org.openapitools.client.model.DisassociateAssetsRequest;
import org.openapitools.client.model.GetAssetPropertyAggregatesResponse;
import org.openapitools.client.model.GetAssetPropertyValueHistoryResponse;
import org.openapitools.client.model.GetAssetPropertyValueResponse;
import org.openapitools.client.model.GetInterpolatedAssetPropertyValuesResponse;
import org.openapitools.client.model.ListAccessPoliciesResponse;
import org.openapitools.client.model.ListAssetModelPropertiesResponse;
import org.openapitools.client.model.ListAssetModelsResponse;
import org.openapitools.client.model.ListAssetPropertiesResponse;
import org.openapitools.client.model.ListAssetRelationshipsResponse;
import org.openapitools.client.model.ListAssetsResponse;
import org.openapitools.client.model.ListAssociatedAssetsResponse;
import org.openapitools.client.model.ListBulkImportJobsResponse;
import org.openapitools.client.model.ListDashboardsResponse;
import org.openapitools.client.model.ListGatewaysResponse;
import org.openapitools.client.model.ListPortalsResponse;
import org.openapitools.client.model.ListProjectAssetsResponse;
import org.openapitools.client.model.ListProjectsResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListTimeSeriesResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PutDefaultEncryptionConfigurationRequest;
import org.openapitools.client.model.PutDefaultEncryptionConfigurationResponse;
import org.openapitools.client.model.PutLoggingOptionsRequest;
import org.openapitools.client.model.PutStorageConfigurationRequest;
import org.openapitools.client.model.PutStorageConfigurationResponse;
import org.openapitools.client.model.Quality;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateAccessPolicyRequest;
import org.openapitools.client.model.UpdateAssetModelRequest;
import org.openapitools.client.model.UpdateAssetModelResponse;
import org.openapitools.client.model.UpdateAssetPropertyRequest;
import org.openapitools.client.model.UpdateAssetRequest;
import org.openapitools.client.model.UpdateAssetResponse;
import org.openapitools.client.model.UpdateDashboardRequest;
import org.openapitools.client.model.UpdateGatewayCapabilityConfigurationRequest;
import org.openapitools.client.model.UpdateGatewayCapabilityConfigurationResponse;
import org.openapitools.client.model.UpdateGatewayRequest;
import org.openapitools.client.model.UpdatePortalRequest;
import org.openapitools.client.model.UpdatePortalResponse;
import org.openapitools.client.model.UpdateProjectRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Associates a child asset with the given parent asset through a hierarchy defined in the parent asset&#39;s model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html\&quot;&gt;Associating assets&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associateAssetsTest() throws ApiException {
        String assetId = null;
        AssociateAssetsRequest associateAssetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.associateAssets(assetId, associateAssetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Associates a time series (data stream) with an asset property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associateTimeSeriesToAssetPropertyTest() throws ApiException {
        String alias = null;
        String assetId = null;
        String propertyId = null;
        AssociateTimeSeriesToAssetPropertyRequest associateTimeSeriesToAssetPropertyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.associateTimeSeriesToAssetProperty(alias, assetId, propertyId, associateTimeSeriesToAssetPropertyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Associates a group (batch) of assets with an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchAssociateProjectAssetsTest() throws ApiException {
        String projectId = null;
        BatchAssociateProjectAssetsRequest batchAssociateProjectAssetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchAssociateProjectAssetsResponse response = api.batchAssociateProjectAssets(projectId, batchAssociateProjectAssetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchDisassociateProjectAssetsTest() throws ApiException {
        String projectId = null;
        BatchDisassociateProjectAssetsRequest batchDisassociateProjectAssetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchDisassociateProjectAssetsResponse response = api.batchDisassociateProjectAssets(projectId, batchDisassociateProjectAssetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates\&quot;&gt;Querying aggregates&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchGetAssetPropertyAggregatesTest() throws ApiException {
        BatchGetAssetPropertyAggregatesRequest batchGetAssetPropertyAggregatesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        BatchGetAssetPropertyAggregatesResponse response = api.batchGetAssetPropertyAggregates(batchGetAssetPropertyAggregatesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Gets the current value for one or more asset properties. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values\&quot;&gt;Querying current values&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchGetAssetPropertyValueTest() throws ApiException {
        BatchGetAssetPropertyValueRequest batchGetAssetPropertyValueRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        BatchGetAssetPropertyValueResponse response = api.batchGetAssetPropertyValue(batchGetAssetPropertyValueRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Gets the historical values for one or more asset properties. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values\&quot;&gt;Querying historical values&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchGetAssetPropertyValueHistoryTest() throws ApiException {
        BatchGetAssetPropertyValueHistoryRequest batchGetAssetPropertyValueHistoryRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        BatchGetAssetPropertyValueHistoryResponse response = api.batchGetAssetPropertyValueHistory(batchGetAssetPropertyValueHistoryRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value (TQV) data point. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html\&quot;&gt;Ingesting data using the API&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;important&gt; &lt;p&gt;With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps outside of the inclusive range of [-7 days, +10 minutes] and returns a &lt;code&gt;TimestampOutOfRangeException&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer TQV has a different quality. For example, if you store a TQV &lt;code&gt;{T1, GOOD, V1}&lt;/code&gt;, then storing &lt;code&gt;{T1, GOOD, V2}&lt;/code&gt; replaces the existing TQV.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;IoT SiteWise authorizes access to each &lt;code&gt;BatchPutAssetPropertyValue&lt;/code&gt; entry individually. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action\&quot;&gt;BatchPutAssetPropertyValue authorization&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchPutAssetPropertyValueTest() throws ApiException {
        BatchPutAssetPropertyValueRequest batchPutAssetPropertyValueRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchPutAssetPropertyValueResponse response = api.batchPutAssetPropertyValue(batchPutAssetPropertyValueRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an access policy that grants the specified identity (IAM Identity Center user, IAM Identity Center group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccessPolicyTest() throws ApiException {
        CreateAccessPolicyRequest createAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAccessPolicyResponse response = api.createAccessPolicy(createAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an asset from an existing asset model. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html\&quot;&gt;Creating assets&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAssetTest() throws ApiException {
        CreateAssetRequest createAssetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAssetResponse response = api.createAsset(createAssetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an asset model from specified property and hierarchy definitions. You create assets from asset models. With asset models, you can easily create assets of the same type that have standardized definitions. Each asset created from a model inherits the asset model&#39;s property and hierarchy definitions. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html\&quot;&gt;Defining asset models&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAssetModelTest() throws ApiException {
        CreateAssetModelRequest createAssetModelRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAssetModelResponse response = api.createAssetModel(createAssetModelRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Defines a job to ingest data to IoT SiteWise from Amazon S3. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/CreateBulkImportJob.html\&quot;&gt;Create a bulk import job (CLI)&lt;/a&gt; in the &lt;i&gt;Amazon Simple Storage Service User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;You must enable IoT SiteWise to export data to Amazon S3 before you create a bulk import job. For more information about how to configure storage settings, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_PutStorageConfiguration.html\&quot;&gt;PutStorageConfiguration&lt;/a&gt;.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBulkImportJobTest() throws ApiException {
        CreateBulkImportJobRequest createBulkImportJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBulkImportJobResponse response = api.createBulkImportJob(createBulkImportJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a dashboard in an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDashboardTest() throws ApiException {
        CreateDashboardRequest createDashboardRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDashboardResponse response = api.createDashboard(createDashboardRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html\&quot;&gt;Ingesting data using a gateway&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGatewayTest() throws ApiException {
        CreateGatewayRequest createGatewayRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateGatewayResponse response = api.createGateway(createGatewayRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses IAM Identity Center or IAM to authenticate portal users and manage user permissions.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Before you can sign in to a new portal, you must add at least one identity to that portal. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins\&quot;&gt;Adding or removing portal administrators&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPortalTest() throws ApiException {
        CreatePortalRequest createPortalRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreatePortalResponse response = api.createPortal(createPortalRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a project in the specified portal.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Make sure that the project name and description don&#39;t contain confidential information.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectTest() throws ApiException {
        CreateProjectRequest createProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateProjectResponse response = api.createProject(createProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPolicyTest() throws ApiException {
        String accessPolicyId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        Object response = api.deleteAccessPolicy(accessPolicyId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes an asset. This action can&#39;t be undone. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html\&quot;&gt;Deleting assets and models&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;. &lt;/p&gt; &lt;note&gt; &lt;p&gt;You can&#39;t delete an asset that&#39;s associated to another asset. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html\&quot;&gt;DisassociateAssets&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetTest() throws ApiException {
        String assetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        DeleteAssetResponse response = api.deleteAsset(assetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * Deletes an asset model. This action can&#39;t be undone. You must delete all assets created from an asset model before you can delete the model. Also, you can&#39;t delete an asset model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html\&quot;&gt;Deleting assets and models&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetModelTest() throws ApiException {
        String assetModelId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        DeleteAssetModelResponse response = api.deleteAssetModel(assetModelId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * Deletes a dashboard from IoT SiteWise Monitor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDashboardTest() throws ApiException {
        String dashboardId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        Object response = api.deleteDashboard(dashboardId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway&#39;s files remain in your gateway&#39;s file system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGatewayTest() throws ApiException {
        String gatewayId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteGateway(gatewayId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a portal from IoT SiteWise Monitor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePortalTest() throws ApiException {
        String portalId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        DeletePortalResponse response = api.deletePortal(portalId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * Deletes a project from IoT SiteWise Monitor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectTest() throws ApiException {
        String projectId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String clientToken = null;
        Object response = api.deleteProject(projectId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, clientToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a time series (data stream). If you delete a time series that&#39;s associated with an asset property, the asset property still exists, but the time series will no longer be associated with this asset property.&lt;/p&gt; &lt;p&gt;To identify a time series, do one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If the time series isn&#39;t associated with an asset property, specify the &lt;code&gt;alias&lt;/code&gt; of the time series.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If the time series is associated with an asset property, specify one of the following: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;alias&lt;/code&gt; of the time series.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; that identifies the asset property.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTimeSeriesTest() throws ApiException {
        AssociateTimeSeriesToAssetPropertyRequest associateTimeSeriesToAssetPropertyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String alias = null;
        String assetId = null;
        String propertyId = null;
        api.deleteTimeSeries(associateTimeSeriesToAssetPropertyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, alias, assetId, propertyId);
        // TODO: test validations
    }

    /**
     * Describes an access policy, which specifies an identity&#39;s access to an IoT SiteWise Monitor portal or project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAccessPolicyTest() throws ApiException {
        String accessPolicyId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAccessPolicyResponse response = api.describeAccessPolicy(accessPolicyId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about an asset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAssetTest() throws ApiException {
        String assetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean excludeProperties = null;
        DescribeAssetResponse response = api.describeAsset(assetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, excludeProperties);
        // TODO: test validations
    }

    /**
     * Retrieves information about an asset model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAssetModelTest() throws ApiException {
        String assetModelId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Boolean excludeProperties = null;
        DescribeAssetModelResponse response = api.describeAssetModel(assetModelId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, excludeProperties);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves information about an asset property.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation&#39;s response includes the new default value.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;This operation doesn&#39;t return the value of the asset property. To get the value of an asset property, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html\&quot;&gt;GetAssetPropertyValue&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAssetPropertyTest() throws ApiException {
        String assetId = null;
        String propertyId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAssetPropertyResponse response = api.describeAssetProperty(assetId, propertyId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a bulk import job request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/DescribeBulkImportJob.html\&quot;&gt;Describe a bulk import job (CLI)&lt;/a&gt; in the &lt;i&gt;Amazon Simple Storage Service User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBulkImportJobTest() throws ApiException {
        String jobId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeBulkImportJobResponse response = api.describeBulkImportJob(jobId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDashboardTest() throws ApiException {
        String dashboardId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDashboardResponse response = api.describeDashboard(dashboardId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\&quot;&gt;Key management&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDefaultEncryptionConfigurationTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDefaultEncryptionConfigurationResponse response = api.describeDefaultEncryptionConfiguration(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a gateway.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeGatewayTest() throws ApiException {
        String gatewayId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeGatewayResponse response = api.describeGateway(gatewayId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html\&quot;&gt;DescribeGateway&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeGatewayCapabilityConfigurationTest() throws ApiException {
        String gatewayId = null;
        String capabilityNamespace = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeGatewayCapabilityConfigurationResponse response = api.describeGatewayCapabilityConfiguration(gatewayId, capabilityNamespace, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves the current IoT SiteWise logging options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeLoggingOptionsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeLoggingOptionsResponse response = api.describeLoggingOptions(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a portal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describePortalTest() throws ApiException {
        String portalId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribePortalResponse response = api.describePortal(portalId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeProjectTest() throws ApiException {
        String projectId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeProjectResponse response = api.describeProject(projectId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves information about the storage configuration for IoT SiteWise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeStorageConfigurationTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeStorageConfigurationResponse response = api.describeStorageConfiguration(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves information about a time series (data stream).&lt;/p&gt; &lt;p&gt;To identify a time series, do one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If the time series isn&#39;t associated with an asset property, specify the &lt;code&gt;alias&lt;/code&gt; of the time series.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If the time series is associated with an asset property, specify one of the following: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;alias&lt;/code&gt; of the time series.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; that identifies the asset property.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeTimeSeriesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String alias = null;
        String assetId = null;
        String propertyId = null;
        DescribeTimeSeriesResponse response = api.describeTimeSeries(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, alias, assetId, propertyId);
        // TODO: test validations
    }

    /**
     * Disassociates a child asset from the given parent asset through a hierarchy defined in the parent asset&#39;s model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disassociateAssetsTest() throws ApiException {
        String assetId = null;
        DisassociateAssetsRequest disassociateAssetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.disassociateAssets(assetId, disassociateAssetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Disassociates a time series (data stream) from an asset property.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disassociateTimeSeriesFromAssetPropertyTest() throws ApiException {
        String alias = null;
        String assetId = null;
        String propertyId = null;
        AssociateTimeSeriesToAssetPropertyRequest associateTimeSeriesToAssetPropertyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.disassociateTimeSeriesFromAssetProperty(alias, assetId, propertyId, associateTimeSeriesToAssetPropertyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets aggregated values for an asset property. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates\&quot;&gt;Querying aggregates&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPropertyAggregatesTest() throws ApiException {
        List<AggregateType> aggregateTypes = null;
        String resolution = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String assetId = null;
        String propertyId = null;
        String propertyAlias = null;
        List<Quality> qualities = null;
        String timeOrdering = null;
        String nextToken = null;
        Integer maxResults = null;
        GetAssetPropertyAggregatesResponse response = api.getAssetPropertyAggregates(aggregateTypes, resolution, startDate, endDate, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, assetId, propertyId, propertyAlias, qualities, timeOrdering, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets an asset property&#39;s current value. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values\&quot;&gt;Querying current values&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPropertyValueTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String assetId = null;
        String propertyId = null;
        String propertyAlias = null;
        GetAssetPropertyValueResponse response = api.getAssetPropertyValue(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, assetId, propertyId, propertyAlias);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Gets the history of an asset property&#39;s values. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values\&quot;&gt;Querying historical values&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetPropertyValueHistoryTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String assetId = null;
        String propertyId = null;
        String propertyAlias = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<Quality> qualities = null;
        String timeOrdering = null;
        String nextToken = null;
        Integer maxResults = null;
        GetAssetPropertyValueHistoryResponse response = api.getAssetPropertyValueHistory(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, assetId, propertyId, propertyAlias, startDate, endDate, qualities, timeOrdering, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Get interpolated values for an asset property for a specified time interval, during a period of time. If your time series is missing data points during the specified time interval, you can use interpolation to estimate the missing data.&lt;/p&gt; &lt;p&gt;For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInterpolatedAssetPropertyValuesTest() throws ApiException {
        Integer startTimeInSeconds = null;
        Integer endTimeInSeconds = null;
        String quality = null;
        Integer intervalInSeconds = null;
        String type = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String assetId = null;
        String propertyId = null;
        String propertyAlias = null;
        Integer startTimeOffsetInNanos = null;
        Integer endTimeOffsetInNanos = null;
        String nextToken = null;
        Integer maxResults = null;
        Integer intervalWindowInSeconds = null;
        GetInterpolatedAssetPropertyValuesResponse response = api.getInterpolatedAssetPropertyValues(startTimeInSeconds, endTimeInSeconds, quality, intervalInSeconds, type, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, assetId, propertyId, propertyAlias, startTimeOffsetInNanos, endTimeOffsetInNanos, nextToken, maxResults, intervalWindowInSeconds);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of access policies for an identity (an IAM Identity Center user, an IAM Identity Center group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccessPoliciesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String identityType = null;
        String identityId = null;
        String resourceType = null;
        String resourceId = null;
        String iamArn = null;
        String nextToken = null;
        Integer maxResults = null;
        ListAccessPoliciesResponse response = api.listAccessPolicies(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, identityType, identityId, resourceType, resourceId, iamArn, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of properties associated with an asset model. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetModelPropertiesTest() throws ApiException {
        String assetModelId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String filter = null;
        ListAssetModelPropertiesResponse response = api.listAssetModelProperties(assetModelId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, filter);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of summaries of all asset models.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetModelsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListAssetModelsResponse response = api.listAssetModels(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of properties associated with an asset. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetPropertiesTest() throws ApiException {
        String assetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String filter = null;
        ListAssetPropertiesResponse response = api.listAssetProperties(assetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, filter);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset&#39;s root asset and all associated assets between that asset and its root.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetRelationshipsTest() throws ApiException {
        String assetId = null;
        String traversalType = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListAssetRelationshipsResponse response = api.listAssetRelationships(assetId, traversalType, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves a paginated list of asset summaries.&lt;/p&gt; &lt;p&gt;You can use this operation to do the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;List assets based on a specific asset model.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;List top-level assets.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can&#39;t use this operation to list all assets. To retrieve summaries for all of your assets, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html\&quot;&gt;ListAssetModels&lt;/a&gt; to get all of your asset model IDs. Then, use ListAssets to get all assets for each asset model.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String assetModelId = null;
        String filter = null;
        ListAssetsResponse response = api.listAssets(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, assetModelId, filter);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Retrieves a paginated list of associated assets.&lt;/p&gt; &lt;p&gt;You can use this operation to do the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;List child assets associated to a parent asset by a hierarchy that you specify.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;List an asset&#39;s parent asset.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssociatedAssetsTest() throws ApiException {
        String assetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String hierarchyId = null;
        String traversalDirection = null;
        String nextToken = null;
        Integer maxResults = null;
        ListAssociatedAssetsResponse response = api.listAssociatedAssets(assetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, hierarchyId, traversalDirection, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of bulk import job requests. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ListBulkImportJobs.html\&quot;&gt;List bulk import jobs (CLI)&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBulkImportJobsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String filter = null;
        ListBulkImportJobsResponse response = api.listBulkImportJobs(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, filter);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDashboardsTest() throws ApiException {
        String projectId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListDashboardsResponse response = api.listDashboards(projectId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of gateways.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listGatewaysTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListGatewaysResponse response = api.listGateways(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of IoT SiteWise Monitor portals.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPortalsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListPortalsResponse response = api.listPortals(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectAssetsTest() throws ApiException {
        String projectId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListProjectAssetsResponse response = api.listProjectAssets(projectId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectsTest() throws ApiException {
        String portalId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListProjectsResponse response = api.listProjects(portalId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Retrieves the list of tags for an IoT SiteWise resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves a paginated list of time series (data streams).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTimeSeriesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        String assetId = null;
        String aliasPrefix = null;
        String timeSeriesType = null;
        ListTimeSeriesResponse response = api.listTimeSeries(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, assetId, aliasPrefix, timeSeriesType);
        // TODO: test validations
    }

    /**
     * Sets the default encryption configuration for the Amazon Web Services account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\&quot;&gt;Key management&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putDefaultEncryptionConfigurationTest() throws ApiException {
        PutDefaultEncryptionConfigurationRequest putDefaultEncryptionConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutDefaultEncryptionConfigurationResponse response = api.putDefaultEncryptionConfiguration(putDefaultEncryptionConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Sets logging options for IoT SiteWise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putLoggingOptionsTest() throws ApiException {
        PutLoggingOptionsRequest putLoggingOptionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putLoggingOptions(putLoggingOptionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Configures storage settings for IoT SiteWise.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putStorageConfigurationTest() throws ApiException {
        PutStorageConfigurationRequest putStorageConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutStorageConfigurationResponse response = api.putStorageConfiguration(putStorageConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation updates the tag&#39;s value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a tag from an IoT SiteWise resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an existing access policy that specifies an identity&#39;s access to an IoT SiteWise Monitor portal or project resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccessPolicyTest() throws ApiException {
        String accessPolicyId = null;
        UpdateAccessPolicyRequest updateAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateAccessPolicy(accessPolicyId, updateAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an asset&#39;s name. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html\&quot;&gt;Updating assets and models&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAssetTest() throws ApiException {
        String assetId = null;
        UpdateAssetRequest updateAssetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAssetResponse response = api.updateAsset(assetId, updateAssetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model&#39;s property and hierarchy definitions. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html\&quot;&gt;Updating assets and models&lt;/a&gt; in the &lt;i&gt;IoT SiteWise User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This operation overwrites the existing model with the provided model. To avoid deleting your asset model&#39;s properties or hierarchies, you must include their IDs and definitions in the updated asset model payload. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html\&quot;&gt;DescribeAssetModel&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every asset associated with that hierarchy. You can&#39;t change the type or data type of an existing property.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAssetModelTest() throws ApiException {
        String assetModelId = null;
        UpdateAssetModelRequest updateAssetModelRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAssetModelResponse response = api.updateAssetModel(assetModelId, updateAssetModelRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates an asset property&#39;s alias and notification state.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This operation overwrites the property&#39;s existing alias and notification state. To keep your existing property&#39;s alias or notification state, you must include the existing values in the UpdateAssetProperty request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html\&quot;&gt;DescribeAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAssetPropertyTest() throws ApiException {
        String assetId = null;
        String propertyId = null;
        UpdateAssetPropertyRequest updateAssetPropertyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.updateAssetProperty(assetId, propertyId, updateAssetPropertyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an IoT SiteWise Monitor dashboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDashboardTest() throws ApiException {
        String dashboardId = null;
        UpdateDashboardRequest updateDashboardRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateDashboard(dashboardId, updateDashboardRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a gateway&#39;s name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGatewayTest() throws ApiException {
        String gatewayId = null;
        UpdateGatewayRequest updateGatewayRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.updateGateway(gatewayId, updateGatewayRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a gateway capability configuration or defines a new capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html\&quot;&gt;DescribeGateway&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGatewayCapabilityConfigurationTest() throws ApiException {
        String gatewayId = null;
        UpdateGatewayCapabilityConfigurationRequest updateGatewayCapabilityConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateGatewayCapabilityConfigurationResponse response = api.updateGatewayCapabilityConfiguration(gatewayId, updateGatewayCapabilityConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an IoT SiteWise Monitor portal.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePortalTest() throws ApiException {
        String portalId = null;
        UpdatePortalRequest updatePortalRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdatePortalResponse response = api.updatePortal(portalId, updatePortalRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an IoT SiteWise Monitor project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectTest() throws ApiException {
        String projectId = null;
        UpdateProjectRequest updateProjectRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateProject(projectId, updateProjectRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
