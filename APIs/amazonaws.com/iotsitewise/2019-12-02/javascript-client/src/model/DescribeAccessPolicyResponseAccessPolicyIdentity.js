/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAccessPolicyRequestAccessPolicyIdentityGroup from './CreateAccessPolicyRequestAccessPolicyIdentityGroup';
import CreateAccessPolicyRequestAccessPolicyIdentityIamRole from './CreateAccessPolicyRequestAccessPolicyIdentityIamRole';
import CreateAccessPolicyRequestAccessPolicyIdentityIamUser from './CreateAccessPolicyRequestAccessPolicyIdentityIamUser';
import CreateAccessPolicyRequestAccessPolicyIdentityUser from './CreateAccessPolicyRequestAccessPolicyIdentityUser';
import Identity from './Identity';

/**
 * The DescribeAccessPolicyResponseAccessPolicyIdentity model module.
 * @module model/DescribeAccessPolicyResponseAccessPolicyIdentity
 * @version 2019-12-02
 */
class DescribeAccessPolicyResponseAccessPolicyIdentity {
    /**
     * Constructs a new <code>DescribeAccessPolicyResponseAccessPolicyIdentity</code>.
     * @alias module:model/DescribeAccessPolicyResponseAccessPolicyIdentity
     * @implements module:model/Identity
     */
    constructor() { 
        Identity.initialize(this);
        DescribeAccessPolicyResponseAccessPolicyIdentity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeAccessPolicyResponseAccessPolicyIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeAccessPolicyResponseAccessPolicyIdentity} obj Optional instance to populate.
     * @return {module:model/DescribeAccessPolicyResponseAccessPolicyIdentity} The populated <code>DescribeAccessPolicyResponseAccessPolicyIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeAccessPolicyResponseAccessPolicyIdentity();
            Identity.constructFromObject(data, obj);

            if (data.hasOwnProperty('user')) {
                obj['user'] = CreateAccessPolicyRequestAccessPolicyIdentityUser.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = CreateAccessPolicyRequestAccessPolicyIdentityGroup.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('iamUser')) {
                obj['iamUser'] = CreateAccessPolicyRequestAccessPolicyIdentityIamUser.constructFromObject(data['iamUser']);
            }
            if (data.hasOwnProperty('iamRole')) {
                obj['iamRole'] = CreateAccessPolicyRequestAccessPolicyIdentityIamRole.constructFromObject(data['iamRole']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeAccessPolicyResponseAccessPolicyIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeAccessPolicyResponseAccessPolicyIdentity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `user`
        if (data['user']) { // data not null
          CreateAccessPolicyRequestAccessPolicyIdentityUser.validateJSON(data['user']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          CreateAccessPolicyRequestAccessPolicyIdentityGroup.validateJSON(data['group']);
        }
        // validate the optional field `iamUser`
        if (data['iamUser']) { // data not null
          CreateAccessPolicyRequestAccessPolicyIdentityIamUser.validateJSON(data['iamUser']);
        }
        // validate the optional field `iamRole`
        if (data['iamRole']) { // data not null
          CreateAccessPolicyRequestAccessPolicyIdentityIamRole.validateJSON(data['iamRole']);
        }

        return true;
    }


}



/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityUser} user
 */
DescribeAccessPolicyResponseAccessPolicyIdentity.prototype['user'] = undefined;

/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityGroup} group
 */
DescribeAccessPolicyResponseAccessPolicyIdentity.prototype['group'] = undefined;

/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityIamUser} iamUser
 */
DescribeAccessPolicyResponseAccessPolicyIdentity.prototype['iamUser'] = undefined;

/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityIamRole} iamRole
 */
DescribeAccessPolicyResponseAccessPolicyIdentity.prototype['iamRole'] = undefined;


// Implement Identity interface:
/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityUser} user
 */
Identity.prototype['user'] = undefined;
/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityGroup} group
 */
Identity.prototype['group'] = undefined;
/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityIamUser} iamUser
 */
Identity.prototype['iamUser'] = undefined;
/**
 * @member {module:model/CreateAccessPolicyRequestAccessPolicyIdentityIamRole} iamRole
 */
Identity.prototype['iamRole'] = undefined;




export default DescribeAccessPolicyResponseAccessPolicyIdentity;

