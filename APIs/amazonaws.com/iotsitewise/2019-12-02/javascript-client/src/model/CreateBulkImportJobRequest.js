/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBulkImportJobRequestErrorReportLocation from './CreateBulkImportJobRequestErrorReportLocation';
import CreateBulkImportJobRequestJobConfiguration from './CreateBulkImportJobRequestJobConfiguration';

/**
 * The CreateBulkImportJobRequest model module.
 * @module model/CreateBulkImportJobRequest
 * @version 2019-12-02
 */
class CreateBulkImportJobRequest {
    /**
     * Constructs a new <code>CreateBulkImportJobRequest</code>.
     * @alias module:model/CreateBulkImportJobRequest
     * @param jobName {String} The unique name that helps identify the job request.
     * @param jobRoleArn {String} The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.
     * @param files {Array.<File>} The files in the specified Amazon S3 bucket that contain your data.
     * @param errorReportLocation {module:model/CreateBulkImportJobRequestErrorReportLocation} 
     * @param jobConfiguration {module:model/CreateBulkImportJobRequestJobConfiguration} 
     */
    constructor(jobName, jobRoleArn, files, errorReportLocation, jobConfiguration) { 
        
        CreateBulkImportJobRequest.initialize(this, jobName, jobRoleArn, files, errorReportLocation, jobConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobName, jobRoleArn, files, errorReportLocation, jobConfiguration) { 
        obj['jobName'] = jobName;
        obj['jobRoleArn'] = jobRoleArn;
        obj['files'] = files;
        obj['errorReportLocation'] = errorReportLocation;
        obj['jobConfiguration'] = jobConfiguration;
    }

    /**
     * Constructs a <code>CreateBulkImportJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBulkImportJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateBulkImportJobRequest} The populated <code>CreateBulkImportJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBulkImportJobRequest();

            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('jobRoleArn')) {
                obj['jobRoleArn'] = ApiClient.convertToType(data['jobRoleArn'], 'String');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [File]);
            }
            if (data.hasOwnProperty('errorReportLocation')) {
                obj['errorReportLocation'] = CreateBulkImportJobRequestErrorReportLocation.constructFromObject(data['errorReportLocation']);
            }
            if (data.hasOwnProperty('jobConfiguration')) {
                obj['jobConfiguration'] = CreateBulkImportJobRequestJobConfiguration.constructFromObject(data['jobConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBulkImportJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBulkImportJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBulkImportJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['jobName'] && !(typeof data['jobName'] === 'string' || data['jobName'] instanceof String)) {
            throw new Error("Expected the field `jobName` to be a primitive type in the JSON string but got " + data['jobName']);
        }
        // ensure the json data is a string
        if (data['jobRoleArn'] && !(typeof data['jobRoleArn'] === 'string' || data['jobRoleArn'] instanceof String)) {
            throw new Error("Expected the field `jobRoleArn` to be a primitive type in the JSON string but got " + data['jobRoleArn']);
        }
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                File.validateJSON(item);
            };
        }
        // validate the optional field `errorReportLocation`
        if (data['errorReportLocation']) { // data not null
          CreateBulkImportJobRequestErrorReportLocation.validateJSON(data['errorReportLocation']);
        }
        // validate the optional field `jobConfiguration`
        if (data['jobConfiguration']) { // data not null
          CreateBulkImportJobRequestJobConfiguration.validateJSON(data['jobConfiguration']);
        }

        return true;
    }


}

CreateBulkImportJobRequest.RequiredProperties = ["jobName", "jobRoleArn", "files", "errorReportLocation", "jobConfiguration"];

/**
 * The unique name that helps identify the job request.
 * @member {String} jobName
 */
CreateBulkImportJobRequest.prototype['jobName'] = undefined;

/**
 * The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.
 * @member {String} jobRoleArn
 */
CreateBulkImportJobRequest.prototype['jobRoleArn'] = undefined;

/**
 * The files in the specified Amazon S3 bucket that contain your data.
 * @member {Array.<File>} files
 */
CreateBulkImportJobRequest.prototype['files'] = undefined;

/**
 * @member {module:model/CreateBulkImportJobRequestErrorReportLocation} errorReportLocation
 */
CreateBulkImportJobRequest.prototype['errorReportLocation'] = undefined;

/**
 * @member {module:model/CreateBulkImportJobRequestJobConfiguration} jobConfiguration
 */
CreateBulkImportJobRequest.prototype['jobConfiguration'] = undefined;






export default CreateBulkImportJobRequest;

