/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TimeInNanos model module.
 * @module model/TimeInNanos
 * @version 2019-12-02
 */
class TimeInNanos {
    /**
     * Constructs a new <code>TimeInNanos</code>.
     * Contains a timestamp with optional nanosecond granularity.
     * @alias module:model/TimeInNanos
     * @param timeInSeconds {Number} 
     */
    constructor(timeInSeconds) { 
        
        TimeInNanos.initialize(this, timeInSeconds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timeInSeconds) { 
        obj['timeInSeconds'] = timeInSeconds;
    }

    /**
     * Constructs a <code>TimeInNanos</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeInNanos} obj Optional instance to populate.
     * @return {module:model/TimeInNanos} The populated <code>TimeInNanos</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeInNanos();

            if (data.hasOwnProperty('timeInSeconds')) {
                obj['timeInSeconds'] = ApiClient.convertToType(data['timeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('offsetInNanos')) {
                obj['offsetInNanos'] = ApiClient.convertToType(data['offsetInNanos'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeInNanos</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeInNanos</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeInNanos.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `timeInSeconds`
        if (data['timeInSeconds']) { // data not null
          Number.validateJSON(data['timeInSeconds']);
        }
        // validate the optional field `offsetInNanos`
        if (data['offsetInNanos']) { // data not null
          Number.validateJSON(data['offsetInNanos']);
        }

        return true;
    }


}

TimeInNanos.RequiredProperties = ["timeInSeconds"];

/**
 * @member {Number} timeInSeconds
 */
TimeInNanos.prototype['timeInSeconds'] = undefined;

/**
 * @member {Number} offsetInNanos
 */
TimeInNanos.prototype['offsetInNanos'] = undefined;






export default TimeInNanos;

