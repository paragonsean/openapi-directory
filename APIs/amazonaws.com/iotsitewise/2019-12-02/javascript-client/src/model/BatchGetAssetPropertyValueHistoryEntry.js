/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeOrdering from './TimeOrdering';

/**
 * The BatchGetAssetPropertyValueHistoryEntry model module.
 * @module model/BatchGetAssetPropertyValueHistoryEntry
 * @version 2019-12-02
 */
class BatchGetAssetPropertyValueHistoryEntry {
    /**
     * Constructs a new <code>BatchGetAssetPropertyValueHistoryEntry</code>.
     * &lt;p&gt;Contains information for an asset property historical value entry that is associated with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html\&quot;&gt;BatchGetAssetPropertyValueHistory&lt;/a&gt; API.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/BatchGetAssetPropertyValueHistoryEntry
     * @param entryId {String} 
     */
    constructor(entryId) { 
        
        BatchGetAssetPropertyValueHistoryEntry.initialize(this, entryId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entryId) { 
        obj['entryId'] = entryId;
    }

    /**
     * Constructs a <code>BatchGetAssetPropertyValueHistoryEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetAssetPropertyValueHistoryEntry} obj Optional instance to populate.
     * @return {module:model/BatchGetAssetPropertyValueHistoryEntry} The populated <code>BatchGetAssetPropertyValueHistoryEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetAssetPropertyValueHistoryEntry();

            if (data.hasOwnProperty('entryId')) {
                obj['entryId'] = ApiClient.convertToType(data['entryId'], 'String');
            }
            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
            }
            if (data.hasOwnProperty('propertyId')) {
                obj['propertyId'] = ApiClient.convertToType(data['propertyId'], 'String');
            }
            if (data.hasOwnProperty('propertyAlias')) {
                obj['propertyAlias'] = ApiClient.convertToType(data['propertyAlias'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('qualities')) {
                obj['qualities'] = ApiClient.convertToType(data['qualities'], Array);
            }
            if (data.hasOwnProperty('timeOrdering')) {
                obj['timeOrdering'] = ApiClient.convertToType(data['timeOrdering'], TimeOrdering);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetAssetPropertyValueHistoryEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetAssetPropertyValueHistoryEntry</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchGetAssetPropertyValueHistoryEntry.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `entryId`
        if (data['entryId']) { // data not null
          String.validateJSON(data['entryId']);
        }
        // validate the optional field `assetId`
        if (data['assetId']) { // data not null
          String.validateJSON(data['assetId']);
        }
        // validate the optional field `propertyId`
        if (data['propertyId']) { // data not null
          String.validateJSON(data['propertyId']);
        }
        // validate the optional field `propertyAlias`
        if (data['propertyAlias']) { // data not null
          String.validateJSON(data['propertyAlias']);
        }
        // validate the optional field `startDate`
        if (data['startDate']) { // data not null
          Date.validateJSON(data['startDate']);
        }
        // validate the optional field `endDate`
        if (data['endDate']) { // data not null
          Date.validateJSON(data['endDate']);
        }
        // validate the optional field `qualities`
        if (data['qualities']) { // data not null
          Array.validateJSON(data['qualities']);
        }
        // validate the optional field `timeOrdering`
        if (data['timeOrdering']) { // data not null
          TimeOrdering.validateJSON(data['timeOrdering']);
        }

        return true;
    }


}

BatchGetAssetPropertyValueHistoryEntry.RequiredProperties = ["entryId"];

/**
 * @member {String} entryId
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['entryId'] = undefined;

/**
 * @member {String} assetId
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['assetId'] = undefined;

/**
 * @member {String} propertyId
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['propertyId'] = undefined;

/**
 * @member {String} propertyAlias
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['propertyAlias'] = undefined;

/**
 * @member {Date} startDate
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['startDate'] = undefined;

/**
 * @member {Date} endDate
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['endDate'] = undefined;

/**
 * @member {Array} qualities
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['qualities'] = undefined;

/**
 * @member {module:model/TimeOrdering} timeOrdering
 */
BatchGetAssetPropertyValueHistoryEntry.prototype['timeOrdering'] = undefined;






export default BatchGetAssetPropertyValueHistoryEntry;

