/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePortalResponsePortalStatus from './CreatePortalResponsePortalStatus';

/**
 * The CreatePortalResponse model module.
 * @module model/CreatePortalResponse
 * @version 2019-12-02
 */
class CreatePortalResponse {
    /**
     * Constructs a new <code>CreatePortalResponse</code>.
     * @alias module:model/CreatePortalResponse
     * @param portalId {String} 
     * @param portalArn {String} 
     * @param portalStartUrl {String} 
     * @param portalStatus {module:model/CreatePortalResponsePortalStatus} 
     * @param ssoApplicationId {String} 
     */
    constructor(portalId, portalArn, portalStartUrl, portalStatus, ssoApplicationId) { 
        
        CreatePortalResponse.initialize(this, portalId, portalArn, portalStartUrl, portalStatus, ssoApplicationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, portalId, portalArn, portalStartUrl, portalStatus, ssoApplicationId) { 
        obj['portalId'] = portalId;
        obj['portalArn'] = portalArn;
        obj['portalStartUrl'] = portalStartUrl;
        obj['portalStatus'] = portalStatus;
        obj['ssoApplicationId'] = ssoApplicationId;
    }

    /**
     * Constructs a <code>CreatePortalResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePortalResponse} obj Optional instance to populate.
     * @return {module:model/CreatePortalResponse} The populated <code>CreatePortalResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePortalResponse();

            if (data.hasOwnProperty('portalId')) {
                obj['portalId'] = ApiClient.convertToType(data['portalId'], 'String');
            }
            if (data.hasOwnProperty('portalArn')) {
                obj['portalArn'] = ApiClient.convertToType(data['portalArn'], 'String');
            }
            if (data.hasOwnProperty('portalStartUrl')) {
                obj['portalStartUrl'] = ApiClient.convertToType(data['portalStartUrl'], 'String');
            }
            if (data.hasOwnProperty('portalStatus')) {
                obj['portalStatus'] = CreatePortalResponsePortalStatus.constructFromObject(data['portalStatus']);
            }
            if (data.hasOwnProperty('ssoApplicationId')) {
                obj['ssoApplicationId'] = ApiClient.convertToType(data['ssoApplicationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePortalResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePortalResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePortalResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `portalId`
        if (data['portalId']) { // data not null
          String.validateJSON(data['portalId']);
        }
        // validate the optional field `portalArn`
        if (data['portalArn']) { // data not null
          String.validateJSON(data['portalArn']);
        }
        // validate the optional field `portalStartUrl`
        if (data['portalStartUrl']) { // data not null
          String.validateJSON(data['portalStartUrl']);
        }
        // validate the optional field `portalStatus`
        if (data['portalStatus']) { // data not null
          CreatePortalResponsePortalStatus.validateJSON(data['portalStatus']);
        }
        // validate the optional field `ssoApplicationId`
        if (data['ssoApplicationId']) { // data not null
          String.validateJSON(data['ssoApplicationId']);
        }

        return true;
    }


}

CreatePortalResponse.RequiredProperties = ["portalId", "portalArn", "portalStartUrl", "portalStatus", "ssoApplicationId"];

/**
 * @member {String} portalId
 */
CreatePortalResponse.prototype['portalId'] = undefined;

/**
 * @member {String} portalArn
 */
CreatePortalResponse.prototype['portalArn'] = undefined;

/**
 * @member {String} portalStartUrl
 */
CreatePortalResponse.prototype['portalStartUrl'] = undefined;

/**
 * @member {module:model/CreatePortalResponsePortalStatus} portalStatus
 */
CreatePortalResponse.prototype['portalStatus'] = undefined;

/**
 * @member {String} ssoApplicationId
 */
CreatePortalResponse.prototype['ssoApplicationId'] = undefined;






export default CreatePortalResponse;

