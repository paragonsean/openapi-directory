/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationStatus from './ConfigurationStatus';
import DescribeStorageConfigurationResponseMultiLayerStorage from './DescribeStorageConfigurationResponseMultiLayerStorage';
import DescribeStorageConfigurationResponseRetentionPeriod from './DescribeStorageConfigurationResponseRetentionPeriod';
import DisassociatedDataStorageState from './DisassociatedDataStorageState';
import StorageType from './StorageType';

/**
 * The DescribeStorageConfigurationResponse model module.
 * @module model/DescribeStorageConfigurationResponse
 * @version 2019-12-02
 */
class DescribeStorageConfigurationResponse {
    /**
     * Constructs a new <code>DescribeStorageConfigurationResponse</code>.
     * @alias module:model/DescribeStorageConfigurationResponse
     * @param storageType {module:model/StorageType} 
     * @param configurationStatus {module:model/ConfigurationStatus} 
     */
    constructor(storageType, configurationStatus) { 
        
        DescribeStorageConfigurationResponse.initialize(this, storageType, configurationStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, storageType, configurationStatus) { 
        obj['storageType'] = storageType;
        obj['configurationStatus'] = configurationStatus;
    }

    /**
     * Constructs a <code>DescribeStorageConfigurationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeStorageConfigurationResponse} obj Optional instance to populate.
     * @return {module:model/DescribeStorageConfigurationResponse} The populated <code>DescribeStorageConfigurationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeStorageConfigurationResponse();

            if (data.hasOwnProperty('storageType')) {
                obj['storageType'] = ApiClient.convertToType(data['storageType'], StorageType);
            }
            if (data.hasOwnProperty('multiLayerStorage')) {
                obj['multiLayerStorage'] = DescribeStorageConfigurationResponseMultiLayerStorage.constructFromObject(data['multiLayerStorage']);
            }
            if (data.hasOwnProperty('disassociatedDataStorage')) {
                obj['disassociatedDataStorage'] = ApiClient.convertToType(data['disassociatedDataStorage'], DisassociatedDataStorageState);
            }
            if (data.hasOwnProperty('retentionPeriod')) {
                obj['retentionPeriod'] = DescribeStorageConfigurationResponseRetentionPeriod.constructFromObject(data['retentionPeriod']);
            }
            if (data.hasOwnProperty('configurationStatus')) {
                obj['configurationStatus'] = ConfigurationStatus.constructFromObject(data['configurationStatus']);
            }
            if (data.hasOwnProperty('lastUpdateDate')) {
                obj['lastUpdateDate'] = ApiClient.convertToType(data['lastUpdateDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeStorageConfigurationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeStorageConfigurationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeStorageConfigurationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `storageType`
        if (data['storageType']) { // data not null
          StorageType.validateJSON(data['storageType']);
        }
        // validate the optional field `multiLayerStorage`
        if (data['multiLayerStorage']) { // data not null
          DescribeStorageConfigurationResponseMultiLayerStorage.validateJSON(data['multiLayerStorage']);
        }
        // validate the optional field `disassociatedDataStorage`
        if (data['disassociatedDataStorage']) { // data not null
          DisassociatedDataStorageState.validateJSON(data['disassociatedDataStorage']);
        }
        // validate the optional field `retentionPeriod`
        if (data['retentionPeriod']) { // data not null
          DescribeStorageConfigurationResponseRetentionPeriod.validateJSON(data['retentionPeriod']);
        }
        // validate the optional field `configurationStatus`
        if (data['configurationStatus']) { // data not null
          ConfigurationStatus.validateJSON(data['configurationStatus']);
        }
        // validate the optional field `lastUpdateDate`
        if (data['lastUpdateDate']) { // data not null
          Date.validateJSON(data['lastUpdateDate']);
        }

        return true;
    }


}

DescribeStorageConfigurationResponse.RequiredProperties = ["storageType", "configurationStatus"];

/**
 * @member {module:model/StorageType} storageType
 */
DescribeStorageConfigurationResponse.prototype['storageType'] = undefined;

/**
 * @member {module:model/DescribeStorageConfigurationResponseMultiLayerStorage} multiLayerStorage
 */
DescribeStorageConfigurationResponse.prototype['multiLayerStorage'] = undefined;

/**
 * @member {module:model/DisassociatedDataStorageState} disassociatedDataStorage
 */
DescribeStorageConfigurationResponse.prototype['disassociatedDataStorage'] = undefined;

/**
 * @member {module:model/DescribeStorageConfigurationResponseRetentionPeriod} retentionPeriod
 */
DescribeStorageConfigurationResponse.prototype['retentionPeriod'] = undefined;

/**
 * @member {module:model/ConfigurationStatus} configurationStatus
 */
DescribeStorageConfigurationResponse.prototype['configurationStatus'] = undefined;

/**
 * @member {Date} lastUpdateDate
 */
DescribeStorageConfigurationResponse.prototype['lastUpdateDate'] = undefined;






export default DescribeStorageConfigurationResponse;

