/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetModelCompositeModel from './AssetModelCompositeModel';
import AssetModelHierarchy from './AssetModelHierarchy';
import AssetModelProperty from './AssetModelProperty';

/**
 * The UpdateAssetModelRequest model module.
 * @module model/UpdateAssetModelRequest
 * @version 2019-12-02
 */
class UpdateAssetModelRequest {
    /**
     * Constructs a new <code>UpdateAssetModelRequest</code>.
     * @alias module:model/UpdateAssetModelRequest
     * @param assetModelName {String} A unique, friendly name for the asset model.
     */
    constructor(assetModelName) { 
        
        UpdateAssetModelRequest.initialize(this, assetModelName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetModelName) { 
        obj['assetModelName'] = assetModelName;
    }

    /**
     * Constructs a <code>UpdateAssetModelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateAssetModelRequest} obj Optional instance to populate.
     * @return {module:model/UpdateAssetModelRequest} The populated <code>UpdateAssetModelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateAssetModelRequest();

            if (data.hasOwnProperty('assetModelName')) {
                obj['assetModelName'] = ApiClient.convertToType(data['assetModelName'], 'String');
            }
            if (data.hasOwnProperty('assetModelDescription')) {
                obj['assetModelDescription'] = ApiClient.convertToType(data['assetModelDescription'], 'String');
            }
            if (data.hasOwnProperty('assetModelProperties')) {
                obj['assetModelProperties'] = ApiClient.convertToType(data['assetModelProperties'], [AssetModelProperty]);
            }
            if (data.hasOwnProperty('assetModelHierarchies')) {
                obj['assetModelHierarchies'] = ApiClient.convertToType(data['assetModelHierarchies'], [AssetModelHierarchy]);
            }
            if (data.hasOwnProperty('assetModelCompositeModels')) {
                obj['assetModelCompositeModels'] = ApiClient.convertToType(data['assetModelCompositeModels'], [AssetModelCompositeModel]);
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateAssetModelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateAssetModelRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateAssetModelRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assetModelName'] && !(typeof data['assetModelName'] === 'string' || data['assetModelName'] instanceof String)) {
            throw new Error("Expected the field `assetModelName` to be a primitive type in the JSON string but got " + data['assetModelName']);
        }
        // ensure the json data is a string
        if (data['assetModelDescription'] && !(typeof data['assetModelDescription'] === 'string' || data['assetModelDescription'] instanceof String)) {
            throw new Error("Expected the field `assetModelDescription` to be a primitive type in the JSON string but got " + data['assetModelDescription']);
        }
        if (data['assetModelProperties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assetModelProperties'])) {
                throw new Error("Expected the field `assetModelProperties` to be an array in the JSON data but got " + data['assetModelProperties']);
            }
            // validate the optional field `assetModelProperties` (array)
            for (const item of data['assetModelProperties']) {
                AssetModelProperty.validateJSON(item);
            };
        }
        if (data['assetModelHierarchies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assetModelHierarchies'])) {
                throw new Error("Expected the field `assetModelHierarchies` to be an array in the JSON data but got " + data['assetModelHierarchies']);
            }
            // validate the optional field `assetModelHierarchies` (array)
            for (const item of data['assetModelHierarchies']) {
                AssetModelHierarchy.validateJSON(item);
            };
        }
        if (data['assetModelCompositeModels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assetModelCompositeModels'])) {
                throw new Error("Expected the field `assetModelCompositeModels` to be an array in the JSON data but got " + data['assetModelCompositeModels']);
            }
            // validate the optional field `assetModelCompositeModels` (array)
            for (const item of data['assetModelCompositeModels']) {
                AssetModelCompositeModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }

        return true;
    }


}

UpdateAssetModelRequest.RequiredProperties = ["assetModelName"];

/**
 * A unique, friendly name for the asset model.
 * @member {String} assetModelName
 */
UpdateAssetModelRequest.prototype['assetModelName'] = undefined;

/**
 * A description for the asset model.
 * @member {String} assetModelDescription
 */
UpdateAssetModelRequest.prototype['assetModelDescription'] = undefined;

/**
 * <p>The updated property definitions of the asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html\">Asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 200 properties per asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
 * @member {Array.<module:model/AssetModelProperty>} assetModelProperties
 */
UpdateAssetModelRequest.prototype['assetModelProperties'] = undefined;

/**
 * <p>The updated hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html\">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>You can specify up to 10 hierarchies per asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.</p>
 * @member {Array.<module:model/AssetModelHierarchy>} assetModelHierarchies
 */
UpdateAssetModelRequest.prototype['assetModelHierarchies'] = undefined;

/**
 * The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties. Each composite model has a type that defines the properties that the composite model supports. Use composite asset models to define alarms on this asset model.
 * @member {Array.<module:model/AssetModelCompositeModel>} assetModelCompositeModels
 */
UpdateAssetModelRequest.prototype['assetModelCompositeModels'] = undefined;

/**
 * A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
 * @member {String} clientToken
 */
UpdateAssetModelRequest.prototype['clientToken'] = undefined;






export default UpdateAssetModelRequest;

