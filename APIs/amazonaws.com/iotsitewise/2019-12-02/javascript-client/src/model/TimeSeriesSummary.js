/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertyDataType from './PropertyDataType';

/**
 * The TimeSeriesSummary model module.
 * @module model/TimeSeriesSummary
 * @version 2019-12-02
 */
class TimeSeriesSummary {
    /**
     * Constructs a new <code>TimeSeriesSummary</code>.
     * Contains a summary of a time series (data stream).
     * @alias module:model/TimeSeriesSummary
     * @param timeSeriesId {String} 
     * @param dataType {module:model/PropertyDataType} 
     * @param timeSeriesCreationDate {Date} 
     * @param timeSeriesLastUpdateDate {Date} 
     * @param timeSeriesArn {String} 
     */
    constructor(timeSeriesId, dataType, timeSeriesCreationDate, timeSeriesLastUpdateDate, timeSeriesArn) { 
        
        TimeSeriesSummary.initialize(this, timeSeriesId, dataType, timeSeriesCreationDate, timeSeriesLastUpdateDate, timeSeriesArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timeSeriesId, dataType, timeSeriesCreationDate, timeSeriesLastUpdateDate, timeSeriesArn) { 
        obj['timeSeriesId'] = timeSeriesId;
        obj['dataType'] = dataType;
        obj['timeSeriesCreationDate'] = timeSeriesCreationDate;
        obj['timeSeriesLastUpdateDate'] = timeSeriesLastUpdateDate;
        obj['timeSeriesArn'] = timeSeriesArn;
    }

    /**
     * Constructs a <code>TimeSeriesSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesSummary} obj Optional instance to populate.
     * @return {module:model/TimeSeriesSummary} The populated <code>TimeSeriesSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesSummary();

            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
            }
            if (data.hasOwnProperty('propertyId')) {
                obj['propertyId'] = ApiClient.convertToType(data['propertyId'], 'String');
            }
            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesId')) {
                obj['timeSeriesId'] = ApiClient.convertToType(data['timeSeriesId'], 'String');
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], PropertyDataType);
            }
            if (data.hasOwnProperty('dataTypeSpec')) {
                obj['dataTypeSpec'] = ApiClient.convertToType(data['dataTypeSpec'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesCreationDate')) {
                obj['timeSeriesCreationDate'] = ApiClient.convertToType(data['timeSeriesCreationDate'], 'Date');
            }
            if (data.hasOwnProperty('timeSeriesLastUpdateDate')) {
                obj['timeSeriesLastUpdateDate'] = ApiClient.convertToType(data['timeSeriesLastUpdateDate'], 'Date');
            }
            if (data.hasOwnProperty('timeSeriesArn')) {
                obj['timeSeriesArn'] = ApiClient.convertToType(data['timeSeriesArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimeSeriesSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `assetId`
        if (data['assetId']) { // data not null
          String.validateJSON(data['assetId']);
        }
        // validate the optional field `propertyId`
        if (data['propertyId']) { // data not null
          String.validateJSON(data['propertyId']);
        }
        // validate the optional field `alias`
        if (data['alias']) { // data not null
          String.validateJSON(data['alias']);
        }
        // validate the optional field `timeSeriesId`
        if (data['timeSeriesId']) { // data not null
          String.validateJSON(data['timeSeriesId']);
        }
        // validate the optional field `dataType`
        if (data['dataType']) { // data not null
          PropertyDataType.validateJSON(data['dataType']);
        }
        // validate the optional field `dataTypeSpec`
        if (data['dataTypeSpec']) { // data not null
          String.validateJSON(data['dataTypeSpec']);
        }
        // validate the optional field `timeSeriesCreationDate`
        if (data['timeSeriesCreationDate']) { // data not null
          Date.validateJSON(data['timeSeriesCreationDate']);
        }
        // validate the optional field `timeSeriesLastUpdateDate`
        if (data['timeSeriesLastUpdateDate']) { // data not null
          Date.validateJSON(data['timeSeriesLastUpdateDate']);
        }
        // validate the optional field `timeSeriesArn`
        if (data['timeSeriesArn']) { // data not null
          String.validateJSON(data['timeSeriesArn']);
        }

        return true;
    }


}

TimeSeriesSummary.RequiredProperties = ["timeSeriesId", "dataType", "timeSeriesCreationDate", "timeSeriesLastUpdateDate", "timeSeriesArn"];

/**
 * @member {String} assetId
 */
TimeSeriesSummary.prototype['assetId'] = undefined;

/**
 * @member {String} propertyId
 */
TimeSeriesSummary.prototype['propertyId'] = undefined;

/**
 * @member {String} alias
 */
TimeSeriesSummary.prototype['alias'] = undefined;

/**
 * @member {String} timeSeriesId
 */
TimeSeriesSummary.prototype['timeSeriesId'] = undefined;

/**
 * @member {module:model/PropertyDataType} dataType
 */
TimeSeriesSummary.prototype['dataType'] = undefined;

/**
 * @member {String} dataTypeSpec
 */
TimeSeriesSummary.prototype['dataTypeSpec'] = undefined;

/**
 * @member {Date} timeSeriesCreationDate
 */
TimeSeriesSummary.prototype['timeSeriesCreationDate'] = undefined;

/**
 * @member {Date} timeSeriesLastUpdateDate
 */
TimeSeriesSummary.prototype['timeSeriesLastUpdateDate'] = undefined;

/**
 * @member {String} timeSeriesArn
 */
TimeSeriesSummary.prototype['timeSeriesArn'] = undefined;






export default TimeSeriesSummary;

