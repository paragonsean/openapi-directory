/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetSummaryStatus from './AssetSummaryStatus';

/**
 * The AssetSummary model module.
 * @module model/AssetSummary
 * @version 2019-12-02
 */
class AssetSummary {
    /**
     * Constructs a new <code>AssetSummary</code>.
     * Contains a summary of an asset.
     * @alias module:model/AssetSummary
     * @param id {String} 
     * @param arn {String} 
     * @param name {String} 
     * @param assetModelId {String} 
     * @param creationDate {Date} 
     * @param lastUpdateDate {Date} 
     * @param status {module:model/AssetSummaryStatus} 
     * @param hierarchies {Array} 
     */
    constructor(id, arn, name, assetModelId, creationDate, lastUpdateDate, status, hierarchies) { 
        
        AssetSummary.initialize(this, id, arn, name, assetModelId, creationDate, lastUpdateDate, status, hierarchies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, arn, name, assetModelId, creationDate, lastUpdateDate, status, hierarchies) { 
        obj['id'] = id;
        obj['arn'] = arn;
        obj['name'] = name;
        obj['assetModelId'] = assetModelId;
        obj['creationDate'] = creationDate;
        obj['lastUpdateDate'] = lastUpdateDate;
        obj['status'] = status;
        obj['hierarchies'] = hierarchies;
    }

    /**
     * Constructs a <code>AssetSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetSummary} obj Optional instance to populate.
     * @return {module:model/AssetSummary} The populated <code>AssetSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetSummary();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('assetModelId')) {
                obj['assetModelId'] = ApiClient.convertToType(data['assetModelId'], 'String');
            }
            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdateDate')) {
                obj['lastUpdateDate'] = ApiClient.convertToType(data['lastUpdateDate'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = AssetSummaryStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('hierarchies')) {
                obj['hierarchies'] = ApiClient.convertToType(data['hierarchies'], Array);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `assetModelId`
        if (data['assetModelId']) { // data not null
          String.validateJSON(data['assetModelId']);
        }
        // validate the optional field `creationDate`
        if (data['creationDate']) { // data not null
          Date.validateJSON(data['creationDate']);
        }
        // validate the optional field `lastUpdateDate`
        if (data['lastUpdateDate']) { // data not null
          Date.validateJSON(data['lastUpdateDate']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          AssetSummaryStatus.validateJSON(data['status']);
        }
        // validate the optional field `hierarchies`
        if (data['hierarchies']) { // data not null
          Array.validateJSON(data['hierarchies']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }

        return true;
    }


}

AssetSummary.RequiredProperties = ["id", "arn", "name", "assetModelId", "creationDate", "lastUpdateDate", "status", "hierarchies"];

/**
 * @member {String} id
 */
AssetSummary.prototype['id'] = undefined;

/**
 * @member {String} arn
 */
AssetSummary.prototype['arn'] = undefined;

/**
 * @member {String} name
 */
AssetSummary.prototype['name'] = undefined;

/**
 * @member {String} assetModelId
 */
AssetSummary.prototype['assetModelId'] = undefined;

/**
 * @member {Date} creationDate
 */
AssetSummary.prototype['creationDate'] = undefined;

/**
 * @member {Date} lastUpdateDate
 */
AssetSummary.prototype['lastUpdateDate'] = undefined;

/**
 * @member {module:model/AssetSummaryStatus} status
 */
AssetSummary.prototype['status'] = undefined;

/**
 * @member {Array} hierarchies
 */
AssetSummary.prototype['hierarchies'] = undefined;

/**
 * @member {String} description
 */
AssetSummary.prototype['description'] = undefined;






export default AssetSummary;

