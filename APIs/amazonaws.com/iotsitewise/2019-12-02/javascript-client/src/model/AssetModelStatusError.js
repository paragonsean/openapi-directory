/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorCode from './ErrorCode';
import ErrorDetails from './ErrorDetails';

/**
 * The AssetModelStatusError model module.
 * @module model/AssetModelStatusError
 * @version 2019-12-02
 */
class AssetModelStatusError {
    /**
     * Constructs a new <code>AssetModelStatusError</code>.
     * @alias module:model/AssetModelStatusError
     * @implements module:model/ErrorDetails
     * @param code {module:model/ErrorCode} 
     * @param message {String} 
     */
    constructor(code, message) { 
        ErrorDetails.initialize(this, code, message);
        AssetModelStatusError.initialize(this, code, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message) { 
        obj['code'] = code;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>AssetModelStatusError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetModelStatusError} obj Optional instance to populate.
     * @return {module:model/AssetModelStatusError} The populated <code>AssetModelStatusError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetModelStatusError();
            ErrorDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], ErrorCode);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetModelStatusError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetModelStatusError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetModelStatusError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `code`
        if (data['code']) { // data not null
          ErrorCode.validateJSON(data['code']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          String.validateJSON(data['message']);
        }
        // validate the optional field `details`
        if (data['details']) { // data not null
          Array.validateJSON(data['details']);
        }

        return true;
    }


}

AssetModelStatusError.RequiredProperties = ["code", "message"];

/**
 * @member {module:model/ErrorCode} code
 */
AssetModelStatusError.prototype['code'] = undefined;

/**
 * @member {String} message
 */
AssetModelStatusError.prototype['message'] = undefined;

/**
 * @member {Array} details
 */
AssetModelStatusError.prototype['details'] = undefined;


// Implement ErrorDetails interface:
/**
 * @member {module:model/ErrorCode} code
 */
ErrorDetails.prototype['code'] = undefined;
/**
 * @member {String} message
 */
ErrorDetails.prototype['message'] = undefined;
/**
 * @member {Array} details
 */
ErrorDetails.prototype['details'] = undefined;




export default AssetModelStatusError;

