/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageFile from './ImageFile';

/**
 * The UpdatePortalRequestPortalLogoImage model module.
 * @module model/UpdatePortalRequestPortalLogoImage
 * @version 2019-12-02
 */
class UpdatePortalRequestPortalLogoImage {
    /**
     * Constructs a new <code>UpdatePortalRequestPortalLogoImage</code>.
     * &lt;p&gt;Contains an image that is one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An image file. Choose this option to upload a new image.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The ID of an existing image. Choose this option to keep an existing image.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/UpdatePortalRequestPortalLogoImage
     */
    constructor() { 
        
        UpdatePortalRequestPortalLogoImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdatePortalRequestPortalLogoImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePortalRequestPortalLogoImage} obj Optional instance to populate.
     * @return {module:model/UpdatePortalRequestPortalLogoImage} The populated <code>UpdatePortalRequestPortalLogoImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePortalRequestPortalLogoImage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ImageFile.constructFromObject(data['file']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePortalRequestPortalLogoImage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePortalRequestPortalLogoImage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `file`
        if (data['file']) { // data not null
          ImageFile.validateJSON(data['file']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
UpdatePortalRequestPortalLogoImage.prototype['id'] = undefined;

/**
 * @member {module:model/ImageFile} file
 */
UpdatePortalRequestPortalLogoImage.prototype['file'] = undefined;






export default UpdatePortalRequestPortalLogoImage;

