/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DescribeProjectResponse model module.
 * @module model/DescribeProjectResponse
 * @version 2019-12-02
 */
class DescribeProjectResponse {
    /**
     * Constructs a new <code>DescribeProjectResponse</code>.
     * @alias module:model/DescribeProjectResponse
     * @param projectId {String} 
     * @param projectArn {String} 
     * @param projectName {String} 
     * @param portalId {String} 
     * @param projectCreationDate {Date} 
     * @param projectLastUpdateDate {Date} 
     */
    constructor(projectId, projectArn, projectName, portalId, projectCreationDate, projectLastUpdateDate) { 
        
        DescribeProjectResponse.initialize(this, projectId, projectArn, projectName, portalId, projectCreationDate, projectLastUpdateDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectId, projectArn, projectName, portalId, projectCreationDate, projectLastUpdateDate) { 
        obj['projectId'] = projectId;
        obj['projectArn'] = projectArn;
        obj['projectName'] = projectName;
        obj['portalId'] = portalId;
        obj['projectCreationDate'] = projectCreationDate;
        obj['projectLastUpdateDate'] = projectLastUpdateDate;
    }

    /**
     * Constructs a <code>DescribeProjectResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeProjectResponse} obj Optional instance to populate.
     * @return {module:model/DescribeProjectResponse} The populated <code>DescribeProjectResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeProjectResponse();

            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('projectArn')) {
                obj['projectArn'] = ApiClient.convertToType(data['projectArn'], 'String');
            }
            if (data.hasOwnProperty('projectName')) {
                obj['projectName'] = ApiClient.convertToType(data['projectName'], 'String');
            }
            if (data.hasOwnProperty('portalId')) {
                obj['portalId'] = ApiClient.convertToType(data['portalId'], 'String');
            }
            if (data.hasOwnProperty('projectDescription')) {
                obj['projectDescription'] = ApiClient.convertToType(data['projectDescription'], 'String');
            }
            if (data.hasOwnProperty('projectCreationDate')) {
                obj['projectCreationDate'] = ApiClient.convertToType(data['projectCreationDate'], 'Date');
            }
            if (data.hasOwnProperty('projectLastUpdateDate')) {
                obj['projectLastUpdateDate'] = ApiClient.convertToType(data['projectLastUpdateDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeProjectResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeProjectResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeProjectResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `projectId`
        if (data['projectId']) { // data not null
          String.validateJSON(data['projectId']);
        }
        // validate the optional field `projectArn`
        if (data['projectArn']) { // data not null
          String.validateJSON(data['projectArn']);
        }
        // validate the optional field `projectName`
        if (data['projectName']) { // data not null
          String.validateJSON(data['projectName']);
        }
        // validate the optional field `portalId`
        if (data['portalId']) { // data not null
          String.validateJSON(data['portalId']);
        }
        // validate the optional field `projectDescription`
        if (data['projectDescription']) { // data not null
          String.validateJSON(data['projectDescription']);
        }
        // validate the optional field `projectCreationDate`
        if (data['projectCreationDate']) { // data not null
          Date.validateJSON(data['projectCreationDate']);
        }
        // validate the optional field `projectLastUpdateDate`
        if (data['projectLastUpdateDate']) { // data not null
          Date.validateJSON(data['projectLastUpdateDate']);
        }

        return true;
    }


}

DescribeProjectResponse.RequiredProperties = ["projectId", "projectArn", "projectName", "portalId", "projectCreationDate", "projectLastUpdateDate"];

/**
 * @member {String} projectId
 */
DescribeProjectResponse.prototype['projectId'] = undefined;

/**
 * @member {String} projectArn
 */
DescribeProjectResponse.prototype['projectArn'] = undefined;

/**
 * @member {String} projectName
 */
DescribeProjectResponse.prototype['projectName'] = undefined;

/**
 * @member {String} portalId
 */
DescribeProjectResponse.prototype['portalId'] = undefined;

/**
 * @member {String} projectDescription
 */
DescribeProjectResponse.prototype['projectDescription'] = undefined;

/**
 * @member {Date} projectCreationDate
 */
DescribeProjectResponse.prototype['projectCreationDate'] = undefined;

/**
 * @member {Date} projectLastUpdateDate
 */
DescribeProjectResponse.prototype['projectLastUpdateDate'] = undefined;






export default DescribeProjectResponse;

