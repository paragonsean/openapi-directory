/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateAssetPropertyRequest model module.
 * @module model/UpdateAssetPropertyRequest
 * @version 2019-12-02
 */
class UpdateAssetPropertyRequest {
    /**
     * Constructs a new <code>UpdateAssetPropertyRequest</code>.
     * @alias module:model/UpdateAssetPropertyRequest
     */
    constructor() { 
        
        UpdateAssetPropertyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateAssetPropertyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateAssetPropertyRequest} obj Optional instance to populate.
     * @return {module:model/UpdateAssetPropertyRequest} The populated <code>UpdateAssetPropertyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateAssetPropertyRequest();

            if (data.hasOwnProperty('propertyAlias')) {
                obj['propertyAlias'] = ApiClient.convertToType(data['propertyAlias'], 'String');
            }
            if (data.hasOwnProperty('propertyNotificationState')) {
                obj['propertyNotificationState'] = ApiClient.convertToType(data['propertyNotificationState'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('propertyUnit')) {
                obj['propertyUnit'] = ApiClient.convertToType(data['propertyUnit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateAssetPropertyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateAssetPropertyRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['propertyAlias'] && !(typeof data['propertyAlias'] === 'string' || data['propertyAlias'] instanceof String)) {
            throw new Error("Expected the field `propertyAlias` to be a primitive type in the JSON string but got " + data['propertyAlias']);
        }
        // ensure the json data is a string
        if (data['propertyNotificationState'] && !(typeof data['propertyNotificationState'] === 'string' || data['propertyNotificationState'] instanceof String)) {
            throw new Error("Expected the field `propertyNotificationState` to be a primitive type in the JSON string but got " + data['propertyNotificationState']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is a string
        if (data['propertyUnit'] && !(typeof data['propertyUnit'] === 'string' || data['propertyUnit'] instanceof String)) {
            throw new Error("Expected the field `propertyUnit` to be a primitive type in the JSON string but got " + data['propertyUnit']);
        }

        return true;
    }


}



/**
 * <p>The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the alias is removed from the property.</p>
 * @member {String} propertyAlias
 */
UpdateAssetPropertyRequest.prototype['propertyAlias'] = undefined;

/**
 * <p>The MQTT notification state (enabled or disabled) for this asset property. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html\">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>
 * @member {module:model/UpdateAssetPropertyRequest.PropertyNotificationStateEnum} propertyNotificationState
 */
UpdateAssetPropertyRequest.prototype['propertyNotificationState'] = undefined;

/**
 * A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
 * @member {String} clientToken
 */
UpdateAssetPropertyRequest.prototype['clientToken'] = undefined;

/**
 * The unit of measure (such as Newtons or RPM) of the asset property. If you don't specify a value for this parameter, the service uses the value of the <code>assetModelProperty</code> in the asset model.
 * @member {String} propertyUnit
 */
UpdateAssetPropertyRequest.prototype['propertyUnit'] = undefined;





/**
 * Allowed values for the <code>propertyNotificationState</code> property.
 * @enum {String}
 * @readonly
 */
UpdateAssetPropertyRequest['PropertyNotificationStateEnum'] = {

    /**
     * value: "ENABLED"
     * @const
     */
    "ENABLED": "ENABLED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED"
};



export default UpdateAssetPropertyRequest;

