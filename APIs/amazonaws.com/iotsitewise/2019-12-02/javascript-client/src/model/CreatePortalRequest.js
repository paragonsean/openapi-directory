/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePortalRequestAlarms from './CreatePortalRequestAlarms';
import CreatePortalRequestPortalLogoImageFile from './CreatePortalRequestPortalLogoImageFile';

/**
 * The CreatePortalRequest model module.
 * @module model/CreatePortalRequest
 * @version 2019-12-02
 */
class CreatePortalRequest {
    /**
     * Constructs a new <code>CreatePortalRequest</code>.
     * @alias module:model/CreatePortalRequest
     * @param portalName {String} A friendly name for the portal.
     * @param portalContactEmail {String} The Amazon Web Services administrator's contact email address.
     * @param roleArn {String} The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html\">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.
     */
    constructor(portalName, portalContactEmail, roleArn) { 
        
        CreatePortalRequest.initialize(this, portalName, portalContactEmail, roleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, portalName, portalContactEmail, roleArn) { 
        obj['portalName'] = portalName;
        obj['portalContactEmail'] = portalContactEmail;
        obj['roleArn'] = roleArn;
    }

    /**
     * Constructs a <code>CreatePortalRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatePortalRequest} obj Optional instance to populate.
     * @return {module:model/CreatePortalRequest} The populated <code>CreatePortalRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatePortalRequest();

            if (data.hasOwnProperty('portalName')) {
                obj['portalName'] = ApiClient.convertToType(data['portalName'], 'String');
            }
            if (data.hasOwnProperty('portalDescription')) {
                obj['portalDescription'] = ApiClient.convertToType(data['portalDescription'], 'String');
            }
            if (data.hasOwnProperty('portalContactEmail')) {
                obj['portalContactEmail'] = ApiClient.convertToType(data['portalContactEmail'], 'String');
            }
            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('portalLogoImageFile')) {
                obj['portalLogoImageFile'] = CreatePortalRequestPortalLogoImageFile.constructFromObject(data['portalLogoImageFile']);
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('portalAuthMode')) {
                obj['portalAuthMode'] = ApiClient.convertToType(data['portalAuthMode'], 'String');
            }
            if (data.hasOwnProperty('notificationSenderEmail')) {
                obj['notificationSenderEmail'] = ApiClient.convertToType(data['notificationSenderEmail'], 'String');
            }
            if (data.hasOwnProperty('alarms')) {
                obj['alarms'] = CreatePortalRequestAlarms.constructFromObject(data['alarms']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatePortalRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatePortalRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatePortalRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['portalName'] && !(typeof data['portalName'] === 'string' || data['portalName'] instanceof String)) {
            throw new Error("Expected the field `portalName` to be a primitive type in the JSON string but got " + data['portalName']);
        }
        // ensure the json data is a string
        if (data['portalDescription'] && !(typeof data['portalDescription'] === 'string' || data['portalDescription'] instanceof String)) {
            throw new Error("Expected the field `portalDescription` to be a primitive type in the JSON string but got " + data['portalDescription']);
        }
        // ensure the json data is a string
        if (data['portalContactEmail'] && !(typeof data['portalContactEmail'] === 'string' || data['portalContactEmail'] instanceof String)) {
            throw new Error("Expected the field `portalContactEmail` to be a primitive type in the JSON string but got " + data['portalContactEmail']);
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // validate the optional field `portalLogoImageFile`
        if (data['portalLogoImageFile']) { // data not null
          CreatePortalRequestPortalLogoImageFile.validateJSON(data['portalLogoImageFile']);
        }
        // ensure the json data is a string
        if (data['roleArn'] && !(typeof data['roleArn'] === 'string' || data['roleArn'] instanceof String)) {
            throw new Error("Expected the field `roleArn` to be a primitive type in the JSON string but got " + data['roleArn']);
        }
        // ensure the json data is a string
        if (data['portalAuthMode'] && !(typeof data['portalAuthMode'] === 'string' || data['portalAuthMode'] instanceof String)) {
            throw new Error("Expected the field `portalAuthMode` to be a primitive type in the JSON string but got " + data['portalAuthMode']);
        }
        // ensure the json data is a string
        if (data['notificationSenderEmail'] && !(typeof data['notificationSenderEmail'] === 'string' || data['notificationSenderEmail'] instanceof String)) {
            throw new Error("Expected the field `notificationSenderEmail` to be a primitive type in the JSON string but got " + data['notificationSenderEmail']);
        }
        // validate the optional field `alarms`
        if (data['alarms']) { // data not null
          CreatePortalRequestAlarms.validateJSON(data['alarms']);
        }

        return true;
    }


}

CreatePortalRequest.RequiredProperties = ["portalName", "portalContactEmail", "roleArn"];

/**
 * A friendly name for the portal.
 * @member {String} portalName
 */
CreatePortalRequest.prototype['portalName'] = undefined;

/**
 * A description for the portal.
 * @member {String} portalDescription
 */
CreatePortalRequest.prototype['portalDescription'] = undefined;

/**
 * The Amazon Web Services administrator's contact email address.
 * @member {String} portalContactEmail
 */
CreatePortalRequest.prototype['portalContactEmail'] = undefined;

/**
 * A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
 * @member {String} clientToken
 */
CreatePortalRequest.prototype['clientToken'] = undefined;

/**
 * @member {module:model/CreatePortalRequestPortalLogoImageFile} portalLogoImageFile
 */
CreatePortalRequest.prototype['portalLogoImageFile'] = undefined;

/**
 * The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html\">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.
 * @member {String} roleArn
 */
CreatePortalRequest.prototype['roleArn'] = undefined;

/**
 * A list of key-value pairs that contain metadata for the portal. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html\">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.
 * @member {Object.<String, String>} tags
 */
CreatePortalRequest.prototype['tags'] = undefined;

/**
 * <p>The service to use to authenticate users to the portal. Choose from the following options:</p> <ul> <li> <p> <code>SSO</code> – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso\">Enabling IAM Identity Center</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li> <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions.</p> </li> </ul> <p>You can't change this value after you create a portal.</p> <p>Default: <code>SSO</code> </p>
 * @member {module:model/CreatePortalRequest.PortalAuthModeEnum} portalAuthMode
 */
CreatePortalRequest.prototype['portalAuthMode'] = undefined;

/**
 * <p>The email address that sends alarm notifications.</p> <important> <p>If you use the <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html\">IoT Events managed Lambda function</a> to manage your emails, you must <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html\">verify the sender email address in Amazon SES</a>.</p> </important>
 * @member {String} notificationSenderEmail
 */
CreatePortalRequest.prototype['notificationSenderEmail'] = undefined;

/**
 * @member {module:model/CreatePortalRequestAlarms} alarms
 */
CreatePortalRequest.prototype['alarms'] = undefined;





/**
 * Allowed values for the <code>portalAuthMode</code> property.
 * @enum {String}
 * @readonly
 */
CreatePortalRequest['PortalAuthModeEnum'] = {

    /**
     * value: "IAM"
     * @const
     */
    "IAM": "IAM",

    /**
     * value: "SSO"
     * @const
     */
    "SSO": "SSO"
};



export default CreatePortalRequest;

