/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeAssetResponseAssetStatus from './DescribeAssetResponseAssetStatus';

/**
 * The DescribeAssetResponse model module.
 * @module model/DescribeAssetResponse
 * @version 2019-12-02
 */
class DescribeAssetResponse {
    /**
     * Constructs a new <code>DescribeAssetResponse</code>.
     * @alias module:model/DescribeAssetResponse
     * @param assetId {String} 
     * @param assetArn {String} 
     * @param assetName {String} 
     * @param assetModelId {String} 
     * @param assetProperties {Array} 
     * @param assetHierarchies {Array} 
     * @param assetCreationDate {Date} 
     * @param assetLastUpdateDate {Date} 
     * @param assetStatus {module:model/DescribeAssetResponseAssetStatus} 
     */
    constructor(assetId, assetArn, assetName, assetModelId, assetProperties, assetHierarchies, assetCreationDate, assetLastUpdateDate, assetStatus) { 
        
        DescribeAssetResponse.initialize(this, assetId, assetArn, assetName, assetModelId, assetProperties, assetHierarchies, assetCreationDate, assetLastUpdateDate, assetStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetId, assetArn, assetName, assetModelId, assetProperties, assetHierarchies, assetCreationDate, assetLastUpdateDate, assetStatus) { 
        obj['assetId'] = assetId;
        obj['assetArn'] = assetArn;
        obj['assetName'] = assetName;
        obj['assetModelId'] = assetModelId;
        obj['assetProperties'] = assetProperties;
        obj['assetHierarchies'] = assetHierarchies;
        obj['assetCreationDate'] = assetCreationDate;
        obj['assetLastUpdateDate'] = assetLastUpdateDate;
        obj['assetStatus'] = assetStatus;
    }

    /**
     * Constructs a <code>DescribeAssetResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeAssetResponse} obj Optional instance to populate.
     * @return {module:model/DescribeAssetResponse} The populated <code>DescribeAssetResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeAssetResponse();

            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
            }
            if (data.hasOwnProperty('assetArn')) {
                obj['assetArn'] = ApiClient.convertToType(data['assetArn'], 'String');
            }
            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
            if (data.hasOwnProperty('assetModelId')) {
                obj['assetModelId'] = ApiClient.convertToType(data['assetModelId'], 'String');
            }
            if (data.hasOwnProperty('assetProperties')) {
                obj['assetProperties'] = ApiClient.convertToType(data['assetProperties'], Array);
            }
            if (data.hasOwnProperty('assetHierarchies')) {
                obj['assetHierarchies'] = ApiClient.convertToType(data['assetHierarchies'], Array);
            }
            if (data.hasOwnProperty('assetCompositeModels')) {
                obj['assetCompositeModels'] = ApiClient.convertToType(data['assetCompositeModels'], Array);
            }
            if (data.hasOwnProperty('assetCreationDate')) {
                obj['assetCreationDate'] = ApiClient.convertToType(data['assetCreationDate'], 'Date');
            }
            if (data.hasOwnProperty('assetLastUpdateDate')) {
                obj['assetLastUpdateDate'] = ApiClient.convertToType(data['assetLastUpdateDate'], 'Date');
            }
            if (data.hasOwnProperty('assetStatus')) {
                obj['assetStatus'] = DescribeAssetResponseAssetStatus.constructFromObject(data['assetStatus']);
            }
            if (data.hasOwnProperty('assetDescription')) {
                obj['assetDescription'] = ApiClient.convertToType(data['assetDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeAssetResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeAssetResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeAssetResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `assetId`
        if (data['assetId']) { // data not null
          String.validateJSON(data['assetId']);
        }
        // validate the optional field `assetArn`
        if (data['assetArn']) { // data not null
          String.validateJSON(data['assetArn']);
        }
        // validate the optional field `assetName`
        if (data['assetName']) { // data not null
          String.validateJSON(data['assetName']);
        }
        // validate the optional field `assetModelId`
        if (data['assetModelId']) { // data not null
          String.validateJSON(data['assetModelId']);
        }
        // validate the optional field `assetProperties`
        if (data['assetProperties']) { // data not null
          Array.validateJSON(data['assetProperties']);
        }
        // validate the optional field `assetHierarchies`
        if (data['assetHierarchies']) { // data not null
          Array.validateJSON(data['assetHierarchies']);
        }
        // validate the optional field `assetCompositeModels`
        if (data['assetCompositeModels']) { // data not null
          Array.validateJSON(data['assetCompositeModels']);
        }
        // validate the optional field `assetCreationDate`
        if (data['assetCreationDate']) { // data not null
          Date.validateJSON(data['assetCreationDate']);
        }
        // validate the optional field `assetLastUpdateDate`
        if (data['assetLastUpdateDate']) { // data not null
          Date.validateJSON(data['assetLastUpdateDate']);
        }
        // validate the optional field `assetStatus`
        if (data['assetStatus']) { // data not null
          DescribeAssetResponseAssetStatus.validateJSON(data['assetStatus']);
        }
        // validate the optional field `assetDescription`
        if (data['assetDescription']) { // data not null
          String.validateJSON(data['assetDescription']);
        }

        return true;
    }


}

DescribeAssetResponse.RequiredProperties = ["assetId", "assetArn", "assetName", "assetModelId", "assetProperties", "assetHierarchies", "assetCreationDate", "assetLastUpdateDate", "assetStatus"];

/**
 * @member {String} assetId
 */
DescribeAssetResponse.prototype['assetId'] = undefined;

/**
 * @member {String} assetArn
 */
DescribeAssetResponse.prototype['assetArn'] = undefined;

/**
 * @member {String} assetName
 */
DescribeAssetResponse.prototype['assetName'] = undefined;

/**
 * @member {String} assetModelId
 */
DescribeAssetResponse.prototype['assetModelId'] = undefined;

/**
 * @member {Array} assetProperties
 */
DescribeAssetResponse.prototype['assetProperties'] = undefined;

/**
 * @member {Array} assetHierarchies
 */
DescribeAssetResponse.prototype['assetHierarchies'] = undefined;

/**
 * @member {Array} assetCompositeModels
 */
DescribeAssetResponse.prototype['assetCompositeModels'] = undefined;

/**
 * @member {Date} assetCreationDate
 */
DescribeAssetResponse.prototype['assetCreationDate'] = undefined;

/**
 * @member {Date} assetLastUpdateDate
 */
DescribeAssetResponse.prototype['assetLastUpdateDate'] = undefined;

/**
 * @member {module:model/DescribeAssetResponseAssetStatus} assetStatus
 */
DescribeAssetResponse.prototype['assetStatus'] = undefined;

/**
 * @member {String} assetDescription
 */
DescribeAssetResponse.prototype['assetDescription'] = undefined;






export default DescribeAssetResponse;

