/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AggregateType from '../model/AggregateType';
import AssociateAssetsRequest from '../model/AssociateAssetsRequest';
import AssociateTimeSeriesToAssetPropertyRequest from '../model/AssociateTimeSeriesToAssetPropertyRequest';
import BatchAssociateProjectAssetsRequest from '../model/BatchAssociateProjectAssetsRequest';
import BatchAssociateProjectAssetsResponse from '../model/BatchAssociateProjectAssetsResponse';
import BatchDisassociateProjectAssetsRequest from '../model/BatchDisassociateProjectAssetsRequest';
import BatchDisassociateProjectAssetsResponse from '../model/BatchDisassociateProjectAssetsResponse';
import BatchGetAssetPropertyAggregatesRequest from '../model/BatchGetAssetPropertyAggregatesRequest';
import BatchGetAssetPropertyAggregatesResponse from '../model/BatchGetAssetPropertyAggregatesResponse';
import BatchGetAssetPropertyValueHistoryRequest from '../model/BatchGetAssetPropertyValueHistoryRequest';
import BatchGetAssetPropertyValueHistoryResponse from '../model/BatchGetAssetPropertyValueHistoryResponse';
import BatchGetAssetPropertyValueRequest from '../model/BatchGetAssetPropertyValueRequest';
import BatchGetAssetPropertyValueResponse from '../model/BatchGetAssetPropertyValueResponse';
import BatchPutAssetPropertyValueRequest from '../model/BatchPutAssetPropertyValueRequest';
import BatchPutAssetPropertyValueResponse from '../model/BatchPutAssetPropertyValueResponse';
import CreateAccessPolicyRequest from '../model/CreateAccessPolicyRequest';
import CreateAccessPolicyResponse from '../model/CreateAccessPolicyResponse';
import CreateAssetModelRequest from '../model/CreateAssetModelRequest';
import CreateAssetModelResponse from '../model/CreateAssetModelResponse';
import CreateAssetRequest from '../model/CreateAssetRequest';
import CreateAssetResponse from '../model/CreateAssetResponse';
import CreateBulkImportJobRequest from '../model/CreateBulkImportJobRequest';
import CreateBulkImportJobResponse from '../model/CreateBulkImportJobResponse';
import CreateDashboardRequest from '../model/CreateDashboardRequest';
import CreateDashboardResponse from '../model/CreateDashboardResponse';
import CreateGatewayRequest from '../model/CreateGatewayRequest';
import CreateGatewayResponse from '../model/CreateGatewayResponse';
import CreatePortalRequest from '../model/CreatePortalRequest';
import CreatePortalResponse from '../model/CreatePortalResponse';
import CreateProjectRequest from '../model/CreateProjectRequest';
import CreateProjectResponse from '../model/CreateProjectResponse';
import DeleteAssetModelResponse from '../model/DeleteAssetModelResponse';
import DeleteAssetResponse from '../model/DeleteAssetResponse';
import DeletePortalResponse from '../model/DeletePortalResponse';
import DescribeAccessPolicyResponse from '../model/DescribeAccessPolicyResponse';
import DescribeAssetModelResponse from '../model/DescribeAssetModelResponse';
import DescribeAssetPropertyResponse from '../model/DescribeAssetPropertyResponse';
import DescribeAssetResponse from '../model/DescribeAssetResponse';
import DescribeBulkImportJobResponse from '../model/DescribeBulkImportJobResponse';
import DescribeDashboardResponse from '../model/DescribeDashboardResponse';
import DescribeDefaultEncryptionConfigurationResponse from '../model/DescribeDefaultEncryptionConfigurationResponse';
import DescribeGatewayCapabilityConfigurationResponse from '../model/DescribeGatewayCapabilityConfigurationResponse';
import DescribeGatewayResponse from '../model/DescribeGatewayResponse';
import DescribeLoggingOptionsResponse from '../model/DescribeLoggingOptionsResponse';
import DescribePortalResponse from '../model/DescribePortalResponse';
import DescribeProjectResponse from '../model/DescribeProjectResponse';
import DescribeStorageConfigurationResponse from '../model/DescribeStorageConfigurationResponse';
import DescribeTimeSeriesResponse from '../model/DescribeTimeSeriesResponse';
import DisassociateAssetsRequest from '../model/DisassociateAssetsRequest';
import GetAssetPropertyAggregatesResponse from '../model/GetAssetPropertyAggregatesResponse';
import GetAssetPropertyValueHistoryResponse from '../model/GetAssetPropertyValueHistoryResponse';
import GetAssetPropertyValueResponse from '../model/GetAssetPropertyValueResponse';
import GetInterpolatedAssetPropertyValuesResponse from '../model/GetInterpolatedAssetPropertyValuesResponse';
import ListAccessPoliciesResponse from '../model/ListAccessPoliciesResponse';
import ListAssetModelPropertiesResponse from '../model/ListAssetModelPropertiesResponse';
import ListAssetModelsResponse from '../model/ListAssetModelsResponse';
import ListAssetPropertiesResponse from '../model/ListAssetPropertiesResponse';
import ListAssetRelationshipsResponse from '../model/ListAssetRelationshipsResponse';
import ListAssetsResponse from '../model/ListAssetsResponse';
import ListAssociatedAssetsResponse from '../model/ListAssociatedAssetsResponse';
import ListBulkImportJobsResponse from '../model/ListBulkImportJobsResponse';
import ListDashboardsResponse from '../model/ListDashboardsResponse';
import ListGatewaysResponse from '../model/ListGatewaysResponse';
import ListPortalsResponse from '../model/ListPortalsResponse';
import ListProjectAssetsResponse from '../model/ListProjectAssetsResponse';
import ListProjectsResponse from '../model/ListProjectsResponse';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import ListTimeSeriesResponse from '../model/ListTimeSeriesResponse';
import PutDefaultEncryptionConfigurationRequest from '../model/PutDefaultEncryptionConfigurationRequest';
import PutDefaultEncryptionConfigurationResponse from '../model/PutDefaultEncryptionConfigurationResponse';
import PutLoggingOptionsRequest from '../model/PutLoggingOptionsRequest';
import PutStorageConfigurationRequest from '../model/PutStorageConfigurationRequest';
import PutStorageConfigurationResponse from '../model/PutStorageConfigurationResponse';
import Quality from '../model/Quality';
import TagResourceRequest from '../model/TagResourceRequest';
import UpdateAccessPolicyRequest from '../model/UpdateAccessPolicyRequest';
import UpdateAssetModelRequest from '../model/UpdateAssetModelRequest';
import UpdateAssetModelResponse from '../model/UpdateAssetModelResponse';
import UpdateAssetPropertyRequest from '../model/UpdateAssetPropertyRequest';
import UpdateAssetRequest from '../model/UpdateAssetRequest';
import UpdateAssetResponse from '../model/UpdateAssetResponse';
import UpdateDashboardRequest from '../model/UpdateDashboardRequest';
import UpdateGatewayCapabilityConfigurationRequest from '../model/UpdateGatewayCapabilityConfigurationRequest';
import UpdateGatewayCapabilityConfigurationResponse from '../model/UpdateGatewayCapabilityConfigurationResponse';
import UpdateGatewayRequest from '../model/UpdateGatewayRequest';
import UpdatePortalRequest from '../model/UpdatePortalRequest';
import UpdatePortalResponse from '../model/UpdatePortalResponse';
import UpdateProjectRequest from '../model/UpdateProjectRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2019-12-02
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the associateAssets operation.
     * @callback module:api/DefaultApi~associateAssetsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates a child asset with the given parent asset through a hierarchy defined in the parent asset's model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html\">Associating assets</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {String} assetId The ID of the parent asset.
     * @param {module:model/AssociateAssetsRequest} associateAssetsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    associateAssets(assetId, associateAssetsRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateAssetsRequest;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling associateAssets");
      }
      // verify the required parameter 'associateAssetsRequest' is set
      if (associateAssetsRequest === undefined || associateAssetsRequest === null) {
        throw new Error("Missing the required parameter 'associateAssetsRequest' when calling associateAssets");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/assets/{assetId}/associate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associateTimeSeriesToAssetProperty operation.
     * @callback module:api/DefaultApi~associateTimeSeriesToAssetPropertyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates a time series (data stream) with an asset property.
     * @param {String} alias The alias that identifies the time series.
     * @param {String} assetId The ID of the asset in which the asset property was created.
     * @param {String} propertyId The ID of the asset property.
     * @param {module:model/AssociateTimeSeriesToAssetPropertyRequest} associateTimeSeriesToAssetPropertyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateTimeSeriesToAssetPropertyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    associateTimeSeriesToAssetProperty(alias, assetId, propertyId, associateTimeSeriesToAssetPropertyRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateTimeSeriesToAssetPropertyRequest;
      // verify the required parameter 'alias' is set
      if (alias === undefined || alias === null) {
        throw new Error("Missing the required parameter 'alias' when calling associateTimeSeriesToAssetProperty");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling associateTimeSeriesToAssetProperty");
      }
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling associateTimeSeriesToAssetProperty");
      }
      // verify the required parameter 'associateTimeSeriesToAssetPropertyRequest' is set
      if (associateTimeSeriesToAssetPropertyRequest === undefined || associateTimeSeriesToAssetPropertyRequest === null) {
        throw new Error("Missing the required parameter 'associateTimeSeriesToAssetPropertyRequest' when calling associateTimeSeriesToAssetProperty");
      }

      let pathParams = {
      };
      let queryParams = {
        'alias': alias,
        'assetId': assetId,
        'propertyId': propertyId
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/timeseries/associate/#alias&assetId&propertyId', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchAssociateProjectAssets operation.
     * @callback module:api/DefaultApi~batchAssociateProjectAssetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchAssociateProjectAssetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates a group (batch) of assets with an IoT SiteWise Monitor project.
     * @param {String} projectId The ID of the project to which to associate the assets.
     * @param {module:model/BatchAssociateProjectAssetsRequest} batchAssociateProjectAssetsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchAssociateProjectAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchAssociateProjectAssetsResponse}
     */
    batchAssociateProjectAssets(projectId, batchAssociateProjectAssetsRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchAssociateProjectAssetsRequest;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling batchAssociateProjectAssets");
      }
      // verify the required parameter 'batchAssociateProjectAssetsRequest' is set
      if (batchAssociateProjectAssetsRequest === undefined || batchAssociateProjectAssetsRequest === null) {
        throw new Error("Missing the required parameter 'batchAssociateProjectAssetsRequest' when calling batchAssociateProjectAssets");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchAssociateProjectAssetsResponse;
      return this.apiClient.callApi(
        '/projects/{projectId}/assets/associate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchDisassociateProjectAssets operation.
     * @callback module:api/DefaultApi~batchDisassociateProjectAssetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchDisassociateProjectAssetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.
     * @param {String} projectId The ID of the project from which to disassociate the assets.
     * @param {module:model/BatchDisassociateProjectAssetsRequest} batchDisassociateProjectAssetsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchDisassociateProjectAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchDisassociateProjectAssetsResponse}
     */
    batchDisassociateProjectAssets(projectId, batchDisassociateProjectAssetsRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchDisassociateProjectAssetsRequest;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling batchDisassociateProjectAssets");
      }
      // verify the required parameter 'batchDisassociateProjectAssetsRequest' is set
      if (batchDisassociateProjectAssetsRequest === undefined || batchDisassociateProjectAssetsRequest === null) {
        throw new Error("Missing the required parameter 'batchDisassociateProjectAssetsRequest' when calling batchDisassociateProjectAssets");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchDisassociateProjectAssetsResponse;
      return this.apiClient.callApi(
        '/projects/{projectId}/assets/disassociate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGetAssetPropertyAggregates operation.
     * @callback module:api/DefaultApi~batchGetAssetPropertyAggregatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetAssetPropertyAggregatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates\">Querying aggregates</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/BatchGetAssetPropertyAggregatesRequest} batchGetAssetPropertyAggregatesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~batchGetAssetPropertyAggregatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetAssetPropertyAggregatesResponse}
     */
    batchGetAssetPropertyAggregates(batchGetAssetPropertyAggregatesRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchGetAssetPropertyAggregatesRequest;
      // verify the required parameter 'batchGetAssetPropertyAggregatesRequest' is set
      if (batchGetAssetPropertyAggregatesRequest === undefined || batchGetAssetPropertyAggregatesRequest === null) {
        throw new Error("Missing the required parameter 'batchGetAssetPropertyAggregatesRequest' when calling batchGetAssetPropertyAggregates");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchGetAssetPropertyAggregatesResponse;
      return this.apiClient.callApi(
        '/properties/batch/aggregates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGetAssetPropertyValue operation.
     * @callback module:api/DefaultApi~batchGetAssetPropertyValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetAssetPropertyValueResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the current value for one or more asset properties. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values\">Querying current values</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/BatchGetAssetPropertyValueRequest} batchGetAssetPropertyValueRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~batchGetAssetPropertyValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetAssetPropertyValueResponse}
     */
    batchGetAssetPropertyValue(batchGetAssetPropertyValueRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchGetAssetPropertyValueRequest;
      // verify the required parameter 'batchGetAssetPropertyValueRequest' is set
      if (batchGetAssetPropertyValueRequest === undefined || batchGetAssetPropertyValueRequest === null) {
        throw new Error("Missing the required parameter 'batchGetAssetPropertyValueRequest' when calling batchGetAssetPropertyValue");
      }

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchGetAssetPropertyValueResponse;
      return this.apiClient.callApi(
        '/properties/batch/latest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchGetAssetPropertyValueHistory operation.
     * @callback module:api/DefaultApi~batchGetAssetPropertyValueHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchGetAssetPropertyValueHistoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the historical values for one or more asset properties. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values\">Querying historical values</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/BatchGetAssetPropertyValueHistoryRequest} batchGetAssetPropertyValueHistoryRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~batchGetAssetPropertyValueHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchGetAssetPropertyValueHistoryResponse}
     */
    batchGetAssetPropertyValueHistory(batchGetAssetPropertyValueHistoryRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchGetAssetPropertyValueHistoryRequest;
      // verify the required parameter 'batchGetAssetPropertyValueHistoryRequest' is set
      if (batchGetAssetPropertyValueHistoryRequest === undefined || batchGetAssetPropertyValueHistoryRequest === null) {
        throw new Error("Missing the required parameter 'batchGetAssetPropertyValueHistoryRequest' when calling batchGetAssetPropertyValueHistory");
      }

      let pathParams = {
      };
      let queryParams = {
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchGetAssetPropertyValueHistoryResponse;
      return this.apiClient.callApi(
        '/properties/batch/history', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchPutAssetPropertyValue operation.
     * @callback module:api/DefaultApi~batchPutAssetPropertyValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchPutAssetPropertyValueResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value (TQV) data point. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html\">Ingesting data using the API</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul> <important> <p>With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps outside of the inclusive range of [-7 days, +10 minutes] and returns a <code>TimestampOutOfRangeException</code> error.</p> <p>For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer TQV has a different quality. For example, if you store a TQV <code>{T1, GOOD, V1}</code>, then storing <code>{T1, GOOD, V2}</code> replaces the existing TQV.</p> </important> <p>IoT SiteWise authorizes access to each <code>BatchPutAssetPropertyValue</code> entry individually. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action\">BatchPutAssetPropertyValue authorization</a> in the <i>IoT SiteWise User Guide</i>.</p>
     * @param {module:model/BatchPutAssetPropertyValueRequest} batchPutAssetPropertyValueRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchPutAssetPropertyValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchPutAssetPropertyValueResponse}
     */
    batchPutAssetPropertyValue(batchPutAssetPropertyValueRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchPutAssetPropertyValueRequest;
      // verify the required parameter 'batchPutAssetPropertyValueRequest' is set
      if (batchPutAssetPropertyValueRequest === undefined || batchPutAssetPropertyValueRequest === null) {
        throw new Error("Missing the required parameter 'batchPutAssetPropertyValueRequest' when calling batchPutAssetPropertyValue");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchPutAssetPropertyValueResponse;
      return this.apiClient.callApi(
        '/properties', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAccessPolicy operation.
     * @callback module:api/DefaultApi~createAccessPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccessPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an access policy that grants the specified identity (IAM Identity Center user, IAM Identity Center group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource.
     * @param {module:model/CreateAccessPolicyRequest} createAccessPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAccessPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccessPolicyResponse}
     */
    createAccessPolicy(createAccessPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAccessPolicyRequest;
      // verify the required parameter 'createAccessPolicyRequest' is set
      if (createAccessPolicyRequest === undefined || createAccessPolicyRequest === null) {
        throw new Error("Missing the required parameter 'createAccessPolicyRequest' when calling createAccessPolicy");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAccessPolicyResponse;
      return this.apiClient.callApi(
        '/access-policies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAsset operation.
     * @callback module:api/DefaultApi~createAssetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAssetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an asset from an existing asset model. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html\">Creating assets</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/CreateAssetRequest} createAssetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAssetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAssetResponse}
     */
    createAsset(createAssetRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAssetRequest;
      // verify the required parameter 'createAssetRequest' is set
      if (createAssetRequest === undefined || createAssetRequest === null) {
        throw new Error("Missing the required parameter 'createAssetRequest' when calling createAsset");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAssetResponse;
      return this.apiClient.callApi(
        '/assets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAssetModel operation.
     * @callback module:api/DefaultApi~createAssetModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAssetModelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an asset model from specified property and hierarchy definitions. You create assets from asset models. With asset models, you can easily create assets of the same type that have standardized definitions. Each asset created from a model inherits the asset model's property and hierarchy definitions. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html\">Defining asset models</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/CreateAssetModelRequest} createAssetModelRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAssetModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAssetModelResponse}
     */
    createAssetModel(createAssetModelRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAssetModelRequest;
      // verify the required parameter 'createAssetModelRequest' is set
      if (createAssetModelRequest === undefined || createAssetModelRequest === null) {
        throw new Error("Missing the required parameter 'createAssetModelRequest' when calling createAssetModel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAssetModelResponse;
      return this.apiClient.callApi(
        '/asset-models', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createBulkImportJob operation.
     * @callback module:api/DefaultApi~createBulkImportJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateBulkImportJobResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Defines a job to ingest data to IoT SiteWise from Amazon S3. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/CreateBulkImportJob.html\">Create a bulk import job (CLI)</a> in the <i>Amazon Simple Storage Service User Guide</i>.</p> <important> <p>You must enable IoT SiteWise to export data to Amazon S3 before you create a bulk import job. For more information about how to configure storage settings, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_PutStorageConfiguration.html\">PutStorageConfiguration</a>.</p> </important>
     * @param {module:model/CreateBulkImportJobRequest} createBulkImportJobRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createBulkImportJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateBulkImportJobResponse}
     */
    createBulkImportJob(createBulkImportJobRequest, opts, callback) {
      opts = opts || {};
      let postBody = createBulkImportJobRequest;
      // verify the required parameter 'createBulkImportJobRequest' is set
      if (createBulkImportJobRequest === undefined || createBulkImportJobRequest === null) {
        throw new Error("Missing the required parameter 'createBulkImportJobRequest' when calling createBulkImportJob");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateBulkImportJobResponse;
      return this.apiClient.callApi(
        '/jobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createDashboard operation.
     * @callback module:api/DefaultApi~createDashboardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateDashboardResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a dashboard in an IoT SiteWise Monitor project.
     * @param {module:model/CreateDashboardRequest} createDashboardRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createDashboardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateDashboardResponse}
     */
    createDashboard(createDashboardRequest, opts, callback) {
      opts = opts || {};
      let postBody = createDashboardRequest;
      // verify the required parameter 'createDashboardRequest' is set
      if (createDashboardRequest === undefined || createDashboardRequest === null) {
        throw new Error("Missing the required parameter 'createDashboardRequest' when calling createDashboard");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateDashboardResponse;
      return this.apiClient.callApi(
        '/dashboards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createGateway operation.
     * @callback module:api/DefaultApi~createGatewayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateGatewayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html\">Ingesting data using a gateway</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/CreateGatewayRequest} createGatewayRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createGatewayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateGatewayResponse}
     */
    createGateway(createGatewayRequest, opts, callback) {
      opts = opts || {};
      let postBody = createGatewayRequest;
      // verify the required parameter 'createGatewayRequest' is set
      if (createGatewayRequest === undefined || createGatewayRequest === null) {
        throw new Error("Missing the required parameter 'createGatewayRequest' when calling createGateway");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateGatewayResponse;
      return this.apiClient.callApi(
        '/20200301/gateways', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPortal operation.
     * @callback module:api/DefaultApi~createPortalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatePortalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses IAM Identity Center or IAM to authenticate portal users and manage user permissions.</p> <note> <p>Before you can sign in to a new portal, you must add at least one identity to that portal. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins\">Adding or removing portal administrators</a> in the <i>IoT SiteWise User Guide</i>.</p> </note>
     * @param {module:model/CreatePortalRequest} createPortalRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createPortalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatePortalResponse}
     */
    createPortal(createPortalRequest, opts, callback) {
      opts = opts || {};
      let postBody = createPortalRequest;
      // verify the required parameter 'createPortalRequest' is set
      if (createPortalRequest === undefined || createPortalRequest === null) {
        throw new Error("Missing the required parameter 'createPortalRequest' when calling createPortal");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatePortalResponse;
      return this.apiClient.callApi(
        '/portals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createProject operation.
     * @callback module:api/DefaultApi~createProjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateProjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a project in the specified portal.</p> <note> <p>Make sure that the project name and description don't contain confidential information.</p> </note>
     * @param {module:model/CreateProjectRequest} createProjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createProjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateProjectResponse}
     */
    createProject(createProjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = createProjectRequest;
      // verify the required parameter 'createProjectRequest' is set
      if (createProjectRequest === undefined || createProjectRequest === null) {
        throw new Error("Missing the required parameter 'createProjectRequest' when calling createProject");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateProjectResponse;
      return this.apiClient.callApi(
        '/projects', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAccessPolicy operation.
     * @callback module:api/DefaultApi~deleteAccessPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor resource.
     * @param {String} accessPolicyId The ID of the access policy to be deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deleteAccessPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteAccessPolicy(accessPolicyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accessPolicyId' is set
      if (accessPolicyId === undefined || accessPolicyId === null) {
        throw new Error("Missing the required parameter 'accessPolicyId' when calling deleteAccessPolicy");
      }

      let pathParams = {
        'accessPolicyId': accessPolicyId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/access-policies/{accessPolicyId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAsset operation.
     * @callback module:api/DefaultApi~deleteAssetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAssetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an asset. This action can't be undone. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html\">Deleting assets and models</a> in the <i>IoT SiteWise User Guide</i>. </p> <note> <p>You can't delete an asset that's associated to another asset. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html\">DisassociateAssets</a>.</p> </note>
     * @param {String} assetId The ID of the asset to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deleteAssetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAssetResponse}
     */
    deleteAsset(assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling deleteAsset");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteAssetResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAssetModel operation.
     * @callback module:api/DefaultApi~deleteAssetModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteAssetModelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes an asset model. This action can't be undone. You must delete all assets created from an asset model before you can delete the model. Also, you can't delete an asset model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html\">Deleting assets and models</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {String} assetModelId The ID of the asset model to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deleteAssetModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteAssetModelResponse}
     */
    deleteAssetModel(assetModelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetModelId' is set
      if (assetModelId === undefined || assetModelId === null) {
        throw new Error("Missing the required parameter 'assetModelId' when calling deleteAssetModel");
      }

      let pathParams = {
        'assetModelId': assetModelId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteAssetModelResponse;
      return this.apiClient.callApi(
        '/asset-models/{assetModelId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteDashboard operation.
     * @callback module:api/DefaultApi~deleteDashboardCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a dashboard from IoT SiteWise Monitor.
     * @param {String} dashboardId The ID of the dashboard to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deleteDashboardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteDashboard(dashboardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dashboardId' is set
      if (dashboardId === undefined || dashboardId === null) {
        throw new Error("Missing the required parameter 'dashboardId' when calling deleteDashboard");
      }

      let pathParams = {
        'dashboardId': dashboardId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/dashboards/{dashboardId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteGateway operation.
     * @callback module:api/DefaultApi~deleteGatewayCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway's files remain in your gateway's file system.
     * @param {String} gatewayId The ID of the gateway to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteGatewayCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteGateway(gatewayId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'gatewayId' is set
      if (gatewayId === undefined || gatewayId === null) {
        throw new Error("Missing the required parameter 'gatewayId' when calling deleteGateway");
      }

      let pathParams = {
        'gatewayId': gatewayId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/20200301/gateways/{gatewayId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePortal operation.
     * @callback module:api/DefaultApi~deletePortalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletePortalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a portal from IoT SiteWise Monitor.
     * @param {String} portalId The ID of the portal to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deletePortalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletePortalResponse}
     */
    deletePortal(portalId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'portalId' is set
      if (portalId === undefined || portalId === null) {
        throw new Error("Missing the required parameter 'portalId' when calling deletePortal");
      }

      let pathParams = {
        'portalId': portalId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeletePortalResponse;
      return this.apiClient.callApi(
        '/portals/{portalId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProject operation.
     * @callback module:api/DefaultApi~deleteProjectCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a project from IoT SiteWise Monitor.
     * @param {String} projectId The ID of the project.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [clientToken] A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
     * @param {module:api/DefaultApi~deleteProjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteProject(projectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling deleteProject");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
        'clientToken': opts['clientToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/projects/{projectId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTimeSeries operation.
     * @callback module:api/DefaultApi~deleteTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a time series (data stream). If you delete a time series that's associated with an asset property, the asset property still exists, but the time series will no longer be associated with this asset property.</p> <p>To identify a time series, do one of the following:</p> <ul> <li> <p>If the time series isn't associated with an asset property, specify the <code>alias</code> of the time series.</p> </li> <li> <p>If the time series is associated with an asset property, specify one of the following: </p> <ul> <li> <p>The <code>alias</code> of the time series.</p> </li> <li> <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p> </li> </ul> </li> </ul>
     * @param {module:model/AssociateTimeSeriesToAssetPropertyRequest} associateTimeSeriesToAssetPropertyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [alias] The alias that identifies the time series.
     * @param {String} [assetId] The ID of the asset in which the asset property was created.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {module:api/DefaultApi~deleteTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteTimeSeries(associateTimeSeriesToAssetPropertyRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateTimeSeriesToAssetPropertyRequest;
      // verify the required parameter 'associateTimeSeriesToAssetPropertyRequest' is set
      if (associateTimeSeriesToAssetPropertyRequest === undefined || associateTimeSeriesToAssetPropertyRequest === null) {
        throw new Error("Missing the required parameter 'associateTimeSeriesToAssetPropertyRequest' when calling deleteTimeSeries");
      }

      let pathParams = {
      };
      let queryParams = {
        'alias': opts['alias'],
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/timeseries/delete/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAccessPolicy operation.
     * @callback module:api/DefaultApi~describeAccessPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAccessPolicyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Describes an access policy, which specifies an identity's access to an IoT SiteWise Monitor portal or project.
     * @param {String} accessPolicyId The ID of the access policy.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAccessPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAccessPolicyResponse}
     */
    describeAccessPolicy(accessPolicyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accessPolicyId' is set
      if (accessPolicyId === undefined || accessPolicyId === null) {
        throw new Error("Missing the required parameter 'accessPolicyId' when calling describeAccessPolicy");
      }

      let pathParams = {
        'accessPolicyId': accessPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAccessPolicyResponse;
      return this.apiClient.callApi(
        '/access-policies/{accessPolicyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAsset operation.
     * @callback module:api/DefaultApi~describeAssetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAssetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about an asset.
     * @param {String} assetId The ID of the asset.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Boolean} [excludeProperties]  Whether or not to exclude asset properties from the response. 
     * @param {module:api/DefaultApi~describeAssetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAssetResponse}
     */
    describeAsset(assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling describeAsset");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
        'excludeProperties': opts['excludeProperties']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAssetResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAssetModel operation.
     * @callback module:api/DefaultApi~describeAssetModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAssetModelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about an asset model.
     * @param {String} assetModelId The ID of the asset model.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Boolean} [excludeProperties]  Whether or not to exclude asset model properties from the response. 
     * @param {module:api/DefaultApi~describeAssetModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAssetModelResponse}
     */
    describeAssetModel(assetModelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetModelId' is set
      if (assetModelId === undefined || assetModelId === null) {
        throw new Error("Missing the required parameter 'assetModelId' when calling describeAssetModel");
      }

      let pathParams = {
        'assetModelId': assetModelId
      };
      let queryParams = {
        'excludeProperties': opts['excludeProperties']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAssetModelResponse;
      return this.apiClient.callApi(
        '/asset-models/{assetModelId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAssetProperty operation.
     * @callback module:api/DefaultApi~describeAssetPropertyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAssetPropertyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves information about an asset property.</p> <note> <p>When you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation's response includes the new default value.</p> </note> <p>This operation doesn't return the value of the asset property. To get the value of an asset property, use <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html\">GetAssetPropertyValue</a>.</p>
     * @param {String} assetId The ID of the asset.
     * @param {String} propertyId The ID of the asset property.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAssetPropertyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAssetPropertyResponse}
     */
    describeAssetProperty(assetId, propertyId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling describeAssetProperty");
      }
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling describeAssetProperty");
      }

      let pathParams = {
        'assetId': assetId,
        'propertyId': propertyId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAssetPropertyResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}/properties/{propertyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBulkImportJob operation.
     * @callback module:api/DefaultApi~describeBulkImportJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBulkImportJobResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a bulk import job request. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/DescribeBulkImportJob.html\">Describe a bulk import job (CLI)</a> in the <i>Amazon Simple Storage Service User Guide</i>.
     * @param {String} jobId The ID of the job.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeBulkImportJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBulkImportJobResponse}
     */
    describeBulkImportJob(jobId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling describeBulkImportJob");
      }

      let pathParams = {
        'jobId': jobId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeBulkImportJobResponse;
      return this.apiClient.callApi(
        '/jobs/{jobId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeDashboard operation.
     * @callback module:api/DefaultApi~describeDashboardCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeDashboardResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a dashboard.
     * @param {String} dashboardId The ID of the dashboard.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeDashboardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeDashboardResponse}
     */
    describeDashboard(dashboardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dashboardId' is set
      if (dashboardId === undefined || dashboardId === null) {
        throw new Error("Missing the required parameter 'dashboardId' when calling describeDashboard");
      }

      let pathParams = {
        'dashboardId': dashboardId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeDashboardResponse;
      return this.apiClient.callApi(
        '/dashboards/{dashboardId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeDefaultEncryptionConfiguration operation.
     * @callback module:api/DefaultApi~describeDefaultEncryptionConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeDefaultEncryptionConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\">Key management</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeDefaultEncryptionConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeDefaultEncryptionConfigurationResponse}
     */
    describeDefaultEncryptionConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeDefaultEncryptionConfigurationResponse;
      return this.apiClient.callApi(
        '/configuration/account/encryption', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeGateway operation.
     * @callback module:api/DefaultApi~describeGatewayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeGatewayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a gateway.
     * @param {String} gatewayId The ID of the gateway device.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeGatewayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeGatewayResponse}
     */
    describeGateway(gatewayId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'gatewayId' is set
      if (gatewayId === undefined || gatewayId === null) {
        throw new Error("Missing the required parameter 'gatewayId' when calling describeGateway");
      }

      let pathParams = {
        'gatewayId': gatewayId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeGatewayResponse;
      return this.apiClient.callApi(
        '/20200301/gateways/{gatewayId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeGatewayCapabilityConfiguration operation.
     * @callback module:api/DefaultApi~describeGatewayCapabilityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeGatewayCapabilityConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html\">DescribeGateway</a>.
     * @param {String} gatewayId The ID of the gateway that defines the capability configuration.
     * @param {String} capabilityNamespace The namespace of the capability configuration. For example, if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA capability configuration has the namespace <code>iotsitewise:opcuacollector:version</code>, where <code>version</code> is a number such as <code>1</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeGatewayCapabilityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeGatewayCapabilityConfigurationResponse}
     */
    describeGatewayCapabilityConfiguration(gatewayId, capabilityNamespace, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'gatewayId' is set
      if (gatewayId === undefined || gatewayId === null) {
        throw new Error("Missing the required parameter 'gatewayId' when calling describeGatewayCapabilityConfiguration");
      }
      // verify the required parameter 'capabilityNamespace' is set
      if (capabilityNamespace === undefined || capabilityNamespace === null) {
        throw new Error("Missing the required parameter 'capabilityNamespace' when calling describeGatewayCapabilityConfiguration");
      }

      let pathParams = {
        'gatewayId': gatewayId,
        'capabilityNamespace': capabilityNamespace
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeGatewayCapabilityConfigurationResponse;
      return this.apiClient.callApi(
        '/20200301/gateways/{gatewayId}/capability/{capabilityNamespace}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeLoggingOptions operation.
     * @callback module:api/DefaultApi~describeLoggingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeLoggingOptionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the current IoT SiteWise logging options.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeLoggingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeLoggingOptionsResponse}
     */
    describeLoggingOptions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeLoggingOptionsResponse;
      return this.apiClient.callApi(
        '/logging', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describePortal operation.
     * @callback module:api/DefaultApi~describePortalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribePortalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a portal.
     * @param {String} portalId The ID of the portal.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describePortalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribePortalResponse}
     */
    describePortal(portalId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'portalId' is set
      if (portalId === undefined || portalId === null) {
        throw new Error("Missing the required parameter 'portalId' when calling describePortal");
      }

      let pathParams = {
        'portalId': portalId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribePortalResponse;
      return this.apiClient.callApi(
        '/portals/{portalId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeProject operation.
     * @callback module:api/DefaultApi~describeProjectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeProjectResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about a project.
     * @param {String} projectId The ID of the project.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeProjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeProjectResponse}
     */
    describeProject(projectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling describeProject");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeProjectResponse;
      return this.apiClient.callApi(
        '/projects/{projectId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeStorageConfiguration operation.
     * @callback module:api/DefaultApi~describeStorageConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeStorageConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves information about the storage configuration for IoT SiteWise.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeStorageConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeStorageConfigurationResponse}
     */
    describeStorageConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeStorageConfigurationResponse;
      return this.apiClient.callApi(
        '/configuration/account/storage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeTimeSeries operation.
     * @callback module:api/DefaultApi~describeTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves information about a time series (data stream).</p> <p>To identify a time series, do one of the following:</p> <ul> <li> <p>If the time series isn't associated with an asset property, specify the <code>alias</code> of the time series.</p> </li> <li> <p>If the time series is associated with an asset property, specify one of the following: </p> <ul> <li> <p>The <code>alias</code> of the time series.</p> </li> <li> <p>The <code>assetId</code> and <code>propertyId</code> that identifies the asset property.</p> </li> </ul> </li> </ul>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [alias] The alias that identifies the time series.
     * @param {String} [assetId] The ID of the asset in which the asset property was created.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {module:api/DefaultApi~describeTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeTimeSeriesResponse}
     */
    describeTimeSeries(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alias': opts['alias'],
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeTimeSeriesResponse;
      return this.apiClient.callApi(
        '/timeseries/describe/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateAssets operation.
     * @callback module:api/DefaultApi~disassociateAssetsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates a child asset from the given parent asset through a hierarchy defined in the parent asset's model.
     * @param {String} assetId The ID of the parent asset from which to disassociate the child asset.
     * @param {module:model/DisassociateAssetsRequest} disassociateAssetsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    disassociateAssets(assetId, disassociateAssetsRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateAssetsRequest;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling disassociateAssets");
      }
      // verify the required parameter 'disassociateAssetsRequest' is set
      if (disassociateAssetsRequest === undefined || disassociateAssetsRequest === null) {
        throw new Error("Missing the required parameter 'disassociateAssetsRequest' when calling disassociateAssets");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/assets/{assetId}/disassociate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateTimeSeriesFromAssetProperty operation.
     * @callback module:api/DefaultApi~disassociateTimeSeriesFromAssetPropertyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates a time series (data stream) from an asset property.
     * @param {String} alias The alias that identifies the time series.
     * @param {String} assetId The ID of the asset in which the asset property was created.
     * @param {String} propertyId The ID of the asset property.
     * @param {module:model/AssociateTimeSeriesToAssetPropertyRequest} associateTimeSeriesToAssetPropertyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateTimeSeriesFromAssetPropertyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    disassociateTimeSeriesFromAssetProperty(alias, assetId, propertyId, associateTimeSeriesToAssetPropertyRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateTimeSeriesToAssetPropertyRequest;
      // verify the required parameter 'alias' is set
      if (alias === undefined || alias === null) {
        throw new Error("Missing the required parameter 'alias' when calling disassociateTimeSeriesFromAssetProperty");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling disassociateTimeSeriesFromAssetProperty");
      }
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling disassociateTimeSeriesFromAssetProperty");
      }
      // verify the required parameter 'associateTimeSeriesToAssetPropertyRequest' is set
      if (associateTimeSeriesToAssetPropertyRequest === undefined || associateTimeSeriesToAssetPropertyRequest === null) {
        throw new Error("Missing the required parameter 'associateTimeSeriesToAssetPropertyRequest' when calling disassociateTimeSeriesFromAssetProperty");
      }

      let pathParams = {
      };
      let queryParams = {
        'alias': alias,
        'assetId': assetId,
        'propertyId': propertyId
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/timeseries/disassociate/#alias&assetId&propertyId', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPropertyAggregates operation.
     * @callback module:api/DefaultApi~getAssetPropertyAggregatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetPropertyAggregatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets aggregated values for an asset property. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates\">Querying aggregates</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul>
     * @param {Array.<module:model/AggregateType>} aggregateTypes The data aggregating function.
     * @param {String} resolution The time interval over which to aggregate data.
     * @param {Date} startDate The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.
     * @param {Date} endDate The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [assetId] The ID of the asset.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {String} [propertyAlias] The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {Array.<module:model/Quality>} [qualities] The quality by which to filter asset data.
     * @param {module:model/String} [timeOrdering] <p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p> <ul> <li> <p>The size of the result set is equal to 1 MB.</p> </li> <li> <p>The number of data points in the result set is equal to the value of <code>maxResults</code>. The maximum value of <code>maxResults</code> is 250.</p> </li> </ul>
     * @param {module:api/DefaultApi~getAssetPropertyAggregatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetPropertyAggregatesResponse}
     */
    getAssetPropertyAggregates(aggregateTypes, resolution, startDate, endDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'aggregateTypes' is set
      if (aggregateTypes === undefined || aggregateTypes === null) {
        throw new Error("Missing the required parameter 'aggregateTypes' when calling getAssetPropertyAggregates");
      }
      // verify the required parameter 'resolution' is set
      if (resolution === undefined || resolution === null) {
        throw new Error("Missing the required parameter 'resolution' when calling getAssetPropertyAggregates");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling getAssetPropertyAggregates");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling getAssetPropertyAggregates");
      }

      let pathParams = {
      };
      let queryParams = {
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId'],
        'propertyAlias': opts['propertyAlias'],
        'aggregateTypes': this.apiClient.buildCollectionParam(aggregateTypes, 'multi'),
        'resolution': resolution,
        'qualities': this.apiClient.buildCollectionParam(opts['qualities'], 'multi'),
        'startDate': startDate,
        'endDate': endDate,
        'timeOrdering': opts['timeOrdering'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAssetPropertyAggregatesResponse;
      return this.apiClient.callApi(
        '/properties/aggregates#aggregateTypes&resolution&startDate&endDate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPropertyValue operation.
     * @callback module:api/DefaultApi~getAssetPropertyValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetPropertyValueResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets an asset property's current value. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values\">Querying current values</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [assetId] The ID of the asset.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {String} [propertyAlias] The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:api/DefaultApi~getAssetPropertyValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetPropertyValueResponse}
     */
    getAssetPropertyValue(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId'],
        'propertyAlias': opts['propertyAlias']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAssetPropertyValueResponse;
      return this.apiClient.callApi(
        '/properties/latest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAssetPropertyValueHistory operation.
     * @callback module:api/DefaultApi~getAssetPropertyValueHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAssetPropertyValueHistoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the history of an asset property's values. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values\">Querying historical values</a> in the <i>IoT SiteWise User Guide</i>.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [assetId] The ID of the asset.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {String} [propertyAlias] The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {Date} [startDate] The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.
     * @param {Date} [endDate] The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.
     * @param {Array.<module:model/Quality>} [qualities] The quality by which to filter asset data.
     * @param {module:model/String} [timeOrdering] <p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request. A result set is returned in the two cases, whichever occurs first.</p> <ul> <li> <p>The size of the result set is equal to 4 MB.</p> </li> <li> <p>The number of data points in the result set is equal to the value of <code>maxResults</code>. The maximum value of <code>maxResults</code> is 20000.</p> </li> </ul>
     * @param {module:api/DefaultApi~getAssetPropertyValueHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAssetPropertyValueHistoryResponse}
     */
    getAssetPropertyValueHistory(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId'],
        'propertyAlias': opts['propertyAlias'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'qualities': this.apiClient.buildCollectionParam(opts['qualities'], 'multi'),
        'timeOrdering': opts['timeOrdering'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAssetPropertyValueHistoryResponse;
      return this.apiClient.callApi(
        '/properties/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInterpolatedAssetPropertyValues operation.
     * @callback module:api/DefaultApi~getInterpolatedAssetPropertyValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetInterpolatedAssetPropertyValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Get interpolated values for an asset property for a specified time interval, during a period of time. If your time series is missing data points during the specified time interval, you can use interpolation to estimate the missing data.</p> <p>For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days.</p> <p>To identify an asset property, you must specify one of the following:</p> <ul> <li> <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p> </li> <li> <p>A <code>propertyAlias</code>, which is a data stream alias (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\">UpdateAssetProperty</a>.</p> </li> </ul>
     * @param {Number} startTimeInSeconds The exclusive start of the range from which to interpolate data, expressed in seconds in Unix epoch time.
     * @param {Number} endTimeInSeconds The inclusive end of the range from which to interpolate data, expressed in seconds in Unix epoch time.
     * @param {module:model/String} quality The quality of the asset property value. You can use this parameter as a filter to choose only the asset property values that have a specific quality.
     * @param {Number} intervalInSeconds The time interval in seconds over which to interpolate data. Each interval starts when the previous one ends.
     * @param {String} type <p>The interpolation type.</p> <p>Valid values: <code>LINEAR_INTERPOLATION | LOCF_INTERPOLATION</code> </p> <ul> <li> <p> <code>LINEAR_INTERPOLATION</code> – Estimates missing data using <a href=\"https://en.wikipedia.org/wiki/Linear_interpolation\">linear interpolation</a>.</p> <p>For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns the first interpolated value on July 2, 2021, at 9 AM, the second interpolated value on July 3, 2021, at 9 AM, and so on.</p> </li> <li> <p> <code>LOCF_INTERPOLATION</code> – Estimates missing data using last observation carried forward interpolation</p> <p>If no data point is found for an interval, IoT SiteWise returns the last observed data point for the previous interval and carries forward this interpolated value until a new data point is found.</p> <p>For example, you can get the state of an on-off valve every 24 hours over a duration of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns the last observed data point between July 1, 2021, at 9 AM and July 2, 2021, at 9 AM as the first interpolated value. If a data point isn't found after 9 AM on July 2, 2021, IoT SiteWise uses the same interpolated value for the rest of the days.</p> </li> </ul>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [assetId] The ID of the asset.
     * @param {String} [propertyId] The ID of the asset property.
     * @param {String} [propertyAlias] The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html\">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {Number} [startTimeOffsetInNanos] The nanosecond offset converted from <code>startTimeInSeconds</code>.
     * @param {Number} [endTimeOffsetInNanos] The nanosecond offset converted from <code>endTimeInSeconds</code>.
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request. If not specified, the default value is 10.
     * @param {Number} [intervalWindowInSeconds] <p>The query interval for the window, in seconds. IoT SiteWise computes each interpolated value by using data points from the timestamp of each interval, minus the window to the timestamp of each interval plus the window. If not specified, the window ranges between the start time minus the interval and the end time plus the interval.</p> <note> <ul> <li> <p>If you specify a value for the <code>intervalWindowInSeconds</code> parameter, the value for the <code>type</code> parameter must be <code>LINEAR_INTERPOLATION</code>.</p> </li> <li> <p>If a data point isn't found during the specified query window, IoT SiteWise won't return an interpolated value for the interval. This indicates that there's a gap in the ingested data points.</p> </li> </ul> </note> <p>For example, you can get the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days. If the interpolation starts on July 1, 2021, at 9 AM with a window of 2 hours, IoT SiteWise uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on July 2, 2021 to compute the first interpolated value. Next, IoT SiteWise uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on July 3, 2021 to compute the second interpolated value, and so on. </p>
     * @param {module:api/DefaultApi~getInterpolatedAssetPropertyValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetInterpolatedAssetPropertyValuesResponse}
     */
    getInterpolatedAssetPropertyValues(startTimeInSeconds, endTimeInSeconds, quality, intervalInSeconds, type, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'startTimeInSeconds' is set
      if (startTimeInSeconds === undefined || startTimeInSeconds === null) {
        throw new Error("Missing the required parameter 'startTimeInSeconds' when calling getInterpolatedAssetPropertyValues");
      }
      // verify the required parameter 'endTimeInSeconds' is set
      if (endTimeInSeconds === undefined || endTimeInSeconds === null) {
        throw new Error("Missing the required parameter 'endTimeInSeconds' when calling getInterpolatedAssetPropertyValues");
      }
      // verify the required parameter 'quality' is set
      if (quality === undefined || quality === null) {
        throw new Error("Missing the required parameter 'quality' when calling getInterpolatedAssetPropertyValues");
      }
      // verify the required parameter 'intervalInSeconds' is set
      if (intervalInSeconds === undefined || intervalInSeconds === null) {
        throw new Error("Missing the required parameter 'intervalInSeconds' when calling getInterpolatedAssetPropertyValues");
      }
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling getInterpolatedAssetPropertyValues");
      }

      let pathParams = {
      };
      let queryParams = {
        'assetId': opts['assetId'],
        'propertyId': opts['propertyId'],
        'propertyAlias': opts['propertyAlias'],
        'startTimeInSeconds': startTimeInSeconds,
        'startTimeOffsetInNanos': opts['startTimeOffsetInNanos'],
        'endTimeInSeconds': endTimeInSeconds,
        'endTimeOffsetInNanos': opts['endTimeOffsetInNanos'],
        'quality': quality,
        'intervalInSeconds': intervalInSeconds,
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'type': type,
        'intervalWindowInSeconds': opts['intervalWindowInSeconds']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetInterpolatedAssetPropertyValuesResponse;
      return this.apiClient.callApi(
        '/properties/interpolated#startTimeInSeconds&endTimeInSeconds&quality&intervalInSeconds&type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccessPolicies operation.
     * @callback module:api/DefaultApi~listAccessPoliciesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAccessPoliciesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of access policies for an identity (an IAM Identity Center user, an IAM Identity Center group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [identityType] The type of identity (IAM Identity Center user, IAM Identity Center group, or IAM user). This parameter is required if you specify <code>identityId</code>.
     * @param {String} [identityId] The ID of the identity. This parameter is required if you specify <code>USER</code> or <code>GROUP</code> for <code>identityType</code>.
     * @param {module:model/String} [resourceType] The type of resource (portal or project). This parameter is required if you specify <code>resourceId</code>.
     * @param {String} [resourceId] The ID of the resource. This parameter is required if you specify <code>resourceType</code>.
     * @param {String} [iamArn] The ARN of the IAM user. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html\">IAM ARNs</a> in the <i>IAM User Guide</i>. This parameter is required if you specify <code>IAM</code> for <code>identityType</code>.
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listAccessPoliciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAccessPoliciesResponse}
     */
    listAccessPolicies(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'identityType': opts['identityType'],
        'identityId': opts['identityId'],
        'resourceType': opts['resourceType'],
        'resourceId': opts['resourceId'],
        'iamArn': opts['iamArn'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAccessPoliciesResponse;
      return this.apiClient.callApi(
        '/access-policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssetModelProperties operation.
     * @callback module:api/DefaultApi~listAssetModelPropertiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssetModelPropertiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of properties associated with an asset model. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
     * @param {String} assetModelId The ID of the asset model.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request. If not specified, the default value is 50.
     * @param {module:model/String} [filter] <p> Filters the requested list of asset model properties. You can choose one of the following options:</p> <ul> <li> <p> <code>ALL</code> – The list includes all asset model properties for a given asset model ID. </p> </li> <li> <p> <code>BASE</code> – The list includes only base asset model properties for a given asset model ID. </p> </li> </ul> <p>Default: <code>BASE</code> </p>
     * @param {module:api/DefaultApi~listAssetModelPropertiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssetModelPropertiesResponse}
     */
    listAssetModelProperties(assetModelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetModelId' is set
      if (assetModelId === undefined || assetModelId === null) {
        throw new Error("Missing the required parameter 'assetModelId' when calling listAssetModelProperties");
      }

      let pathParams = {
        'assetModelId': assetModelId
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'filter': opts['filter']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssetModelPropertiesResponse;
      return this.apiClient.callApi(
        '/asset-models/{assetModelId}/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssetModels operation.
     * @callback module:api/DefaultApi~listAssetModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssetModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of summaries of all asset models.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listAssetModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssetModelsResponse}
     */
    listAssetModels(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssetModelsResponse;
      return this.apiClient.callApi(
        '/asset-models', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssetProperties operation.
     * @callback module:api/DefaultApi~listAssetPropertiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssetPropertiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of properties associated with an asset. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
     * @param {String} assetId The ID of the asset.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request. If not specified, the default value is 50.
     * @param {module:model/String} [filter] <p> Filters the requested list of asset properties. You can choose one of the following options:</p> <ul> <li> <p> <code>ALL</code> – The list includes all asset properties for a given asset model ID. </p> </li> <li> <p> <code>BASE</code> – The list includes only base asset properties for a given asset model ID. </p> </li> </ul> <p>Default: <code>BASE</code> </p>
     * @param {module:api/DefaultApi~listAssetPropertiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssetPropertiesResponse}
     */
    listAssetProperties(assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling listAssetProperties");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'filter': opts['filter']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssetPropertiesResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssetRelationships operation.
     * @callback module:api/DefaultApi~listAssetRelationshipsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssetRelationshipsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset's root asset and all associated assets between that asset and its root.
     * @param {String} assetId The ID of the asset.
     * @param {module:model/String} traversalType <p>The type of traversal to use to identify asset relationships. Choose the following option:</p> <ul> <li> <p> <code>PATH_TO_ROOT</code> – Identify the asset's parent assets up to the root asset. The asset that you specify in <code>assetId</code> is the first result in the list of <code>assetRelationshipSummaries</code>, and the root asset is the last result.</p> </li> </ul>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request.
     * @param {module:api/DefaultApi~listAssetRelationshipsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssetRelationshipsResponse}
     */
    listAssetRelationships(assetId, traversalType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling listAssetRelationships");
      }
      // verify the required parameter 'traversalType' is set
      if (traversalType === undefined || traversalType === null) {
        throw new Error("Missing the required parameter 'traversalType' when calling listAssetRelationships");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
        'traversalType': traversalType,
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssetRelationshipsResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}/assetRelationships#traversalType', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssets operation.
     * @callback module:api/DefaultApi~listAssetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves a paginated list of asset summaries.</p> <p>You can use this operation to do the following:</p> <ul> <li> <p>List assets based on a specific asset model.</p> </li> <li> <p>List top-level assets.</p> </li> </ul> <p>You can't use this operation to list all assets. To retrieve summaries for all of your assets, use <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html\">ListAssetModels</a> to get all of your asset model IDs. Then, use ListAssets to get all assets for each asset model.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {String} [assetModelId] The ID of the asset model by which to filter the list of assets. This parameter is required if you choose <code>ALL</code> for <code>filter</code>.
     * @param {module:model/String} [filter] <p>The filter for the requested list of assets. Choose one of the following options:</p> <ul> <li> <p> <code>ALL</code> – The list includes all assets for a given asset model ID. The <code>assetModelId</code> parameter is required if you filter by <code>ALL</code>.</p> </li> <li> <p> <code>TOP_LEVEL</code> – The list includes only top-level assets in the asset hierarchy tree.</p> </li> </ul> <p>Default: <code>ALL</code> </p>
     * @param {module:api/DefaultApi~listAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssetsResponse}
     */
    listAssets(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'assetModelId': opts['assetModelId'],
        'filter': opts['filter']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssetsResponse;
      return this.apiClient.callApi(
        '/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAssociatedAssets operation.
     * @callback module:api/DefaultApi~listAssociatedAssetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAssociatedAssetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves a paginated list of associated assets.</p> <p>You can use this operation to do the following:</p> <ul> <li> <p>List child assets associated to a parent asset by a hierarchy that you specify.</p> </li> <li> <p>List an asset's parent asset.</p> </li> </ul>
     * @param {String} assetId The ID of the asset to query.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [hierarchyId] <p>The ID of the hierarchy by which child assets are associated to the asset. To find a hierarchy ID, use the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAsset.html\">DescribeAsset</a> or <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html\">DescribeAssetModel</a> operations. This parameter is required if you choose <code>CHILD</code> for <code>traversalDirection</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html\">Asset hierarchies</a> in the <i>IoT SiteWise User Guide</i>.</p>
     * @param {module:model/String} [traversalDirection] <p>The direction to list associated assets. Choose one of the following options:</p> <ul> <li> <p> <code>CHILD</code> – The list includes all child assets associated to the asset. The <code>hierarchyId</code> parameter is required if you choose <code>CHILD</code>.</p> </li> <li> <p> <code>PARENT</code> – The list includes the asset's parent asset.</p> </li> </ul> <p>Default: <code>CHILD</code> </p>
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listAssociatedAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAssociatedAssetsResponse}
     */
    listAssociatedAssets(assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling listAssociatedAssets");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
        'hierarchyId': opts['hierarchyId'],
        'traversalDirection': opts['traversalDirection'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAssociatedAssetsResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}/hierarchies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBulkImportJobs operation.
     * @callback module:api/DefaultApi~listBulkImportJobsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBulkImportJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of bulk import job requests. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ListBulkImportJobs.html\">List bulk import jobs (CLI)</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request.
     * @param {module:model/String} [filter] You can use a filter to select the bulk import jobs that you want to retrieve.
     * @param {module:api/DefaultApi~listBulkImportJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBulkImportJobsResponse}
     */
    listBulkImportJobs(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'filter': opts['filter']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBulkImportJobsResponse;
      return this.apiClient.callApi(
        '/jobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDashboards operation.
     * @callback module:api/DefaultApi~listDashboardsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDashboardsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.
     * @param {String} projectId The ID of the project.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listDashboardsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDashboardsResponse}
     */
    listDashboards(projectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling listDashboards");
      }

      let pathParams = {
      };
      let queryParams = {
        'projectId': projectId,
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListDashboardsResponse;
      return this.apiClient.callApi(
        '/dashboards#projectId', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listGateways operation.
     * @callback module:api/DefaultApi~listGatewaysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListGatewaysResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of gateways.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listGatewaysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListGatewaysResponse}
     */
    listGateways(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListGatewaysResponse;
      return this.apiClient.callApi(
        '/20200301/gateways', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPortals operation.
     * @callback module:api/DefaultApi~listPortalsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPortalsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of IoT SiteWise Monitor portals.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listPortalsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPortalsResponse}
     */
    listPortals(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListPortalsResponse;
      return this.apiClient.callApi(
        '/portals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listProjectAssets operation.
     * @callback module:api/DefaultApi~listProjectAssetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListProjectAssetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.
     * @param {String} projectId The ID of the project.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listProjectAssetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListProjectAssetsResponse}
     */
    listProjectAssets(projectId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling listProjectAssets");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListProjectAssetsResponse;
      return this.apiClient.callApi(
        '/projects/{projectId}/assets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listProjects operation.
     * @callback module:api/DefaultApi~listProjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListProjectsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.
     * @param {String} portalId The ID of the portal.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
     * @param {module:api/DefaultApi~listProjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListProjectsResponse}
     */
    listProjects(portalId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'portalId' is set
      if (portalId === undefined || portalId === null) {
        throw new Error("Missing the required parameter 'portalId' when calling listProjects");
      }

      let pathParams = {
      };
      let queryParams = {
        'portalId': portalId,
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListProjectsResponse;
      return this.apiClient.callApi(
        '/projects#portalId', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the list of tags for an IoT SiteWise resource.
     * @param {String} resourceArn The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of the resource.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(resourceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/tags#resourceArn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTimeSeries operation.
     * @callback module:api/DefaultApi~listTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a paginated list of time series (data streams).
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to be used for the next set of paginated results.
     * @param {Number} [maxResults] The maximum number of results to return for each paginated request.
     * @param {String} [assetId] The ID of the asset in which the asset property was created.
     * @param {String} [aliasPrefix] The alias prefix of the time series.
     * @param {module:model/String} [timeSeriesType] <p>The type of the time series. The time series type can be one of the following values:</p> <ul> <li> <p> <code>ASSOCIATED</code> – The time series is associated with an asset property.</p> </li> <li> <p> <code>DISASSOCIATED</code> – The time series isn't associated with any asset property.</p> </li> </ul>
     * @param {module:api/DefaultApi~listTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTimeSeriesResponse}
     */
    listTimeSeries(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults'],
        'assetId': opts['assetId'],
        'aliasPrefix': opts['aliasPrefix'],
        'timeSeriesType': opts['timeSeriesType']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTimeSeriesResponse;
      return this.apiClient.callApi(
        '/timeseries/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putDefaultEncryptionConfiguration operation.
     * @callback module:api/DefaultApi~putDefaultEncryptionConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutDefaultEncryptionConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the default encryption configuration for the Amazon Web Services account. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\">Key management</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {module:model/PutDefaultEncryptionConfigurationRequest} putDefaultEncryptionConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putDefaultEncryptionConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutDefaultEncryptionConfigurationResponse}
     */
    putDefaultEncryptionConfiguration(putDefaultEncryptionConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putDefaultEncryptionConfigurationRequest;
      // verify the required parameter 'putDefaultEncryptionConfigurationRequest' is set
      if (putDefaultEncryptionConfigurationRequest === undefined || putDefaultEncryptionConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putDefaultEncryptionConfigurationRequest' when calling putDefaultEncryptionConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutDefaultEncryptionConfigurationResponse;
      return this.apiClient.callApi(
        '/configuration/account/encryption', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putLoggingOptions operation.
     * @callback module:api/DefaultApi~putLoggingOptionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets logging options for IoT SiteWise.
     * @param {module:model/PutLoggingOptionsRequest} putLoggingOptionsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putLoggingOptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    putLoggingOptions(putLoggingOptionsRequest, opts, callback) {
      opts = opts || {};
      let postBody = putLoggingOptionsRequest;
      // verify the required parameter 'putLoggingOptionsRequest' is set
      if (putLoggingOptionsRequest === undefined || putLoggingOptionsRequest === null) {
        throw new Error("Missing the required parameter 'putLoggingOptionsRequest' when calling putLoggingOptions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/logging', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putStorageConfiguration operation.
     * @callback module:api/DefaultApi~putStorageConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutStorageConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Configures storage settings for IoT SiteWise.
     * @param {module:model/PutStorageConfigurationRequest} putStorageConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putStorageConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutStorageConfigurationResponse}
     */
    putStorageConfiguration(putStorageConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putStorageConfigurationRequest;
      // verify the required parameter 'putStorageConfigurationRequest' is set
      if (putStorageConfigurationRequest === undefined || putStorageConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putStorageConfigurationRequest' when calling putStorageConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutStorageConfigurationResponse;
      return this.apiClient.callApi(
        '/configuration/account/storage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation updates the tag's value.
     * @param {String} resourceArn The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of the resource to tag.
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    tagResource(resourceArn, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags#resourceArn', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a tag from an IoT SiteWise resource.
     * @param {String} resourceArn The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of the resource to untag.
     * @param {Array.<String>} tagKeys A list of keys for tags to remove from the resource.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    untagResource(resourceArn, tagKeys, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resourceArn' is set
      if (resourceArn === undefined || resourceArn === null) {
        throw new Error("Missing the required parameter 'resourceArn' when calling untagResource");
      }
      // verify the required parameter 'tagKeys' is set
      if (tagKeys === undefined || tagKeys === null) {
        throw new Error("Missing the required parameter 'tagKeys' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'resourceArn': resourceArn,
        'tagKeys': this.apiClient.buildCollectionParam(tagKeys, 'multi')
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/tags#resourceArn&tagKeys', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccessPolicy operation.
     * @callback module:api/DefaultApi~updateAccessPolicyCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor portal or project resource.
     * @param {String} accessPolicyId The ID of the access policy.
     * @param {module:model/UpdateAccessPolicyRequest} updateAccessPolicyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAccessPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateAccessPolicy(accessPolicyId, updateAccessPolicyRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAccessPolicyRequest;
      // verify the required parameter 'accessPolicyId' is set
      if (accessPolicyId === undefined || accessPolicyId === null) {
        throw new Error("Missing the required parameter 'accessPolicyId' when calling updateAccessPolicy");
      }
      // verify the required parameter 'updateAccessPolicyRequest' is set
      if (updateAccessPolicyRequest === undefined || updateAccessPolicyRequest === null) {
        throw new Error("Missing the required parameter 'updateAccessPolicyRequest' when calling updateAccessPolicy");
      }

      let pathParams = {
        'accessPolicyId': accessPolicyId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/access-policies/{accessPolicyId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAsset operation.
     * @callback module:api/DefaultApi~updateAssetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAssetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an asset's name. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html\">Updating assets and models</a> in the <i>IoT SiteWise User Guide</i>.
     * @param {String} assetId The ID of the asset to update.
     * @param {module:model/UpdateAssetRequest} updateAssetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAssetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAssetResponse}
     */
    updateAsset(assetId, updateAssetRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAssetRequest;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling updateAsset");
      }
      // verify the required parameter 'updateAssetRequest' is set
      if (updateAssetRequest === undefined || updateAssetRequest === null) {
        throw new Error("Missing the required parameter 'updateAssetRequest' when calling updateAsset");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAssetResponse;
      return this.apiClient.callApi(
        '/assets/{assetId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAssetModel operation.
     * @callback module:api/DefaultApi~updateAssetModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAssetModelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model's property and hierarchy definitions. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html\">Updating assets and models</a> in the <i>IoT SiteWise User Guide</i>.</p> <important> <p>This operation overwrites the existing model with the provided model. To avoid deleting your asset model's properties or hierarchies, you must include their IDs and definitions in the updated asset model payload. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html\">DescribeAssetModel</a>.</p> <p>If you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. If you remove a hierarchy definition from an asset model, IoT SiteWise disassociates every asset associated with that hierarchy. You can't change the type or data type of an existing property.</p> </important>
     * @param {String} assetModelId The ID of the asset model to update.
     * @param {module:model/UpdateAssetModelRequest} updateAssetModelRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAssetModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAssetModelResponse}
     */
    updateAssetModel(assetModelId, updateAssetModelRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAssetModelRequest;
      // verify the required parameter 'assetModelId' is set
      if (assetModelId === undefined || assetModelId === null) {
        throw new Error("Missing the required parameter 'assetModelId' when calling updateAssetModel");
      }
      // verify the required parameter 'updateAssetModelRequest' is set
      if (updateAssetModelRequest === undefined || updateAssetModelRequest === null) {
        throw new Error("Missing the required parameter 'updateAssetModelRequest' when calling updateAssetModel");
      }

      let pathParams = {
        'assetModelId': assetModelId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAssetModelResponse;
      return this.apiClient.callApi(
        '/asset-models/{assetModelId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAssetProperty operation.
     * @callback module:api/DefaultApi~updateAssetPropertyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates an asset property's alias and notification state.</p> <important> <p>This operation overwrites the property's existing alias and notification state. To keep your existing property's alias or notification state, you must include the existing values in the UpdateAssetProperty request. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html\">DescribeAssetProperty</a>.</p> </important>
     * @param {String} assetId The ID of the asset to be updated.
     * @param {String} propertyId The ID of the asset property to be updated.
     * @param {module:model/UpdateAssetPropertyRequest} updateAssetPropertyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAssetPropertyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateAssetProperty(assetId, propertyId, updateAssetPropertyRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAssetPropertyRequest;
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling updateAssetProperty");
      }
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling updateAssetProperty");
      }
      // verify the required parameter 'updateAssetPropertyRequest' is set
      if (updateAssetPropertyRequest === undefined || updateAssetPropertyRequest === null) {
        throw new Error("Missing the required parameter 'updateAssetPropertyRequest' when calling updateAssetProperty");
      }

      let pathParams = {
        'assetId': assetId,
        'propertyId': propertyId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/assets/{assetId}/properties/{propertyId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDashboard operation.
     * @callback module:api/DefaultApi~updateDashboardCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an IoT SiteWise Monitor dashboard.
     * @param {String} dashboardId The ID of the dashboard to update.
     * @param {module:model/UpdateDashboardRequest} updateDashboardRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateDashboardCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateDashboard(dashboardId, updateDashboardRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateDashboardRequest;
      // verify the required parameter 'dashboardId' is set
      if (dashboardId === undefined || dashboardId === null) {
        throw new Error("Missing the required parameter 'dashboardId' when calling updateDashboard");
      }
      // verify the required parameter 'updateDashboardRequest' is set
      if (updateDashboardRequest === undefined || updateDashboardRequest === null) {
        throw new Error("Missing the required parameter 'updateDashboardRequest' when calling updateDashboard");
      }

      let pathParams = {
        'dashboardId': dashboardId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/dashboards/{dashboardId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGateway operation.
     * @callback module:api/DefaultApi~updateGatewayCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a gateway's name.
     * @param {String} gatewayId The ID of the gateway to update.
     * @param {module:model/UpdateGatewayRequest} updateGatewayRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateGatewayCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateGateway(gatewayId, updateGatewayRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateGatewayRequest;
      // verify the required parameter 'gatewayId' is set
      if (gatewayId === undefined || gatewayId === null) {
        throw new Error("Missing the required parameter 'gatewayId' when calling updateGateway");
      }
      // verify the required parameter 'updateGatewayRequest' is set
      if (updateGatewayRequest === undefined || updateGatewayRequest === null) {
        throw new Error("Missing the required parameter 'updateGatewayRequest' when calling updateGateway");
      }

      let pathParams = {
        'gatewayId': gatewayId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/20200301/gateways/{gatewayId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGatewayCapabilityConfiguration operation.
     * @callback module:api/DefaultApi~updateGatewayCapabilityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateGatewayCapabilityConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a gateway capability configuration or defines a new capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html\">DescribeGateway</a>.
     * @param {String} gatewayId The ID of the gateway to be updated.
     * @param {module:model/UpdateGatewayCapabilityConfigurationRequest} updateGatewayCapabilityConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateGatewayCapabilityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateGatewayCapabilityConfigurationResponse}
     */
    updateGatewayCapabilityConfiguration(gatewayId, updateGatewayCapabilityConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateGatewayCapabilityConfigurationRequest;
      // verify the required parameter 'gatewayId' is set
      if (gatewayId === undefined || gatewayId === null) {
        throw new Error("Missing the required parameter 'gatewayId' when calling updateGatewayCapabilityConfiguration");
      }
      // verify the required parameter 'updateGatewayCapabilityConfigurationRequest' is set
      if (updateGatewayCapabilityConfigurationRequest === undefined || updateGatewayCapabilityConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'updateGatewayCapabilityConfigurationRequest' when calling updateGatewayCapabilityConfiguration");
      }

      let pathParams = {
        'gatewayId': gatewayId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateGatewayCapabilityConfigurationResponse;
      return this.apiClient.callApi(
        '/20200301/gateways/{gatewayId}/capability', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePortal operation.
     * @callback module:api/DefaultApi~updatePortalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatePortalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an IoT SiteWise Monitor portal.
     * @param {String} portalId The ID of the portal to update.
     * @param {module:model/UpdatePortalRequest} updatePortalRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updatePortalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatePortalResponse}
     */
    updatePortal(portalId, updatePortalRequest, opts, callback) {
      opts = opts || {};
      let postBody = updatePortalRequest;
      // verify the required parameter 'portalId' is set
      if (portalId === undefined || portalId === null) {
        throw new Error("Missing the required parameter 'portalId' when calling updatePortal");
      }
      // verify the required parameter 'updatePortalRequest' is set
      if (updatePortalRequest === undefined || updatePortalRequest === null) {
        throw new Error("Missing the required parameter 'updatePortalRequest' when calling updatePortal");
      }

      let pathParams = {
        'portalId': portalId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdatePortalResponse;
      return this.apiClient.callApi(
        '/portals/{portalId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateProject operation.
     * @callback module:api/DefaultApi~updateProjectCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an IoT SiteWise Monitor project.
     * @param {String} projectId The ID of the project to update.
     * @param {module:model/UpdateProjectRequest} updateProjectRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateProjectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateProject(projectId, updateProjectRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateProjectRequest;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling updateProject");
      }
      // verify the required parameter 'updateProjectRequest' is set
      if (updateProjectRequest === undefined || updateProjectRequest === null) {
        throw new Error("Missing the required parameter 'updateProjectRequest' when calling updateProject");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/projects/{projectId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
