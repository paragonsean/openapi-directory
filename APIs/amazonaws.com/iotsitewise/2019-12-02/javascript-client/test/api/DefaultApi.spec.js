/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsIoTSiteWise);
  }
}(this, function(expect, AwsIoTSiteWise) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsIoTSiteWise.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateAssets', function() {
      it('should call associateAssets successfully', function(done) {
        //uncomment below and update the code to test associateAssets
        //instance.associateAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateTimeSeriesToAssetProperty', function() {
      it('should call associateTimeSeriesToAssetProperty successfully', function(done) {
        //uncomment below and update the code to test associateTimeSeriesToAssetProperty
        //instance.associateTimeSeriesToAssetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchAssociateProjectAssets', function() {
      it('should call batchAssociateProjectAssets successfully', function(done) {
        //uncomment below and update the code to test batchAssociateProjectAssets
        //instance.batchAssociateProjectAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDisassociateProjectAssets', function() {
      it('should call batchDisassociateProjectAssets successfully', function(done) {
        //uncomment below and update the code to test batchDisassociateProjectAssets
        //instance.batchDisassociateProjectAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetAssetPropertyAggregates', function() {
      it('should call batchGetAssetPropertyAggregates successfully', function(done) {
        //uncomment below and update the code to test batchGetAssetPropertyAggregates
        //instance.batchGetAssetPropertyAggregates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetAssetPropertyValue', function() {
      it('should call batchGetAssetPropertyValue successfully', function(done) {
        //uncomment below and update the code to test batchGetAssetPropertyValue
        //instance.batchGetAssetPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetAssetPropertyValueHistory', function() {
      it('should call batchGetAssetPropertyValueHistory successfully', function(done) {
        //uncomment below and update the code to test batchGetAssetPropertyValueHistory
        //instance.batchGetAssetPropertyValueHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchPutAssetPropertyValue', function() {
      it('should call batchPutAssetPropertyValue successfully', function(done) {
        //uncomment below and update the code to test batchPutAssetPropertyValue
        //instance.batchPutAssetPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccessPolicy', function() {
      it('should call createAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test createAccessPolicy
        //instance.createAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAsset', function() {
      it('should call createAsset successfully', function(done) {
        //uncomment below and update the code to test createAsset
        //instance.createAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAssetModel', function() {
      it('should call createAssetModel successfully', function(done) {
        //uncomment below and update the code to test createAssetModel
        //instance.createAssetModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBulkImportJob', function() {
      it('should call createBulkImportJob successfully', function(done) {
        //uncomment below and update the code to test createBulkImportJob
        //instance.createBulkImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDashboard', function() {
      it('should call createDashboard successfully', function(done) {
        //uncomment below and update the code to test createDashboard
        //instance.createDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGateway', function() {
      it('should call createGateway successfully', function(done) {
        //uncomment below and update the code to test createGateway
        //instance.createGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPortal', function() {
      it('should call createPortal successfully', function(done) {
        //uncomment below and update the code to test createPortal
        //instance.createPortal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProject', function() {
      it('should call createProject successfully', function(done) {
        //uncomment below and update the code to test createProject
        //instance.createProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPolicy', function() {
      it('should call deleteAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPolicy
        //instance.deleteAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAsset', function() {
      it('should call deleteAsset successfully', function(done) {
        //uncomment below and update the code to test deleteAsset
        //instance.deleteAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAssetModel', function() {
      it('should call deleteAssetModel successfully', function(done) {
        //uncomment below and update the code to test deleteAssetModel
        //instance.deleteAssetModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDashboard', function() {
      it('should call deleteDashboard successfully', function(done) {
        //uncomment below and update the code to test deleteDashboard
        //instance.deleteDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGateway', function() {
      it('should call deleteGateway successfully', function(done) {
        //uncomment below and update the code to test deleteGateway
        //instance.deleteGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePortal', function() {
      it('should call deletePortal successfully', function(done) {
        //uncomment below and update the code to test deletePortal
        //instance.deletePortal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProject', function() {
      it('should call deleteProject successfully', function(done) {
        //uncomment below and update the code to test deleteProject
        //instance.deleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTimeSeries', function() {
      it('should call deleteTimeSeries successfully', function(done) {
        //uncomment below and update the code to test deleteTimeSeries
        //instance.deleteTimeSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAccessPolicy', function() {
      it('should call describeAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test describeAccessPolicy
        //instance.describeAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAsset', function() {
      it('should call describeAsset successfully', function(done) {
        //uncomment below and update the code to test describeAsset
        //instance.describeAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAssetModel', function() {
      it('should call describeAssetModel successfully', function(done) {
        //uncomment below and update the code to test describeAssetModel
        //instance.describeAssetModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAssetProperty', function() {
      it('should call describeAssetProperty successfully', function(done) {
        //uncomment below and update the code to test describeAssetProperty
        //instance.describeAssetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBulkImportJob', function() {
      it('should call describeBulkImportJob successfully', function(done) {
        //uncomment below and update the code to test describeBulkImportJob
        //instance.describeBulkImportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDashboard', function() {
      it('should call describeDashboard successfully', function(done) {
        //uncomment below and update the code to test describeDashboard
        //instance.describeDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDefaultEncryptionConfiguration', function() {
      it('should call describeDefaultEncryptionConfiguration successfully', function(done) {
        //uncomment below and update the code to test describeDefaultEncryptionConfiguration
        //instance.describeDefaultEncryptionConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeGateway', function() {
      it('should call describeGateway successfully', function(done) {
        //uncomment below and update the code to test describeGateway
        //instance.describeGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeGatewayCapabilityConfiguration', function() {
      it('should call describeGatewayCapabilityConfiguration successfully', function(done) {
        //uncomment below and update the code to test describeGatewayCapabilityConfiguration
        //instance.describeGatewayCapabilityConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLoggingOptions', function() {
      it('should call describeLoggingOptions successfully', function(done) {
        //uncomment below and update the code to test describeLoggingOptions
        //instance.describeLoggingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePortal', function() {
      it('should call describePortal successfully', function(done) {
        //uncomment below and update the code to test describePortal
        //instance.describePortal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProject', function() {
      it('should call describeProject successfully', function(done) {
        //uncomment below and update the code to test describeProject
        //instance.describeProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStorageConfiguration', function() {
      it('should call describeStorageConfiguration successfully', function(done) {
        //uncomment below and update the code to test describeStorageConfiguration
        //instance.describeStorageConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTimeSeries', function() {
      it('should call describeTimeSeries successfully', function(done) {
        //uncomment below and update the code to test describeTimeSeries
        //instance.describeTimeSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateAssets', function() {
      it('should call disassociateAssets successfully', function(done) {
        //uncomment below and update the code to test disassociateAssets
        //instance.disassociateAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateTimeSeriesFromAssetProperty', function() {
      it('should call disassociateTimeSeriesFromAssetProperty successfully', function(done) {
        //uncomment below and update the code to test disassociateTimeSeriesFromAssetProperty
        //instance.disassociateTimeSeriesFromAssetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetPropertyAggregates', function() {
      it('should call getAssetPropertyAggregates successfully', function(done) {
        //uncomment below and update the code to test getAssetPropertyAggregates
        //instance.getAssetPropertyAggregates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetPropertyValue', function() {
      it('should call getAssetPropertyValue successfully', function(done) {
        //uncomment below and update the code to test getAssetPropertyValue
        //instance.getAssetPropertyValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetPropertyValueHistory', function() {
      it('should call getAssetPropertyValueHistory successfully', function(done) {
        //uncomment below and update the code to test getAssetPropertyValueHistory
        //instance.getAssetPropertyValueHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInterpolatedAssetPropertyValues', function() {
      it('should call getInterpolatedAssetPropertyValues successfully', function(done) {
        //uncomment below and update the code to test getInterpolatedAssetPropertyValues
        //instance.getInterpolatedAssetPropertyValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccessPolicies', function() {
      it('should call listAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test listAccessPolicies
        //instance.listAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssetModelProperties', function() {
      it('should call listAssetModelProperties successfully', function(done) {
        //uncomment below and update the code to test listAssetModelProperties
        //instance.listAssetModelProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssetModels', function() {
      it('should call listAssetModels successfully', function(done) {
        //uncomment below and update the code to test listAssetModels
        //instance.listAssetModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssetProperties', function() {
      it('should call listAssetProperties successfully', function(done) {
        //uncomment below and update the code to test listAssetProperties
        //instance.listAssetProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssetRelationships', function() {
      it('should call listAssetRelationships successfully', function(done) {
        //uncomment below and update the code to test listAssetRelationships
        //instance.listAssetRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssets', function() {
      it('should call listAssets successfully', function(done) {
        //uncomment below and update the code to test listAssets
        //instance.listAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociatedAssets', function() {
      it('should call listAssociatedAssets successfully', function(done) {
        //uncomment below and update the code to test listAssociatedAssets
        //instance.listAssociatedAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBulkImportJobs', function() {
      it('should call listBulkImportJobs successfully', function(done) {
        //uncomment below and update the code to test listBulkImportJobs
        //instance.listBulkImportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDashboards', function() {
      it('should call listDashboards successfully', function(done) {
        //uncomment below and update the code to test listDashboards
        //instance.listDashboards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGateways', function() {
      it('should call listGateways successfully', function(done) {
        //uncomment below and update the code to test listGateways
        //instance.listGateways(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPortals', function() {
      it('should call listPortals successfully', function(done) {
        //uncomment below and update the code to test listPortals
        //instance.listPortals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProjectAssets', function() {
      it('should call listProjectAssets successfully', function(done) {
        //uncomment below and update the code to test listProjectAssets
        //instance.listProjectAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProjects', function() {
      it('should call listProjects successfully', function(done) {
        //uncomment below and update the code to test listProjects
        //instance.listProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTimeSeries', function() {
      it('should call listTimeSeries successfully', function(done) {
        //uncomment below and update the code to test listTimeSeries
        //instance.listTimeSeries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putDefaultEncryptionConfiguration', function() {
      it('should call putDefaultEncryptionConfiguration successfully', function(done) {
        //uncomment below and update the code to test putDefaultEncryptionConfiguration
        //instance.putDefaultEncryptionConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLoggingOptions', function() {
      it('should call putLoggingOptions successfully', function(done) {
        //uncomment below and update the code to test putLoggingOptions
        //instance.putLoggingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putStorageConfiguration', function() {
      it('should call putStorageConfiguration successfully', function(done) {
        //uncomment below and update the code to test putStorageConfiguration
        //instance.putStorageConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccessPolicy', function() {
      it('should call updateAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test updateAccessPolicy
        //instance.updateAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAsset', function() {
      it('should call updateAsset successfully', function(done) {
        //uncomment below and update the code to test updateAsset
        //instance.updateAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAssetModel', function() {
      it('should call updateAssetModel successfully', function(done) {
        //uncomment below and update the code to test updateAssetModel
        //instance.updateAssetModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAssetProperty', function() {
      it('should call updateAssetProperty successfully', function(done) {
        //uncomment below and update the code to test updateAssetProperty
        //instance.updateAssetProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDashboard', function() {
      it('should call updateDashboard successfully', function(done) {
        //uncomment below and update the code to test updateDashboard
        //instance.updateDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGateway', function() {
      it('should call updateGateway successfully', function(done) {
        //uncomment below and update the code to test updateGateway
        //instance.updateGateway(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGatewayCapabilityConfiguration', function() {
      it('should call updateGatewayCapabilityConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateGatewayCapabilityConfiguration
        //instance.updateGatewayCapabilityConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePortal', function() {
      it('should call updatePortal successfully', function(done) {
        //uncomment below and update the code to test updatePortal
        //instance.updatePortal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProject', function() {
      it('should call updateProject successfully', function(done) {
        //uncomment below and update the code to test updateProject
        //instance.updateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
