# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_get_asset_property_aggregates_error_code import BatchGetAssetPropertyAggregatesErrorCode
from openapi_server import util


class BatchGetAssetPropertyAggregatesErrorEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: BatchGetAssetPropertyAggregatesErrorCode=None, error_message: str=None, entry_id: str=None):
        """BatchGetAssetPropertyAggregatesErrorEntry - a model defined in OpenAPI

        :param error_code: The error_code of this BatchGetAssetPropertyAggregatesErrorEntry.
        :param error_message: The error_message of this BatchGetAssetPropertyAggregatesErrorEntry.
        :param entry_id: The entry_id of this BatchGetAssetPropertyAggregatesErrorEntry.
        """
        self.openapi_types = {
            'error_code': BatchGetAssetPropertyAggregatesErrorCode,
            'error_message': str,
            'entry_id': str
        }

        self.attribute_map = {
            'error_code': 'errorCode',
            'error_message': 'errorMessage',
            'entry_id': 'entryId'
        }

        self._error_code = error_code
        self._error_message = error_message
        self._entry_id = entry_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetAssetPropertyAggregatesErrorEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetAssetPropertyAggregatesErrorEntry of this BatchGetAssetPropertyAggregatesErrorEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this BatchGetAssetPropertyAggregatesErrorEntry.


        :return: The error_code of this BatchGetAssetPropertyAggregatesErrorEntry.
        :rtype: BatchGetAssetPropertyAggregatesErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this BatchGetAssetPropertyAggregatesErrorEntry.


        :param error_code: The error_code of this BatchGetAssetPropertyAggregatesErrorEntry.
        :type error_code: BatchGetAssetPropertyAggregatesErrorCode
        """
        if error_code is None:
            raise ValueError("Invalid value for `error_code`, must not be `None`")

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this BatchGetAssetPropertyAggregatesErrorEntry.


        :return: The error_message of this BatchGetAssetPropertyAggregatesErrorEntry.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this BatchGetAssetPropertyAggregatesErrorEntry.


        :param error_message: The error_message of this BatchGetAssetPropertyAggregatesErrorEntry.
        :type error_message: str
        """
        if error_message is None:
            raise ValueError("Invalid value for `error_message`, must not be `None`")

        self._error_message = error_message

    @property
    def entry_id(self):
        """Gets the entry_id of this BatchGetAssetPropertyAggregatesErrorEntry.


        :return: The entry_id of this BatchGetAssetPropertyAggregatesErrorEntry.
        :rtype: str
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this BatchGetAssetPropertyAggregatesErrorEntry.


        :param entry_id: The entry_id of this BatchGetAssetPropertyAggregatesErrorEntry.
        :type entry_id: str
        """
        if entry_id is None:
            raise ValueError("Invalid value for `entry_id`, must not be `None`")

        self._entry_id = entry_id
