# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.measurement_processing_config_forwarding_config import MeasurementProcessingConfigForwardingConfig
from openapi_server import util


class MeasurementProcessingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forwarding_config: MeasurementProcessingConfigForwardingConfig=None):
        """MeasurementProcessingConfig - a model defined in OpenAPI

        :param forwarding_config: The forwarding_config of this MeasurementProcessingConfig.
        """
        self.openapi_types = {
            'forwarding_config': MeasurementProcessingConfigForwardingConfig
        }

        self.attribute_map = {
            'forwarding_config': 'forwardingConfig'
        }

        self._forwarding_config = forwarding_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MeasurementProcessingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Measurement_processingConfig of this MeasurementProcessingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forwarding_config(self):
        """Gets the forwarding_config of this MeasurementProcessingConfig.


        :return: The forwarding_config of this MeasurementProcessingConfig.
        :rtype: MeasurementProcessingConfigForwardingConfig
        """
        return self._forwarding_config

    @forwarding_config.setter
    def forwarding_config(self, forwarding_config):
        """Sets the forwarding_config of this MeasurementProcessingConfig.


        :param forwarding_config: The forwarding_config of this MeasurementProcessingConfig.
        :type forwarding_config: MeasurementProcessingConfigForwardingConfig
        """
        if forwarding_config is None:
            raise ValueError("Invalid value for `forwarding_config`, must not be `None`")

        self._forwarding_config = forwarding_config
