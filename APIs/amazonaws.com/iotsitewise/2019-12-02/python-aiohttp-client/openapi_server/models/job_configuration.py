# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_bulk_import_job_request_job_configuration_file_format import CreateBulkImportJobRequestJobConfigurationFileFormat
from openapi_server import util


class JobConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_format: CreateBulkImportJobRequestJobConfigurationFileFormat=None):
        """JobConfiguration - a model defined in OpenAPI

        :param file_format: The file_format of this JobConfiguration.
        """
        self.openapi_types = {
            'file_format': CreateBulkImportJobRequestJobConfigurationFileFormat
        }

        self.attribute_map = {
            'file_format': 'fileFormat'
        }

        self._file_format = file_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobConfiguration of this JobConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_format(self):
        """Gets the file_format of this JobConfiguration.


        :return: The file_format of this JobConfiguration.
        :rtype: CreateBulkImportJobRequestJobConfigurationFileFormat
        """
        return self._file_format

    @file_format.setter
    def file_format(self, file_format):
        """Sets the file_format of this JobConfiguration.


        :param file_format: The file_format of this JobConfiguration.
        :type file_format: CreateBulkImportJobRequestJobConfigurationFileFormat
        """
        if file_format is None:
            raise ValueError("Invalid value for `file_format`, must not be `None`")

        self._file_format = file_format
