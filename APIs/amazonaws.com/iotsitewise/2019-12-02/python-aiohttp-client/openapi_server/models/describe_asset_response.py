# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_asset_response_asset_status import DescribeAssetResponseAssetStatus
from openapi_server import util


class DescribeAssetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, asset_arn: str=None, asset_name: str=None, asset_model_id: str=None, asset_properties: List=None, asset_hierarchies: List=None, asset_composite_models: List=None, asset_creation_date: datetime=None, asset_last_update_date: datetime=None, asset_status: DescribeAssetResponseAssetStatus=None, asset_description: str=None):
        """DescribeAssetResponse - a model defined in OpenAPI

        :param asset_id: The asset_id of this DescribeAssetResponse.
        :param asset_arn: The asset_arn of this DescribeAssetResponse.
        :param asset_name: The asset_name of this DescribeAssetResponse.
        :param asset_model_id: The asset_model_id of this DescribeAssetResponse.
        :param asset_properties: The asset_properties of this DescribeAssetResponse.
        :param asset_hierarchies: The asset_hierarchies of this DescribeAssetResponse.
        :param asset_composite_models: The asset_composite_models of this DescribeAssetResponse.
        :param asset_creation_date: The asset_creation_date of this DescribeAssetResponse.
        :param asset_last_update_date: The asset_last_update_date of this DescribeAssetResponse.
        :param asset_status: The asset_status of this DescribeAssetResponse.
        :param asset_description: The asset_description of this DescribeAssetResponse.
        """
        self.openapi_types = {
            'asset_id': str,
            'asset_arn': str,
            'asset_name': str,
            'asset_model_id': str,
            'asset_properties': List,
            'asset_hierarchies': List,
            'asset_composite_models': List,
            'asset_creation_date': datetime,
            'asset_last_update_date': datetime,
            'asset_status': DescribeAssetResponseAssetStatus,
            'asset_description': str
        }

        self.attribute_map = {
            'asset_id': 'assetId',
            'asset_arn': 'assetArn',
            'asset_name': 'assetName',
            'asset_model_id': 'assetModelId',
            'asset_properties': 'assetProperties',
            'asset_hierarchies': 'assetHierarchies',
            'asset_composite_models': 'assetCompositeModels',
            'asset_creation_date': 'assetCreationDate',
            'asset_last_update_date': 'assetLastUpdateDate',
            'asset_status': 'assetStatus',
            'asset_description': 'assetDescription'
        }

        self._asset_id = asset_id
        self._asset_arn = asset_arn
        self._asset_name = asset_name
        self._asset_model_id = asset_model_id
        self._asset_properties = asset_properties
        self._asset_hierarchies = asset_hierarchies
        self._asset_composite_models = asset_composite_models
        self._asset_creation_date = asset_creation_date
        self._asset_last_update_date = asset_last_update_date
        self._asset_status = asset_status
        self._asset_description = asset_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAssetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAssetResponse of this DescribeAssetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this DescribeAssetResponse.


        :return: The asset_id of this DescribeAssetResponse.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this DescribeAssetResponse.


        :param asset_id: The asset_id of this DescribeAssetResponse.
        :type asset_id: str
        """
        if asset_id is None:
            raise ValueError("Invalid value for `asset_id`, must not be `None`")

        self._asset_id = asset_id

    @property
    def asset_arn(self):
        """Gets the asset_arn of this DescribeAssetResponse.


        :return: The asset_arn of this DescribeAssetResponse.
        :rtype: str
        """
        return self._asset_arn

    @asset_arn.setter
    def asset_arn(self, asset_arn):
        """Sets the asset_arn of this DescribeAssetResponse.


        :param asset_arn: The asset_arn of this DescribeAssetResponse.
        :type asset_arn: str
        """
        if asset_arn is None:
            raise ValueError("Invalid value for `asset_arn`, must not be `None`")

        self._asset_arn = asset_arn

    @property
    def asset_name(self):
        """Gets the asset_name of this DescribeAssetResponse.


        :return: The asset_name of this DescribeAssetResponse.
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this DescribeAssetResponse.


        :param asset_name: The asset_name of this DescribeAssetResponse.
        :type asset_name: str
        """
        if asset_name is None:
            raise ValueError("Invalid value for `asset_name`, must not be `None`")

        self._asset_name = asset_name

    @property
    def asset_model_id(self):
        """Gets the asset_model_id of this DescribeAssetResponse.


        :return: The asset_model_id of this DescribeAssetResponse.
        :rtype: str
        """
        return self._asset_model_id

    @asset_model_id.setter
    def asset_model_id(self, asset_model_id):
        """Sets the asset_model_id of this DescribeAssetResponse.


        :param asset_model_id: The asset_model_id of this DescribeAssetResponse.
        :type asset_model_id: str
        """
        if asset_model_id is None:
            raise ValueError("Invalid value for `asset_model_id`, must not be `None`")

        self._asset_model_id = asset_model_id

    @property
    def asset_properties(self):
        """Gets the asset_properties of this DescribeAssetResponse.


        :return: The asset_properties of this DescribeAssetResponse.
        :rtype: List
        """
        return self._asset_properties

    @asset_properties.setter
    def asset_properties(self, asset_properties):
        """Sets the asset_properties of this DescribeAssetResponse.


        :param asset_properties: The asset_properties of this DescribeAssetResponse.
        :type asset_properties: List
        """
        if asset_properties is None:
            raise ValueError("Invalid value for `asset_properties`, must not be `None`")

        self._asset_properties = asset_properties

    @property
    def asset_hierarchies(self):
        """Gets the asset_hierarchies of this DescribeAssetResponse.


        :return: The asset_hierarchies of this DescribeAssetResponse.
        :rtype: List
        """
        return self._asset_hierarchies

    @asset_hierarchies.setter
    def asset_hierarchies(self, asset_hierarchies):
        """Sets the asset_hierarchies of this DescribeAssetResponse.


        :param asset_hierarchies: The asset_hierarchies of this DescribeAssetResponse.
        :type asset_hierarchies: List
        """
        if asset_hierarchies is None:
            raise ValueError("Invalid value for `asset_hierarchies`, must not be `None`")

        self._asset_hierarchies = asset_hierarchies

    @property
    def asset_composite_models(self):
        """Gets the asset_composite_models of this DescribeAssetResponse.


        :return: The asset_composite_models of this DescribeAssetResponse.
        :rtype: List
        """
        return self._asset_composite_models

    @asset_composite_models.setter
    def asset_composite_models(self, asset_composite_models):
        """Sets the asset_composite_models of this DescribeAssetResponse.


        :param asset_composite_models: The asset_composite_models of this DescribeAssetResponse.
        :type asset_composite_models: List
        """

        self._asset_composite_models = asset_composite_models

    @property
    def asset_creation_date(self):
        """Gets the asset_creation_date of this DescribeAssetResponse.


        :return: The asset_creation_date of this DescribeAssetResponse.
        :rtype: datetime
        """
        return self._asset_creation_date

    @asset_creation_date.setter
    def asset_creation_date(self, asset_creation_date):
        """Sets the asset_creation_date of this DescribeAssetResponse.


        :param asset_creation_date: The asset_creation_date of this DescribeAssetResponse.
        :type asset_creation_date: datetime
        """
        if asset_creation_date is None:
            raise ValueError("Invalid value for `asset_creation_date`, must not be `None`")

        self._asset_creation_date = asset_creation_date

    @property
    def asset_last_update_date(self):
        """Gets the asset_last_update_date of this DescribeAssetResponse.


        :return: The asset_last_update_date of this DescribeAssetResponse.
        :rtype: datetime
        """
        return self._asset_last_update_date

    @asset_last_update_date.setter
    def asset_last_update_date(self, asset_last_update_date):
        """Sets the asset_last_update_date of this DescribeAssetResponse.


        :param asset_last_update_date: The asset_last_update_date of this DescribeAssetResponse.
        :type asset_last_update_date: datetime
        """
        if asset_last_update_date is None:
            raise ValueError("Invalid value for `asset_last_update_date`, must not be `None`")

        self._asset_last_update_date = asset_last_update_date

    @property
    def asset_status(self):
        """Gets the asset_status of this DescribeAssetResponse.


        :return: The asset_status of this DescribeAssetResponse.
        :rtype: DescribeAssetResponseAssetStatus
        """
        return self._asset_status

    @asset_status.setter
    def asset_status(self, asset_status):
        """Sets the asset_status of this DescribeAssetResponse.


        :param asset_status: The asset_status of this DescribeAssetResponse.
        :type asset_status: DescribeAssetResponseAssetStatus
        """
        if asset_status is None:
            raise ValueError("Invalid value for `asset_status`, must not be `None`")

        self._asset_status = asset_status

    @property
    def asset_description(self):
        """Gets the asset_description of this DescribeAssetResponse.


        :return: The asset_description of this DescribeAssetResponse.
        :rtype: str
        """
        return self._asset_description

    @asset_description.setter
    def asset_description(self, asset_description):
        """Sets the asset_description of this DescribeAssetResponse.


        :param asset_description: The asset_description of this DescribeAssetResponse.
        :type asset_description: str
        """

        self._asset_description = asset_description
