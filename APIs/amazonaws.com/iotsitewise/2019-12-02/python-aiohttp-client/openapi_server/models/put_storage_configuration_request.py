# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_storage_configuration_request_multi_layer_storage import PutStorageConfigurationRequestMultiLayerStorage
from openapi_server.models.put_storage_configuration_request_retention_period import PutStorageConfigurationRequestRetentionPeriod
from openapi_server import util


class PutStorageConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_type: str=None, multi_layer_storage: PutStorageConfigurationRequestMultiLayerStorage=None, disassociated_data_storage: str=None, retention_period: PutStorageConfigurationRequestRetentionPeriod=None):
        """PutStorageConfigurationRequest - a model defined in OpenAPI

        :param storage_type: The storage_type of this PutStorageConfigurationRequest.
        :param multi_layer_storage: The multi_layer_storage of this PutStorageConfigurationRequest.
        :param disassociated_data_storage: The disassociated_data_storage of this PutStorageConfigurationRequest.
        :param retention_period: The retention_period of this PutStorageConfigurationRequest.
        """
        self.openapi_types = {
            'storage_type': str,
            'multi_layer_storage': PutStorageConfigurationRequestMultiLayerStorage,
            'disassociated_data_storage': str,
            'retention_period': PutStorageConfigurationRequestRetentionPeriod
        }

        self.attribute_map = {
            'storage_type': 'storageType',
            'multi_layer_storage': 'multiLayerStorage',
            'disassociated_data_storage': 'disassociatedDataStorage',
            'retention_period': 'retentionPeriod'
        }

        self._storage_type = storage_type
        self._multi_layer_storage = multi_layer_storage
        self._disassociated_data_storage = disassociated_data_storage
        self._retention_period = retention_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutStorageConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutStorageConfiguration_request of this PutStorageConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_type(self):
        """Gets the storage_type of this PutStorageConfigurationRequest.

        <p>The storage tier that you specified for your data. The <code>storageType</code> parameter can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.</p> </li> </ul>

        :return: The storage_type of this PutStorageConfigurationRequest.
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this PutStorageConfigurationRequest.

        <p>The storage tier that you specified for your data. The <code>storageType</code> parameter can be one of the following values:</p> <ul> <li> <p> <code>SITEWISE_DEFAULT_STORAGE</code> – IoT SiteWise saves your data into the hot tier. The hot tier is a service-managed database.</p> </li> <li> <p> <code>MULTI_LAYER_STORAGE</code> – IoT SiteWise saves your data in both the cold tier and the hot tier. The cold tier is a customer-managed Amazon S3 bucket.</p> </li> </ul>

        :param storage_type: The storage_type of this PutStorageConfigurationRequest.
        :type storage_type: str
        """
        allowed_values = ["SITEWISE_DEFAULT_STORAGE", "MULTI_LAYER_STORAGE"]  # noqa: E501
        if storage_type not in allowed_values:
            raise ValueError(
                "Invalid value for `storage_type` ({0}), must be one of {1}"
                .format(storage_type, allowed_values)
            )

        self._storage_type = storage_type

    @property
    def multi_layer_storage(self):
        """Gets the multi_layer_storage of this PutStorageConfigurationRequest.


        :return: The multi_layer_storage of this PutStorageConfigurationRequest.
        :rtype: PutStorageConfigurationRequestMultiLayerStorage
        """
        return self._multi_layer_storage

    @multi_layer_storage.setter
    def multi_layer_storage(self, multi_layer_storage):
        """Sets the multi_layer_storage of this PutStorageConfigurationRequest.


        :param multi_layer_storage: The multi_layer_storage of this PutStorageConfigurationRequest.
        :type multi_layer_storage: PutStorageConfigurationRequestMultiLayerStorage
        """

        self._multi_layer_storage = multi_layer_storage

    @property
    def disassociated_data_storage(self):
        """Gets the disassociated_data_storage of this PutStorageConfigurationRequest.

        <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The <code>disassociatedDataStorage</code> can be one of the following values:</p> <ul> <li> <p> <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p> <important> <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p> </important> </li> <li> <p> <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html\">Data streams</a> in the <i>IoT SiteWise User Guide</i>.</p>

        :return: The disassociated_data_storage of this PutStorageConfigurationRequest.
        :rtype: str
        """
        return self._disassociated_data_storage

    @disassociated_data_storage.setter
    def disassociated_data_storage(self, disassociated_data_storage):
        """Sets the disassociated_data_storage of this PutStorageConfigurationRequest.

        <p>Contains the storage configuration for time series (data streams) that aren't associated with asset properties. The <code>disassociatedDataStorage</code> can be one of the following values:</p> <ul> <li> <p> <code>ENABLED</code> – IoT SiteWise accepts time series that aren't associated with asset properties.</p> <important> <p>After the <code>disassociatedDataStorage</code> is enabled, you can't disable it.</p> </important> </li> <li> <p> <code>DISABLED</code> – IoT SiteWise doesn't accept time series (data streams) that aren't associated with asset properties.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html\">Data streams</a> in the <i>IoT SiteWise User Guide</i>.</p>

        :param disassociated_data_storage: The disassociated_data_storage of this PutStorageConfigurationRequest.
        :type disassociated_data_storage: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if disassociated_data_storage not in allowed_values:
            raise ValueError(
                "Invalid value for `disassociated_data_storage` ({0}), must be one of {1}"
                .format(disassociated_data_storage, allowed_values)
            )

        self._disassociated_data_storage = disassociated_data_storage

    @property
    def retention_period(self):
        """Gets the retention_period of this PutStorageConfigurationRequest.


        :return: The retention_period of this PutStorageConfigurationRequest.
        :rtype: PutStorageConfigurationRequestRetentionPeriod
        """
        return self._retention_period

    @retention_period.setter
    def retention_period(self, retention_period):
        """Sets the retention_period of this PutStorageConfigurationRequest.


        :param retention_period: The retention_period of this PutStorageConfigurationRequest.
        :type retention_period: PutStorageConfigurationRequestRetentionPeriod
        """

        self._retention_period = retention_period
