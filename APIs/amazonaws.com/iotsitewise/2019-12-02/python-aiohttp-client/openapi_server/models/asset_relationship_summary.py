# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_relationship_summary_hierarchy_info import AssetRelationshipSummaryHierarchyInfo
from openapi_server.models.asset_relationship_type import AssetRelationshipType
from openapi_server import util


class AssetRelationshipSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hierarchy_info: AssetRelationshipSummaryHierarchyInfo=None, relationship_type: AssetRelationshipType=None):
        """AssetRelationshipSummary - a model defined in OpenAPI

        :param hierarchy_info: The hierarchy_info of this AssetRelationshipSummary.
        :param relationship_type: The relationship_type of this AssetRelationshipSummary.
        """
        self.openapi_types = {
            'hierarchy_info': AssetRelationshipSummaryHierarchyInfo,
            'relationship_type': AssetRelationshipType
        }

        self.attribute_map = {
            'hierarchy_info': 'hierarchyInfo',
            'relationship_type': 'relationshipType'
        }

        self._hierarchy_info = hierarchy_info
        self._relationship_type = relationship_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetRelationshipSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetRelationshipSummary of this AssetRelationshipSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hierarchy_info(self):
        """Gets the hierarchy_info of this AssetRelationshipSummary.


        :return: The hierarchy_info of this AssetRelationshipSummary.
        :rtype: AssetRelationshipSummaryHierarchyInfo
        """
        return self._hierarchy_info

    @hierarchy_info.setter
    def hierarchy_info(self, hierarchy_info):
        """Sets the hierarchy_info of this AssetRelationshipSummary.


        :param hierarchy_info: The hierarchy_info of this AssetRelationshipSummary.
        :type hierarchy_info: AssetRelationshipSummaryHierarchyInfo
        """

        self._hierarchy_info = hierarchy_info

    @property
    def relationship_type(self):
        """Gets the relationship_type of this AssetRelationshipSummary.


        :return: The relationship_type of this AssetRelationshipSummary.
        :rtype: AssetRelationshipType
        """
        return self._relationship_type

    @relationship_type.setter
    def relationship_type(self, relationship_type):
        """Sets the relationship_type of this AssetRelationshipSummary.


        :param relationship_type: The relationship_type of this AssetRelationshipSummary.
        :type relationship_type: AssetRelationshipType
        """
        if relationship_type is None:
            raise ValueError("Invalid value for `relationship_type`, must not be `None`")

        self._relationship_type = relationship_type
