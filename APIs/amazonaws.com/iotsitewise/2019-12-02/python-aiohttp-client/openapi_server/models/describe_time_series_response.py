# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_data_type import PropertyDataType
from openapi_server import util


class DescribeTimeSeriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, property_id: str=None, alias: str=None, time_series_id: str=None, data_type: PropertyDataType=None, data_type_spec: str=None, time_series_creation_date: datetime=None, time_series_last_update_date: datetime=None, time_series_arn: str=None):
        """DescribeTimeSeriesResponse - a model defined in OpenAPI

        :param asset_id: The asset_id of this DescribeTimeSeriesResponse.
        :param property_id: The property_id of this DescribeTimeSeriesResponse.
        :param alias: The alias of this DescribeTimeSeriesResponse.
        :param time_series_id: The time_series_id of this DescribeTimeSeriesResponse.
        :param data_type: The data_type of this DescribeTimeSeriesResponse.
        :param data_type_spec: The data_type_spec of this DescribeTimeSeriesResponse.
        :param time_series_creation_date: The time_series_creation_date of this DescribeTimeSeriesResponse.
        :param time_series_last_update_date: The time_series_last_update_date of this DescribeTimeSeriesResponse.
        :param time_series_arn: The time_series_arn of this DescribeTimeSeriesResponse.
        """
        self.openapi_types = {
            'asset_id': str,
            'property_id': str,
            'alias': str,
            'time_series_id': str,
            'data_type': PropertyDataType,
            'data_type_spec': str,
            'time_series_creation_date': datetime,
            'time_series_last_update_date': datetime,
            'time_series_arn': str
        }

        self.attribute_map = {
            'asset_id': 'assetId',
            'property_id': 'propertyId',
            'alias': 'alias',
            'time_series_id': 'timeSeriesId',
            'data_type': 'dataType',
            'data_type_spec': 'dataTypeSpec',
            'time_series_creation_date': 'timeSeriesCreationDate',
            'time_series_last_update_date': 'timeSeriesLastUpdateDate',
            'time_series_arn': 'timeSeriesArn'
        }

        self._asset_id = asset_id
        self._property_id = property_id
        self._alias = alias
        self._time_series_id = time_series_id
        self._data_type = data_type
        self._data_type_spec = data_type_spec
        self._time_series_creation_date = time_series_creation_date
        self._time_series_last_update_date = time_series_last_update_date
        self._time_series_arn = time_series_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTimeSeriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTimeSeriesResponse of this DescribeTimeSeriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this DescribeTimeSeriesResponse.


        :return: The asset_id of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this DescribeTimeSeriesResponse.


        :param asset_id: The asset_id of this DescribeTimeSeriesResponse.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def property_id(self):
        """Gets the property_id of this DescribeTimeSeriesResponse.


        :return: The property_id of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this DescribeTimeSeriesResponse.


        :param property_id: The property_id of this DescribeTimeSeriesResponse.
        :type property_id: str
        """

        self._property_id = property_id

    @property
    def alias(self):
        """Gets the alias of this DescribeTimeSeriesResponse.


        :return: The alias of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this DescribeTimeSeriesResponse.


        :param alias: The alias of this DescribeTimeSeriesResponse.
        :type alias: str
        """

        self._alias = alias

    @property
    def time_series_id(self):
        """Gets the time_series_id of this DescribeTimeSeriesResponse.


        :return: The time_series_id of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._time_series_id

    @time_series_id.setter
    def time_series_id(self, time_series_id):
        """Sets the time_series_id of this DescribeTimeSeriesResponse.


        :param time_series_id: The time_series_id of this DescribeTimeSeriesResponse.
        :type time_series_id: str
        """
        if time_series_id is None:
            raise ValueError("Invalid value for `time_series_id`, must not be `None`")

        self._time_series_id = time_series_id

    @property
    def data_type(self):
        """Gets the data_type of this DescribeTimeSeriesResponse.


        :return: The data_type of this DescribeTimeSeriesResponse.
        :rtype: PropertyDataType
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this DescribeTimeSeriesResponse.


        :param data_type: The data_type of this DescribeTimeSeriesResponse.
        :type data_type: PropertyDataType
        """
        if data_type is None:
            raise ValueError("Invalid value for `data_type`, must not be `None`")

        self._data_type = data_type

    @property
    def data_type_spec(self):
        """Gets the data_type_spec of this DescribeTimeSeriesResponse.


        :return: The data_type_spec of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._data_type_spec

    @data_type_spec.setter
    def data_type_spec(self, data_type_spec):
        """Sets the data_type_spec of this DescribeTimeSeriesResponse.


        :param data_type_spec: The data_type_spec of this DescribeTimeSeriesResponse.
        :type data_type_spec: str
        """

        self._data_type_spec = data_type_spec

    @property
    def time_series_creation_date(self):
        """Gets the time_series_creation_date of this DescribeTimeSeriesResponse.


        :return: The time_series_creation_date of this DescribeTimeSeriesResponse.
        :rtype: datetime
        """
        return self._time_series_creation_date

    @time_series_creation_date.setter
    def time_series_creation_date(self, time_series_creation_date):
        """Sets the time_series_creation_date of this DescribeTimeSeriesResponse.


        :param time_series_creation_date: The time_series_creation_date of this DescribeTimeSeriesResponse.
        :type time_series_creation_date: datetime
        """
        if time_series_creation_date is None:
            raise ValueError("Invalid value for `time_series_creation_date`, must not be `None`")

        self._time_series_creation_date = time_series_creation_date

    @property
    def time_series_last_update_date(self):
        """Gets the time_series_last_update_date of this DescribeTimeSeriesResponse.


        :return: The time_series_last_update_date of this DescribeTimeSeriesResponse.
        :rtype: datetime
        """
        return self._time_series_last_update_date

    @time_series_last_update_date.setter
    def time_series_last_update_date(self, time_series_last_update_date):
        """Sets the time_series_last_update_date of this DescribeTimeSeriesResponse.


        :param time_series_last_update_date: The time_series_last_update_date of this DescribeTimeSeriesResponse.
        :type time_series_last_update_date: datetime
        """
        if time_series_last_update_date is None:
            raise ValueError("Invalid value for `time_series_last_update_date`, must not be `None`")

        self._time_series_last_update_date = time_series_last_update_date

    @property
    def time_series_arn(self):
        """Gets the time_series_arn of this DescribeTimeSeriesResponse.


        :return: The time_series_arn of this DescribeTimeSeriesResponse.
        :rtype: str
        """
        return self._time_series_arn

    @time_series_arn.setter
    def time_series_arn(self, time_series_arn):
        """Sets the time_series_arn of this DescribeTimeSeriesResponse.


        :param time_series_arn: The time_series_arn of this DescribeTimeSeriesResponse.
        :type time_series_arn: str
        """
        if time_series_arn is None:
            raise ValueError("Invalid value for `time_series_arn`, must not be `None`")

        self._time_series_arn = time_series_arn
