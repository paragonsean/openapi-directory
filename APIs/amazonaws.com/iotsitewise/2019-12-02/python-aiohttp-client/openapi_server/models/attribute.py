# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_value: str=None):
        """Attribute - a model defined in OpenAPI

        :param default_value: The default_value of this Attribute.
        """
        self.openapi_types = {
            'default_value': str
        }

        self.attribute_map = {
            'default_value': 'defaultValue'
        }

        self._default_value = default_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attribute of this Attribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_value(self):
        """Gets the default_value of this Attribute.


        :return: The default_value of this Attribute.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this Attribute.


        :param default_value: The default_value of this Attribute.
        :type default_value: str
        """

        self._default_value = default_value
