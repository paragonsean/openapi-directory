# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_portal_request_alarms import CreatePortalRequestAlarms
from openapi_server.models.create_portal_request_portal_logo_image_file import CreatePortalRequestPortalLogoImageFile
import re
from openapi_server import util


class CreatePortalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portal_name: str=None, portal_description: str=None, portal_contact_email: str=None, client_token: str=None, portal_logo_image_file: CreatePortalRequestPortalLogoImageFile=None, role_arn: str=None, tags: Dict[str, str]=None, portal_auth_mode: str=None, notification_sender_email: str=None, alarms: CreatePortalRequestAlarms=None):
        """CreatePortalRequest - a model defined in OpenAPI

        :param portal_name: The portal_name of this CreatePortalRequest.
        :param portal_description: The portal_description of this CreatePortalRequest.
        :param portal_contact_email: The portal_contact_email of this CreatePortalRequest.
        :param client_token: The client_token of this CreatePortalRequest.
        :param portal_logo_image_file: The portal_logo_image_file of this CreatePortalRequest.
        :param role_arn: The role_arn of this CreatePortalRequest.
        :param tags: The tags of this CreatePortalRequest.
        :param portal_auth_mode: The portal_auth_mode of this CreatePortalRequest.
        :param notification_sender_email: The notification_sender_email of this CreatePortalRequest.
        :param alarms: The alarms of this CreatePortalRequest.
        """
        self.openapi_types = {
            'portal_name': str,
            'portal_description': str,
            'portal_contact_email': str,
            'client_token': str,
            'portal_logo_image_file': CreatePortalRequestPortalLogoImageFile,
            'role_arn': str,
            'tags': Dict[str, str],
            'portal_auth_mode': str,
            'notification_sender_email': str,
            'alarms': CreatePortalRequestAlarms
        }

        self.attribute_map = {
            'portal_name': 'portalName',
            'portal_description': 'portalDescription',
            'portal_contact_email': 'portalContactEmail',
            'client_token': 'clientToken',
            'portal_logo_image_file': 'portalLogoImageFile',
            'role_arn': 'roleArn',
            'tags': 'tags',
            'portal_auth_mode': 'portalAuthMode',
            'notification_sender_email': 'notificationSenderEmail',
            'alarms': 'alarms'
        }

        self._portal_name = portal_name
        self._portal_description = portal_description
        self._portal_contact_email = portal_contact_email
        self._client_token = client_token
        self._portal_logo_image_file = portal_logo_image_file
        self._role_arn = role_arn
        self._tags = tags
        self._portal_auth_mode = portal_auth_mode
        self._notification_sender_email = notification_sender_email
        self._alarms = alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePortalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePortal_request of this CreatePortalRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portal_name(self):
        """Gets the portal_name of this CreatePortalRequest.

        A friendly name for the portal.

        :return: The portal_name of this CreatePortalRequest.
        :rtype: str
        """
        return self._portal_name

    @portal_name.setter
    def portal_name(self, portal_name):
        """Sets the portal_name of this CreatePortalRequest.

        A friendly name for the portal.

        :param portal_name: The portal_name of this CreatePortalRequest.
        :type portal_name: str
        """
        if portal_name is None:
            raise ValueError("Invalid value for `portal_name`, must not be `None`")
        if portal_name is not None and len(portal_name) > 256:
            raise ValueError("Invalid value for `portal_name`, length must be less than or equal to `256`")
        if portal_name is not None and len(portal_name) < 1:
            raise ValueError("Invalid value for `portal_name`, length must be greater than or equal to `1`")
        if portal_name is not None and not re.search(r'[^\u0000-\u001F\u007F]+', portal_name):
            raise ValueError("Invalid value for `portal_name`, must be a follow pattern or equal to `/[^\u0000-\u001F\u007F]+/`")

        self._portal_name = portal_name

    @property
    def portal_description(self):
        """Gets the portal_description of this CreatePortalRequest.

        A description for the portal.

        :return: The portal_description of this CreatePortalRequest.
        :rtype: str
        """
        return self._portal_description

    @portal_description.setter
    def portal_description(self, portal_description):
        """Sets the portal_description of this CreatePortalRequest.

        A description for the portal.

        :param portal_description: The portal_description of this CreatePortalRequest.
        :type portal_description: str
        """
        if portal_description is not None and len(portal_description) > 2048:
            raise ValueError("Invalid value for `portal_description`, length must be less than or equal to `2048`")
        if portal_description is not None and len(portal_description) < 1:
            raise ValueError("Invalid value for `portal_description`, length must be greater than or equal to `1`")
        if portal_description is not None and not re.search(r'[^\u0000-\u001F\u007F]+', portal_description):
            raise ValueError("Invalid value for `portal_description`, must be a follow pattern or equal to `/[^\u0000-\u001F\u007F]+/`")

        self._portal_description = portal_description

    @property
    def portal_contact_email(self):
        """Gets the portal_contact_email of this CreatePortalRequest.

        The Amazon Web Services administrator's contact email address.

        :return: The portal_contact_email of this CreatePortalRequest.
        :rtype: str
        """
        return self._portal_contact_email

    @portal_contact_email.setter
    def portal_contact_email(self, portal_contact_email):
        """Sets the portal_contact_email of this CreatePortalRequest.

        The Amazon Web Services administrator's contact email address.

        :param portal_contact_email: The portal_contact_email of this CreatePortalRequest.
        :type portal_contact_email: str
        """
        if portal_contact_email is None:
            raise ValueError("Invalid value for `portal_contact_email`, must not be `None`")
        if portal_contact_email is not None and len(portal_contact_email) > 255:
            raise ValueError("Invalid value for `portal_contact_email`, length must be less than or equal to `255`")
        if portal_contact_email is not None and len(portal_contact_email) < 1:
            raise ValueError("Invalid value for `portal_contact_email`, length must be greater than or equal to `1`")
        if portal_contact_email is not None and not re.search(r'[^@]+@[^@]+', portal_contact_email):
            raise ValueError("Invalid value for `portal_contact_email`, must be a follow pattern or equal to `/[^@]+@[^@]+/`")

        self._portal_contact_email = portal_contact_email

    @property
    def client_token(self):
        """Gets the client_token of this CreatePortalRequest.

        A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.

        :return: The client_token of this CreatePortalRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreatePortalRequest.

        A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.

        :param client_token: The client_token of this CreatePortalRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 64:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `64`")
        if client_token is not None and len(client_token) < 36:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `36`")
        if client_token is not None and not re.search(r'\S{36,64}', client_token):
            raise ValueError("Invalid value for `client_token`, must be a follow pattern or equal to `/\S{36,64}/`")

        self._client_token = client_token

    @property
    def portal_logo_image_file(self):
        """Gets the portal_logo_image_file of this CreatePortalRequest.


        :return: The portal_logo_image_file of this CreatePortalRequest.
        :rtype: CreatePortalRequestPortalLogoImageFile
        """
        return self._portal_logo_image_file

    @portal_logo_image_file.setter
    def portal_logo_image_file(self, portal_logo_image_file):
        """Sets the portal_logo_image_file of this CreatePortalRequest.


        :param portal_logo_image_file: The portal_logo_image_file of this CreatePortalRequest.
        :type portal_logo_image_file: CreatePortalRequestPortalLogoImageFile
        """

        self._portal_logo_image_file = portal_logo_image_file

    @property
    def role_arn(self):
        """Gets the role_arn of this CreatePortalRequest.

        The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html\">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.

        :return: The role_arn of this CreatePortalRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreatePortalRequest.

        The <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">ARN</a> of a service role that allows the portal's users to access your IoT SiteWise resources on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html\">Using service roles for IoT SiteWise Monitor</a> in the <i>IoT SiteWise User Guide</i>.

        :param role_arn: The role_arn of this CreatePortalRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")
        if role_arn is not None and len(role_arn) > 1600:
            raise ValueError("Invalid value for `role_arn`, length must be less than or equal to `1600`")
        if role_arn is not None and len(role_arn) < 1:
            raise ValueError("Invalid value for `role_arn`, length must be greater than or equal to `1`")
        if role_arn is not None and not re.search(r'.*', role_arn):
            raise ValueError("Invalid value for `role_arn`, must be a follow pattern or equal to `/.*/`")

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreatePortalRequest.

        A list of key-value pairs that contain metadata for the portal. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html\">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.

        :return: The tags of this CreatePortalRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreatePortalRequest.

        A list of key-value pairs that contain metadata for the portal. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html\">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.

        :param tags: The tags of this CreatePortalRequest.
        :type tags: Dict[str, str]
        """
        if tags is not None and len(tags) > 50:
            raise ValueError("Invalid value for `tags`, number of items must be less than or equal to `50`")
        if tags is not None and len(tags) < 1:
            raise ValueError("Invalid value for `tags`, number of items must be greater than or equal to `1`")

        self._tags = tags

    @property
    def portal_auth_mode(self):
        """Gets the portal_auth_mode of this CreatePortalRequest.

        <p>The service to use to authenticate users to the portal. Choose from the following options:</p> <ul> <li> <p> <code>SSO</code> – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso\">Enabling IAM Identity Center</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li> <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions.</p> </li> </ul> <p>You can't change this value after you create a portal.</p> <p>Default: <code>SSO</code> </p>

        :return: The portal_auth_mode of this CreatePortalRequest.
        :rtype: str
        """
        return self._portal_auth_mode

    @portal_auth_mode.setter
    def portal_auth_mode(self, portal_auth_mode):
        """Sets the portal_auth_mode of this CreatePortalRequest.

        <p>The service to use to authenticate users to the portal. Choose from the following options:</p> <ul> <li> <p> <code>SSO</code> – The portal uses IAM Identity Center (successor to Single Sign-On) to authenticate users and manage user permissions. Before you can create a portal that uses IAM Identity Center, you must enable IAM Identity Center. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso\">Enabling IAM Identity Center</a> in the <i>IoT SiteWise User Guide</i>. This option is only available in Amazon Web Services Regions other than the China Regions.</p> </li> <li> <p> <code>IAM</code> – The portal uses Identity and Access Management to authenticate users and manage user permissions.</p> </li> </ul> <p>You can't change this value after you create a portal.</p> <p>Default: <code>SSO</code> </p>

        :param portal_auth_mode: The portal_auth_mode of this CreatePortalRequest.
        :type portal_auth_mode: str
        """
        allowed_values = ["IAM", "SSO"]  # noqa: E501
        if portal_auth_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `portal_auth_mode` ({0}), must be one of {1}"
                .format(portal_auth_mode, allowed_values)
            )

        self._portal_auth_mode = portal_auth_mode

    @property
    def notification_sender_email(self):
        """Gets the notification_sender_email of this CreatePortalRequest.

        <p>The email address that sends alarm notifications.</p> <important> <p>If you use the <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html\">IoT Events managed Lambda function</a> to manage your emails, you must <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html\">verify the sender email address in Amazon SES</a>.</p> </important>

        :return: The notification_sender_email of this CreatePortalRequest.
        :rtype: str
        """
        return self._notification_sender_email

    @notification_sender_email.setter
    def notification_sender_email(self, notification_sender_email):
        """Sets the notification_sender_email of this CreatePortalRequest.

        <p>The email address that sends alarm notifications.</p> <important> <p>If you use the <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html\">IoT Events managed Lambda function</a> to manage your emails, you must <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html\">verify the sender email address in Amazon SES</a>.</p> </important>

        :param notification_sender_email: The notification_sender_email of this CreatePortalRequest.
        :type notification_sender_email: str
        """
        if notification_sender_email is not None and len(notification_sender_email) > 255:
            raise ValueError("Invalid value for `notification_sender_email`, length must be less than or equal to `255`")
        if notification_sender_email is not None and len(notification_sender_email) < 1:
            raise ValueError("Invalid value for `notification_sender_email`, length must be greater than or equal to `1`")
        if notification_sender_email is not None and not re.search(r'[^@]+@[^@]+', notification_sender_email):
            raise ValueError("Invalid value for `notification_sender_email`, must be a follow pattern or equal to `/[^@]+@[^@]+/`")

        self._notification_sender_email = notification_sender_email

    @property
    def alarms(self):
        """Gets the alarms of this CreatePortalRequest.


        :return: The alarms of this CreatePortalRequest.
        :rtype: CreatePortalRequestAlarms
        """
        return self._alarms

    @alarms.setter
    def alarms(self, alarms):
        """Sets the alarms of this CreatePortalRequest.


        :param alarms: The alarms of this CreatePortalRequest.
        :type alarms: CreatePortalRequestAlarms
        """

        self._alarms = alarms
