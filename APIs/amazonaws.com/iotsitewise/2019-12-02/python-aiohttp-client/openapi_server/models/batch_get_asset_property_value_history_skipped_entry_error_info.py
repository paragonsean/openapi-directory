# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_get_asset_property_value_history_error_code import BatchGetAssetPropertyValueHistoryErrorCode
from openapi_server import util


class BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_code: BatchGetAssetPropertyValueHistoryErrorCode=None, error_timestamp: datetime=None):
        """BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo - a model defined in OpenAPI

        :param error_code: The error_code of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        :param error_timestamp: The error_timestamp of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        """
        self.openapi_types = {
            'error_code': BatchGetAssetPropertyValueHistoryErrorCode,
            'error_timestamp': datetime
        }

        self.attribute_map = {
            'error_code': 'errorCode',
            'error_timestamp': 'errorTimestamp'
        }

        self._error_code = error_code
        self._error_timestamp = error_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetAssetPropertyValueHistorySkippedEntry_errorInfo of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_code(self):
        """Gets the error_code of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.


        :return: The error_code of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        :rtype: BatchGetAssetPropertyValueHistoryErrorCode
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.


        :param error_code: The error_code of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        :type error_code: BatchGetAssetPropertyValueHistoryErrorCode
        """
        if error_code is None:
            raise ValueError("Invalid value for `error_code`, must not be `None`")

        self._error_code = error_code

    @property
    def error_timestamp(self):
        """Gets the error_timestamp of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.


        :return: The error_timestamp of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        :rtype: datetime
        """
        return self._error_timestamp

    @error_timestamp.setter
    def error_timestamp(self, error_timestamp):
        """Sets the error_timestamp of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.


        :param error_timestamp: The error_timestamp of this BatchGetAssetPropertyValueHistorySkippedEntryErrorInfo.
        :type error_timestamp: datetime
        """
        if error_timestamp is None:
            raise ValueError("Invalid value for `error_timestamp`, must not be `None`")

        self._error_timestamp = error_timestamp
