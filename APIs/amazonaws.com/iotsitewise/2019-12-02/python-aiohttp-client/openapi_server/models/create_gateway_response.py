# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateGatewayResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_id: str=None, gateway_arn: str=None):
        """CreateGatewayResponse - a model defined in OpenAPI

        :param gateway_id: The gateway_id of this CreateGatewayResponse.
        :param gateway_arn: The gateway_arn of this CreateGatewayResponse.
        """
        self.openapi_types = {
            'gateway_id': str,
            'gateway_arn': str
        }

        self.attribute_map = {
            'gateway_id': 'gatewayId',
            'gateway_arn': 'gatewayArn'
        }

        self._gateway_id = gateway_id
        self._gateway_arn = gateway_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGatewayResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGatewayResponse of this CreateGatewayResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_id(self):
        """Gets the gateway_id of this CreateGatewayResponse.


        :return: The gateway_id of this CreateGatewayResponse.
        :rtype: str
        """
        return self._gateway_id

    @gateway_id.setter
    def gateway_id(self, gateway_id):
        """Sets the gateway_id of this CreateGatewayResponse.


        :param gateway_id: The gateway_id of this CreateGatewayResponse.
        :type gateway_id: str
        """
        if gateway_id is None:
            raise ValueError("Invalid value for `gateway_id`, must not be `None`")

        self._gateway_id = gateway_id

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this CreateGatewayResponse.


        :return: The gateway_arn of this CreateGatewayResponse.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this CreateGatewayResponse.


        :param gateway_arn: The gateway_arn of this CreateGatewayResponse.
        :type gateway_arn: str
        """
        if gateway_arn is None:
            raise ValueError("Invalid value for `gateway_arn`, must not be `None`")

        self._gateway_arn = gateway_arn
