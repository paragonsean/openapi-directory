# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExpressionVariableValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_id: str=None, hierarchy_id: str=None):
        """ExpressionVariableValue - a model defined in OpenAPI

        :param property_id: The property_id of this ExpressionVariableValue.
        :param hierarchy_id: The hierarchy_id of this ExpressionVariableValue.
        """
        self.openapi_types = {
            'property_id': str,
            'hierarchy_id': str
        }

        self.attribute_map = {
            'property_id': 'propertyId',
            'hierarchy_id': 'hierarchyId'
        }

        self._property_id = property_id
        self._hierarchy_id = hierarchy_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpressionVariableValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpressionVariable_value of this ExpressionVariableValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_id(self):
        """Gets the property_id of this ExpressionVariableValue.


        :return: The property_id of this ExpressionVariableValue.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this ExpressionVariableValue.


        :param property_id: The property_id of this ExpressionVariableValue.
        :type property_id: str
        """
        if property_id is None:
            raise ValueError("Invalid value for `property_id`, must not be `None`")

        self._property_id = property_id

    @property
    def hierarchy_id(self):
        """Gets the hierarchy_id of this ExpressionVariableValue.


        :return: The hierarchy_id of this ExpressionVariableValue.
        :rtype: str
        """
        return self._hierarchy_id

    @hierarchy_id.setter
    def hierarchy_id(self, hierarchy_id):
        """Sets the hierarchy_id of this ExpressionVariableValue.


        :param hierarchy_id: The hierarchy_id of this ExpressionVariableValue.
        :type hierarchy_id: str
        """

        self._hierarchy_id = hierarchy_id
