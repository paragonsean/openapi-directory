# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_storage_configuration_request_multi_layer_storage_customer_managed_s3_storage import PutStorageConfigurationRequestMultiLayerStorageCustomerManagedS3Storage
from openapi_server import util


class DescribeStorageConfigurationResponseMultiLayerStorage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_managed_s3_storage: PutStorageConfigurationRequestMultiLayerStorageCustomerManagedS3Storage=None):
        """DescribeStorageConfigurationResponseMultiLayerStorage - a model defined in OpenAPI

        :param customer_managed_s3_storage: The customer_managed_s3_storage of this DescribeStorageConfigurationResponseMultiLayerStorage.
        """
        self.openapi_types = {
            'customer_managed_s3_storage': PutStorageConfigurationRequestMultiLayerStorageCustomerManagedS3Storage
        }

        self.attribute_map = {
            'customer_managed_s3_storage': 'customerManagedS3Storage'
        }

        self._customer_managed_s3_storage = customer_managed_s3_storage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStorageConfigurationResponseMultiLayerStorage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStorageConfigurationResponse_multiLayerStorage of this DescribeStorageConfigurationResponseMultiLayerStorage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_managed_s3_storage(self):
        """Gets the customer_managed_s3_storage of this DescribeStorageConfigurationResponseMultiLayerStorage.


        :return: The customer_managed_s3_storage of this DescribeStorageConfigurationResponseMultiLayerStorage.
        :rtype: PutStorageConfigurationRequestMultiLayerStorageCustomerManagedS3Storage
        """
        return self._customer_managed_s3_storage

    @customer_managed_s3_storage.setter
    def customer_managed_s3_storage(self, customer_managed_s3_storage):
        """Sets the customer_managed_s3_storage of this DescribeStorageConfigurationResponseMultiLayerStorage.


        :param customer_managed_s3_storage: The customer_managed_s3_storage of this DescribeStorageConfigurationResponseMultiLayerStorage.
        :type customer_managed_s3_storage: PutStorageConfigurationRequestMultiLayerStorageCustomerManagedS3Storage
        """
        if customer_managed_s3_storage is None:
            raise ValueError("Invalid value for `customer_managed_s3_storage`, must not be `None`")

        self._customer_managed_s3_storage = customer_managed_s3_storage
