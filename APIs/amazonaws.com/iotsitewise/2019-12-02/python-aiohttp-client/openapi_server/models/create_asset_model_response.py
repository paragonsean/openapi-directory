# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_asset_model_response_asset_model_status import CreateAssetModelResponseAssetModelStatus
from openapi_server import util


class CreateAssetModelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_model_id: str=None, asset_model_arn: str=None, asset_model_status: CreateAssetModelResponseAssetModelStatus=None):
        """CreateAssetModelResponse - a model defined in OpenAPI

        :param asset_model_id: The asset_model_id of this CreateAssetModelResponse.
        :param asset_model_arn: The asset_model_arn of this CreateAssetModelResponse.
        :param asset_model_status: The asset_model_status of this CreateAssetModelResponse.
        """
        self.openapi_types = {
            'asset_model_id': str,
            'asset_model_arn': str,
            'asset_model_status': CreateAssetModelResponseAssetModelStatus
        }

        self.attribute_map = {
            'asset_model_id': 'assetModelId',
            'asset_model_arn': 'assetModelArn',
            'asset_model_status': 'assetModelStatus'
        }

        self._asset_model_id = asset_model_id
        self._asset_model_arn = asset_model_arn
        self._asset_model_status = asset_model_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAssetModelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAssetModelResponse of this CreateAssetModelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_model_id(self):
        """Gets the asset_model_id of this CreateAssetModelResponse.


        :return: The asset_model_id of this CreateAssetModelResponse.
        :rtype: str
        """
        return self._asset_model_id

    @asset_model_id.setter
    def asset_model_id(self, asset_model_id):
        """Sets the asset_model_id of this CreateAssetModelResponse.


        :param asset_model_id: The asset_model_id of this CreateAssetModelResponse.
        :type asset_model_id: str
        """
        if asset_model_id is None:
            raise ValueError("Invalid value for `asset_model_id`, must not be `None`")

        self._asset_model_id = asset_model_id

    @property
    def asset_model_arn(self):
        """Gets the asset_model_arn of this CreateAssetModelResponse.


        :return: The asset_model_arn of this CreateAssetModelResponse.
        :rtype: str
        """
        return self._asset_model_arn

    @asset_model_arn.setter
    def asset_model_arn(self, asset_model_arn):
        """Sets the asset_model_arn of this CreateAssetModelResponse.


        :param asset_model_arn: The asset_model_arn of this CreateAssetModelResponse.
        :type asset_model_arn: str
        """
        if asset_model_arn is None:
            raise ValueError("Invalid value for `asset_model_arn`, must not be `None`")

        self._asset_model_arn = asset_model_arn

    @property
    def asset_model_status(self):
        """Gets the asset_model_status of this CreateAssetModelResponse.


        :return: The asset_model_status of this CreateAssetModelResponse.
        :rtype: CreateAssetModelResponseAssetModelStatus
        """
        return self._asset_model_status

    @asset_model_status.setter
    def asset_model_status(self, asset_model_status):
        """Sets the asset_model_status of this CreateAssetModelResponse.


        :param asset_model_status: The asset_model_status of this CreateAssetModelResponse.
        :type asset_model_status: CreateAssetModelResponseAssetModelStatus
        """
        if asset_model_status is None:
            raise ValueError("Invalid value for `asset_model_status`, must not be `None`")

        self._asset_model_status = asset_model_status
