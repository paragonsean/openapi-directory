# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_portal_response_portal_status import UpdatePortalResponsePortalStatus
from openapi_server import util


class UpdatePortalResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portal_status: UpdatePortalResponsePortalStatus=None):
        """UpdatePortalResponse - a model defined in OpenAPI

        :param portal_status: The portal_status of this UpdatePortalResponse.
        """
        self.openapi_types = {
            'portal_status': UpdatePortalResponsePortalStatus
        }

        self.attribute_map = {
            'portal_status': 'portalStatus'
        }

        self._portal_status = portal_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePortalResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePortalResponse of this UpdatePortalResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portal_status(self):
        """Gets the portal_status of this UpdatePortalResponse.


        :return: The portal_status of this UpdatePortalResponse.
        :rtype: UpdatePortalResponsePortalStatus
        """
        return self._portal_status

    @portal_status.setter
    def portal_status(self, portal_status):
        """Sets the portal_status of this UpdatePortalResponse.


        :param portal_status: The portal_status of this UpdatePortalResponse.
        :type portal_status: UpdatePortalResponsePortalStatus
        """
        if portal_status is None:
            raise ValueError("Invalid value for `portal_status`, must not be `None`")

        self._portal_status = portal_status
