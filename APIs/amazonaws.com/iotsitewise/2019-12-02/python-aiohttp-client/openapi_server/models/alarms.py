# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Alarms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alarm_role_arn: str=None, notification_lambda_arn: str=None):
        """Alarms - a model defined in OpenAPI

        :param alarm_role_arn: The alarm_role_arn of this Alarms.
        :param notification_lambda_arn: The notification_lambda_arn of this Alarms.
        """
        self.openapi_types = {
            'alarm_role_arn': str,
            'notification_lambda_arn': str
        }

        self.attribute_map = {
            'alarm_role_arn': 'alarmRoleArn',
            'notification_lambda_arn': 'notificationLambdaArn'
        }

        self._alarm_role_arn = alarm_role_arn
        self._notification_lambda_arn = notification_lambda_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Alarms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Alarms of this Alarms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alarm_role_arn(self):
        """Gets the alarm_role_arn of this Alarms.


        :return: The alarm_role_arn of this Alarms.
        :rtype: str
        """
        return self._alarm_role_arn

    @alarm_role_arn.setter
    def alarm_role_arn(self, alarm_role_arn):
        """Sets the alarm_role_arn of this Alarms.


        :param alarm_role_arn: The alarm_role_arn of this Alarms.
        :type alarm_role_arn: str
        """
        if alarm_role_arn is None:
            raise ValueError("Invalid value for `alarm_role_arn`, must not be `None`")

        self._alarm_role_arn = alarm_role_arn

    @property
    def notification_lambda_arn(self):
        """Gets the notification_lambda_arn of this Alarms.


        :return: The notification_lambda_arn of this Alarms.
        :rtype: str
        """
        return self._notification_lambda_arn

    @notification_lambda_arn.setter
    def notification_lambda_arn(self, notification_lambda_arn):
        """Sets the notification_lambda_arn of this Alarms.


        :param notification_lambda_arn: The notification_lambda_arn of this Alarms.
        :type notification_lambda_arn: str
        """

        self._notification_lambda_arn = notification_lambda_arn
