# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateGatewayRequestGatewayPlatformGreengrassV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, core_device_thing_name: str=None):
        """CreateGatewayRequestGatewayPlatformGreengrassV2 - a model defined in OpenAPI

        :param core_device_thing_name: The core_device_thing_name of this CreateGatewayRequestGatewayPlatformGreengrassV2.
        """
        self.openapi_types = {
            'core_device_thing_name': str
        }

        self.attribute_map = {
            'core_device_thing_name': 'coreDeviceThingName'
        }

        self._core_device_thing_name = core_device_thing_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateGatewayRequestGatewayPlatformGreengrassV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateGateway_request_gatewayPlatform_greengrassV2 of this CreateGatewayRequestGatewayPlatformGreengrassV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core_device_thing_name(self):
        """Gets the core_device_thing_name of this CreateGatewayRequestGatewayPlatformGreengrassV2.


        :return: The core_device_thing_name of this CreateGatewayRequestGatewayPlatformGreengrassV2.
        :rtype: str
        """
        return self._core_device_thing_name

    @core_device_thing_name.setter
    def core_device_thing_name(self, core_device_thing_name):
        """Sets the core_device_thing_name of this CreateGatewayRequestGatewayPlatformGreengrassV2.


        :param core_device_thing_name: The core_device_thing_name of this CreateGatewayRequestGatewayPlatformGreengrassV2.
        :type core_device_thing_name: str
        """
        if core_device_thing_name is None:
            raise ValueError("Invalid value for `core_device_thing_name`, must not be `None`")

        self._core_device_thing_name = core_device_thing_name
