# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_access_policy_response_access_policy_identity import DescribeAccessPolicyResponseAccessPolicyIdentity
from openapi_server.models.describe_access_policy_response_access_policy_resource import DescribeAccessPolicyResponseAccessPolicyResource
from openapi_server.models.permission import Permission
from openapi_server import util


class DescribeAccessPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_policy_id: str=None, access_policy_arn: str=None, access_policy_identity: DescribeAccessPolicyResponseAccessPolicyIdentity=None, access_policy_resource: DescribeAccessPolicyResponseAccessPolicyResource=None, access_policy_permission: Permission=None, access_policy_creation_date: datetime=None, access_policy_last_update_date: datetime=None):
        """DescribeAccessPolicyResponse - a model defined in OpenAPI

        :param access_policy_id: The access_policy_id of this DescribeAccessPolicyResponse.
        :param access_policy_arn: The access_policy_arn of this DescribeAccessPolicyResponse.
        :param access_policy_identity: The access_policy_identity of this DescribeAccessPolicyResponse.
        :param access_policy_resource: The access_policy_resource of this DescribeAccessPolicyResponse.
        :param access_policy_permission: The access_policy_permission of this DescribeAccessPolicyResponse.
        :param access_policy_creation_date: The access_policy_creation_date of this DescribeAccessPolicyResponse.
        :param access_policy_last_update_date: The access_policy_last_update_date of this DescribeAccessPolicyResponse.
        """
        self.openapi_types = {
            'access_policy_id': str,
            'access_policy_arn': str,
            'access_policy_identity': DescribeAccessPolicyResponseAccessPolicyIdentity,
            'access_policy_resource': DescribeAccessPolicyResponseAccessPolicyResource,
            'access_policy_permission': Permission,
            'access_policy_creation_date': datetime,
            'access_policy_last_update_date': datetime
        }

        self.attribute_map = {
            'access_policy_id': 'accessPolicyId',
            'access_policy_arn': 'accessPolicyArn',
            'access_policy_identity': 'accessPolicyIdentity',
            'access_policy_resource': 'accessPolicyResource',
            'access_policy_permission': 'accessPolicyPermission',
            'access_policy_creation_date': 'accessPolicyCreationDate',
            'access_policy_last_update_date': 'accessPolicyLastUpdateDate'
        }

        self._access_policy_id = access_policy_id
        self._access_policy_arn = access_policy_arn
        self._access_policy_identity = access_policy_identity
        self._access_policy_resource = access_policy_resource
        self._access_policy_permission = access_policy_permission
        self._access_policy_creation_date = access_policy_creation_date
        self._access_policy_last_update_date = access_policy_last_update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAccessPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAccessPolicyResponse of this DescribeAccessPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_policy_id(self):
        """Gets the access_policy_id of this DescribeAccessPolicyResponse.


        :return: The access_policy_id of this DescribeAccessPolicyResponse.
        :rtype: str
        """
        return self._access_policy_id

    @access_policy_id.setter
    def access_policy_id(self, access_policy_id):
        """Sets the access_policy_id of this DescribeAccessPolicyResponse.


        :param access_policy_id: The access_policy_id of this DescribeAccessPolicyResponse.
        :type access_policy_id: str
        """
        if access_policy_id is None:
            raise ValueError("Invalid value for `access_policy_id`, must not be `None`")

        self._access_policy_id = access_policy_id

    @property
    def access_policy_arn(self):
        """Gets the access_policy_arn of this DescribeAccessPolicyResponse.


        :return: The access_policy_arn of this DescribeAccessPolicyResponse.
        :rtype: str
        """
        return self._access_policy_arn

    @access_policy_arn.setter
    def access_policy_arn(self, access_policy_arn):
        """Sets the access_policy_arn of this DescribeAccessPolicyResponse.


        :param access_policy_arn: The access_policy_arn of this DescribeAccessPolicyResponse.
        :type access_policy_arn: str
        """
        if access_policy_arn is None:
            raise ValueError("Invalid value for `access_policy_arn`, must not be `None`")

        self._access_policy_arn = access_policy_arn

    @property
    def access_policy_identity(self):
        """Gets the access_policy_identity of this DescribeAccessPolicyResponse.


        :return: The access_policy_identity of this DescribeAccessPolicyResponse.
        :rtype: DescribeAccessPolicyResponseAccessPolicyIdentity
        """
        return self._access_policy_identity

    @access_policy_identity.setter
    def access_policy_identity(self, access_policy_identity):
        """Sets the access_policy_identity of this DescribeAccessPolicyResponse.


        :param access_policy_identity: The access_policy_identity of this DescribeAccessPolicyResponse.
        :type access_policy_identity: DescribeAccessPolicyResponseAccessPolicyIdentity
        """
        if access_policy_identity is None:
            raise ValueError("Invalid value for `access_policy_identity`, must not be `None`")

        self._access_policy_identity = access_policy_identity

    @property
    def access_policy_resource(self):
        """Gets the access_policy_resource of this DescribeAccessPolicyResponse.


        :return: The access_policy_resource of this DescribeAccessPolicyResponse.
        :rtype: DescribeAccessPolicyResponseAccessPolicyResource
        """
        return self._access_policy_resource

    @access_policy_resource.setter
    def access_policy_resource(self, access_policy_resource):
        """Sets the access_policy_resource of this DescribeAccessPolicyResponse.


        :param access_policy_resource: The access_policy_resource of this DescribeAccessPolicyResponse.
        :type access_policy_resource: DescribeAccessPolicyResponseAccessPolicyResource
        """
        if access_policy_resource is None:
            raise ValueError("Invalid value for `access_policy_resource`, must not be `None`")

        self._access_policy_resource = access_policy_resource

    @property
    def access_policy_permission(self):
        """Gets the access_policy_permission of this DescribeAccessPolicyResponse.


        :return: The access_policy_permission of this DescribeAccessPolicyResponse.
        :rtype: Permission
        """
        return self._access_policy_permission

    @access_policy_permission.setter
    def access_policy_permission(self, access_policy_permission):
        """Sets the access_policy_permission of this DescribeAccessPolicyResponse.


        :param access_policy_permission: The access_policy_permission of this DescribeAccessPolicyResponse.
        :type access_policy_permission: Permission
        """
        if access_policy_permission is None:
            raise ValueError("Invalid value for `access_policy_permission`, must not be `None`")

        self._access_policy_permission = access_policy_permission

    @property
    def access_policy_creation_date(self):
        """Gets the access_policy_creation_date of this DescribeAccessPolicyResponse.


        :return: The access_policy_creation_date of this DescribeAccessPolicyResponse.
        :rtype: datetime
        """
        return self._access_policy_creation_date

    @access_policy_creation_date.setter
    def access_policy_creation_date(self, access_policy_creation_date):
        """Sets the access_policy_creation_date of this DescribeAccessPolicyResponse.


        :param access_policy_creation_date: The access_policy_creation_date of this DescribeAccessPolicyResponse.
        :type access_policy_creation_date: datetime
        """
        if access_policy_creation_date is None:
            raise ValueError("Invalid value for `access_policy_creation_date`, must not be `None`")

        self._access_policy_creation_date = access_policy_creation_date

    @property
    def access_policy_last_update_date(self):
        """Gets the access_policy_last_update_date of this DescribeAccessPolicyResponse.


        :return: The access_policy_last_update_date of this DescribeAccessPolicyResponse.
        :rtype: datetime
        """
        return self._access_policy_last_update_date

    @access_policy_last_update_date.setter
    def access_policy_last_update_date(self, access_policy_last_update_date):
        """Sets the access_policy_last_update_date of this DescribeAccessPolicyResponse.


        :param access_policy_last_update_date: The access_policy_last_update_date of this DescribeAccessPolicyResponse.
        :type access_policy_last_update_date: datetime
        """
        if access_policy_last_update_date is None:
            raise ValueError("Invalid value for `access_policy_last_update_date`, must not be `None`")

        self._access_policy_last_update_date = access_policy_last_update_date
