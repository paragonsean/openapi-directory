# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_notification import PropertyNotification
from openapi_server import util


class AssetPropertySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, alias: str=None, unit: str=None, notification: PropertyNotification=None, asset_composite_model_id: str=None):
        """AssetPropertySummary - a model defined in OpenAPI

        :param id: The id of this AssetPropertySummary.
        :param alias: The alias of this AssetPropertySummary.
        :param unit: The unit of this AssetPropertySummary.
        :param notification: The notification of this AssetPropertySummary.
        :param asset_composite_model_id: The asset_composite_model_id of this AssetPropertySummary.
        """
        self.openapi_types = {
            'id': str,
            'alias': str,
            'unit': str,
            'notification': PropertyNotification,
            'asset_composite_model_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'alias': 'alias',
            'unit': 'unit',
            'notification': 'notification',
            'asset_composite_model_id': 'assetCompositeModelId'
        }

        self._id = id
        self._alias = alias
        self._unit = unit
        self._notification = notification
        self._asset_composite_model_id = asset_composite_model_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetPropertySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetPropertySummary of this AssetPropertySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AssetPropertySummary.


        :return: The id of this AssetPropertySummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AssetPropertySummary.


        :param id: The id of this AssetPropertySummary.
        :type id: str
        """

        self._id = id

    @property
    def alias(self):
        """Gets the alias of this AssetPropertySummary.


        :return: The alias of this AssetPropertySummary.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this AssetPropertySummary.


        :param alias: The alias of this AssetPropertySummary.
        :type alias: str
        """

        self._alias = alias

    @property
    def unit(self):
        """Gets the unit of this AssetPropertySummary.


        :return: The unit of this AssetPropertySummary.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this AssetPropertySummary.


        :param unit: The unit of this AssetPropertySummary.
        :type unit: str
        """

        self._unit = unit

    @property
    def notification(self):
        """Gets the notification of this AssetPropertySummary.


        :return: The notification of this AssetPropertySummary.
        :rtype: PropertyNotification
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this AssetPropertySummary.


        :param notification: The notification of this AssetPropertySummary.
        :type notification: PropertyNotification
        """

        self._notification = notification

    @property
    def asset_composite_model_id(self):
        """Gets the asset_composite_model_id of this AssetPropertySummary.


        :return: The asset_composite_model_id of this AssetPropertySummary.
        :rtype: str
        """
        return self._asset_composite_model_id

    @asset_composite_model_id.setter
    def asset_composite_model_id(self, asset_composite_model_id):
        """Sets the asset_composite_model_id of this AssetPropertySummary.


        :param asset_composite_model_id: The asset_composite_model_id of this AssetPropertySummary.
        :type asset_composite_model_id: str
        """

        self._asset_composite_model_id = asset_composite_model_id
