# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_bulk_import_job_response_error_report_location import DescribeBulkImportJobResponseErrorReportLocation
from openapi_server.models.describe_bulk_import_job_response_job_configuration import DescribeBulkImportJobResponseJobConfiguration
from openapi_server.models.job_status import JobStatus
from openapi_server import util


class DescribeBulkImportJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, job_name: str=None, job_status: JobStatus=None, job_role_arn: str=None, files: List=None, error_report_location: DescribeBulkImportJobResponseErrorReportLocation=None, job_configuration: DescribeBulkImportJobResponseJobConfiguration=None, job_creation_date: datetime=None, job_last_update_date: datetime=None):
        """DescribeBulkImportJobResponse - a model defined in OpenAPI

        :param job_id: The job_id of this DescribeBulkImportJobResponse.
        :param job_name: The job_name of this DescribeBulkImportJobResponse.
        :param job_status: The job_status of this DescribeBulkImportJobResponse.
        :param job_role_arn: The job_role_arn of this DescribeBulkImportJobResponse.
        :param files: The files of this DescribeBulkImportJobResponse.
        :param error_report_location: The error_report_location of this DescribeBulkImportJobResponse.
        :param job_configuration: The job_configuration of this DescribeBulkImportJobResponse.
        :param job_creation_date: The job_creation_date of this DescribeBulkImportJobResponse.
        :param job_last_update_date: The job_last_update_date of this DescribeBulkImportJobResponse.
        """
        self.openapi_types = {
            'job_id': str,
            'job_name': str,
            'job_status': JobStatus,
            'job_role_arn': str,
            'files': List,
            'error_report_location': DescribeBulkImportJobResponseErrorReportLocation,
            'job_configuration': DescribeBulkImportJobResponseJobConfiguration,
            'job_creation_date': datetime,
            'job_last_update_date': datetime
        }

        self.attribute_map = {
            'job_id': 'jobId',
            'job_name': 'jobName',
            'job_status': 'jobStatus',
            'job_role_arn': 'jobRoleArn',
            'files': 'files',
            'error_report_location': 'errorReportLocation',
            'job_configuration': 'jobConfiguration',
            'job_creation_date': 'jobCreationDate',
            'job_last_update_date': 'jobLastUpdateDate'
        }

        self._job_id = job_id
        self._job_name = job_name
        self._job_status = job_status
        self._job_role_arn = job_role_arn
        self._files = files
        self._error_report_location = error_report_location
        self._job_configuration = job_configuration
        self._job_creation_date = job_creation_date
        self._job_last_update_date = job_last_update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeBulkImportJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeBulkImportJobResponse of this DescribeBulkImportJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this DescribeBulkImportJobResponse.


        :return: The job_id of this DescribeBulkImportJobResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this DescribeBulkImportJobResponse.


        :param job_id: The job_id of this DescribeBulkImportJobResponse.
        :type job_id: str
        """
        if job_id is None:
            raise ValueError("Invalid value for `job_id`, must not be `None`")

        self._job_id = job_id

    @property
    def job_name(self):
        """Gets the job_name of this DescribeBulkImportJobResponse.


        :return: The job_name of this DescribeBulkImportJobResponse.
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this DescribeBulkImportJobResponse.


        :param job_name: The job_name of this DescribeBulkImportJobResponse.
        :type job_name: str
        """
        if job_name is None:
            raise ValueError("Invalid value for `job_name`, must not be `None`")

        self._job_name = job_name

    @property
    def job_status(self):
        """Gets the job_status of this DescribeBulkImportJobResponse.


        :return: The job_status of this DescribeBulkImportJobResponse.
        :rtype: JobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this DescribeBulkImportJobResponse.


        :param job_status: The job_status of this DescribeBulkImportJobResponse.
        :type job_status: JobStatus
        """
        if job_status is None:
            raise ValueError("Invalid value for `job_status`, must not be `None`")

        self._job_status = job_status

    @property
    def job_role_arn(self):
        """Gets the job_role_arn of this DescribeBulkImportJobResponse.


        :return: The job_role_arn of this DescribeBulkImportJobResponse.
        :rtype: str
        """
        return self._job_role_arn

    @job_role_arn.setter
    def job_role_arn(self, job_role_arn):
        """Sets the job_role_arn of this DescribeBulkImportJobResponse.


        :param job_role_arn: The job_role_arn of this DescribeBulkImportJobResponse.
        :type job_role_arn: str
        """
        if job_role_arn is None:
            raise ValueError("Invalid value for `job_role_arn`, must not be `None`")

        self._job_role_arn = job_role_arn

    @property
    def files(self):
        """Gets the files of this DescribeBulkImportJobResponse.


        :return: The files of this DescribeBulkImportJobResponse.
        :rtype: List
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this DescribeBulkImportJobResponse.


        :param files: The files of this DescribeBulkImportJobResponse.
        :type files: List
        """
        if files is None:
            raise ValueError("Invalid value for `files`, must not be `None`")

        self._files = files

    @property
    def error_report_location(self):
        """Gets the error_report_location of this DescribeBulkImportJobResponse.


        :return: The error_report_location of this DescribeBulkImportJobResponse.
        :rtype: DescribeBulkImportJobResponseErrorReportLocation
        """
        return self._error_report_location

    @error_report_location.setter
    def error_report_location(self, error_report_location):
        """Sets the error_report_location of this DescribeBulkImportJobResponse.


        :param error_report_location: The error_report_location of this DescribeBulkImportJobResponse.
        :type error_report_location: DescribeBulkImportJobResponseErrorReportLocation
        """
        if error_report_location is None:
            raise ValueError("Invalid value for `error_report_location`, must not be `None`")

        self._error_report_location = error_report_location

    @property
    def job_configuration(self):
        """Gets the job_configuration of this DescribeBulkImportJobResponse.


        :return: The job_configuration of this DescribeBulkImportJobResponse.
        :rtype: DescribeBulkImportJobResponseJobConfiguration
        """
        return self._job_configuration

    @job_configuration.setter
    def job_configuration(self, job_configuration):
        """Sets the job_configuration of this DescribeBulkImportJobResponse.


        :param job_configuration: The job_configuration of this DescribeBulkImportJobResponse.
        :type job_configuration: DescribeBulkImportJobResponseJobConfiguration
        """
        if job_configuration is None:
            raise ValueError("Invalid value for `job_configuration`, must not be `None`")

        self._job_configuration = job_configuration

    @property
    def job_creation_date(self):
        """Gets the job_creation_date of this DescribeBulkImportJobResponse.


        :return: The job_creation_date of this DescribeBulkImportJobResponse.
        :rtype: datetime
        """
        return self._job_creation_date

    @job_creation_date.setter
    def job_creation_date(self, job_creation_date):
        """Sets the job_creation_date of this DescribeBulkImportJobResponse.


        :param job_creation_date: The job_creation_date of this DescribeBulkImportJobResponse.
        :type job_creation_date: datetime
        """
        if job_creation_date is None:
            raise ValueError("Invalid value for `job_creation_date`, must not be `None`")

        self._job_creation_date = job_creation_date

    @property
    def job_last_update_date(self):
        """Gets the job_last_update_date of this DescribeBulkImportJobResponse.


        :return: The job_last_update_date of this DescribeBulkImportJobResponse.
        :rtype: datetime
        """
        return self._job_last_update_date

    @job_last_update_date.setter
    def job_last_update_date(self, job_last_update_date):
        """Sets the job_last_update_date of this DescribeBulkImportJobResponse.


        :param job_last_update_date: The job_last_update_date of this DescribeBulkImportJobResponse.
        :type job_last_update_date: datetime
        """
        if job_last_update_date is None:
            raise ValueError("Invalid value for `job_last_update_date`, must not be `None`")

        self._job_last_update_date = job_last_update_date
