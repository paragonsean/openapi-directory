# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_ordering import TimeOrdering
from openapi_server import util


class BatchGetAssetPropertyValueHistoryEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_id: str=None, asset_id: str=None, property_id: str=None, property_alias: str=None, start_date: datetime=None, end_date: datetime=None, qualities: List=None, time_ordering: TimeOrdering=None):
        """BatchGetAssetPropertyValueHistoryEntry - a model defined in OpenAPI

        :param entry_id: The entry_id of this BatchGetAssetPropertyValueHistoryEntry.
        :param asset_id: The asset_id of this BatchGetAssetPropertyValueHistoryEntry.
        :param property_id: The property_id of this BatchGetAssetPropertyValueHistoryEntry.
        :param property_alias: The property_alias of this BatchGetAssetPropertyValueHistoryEntry.
        :param start_date: The start_date of this BatchGetAssetPropertyValueHistoryEntry.
        :param end_date: The end_date of this BatchGetAssetPropertyValueHistoryEntry.
        :param qualities: The qualities of this BatchGetAssetPropertyValueHistoryEntry.
        :param time_ordering: The time_ordering of this BatchGetAssetPropertyValueHistoryEntry.
        """
        self.openapi_types = {
            'entry_id': str,
            'asset_id': str,
            'property_id': str,
            'property_alias': str,
            'start_date': datetime,
            'end_date': datetime,
            'qualities': List,
            'time_ordering': TimeOrdering
        }

        self.attribute_map = {
            'entry_id': 'entryId',
            'asset_id': 'assetId',
            'property_id': 'propertyId',
            'property_alias': 'propertyAlias',
            'start_date': 'startDate',
            'end_date': 'endDate',
            'qualities': 'qualities',
            'time_ordering': 'timeOrdering'
        }

        self._entry_id = entry_id
        self._asset_id = asset_id
        self._property_id = property_id
        self._property_alias = property_alias
        self._start_date = start_date
        self._end_date = end_date
        self._qualities = qualities
        self._time_ordering = time_ordering

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetAssetPropertyValueHistoryEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetAssetPropertyValueHistoryEntry of this BatchGetAssetPropertyValueHistoryEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_id(self):
        """Gets the entry_id of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The entry_id of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: str
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this BatchGetAssetPropertyValueHistoryEntry.


        :param entry_id: The entry_id of this BatchGetAssetPropertyValueHistoryEntry.
        :type entry_id: str
        """
        if entry_id is None:
            raise ValueError("Invalid value for `entry_id`, must not be `None`")

        self._entry_id = entry_id

    @property
    def asset_id(self):
        """Gets the asset_id of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The asset_id of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this BatchGetAssetPropertyValueHistoryEntry.


        :param asset_id: The asset_id of this BatchGetAssetPropertyValueHistoryEntry.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def property_id(self):
        """Gets the property_id of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The property_id of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this BatchGetAssetPropertyValueHistoryEntry.


        :param property_id: The property_id of this BatchGetAssetPropertyValueHistoryEntry.
        :type property_id: str
        """

        self._property_id = property_id

    @property
    def property_alias(self):
        """Gets the property_alias of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The property_alias of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: str
        """
        return self._property_alias

    @property_alias.setter
    def property_alias(self, property_alias):
        """Sets the property_alias of this BatchGetAssetPropertyValueHistoryEntry.


        :param property_alias: The property_alias of this BatchGetAssetPropertyValueHistoryEntry.
        :type property_alias: str
        """

        self._property_alias = property_alias

    @property
    def start_date(self):
        """Gets the start_date of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The start_date of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this BatchGetAssetPropertyValueHistoryEntry.


        :param start_date: The start_date of this BatchGetAssetPropertyValueHistoryEntry.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The end_date of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this BatchGetAssetPropertyValueHistoryEntry.


        :param end_date: The end_date of this BatchGetAssetPropertyValueHistoryEntry.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def qualities(self):
        """Gets the qualities of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The qualities of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: List
        """
        return self._qualities

    @qualities.setter
    def qualities(self, qualities):
        """Sets the qualities of this BatchGetAssetPropertyValueHistoryEntry.


        :param qualities: The qualities of this BatchGetAssetPropertyValueHistoryEntry.
        :type qualities: List
        """

        self._qualities = qualities

    @property
    def time_ordering(self):
        """Gets the time_ordering of this BatchGetAssetPropertyValueHistoryEntry.


        :return: The time_ordering of this BatchGetAssetPropertyValueHistoryEntry.
        :rtype: TimeOrdering
        """
        return self._time_ordering

    @time_ordering.setter
    def time_ordering(self, time_ordering):
        """Sets the time_ordering of this BatchGetAssetPropertyValueHistoryEntry.


        :param time_ordering: The time_ordering of this BatchGetAssetPropertyValueHistoryEntry.
        :type time_ordering: TimeOrdering
        """

        self._time_ordering = time_ordering
