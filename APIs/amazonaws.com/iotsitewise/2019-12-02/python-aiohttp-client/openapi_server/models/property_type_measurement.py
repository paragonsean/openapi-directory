# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.measurement_processing_config import MeasurementProcessingConfig
from openapi_server import util


class PropertyTypeMeasurement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, processing_config: MeasurementProcessingConfig=None):
        """PropertyTypeMeasurement - a model defined in OpenAPI

        :param processing_config: The processing_config of this PropertyTypeMeasurement.
        """
        self.openapi_types = {
            'processing_config': MeasurementProcessingConfig
        }

        self.attribute_map = {
            'processing_config': 'processingConfig'
        }

        self._processing_config = processing_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PropertyTypeMeasurement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PropertyType_measurement of this PropertyTypeMeasurement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def processing_config(self):
        """Gets the processing_config of this PropertyTypeMeasurement.


        :return: The processing_config of this PropertyTypeMeasurement.
        :rtype: MeasurementProcessingConfig
        """
        return self._processing_config

    @processing_config.setter
    def processing_config(self, processing_config):
        """Sets the processing_config of this PropertyTypeMeasurement.


        :param processing_config: The processing_config of this PropertyTypeMeasurement.
        :type processing_config: MeasurementProcessingConfig
        """

        self._processing_config = processing_config
