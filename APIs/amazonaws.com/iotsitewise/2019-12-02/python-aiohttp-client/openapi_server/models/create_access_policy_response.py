# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAccessPolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_policy_id: str=None, access_policy_arn: str=None):
        """CreateAccessPolicyResponse - a model defined in OpenAPI

        :param access_policy_id: The access_policy_id of this CreateAccessPolicyResponse.
        :param access_policy_arn: The access_policy_arn of this CreateAccessPolicyResponse.
        """
        self.openapi_types = {
            'access_policy_id': str,
            'access_policy_arn': str
        }

        self.attribute_map = {
            'access_policy_id': 'accessPolicyId',
            'access_policy_arn': 'accessPolicyArn'
        }

        self._access_policy_id = access_policy_id
        self._access_policy_arn = access_policy_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccessPolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccessPolicyResponse of this CreateAccessPolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_policy_id(self):
        """Gets the access_policy_id of this CreateAccessPolicyResponse.


        :return: The access_policy_id of this CreateAccessPolicyResponse.
        :rtype: str
        """
        return self._access_policy_id

    @access_policy_id.setter
    def access_policy_id(self, access_policy_id):
        """Sets the access_policy_id of this CreateAccessPolicyResponse.


        :param access_policy_id: The access_policy_id of this CreateAccessPolicyResponse.
        :type access_policy_id: str
        """
        if access_policy_id is None:
            raise ValueError("Invalid value for `access_policy_id`, must not be `None`")

        self._access_policy_id = access_policy_id

    @property
    def access_policy_arn(self):
        """Gets the access_policy_arn of this CreateAccessPolicyResponse.


        :return: The access_policy_arn of this CreateAccessPolicyResponse.
        :rtype: str
        """
        return self._access_policy_arn

    @access_policy_arn.setter
    def access_policy_arn(self, access_policy_arn):
        """Sets the access_policy_arn of this CreateAccessPolicyResponse.


        :param access_policy_arn: The access_policy_arn of this CreateAccessPolicyResponse.
        :type access_policy_arn: str
        """
        if access_policy_arn is None:
            raise ValueError("Invalid value for `access_policy_arn`, must not be `None`")

        self._access_policy_arn = access_policy_arn
