# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_entry_completion_status import BatchEntryCompletionStatus
from openapi_server.models.batch_get_asset_property_value_skipped_entry_error_info import BatchGetAssetPropertyValueSkippedEntryErrorInfo
from openapi_server import util


class BatchGetAssetPropertyValueSkippedEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_id: str=None, completion_status: BatchEntryCompletionStatus=None, error_info: BatchGetAssetPropertyValueSkippedEntryErrorInfo=None):
        """BatchGetAssetPropertyValueSkippedEntry - a model defined in OpenAPI

        :param entry_id: The entry_id of this BatchGetAssetPropertyValueSkippedEntry.
        :param completion_status: The completion_status of this BatchGetAssetPropertyValueSkippedEntry.
        :param error_info: The error_info of this BatchGetAssetPropertyValueSkippedEntry.
        """
        self.openapi_types = {
            'entry_id': str,
            'completion_status': BatchEntryCompletionStatus,
            'error_info': BatchGetAssetPropertyValueSkippedEntryErrorInfo
        }

        self.attribute_map = {
            'entry_id': 'entryId',
            'completion_status': 'completionStatus',
            'error_info': 'errorInfo'
        }

        self._entry_id = entry_id
        self._completion_status = completion_status
        self._error_info = error_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetAssetPropertyValueSkippedEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetAssetPropertyValueSkippedEntry of this BatchGetAssetPropertyValueSkippedEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_id(self):
        """Gets the entry_id of this BatchGetAssetPropertyValueSkippedEntry.


        :return: The entry_id of this BatchGetAssetPropertyValueSkippedEntry.
        :rtype: str
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this BatchGetAssetPropertyValueSkippedEntry.


        :param entry_id: The entry_id of this BatchGetAssetPropertyValueSkippedEntry.
        :type entry_id: str
        """
        if entry_id is None:
            raise ValueError("Invalid value for `entry_id`, must not be `None`")

        self._entry_id = entry_id

    @property
    def completion_status(self):
        """Gets the completion_status of this BatchGetAssetPropertyValueSkippedEntry.


        :return: The completion_status of this BatchGetAssetPropertyValueSkippedEntry.
        :rtype: BatchEntryCompletionStatus
        """
        return self._completion_status

    @completion_status.setter
    def completion_status(self, completion_status):
        """Sets the completion_status of this BatchGetAssetPropertyValueSkippedEntry.


        :param completion_status: The completion_status of this BatchGetAssetPropertyValueSkippedEntry.
        :type completion_status: BatchEntryCompletionStatus
        """
        if completion_status is None:
            raise ValueError("Invalid value for `completion_status`, must not be `None`")

        self._completion_status = completion_status

    @property
    def error_info(self):
        """Gets the error_info of this BatchGetAssetPropertyValueSkippedEntry.


        :return: The error_info of this BatchGetAssetPropertyValueSkippedEntry.
        :rtype: BatchGetAssetPropertyValueSkippedEntryErrorInfo
        """
        return self._error_info

    @error_info.setter
    def error_info(self, error_info):
        """Sets the error_info of this BatchGetAssetPropertyValueSkippedEntry.


        :param error_info: The error_info of this BatchGetAssetPropertyValueSkippedEntry.
        :type error_info: BatchGetAssetPropertyValueSkippedEntryErrorInfo
        """

        self._error_info = error_info
