# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetAssetPropertyValueHistorySuccessEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_id: str=None, asset_property_value_history: List=None):
        """BatchGetAssetPropertyValueHistorySuccessEntry - a model defined in OpenAPI

        :param entry_id: The entry_id of this BatchGetAssetPropertyValueHistorySuccessEntry.
        :param asset_property_value_history: The asset_property_value_history of this BatchGetAssetPropertyValueHistorySuccessEntry.
        """
        self.openapi_types = {
            'entry_id': str,
            'asset_property_value_history': List
        }

        self.attribute_map = {
            'entry_id': 'entryId',
            'asset_property_value_history': 'assetPropertyValueHistory'
        }

        self._entry_id = entry_id
        self._asset_property_value_history = asset_property_value_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetAssetPropertyValueHistorySuccessEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetAssetPropertyValueHistorySuccessEntry of this BatchGetAssetPropertyValueHistorySuccessEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_id(self):
        """Gets the entry_id of this BatchGetAssetPropertyValueHistorySuccessEntry.


        :return: The entry_id of this BatchGetAssetPropertyValueHistorySuccessEntry.
        :rtype: str
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id):
        """Sets the entry_id of this BatchGetAssetPropertyValueHistorySuccessEntry.


        :param entry_id: The entry_id of this BatchGetAssetPropertyValueHistorySuccessEntry.
        :type entry_id: str
        """
        if entry_id is None:
            raise ValueError("Invalid value for `entry_id`, must not be `None`")

        self._entry_id = entry_id

    @property
    def asset_property_value_history(self):
        """Gets the asset_property_value_history of this BatchGetAssetPropertyValueHistorySuccessEntry.


        :return: The asset_property_value_history of this BatchGetAssetPropertyValueHistorySuccessEntry.
        :rtype: List
        """
        return self._asset_property_value_history

    @asset_property_value_history.setter
    def asset_property_value_history(self, asset_property_value_history):
        """Sets the asset_property_value_history of this BatchGetAssetPropertyValueHistorySuccessEntry.


        :param asset_property_value_history: The asset_property_value_history of this BatchGetAssetPropertyValueHistorySuccessEntry.
        :type asset_property_value_history: List
        """
        if asset_property_value_history is None:
            raise ValueError("Invalid value for `asset_property_value_history`, must not be `None`")

        self._asset_property_value_history = asset_property_value_history
