# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auth_mode import AuthMode
from openapi_server.models.describe_portal_response_alarms import DescribePortalResponseAlarms
from openapi_server.models.describe_portal_response_portal_logo_image_location import DescribePortalResponsePortalLogoImageLocation
from openapi_server.models.describe_portal_response_portal_status import DescribePortalResponsePortalStatus
from openapi_server import util


class DescribePortalResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, portal_id: str=None, portal_arn: str=None, portal_name: str=None, portal_description: str=None, portal_client_id: str=None, portal_start_url: str=None, portal_contact_email: str=None, portal_status: DescribePortalResponsePortalStatus=None, portal_creation_date: datetime=None, portal_last_update_date: datetime=None, portal_logo_image_location: DescribePortalResponsePortalLogoImageLocation=None, role_arn: str=None, portal_auth_mode: AuthMode=None, notification_sender_email: str=None, alarms: DescribePortalResponseAlarms=None):
        """DescribePortalResponse - a model defined in OpenAPI

        :param portal_id: The portal_id of this DescribePortalResponse.
        :param portal_arn: The portal_arn of this DescribePortalResponse.
        :param portal_name: The portal_name of this DescribePortalResponse.
        :param portal_description: The portal_description of this DescribePortalResponse.
        :param portal_client_id: The portal_client_id of this DescribePortalResponse.
        :param portal_start_url: The portal_start_url of this DescribePortalResponse.
        :param portal_contact_email: The portal_contact_email of this DescribePortalResponse.
        :param portal_status: The portal_status of this DescribePortalResponse.
        :param portal_creation_date: The portal_creation_date of this DescribePortalResponse.
        :param portal_last_update_date: The portal_last_update_date of this DescribePortalResponse.
        :param portal_logo_image_location: The portal_logo_image_location of this DescribePortalResponse.
        :param role_arn: The role_arn of this DescribePortalResponse.
        :param portal_auth_mode: The portal_auth_mode of this DescribePortalResponse.
        :param notification_sender_email: The notification_sender_email of this DescribePortalResponse.
        :param alarms: The alarms of this DescribePortalResponse.
        """
        self.openapi_types = {
            'portal_id': str,
            'portal_arn': str,
            'portal_name': str,
            'portal_description': str,
            'portal_client_id': str,
            'portal_start_url': str,
            'portal_contact_email': str,
            'portal_status': DescribePortalResponsePortalStatus,
            'portal_creation_date': datetime,
            'portal_last_update_date': datetime,
            'portal_logo_image_location': DescribePortalResponsePortalLogoImageLocation,
            'role_arn': str,
            'portal_auth_mode': AuthMode,
            'notification_sender_email': str,
            'alarms': DescribePortalResponseAlarms
        }

        self.attribute_map = {
            'portal_id': 'portalId',
            'portal_arn': 'portalArn',
            'portal_name': 'portalName',
            'portal_description': 'portalDescription',
            'portal_client_id': 'portalClientId',
            'portal_start_url': 'portalStartUrl',
            'portal_contact_email': 'portalContactEmail',
            'portal_status': 'portalStatus',
            'portal_creation_date': 'portalCreationDate',
            'portal_last_update_date': 'portalLastUpdateDate',
            'portal_logo_image_location': 'portalLogoImageLocation',
            'role_arn': 'roleArn',
            'portal_auth_mode': 'portalAuthMode',
            'notification_sender_email': 'notificationSenderEmail',
            'alarms': 'alarms'
        }

        self._portal_id = portal_id
        self._portal_arn = portal_arn
        self._portal_name = portal_name
        self._portal_description = portal_description
        self._portal_client_id = portal_client_id
        self._portal_start_url = portal_start_url
        self._portal_contact_email = portal_contact_email
        self._portal_status = portal_status
        self._portal_creation_date = portal_creation_date
        self._portal_last_update_date = portal_last_update_date
        self._portal_logo_image_location = portal_logo_image_location
        self._role_arn = role_arn
        self._portal_auth_mode = portal_auth_mode
        self._notification_sender_email = notification_sender_email
        self._alarms = alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePortalResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePortalResponse of this DescribePortalResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def portal_id(self):
        """Gets the portal_id of this DescribePortalResponse.


        :return: The portal_id of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_id

    @portal_id.setter
    def portal_id(self, portal_id):
        """Sets the portal_id of this DescribePortalResponse.


        :param portal_id: The portal_id of this DescribePortalResponse.
        :type portal_id: str
        """
        if portal_id is None:
            raise ValueError("Invalid value for `portal_id`, must not be `None`")

        self._portal_id = portal_id

    @property
    def portal_arn(self):
        """Gets the portal_arn of this DescribePortalResponse.


        :return: The portal_arn of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_arn

    @portal_arn.setter
    def portal_arn(self, portal_arn):
        """Sets the portal_arn of this DescribePortalResponse.


        :param portal_arn: The portal_arn of this DescribePortalResponse.
        :type portal_arn: str
        """
        if portal_arn is None:
            raise ValueError("Invalid value for `portal_arn`, must not be `None`")

        self._portal_arn = portal_arn

    @property
    def portal_name(self):
        """Gets the portal_name of this DescribePortalResponse.


        :return: The portal_name of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_name

    @portal_name.setter
    def portal_name(self, portal_name):
        """Sets the portal_name of this DescribePortalResponse.


        :param portal_name: The portal_name of this DescribePortalResponse.
        :type portal_name: str
        """
        if portal_name is None:
            raise ValueError("Invalid value for `portal_name`, must not be `None`")

        self._portal_name = portal_name

    @property
    def portal_description(self):
        """Gets the portal_description of this DescribePortalResponse.


        :return: The portal_description of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_description

    @portal_description.setter
    def portal_description(self, portal_description):
        """Sets the portal_description of this DescribePortalResponse.


        :param portal_description: The portal_description of this DescribePortalResponse.
        :type portal_description: str
        """

        self._portal_description = portal_description

    @property
    def portal_client_id(self):
        """Gets the portal_client_id of this DescribePortalResponse.


        :return: The portal_client_id of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_client_id

    @portal_client_id.setter
    def portal_client_id(self, portal_client_id):
        """Sets the portal_client_id of this DescribePortalResponse.


        :param portal_client_id: The portal_client_id of this DescribePortalResponse.
        :type portal_client_id: str
        """
        if portal_client_id is None:
            raise ValueError("Invalid value for `portal_client_id`, must not be `None`")

        self._portal_client_id = portal_client_id

    @property
    def portal_start_url(self):
        """Gets the portal_start_url of this DescribePortalResponse.


        :return: The portal_start_url of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_start_url

    @portal_start_url.setter
    def portal_start_url(self, portal_start_url):
        """Sets the portal_start_url of this DescribePortalResponse.


        :param portal_start_url: The portal_start_url of this DescribePortalResponse.
        :type portal_start_url: str
        """
        if portal_start_url is None:
            raise ValueError("Invalid value for `portal_start_url`, must not be `None`")

        self._portal_start_url = portal_start_url

    @property
    def portal_contact_email(self):
        """Gets the portal_contact_email of this DescribePortalResponse.


        :return: The portal_contact_email of this DescribePortalResponse.
        :rtype: str
        """
        return self._portal_contact_email

    @portal_contact_email.setter
    def portal_contact_email(self, portal_contact_email):
        """Sets the portal_contact_email of this DescribePortalResponse.


        :param portal_contact_email: The portal_contact_email of this DescribePortalResponse.
        :type portal_contact_email: str
        """
        if portal_contact_email is None:
            raise ValueError("Invalid value for `portal_contact_email`, must not be `None`")

        self._portal_contact_email = portal_contact_email

    @property
    def portal_status(self):
        """Gets the portal_status of this DescribePortalResponse.


        :return: The portal_status of this DescribePortalResponse.
        :rtype: DescribePortalResponsePortalStatus
        """
        return self._portal_status

    @portal_status.setter
    def portal_status(self, portal_status):
        """Sets the portal_status of this DescribePortalResponse.


        :param portal_status: The portal_status of this DescribePortalResponse.
        :type portal_status: DescribePortalResponsePortalStatus
        """
        if portal_status is None:
            raise ValueError("Invalid value for `portal_status`, must not be `None`")

        self._portal_status = portal_status

    @property
    def portal_creation_date(self):
        """Gets the portal_creation_date of this DescribePortalResponse.


        :return: The portal_creation_date of this DescribePortalResponse.
        :rtype: datetime
        """
        return self._portal_creation_date

    @portal_creation_date.setter
    def portal_creation_date(self, portal_creation_date):
        """Sets the portal_creation_date of this DescribePortalResponse.


        :param portal_creation_date: The portal_creation_date of this DescribePortalResponse.
        :type portal_creation_date: datetime
        """
        if portal_creation_date is None:
            raise ValueError("Invalid value for `portal_creation_date`, must not be `None`")

        self._portal_creation_date = portal_creation_date

    @property
    def portal_last_update_date(self):
        """Gets the portal_last_update_date of this DescribePortalResponse.


        :return: The portal_last_update_date of this DescribePortalResponse.
        :rtype: datetime
        """
        return self._portal_last_update_date

    @portal_last_update_date.setter
    def portal_last_update_date(self, portal_last_update_date):
        """Sets the portal_last_update_date of this DescribePortalResponse.


        :param portal_last_update_date: The portal_last_update_date of this DescribePortalResponse.
        :type portal_last_update_date: datetime
        """
        if portal_last_update_date is None:
            raise ValueError("Invalid value for `portal_last_update_date`, must not be `None`")

        self._portal_last_update_date = portal_last_update_date

    @property
    def portal_logo_image_location(self):
        """Gets the portal_logo_image_location of this DescribePortalResponse.


        :return: The portal_logo_image_location of this DescribePortalResponse.
        :rtype: DescribePortalResponsePortalLogoImageLocation
        """
        return self._portal_logo_image_location

    @portal_logo_image_location.setter
    def portal_logo_image_location(self, portal_logo_image_location):
        """Sets the portal_logo_image_location of this DescribePortalResponse.


        :param portal_logo_image_location: The portal_logo_image_location of this DescribePortalResponse.
        :type portal_logo_image_location: DescribePortalResponsePortalLogoImageLocation
        """

        self._portal_logo_image_location = portal_logo_image_location

    @property
    def role_arn(self):
        """Gets the role_arn of this DescribePortalResponse.


        :return: The role_arn of this DescribePortalResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DescribePortalResponse.


        :param role_arn: The role_arn of this DescribePortalResponse.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def portal_auth_mode(self):
        """Gets the portal_auth_mode of this DescribePortalResponse.


        :return: The portal_auth_mode of this DescribePortalResponse.
        :rtype: AuthMode
        """
        return self._portal_auth_mode

    @portal_auth_mode.setter
    def portal_auth_mode(self, portal_auth_mode):
        """Sets the portal_auth_mode of this DescribePortalResponse.


        :param portal_auth_mode: The portal_auth_mode of this DescribePortalResponse.
        :type portal_auth_mode: AuthMode
        """

        self._portal_auth_mode = portal_auth_mode

    @property
    def notification_sender_email(self):
        """Gets the notification_sender_email of this DescribePortalResponse.


        :return: The notification_sender_email of this DescribePortalResponse.
        :rtype: str
        """
        return self._notification_sender_email

    @notification_sender_email.setter
    def notification_sender_email(self, notification_sender_email):
        """Sets the notification_sender_email of this DescribePortalResponse.


        :param notification_sender_email: The notification_sender_email of this DescribePortalResponse.
        :type notification_sender_email: str
        """

        self._notification_sender_email = notification_sender_email

    @property
    def alarms(self):
        """Gets the alarms of this DescribePortalResponse.


        :return: The alarms of this DescribePortalResponse.
        :rtype: DescribePortalResponseAlarms
        """
        return self._alarms

    @alarms.setter
    def alarms(self, alarms):
        """Sets the alarms of this DescribePortalResponse.


        :param alarms: The alarms of this DescribePortalResponse.
        :type alarms: DescribePortalResponseAlarms
        """

        self._alarms = alarms
