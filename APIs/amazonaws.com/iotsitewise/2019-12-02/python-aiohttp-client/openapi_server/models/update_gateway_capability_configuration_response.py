# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.capability_sync_status import CapabilitySyncStatus
from openapi_server import util


class UpdateGatewayCapabilityConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, capability_namespace: str=None, capability_sync_status: CapabilitySyncStatus=None):
        """UpdateGatewayCapabilityConfigurationResponse - a model defined in OpenAPI

        :param capability_namespace: The capability_namespace of this UpdateGatewayCapabilityConfigurationResponse.
        :param capability_sync_status: The capability_sync_status of this UpdateGatewayCapabilityConfigurationResponse.
        """
        self.openapi_types = {
            'capability_namespace': str,
            'capability_sync_status': CapabilitySyncStatus
        }

        self.attribute_map = {
            'capability_namespace': 'capabilityNamespace',
            'capability_sync_status': 'capabilitySyncStatus'
        }

        self._capability_namespace = capability_namespace
        self._capability_sync_status = capability_sync_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGatewayCapabilityConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGatewayCapabilityConfigurationResponse of this UpdateGatewayCapabilityConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def capability_namespace(self):
        """Gets the capability_namespace of this UpdateGatewayCapabilityConfigurationResponse.


        :return: The capability_namespace of this UpdateGatewayCapabilityConfigurationResponse.
        :rtype: str
        """
        return self._capability_namespace

    @capability_namespace.setter
    def capability_namespace(self, capability_namespace):
        """Sets the capability_namespace of this UpdateGatewayCapabilityConfigurationResponse.


        :param capability_namespace: The capability_namespace of this UpdateGatewayCapabilityConfigurationResponse.
        :type capability_namespace: str
        """
        if capability_namespace is None:
            raise ValueError("Invalid value for `capability_namespace`, must not be `None`")

        self._capability_namespace = capability_namespace

    @property
    def capability_sync_status(self):
        """Gets the capability_sync_status of this UpdateGatewayCapabilityConfigurationResponse.


        :return: The capability_sync_status of this UpdateGatewayCapabilityConfigurationResponse.
        :rtype: CapabilitySyncStatus
        """
        return self._capability_sync_status

    @capability_sync_status.setter
    def capability_sync_status(self, capability_sync_status):
        """Sets the capability_sync_status of this UpdateGatewayCapabilityConfigurationResponse.


        :param capability_sync_status: The capability_sync_status of this UpdateGatewayCapabilityConfigurationResponse.
        :type capability_sync_status: CapabilitySyncStatus
        """
        if capability_sync_status is None:
            raise ValueError("Invalid value for `capability_sync_status`, must not be `None`")

        self._capability_sync_status = capability_sync_status
