# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_gateway_response_gateway_platform import DescribeGatewayResponseGatewayPlatform
from openapi_server import util


class DescribeGatewayResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_id: str=None, gateway_name: str=None, gateway_arn: str=None, gateway_platform: DescribeGatewayResponseGatewayPlatform=None, gateway_capability_summaries: List=None, creation_date: datetime=None, last_update_date: datetime=None):
        """DescribeGatewayResponse - a model defined in OpenAPI

        :param gateway_id: The gateway_id of this DescribeGatewayResponse.
        :param gateway_name: The gateway_name of this DescribeGatewayResponse.
        :param gateway_arn: The gateway_arn of this DescribeGatewayResponse.
        :param gateway_platform: The gateway_platform of this DescribeGatewayResponse.
        :param gateway_capability_summaries: The gateway_capability_summaries of this DescribeGatewayResponse.
        :param creation_date: The creation_date of this DescribeGatewayResponse.
        :param last_update_date: The last_update_date of this DescribeGatewayResponse.
        """
        self.openapi_types = {
            'gateway_id': str,
            'gateway_name': str,
            'gateway_arn': str,
            'gateway_platform': DescribeGatewayResponseGatewayPlatform,
            'gateway_capability_summaries': List,
            'creation_date': datetime,
            'last_update_date': datetime
        }

        self.attribute_map = {
            'gateway_id': 'gatewayId',
            'gateway_name': 'gatewayName',
            'gateway_arn': 'gatewayArn',
            'gateway_platform': 'gatewayPlatform',
            'gateway_capability_summaries': 'gatewayCapabilitySummaries',
            'creation_date': 'creationDate',
            'last_update_date': 'lastUpdateDate'
        }

        self._gateway_id = gateway_id
        self._gateway_name = gateway_name
        self._gateway_arn = gateway_arn
        self._gateway_platform = gateway_platform
        self._gateway_capability_summaries = gateway_capability_summaries
        self._creation_date = creation_date
        self._last_update_date = last_update_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeGatewayResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeGatewayResponse of this DescribeGatewayResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_id(self):
        """Gets the gateway_id of this DescribeGatewayResponse.


        :return: The gateway_id of this DescribeGatewayResponse.
        :rtype: str
        """
        return self._gateway_id

    @gateway_id.setter
    def gateway_id(self, gateway_id):
        """Sets the gateway_id of this DescribeGatewayResponse.


        :param gateway_id: The gateway_id of this DescribeGatewayResponse.
        :type gateway_id: str
        """
        if gateway_id is None:
            raise ValueError("Invalid value for `gateway_id`, must not be `None`")

        self._gateway_id = gateway_id

    @property
    def gateway_name(self):
        """Gets the gateway_name of this DescribeGatewayResponse.


        :return: The gateway_name of this DescribeGatewayResponse.
        :rtype: str
        """
        return self._gateway_name

    @gateway_name.setter
    def gateway_name(self, gateway_name):
        """Sets the gateway_name of this DescribeGatewayResponse.


        :param gateway_name: The gateway_name of this DescribeGatewayResponse.
        :type gateway_name: str
        """
        if gateway_name is None:
            raise ValueError("Invalid value for `gateway_name`, must not be `None`")

        self._gateway_name = gateway_name

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this DescribeGatewayResponse.


        :return: The gateway_arn of this DescribeGatewayResponse.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this DescribeGatewayResponse.


        :param gateway_arn: The gateway_arn of this DescribeGatewayResponse.
        :type gateway_arn: str
        """
        if gateway_arn is None:
            raise ValueError("Invalid value for `gateway_arn`, must not be `None`")

        self._gateway_arn = gateway_arn

    @property
    def gateway_platform(self):
        """Gets the gateway_platform of this DescribeGatewayResponse.


        :return: The gateway_platform of this DescribeGatewayResponse.
        :rtype: DescribeGatewayResponseGatewayPlatform
        """
        return self._gateway_platform

    @gateway_platform.setter
    def gateway_platform(self, gateway_platform):
        """Sets the gateway_platform of this DescribeGatewayResponse.


        :param gateway_platform: The gateway_platform of this DescribeGatewayResponse.
        :type gateway_platform: DescribeGatewayResponseGatewayPlatform
        """

        self._gateway_platform = gateway_platform

    @property
    def gateway_capability_summaries(self):
        """Gets the gateway_capability_summaries of this DescribeGatewayResponse.


        :return: The gateway_capability_summaries of this DescribeGatewayResponse.
        :rtype: List
        """
        return self._gateway_capability_summaries

    @gateway_capability_summaries.setter
    def gateway_capability_summaries(self, gateway_capability_summaries):
        """Sets the gateway_capability_summaries of this DescribeGatewayResponse.


        :param gateway_capability_summaries: The gateway_capability_summaries of this DescribeGatewayResponse.
        :type gateway_capability_summaries: List
        """
        if gateway_capability_summaries is None:
            raise ValueError("Invalid value for `gateway_capability_summaries`, must not be `None`")

        self._gateway_capability_summaries = gateway_capability_summaries

    @property
    def creation_date(self):
        """Gets the creation_date of this DescribeGatewayResponse.


        :return: The creation_date of this DescribeGatewayResponse.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this DescribeGatewayResponse.


        :param creation_date: The creation_date of this DescribeGatewayResponse.
        :type creation_date: datetime
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")

        self._creation_date = creation_date

    @property
    def last_update_date(self):
        """Gets the last_update_date of this DescribeGatewayResponse.


        :return: The last_update_date of this DescribeGatewayResponse.
        :rtype: datetime
        """
        return self._last_update_date

    @last_update_date.setter
    def last_update_date(self, last_update_date):
        """Sets the last_update_date of this DescribeGatewayResponse.


        :param last_update_date: The last_update_date of this DescribeGatewayResponse.
        :type last_update_date: datetime
        """
        if last_update_date is None:
            raise ValueError("Invalid value for `last_update_date`, must not be `None`")

        self._last_update_date = last_update_date
