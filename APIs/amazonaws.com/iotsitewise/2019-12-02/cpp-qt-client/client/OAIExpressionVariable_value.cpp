/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpressionVariable_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpressionVariable_value::OAIExpressionVariable_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpressionVariable_value::OAIExpressionVariable_value() {
    this->initializeModel();
}

OAIExpressionVariable_value::~OAIExpressionVariable_value() {}

void OAIExpressionVariable_value::initializeModel() {

    m_property_id_isSet = false;
    m_property_id_isValid = false;

    m_hierarchy_id_isSet = false;
    m_hierarchy_id_isValid = false;
}

void OAIExpressionVariable_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpressionVariable_value::fromJsonObject(QJsonObject json) {

    m_property_id_isValid = ::OpenAPI::fromJsonValue(m_property_id, json[QString("propertyId")]);
    m_property_id_isSet = !json[QString("propertyId")].isNull() && m_property_id_isValid;

    m_hierarchy_id_isValid = ::OpenAPI::fromJsonValue(m_hierarchy_id, json[QString("hierarchyId")]);
    m_hierarchy_id_isSet = !json[QString("hierarchyId")].isNull() && m_hierarchy_id_isValid;
}

QString OAIExpressionVariable_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpressionVariable_value::asJsonObject() const {
    QJsonObject obj;
    if (m_property_id_isSet) {
        obj.insert(QString("propertyId"), ::OpenAPI::toJsonValue(m_property_id));
    }
    if (m_hierarchy_id_isSet) {
        obj.insert(QString("hierarchyId"), ::OpenAPI::toJsonValue(m_hierarchy_id));
    }
    return obj;
}

QString OAIExpressionVariable_value::getPropertyId() const {
    return m_property_id;
}
void OAIExpressionVariable_value::setPropertyId(const QString &property_id) {
    m_property_id = property_id;
    m_property_id_isSet = true;
}

bool OAIExpressionVariable_value::is_property_id_Set() const{
    return m_property_id_isSet;
}

bool OAIExpressionVariable_value::is_property_id_Valid() const{
    return m_property_id_isValid;
}

QString OAIExpressionVariable_value::getHierarchyId() const {
    return m_hierarchy_id;
}
void OAIExpressionVariable_value::setHierarchyId(const QString &hierarchy_id) {
    m_hierarchy_id = hierarchy_id;
    m_hierarchy_id_isSet = true;
}

bool OAIExpressionVariable_value::is_hierarchy_id_Set() const{
    return m_hierarchy_id_isSet;
}

bool OAIExpressionVariable_value::is_hierarchy_id_Valid() const{
    return m_hierarchy_id_isValid;
}

bool OAIExpressionVariable_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hierarchy_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpressionVariable_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_property_id_isValid && true;
}

} // namespace OpenAPI
