/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeGatewayResponse.h
 *
 * 
 */

#ifndef OAIDescribeGatewayResponse_H
#define OAIDescribeGatewayResponse_H

#include <QJsonObject>

#include "OAIDescribeGatewayResponse_gatewayPlatform.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeGatewayResponse_gatewayPlatform;

class OAIDescribeGatewayResponse : public OAIObject {
public:
    OAIDescribeGatewayResponse();
    OAIDescribeGatewayResponse(QString json);
    ~OAIDescribeGatewayResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayId() const;
    void setGatewayId(const QString &gateway_id);
    bool is_gateway_id_Set() const;
    bool is_gateway_id_Valid() const;

    QString getGatewayName() const;
    void setGatewayName(const QString &gateway_name);
    bool is_gateway_name_Set() const;
    bool is_gateway_name_Valid() const;

    QString getGatewayArn() const;
    void setGatewayArn(const QString &gateway_arn);
    bool is_gateway_arn_Set() const;
    bool is_gateway_arn_Valid() const;

    OAIDescribeGatewayResponse_gatewayPlatform getGatewayPlatform() const;
    void setGatewayPlatform(const OAIDescribeGatewayResponse_gatewayPlatform &gateway_platform);
    bool is_gateway_platform_Set() const;
    bool is_gateway_platform_Valid() const;

    QList getGatewayCapabilitySummaries() const;
    void setGatewayCapabilitySummaries(const QList &gateway_capability_summaries);
    bool is_gateway_capability_summaries_Set() const;
    bool is_gateway_capability_summaries_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getLastUpdateDate() const;
    void setLastUpdateDate(const QDateTime &last_update_date);
    bool is_last_update_date_Set() const;
    bool is_last_update_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_id;
    bool m_gateway_id_isSet;
    bool m_gateway_id_isValid;

    QString m_gateway_name;
    bool m_gateway_name_isSet;
    bool m_gateway_name_isValid;

    QString m_gateway_arn;
    bool m_gateway_arn_isSet;
    bool m_gateway_arn_isValid;

    OAIDescribeGatewayResponse_gatewayPlatform m_gateway_platform;
    bool m_gateway_platform_isSet;
    bool m_gateway_platform_isValid;

    QList m_gateway_capability_summaries;
    bool m_gateway_capability_summaries_isSet;
    bool m_gateway_capability_summaries_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_last_update_date;
    bool m_last_update_date_isSet;
    bool m_last_update_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeGatewayResponse)

#endif // OAIDescribeGatewayResponse_H
