/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchDisassociateProjectAssetsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchDisassociateProjectAssetsRequest::OAIBatchDisassociateProjectAssetsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchDisassociateProjectAssetsRequest::OAIBatchDisassociateProjectAssetsRequest() {
    this->initializeModel();
}

OAIBatchDisassociateProjectAssetsRequest::~OAIBatchDisassociateProjectAssetsRequest() {}

void OAIBatchDisassociateProjectAssetsRequest::initializeModel() {

    m_asset_ids_isSet = false;
    m_asset_ids_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIBatchDisassociateProjectAssetsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchDisassociateProjectAssetsRequest::fromJsonObject(QJsonObject json) {

    m_asset_ids_isValid = ::OpenAPI::fromJsonValue(m_asset_ids, json[QString("assetIds")]);
    m_asset_ids_isSet = !json[QString("assetIds")].isNull() && m_asset_ids_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;
}

QString OAIBatchDisassociateProjectAssetsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchDisassociateProjectAssetsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_ids.isSet()) {
        obj.insert(QString("assetIds"), ::OpenAPI::toJsonValue(m_asset_ids));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QList OAIBatchDisassociateProjectAssetsRequest::getAssetIds() const {
    return m_asset_ids;
}
void OAIBatchDisassociateProjectAssetsRequest::setAssetIds(const QList &asset_ids) {
    m_asset_ids = asset_ids;
    m_asset_ids_isSet = true;
}

bool OAIBatchDisassociateProjectAssetsRequest::is_asset_ids_Set() const{
    return m_asset_ids_isSet;
}

bool OAIBatchDisassociateProjectAssetsRequest::is_asset_ids_Valid() const{
    return m_asset_ids_isValid;
}

QString OAIBatchDisassociateProjectAssetsRequest::getClientToken() const {
    return m_client_token;
}
void OAIBatchDisassociateProjectAssetsRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIBatchDisassociateProjectAssetsRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIBatchDisassociateProjectAssetsRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIBatchDisassociateProjectAssetsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchDisassociateProjectAssetsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_asset_ids_isValid && true;
}

} // namespace OpenAPI
