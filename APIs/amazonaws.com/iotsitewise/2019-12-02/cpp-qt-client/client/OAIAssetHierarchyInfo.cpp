/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetHierarchyInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetHierarchyInfo::OAIAssetHierarchyInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetHierarchyInfo::OAIAssetHierarchyInfo() {
    this->initializeModel();
}

OAIAssetHierarchyInfo::~OAIAssetHierarchyInfo() {}

void OAIAssetHierarchyInfo::initializeModel() {

    m_parent_asset_id_isSet = false;
    m_parent_asset_id_isValid = false;

    m_child_asset_id_isSet = false;
    m_child_asset_id_isValid = false;
}

void OAIAssetHierarchyInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetHierarchyInfo::fromJsonObject(QJsonObject json) {

    m_parent_asset_id_isValid = ::OpenAPI::fromJsonValue(m_parent_asset_id, json[QString("parentAssetId")]);
    m_parent_asset_id_isSet = !json[QString("parentAssetId")].isNull() && m_parent_asset_id_isValid;

    m_child_asset_id_isValid = ::OpenAPI::fromJsonValue(m_child_asset_id, json[QString("childAssetId")]);
    m_child_asset_id_isSet = !json[QString("childAssetId")].isNull() && m_child_asset_id_isValid;
}

QString OAIAssetHierarchyInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetHierarchyInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_asset_id_isSet) {
        obj.insert(QString("parentAssetId"), ::OpenAPI::toJsonValue(m_parent_asset_id));
    }
    if (m_child_asset_id_isSet) {
        obj.insert(QString("childAssetId"), ::OpenAPI::toJsonValue(m_child_asset_id));
    }
    return obj;
}

QString OAIAssetHierarchyInfo::getParentAssetId() const {
    return m_parent_asset_id;
}
void OAIAssetHierarchyInfo::setParentAssetId(const QString &parent_asset_id) {
    m_parent_asset_id = parent_asset_id;
    m_parent_asset_id_isSet = true;
}

bool OAIAssetHierarchyInfo::is_parent_asset_id_Set() const{
    return m_parent_asset_id_isSet;
}

bool OAIAssetHierarchyInfo::is_parent_asset_id_Valid() const{
    return m_parent_asset_id_isValid;
}

QString OAIAssetHierarchyInfo::getChildAssetId() const {
    return m_child_asset_id;
}
void OAIAssetHierarchyInfo::setChildAssetId(const QString &child_asset_id) {
    m_child_asset_id = child_asset_id;
    m_child_asset_id_isSet = true;
}

bool OAIAssetHierarchyInfo::is_child_asset_id_Set() const{
    return m_child_asset_id_isSet;
}

bool OAIAssetHierarchyInfo::is_child_asset_id_Valid() const{
    return m_child_asset_id_isValid;
}

bool OAIAssetHierarchyInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_asset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_child_asset_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetHierarchyInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
