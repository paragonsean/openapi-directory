/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchPutAssetPropertyError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchPutAssetPropertyError::OAIBatchPutAssetPropertyError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchPutAssetPropertyError::OAIBatchPutAssetPropertyError() {
    this->initializeModel();
}

OAIBatchPutAssetPropertyError::~OAIBatchPutAssetPropertyError() {}

void OAIBatchPutAssetPropertyError::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_timestamps_isSet = false;
    m_timestamps_isValid = false;
}

void OAIBatchPutAssetPropertyError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchPutAssetPropertyError::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("errorMessage")]);
    m_error_message_isSet = !json[QString("errorMessage")].isNull() && m_error_message_isValid;

    m_timestamps_isValid = ::OpenAPI::fromJsonValue(m_timestamps, json[QString("timestamps")]);
    m_timestamps_isSet = !json[QString("timestamps")].isNull() && m_timestamps_isValid;
}

QString OAIBatchPutAssetPropertyError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchPutAssetPropertyError::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code.isSet()) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("errorMessage"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_timestamps.isSet()) {
        obj.insert(QString("timestamps"), ::OpenAPI::toJsonValue(m_timestamps));
    }
    return obj;
}

OAIBatchPutAssetPropertyValueErrorCode OAIBatchPutAssetPropertyError::getErrorCode() const {
    return m_error_code;
}
void OAIBatchPutAssetPropertyError::setErrorCode(const OAIBatchPutAssetPropertyValueErrorCode &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIBatchPutAssetPropertyError::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIBatchPutAssetPropertyError::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIBatchPutAssetPropertyError::getErrorMessage() const {
    return m_error_message;
}
void OAIBatchPutAssetPropertyError::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIBatchPutAssetPropertyError::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIBatchPutAssetPropertyError::is_error_message_Valid() const{
    return m_error_message_isValid;
}

QList OAIBatchPutAssetPropertyError::getTimestamps() const {
    return m_timestamps;
}
void OAIBatchPutAssetPropertyError::setTimestamps(const QList &timestamps) {
    m_timestamps = timestamps;
    m_timestamps_isSet = true;
}

bool OAIBatchPutAssetPropertyError::is_timestamps_Set() const{
    return m_timestamps_isSet;
}

bool OAIBatchPutAssetPropertyError::is_timestamps_Valid() const{
    return m_timestamps_isValid;
}

bool OAIBatchPutAssetPropertyError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamps.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchPutAssetPropertyError::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_error_code_isValid && m_error_message_isValid && m_timestamps_isValid && true;
}

} // namespace OpenAPI
