/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeTimeSeriesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeTimeSeriesResponse::OAIDescribeTimeSeriesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeTimeSeriesResponse::OAIDescribeTimeSeriesResponse() {
    this->initializeModel();
}

OAIDescribeTimeSeriesResponse::~OAIDescribeTimeSeriesResponse() {}

void OAIDescribeTimeSeriesResponse::initializeModel() {

    m_asset_id_isSet = false;
    m_asset_id_isValid = false;

    m_property_id_isSet = false;
    m_property_id_isValid = false;

    m_alias_isSet = false;
    m_alias_isValid = false;

    m_time_series_id_isSet = false;
    m_time_series_id_isValid = false;

    m_data_type_isSet = false;
    m_data_type_isValid = false;

    m_data_type_spec_isSet = false;
    m_data_type_spec_isValid = false;

    m_time_series_creation_date_isSet = false;
    m_time_series_creation_date_isValid = false;

    m_time_series_last_update_date_isSet = false;
    m_time_series_last_update_date_isValid = false;

    m_time_series_arn_isSet = false;
    m_time_series_arn_isValid = false;
}

void OAIDescribeTimeSeriesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeTimeSeriesResponse::fromJsonObject(QJsonObject json) {

    m_asset_id_isValid = ::OpenAPI::fromJsonValue(m_asset_id, json[QString("assetId")]);
    m_asset_id_isSet = !json[QString("assetId")].isNull() && m_asset_id_isValid;

    m_property_id_isValid = ::OpenAPI::fromJsonValue(m_property_id, json[QString("propertyId")]);
    m_property_id_isSet = !json[QString("propertyId")].isNull() && m_property_id_isValid;

    m_alias_isValid = ::OpenAPI::fromJsonValue(m_alias, json[QString("alias")]);
    m_alias_isSet = !json[QString("alias")].isNull() && m_alias_isValid;

    m_time_series_id_isValid = ::OpenAPI::fromJsonValue(m_time_series_id, json[QString("timeSeriesId")]);
    m_time_series_id_isSet = !json[QString("timeSeriesId")].isNull() && m_time_series_id_isValid;

    m_data_type_isValid = ::OpenAPI::fromJsonValue(m_data_type, json[QString("dataType")]);
    m_data_type_isSet = !json[QString("dataType")].isNull() && m_data_type_isValid;

    m_data_type_spec_isValid = ::OpenAPI::fromJsonValue(m_data_type_spec, json[QString("dataTypeSpec")]);
    m_data_type_spec_isSet = !json[QString("dataTypeSpec")].isNull() && m_data_type_spec_isValid;

    m_time_series_creation_date_isValid = ::OpenAPI::fromJsonValue(m_time_series_creation_date, json[QString("timeSeriesCreationDate")]);
    m_time_series_creation_date_isSet = !json[QString("timeSeriesCreationDate")].isNull() && m_time_series_creation_date_isValid;

    m_time_series_last_update_date_isValid = ::OpenAPI::fromJsonValue(m_time_series_last_update_date, json[QString("timeSeriesLastUpdateDate")]);
    m_time_series_last_update_date_isSet = !json[QString("timeSeriesLastUpdateDate")].isNull() && m_time_series_last_update_date_isValid;

    m_time_series_arn_isValid = ::OpenAPI::fromJsonValue(m_time_series_arn, json[QString("timeSeriesArn")]);
    m_time_series_arn_isSet = !json[QString("timeSeriesArn")].isNull() && m_time_series_arn_isValid;
}

QString OAIDescribeTimeSeriesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeTimeSeriesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_id_isSet) {
        obj.insert(QString("assetId"), ::OpenAPI::toJsonValue(m_asset_id));
    }
    if (m_property_id_isSet) {
        obj.insert(QString("propertyId"), ::OpenAPI::toJsonValue(m_property_id));
    }
    if (m_alias_isSet) {
        obj.insert(QString("alias"), ::OpenAPI::toJsonValue(m_alias));
    }
    if (m_time_series_id_isSet) {
        obj.insert(QString("timeSeriesId"), ::OpenAPI::toJsonValue(m_time_series_id));
    }
    if (m_data_type.isSet()) {
        obj.insert(QString("dataType"), ::OpenAPI::toJsonValue(m_data_type));
    }
    if (m_data_type_spec_isSet) {
        obj.insert(QString("dataTypeSpec"), ::OpenAPI::toJsonValue(m_data_type_spec));
    }
    if (m_time_series_creation_date_isSet) {
        obj.insert(QString("timeSeriesCreationDate"), ::OpenAPI::toJsonValue(m_time_series_creation_date));
    }
    if (m_time_series_last_update_date_isSet) {
        obj.insert(QString("timeSeriesLastUpdateDate"), ::OpenAPI::toJsonValue(m_time_series_last_update_date));
    }
    if (m_time_series_arn_isSet) {
        obj.insert(QString("timeSeriesArn"), ::OpenAPI::toJsonValue(m_time_series_arn));
    }
    return obj;
}

QString OAIDescribeTimeSeriesResponse::getAssetId() const {
    return m_asset_id;
}
void OAIDescribeTimeSeriesResponse::setAssetId(const QString &asset_id) {
    m_asset_id = asset_id;
    m_asset_id_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_asset_id_Set() const{
    return m_asset_id_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_asset_id_Valid() const{
    return m_asset_id_isValid;
}

QString OAIDescribeTimeSeriesResponse::getPropertyId() const {
    return m_property_id;
}
void OAIDescribeTimeSeriesResponse::setPropertyId(const QString &property_id) {
    m_property_id = property_id;
    m_property_id_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_property_id_Set() const{
    return m_property_id_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_property_id_Valid() const{
    return m_property_id_isValid;
}

QString OAIDescribeTimeSeriesResponse::getAlias() const {
    return m_alias;
}
void OAIDescribeTimeSeriesResponse::setAlias(const QString &alias) {
    m_alias = alias;
    m_alias_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_alias_Set() const{
    return m_alias_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_alias_Valid() const{
    return m_alias_isValid;
}

QString OAIDescribeTimeSeriesResponse::getTimeSeriesId() const {
    return m_time_series_id;
}
void OAIDescribeTimeSeriesResponse::setTimeSeriesId(const QString &time_series_id) {
    m_time_series_id = time_series_id;
    m_time_series_id_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_id_Set() const{
    return m_time_series_id_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_id_Valid() const{
    return m_time_series_id_isValid;
}

OAIPropertyDataType OAIDescribeTimeSeriesResponse::getDataType() const {
    return m_data_type;
}
void OAIDescribeTimeSeriesResponse::setDataType(const OAIPropertyDataType &data_type) {
    m_data_type = data_type;
    m_data_type_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_data_type_Set() const{
    return m_data_type_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_data_type_Valid() const{
    return m_data_type_isValid;
}

QString OAIDescribeTimeSeriesResponse::getDataTypeSpec() const {
    return m_data_type_spec;
}
void OAIDescribeTimeSeriesResponse::setDataTypeSpec(const QString &data_type_spec) {
    m_data_type_spec = data_type_spec;
    m_data_type_spec_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_data_type_spec_Set() const{
    return m_data_type_spec_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_data_type_spec_Valid() const{
    return m_data_type_spec_isValid;
}

QDateTime OAIDescribeTimeSeriesResponse::getTimeSeriesCreationDate() const {
    return m_time_series_creation_date;
}
void OAIDescribeTimeSeriesResponse::setTimeSeriesCreationDate(const QDateTime &time_series_creation_date) {
    m_time_series_creation_date = time_series_creation_date;
    m_time_series_creation_date_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_creation_date_Set() const{
    return m_time_series_creation_date_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_creation_date_Valid() const{
    return m_time_series_creation_date_isValid;
}

QDateTime OAIDescribeTimeSeriesResponse::getTimeSeriesLastUpdateDate() const {
    return m_time_series_last_update_date;
}
void OAIDescribeTimeSeriesResponse::setTimeSeriesLastUpdateDate(const QDateTime &time_series_last_update_date) {
    m_time_series_last_update_date = time_series_last_update_date;
    m_time_series_last_update_date_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_last_update_date_Set() const{
    return m_time_series_last_update_date_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_last_update_date_Valid() const{
    return m_time_series_last_update_date_isValid;
}

QString OAIDescribeTimeSeriesResponse::getTimeSeriesArn() const {
    return m_time_series_arn;
}
void OAIDescribeTimeSeriesResponse::setTimeSeriesArn(const QString &time_series_arn) {
    m_time_series_arn = time_series_arn;
    m_time_series_arn_isSet = true;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_arn_Set() const{
    return m_time_series_arn_isSet;
}

bool OAIDescribeTimeSeriesResponse::is_time_series_arn_Valid() const{
    return m_time_series_arn_isValid;
}

bool OAIDescribeTimeSeriesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_type_spec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_last_update_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeTimeSeriesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_time_series_id_isValid && m_data_type_isValid && m_time_series_creation_date_isValid && m_time_series_last_update_date_isValid && m_time_series_arn_isValid && true;
}

} // namespace OpenAPI
