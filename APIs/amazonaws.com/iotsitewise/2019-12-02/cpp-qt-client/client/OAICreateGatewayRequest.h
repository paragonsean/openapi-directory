/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateGatewayRequest.h
 *
 * 
 */

#ifndef OAICreateGatewayRequest_H
#define OAICreateGatewayRequest_H

#include <QJsonObject>

#include "OAICreateGatewayRequest_gatewayPlatform.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateGatewayRequest_gatewayPlatform;

class OAICreateGatewayRequest : public OAIObject {
public:
    OAICreateGatewayRequest();
    OAICreateGatewayRequest(QString json);
    ~OAICreateGatewayRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayName() const;
    void setGatewayName(const QString &gateway_name);
    bool is_gateway_name_Set() const;
    bool is_gateway_name_Valid() const;

    OAICreateGatewayRequest_gatewayPlatform getGatewayPlatform() const;
    void setGatewayPlatform(const OAICreateGatewayRequest_gatewayPlatform &gateway_platform);
    bool is_gateway_platform_Set() const;
    bool is_gateway_platform_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_name;
    bool m_gateway_name_isSet;
    bool m_gateway_name_isValid;

    OAICreateGatewayRequest_gatewayPlatform m_gateway_platform;
    bool m_gateway_platform_isSet;
    bool m_gateway_platform_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateGatewayRequest)

#endif // OAICreateGatewayRequest_H
