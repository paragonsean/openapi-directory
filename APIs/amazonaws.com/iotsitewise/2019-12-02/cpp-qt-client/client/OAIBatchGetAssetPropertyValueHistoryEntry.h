/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchGetAssetPropertyValueHistoryEntry.h
 *
 * &lt;p&gt;Contains information for an asset property historical value entry that is associated with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html\&quot;&gt;BatchGetAssetPropertyValueHistory&lt;/a&gt; API.&lt;/p&gt; &lt;p&gt;To identify an asset property, you must specify one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; of an asset property.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;propertyAlias&lt;/code&gt;, which is a data stream alias (for example, &lt;code&gt;/company/windfarm/3/turbine/7/temperature&lt;/code&gt;). To define an asset property&#39;s alias, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html\&quot;&gt;UpdateAssetProperty&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIBatchGetAssetPropertyValueHistoryEntry_H
#define OAIBatchGetAssetPropertyValueHistoryEntry_H

#include <QJsonObject>

#include "OAITimeOrdering.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchGetAssetPropertyValueHistoryEntry : public OAIObject {
public:
    OAIBatchGetAssetPropertyValueHistoryEntry();
    OAIBatchGetAssetPropertyValueHistoryEntry(QString json);
    ~OAIBatchGetAssetPropertyValueHistoryEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntryId() const;
    void setEntryId(const QString &entry_id);
    bool is_entry_id_Set() const;
    bool is_entry_id_Valid() const;

    QString getAssetId() const;
    void setAssetId(const QString &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getPropertyId() const;
    void setPropertyId(const QString &property_id);
    bool is_property_id_Set() const;
    bool is_property_id_Valid() const;

    QString getPropertyAlias() const;
    void setPropertyAlias(const QString &property_alias);
    bool is_property_alias_Set() const;
    bool is_property_alias_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QList getQualities() const;
    void setQualities(const QList &qualities);
    bool is_qualities_Set() const;
    bool is_qualities_Valid() const;

    OAITimeOrdering getTimeOrdering() const;
    void setTimeOrdering(const OAITimeOrdering &time_ordering);
    bool is_time_ordering_Set() const;
    bool is_time_ordering_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entry_id;
    bool m_entry_id_isSet;
    bool m_entry_id_isValid;

    QString m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_property_id;
    bool m_property_id_isSet;
    bool m_property_id_isValid;

    QString m_property_alias;
    bool m_property_alias_isSet;
    bool m_property_alias_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QList m_qualities;
    bool m_qualities_isSet;
    bool m_qualities_isValid;

    OAITimeOrdering m_time_ordering;
    bool m_time_ordering_isSet;
    bool m_time_ordering_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchGetAssetPropertyValueHistoryEntry)

#endif // OAIBatchGetAssetPropertyValueHistoryEntry_H
