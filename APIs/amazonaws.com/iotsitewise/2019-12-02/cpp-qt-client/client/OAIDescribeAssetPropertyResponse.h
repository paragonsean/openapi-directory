/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAssetPropertyResponse.h
 *
 * 
 */

#ifndef OAIDescribeAssetPropertyResponse_H
#define OAIDescribeAssetPropertyResponse_H

#include <QJsonObject>

#include "OAIDescribeAssetPropertyResponse_assetProperty.h"
#include "OAIDescribeAssetPropertyResponse_compositeModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeAssetPropertyResponse_assetProperty;
class OAIDescribeAssetPropertyResponse_compositeModel;

class OAIDescribeAssetPropertyResponse : public OAIObject {
public:
    OAIDescribeAssetPropertyResponse();
    OAIDescribeAssetPropertyResponse(QString json);
    ~OAIDescribeAssetPropertyResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetId() const;
    void setAssetId(const QString &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getAssetName() const;
    void setAssetName(const QString &asset_name);
    bool is_asset_name_Set() const;
    bool is_asset_name_Valid() const;

    QString getAssetModelId() const;
    void setAssetModelId(const QString &asset_model_id);
    bool is_asset_model_id_Set() const;
    bool is_asset_model_id_Valid() const;

    OAIDescribeAssetPropertyResponse_assetProperty getAssetProperty() const;
    void setAssetProperty(const OAIDescribeAssetPropertyResponse_assetProperty &asset_property);
    bool is_asset_property_Set() const;
    bool is_asset_property_Valid() const;

    OAIDescribeAssetPropertyResponse_compositeModel getCompositeModel() const;
    void setCompositeModel(const OAIDescribeAssetPropertyResponse_compositeModel &composite_model);
    bool is_composite_model_Set() const;
    bool is_composite_model_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_asset_name;
    bool m_asset_name_isSet;
    bool m_asset_name_isValid;

    QString m_asset_model_id;
    bool m_asset_model_id_isSet;
    bool m_asset_model_id_isValid;

    OAIDescribeAssetPropertyResponse_assetProperty m_asset_property;
    bool m_asset_property_isSet;
    bool m_asset_property_isValid;

    OAIDescribeAssetPropertyResponse_compositeModel m_composite_model;
    bool m_composite_model_isSet;
    bool m_composite_model_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAssetPropertyResponse)

#endif // OAIDescribeAssetPropertyResponse_H
