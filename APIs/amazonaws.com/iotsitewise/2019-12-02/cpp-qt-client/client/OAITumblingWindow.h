/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITumblingWindow.h
 *
 * &lt;p&gt;Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time window. You can use this window in metrics to aggregate data from properties and other assets.&lt;/p&gt; &lt;p&gt;You can use &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, and &lt;code&gt;w&lt;/code&gt; when you specify an interval or offset. Note that &lt;code&gt;m&lt;/code&gt; represents minutes, &lt;code&gt;h&lt;/code&gt; represents hours, &lt;code&gt;d&lt;/code&gt; represents days, and &lt;code&gt;w&lt;/code&gt; represents weeks. You can also use &lt;code&gt;s&lt;/code&gt; to represent seconds in &lt;code&gt;offset&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;interval&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; parameters support the &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/ISO_8601\&quot;&gt;ISO 8601 format&lt;/a&gt;. For example, &lt;code&gt;PT5S&lt;/code&gt; represents 5 seconds, &lt;code&gt;PT5M&lt;/code&gt; represents 5 minutes, and &lt;code&gt;PT5H&lt;/code&gt; represents 5 hours.&lt;/p&gt;
 */

#ifndef OAITumblingWindow_H
#define OAITumblingWindow_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITumblingWindow : public OAIObject {
public:
    OAITumblingWindow();
    OAITumblingWindow(QString json);
    ~OAITumblingWindow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getOffset() const;
    void setOffset(const QString &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITumblingWindow)

#endif // OAITumblingWindow_H
