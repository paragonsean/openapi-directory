/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetModelPropertyDefinition_type.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetModelPropertyDefinition_type::OAIAssetModelPropertyDefinition_type(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetModelPropertyDefinition_type::OAIAssetModelPropertyDefinition_type() {
    this->initializeModel();
}

OAIAssetModelPropertyDefinition_type::~OAIAssetModelPropertyDefinition_type() {}

void OAIAssetModelPropertyDefinition_type::initializeModel() {

    m_attribute_isSet = false;
    m_attribute_isValid = false;

    m_measurement_isSet = false;
    m_measurement_isValid = false;

    m_transform_isSet = false;
    m_transform_isValid = false;

    m_metric_isSet = false;
    m_metric_isValid = false;
}

void OAIAssetModelPropertyDefinition_type::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetModelPropertyDefinition_type::fromJsonObject(QJsonObject json) {

    m_attribute_isValid = ::OpenAPI::fromJsonValue(m_attribute, json[QString("attribute")]);
    m_attribute_isSet = !json[QString("attribute")].isNull() && m_attribute_isValid;

    m_measurement_isValid = ::OpenAPI::fromJsonValue(m_measurement, json[QString("measurement")]);
    m_measurement_isSet = !json[QString("measurement")].isNull() && m_measurement_isValid;

    m_transform_isValid = ::OpenAPI::fromJsonValue(m_transform, json[QString("transform")]);
    m_transform_isSet = !json[QString("transform")].isNull() && m_transform_isValid;

    m_metric_isValid = ::OpenAPI::fromJsonValue(m_metric, json[QString("metric")]);
    m_metric_isSet = !json[QString("metric")].isNull() && m_metric_isValid;
}

QString OAIAssetModelPropertyDefinition_type::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetModelPropertyDefinition_type::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute.isSet()) {
        obj.insert(QString("attribute"), ::OpenAPI::toJsonValue(m_attribute));
    }
    if (m_measurement.isSet()) {
        obj.insert(QString("measurement"), ::OpenAPI::toJsonValue(m_measurement));
    }
    if (m_transform.isSet()) {
        obj.insert(QString("transform"), ::OpenAPI::toJsonValue(m_transform));
    }
    if (m_metric.isSet()) {
        obj.insert(QString("metric"), ::OpenAPI::toJsonValue(m_metric));
    }
    return obj;
}

OAIPropertyType_attribute OAIAssetModelPropertyDefinition_type::getAttribute() const {
    return m_attribute;
}
void OAIAssetModelPropertyDefinition_type::setAttribute(const OAIPropertyType_attribute &attribute) {
    m_attribute = attribute;
    m_attribute_isSet = true;
}

bool OAIAssetModelPropertyDefinition_type::is_attribute_Set() const{
    return m_attribute_isSet;
}

bool OAIAssetModelPropertyDefinition_type::is_attribute_Valid() const{
    return m_attribute_isValid;
}

OAIPropertyType_measurement OAIAssetModelPropertyDefinition_type::getMeasurement() const {
    return m_measurement;
}
void OAIAssetModelPropertyDefinition_type::setMeasurement(const OAIPropertyType_measurement &measurement) {
    m_measurement = measurement;
    m_measurement_isSet = true;
}

bool OAIAssetModelPropertyDefinition_type::is_measurement_Set() const{
    return m_measurement_isSet;
}

bool OAIAssetModelPropertyDefinition_type::is_measurement_Valid() const{
    return m_measurement_isValid;
}

OAIPropertyType_transform OAIAssetModelPropertyDefinition_type::getTransform() const {
    return m_transform;
}
void OAIAssetModelPropertyDefinition_type::setTransform(const OAIPropertyType_transform &transform) {
    m_transform = transform;
    m_transform_isSet = true;
}

bool OAIAssetModelPropertyDefinition_type::is_transform_Set() const{
    return m_transform_isSet;
}

bool OAIAssetModelPropertyDefinition_type::is_transform_Valid() const{
    return m_transform_isValid;
}

OAIPropertyType_metric OAIAssetModelPropertyDefinition_type::getMetric() const {
    return m_metric;
}
void OAIAssetModelPropertyDefinition_type::setMetric(const OAIPropertyType_metric &metric) {
    m_metric = metric;
    m_metric_isSet = true;
}

bool OAIAssetModelPropertyDefinition_type::is_metric_Set() const{
    return m_metric_isSet;
}

bool OAIAssetModelPropertyDefinition_type::is_metric_Valid() const{
    return m_metric_isValid;
}

bool OAIAssetModelPropertyDefinition_type::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_measurement.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetModelPropertyDefinition_type::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
