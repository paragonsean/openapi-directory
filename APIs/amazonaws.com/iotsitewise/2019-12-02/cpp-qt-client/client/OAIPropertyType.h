/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPropertyType.h
 *
 * Contains a property type, which can be one of &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;measurement&lt;/code&gt;, &lt;code&gt;metric&lt;/code&gt;, or &lt;code&gt;transform&lt;/code&gt;.
 */

#ifndef OAIPropertyType_H
#define OAIPropertyType_H

#include <QJsonObject>

#include "OAIPropertyType_attribute.h"
#include "OAIPropertyType_measurement.h"
#include "OAIPropertyType_metric.h"
#include "OAIPropertyType_transform.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyType_attribute;
class OAIPropertyType_measurement;
class OAIPropertyType_transform;
class OAIPropertyType_metric;

class OAIPropertyType : public OAIObject {
public:
    OAIPropertyType();
    OAIPropertyType(QString json);
    ~OAIPropertyType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPropertyType_attribute getAttribute() const;
    void setAttribute(const OAIPropertyType_attribute &attribute);
    bool is_attribute_Set() const;
    bool is_attribute_Valid() const;

    OAIPropertyType_measurement getMeasurement() const;
    void setMeasurement(const OAIPropertyType_measurement &measurement);
    bool is_measurement_Set() const;
    bool is_measurement_Valid() const;

    OAIPropertyType_transform getTransform() const;
    void setTransform(const OAIPropertyType_transform &transform);
    bool is_transform_Set() const;
    bool is_transform_Valid() const;

    OAIPropertyType_metric getMetric() const;
    void setMetric(const OAIPropertyType_metric &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPropertyType_attribute m_attribute;
    bool m_attribute_isSet;
    bool m_attribute_isValid;

    OAIPropertyType_measurement m_measurement;
    bool m_measurement_isSet;
    bool m_measurement_isValid;

    OAIPropertyType_transform m_transform;
    bool m_transform_isSet;
    bool m_transform_isValid;

    OAIPropertyType_metric m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPropertyType)

#endif // OAIPropertyType_H
