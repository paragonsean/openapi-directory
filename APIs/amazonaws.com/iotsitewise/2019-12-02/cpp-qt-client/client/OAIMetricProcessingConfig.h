/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricProcessingConfig.h
 *
 * The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.
 */

#ifndef OAIMetricProcessingConfig_H
#define OAIMetricProcessingConfig_H

#include <QJsonObject>

#include "OAIComputeLocation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetricProcessingConfig : public OAIObject {
public:
    OAIMetricProcessingConfig();
    OAIMetricProcessingConfig(QString json);
    ~OAIMetricProcessingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIComputeLocation getComputeLocation() const;
    void setComputeLocation(const OAIComputeLocation &compute_location);
    bool is_compute_location_Set() const;
    bool is_compute_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIComputeLocation m_compute_location;
    bool m_compute_location_isSet;
    bool m_compute_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricProcessingConfig)

#endif // OAIMetricProcessingConfig_H
