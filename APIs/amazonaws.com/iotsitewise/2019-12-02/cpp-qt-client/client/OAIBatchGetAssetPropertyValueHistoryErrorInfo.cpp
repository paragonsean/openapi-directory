/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchGetAssetPropertyValueHistoryErrorInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchGetAssetPropertyValueHistoryErrorInfo::OAIBatchGetAssetPropertyValueHistoryErrorInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchGetAssetPropertyValueHistoryErrorInfo::OAIBatchGetAssetPropertyValueHistoryErrorInfo() {
    this->initializeModel();
}

OAIBatchGetAssetPropertyValueHistoryErrorInfo::~OAIBatchGetAssetPropertyValueHistoryErrorInfo() {}

void OAIBatchGetAssetPropertyValueHistoryErrorInfo::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_timestamp_isSet = false;
    m_error_timestamp_isValid = false;
}

void OAIBatchGetAssetPropertyValueHistoryErrorInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchGetAssetPropertyValueHistoryErrorInfo::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("errorCode")]);
    m_error_code_isSet = !json[QString("errorCode")].isNull() && m_error_code_isValid;

    m_error_timestamp_isValid = ::OpenAPI::fromJsonValue(m_error_timestamp, json[QString("errorTimestamp")]);
    m_error_timestamp_isSet = !json[QString("errorTimestamp")].isNull() && m_error_timestamp_isValid;
}

QString OAIBatchGetAssetPropertyValueHistoryErrorInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchGetAssetPropertyValueHistoryErrorInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code.isSet()) {
        obj.insert(QString("errorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_timestamp_isSet) {
        obj.insert(QString("errorTimestamp"), ::OpenAPI::toJsonValue(m_error_timestamp));
    }
    return obj;
}

OAIBatchGetAssetPropertyValueHistoryErrorCode OAIBatchGetAssetPropertyValueHistoryErrorInfo::getErrorCode() const {
    return m_error_code;
}
void OAIBatchGetAssetPropertyValueHistoryErrorInfo::setErrorCode(const OAIBatchGetAssetPropertyValueHistoryErrorCode &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QDateTime OAIBatchGetAssetPropertyValueHistoryErrorInfo::getErrorTimestamp() const {
    return m_error_timestamp;
}
void OAIBatchGetAssetPropertyValueHistoryErrorInfo::setErrorTimestamp(const QDateTime &error_timestamp) {
    m_error_timestamp = error_timestamp;
    m_error_timestamp_isSet = true;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::is_error_timestamp_Set() const{
    return m_error_timestamp_isSet;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::is_error_timestamp_Valid() const{
    return m_error_timestamp_isValid;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchGetAssetPropertyValueHistoryErrorInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_error_code_isValid && m_error_timestamp_isValid && true;
}

} // namespace OpenAPI
