/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessPolicySummary.h
 *
 * Contains an access policy that defines an identity&#39;s access to an IoT SiteWise Monitor resource.
 */

#ifndef OAIAccessPolicySummary_H
#define OAIAccessPolicySummary_H

#include <QJsonObject>

#include "OAIAccessPolicySummary_identity.h"
#include "OAIAccessPolicySummary_resource.h"
#include "OAIPermission.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessPolicySummary_identity;
class OAIAccessPolicySummary_resource;

class OAIAccessPolicySummary : public OAIObject {
public:
    OAIAccessPolicySummary();
    OAIAccessPolicySummary(QString json);
    ~OAIAccessPolicySummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAccessPolicySummary_identity getIdentity() const;
    void setIdentity(const OAIAccessPolicySummary_identity &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    OAIAccessPolicySummary_resource getResource() const;
    void setResource(const OAIAccessPolicySummary_resource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    OAIPermission getPermission() const;
    void setPermission(const OAIPermission &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getLastUpdateDate() const;
    void setLastUpdateDate(const QDateTime &last_update_date);
    bool is_last_update_date_Set() const;
    bool is_last_update_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAccessPolicySummary_identity m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    OAIAccessPolicySummary_resource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    OAIPermission m_permission;
    bool m_permission_isSet;
    bool m_permission_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_last_update_date;
    bool m_last_update_date_isSet;
    bool m_last_update_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessPolicySummary)

#endif // OAIAccessPolicySummary_H
