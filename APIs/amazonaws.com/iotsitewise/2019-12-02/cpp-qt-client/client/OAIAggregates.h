/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAggregates.h
 *
 * Contains the (pre-calculated) aggregate values for an asset property.
 */

#ifndef OAIAggregates_H
#define OAIAggregates_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAggregates : public OAIObject {
public:
    OAIAggregates();
    OAIAggregates(QString json);
    ~OAIAggregates() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverage() const;
    void setAverage(const double &average);
    bool is_average_Set() const;
    bool is_average_Valid() const;

    double getCount() const;
    void setCount(const double &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    double getMaximum() const;
    void setMaximum(const double &maximum);
    bool is_maximum_Set() const;
    bool is_maximum_Valid() const;

    double getMinimum() const;
    void setMinimum(const double &minimum);
    bool is_minimum_Set() const;
    bool is_minimum_Valid() const;

    double getSum() const;
    void setSum(const double &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    double getStandardDeviation() const;
    void setStandardDeviation(const double &standard_deviation);
    bool is_standard_deviation_Set() const;
    bool is_standard_deviation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average;
    bool m_average_isSet;
    bool m_average_isValid;

    double m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    double m_maximum;
    bool m_maximum_isSet;
    bool m_maximum_isValid;

    double m_minimum;
    bool m_minimum_isSet;
    bool m_minimum_isValid;

    double m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;

    double m_standard_deviation;
    bool m_standard_deviation_isSet;
    bool m_standard_deviation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAggregates)

#endif // OAIAggregates_H
