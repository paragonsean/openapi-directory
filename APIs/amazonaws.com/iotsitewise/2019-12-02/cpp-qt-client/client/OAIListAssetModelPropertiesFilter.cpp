/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAssetModelPropertiesFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAssetModelPropertiesFilter::OAIListAssetModelPropertiesFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAssetModelPropertiesFilter::OAIListAssetModelPropertiesFilter() {
    this->initializeModel();
}

OAIListAssetModelPropertiesFilter::~OAIListAssetModelPropertiesFilter() {}

void OAIListAssetModelPropertiesFilter::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIListAssetModelPropertiesFilter::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIListAssetModelPropertiesFilter::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ALL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListAssetModelPropertiesFilter::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BASE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListAssetModelPropertiesFilter::BASE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIListAssetModelPropertiesFilter::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIListAssetModelPropertiesFilter::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIListAssetModelPropertiesFilter::ALL:
            val = "ALL";
            break;
        case eOAIListAssetModelPropertiesFilter::BASE:
            val = "BASE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIListAssetModelPropertiesFilter::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIListAssetModelPropertiesFilter::eOAIListAssetModelPropertiesFilter OAIListAssetModelPropertiesFilter::getValue() const {
    return m_value;
}

void OAIListAssetModelPropertiesFilter::setValue(const OAIListAssetModelPropertiesFilter::eOAIListAssetModelPropertiesFilter& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIListAssetModelPropertiesFilter::isSet() const {
    
    return m_value_isSet;
}

bool OAIListAssetModelPropertiesFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
