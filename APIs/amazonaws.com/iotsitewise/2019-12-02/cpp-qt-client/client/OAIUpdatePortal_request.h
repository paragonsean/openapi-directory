/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatePortal_request.h
 *
 * 
 */

#ifndef OAIUpdatePortal_request_H
#define OAIUpdatePortal_request_H

#include <QJsonObject>

#include "OAICreatePortal_request_alarms.h"
#include "OAIUpdatePortal_request_portalLogoImage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdatePortal_request_portalLogoImage;
class OAICreatePortal_request_alarms;

class OAIUpdatePortal_request : public OAIObject {
public:
    OAIUpdatePortal_request();
    OAIUpdatePortal_request(QString json);
    ~OAIUpdatePortal_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPortalName() const;
    void setPortalName(const QString &portal_name);
    bool is_portal_name_Set() const;
    bool is_portal_name_Valid() const;

    QString getPortalDescription() const;
    void setPortalDescription(const QString &portal_description);
    bool is_portal_description_Set() const;
    bool is_portal_description_Valid() const;

    QString getPortalContactEmail() const;
    void setPortalContactEmail(const QString &portal_contact_email);
    bool is_portal_contact_email_Set() const;
    bool is_portal_contact_email_Valid() const;

    OAIUpdatePortal_request_portalLogoImage getPortalLogoImage() const;
    void setPortalLogoImage(const OAIUpdatePortal_request_portalLogoImage &portal_logo_image);
    bool is_portal_logo_image_Set() const;
    bool is_portal_logo_image_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getNotificationSenderEmail() const;
    void setNotificationSenderEmail(const QString &notification_sender_email);
    bool is_notification_sender_email_Set() const;
    bool is_notification_sender_email_Valid() const;

    OAICreatePortal_request_alarms getAlarms() const;
    void setAlarms(const OAICreatePortal_request_alarms &alarms);
    bool is_alarms_Set() const;
    bool is_alarms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_portal_name;
    bool m_portal_name_isSet;
    bool m_portal_name_isValid;

    QString m_portal_description;
    bool m_portal_description_isSet;
    bool m_portal_description_isValid;

    QString m_portal_contact_email;
    bool m_portal_contact_email_isSet;
    bool m_portal_contact_email_isValid;

    OAIUpdatePortal_request_portalLogoImage m_portal_logo_image;
    bool m_portal_logo_image_isSet;
    bool m_portal_logo_image_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_notification_sender_email;
    bool m_notification_sender_email_isSet;
    bool m_notification_sender_email_isValid;

    OAICreatePortal_request_alarms m_alarms;
    bool m_alarms_isSet;
    bool m_alarms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatePortal_request)

#endif // OAIUpdatePortal_request_H
