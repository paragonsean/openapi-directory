/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetPropertySummary.h
 *
 * Contains a summary of a property associated with an asset.
 */

#ifndef OAIAssetPropertySummary_H
#define OAIAssetPropertySummary_H

#include <QJsonObject>

#include "OAIPropertyNotification.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyNotification;

class OAIAssetPropertySummary : public OAIObject {
public:
    OAIAssetPropertySummary();
    OAIAssetPropertySummary(QString json);
    ~OAIAssetPropertySummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    OAIPropertyNotification getNotification() const;
    void setNotification(const OAIPropertyNotification &notification);
    bool is_notification_Set() const;
    bool is_notification_Valid() const;

    QString getAssetCompositeModelId() const;
    void setAssetCompositeModelId(const QString &asset_composite_model_id);
    bool is_asset_composite_model_id_Set() const;
    bool is_asset_composite_model_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    OAIPropertyNotification m_notification;
    bool m_notification_isSet;
    bool m_notification_isValid;

    QString m_asset_composite_model_id;
    bool m_asset_composite_model_id_isSet;
    bool m_asset_composite_model_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetPropertySummary)

#endif // OAIAssetPropertySummary_H
