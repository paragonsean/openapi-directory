/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAccessPolicyRequest.h
 *
 * 
 */

#ifndef OAICreateAccessPolicyRequest_H
#define OAICreateAccessPolicyRequest_H

#include <QJsonObject>

#include "OAICreateAccessPolicyRequest_accessPolicyIdentity.h"
#include "OAICreateAccessPolicyRequest_accessPolicyResource.h"
#include "OAIPermission.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAccessPolicyRequest_accessPolicyIdentity;
class OAICreateAccessPolicyRequest_accessPolicyResource;

class OAICreateAccessPolicyRequest : public OAIObject {
public:
    OAICreateAccessPolicyRequest();
    OAICreateAccessPolicyRequest(QString json);
    ~OAICreateAccessPolicyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateAccessPolicyRequest_accessPolicyIdentity getAccessPolicyIdentity() const;
    void setAccessPolicyIdentity(const OAICreateAccessPolicyRequest_accessPolicyIdentity &access_policy_identity);
    bool is_access_policy_identity_Set() const;
    bool is_access_policy_identity_Valid() const;

    OAICreateAccessPolicyRequest_accessPolicyResource getAccessPolicyResource() const;
    void setAccessPolicyResource(const OAICreateAccessPolicyRequest_accessPolicyResource &access_policy_resource);
    bool is_access_policy_resource_Set() const;
    bool is_access_policy_resource_Valid() const;

    OAIPermission getAccessPolicyPermission() const;
    void setAccessPolicyPermission(const OAIPermission &access_policy_permission);
    bool is_access_policy_permission_Set() const;
    bool is_access_policy_permission_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateAccessPolicyRequest_accessPolicyIdentity m_access_policy_identity;
    bool m_access_policy_identity_isSet;
    bool m_access_policy_identity_isValid;

    OAICreateAccessPolicyRequest_accessPolicyResource m_access_policy_resource;
    bool m_access_policy_resource_isSet;
    bool m_access_policy_resource_isValid;

    OAIPermission m_access_policy_permission;
    bool m_access_policy_permission_isSet;
    bool m_access_policy_permission_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAccessPolicyRequest)

#endif // OAICreateAccessPolicyRequest_H
