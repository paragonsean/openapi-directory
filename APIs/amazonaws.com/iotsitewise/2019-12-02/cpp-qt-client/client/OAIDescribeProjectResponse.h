/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProjectResponse.h
 *
 * 
 */

#ifndef OAIDescribeProjectResponse_H
#define OAIDescribeProjectResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeProjectResponse : public OAIObject {
public:
    OAIDescribeProjectResponse();
    OAIDescribeProjectResponse(QString json);
    ~OAIDescribeProjectResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getProjectArn() const;
    void setProjectArn(const QString &project_arn);
    bool is_project_arn_Set() const;
    bool is_project_arn_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    QString getPortalId() const;
    void setPortalId(const QString &portal_id);
    bool is_portal_id_Set() const;
    bool is_portal_id_Valid() const;

    QString getProjectDescription() const;
    void setProjectDescription(const QString &project_description);
    bool is_project_description_Set() const;
    bool is_project_description_Valid() const;

    QDateTime getProjectCreationDate() const;
    void setProjectCreationDate(const QDateTime &project_creation_date);
    bool is_project_creation_date_Set() const;
    bool is_project_creation_date_Valid() const;

    QDateTime getProjectLastUpdateDate() const;
    void setProjectLastUpdateDate(const QDateTime &project_last_update_date);
    bool is_project_last_update_date_Set() const;
    bool is_project_last_update_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_project_arn;
    bool m_project_arn_isSet;
    bool m_project_arn_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    QString m_portal_id;
    bool m_portal_id_isSet;
    bool m_portal_id_isValid;

    QString m_project_description;
    bool m_project_description_isSet;
    bool m_project_description_isValid;

    QDateTime m_project_creation_date;
    bool m_project_creation_date_isSet;
    bool m_project_creation_date_isValid;

    QDateTime m_project_last_update_date;
    bool m_project_last_update_date_isSet;
    bool m_project_last_update_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProjectResponse)

#endif // OAIDescribeProjectResponse_H
