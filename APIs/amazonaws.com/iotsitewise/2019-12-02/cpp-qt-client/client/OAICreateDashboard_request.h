/**
 * AWS IoT SiteWise
 * Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects <a href=\"https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications\">Industrial Internet of Things (IIoT)</a> devices to the power of the Amazon Web Services Cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/\">IoT SiteWise User Guide</a>. For information about IoT SiteWise quotas, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html\">Quotas</a> in the <i>IoT SiteWise User Guide</i>.
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDashboard_request.h
 *
 * 
 */

#ifndef OAICreateDashboard_request_H
#define OAICreateDashboard_request_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateDashboard_request : public OAIObject {
public:
    OAICreateDashboard_request();
    OAICreateDashboard_request(QString json);
    ~OAICreateDashboard_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getDashboardName() const;
    void setDashboardName(const QString &dashboard_name);
    bool is_dashboard_name_Set() const;
    bool is_dashboard_name_Valid() const;

    QString getDashboardDescription() const;
    void setDashboardDescription(const QString &dashboard_description);
    bool is_dashboard_description_Set() const;
    bool is_dashboard_description_Valid() const;

    QString getDashboardDefinition() const;
    void setDashboardDefinition(const QString &dashboard_definition);
    bool is_dashboard_definition_Set() const;
    bool is_dashboard_definition_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_dashboard_name;
    bool m_dashboard_name_isSet;
    bool m_dashboard_name_isValid;

    QString m_dashboard_description;
    bool m_dashboard_description_isSet;
    bool m_dashboard_description_isValid;

    QString m_dashboard_definition;
    bool m_dashboard_definition_isSet;
    bool m_dashboard_definition_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDashboard_request)

#endif // OAICreateDashboard_request_H
