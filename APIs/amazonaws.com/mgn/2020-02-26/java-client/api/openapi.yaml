openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: The Application Migration Service service.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Application Migration Service
  version: 2020-02-26
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mgn
  x-aws-signingName: mgn
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mgn-2020-02-26.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mgn/
servers:
- description: The mgn multi-region endpoint
  url: "http://mgn.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The mgn multi-region endpoint
  url: "https://mgn.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The mgn endpoint for China (Beijing) and China (Ningxia)
  url: "http://mgn.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The mgn endpoint for China (Beijing) and China (Ningxia)
  url: "https://mgn.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /ArchiveApplication:
    post:
      description: Archive application.
      operationId: ArchiveApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ArchiveWave:
    post:
      description: Archive wave.
      operationId: ArchiveWave
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveWave_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wave'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /AssociateApplications:
    post:
      description: Associate applications to wave.
      operationId: AssociateApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateApplications_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /AssociateSourceServers:
    post:
      description: Associate source servers to application.
      operationId: AssociateSourceServers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSourceServers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateSourceServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ChangeServerLifeCycleState:
    post:
      description: "Allows the user to set the SourceServer.LifeCycle.state property\
        \ for specific Source Server IDs to one of the following: READY_FOR_TEST or\
        \ READY_FOR_CUTOVER. This command only works if the Source Server is already\
        \ launchable (dataReplicationInfo.lagDuration is not null.)"
      operationId: ChangeServerLifeCycleState
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeServerLifeCycleState_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateApplication:
    post:
      description: Create application.
      operationId: CreateApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateLaunchConfigurationTemplate:
    post:
      description: Creates a new Launch Configuration Template.
      operationId: CreateLaunchConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfigurationTemplate'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateReplicationConfigurationTemplate:
    post:
      description: Creates a new ReplicationConfigurationTemplate.
      operationId: CreateReplicationConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReplicationConfigurationTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateWave:
    post:
      description: Create wave.
      operationId: CreateWave
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWave_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wave'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteApplication:
    post:
      description: Delete application.
      operationId: DeleteApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveApplication_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteJob:
    post:
      description: Deletes a single Job by ID.
      operationId: DeleteJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteJob_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteLaunchConfigurationTemplate:
    post:
      description: Deletes a single Launch Configuration Template by ID.
      operationId: DeleteLaunchConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLaunchConfigurationTemplate_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchConfigurationTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteReplicationConfigurationTemplate:
    post:
      description: Deletes a single Replication Configuration Template by ID
      operationId: DeleteReplicationConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReplicationConfigurationTemplate_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationConfigurationTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteSourceServer:
    post:
      description: Deletes a single source server by ID.
      operationId: DeleteSourceServer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSourceServer_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSourceServerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteVcenterClient:
    post:
      description: Deletes a given vCenter client by ID.
      operationId: DeleteVcenterClient
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVcenterClient_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteWave:
    post:
      description: Delete wave.
      operationId: DeleteWave
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveWave_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWaveResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeJobLogItems:
    post:
      description: Retrieves detailed job log items with paging.
      operationId: DescribeJobLogItems
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobLogItems_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobLogItemsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeJobs:
    post:
      description: "Returns a list of Jobs. Use the JobsID and fromDate and toData\
        \ filters to limit which jobs are returned. The response is sorted by creationDataTime\
        \ - latest date first. Jobs are normally created by the StartTest, StartCutover,\
        \ and TerminateTargetInstances APIs. Jobs are also created by DiagnosticLaunch\
        \ and TerminateDiagnosticInstances, which are APIs available only to *Support*\
        \ and only used in response to relevant support tickets."
      operationId: DescribeJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeJobs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeLaunchConfigurationTemplates:
    post:
      description: "Lists all Launch Configuration Templates, filtered by Launch Configuration\
        \ Template IDs"
      operationId: DescribeLaunchConfigurationTemplates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLaunchConfigurationTemplates_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchConfigurationTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeReplicationConfigurationTemplates:
    post:
      description: "Lists all ReplicationConfigurationTemplates, filtered by Source\
        \ Server IDs."
      operationId: DescribeReplicationConfigurationTemplates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReplicationConfigurationTemplates_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReplicationConfigurationTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeSourceServers:
    post:
      description: Retrieves all SourceServers or multiple SourceServers by ID.
      operationId: DescribeSourceServers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSourceServers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSourceServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DescribeVcenterClients:
    get:
      description: Returns a list of the installed vCenter clients.
      operationId: DescribeVcenterClients
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Maximum results to be returned in DescribeVcenterClients.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Next pagination token to be provided for DescribeVcenterClients.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVcenterClientsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /DisassociateApplications:
    post:
      description: Disassociate applications from wave.
      operationId: DisassociateApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateApplications_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DisassociateSourceServers:
    post:
      description: Disassociate source servers from application.
      operationId: DisassociateSourceServers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSourceServers_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateSourceServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DisconnectFromService:
    post:
      description: "Disconnects specific Source Servers from Application Migration\
        \ Service. Data replication is stopped immediately. All AWS resources created\
        \ by Application Migration Service for enabling the replication of these source\
        \ servers will be terminated / deleted within 90 minutes. Launched Test or\
        \ Cutover instances will NOT be terminated. If the agent on the source server\
        \ has not been prevented from communicating with the Application Migration\
        \ Service service, then it will receive a command to uninstall itself (within\
        \ approximately 10 minutes). The following properties of the SourceServer\
        \ will be changed immediately: dataReplicationInfo.dataReplicationState will\
        \ be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks\
        \ will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration\
        \ will be nullified."
      operationId: DisconnectFromService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisconnectFromService_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /FinalizeCutover:
    post:
      description: "Finalizes the cutover immediately for specific Source Servers.\
        \ All AWS resources created by Application Migration Service for enabling\
        \ the replication of these source servers will be terminated / deleted within\
        \ 90 minutes. Launched Test or Cutover instances will NOT be terminated. The\
        \ AWS Replication Agent will receive a command to uninstall itself (within\
        \ 10 minutes). The following properties of the SourceServer will be changed\
        \ immediately: dataReplicationInfo.dataReplicationState will be changed to\
        \ DISCONNECTED; The SourceServer.lifeCycle.state will be changed to CUTOVER;\
        \ The totalStorageBytes property fo each of dataReplicationInfo.replicatedDisks\
        \ will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration\
        \ will be nullified."
      operationId: FinalizeCutover
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeCutover_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetLaunchConfiguration:
    post:
      description: "Lists all LaunchConfigurations available, filtered by Source Server\
        \ IDs."
      operationId: GetLaunchConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLaunchConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetReplicationConfiguration:
    post:
      description: "Lists all ReplicationConfigurations, filtered by Source Server\
        \ ID."
      operationId: GetReplicationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /InitializeService:
    post:
      description: Initialize Application Migration Service.
      operationId: InitializeService
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializeServiceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /ListApplications:
    post:
      description: Retrieves all applications or multiple applications by ID.
      operationId: ListApplications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListApplications_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListExportErrors:
    post:
      description: List export errors.
      operationId: ListExportErrors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExportErrors_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExportErrorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListExports:
    post:
      description: List exports.
      operationId: ListExports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExports_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListImportErrors:
    post:
      description: List import errors.
      operationId: ListImportErrors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImportErrors_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportErrorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListImports:
    post:
      description: List imports.
      operationId: ListImports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImports_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListManagedAccounts:
    post:
      description: List Managed Accounts.
      operationId: ListManagedAccounts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListManagedAccounts_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagedAccountsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListSourceServerActions:
    post:
      description: List source server post migration custom actions.
      operationId: ListSourceServerActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSourceServerActions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourceServerActionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: List all tags for your Application Migration Service resources.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: List tags for resource request by ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
    post:
      description: "Adds or overwrites only the specified tags for the specified Application\
        \ Migration Service resource or resources. When you specify an existing tag\
        \ key, the value is overwritten with the new value. Each resource can have\
        \ a maximum of 50 tags. Each tag consists of a key and optional value."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Tag resource by ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListTemplateActions:
    post:
      description: List template post migration custom actions.
      operationId: ListTemplateActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTemplateActions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateActionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListWaves:
    post:
      description: Retrieves all waves or multiple waves by ID.
      operationId: ListWaves
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWaves_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWavesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /MarkAsArchived:
    post:
      description: Archives specific Source Servers by setting the SourceServer.isArchived
        property to true for specified SourceServers by ID. This command only works
        for SourceServers with a lifecycle. state which equals DISCONNECTED or CUTOVER.
      operationId: MarkAsArchived
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAsArchived_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /PauseReplication:
    post:
      description: Pause Replication.
      operationId: PauseReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseReplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /PutSourceServerAction:
    post:
      description: Put source server post migration custom action.
      operationId: PutSourceServerAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSourceServerAction_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServerActionDocument'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /PutTemplateAction:
    post:
      description: Put template post migration custom action.
      operationId: PutTemplateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTemplateAction_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateActionDocument'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /RemoveSourceServerAction:
    post:
      description: Remove source server post migration custom action.
      operationId: RemoveSourceServerAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSourceServerAction_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveSourceServerActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /RemoveTemplateAction:
    post:
      description: Remove template post migration custom action.
      operationId: RemoveTemplateAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTemplateAction_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTemplateActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ResumeReplication:
    post:
      description: Resume Replication.
      operationId: ResumeReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeReplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /RetryDataReplication:
    post:
      description: "Causes the data replication initiation sequence to begin immediately\
        \ upon next Handshake for specified SourceServer IDs, regardless of when the\
        \ previous initiation started. This command will not work if the SourceServer\
        \ is not stalled or is in a DISCONNECTED or STOPPED state."
      operationId: RetryDataReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryDataReplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartCutover:
    post:
      description: Launches a Cutover Instance for specific Source Servers. This command
        starts a LAUNCH job whose initiatedBy property is StartCutover and changes
        the SourceServer.lifeCycle.state property to CUTTING_OVER.
      operationId: StartCutover
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCutover_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCutoverResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartExport:
    post:
      description: Start export.
      operationId: StartExport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExport_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartImport:
    post:
      description: Start import.
      operationId: StartImport
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImport_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartReplication:
    post:
      description: Starts replication for SNAPSHOT_SHIPPING agents.
      operationId: StartReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartTest:
    post:
      description: Launches a Test Instance for specific Source Servers. This command
        starts a LAUNCH job whose initiatedBy property is StartTest and changes the
        SourceServer.lifeCycle.state property to TESTING.
      operationId: StartTest
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTest_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTestResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StopReplication:
    post:
      description: Stop Replication.
      operationId: StopReplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopReplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /TerminateTargetInstances:
    post:
      description: "Starts a job that terminates specific launched EC2 Test and Cutover\
        \ instances. This command will not work for any Source Server with a lifecycle.state\
        \ of TESTING, CUTTING_OVER, or CUTOVER."
      operationId: TerminateTargetInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateTargetInstances_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateTargetInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UnarchiveApplication:
    post:
      description: Unarchive application.
      operationId: UnarchiveApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UnarchiveWave:
    post:
      description: Unarchive wave.
      operationId: UnarchiveWave
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveWave_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wave'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Deletes the specified set of tags from the specified set of Application
        Migration Service resources.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Untag resource by ARN.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      - description: Untag resource by Keys.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-accepts:
      - application/json
  /UpdateApplication:
    post:
      description: Update application.
      operationId: UpdateApplication
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateLaunchConfiguration:
    post:
      description: Updates multiple LaunchConfigurations by Source Server ID.
      operationId: UpdateLaunchConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfiguration'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateLaunchConfigurationTemplate:
    post:
      description: Updates an existing Launch Configuration Template by ID.
      operationId: UpdateLaunchConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunchConfigurationTemplate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchConfigurationTemplate'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateReplicationConfiguration:
    post:
      description: Allows you to update multiple ReplicationConfigurations by Source
        Server ID.
      operationId: UpdateReplicationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfiguration'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateReplicationConfigurationTemplate:
    post:
      description: Updates multiple ReplicationConfigurationTemplates by ID.
      operationId: UpdateReplicationConfigurationTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationConfigurationTemplate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationConfigurationTemplate'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateSourceServerReplicationType:
    post:
      description: Allows you to change between the AGENT_BASED replication type and
        the SNAPSHOT_SHIPPING replication type.
      operationId: UpdateSourceServerReplicationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceServerReplicationType_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceServer'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /UpdateWave:
    post:
      description: Update wave.
      operationId: UpdateWave
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWave_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wave'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
          description: UninitializedAccountException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    Application:
      example:
        lastModifiedDateTime: ""
        isArchived: ""
        name: ""
        applicationAggregatedStatus:
          lastUpdateDateTime: ""
          healthStatus: ""
          totalSourceServers: ""
          progressStatus: ""
        description: ""
        waveID: ""
        applicationID: ""
        arn: ""
        creationDateTime: ""
        tags: ""
      properties:
        applicationAggregatedStatus:
          $ref: '#/components/schemas/Application_applicationAggregatedStatus'
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Application ARN.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Application creation dateTime.
        description:
          allOf:
          - $ref: '#/components/schemas/ApplicationDescription'
          - description: Application description.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Application archival status.
        lastModifiedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Application last modified dateTime.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: Application name.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Application tags.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Application wave ID.
      type: object
    UninitializedAccountException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    ConflictException: {}
    Wave:
      example:
        lastModifiedDateTime: ""
        isArchived: ""
        name: ""
        description: ""
        waveID: ""
        waveAggregatedStatus:
          lastUpdateDateTime: ""
          replicationStartedDateTime: ""
          healthStatus: ""
          progressStatus: ""
          totalApplications: ""
        arn: ""
        creationDateTime: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Wave ARN.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Wave creation dateTime.
        description:
          allOf:
          - $ref: '#/components/schemas/WaveDescription'
          - description: Wave description.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Wave archival status.
        lastModifiedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Wave last modified dateTime.
        name:
          allOf:
          - $ref: '#/components/schemas/WaveName'
          - description: Wave name.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Wave tags.
        waveAggregatedStatus:
          $ref: '#/components/schemas/Wave_waveAggregatedStatus'
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      type: object
    AssociateApplicationsResponse:
      properties: {}
      type: object
    ApplicationID:
      maxLength: 21
      minLength: 21
      pattern: "^app-[0-9a-zA-Z]{17}$"
      type: string
    AssociateSourceServersResponse:
      properties: {}
      type: object
    SourceServerID:
      maxLength: 19
      minLength: 19
      pattern: "^s-[0-9a-zA-Z]{17}$"
      type: string
    SourceServer:
      example:
        sourceProperties:
          ramBytes: ""
          networkInterfaces: ""
          disks: ""
          os:
            fullString: ""
          recommendedInstanceType: ""
          cpus: ""
          identificationHints:
            hostname: ""
            fqdn: ""
            awsInstanceID: ""
            vmPath: ""
            vmWareUuid: ""
          lastUpdatedDateTime: ""
        dataReplicationInfo:
          lagDuration: ""
          dataReplicationInitiation:
            startDateTime: ""
            nextAttemptDateTime: ""
            steps: ""
          replicatedDisks: ""
          dataReplicationError:
            rawError: ""
            error: ""
          dataReplicationState: ""
          etaDateTime: ""
          lastSnapshotDateTime: ""
        isArchived: ""
        tags: ""
        vcenterClientID: ""
        sourceServerID: ""
        replicationType: ""
        userProvidedID: ""
        applicationID: ""
        arn: ""
        fqdnForActionFramework: ""
        lifeCycle:
          lastCutover:
            finalized:
              apiCallDateTime: ""
            initiated:
              jobID: ""
              apiCallDateTime: ""
            reverted:
              apiCallDateTime: ""
          addedToServiceDateTime: ""
          firstByteDateTime: ""
          lastTest:
            finalized:
              apiCallDateTime: ""
            initiated:
              jobID: ""
              apiCallDateTime: ""
            reverted:
              apiCallDateTime: ""
          state: ""
          lastSeenByServiceDateTime: ""
          elapsedReplicationDuration: ""
        launchedInstance:
          ec2InstanceID: ""
          jobID: ""
          firstBoot: ""
      properties:
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Source server application ID.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Source server ARN.
        dataReplicationInfo:
          $ref: '#/components/schemas/SourceServer_dataReplicationInfo'
        fqdnForActionFramework:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Source server fqdn for action framework.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Source server archived status.
        launchedInstance:
          $ref: '#/components/schemas/SourceServer_launchedInstance'
        lifeCycle:
          $ref: '#/components/schemas/SourceServer_lifeCycle'
        replicationType:
          allOf:
          - $ref: '#/components/schemas/ReplicationType'
          - description: Source server replication type.
        sourceProperties:
          $ref: '#/components/schemas/SourceServer_sourceProperties'
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Source server ID.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Source server Tags.
        userProvidedID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Source server user provided ID.
        vcenterClientID:
          allOf:
          - $ref: '#/components/schemas/VcenterClientID'
          - description: Source server vCenter client id.
      type: object
    ChangeServerLifeCycleStateSourceServerLifecycleState:
      enum:
      - READY_FOR_TEST
      - READY_FOR_CUTOVER
      - CUTOVER
      type: string
    ValidationException: {}
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    LaunchConfigurationTemplate:
      example:
        copyPrivateIp: ""
        launchConfigurationTemplateID: ""
        launchDisposition: ""
        bootMode: ""
        ec2LaunchTemplateID: ""
        tags: ""
        enableMapAutoTagging: ""
        smallVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
        smallVolumeMaxSize: ""
        copyTags: ""
        targetInstanceTypeRightSizingMethod: ""
        associatePublicIpAddress: ""
        mapAutoTaggingMpeID: ""
        arn: ""
        licensing:
          osByol: ""
        postLaunchActions:
          s3OutputKeyPrefix: ""
          ssmDocuments: ""
          s3LogBucket: ""
          cloudWatchLogGroupName: ""
          deployment: ""
        largeVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: ARN of the Launch Configuration Template.
        associatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Associate public Ip address.
        bootMode:
          allOf:
          - $ref: '#/components/schemas/BootMode'
          - description: Launch configuration template boot mode.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy private Ip.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy tags.
        ec2LaunchTemplateID:
          allOf:
          - $ref: '#/components/schemas/EC2LaunchConfigurationTemplateID'
          - description: EC2 launch template ID.
        enableMapAutoTagging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable map auto tagging.
        largeVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_largeVolumeConf'
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: ID of the Launch Configuration Template.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          - description: Launch disposition.
        licensing:
          $ref: '#/components/schemas/Licensing'
        mapAutoTaggingMpeID:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Launch configuration template map auto tagging MPE ID.
        postLaunchActions:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_postLaunchActions'
        smallVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_smallVolumeConf'
        smallVolumeMaxSize:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Small volume maximum size.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags of the Launch Configuration Template.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          - description: Target instance type right-sizing method.
      required:
      - launchConfigurationTemplateID
      type: object
    Iops:
      maximum: 64000
      minimum: 100
      type: integer
    Throughput:
      maximum: 1000
      minimum: 125
      type: integer
    VolumeType:
      enum:
      - io1
      - io2
      - gp3
      - gp2
      - st1
      - sc1
      - standard
      type: string
    Boolean:
      type: boolean
    CloudWatchLogGroupName:
      maxLength: 512
      minLength: 1
      pattern: "^[\\.\\-_/#A-Za-z0-9]+$"
      type: string
    PostLaunchActionsDeploymentType:
      enum:
      - TEST_AND_CUTOVER
      - CUTOVER_ONLY
      - TEST_ONLY
      type: string
    S3LogBucketName:
      maxLength: 63
      minLength: 3
      type: string
    BoundedString:
      maxLength: 256
      minLength: 0
      type: string
    SsmDocuments:
      items:
        $ref: '#/components/schemas/SsmDocument'
      maxItems: 10
      minItems: 0
      type: array
    AccessDeniedException: {}
    ReplicationConfigurationTemplate:
      example:
        ebsEncryption: ""
        stagingAreaSubnetId: ""
        useDedicatedReplicationServer: ""
        associateDefaultSecurityGroup: ""
        replicationServersSecurityGroupsIDs: ""
        replicationServerInstanceType: ""
        tags: ""
        dataPlaneRouting: ""
        ebsEncryptionKeyArn: ""
        bandwidthThrottling: ""
        createPublicIP: ""
        replicationConfigurationTemplateID: ""
        arn: ""
        useFipsEndpoint: ""
        defaultLargeStagingDiskType: ""
        stagingAreaTags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Replication Configuration template ARN.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration template associate default Application
              Migration Service Security group.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/BandwidthThrottling'
          - description: Replication Configuration template bandwidth throttling.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration template create Public IP.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          - description: Replication Configuration template data plane routing.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          - description: Replication Configuration template use default large Staging
              Disk type.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          - description: Replication Configuration template EBS encryption.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Replication Configuration template EBS encryption key ARN.
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          - description: Replication Configuration template ID.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Replication Configuration template server instance type.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          - description: Replication Configuration template server Security Groups
              IDs.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          - description: Replication Configuration template Staging Area subnet ID.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Replication Configuration template Staging Area Tags.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Replication Configuration template Tags.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration template use Dedicated Replication
              Server.
        useFipsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration template use Fips Endpoint.
      required:
      - replicationConfigurationTemplateID
      type: object
    SecurityGroupID:
      maxLength: 255
      minLength: 0
      pattern: "^sg-[0-9a-fA-F]{8,}$"
      type: string
    DeleteApplicationResponse:
      properties: {}
      type: object
    DeleteJobResponse:
      properties: {}
      type: object
    DeleteLaunchConfigurationTemplateResponse:
      properties: {}
      type: object
    DeleteReplicationConfigurationTemplateResponse:
      properties: {}
      type: object
    DeleteSourceServerResponse:
      properties: {}
      type: object
    DeleteWaveResponse:
      properties: {}
      type: object
    DescribeJobLogItemsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/JobLogs'
          - description: Request to describe Job log response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe Job log response next token.
      type: object
    DescribeJobsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/JobsList'
          - description: Request to describe Job log items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe Job response by next token.
      type: object
    ISO8601DatetimeString:
      maxLength: 32
      minLength: 19
      pattern: "^[1-9][0-9]*-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\
        .[0-9]+)?Z$"
      type: string
    DescribeJobsRequestFiltersJobIDs:
      items:
        $ref: '#/components/schemas/JobID'
      maxItems: 1000
      minItems: 0
      type: array
    DescribeLaunchConfigurationTemplatesResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplates'
          - description: List of items returned by DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next pagination token returned from DescribeLaunchConfigurationTemplates.
      type: object
    LaunchConfigurationTemplateID:
      maxLength: 21
      minLength: 21
      pattern: "^lct-[0-9a-zA-Z]{17}$"
      type: string
    DescribeReplicationConfigurationTemplatesResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplates'
          - description: Request to describe Replication Configuration template by
              items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe Replication Configuration template by
              next token.
      type: object
    ReplicationConfigurationTemplateID:
      maxLength: 21
      minLength: 21
      pattern: "^rct-[0-9a-zA-Z]{17}$"
      type: string
    DescribeSourceServersResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/SourceServersList'
          - description: Request to filter Source Servers list by item.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to filter Source Servers next token.
      type: object
    DescribeSourceServersRequestApplicationIDs:
      items:
        $ref: '#/components/schemas/ApplicationID'
      maxItems: 200
      minItems: 0
      type: array
    LifeCycleStates:
      items:
        $ref: '#/components/schemas/LifeCycleState'
      maxItems: 10
      minItems: 0
      type: array
    ReplicationTypes:
      items:
        $ref: '#/components/schemas/ReplicationType'
      maxItems: 2
      minItems: 0
      type: array
    DescribeSourceServersRequestFiltersIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 200
      minItems: 0
      type: array
    DescribeVcenterClientsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/VcenterClientList'
          - description: List of items returned by DescribeVcenterClients.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next pagination token returned from DescribeVcenterClients.
      type: object
    DisassociateApplicationsResponse:
      properties: {}
      type: object
    DisassociateSourceServersResponse:
      properties: {}
      type: object
    LaunchConfiguration:
      example:
        enableMapAutoTagging: ""
        copyPrivateIp: ""
        sourceServerID: ""
        name: ""
        copyTags: ""
        targetInstanceTypeRightSizingMethod: ""
        mapAutoTaggingMpeID: ""
        launchDisposition: ""
        bootMode: ""
        ec2LaunchTemplateID: ""
        licensing:
          osByol: ""
        postLaunchActions:
          s3OutputKeyPrefix: ""
          ssmDocuments: ""
          s3LogBucket: ""
          cloudWatchLogGroupName: ""
          deployment: ""
      properties:
        bootMode:
          allOf:
          - $ref: '#/components/schemas/BootMode'
          - description: Launch configuration boot mode.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy Private IP during Launch Configuration.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy Tags during Launch Configuration.
        ec2LaunchTemplateID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Launch configuration EC2 Launch template ID.
        enableMapAutoTagging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable map auto tagging.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          - description: Launch disposition for launch configuration.
        licensing:
          $ref: '#/components/schemas/LaunchConfiguration_licensing'
        mapAutoTaggingMpeID:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Map auto tagging MPE ID.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          - description: Launch configuration name.
        postLaunchActions:
          $ref: '#/components/schemas/PostLaunchActions'
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Launch configuration Source Server ID.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          - description: Launch configuration Target instance type right sizing method.
      type: object
    ReplicationConfiguration:
      example:
        ebsEncryption: ""
        stagingAreaSubnetId: ""
        useDedicatedReplicationServer: ""
        associateDefaultSecurityGroup: ""
        replicationServersSecurityGroupsIDs: ""
        replicationServerInstanceType: ""
        dataPlaneRouting: ""
        ebsEncryptionKeyArn: ""
        bandwidthThrottling: ""
        createPublicIP: ""
        sourceServerID: ""
        replicatedDisks: ""
        name: ""
        useFipsEndpoint: ""
        defaultLargeStagingDiskType: ""
        stagingAreaTags: ""
      properties:
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration associate default Application Migration
              Service Security Group.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/BandwidthThrottling'
          - description: Replication Configuration set bandwidth throttling.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration create Public IP.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          - description: Replication Configuration data plane routing.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          - description: Replication Configuration use default large Staging Disks.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          - description: Replication Configuration EBS encryption.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Replication Configuration EBS encryption key ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          - description: Replication Configuration name.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          - description: Replication Configuration replicated disks.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Replication Configuration Replication Server instance type.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          - description: Replication Configuration Replication Server Security Group
              IDs.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Replication Configuration Source Server ID.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          - description: Replication Configuration Staging Area subnet ID.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Replication Configuration Staging Area tags.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration use Dedicated Replication Server.
        useFipsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration use Fips Endpoint.
      type: object
    InitializeServiceResponse:
      properties: {}
      type: object
    ListApplicationsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ApplicationsList'
          - description: Applications list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Response next token.
      type: object
    ApplicationIDsFilter:
      items:
        $ref: '#/components/schemas/ApplicationID'
      maxItems: 200
      minItems: 0
      type: array
    WaveIDsFilter:
      items:
        $ref: '#/components/schemas/WaveID'
      maxItems: 200
      minItems: 0
      type: array
    ListExportErrorsResponse:
      description: List export errors response.
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ExportErrors'
          - description: List export errors response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List export errors response next token.
      type: object
    ListExportsResponse:
      description: List export response.
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ExportsList'
          - description: List export response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List export response next token.
      type: object
    ListExportsRequestFiltersExportIDs:
      items:
        $ref: '#/components/schemas/ExportID'
      maxItems: 10
      minItems: 0
      type: array
    ListImportErrorsResponse:
      description: List imports errors response.
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ImportErrors'
          - description: List imports errors response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List imports errors response next token.
      type: object
    ListImportsResponse:
      description: List import response.
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ImportList'
          - description: List import response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List import response next token.
      type: object
    ImportIDsFilter:
      items:
        $ref: '#/components/schemas/ImportID'
      maxItems: 10
      minItems: 0
      type: array
    ListManagedAccountsResponse:
      description: List managed accounts response.
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ManagedAccounts'
          - description: List managed accounts response items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List managed accounts response next token.
      required:
      - items
      type: object
    ListSourceServerActionsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/SourceServerActionDocuments'
          - description: List of source server post migration custom actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next token returned when listing source server post migration
              custom actions.
      type: object
    ActionIDs:
      items:
        $ref: '#/components/schemas/ActionID'
      maxItems: 100
      minItems: 0
      type: array
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: List tags for resource response.
      type: object
    ThrottlingException: {}
    InternalServerException: {}
    ListTemplateActionsResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/TemplateActionDocuments'
          - description: List of template post migration custom actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next token returned when listing template post migration
              custom actions.
      type: object
    ListWavesResponse:
      example:
        nextToken: ""
        items: ""
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/WavesList'
          - description: Waves list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Response next token.
      type: object
    SourceServerActionDocument:
      example:
        documentIdentifier: ""
        externalParameters: ""
        actionID: ""
        active: ""
        description: ""
        timeoutSeconds: ""
        mustSucceedForCutover: ""
        category: ""
        parameters: ""
        documentVersion: ""
        actionName: ""
        order: ""
      properties:
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Source server post migration custom action ID.
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: Source server post migration custom action name.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Source server post migration custom action active status.
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: Source server post migration custom action category.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: Source server post migration custom action description.
        documentIdentifier:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Source server post migration custom action document identifier.
        documentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: Source server post migration custom action document version.
        externalParameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentExternalParameters'
          - description: Source server post migration custom action external parameters.
        mustSucceedForCutover:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Source server post migration custom action must succeed for
              cutover.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          - description: Source server post migration custom action order.
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentParameters'
          - description: Source server post migration custom action parameters.
        timeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          - description: Source server post migration custom action timeout in seconds.
      type: object
    SsmExternalParameter:
      description: AWS Systems Manager Document external parameter.
      properties:
        dynamicPath:
          allOf:
          - $ref: '#/components/schemas/JmesPathString'
          - description: AWS Systems Manager Document external parameters dynamic
              path.
      type: object
    SsmParameterStoreParameters:
      items:
        $ref: '#/components/schemas/SsmParameterStoreParameter'
      maxItems: 10
      minItems: 0
      type: array
    TemplateActionDocument:
      example:
        documentIdentifier: ""
        externalParameters: ""
        active: ""
        description: ""
        operatingSystem: ""
        documentVersion: ""
        actionID: ""
        timeoutSeconds: ""
        mustSucceedForCutover: ""
        category: ""
        parameters: ""
        actionName: ""
        order: ""
      properties:
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Template post migration custom action ID.
        actionName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Template post migration custom action name.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Template post migration custom action active status.
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: Template post migration custom action category.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: Template post migration custom action description.
        documentIdentifier:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Template post migration custom action document identifier.
        documentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: Template post migration custom action document version.
        externalParameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentExternalParameters'
          - description: Template post migration custom action external parameters.
        mustSucceedForCutover:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Template post migration custom action must succeed for cutover.
        operatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystemString'
          - description: Operating system eligible for this template post migration
              custom action.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          - description: Template post migration custom action order.
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentParameters'
          - description: Template post migration custom action parameters.
        timeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          - description: Template post migration custom action timeout in seconds.
      type: object
    RemoveSourceServerActionResponse:
      properties: {}
      type: object
    RemoveTemplateActionResponse:
      properties: {}
      type: object
    StartCutoverResponse:
      example:
        job:
          jobID: ""
          participatingServers: ""
          arn: ""
          endDateTime: ""
          type: ""
          initiatedBy: ""
          creationDateTime: ""
          status: ""
          tags: ""
      properties:
        job:
          $ref: '#/components/schemas/StartCutoverResponse_job'
      type: object
    StartExportResponse:
      description: Start export response.
      example:
        exportTask:
          summary:
            wavesCount: ""
            serversCount: ""
            applicationsCount: ""
          s3Key: ""
          progressPercentage: ""
          s3BucketOwner: ""
          endDateTime: ""
          exportID: ""
          s3Bucket: ""
          creationDateTime: ""
          status: ""
      properties:
        exportTask:
          $ref: '#/components/schemas/StartExportResponse_exportTask'
      type: object
    StartImportResponse:
      description: Start import response.
      example:
        importTask:
          summary:
            waves:
              modifiedCount: ""
              createdCount: ""
            servers:
              modifiedCount: ""
              createdCount: ""
            applications:
              modifiedCount: ""
              createdCount: ""
          importID: ""
          progressPercentage: ""
          s3BucketSource:
            s3Key: ""
            s3BucketOwner: ""
            s3Bucket: ""
          endDateTime: ""
          creationDateTime: ""
          status: ""
      properties:
        importTask:
          $ref: '#/components/schemas/StartImportResponse_importTask'
      type: object
    S3BucketName:
      pattern: "^[a-zA-Z0-9.\\-_]{1,255}$"
      type: string
    AccountID:
      maxLength: 12
      minLength: 12
      pattern: "[0-9]{12,}"
      type: string
    S3Key:
      pattern: "^[^\\x00]{1,1020}\\.csv$"
      type: string
    StartTestResponse:
      example:
        job:
          jobID: ""
          participatingServers: ""
          arn: ""
          endDateTime: ""
          type: ""
          initiatedBy: ""
          creationDateTime: ""
          status: ""
          tags: ""
      properties:
        job:
          $ref: '#/components/schemas/StartTestResponse_job'
      type: object
    TerminateTargetInstancesResponse:
      example:
        job:
          jobID: ""
          participatingServers: ""
          arn: ""
          endDateTime: ""
          type: ""
          initiatedBy: ""
          creationDateTime: ""
          status: ""
          tags: ""
      properties:
        job:
          $ref: '#/components/schemas/TerminateTargetInstancesResponse_job'
      type: object
    TagKey:
      maxLength: 256
      minLength: 0
      type: string
    ReplicationConfigurationReplicatedDisk:
      description: Replication Configuration replicated disk.
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Replication Configuration replicated disk device name.
        iops:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Replication Configuration replicated disk IOPs.
        isBootDisk:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Replication Configuration replicated disk boot disk.
        stagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
          - description: Replication Configuration replicated disk staging disk type.
        throughput:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Replication Configuration replicated disk throughput.
      type: object
    ARN:
      maxLength: 2048
      minLength: 20
      type: string
    ActionCategory:
      enum:
      - DISASTER_RECOVERY
      - OPERATING_SYSTEM
      - LICENSE_AND_SUBSCRIPTION
      - VALIDATION
      - OBSERVABILITY
      - SECURITY
      - NETWORKING
      - CONFIGURATION
      - BACKUP
      - OTHER
      type: string
    ActionDescription:
      maxLength: 256
      minLength: 0
      pattern: "^[0-9a-zA-Z ():/.,'-_#*; ]*$"
      type: string
    ActionID:
      maxLength: 64
      minLength: 1
      pattern: "[0-9a-zA-Z]$"
      type: string
    ActionName:
      maxLength: 256
      minLength: 1
      pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
      type: string
    ApplicationAggregatedStatus:
      description: Application aggregated status.
      properties:
        healthStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationHealthStatus'
          - description: Application aggregated status health status.
        lastUpdateDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Application aggregated status last update dateTime.
        progressStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationProgressStatus'
          - description: Application aggregated status progress status.
        totalSourceServers:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Application aggregated status total source servers amount.
      type: object
    ApplicationDescription:
      maxLength: 600
      minLength: 0
      pattern: "^[^\\x00]*$"
      type: string
    ApplicationName:
      maxLength: 256
      minLength: 1
      pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
      type: string
    TagsMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    WaveID:
      maxLength: 22
      minLength: 22
      pattern: "^wave-[0-9a-zA-Z]{17}$"
      type: string
    ApplicationHealthStatus:
      enum:
      - HEALTHY
      - LAGGING
      - ERROR
      type: string
    ApplicationProgressStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
      type: string
    PositiveInteger:
      minimum: 0
      type: integer
    ApplicationIDs:
      items:
        $ref: '#/components/schemas/ApplicationID'
      maxItems: 50
      minItems: 1
      type: array
    ApplicationsList:
      items:
        $ref: '#/components/schemas/Application'
      type: array
    ArchiveApplicationRequest:
      example:
        accountID: ""
        applicationID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
      required:
      - applicationID
      title: ArchiveApplicationRequest
      type: object
    ArchiveWaveRequest:
      example:
        accountID: ""
        waveID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - waveID
      title: ArchiveWaveRequest
      type: object
    AssociateApplicationsRequest:
      example:
        accountID: ""
        waveID: ""
        applicationIDs: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/ApplicationIDs'
          - description: Application IDs list.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - applicationIDs
      - waveID
      title: AssociateApplicationsRequest
      type: object
    AssociateSourceServersRequestSourceServerIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 50
      minItems: 1
      type: array
    AssociateSourceServersRequest:
      example:
        accountID: ""
        sourceServerIDs: ""
        applicationID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/AssociateSourceServersRequestSourceServerIDs'
          - description: Source server IDs list.
      required:
      - applicationID
      - sourceServerIDs
      title: AssociateSourceServersRequest
      type: object
    BandwidthThrottling:
      maximum: 10000
      minimum: 0
      type: integer
    BootMode:
      enum:
      - LEGACY_BIOS
      - UEFI
      type: string
    CPU:
      description: Source server CPU information.
      properties:
        cores:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: The number of CPU cores on the source server.
        modelName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: The source server's CPU model name.
      type: object
    ChangeServerLifeCycleStateSourceServerLifecycle:
      description: The request to change the source server migration lifecycle state.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycleState'
          - description: The request to change the source server migration lifecycle
              state.
      required:
      - state
      type: object
    ChangeServerLifeCycleStateRequest:
      example:
        accountID: ""
        sourceServerID: ""
        lifeCycle:
          state: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: The request to change the source server migration account
              ID.
        lifeCycle:
          $ref: '#/components/schemas/ChangeServerLifeCycleStateRequest_lifeCycle'
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: The request to change the source server migration lifecycle
              state by source server ID.
      required:
      - lifeCycle
      - sourceServerID
      title: ChangeServerLifeCycleStateRequest
      type: object
    ClientIdempotencyToken:
      maxLength: 64
      minLength: 0
      type: string
    Cpus:
      items:
        $ref: '#/components/schemas/CPU'
      maxItems: 256
      minItems: 0
      type: array
    CreateApplicationRequest:
      example:
        accountID: ""
        name: ""
        description: ""
        tags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        description:
          allOf:
          - $ref: '#/components/schemas/ApplicationDescription'
          - description: Application description.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: Application name.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Application tags.
      required:
      - name
      title: CreateApplicationRequest
      type: object
    LaunchTemplateDiskConf:
      description: Launch template disk configuration.
      properties:
        iops:
          allOf:
          - $ref: '#/components/schemas/Iops'
          - description: Launch template disk iops configuration.
        throughput:
          allOf:
          - $ref: '#/components/schemas/Throughput'
          - description: Launch template disk throughput configuration.
        volumeType:
          allOf:
          - $ref: '#/components/schemas/VolumeType'
          - description: Launch template disk volume type configuration.
      type: object
    LaunchDisposition:
      enum:
      - STOPPED
      - STARTED
      type: string
    Licensing:
      description: Configure Licensing.
      example:
        osByol: ""
      properties:
        osByol:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Configure BYOL OS licensing.
      type: object
    PostLaunchActions:
      description: Post Launch Actions to executed on the Test or Cutover instance.
      example:
        s3OutputKeyPrefix: ""
        ssmDocuments: ""
        s3LogBucket: ""
        cloudWatchLogGroupName: ""
        deployment: ""
      properties:
        cloudWatchLogGroupName:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupName'
          - description: AWS Systems Manager Command's CloudWatch log group name.
        deployment:
          allOf:
          - $ref: '#/components/schemas/PostLaunchActionsDeploymentType'
          - description: Deployment type in which AWS Systems Manager Documents will
              be executed.
        s3LogBucket:
          allOf:
          - $ref: '#/components/schemas/S3LogBucketName'
          - description: AWS Systems Manager Command's logs S3 log bucket.
        s3OutputKeyPrefix:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: AWS Systems Manager Command's logs S3 output key prefix.
        ssmDocuments:
          allOf:
          - $ref: '#/components/schemas/SsmDocuments'
          - description: AWS Systems Manager Documents.
      type: object
    TargetInstanceTypeRightSizingMethod:
      enum:
      - NONE
      - BASIC
      type: string
    CreateLaunchConfigurationTemplateRequest:
      example:
        copyPrivateIp: ""
        launchDisposition: ""
        bootMode: ""
        tags: ""
        enableMapAutoTagging: ""
        smallVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
        smallVolumeMaxSize: ""
        copyTags: ""
        targetInstanceTypeRightSizingMethod: ""
        associatePublicIpAddress: ""
        mapAutoTaggingMpeID: ""
        licensing:
          osByol: ""
        postLaunchActions:
          s3OutputKeyPrefix: ""
          ssmDocuments: ""
          s3LogBucket: ""
          cloudWatchLogGroupName: ""
          deployment: ""
        largeVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
      properties:
        associatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Associate public Ip address.
        bootMode:
          allOf:
          - $ref: '#/components/schemas/BootMode'
          - description: Launch configuration template boot mode.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy private Ip.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy tags.
        enableMapAutoTagging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable map auto tagging.
        largeVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_largeVolumeConf'
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          - description: Launch disposition.
        licensing:
          $ref: '#/components/schemas/Licensing'
        mapAutoTaggingMpeID:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Launch configuration template map auto tagging MPE ID.
        postLaunchActions:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplateRequest_postLaunchActions'
        smallVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_smallVolumeConf'
        smallVolumeMaxSize:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Small volume maximum size.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Request to associate tags during creation of a Launch Configuration
              Template.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          - description: Target instance type right-sizing method.
      title: CreateLaunchConfigurationTemplateRequest
      type: object
    ReplicationConfigurationDataPlaneRouting:
      enum:
      - PRIVATE_IP
      - PUBLIC_IP
      type: string
    ReplicationConfigurationDefaultLargeStagingDiskType:
      enum:
      - GP2
      - ST1
      - GP3
      type: string
    ReplicationConfigurationEbsEncryption:
      enum:
      - DEFAULT
      - CUSTOM
      type: string
    EC2InstanceType:
      maxLength: 255
      minLength: 0
      type: string
    ReplicationServersSecurityGroupsIDs:
      items:
        $ref: '#/components/schemas/SecurityGroupID'
      maxItems: 32
      minItems: 0
      type: array
    SubnetID:
      maxLength: 255
      minLength: 0
      pattern: "^subnet-[0-9a-fA-F]{8,}$"
      type: string
    CreateReplicationConfigurationTemplateRequest:
      example:
        ebsEncryption: ""
        stagingAreaSubnetId: ""
        useDedicatedReplicationServer: ""
        associateDefaultSecurityGroup: ""
        replicationServersSecurityGroupsIDs: ""
        replicationServerInstanceType: ""
        tags: ""
        dataPlaneRouting: ""
        ebsEncryptionKeyArn: ""
        bandwidthThrottling: ""
        createPublicIP: ""
        useFipsEndpoint: ""
        defaultLargeStagingDiskType: ""
        stagingAreaTags: ""
      properties:
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to associate the default Application Migration Service
              Security group with the Replication Settings template.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/BandwidthThrottling'
          - description: Request to configure bandwidth throttling during Replication
              Settings template creation.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to create Public IP during Replication Settings template
              creation.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          - description: Request to configure data plane routing during Replication
              Settings template creation.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          - description: Request to configure the default large staging disk EBS volume
              type during Replication Settings template creation.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          - description: Request to configure EBS encryption during Replication Settings
              template creation.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Request to configure an EBS encryption key during Replication
              Settings template creation.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Request to configure the Replication Server instance type
              during Replication Settings template creation.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          - description: Request to configure the Replication Server Security group
              ID during Replication Settings template creation.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          - description: Request to configure the Staging Area subnet ID during Replication
              Settings template creation.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Request to configure Staging Area tags during Replication
              Settings template creation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Request to configure tags during Replication Settings template
              creation.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to use Dedicated Replication Servers during Replication
              Settings template creation.
        useFipsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to use Fips Endpoint during Replication Settings
              template creation.
      required:
      - associateDefaultSecurityGroup
      - bandwidthThrottling
      - createPublicIP
      - dataPlaneRouting
      - defaultLargeStagingDiskType
      - ebsEncryption
      - replicationServerInstanceType
      - replicationServersSecurityGroupsIDs
      - stagingAreaSubnetId
      - stagingAreaTags
      - useDedicatedReplicationServer
      title: CreateReplicationConfigurationTemplateRequest
      type: object
    WaveDescription:
      maxLength: 600
      minLength: 0
      pattern: "^[^\\x00]*$"
      type: string
    WaveName:
      maxLength: 256
      minLength: 1
      pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
      type: string
    CreateWaveRequest:
      example:
        accountID: ""
        name: ""
        description: ""
        tags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        description:
          allOf:
          - $ref: '#/components/schemas/WaveDescription'
          - description: Wave description.
        name:
          allOf:
          - $ref: '#/components/schemas/WaveName'
          - description: Wave name.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Wave tags.
      required:
      - name
      title: CreateWaveRequest
      type: object
    DataReplicationErrorString:
      enum:
      - AGENT_NOT_SEEN
      - SNAPSHOTS_FAILURE
      - NOT_CONVERGING
      - UNSTABLE_NETWORK
      - FAILED_TO_CREATE_SECURITY_GROUP
      - FAILED_TO_LAUNCH_REPLICATION_SERVER
      - FAILED_TO_BOOT_REPLICATION_SERVER
      - FAILED_TO_AUTHENTICATE_WITH_SERVICE
      - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
      - FAILED_TO_CREATE_STAGING_DISKS
      - FAILED_TO_ATTACH_STAGING_DISKS
      - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
      - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
      - FAILED_TO_START_DATA_TRANSFER
      - UNSUPPORTED_VM_CONFIGURATION
      - LAST_SNAPSHOT_JOB_FAILED
      type: string
    LargeBoundedString:
      maxLength: 65536
      minLength: 0
      type: string
    DataReplicationError:
      description: Error in data replication.
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/DataReplicationErrorString'
          - description: Error in data replication.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          - description: Error in data replication.
      type: object
    DataReplicationInitiation:
      description: Data replication initiation.
      properties:
        nextAttemptDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to query next data initiation date and time.
        startDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to query data initiation start date and time.
        steps:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationSteps'
          - description: Request to query data initiation steps.
      type: object
    DataReplicationState:
      enum:
      - STOPPED
      - INITIATING
      - INITIAL_SYNC
      - BACKLOG
      - CREATING_SNAPSHOT
      - CONTINUOUS
      - PAUSED
      - RESCAN
      - STALLED
      - DISCONNECTED
      - PENDING_SNAPSHOT_SHIPPING
      - SHIPPING_SNAPSHOT
      type: string
    ISO8601DurationString:
      maxLength: 64
      minLength: 1
      type: string
    DataReplicationInfoReplicatedDisks:
      items:
        $ref: '#/components/schemas/DataReplicationInfoReplicatedDisk'
      maxItems: 60
      minItems: 0
      type: array
    DataReplicationInfo:
      description: Request data replication info.
      properties:
        dataReplicationError:
          $ref: '#/components/schemas/DataReplicationInfo_dataReplicationError'
        dataReplicationInitiation:
          $ref: '#/components/schemas/DataReplicationInfo_dataReplicationInitiation'
        dataReplicationState:
          allOf:
          - $ref: '#/components/schemas/DataReplicationState'
          - description: Request to query the data replication state.
        etaDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to query the time when data replication will be complete.
        lagDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DurationString'
          - description: Request to query data replication lag duration.
        lastSnapshotDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to query data replication last snapshot time.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInfoReplicatedDisks'
          - description: Request to query disks replicated.
      type: object
    DataReplicationInfoReplicatedDisk:
      description: Request to query disks replicated.
      properties:
        backloggedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Request to query data replication backlog size in bytes.
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Request to query device name.
        replicatedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Request to query amount of data replicated in bytes.
        rescannedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Request to query amount of data rescanned in bytes.
        totalStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Request to query total amount of data replicated in bytes.
      type: object
    DataReplicationInitiationSteps:
      items:
        $ref: '#/components/schemas/DataReplicationInitiationStep'
      type: array
    DataReplicationInitiationStepName:
      enum:
      - WAIT
      - CREATE_SECURITY_GROUP
      - LAUNCH_REPLICATION_SERVER
      - BOOT_REPLICATION_SERVER
      - AUTHENTICATE_WITH_SERVICE
      - DOWNLOAD_REPLICATION_SOFTWARE
      - CREATE_STAGING_DISKS
      - ATTACH_STAGING_DISKS
      - PAIR_REPLICATION_SERVER_WITH_AGENT
      - CONNECT_AGENT_TO_REPLICATION_SERVER
      - START_DATA_TRANSFER
      type: string
    DataReplicationInitiationStepStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - SKIPPED
      type: string
    DataReplicationInitiationStep:
      description: Data replication initiation step.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationStepName'
          - description: Request to query data initiation step name.
        status:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationStepStatus'
          - description: Request to query data initiation status.
      type: object
    DeleteApplicationRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
      required:
      - applicationID
      title: DeleteApplicationRequest
      type: object
    JobID:
      maxLength: 24
      minLength: 24
      pattern: "^mgnjob-[0-9a-zA-Z]{17}$"
      type: string
    DeleteJobRequest:
      example:
        accountID: ""
        jobID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to delete Job from service by Account ID.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Request to delete Job from service by Job ID.
      required:
      - jobID
      title: DeleteJobRequest
      type: object
    DeleteLaunchConfigurationTemplateRequest:
      example:
        launchConfigurationTemplateID: ""
      properties:
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: ID of resource to be deleted.
      required:
      - launchConfigurationTemplateID
      title: DeleteLaunchConfigurationTemplateRequest
      type: object
    DeleteReplicationConfigurationTemplateRequest:
      example:
        replicationConfigurationTemplateID: ""
      properties:
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          - description: Request to delete Replication Configuration Template from
              service by Replication Configuration Template ID.
      required:
      - replicationConfigurationTemplateID
      title: DeleteReplicationConfigurationTemplateRequest
      type: object
    DeleteSourceServerRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to delete Source Server from service by Account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Request to delete Source Server from service by Server ID.
      required:
      - sourceServerID
      title: DeleteSourceServerRequest
      type: object
    VcenterClientID:
      maxLength: 21
      minLength: 21
      pattern: "^vcc-[0-9a-zA-Z]{17}$"
      type: string
    DeleteVcenterClientRequest:
      example:
        vcenterClientID: ""
      properties:
        vcenterClientID:
          allOf:
          - $ref: '#/components/schemas/VcenterClientID'
          - description: ID of resource to be deleted.
      required:
      - vcenterClientID
      title: DeleteVcenterClientRequest
      type: object
    DeleteWaveRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - waveID
      title: DeleteWaveRequest
      type: object
    MaxResultsType:
      maximum: 1000
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 2048
      minLength: 0
      type: string
    DescribeJobLogItemsRequest:
      example:
        accountID: ""
        jobID: ""
        maxResults: ""
        nextToken: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to describe Job log Account ID.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Request to describe Job log job ID.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Request to describe Job log item maximum results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe Job log next token.
      required:
      - jobID
      title: DescribeJobLogItemsRequest
      type: object
    JobLogs:
      items:
        $ref: '#/components/schemas/JobLog'
      type: array
    DescribeJobsRequestFilters:
      description: Request to describe Job log filters.
      properties:
        fromDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to describe Job log filters by date.
        jobIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
          - description: Request to describe Job log filters by job ID.
        toDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to describe job log items by last date.
      type: object
    DescribeJobsRequest:
      example:
        accountID: ""
        maxResults: ""
        nextToken: ""
        filters:
          fromDate: ""
          jobIDs: ""
          toDate: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to describe job log items by Account ID.
        filters:
          $ref: '#/components/schemas/DescribeJobsRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Request to describe job log items by max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe job log items by next token.
      title: DescribeJobsRequest
      type: object
    JobsList:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    LaunchConfigurationTemplateIDs:
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplateID'
      maxItems: 200
      minItems: 0
      type: array
    DescribeLaunchConfigurationTemplatesRequest:
      example:
        launchConfigurationTemplateIDs: ""
        maxResults: ""
        nextToken: ""
      properties:
        launchConfigurationTemplateIDs:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateIDs'
          - description: Request to filter Launch Configuration Templates list by
              Launch Configuration Template ID.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Maximum results to be returned in DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next pagination token returned from DescribeLaunchConfigurationTemplates.
      title: DescribeLaunchConfigurationTemplatesRequest
      type: object
    LaunchConfigurationTemplates:
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplate'
      maxItems: 200
      minItems: 0
      type: array
    ReplicationConfigurationTemplateIDs:
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
      maxItems: 200
      minItems: 0
      type: array
    DescribeReplicationConfigurationTemplatesRequest:
      example:
        replicationConfigurationTemplateIDs: ""
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Request to describe Replication Configuration template by
              max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to describe Replication Configuration template by
              next token.
        replicationConfigurationTemplateIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateIDs'
          - description: Request to describe Replication Configuration template by
              template IDs.
      title: DescribeReplicationConfigurationTemplatesRequest
      type: object
    ReplicationConfigurationTemplates:
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplate'
      type: array
    DescribeSourceServersRequestFilters:
      description: Request to filter Source Servers list.
      properties:
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestApplicationIDs'
          - description: Request to filter Source Servers list by application IDs.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to filter Source Servers list by archived.
        lifeCycleStates:
          allOf:
          - $ref: '#/components/schemas/LifeCycleStates'
          - description: Request to filter Source Servers list by life cycle states.
        replicationTypes:
          allOf:
          - $ref: '#/components/schemas/ReplicationTypes'
          - description: Request to filter Source Servers list by replication type.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
          - description: Request to filter Source Servers list by Source Server ID.
      type: object
    DescribeSourceServersRequest:
      example:
        accountID: ""
        maxResults: ""
        nextToken: ""
        filters:
          isArchived: ""
          replicationTypes: ""
          sourceServerIDs: ""
          lifeCycleStates: ""
          applicationIDs: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to filter Source Servers list by Accoun ID.
        filters:
          $ref: '#/components/schemas/DescribeSourceServersRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Request to filter Source Servers list by maximum results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request to filter Source Servers list by next token.
      title: DescribeSourceServersRequest
      type: object
    SourceServersList:
      items:
        $ref: '#/components/schemas/SourceServer'
      type: array
    DescribeVcenterClientsRequest:
      properties: {}
      title: DescribeVcenterClientsRequest
      type: object
    VcenterClientList:
      items:
        $ref: '#/components/schemas/VcenterClient'
      type: array
    DisassociateApplicationsRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/ApplicationIDs'
          - description: Application IDs list.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - applicationIDs
      - waveID
      title: DisassociateApplicationsRequest
      type: object
    DisassociateSourceServersRequestSourceServerIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 50
      minItems: 1
      type: array
    DisassociateSourceServersRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/DisassociateSourceServersRequestSourceServerIDs'
          - description: Source server IDs list.
      required:
      - applicationID
      - sourceServerIDs
      title: DisassociateSourceServersRequest
      type: object
    DisconnectFromServiceRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to disconnect Source Server from service by Account
              ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Request to disconnect Source Server from service by Server
              ID.
      required:
      - sourceServerID
      title: DisconnectFromServiceRequest
      type: object
    Disk:
      description: The disk identifier.
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: The amount of storage on the disk in bytes.
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: The disk or device name.
      type: object
    Disks:
      items:
        $ref: '#/components/schemas/Disk'
      maxItems: 1000
      minItems: 0
      type: array
    DocumentVersion:
      pattern: "^(\\$DEFAULT|\\$LATEST|[0-9]+)$"
      type: string
    EC2InstanceID:
      maxLength: 255
      minLength: 0
      pattern: "^i-[0-9a-fA-F]{8,}$"
      type: string
    EC2LaunchConfigurationTemplateID:
      maxLength: 20
      minLength: 20
      pattern: "^lt-[0-9a-z]{17}$"
      type: string
    ExportErrorData:
      description: Export errors data.
      properties:
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          - description: Export errors data raw error.
      type: object
    ExportTaskError:
      description: Export task error.
      properties:
        errorData:
          $ref: '#/components/schemas/ExportTaskError_errorData'
        errorDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Export task error datetime.
      type: object
    ExportErrors:
      items:
        $ref: '#/components/schemas/ExportTaskError'
      type: array
    ExportID:
      maxLength: 24
      minLength: 24
      pattern: "^export-[0-9a-zA-Z]{17}$"
      type: string
    ExportStatus:
      enum:
      - PENDING
      - STARTED
      - FAILED
      - SUCCEEDED
      type: string
    Float:
      format: float
      type: number
    ExportTaskSummary:
      description: Export task summary.
      properties:
        applicationsCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Export task summary applications count.
        serversCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Export task summary servers count.
        wavesCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Export task summary waves count.
      type: object
    ExportTask:
      description: Export task.
      properties:
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Export task creation datetime.
        endDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Export task end datetime.
        exportID:
          allOf:
          - $ref: '#/components/schemas/ExportID'
          - description: Export task id.
        progressPercentage:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: Export task progress percentage.
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: Export task s3 bucket.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Export task s3 bucket owner.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: Export task s3 key.
        status:
          allOf:
          - $ref: '#/components/schemas/ExportStatus'
          - description: Export task status.
        summary:
          $ref: '#/components/schemas/ExportTask_summary'
      type: object
    ExportsList:
      items:
        $ref: '#/components/schemas/ExportTask'
      type: array
    FinalizeCutoverRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to finalize Cutover by Source Account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Request to finalize Cutover by Source Server ID.
      required:
      - sourceServerID
      title: FinalizeCutoverRequest
      type: object
    FirstBoot:
      enum:
      - WAITING
      - SUCCEEDED
      - UNKNOWN
      - STOPPED
      type: string
    GetLaunchConfigurationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to get Launch Configuration information by Account
              ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Request to get Launch Configuration information by Source
              Server ID.
      required:
      - sourceServerID
      title: GetLaunchConfigurationRequest
      type: object
    GetReplicationConfigurationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request to get Replication Configuration by Account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Request to get Replication Configuration by Source Server
              ID.
      required:
      - sourceServerID
      title: GetReplicationConfigurationRequest
      type: object
    IPsList:
      items:
        $ref: '#/components/schemas/BoundedString'
      type: array
    IdentificationHints:
      description: Identification hints.
      properties:
        awsInstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          - description: AWS Instance ID identification hint.
        fqdn:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: FQDN address identification hint.
        hostname:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Hostname identification hint.
        vmPath:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: vCenter VM path identification hint.
        vmWareUuid:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: vmWare UUID identification hint.
      type: object
    ImportErrorData:
      description: Import error data.
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Import error data source account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Import error data application ID.
        ec2LaunchTemplateID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Import error data ec2 LaunchTemplate ID.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          - description: Import error data raw error.
        rowNumber:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import error data row number.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Import error data source server ID.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Import error data wave id.
      type: object
    ImportErrorType:
      enum:
      - VALIDATION_ERROR
      - PROCESSING_ERROR
      type: string
    ImportTaskError:
      description: Import task error.
      properties:
        errorData:
          $ref: '#/components/schemas/ImportTaskError_errorData'
        errorDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Import task error datetime.
        errorType:
          allOf:
          - $ref: '#/components/schemas/ImportErrorType'
          - description: Import task error type.
      type: object
    ImportErrors:
      items:
        $ref: '#/components/schemas/ImportTaskError'
      type: array
    ImportID:
      maxLength: 24
      minLength: 24
      pattern: "^import-[0-9a-zA-Z]{17}$"
      type: string
    ImportTask:
      description: Import task.
      properties:
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Import task creation datetime.
        endDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Import task end datetime.
        importID:
          allOf:
          - $ref: '#/components/schemas/ImportID'
          - description: Import task id.
        progressPercentage:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: Import task progress percentage.
        s3BucketSource:
          $ref: '#/components/schemas/ImportTask_s3BucketSource'
        status:
          allOf:
          - $ref: '#/components/schemas/ImportStatus'
          - description: Import task status.
        summary:
          $ref: '#/components/schemas/ImportTask_summary'
      type: object
    ImportList:
      items:
        $ref: '#/components/schemas/ImportTask'
      type: array
    ImportStatus:
      enum:
      - PENDING
      - STARTED
      - FAILED
      - SUCCEEDED
      type: string
    S3BucketSource:
      description: S3 bucket source.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: S3 bucket source s3 bucket.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: S3 bucket source s3 bucket owner.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: S3 bucket source s3 key.
      required:
      - s3Bucket
      - s3Key
      type: object
    ImportTaskSummary:
      description: Import task summary.
      properties:
        applications:
          $ref: '#/components/schemas/ImportTaskSummary_applications'
        servers:
          $ref: '#/components/schemas/ImportTaskSummary_servers'
        waves:
          $ref: '#/components/schemas/ImportTaskSummary_waves'
      type: object
    ImportTaskSummaryApplications:
      description: Import task summary applications.
      properties:
        createdCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summary applications created count.
        modifiedCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summary applications modified count.
      type: object
    ImportTaskSummaryServers:
      description: Import task summary servers.
      properties:
        createdCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summary servers created count.
        modifiedCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summary servers modified count.
      type: object
    ImportTaskSummaryWaves:
      description: Import task summery waves.
      properties:
        createdCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summery waves created count.
        modifiedCount:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Import task summery waves modified count.
      type: object
    InitializeServiceRequest:
      properties: {}
      title: InitializeServiceRequest
      type: object
    InitiatedBy:
      enum:
      - START_TEST
      - START_CUTOVER
      - DIAGNOSTIC
      - TERMINATE
      type: string
    JmesPathString:
      maxLength: 1011
      minLength: 1
      pattern: "^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_\\[\\]]+)*$"
      type: string
    ParticipatingServers:
      items:
        $ref: '#/components/schemas/ParticipatingServer'
      type: array
    JobStatus:
      enum:
      - PENDING
      - STARTED
      - COMPLETED
      type: string
    JobType:
      enum:
      - LAUNCH
      - TERMINATE
      type: string
    Job:
      description: Job.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: the ARN of the specific Job.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Job creation time.
        endDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Job end time.
        initiatedBy:
          allOf:
          - $ref: '#/components/schemas/InitiatedBy'
          - description: Job initiated by field.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Job ID.
        participatingServers:
          allOf:
          - $ref: '#/components/schemas/ParticipatingServers'
          - description: Servers participating in a specific Job.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: Job status.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags associated with specific Job.
        type:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: Job type.
      required:
      - jobID
      type: object
    JobLogEvent:
      enum:
      - JOB_START
      - SERVER_SKIPPED
      - CLEANUP_START
      - CLEANUP_END
      - CLEANUP_FAIL
      - SNAPSHOT_START
      - SNAPSHOT_END
      - SNAPSHOT_FAIL
      - USING_PREVIOUS_SNAPSHOT
      - CONVERSION_START
      - CONVERSION_END
      - CONVERSION_FAIL
      - LAUNCH_START
      - LAUNCH_FAILED
      - JOB_CANCEL
      - JOB_END
      type: string
    JobLogEventData:
      description: Job log data
      properties:
        conversionServerID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          - description: Job Event conversion Server ID.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          - description: Job error.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Job Event Source Server ID.
        targetInstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          - description: Job Event Target instance ID.
      type: object
    JobLog:
      description: Job log.
      properties:
        event:
          allOf:
          - $ref: '#/components/schemas/JobLogEvent'
          - description: Job log event.
        eventData:
          $ref: '#/components/schemas/JobLog_eventData'
        logDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Job log event date and time.
      type: object
    PostLaunchActionExecutionStatus:
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      type: string
    SsmDocument:
      description: AWS Systems Manager Document.
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: User-friendly name for the AWS Systems Manager Document.
        externalParameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentExternalParameters'
          - description: AWS Systems Manager Document external parameters.
        mustSucceedForCutover:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, Cutover will not be enabled if the document has\
              \ failed."
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentParameters'
          - description: AWS Systems Manager Document parameters.
        ssmDocumentName:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentName'
          - description: AWS Systems Manager Document name or full ARN.
        timeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          - description: AWS Systems Manager Document timeout seconds.
      required:
      - actionName
      - ssmDocumentName
      type: object
    SsmDocumentType:
      enum:
      - AUTOMATION
      - COMMAND
      type: string
    JobPostLaunchActionsLaunchStatus:
      description: Launch Status of the Job Post Launch Actions.
      properties:
        executionID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: AWS Systems Manager Document's execution ID of the of the
              Job Post Launch Actions.
        executionStatus:
          allOf:
          - $ref: '#/components/schemas/PostLaunchActionExecutionStatus'
          - description: AWS Systems Manager Document's execution status.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: AWS Systems Manager Document's failure reason.
        ssmDocument:
          $ref: '#/components/schemas/JobPostLaunchActionsLaunchStatus_ssmDocument'
        ssmDocumentType:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentType'
          - description: AWS Systems Manager Document type.
      type: object
    SmallBoundedString:
      maxLength: 128
      minLength: 0
      type: string
    LaunchStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - LAUNCHED
      - FAILED
      - TERMINATED
      type: string
    LaunchedInstance:
      description: Launched instance.
      properties:
        ec2InstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          - description: Launched instance EC2 ID.
        firstBoot:
          allOf:
          - $ref: '#/components/schemas/FirstBoot'
          - description: Launched instance first boot.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Launched instance Job ID.
      type: object
    LifeCycleLastCutover:
      description: Lifecycle last Cutover .
      properties:
        finalized:
          $ref: '#/components/schemas/LifeCycleLastCutover_finalized'
        initiated:
          $ref: '#/components/schemas/LifeCycleLastCutover_initiated'
        reverted:
          $ref: '#/components/schemas/LifeCycleLastCutover_reverted'
      type: object
    LifeCycleLastTest:
      description: Lifecycle last Test.
      properties:
        finalized:
          $ref: '#/components/schemas/LifeCycleLastTest_finalized'
        initiated:
          $ref: '#/components/schemas/LifeCycleLastTest_initiated'
        reverted:
          $ref: '#/components/schemas/LifeCycleLastTest_reverted'
      type: object
    LifeCycleState:
      enum:
      - STOPPED
      - NOT_READY
      - READY_FOR_TEST
      - TESTING
      - READY_FOR_CUTOVER
      - CUTTING_OVER
      - CUTOVER
      - DISCONNECTED
      - DISCOVERED
      - PENDING_INSTALLATION
      type: string
    LifeCycle:
      description: Lifecycle.
      properties:
        addedToServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle added to service data and time.
        elapsedReplicationDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DurationString'
          - description: Lifecycle elapsed time and duration.
        firstByteDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle replication initiation date and time.
        lastCutover:
          $ref: '#/components/schemas/LifeCycle_lastCutover'
        lastSeenByServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle last seen date and time.
        lastTest:
          $ref: '#/components/schemas/LifeCycle_lastTest'
        state:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          - description: Lifecycle state.
      type: object
    LifeCycleLastCutoverFinalized:
      description: Lifecycle Cutover finalized
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle Cutover finalized date and time.
      type: object
    LifeCycleLastCutoverInitiated:
      description: Lifecycle last Cutover initiated.
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: <p/>
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Lifecycle last Cutover initiated by Job ID.
      type: object
    LifeCycleLastCutoverReverted:
      description: Lifecycle last Cutover reverted.
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle last Cutover reverted API call date time.
      type: object
    LifeCycleLastTestFinalized:
      description: Lifecycle last Test finalized.
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle Test failed API call date and time.
      type: object
    LifeCycleLastTestInitiated:
      description: Lifecycle last Test initiated.
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle last Test initiated API call date and time.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          - description: Lifecycle last Test initiated Job ID.
      type: object
    LifeCycleLastTestReverted:
      description: Lifecycle last Test reverted.
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Lifecycle last Test reverted API call date and time.
      type: object
    ListApplicationsRequestFilters:
      description: Applications list filters.
      properties:
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/ApplicationIDsFilter'
          - description: Filter applications list by application ID.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Filter applications list by archival status.
        waveIDs:
          allOf:
          - $ref: '#/components/schemas/WaveIDsFilter'
          - description: Filter applications list by wave ID.
      type: object
    ListApplicationsRequest:
      example:
        accountID: ""
        maxResults: ""
        nextToken: ""
        filters:
          isArchived: ""
          waveIDs: ""
          applicationIDs: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Applications list Account ID.
        filters:
          $ref: '#/components/schemas/ListApplicationsRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Maximum results to return when listing applications.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request next token.
      title: ListApplicationsRequest
      type: object
    ListExportErrorsRequest:
      description: List export errors request.
      example:
        maxResults: ""
        nextToken: ""
        exportID: ""
      properties:
        exportID:
          allOf:
          - $ref: '#/components/schemas/ExportID'
          - description: List export errors request export id.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: List export errors request max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List export errors request next token.
      required:
      - exportID
      title: ListExportErrorsRequest
      type: object
    ListExportsRequestFilters:
      description: List exports request filters.
      example:
        exportIDs: ""
      properties:
        exportIDs:
          allOf:
          - $ref: '#/components/schemas/ListExportsRequestFiltersExportIDs'
          - description: List exports request filters export ids.
      type: object
    ListExportsRequest:
      description: List export request.
      example:
        maxResults: ""
        nextToken: ""
        filters:
          exportIDs: ""
      properties:
        filters:
          $ref: '#/components/schemas/ListExportsRequestFilters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: List export request max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List export request next token.
      title: ListExportsRequest
      type: object
    ListImportErrorsRequest:
      description: List import errors request.
      example:
        importID: ""
        maxResults: ""
        nextToken: ""
      properties:
        importID:
          allOf:
          - $ref: '#/components/schemas/ImportID'
          - description: List import errors request import id.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: List import errors request max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List import errors request next token.
      required:
      - importID
      title: ListImportErrorsRequest
      type: object
    ListImportsRequestFilters:
      description: List imports request filters.
      properties:
        importIDs:
          allOf:
          - $ref: '#/components/schemas/ImportIDsFilter'
          - description: List imports request filters import IDs.
      type: object
    ListImportsRequest:
      description: List imports request.
      example:
        maxResults: ""
        nextToken: ""
        filters:
          importIDs: ""
      properties:
        filters:
          $ref: '#/components/schemas/ListImportsRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: List imports request max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List imports request next token.
      title: ListImportsRequest
      type: object
    ListManagedAccountsRequest:
      description: List managed accounts request.
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: List managed accounts request max results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: List managed accounts request next token.
      title: ListManagedAccountsRequest
      type: object
    ManagedAccounts:
      items:
        $ref: '#/components/schemas/ManagedAccount'
      maxItems: 1000
      minItems: 0
      type: array
    SourceServerActionsRequestFilters:
      description: Source server post migration custom action filters.
      properties:
        actionIDs:
          allOf:
          - $ref: '#/components/schemas/ActionIDs'
          - description: Action IDs to filter source server post migration custom
              actions by.
      type: object
    ListSourceServerActionsRequest:
      example:
        accountID: ""
        sourceServerID: ""
        maxResults: ""
        nextToken: ""
        filters:
          actionIDs: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID to return when listing source server post migration
              custom actions.
        filters:
          $ref: '#/components/schemas/ListSourceServerActionsRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Maximum amount of items to return when listing source server
              post migration custom actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next token to use when listing source server post migration
              custom actions.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Source server ID.
      required:
      - sourceServerID
      title: ListSourceServerActionsRequest
      type: object
    SourceServerActionDocuments:
      items:
        $ref: '#/components/schemas/SourceServerActionDocument'
      maxItems: 100
      minItems: 0
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    TemplateActionsRequestFilters:
      description: Template post migration custom action filters.
      properties:
        actionIDs:
          allOf:
          - $ref: '#/components/schemas/ActionIDs'
          - description: Action IDs to filter template post migration custom actions
              by.
      type: object
    ListTemplateActionsRequest:
      example:
        maxResults: ""
        nextToken: ""
        filters:
          actionIDs: ""
        launchConfigurationTemplateID: ""
      properties:
        filters:
          $ref: '#/components/schemas/ListTemplateActionsRequest_filters'
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: Launch configuration template ID.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Maximum amount of items to return when listing template post
              migration custom actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Next token to use when listing template post migration custom
              actions.
      required:
      - launchConfigurationTemplateID
      title: ListTemplateActionsRequest
      type: object
    TemplateActionDocuments:
      items:
        $ref: '#/components/schemas/TemplateActionDocument'
      maxItems: 100
      minItems: 0
      type: array
    ListWavesRequestFilters:
      description: Waves list filters.
      properties:
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Filter waves list by archival status.
        waveIDs:
          allOf:
          - $ref: '#/components/schemas/WaveIDsFilter'
          - description: Filter waves list by wave ID.
      type: object
    ListWavesRequest:
      example:
        accountID: ""
        maxResults: ""
        nextToken: ""
        filters:
          isArchived: ""
          waveIDs: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Request account ID.
        filters:
          $ref: '#/components/schemas/ListWavesRequest_filters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          - description: Maximum results to return when listing waves.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Request next token.
      title: ListWavesRequest
      type: object
    WavesList:
      items:
        $ref: '#/components/schemas/Wave'
      type: array
    ManagedAccount:
      description: Managed account.
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: "Managed account, account ID."
      type: object
    MarkAsArchivedRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Mark as archived by Account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Mark as archived by Source Server ID.
      required:
      - sourceServerID
      title: MarkAsArchivedRequest
      type: object
    NetworkInterface:
      description: Network interface.
      properties:
        ips:
          allOf:
          - $ref: '#/components/schemas/IPsList'
          - description: Network interface IPs.
        isPrimary:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Network interface primary IP.
        macAddress:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Network interface Mac address.
      type: object
    NetworkInterfaces:
      items:
        $ref: '#/components/schemas/NetworkInterface'
      maxItems: 32
      minItems: 0
      type: array
    OS:
      description: Operating System.
      properties:
        fullString:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: OS full string.
      type: object
    OperatingSystemString:
      pattern: ^(linux|windows)$
      type: string
    OrderType:
      maximum: 10000
      minimum: 1001
      type: integer
    PostLaunchActionsStatus:
      description: Status of the Post Launch Actions running on the Test or Cutover
        instance.
      properties:
        postLaunchActionsLaunchStatusList:
          allOf:
          - $ref: '#/components/schemas/PostLaunchActionsLaunchStatusList'
          - description: List of Post Launch Action status.
        ssmAgentDiscoveryDatetime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Time where the AWS Systems Manager was detected as running
              on the Test or Cutover instance.
      type: object
    ParticipatingServer:
      description: Server participating in Job.
      properties:
        launchStatus:
          allOf:
          - $ref: '#/components/schemas/LaunchStatus'
          - description: Participating server launch status.
        launchedEc2InstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          - description: Participating server's launched ec2 instance ID.
        postLaunchActionsStatus:
          $ref: '#/components/schemas/ParticipatingServer_postLaunchActionsStatus'
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Participating server Source Server ID.
      required:
      - sourceServerID
      type: object
    PauseReplicationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Pause Replication Request account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Pause Replication Request source server ID.
      required:
      - sourceServerID
      title: PauseReplicationRequest
      type: object
    PostLaunchActionsLaunchStatusList:
      items:
        $ref: '#/components/schemas/JobPostLaunchActionsLaunchStatus'
      type: array
    SsmDocumentExternalParameters:
      additionalProperties:
        $ref: '#/components/schemas/SsmExternalParameter'
      maxProperties: 20
      minProperties: 0
      type: object
    SsmDocumentParameters:
      additionalProperties:
        $ref: '#/components/schemas/SsmParameterStoreParameters'
      maxProperties: 20
      minProperties: 0
      type: object
    StrictlyPositiveInteger:
      minimum: 1
      type: integer
    PutSourceServerActionRequest:
      example:
        documentIdentifier: ""
        externalParameters: ""
        active: ""
        description: ""
        documentVersion: ""
        accountID: ""
        sourceServerID: ""
        actionID: ""
        timeoutSeconds: ""
        mustSucceedForCutover: ""
        category: ""
        parameters: ""
        actionName: ""
        order: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Source server post migration custom account ID.
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Source server post migration custom action ID.
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: Source server post migration custom action name.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Source server post migration custom action active status.
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: Source server post migration custom action category.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: Source server post migration custom action description.
        documentIdentifier:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Source server post migration custom action document identifier.
        documentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: Source server post migration custom action document version.
        externalParameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentExternalParameters'
          - description: Source server post migration custom action external parameters.
        mustSucceedForCutover:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Source server post migration custom action must succeed for
              cutover.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          - description: Source server post migration custom action order.
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentParameters'
          - description: Source server post migration custom action parameters.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Source server ID.
        timeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          - description: Source server post migration custom action timeout in seconds.
      required:
      - actionID
      - actionName
      - documentIdentifier
      - order
      - sourceServerID
      title: PutSourceServerActionRequest
      type: object
    PutTemplateActionRequest:
      example:
        documentIdentifier: ""
        externalParameters: ""
        active: ""
        description: ""
        launchConfigurationTemplateID: ""
        operatingSystem: ""
        documentVersion: ""
        actionID: ""
        timeoutSeconds: ""
        mustSucceedForCutover: ""
        category: ""
        parameters: ""
        actionName: ""
        order: ""
      properties:
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Template post migration custom action ID.
        actionName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Template post migration custom action name.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Template post migration custom action active status.
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: Template post migration custom action category.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: Template post migration custom action description.
        documentIdentifier:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Template post migration custom action document identifier.
        documentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: Template post migration custom action document version.
        externalParameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentExternalParameters'
          - description: Template post migration custom action external parameters.
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: Launch configuration template ID.
        mustSucceedForCutover:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Template post migration custom action must succeed for cutover.
        operatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystemString'
          - description: Operating system eligible for this template post migration
              custom action.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          - description: Template post migration custom action order.
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentParameters'
          - description: Template post migration custom action parameters.
        timeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          - description: Template post migration custom action timeout in seconds.
      required:
      - actionID
      - actionName
      - documentIdentifier
      - launchConfigurationTemplateID
      - order
      title: PutTemplateActionRequest
      type: object
    RemoveSourceServerActionRequest:
      example:
        accountID: ""
        sourceServerID: ""
        actionID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Source server post migration account ID.
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Source server post migration custom action ID to remove.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Source server ID of the post migration custom action to remove.
      required:
      - actionID
      - sourceServerID
      title: RemoveSourceServerActionRequest
      type: object
    RemoveTemplateActionRequest:
      example:
        actionID: ""
        launchConfigurationTemplateID: ""
      properties:
        actionID:
          allOf:
          - $ref: '#/components/schemas/ActionID'
          - description: Template post migration custom action ID to remove.
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: Launch configuration template ID of the post migration custom
              action to remove.
      required:
      - actionID
      - launchConfigurationTemplateID
      title: RemoveTemplateActionRequest
      type: object
    ReplicationConfigurationReplicatedDisks:
      items:
        $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
      maxItems: 60
      minItems: 0
      type: array
    ReplicationConfigurationReplicatedDiskStagingDiskType:
      enum:
      - AUTO
      - GP2
      - IO1
      - SC1
      - ST1
      - STANDARD
      - GP3
      - IO2
      type: string
    ReplicationType:
      enum:
      - AGENT_BASED
      - SNAPSHOT_SHIPPING
      type: string
    ResumeReplicationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Resume Replication Request account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Resume Replication Request source server ID.
      required:
      - sourceServerID
      title: ResumeReplicationRequest
      type: object
    RetryDataReplicationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Retry data replication for Account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Retry data replication for Source Server ID.
      required:
      - sourceServerID
      title: RetryDataReplicationRequest
      type: object
    SourceProperties:
      description: Source server properties.
      properties:
        cpus:
          allOf:
          - $ref: '#/components/schemas/Cpus'
          - description: Source Server CPUs.
        disks:
          allOf:
          - $ref: '#/components/schemas/Disks'
          - description: Source Server disks.
        identificationHints:
          $ref: '#/components/schemas/SourceProperties_identificationHints'
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Source server last update date and time.
        networkInterfaces:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaces'
          - description: Source server network interfaces.
        os:
          $ref: '#/components/schemas/SourceProperties_os'
        ramBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Source server RAM in bytes.
        recommendedInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Source server recommended instance type.
      type: object
    SsmDocumentName:
      maxLength: 172
      minLength: 3
      pattern: "^([A-Za-z0-9/:_\\.-])+$"
      type: string
    SsmDocumentParameterName:
      maxLength: 1011
      minLength: 1
      pattern: "^([A-Za-z0-9])+$"
      type: string
    SsmParameterStoreParameterName:
      maxLength: 1011
      minLength: 1
      pattern: "^([A-Za-z0-9_\\.-])+$"
      type: string
    SsmParameterStoreParameterType:
      enum:
      - STRING
      type: string
    SsmParameterStoreParameter:
      description: AWS Systems Manager Parameter Store parameter.
      properties:
        parameterName:
          allOf:
          - $ref: '#/components/schemas/SsmParameterStoreParameterName'
          - description: AWS Systems Manager Parameter Store parameter name.
        parameterType:
          allOf:
          - $ref: '#/components/schemas/SsmParameterStoreParameterType'
          - description: AWS Systems Manager Parameter Store parameter type.
      required:
      - parameterName
      - parameterType
      type: object
    StartCutoverRequestSourceServerIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 200
      minItems: 1
      type: array
    StartCutoverRequest:
      example:
        accountID: ""
        sourceServerIDs: ""
        tags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Start Cutover by Account IDs
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/StartCutoverRequestSourceServerIDs'
          - description: Start Cutover by Source Server IDs.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Start Cutover by Tags.
      required:
      - sourceServerIDs
      title: StartCutoverRequest
      type: object
    StartExportRequest:
      description: Start export request.
      example:
        s3Key: ""
        s3BucketOwner: ""
        s3Bucket: ""
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: Start export request s3 bucket.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Start export request s3 bucket owner.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: Start export request s3key.
      required:
      - s3Bucket
      - s3Key
      title: StartExportRequest
      type: object
    StartImportRequest:
      description: Start import request.
      example:
        clientToken: ""
        s3BucketSource:
          s3Key: ""
          s3BucketOwner: ""
          s3Bucket: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientIdempotencyToken'
          - description: Start import request client token.
        s3BucketSource:
          $ref: '#/components/schemas/StartImportRequest_s3BucketSource'
      required:
      - s3BucketSource
      title: StartImportRequest
      type: object
    StartReplicationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID on which to start replication.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: ID of source server on which to start replication.
      required:
      - sourceServerID
      title: StartReplicationRequest
      type: object
    StartTestRequestSourceServerIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 200
      minItems: 1
      type: array
    StartTestRequest:
      example:
        accountID: ""
        sourceServerIDs: ""
        tags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Start Test for Account ID.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/StartTestRequestSourceServerIDs'
          - description: Start Test for Source Server IDs.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Start Test by Tags.
      required:
      - sourceServerIDs
      title: StartTestRequest
      type: object
    StopReplicationRequest:
      example:
        accountID: ""
        sourceServerID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Stop Replication Request account ID.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Stop Replication Request source server ID.
      required:
      - sourceServerID
      title: StopReplicationRequest
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tag resource by Tags.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TerminateTargetInstancesRequestSourceServerIDs:
      items:
        $ref: '#/components/schemas/SourceServerID'
      maxItems: 200
      minItems: 1
      type: array
    TerminateTargetInstancesRequest:
      example:
        accountID: ""
        sourceServerIDs: ""
        tags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Terminate Target instance by Account ID
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/TerminateTargetInstancesRequestSourceServerIDs'
          - description: Terminate Target instance by Source Server IDs.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Terminate Target instance by Tags.
      required:
      - sourceServerIDs
      title: TerminateTargetInstancesRequest
      type: object
    UnarchiveApplicationRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
      required:
      - applicationID
      title: UnarchiveApplicationRequest
      type: object
    UnarchiveWaveRequest:
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - waveID
      title: UnarchiveWaveRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateApplicationRequest:
      example:
        accountID: ""
        name: ""
        description: ""
        applicationID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        applicationID:
          allOf:
          - $ref: '#/components/schemas/ApplicationID'
          - description: Application ID.
        description:
          allOf:
          - $ref: '#/components/schemas/ApplicationDescription'
          - description: Application description.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          - description: Application name.
      required:
      - applicationID
      title: UpdateApplicationRequest
      type: object
    UpdateLaunchConfigurationRequest:
      example:
        accountID: ""
        enableMapAutoTagging: ""
        copyPrivateIp: ""
        sourceServerID: ""
        name: ""
        copyTags: ""
        targetInstanceTypeRightSizingMethod: ""
        mapAutoTaggingMpeID: ""
        launchDisposition: ""
        bootMode: ""
        licensing:
          osByol: ""
        postLaunchActions:
          s3OutputKeyPrefix: ""
          ssmDocuments: ""
          s3LogBucket: ""
          cloudWatchLogGroupName: ""
          deployment: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Update Launch configuration Account ID.
        bootMode:
          allOf:
          - $ref: '#/components/schemas/BootMode'
          - description: Update Launch configuration boot mode request.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update Launch configuration copy Private IP request.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update Launch configuration copy Tags request.
        enableMapAutoTagging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable map auto tagging.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          - description: Update Launch configuration launch disposition request.
        licensing:
          $ref: '#/components/schemas/UpdateLaunchConfigurationRequest_licensing'
        mapAutoTaggingMpeID:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Launch configuration map auto tagging MPE ID.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          - description: Update Launch configuration name request.
        postLaunchActions:
          $ref: '#/components/schemas/PostLaunchActions'
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Update Launch configuration by Source Server ID request.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          - description: Update Launch configuration Target instance right sizing
              request.
      required:
      - sourceServerID
      title: UpdateLaunchConfigurationRequest
      type: object
    UpdateLaunchConfigurationTemplateRequest:
      example:
        copyPrivateIp: ""
        launchConfigurationTemplateID: ""
        launchDisposition: ""
        bootMode: ""
        enableMapAutoTagging: ""
        smallVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
        smallVolumeMaxSize: ""
        copyTags: ""
        targetInstanceTypeRightSizingMethod: ""
        associatePublicIpAddress: ""
        mapAutoTaggingMpeID: ""
        licensing:
          osByol: ""
        postLaunchActions:
          s3OutputKeyPrefix: ""
          ssmDocuments: ""
          s3LogBucket: ""
          cloudWatchLogGroupName: ""
          deployment: ""
        largeVolumeConf:
          volumeType: ""
          iops: ""
          throughput: ""
      properties:
        associatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Associate public Ip address.
        bootMode:
          allOf:
          - $ref: '#/components/schemas/BootMode'
          - description: Launch configuration template boot mode.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy private Ip.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Copy tags.
        enableMapAutoTagging:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enable map auto tagging.
        largeVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_largeVolumeConf'
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          - description: Launch Configuration Template ID.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          - description: Launch disposition.
        licensing:
          $ref: '#/components/schemas/Licensing'
        mapAutoTaggingMpeID:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: Launch configuration template map auto tagging MPE ID.
        postLaunchActions:
          $ref: '#/components/schemas/UpdateLaunchConfigurationTemplateRequest_postLaunchActions'
        smallVolumeConf:
          $ref: '#/components/schemas/LaunchConfigurationTemplate_smallVolumeConf'
        smallVolumeMaxSize:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Small volume maximum size.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          - description: Target instance type right-sizing method.
      required:
      - launchConfigurationTemplateID
      title: UpdateLaunchConfigurationTemplateRequest
      type: object
    UpdateReplicationConfigurationRequest:
      example:
        ebsEncryption: ""
        stagingAreaSubnetId: ""
        useDedicatedReplicationServer: ""
        associateDefaultSecurityGroup: ""
        replicationServersSecurityGroupsIDs: ""
        replicationServerInstanceType: ""
        dataPlaneRouting: ""
        ebsEncryptionKeyArn: ""
        accountID: ""
        bandwidthThrottling: ""
        createPublicIP: ""
        sourceServerID: ""
        replicatedDisks: ""
        name: ""
        useFipsEndpoint: ""
        defaultLargeStagingDiskType: ""
        stagingAreaTags: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Update replication configuration Account ID request.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration associate default Application
              Migration Service Security group request.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/BandwidthThrottling'
          - description: Update replication configuration bandwidth throttling request.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration create Public IP request.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          - description: Update replication configuration data plane routing request.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          - description: Update replication configuration use default large Staging
              Disk type request.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          - description: Update replication configuration EBS encryption request.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Update replication configuration EBS encryption key ARN request.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          - description: Update replication configuration name request.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          - description: Update replication configuration replicated disks request.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Update replication configuration Replication Server instance
              type request.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          - description: Update replication configuration Replication Server Security
              Groups IDs request.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: Update replication configuration Source Server ID request.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          - description: Update replication configuration Staging Area subnet request.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Update replication configuration Staging Area Tags request.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration use dedicated Replication
              Server request.
        useFipsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration use Fips Endpoint.
      required:
      - sourceServerID
      title: UpdateReplicationConfigurationRequest
      type: object
    UpdateReplicationConfigurationTemplateRequest:
      example:
        ebsEncryption: ""
        stagingAreaSubnetId: ""
        useDedicatedReplicationServer: ""
        associateDefaultSecurityGroup: ""
        replicationServersSecurityGroupsIDs: ""
        replicationServerInstanceType: ""
        dataPlaneRouting: ""
        ebsEncryptionKeyArn: ""
        bandwidthThrottling: ""
        createPublicIP: ""
        replicationConfigurationTemplateID: ""
        arn: ""
        useFipsEndpoint: ""
        defaultLargeStagingDiskType: ""
        stagingAreaTags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Update replication configuration template ARN request.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration template associate default
              Application Migration Service Security group request.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/BandwidthThrottling'
          - description: Update replication configuration template bandwidth throttling
              request.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration template create Public IP
              request.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          - description: Update replication configuration template data plane routing
              request.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          - description: Update replication configuration template use default large
              Staging Disk type request.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          - description: Update replication configuration template EBS encryption
              request.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Update replication configuration template EBS encryption
              key ARN request.
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          - description: Update replication configuration template template ID request.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          - description: Update replication configuration template Replication Server
              instance type request.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          - description: Update replication configuration template Replication Server
              Security groups IDs request.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          - description: Update replication configuration template Staging Area subnet
              ID request.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Update replication configuration template Staging Area Tags
              request.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration template use dedicated Replication
              Server request.
        useFipsEndpoint:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Update replication configuration template use Fips Endpoint
              request.
      required:
      - replicationConfigurationTemplateID
      title: UpdateReplicationConfigurationTemplateRequest
      type: object
    UpdateSourceServerReplicationTypeRequest:
      example:
        accountID: ""
        sourceServerID: ""
        replicationType: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID on which to update replication type.
        replicationType:
          allOf:
          - $ref: '#/components/schemas/ReplicationType'
          - description: Replication type to which to update source server.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          - description: ID of source server on which to update replication type.
      required:
      - replicationType
      - sourceServerID
      title: UpdateSourceServerReplicationTypeRequest
      type: object
    UpdateWaveRequest:
      example:
        accountID: ""
        name: ""
        description: ""
        waveID: ""
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: Account ID.
        description:
          allOf:
          - $ref: '#/components/schemas/WaveDescription'
          - description: Wave description.
        name:
          allOf:
          - $ref: '#/components/schemas/WaveName'
          - description: Wave name.
        waveID:
          allOf:
          - $ref: '#/components/schemas/WaveID'
          - description: Wave ID.
      required:
      - waveID
      title: UpdateWaveRequest
      type: object
    VcenterClient:
      description: vCenter client.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: Arn of vCenter client.
        datacenterName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Datacenter name of vCenter client.
        hostname:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Hostname of vCenter client .
        lastSeenDatetime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Last seen time of vCenter client.
        sourceServerTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags for Source Server of vCenter client.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags for vCenter client.
        vcenterClientID:
          allOf:
          - $ref: '#/components/schemas/VcenterClientID'
          - description: ID of vCenter client.
        vcenterUUID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: Vcenter UUID of vCenter client.
      type: object
    WaveAggregatedStatus:
      description: Wave aggregated status.
      properties:
        healthStatus:
          allOf:
          - $ref: '#/components/schemas/WaveHealthStatus'
          - description: Wave aggregated status health status.
        lastUpdateDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Wave aggregated status last update dateTime.
        progressStatus:
          allOf:
          - $ref: '#/components/schemas/WaveProgressStatus'
          - description: Wave aggregated status progress status.
        replicationStartedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: DateTime marking when the first source server in the wave
              started replication.
        totalApplications:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          - description: Wave aggregated status total applications amount.
      type: object
    WaveHealthStatus:
      enum:
      - HEALTHY
      - LAGGING
      - ERROR
      type: string
    WaveProgressStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
      type: string
    ArchiveApplication_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        applicationID:
          description: Application ID.
          maxLength: 21
          minLength: 21
          pattern: "^app-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - applicationID
      type: object
    ArchiveWave_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        waveID:
          description: Wave ID.
          maxLength: 22
          minLength: 22
          pattern: "^wave-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - waveID
      type: object
    AssociateApplications_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        applicationIDs:
          description: Application IDs list.
          items:
            $ref: '#/components/schemas/ApplicationID'
          maxItems: 50
          minItems: 1
          type: array
        waveID:
          description: Wave ID.
          maxLength: 22
          minLength: 22
          pattern: "^wave-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - applicationIDs
      - waveID
      type: object
    AssociateSourceServers_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        applicationID:
          description: Application ID.
          maxLength: 21
          minLength: 21
          pattern: "^app-[0-9a-zA-Z]{17}$"
          type: string
        sourceServerIDs:
          description: Source server IDs list.
          items:
            $ref: '#/components/schemas/SourceServerID'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - applicationID
      - sourceServerIDs
      type: object
    ChangeServerLifeCycleState_request_lifeCycle:
      description: The request to change the source server migration lifecycle state.
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycleState'
          - description: The request to change the source server migration lifecycle
              state.
      type: object
    ChangeServerLifeCycleState_request:
      properties:
        accountID:
          description: The request to change the source server migration account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        lifeCycle:
          $ref: '#/components/schemas/ChangeServerLifeCycleState_request_lifeCycle'
        sourceServerID:
          description: The request to change the source server migration lifecycle
            state by source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - lifeCycle
      - sourceServerID
      type: object
    CreateApplication_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        description:
          description: Application description.
          maxLength: 600
          minLength: 0
          pattern: "^[^\\x00]*$"
          type: string
        name:
          description: Application name.
          maxLength: 256
          minLength: 1
          pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Application tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - name
      type: object
    CreateLaunchConfigurationTemplate_request_largeVolumeConf:
      description: Launch template disk configuration.
      properties:
        iops:
          allOf:
          - $ref: '#/components/schemas/Iops'
          - description: Launch template disk iops configuration.
        throughput:
          allOf:
          - $ref: '#/components/schemas/Throughput'
          - description: Launch template disk throughput configuration.
        volumeType:
          allOf:
          - $ref: '#/components/schemas/VolumeType'
          - description: Launch template disk volume type configuration.
      type: object
    CreateLaunchConfigurationTemplate_request_licensing:
      description: Configure Licensing.
      properties:
        osByol:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Configure BYOL OS licensing.
      type: object
    CreateLaunchConfigurationTemplate_request_postLaunchActions:
      description: Post Launch Actions to executed on the Test or Cutover instance.
      properties:
        cloudWatchLogGroupName:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupName'
          - description: AWS Systems Manager Command's CloudWatch log group name.
        deployment:
          allOf:
          - $ref: '#/components/schemas/PostLaunchActionsDeploymentType'
          - description: Deployment type in which AWS Systems Manager Documents will
              be executed.
        s3LogBucket:
          allOf:
          - $ref: '#/components/schemas/S3LogBucketName'
          - description: AWS Systems Manager Command's logs S3 log bucket.
        s3OutputKeyPrefix:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          - description: AWS Systems Manager Command's logs S3 output key prefix.
        ssmDocuments:
          allOf:
          - $ref: '#/components/schemas/SsmDocuments'
          - description: AWS Systems Manager Documents.
      type: object
    CreateLaunchConfigurationTemplate_request:
      properties:
        associatePublicIpAddress:
          description: Associate public Ip address.
          type: boolean
        bootMode:
          description: Launch configuration template boot mode.
          enum:
          - LEGACY_BIOS
          - UEFI
          type: string
        copyPrivateIp:
          description: Copy private Ip.
          type: boolean
        copyTags:
          description: Copy tags.
          type: boolean
        enableMapAutoTagging:
          description: Enable map auto tagging.
          type: boolean
        largeVolumeConf:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_largeVolumeConf'
        launchDisposition:
          description: Launch disposition.
          enum:
          - STOPPED
          - STARTED
          type: string
        licensing:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_licensing'
        mapAutoTaggingMpeID:
          description: Launch configuration template map auto tagging MPE ID.
          maxLength: 256
          minLength: 0
          type: string
        postLaunchActions:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_postLaunchActions'
        smallVolumeConf:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_largeVolumeConf'
        smallVolumeMaxSize:
          description: Small volume maximum size.
          minimum: 0
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Request to associate tags during creation of a Launch Configuration
            Template.
          maxProperties: 50
          minProperties: 0
          type: object
        targetInstanceTypeRightSizingMethod:
          description: Target instance type right-sizing method.
          enum:
          - NONE
          - BASIC
          type: string
      type: object
    CreateReplicationConfigurationTemplate_request:
      properties:
        associateDefaultSecurityGroup:
          description: Request to associate the default Application Migration Service
            Security group with the Replication Settings template.
          type: boolean
        bandwidthThrottling:
          description: Request to configure bandwidth throttling during Replication
            Settings template creation.
          maximum: 10000
          minimum: 0
          type: integer
        createPublicIP:
          description: Request to create Public IP during Replication Settings template
            creation.
          type: boolean
        dataPlaneRouting:
          description: Request to configure data plane routing during Replication
            Settings template creation.
          enum:
          - PRIVATE_IP
          - PUBLIC_IP
          type: string
        defaultLargeStagingDiskType:
          description: Request to configure the default large staging disk EBS volume
            type during Replication Settings template creation.
          enum:
          - GP2
          - ST1
          - GP3
          type: string
        ebsEncryption:
          description: Request to configure EBS encryption during Replication Settings
            template creation.
          enum:
          - DEFAULT
          - CUSTOM
          type: string
        ebsEncryptionKeyArn:
          description: Request to configure an EBS encryption key during Replication
            Settings template creation.
          maxLength: 2048
          minLength: 20
          type: string
        replicationServerInstanceType:
          description: Request to configure the Replication Server instance type during
            Replication Settings template creation.
          maxLength: 255
          minLength: 0
          type: string
        replicationServersSecurityGroupsIDs:
          description: Request to configure the Replication Server Security group
            ID during Replication Settings template creation.
          items:
            $ref: '#/components/schemas/SecurityGroupID'
          maxItems: 32
          minItems: 0
          type: array
        stagingAreaSubnetId:
          description: Request to configure the Staging Area subnet ID during Replication
            Settings template creation.
          maxLength: 255
          minLength: 0
          pattern: "^subnet-[0-9a-fA-F]{8,}$"
          type: string
        stagingAreaTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Request to configure Staging Area tags during Replication Settings
            template creation.
          maxProperties: 50
          minProperties: 0
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Request to configure tags during Replication Settings template
            creation.
          maxProperties: 50
          minProperties: 0
          type: object
        useDedicatedReplicationServer:
          description: Request to use Dedicated Replication Servers during Replication
            Settings template creation.
          type: boolean
        useFipsEndpoint:
          description: Request to use Fips Endpoint during Replication Settings template
            creation.
          type: boolean
      required:
      - associateDefaultSecurityGroup
      - bandwidthThrottling
      - createPublicIP
      - dataPlaneRouting
      - defaultLargeStagingDiskType
      - ebsEncryption
      - replicationServerInstanceType
      - replicationServersSecurityGroupsIDs
      - stagingAreaSubnetId
      - stagingAreaTags
      - useDedicatedReplicationServer
      type: object
    CreateWave_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        description:
          description: Wave description.
          maxLength: 600
          minLength: 0
          pattern: "^[^\\x00]*$"
          type: string
        name:
          description: Wave name.
          maxLength: 256
          minLength: 1
          pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Wave tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - name
      type: object
    DeleteJob_request:
      properties:
        accountID:
          description: Request to delete Job from service by Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        jobID:
          description: Request to delete Job from service by Job ID.
          maxLength: 24
          minLength: 24
          pattern: "^mgnjob-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - jobID
      type: object
    DeleteLaunchConfigurationTemplate_request:
      properties:
        launchConfigurationTemplateID:
          description: ID of resource to be deleted.
          maxLength: 21
          minLength: 21
          pattern: "^lct-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - launchConfigurationTemplateID
      type: object
    DeleteReplicationConfigurationTemplate_request:
      properties:
        replicationConfigurationTemplateID:
          description: Request to delete Replication Configuration Template from service
            by Replication Configuration Template ID.
          maxLength: 21
          minLength: 21
          pattern: "^rct-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - replicationConfigurationTemplateID
      type: object
    DeleteSourceServer_request:
      properties:
        accountID:
          description: Request to delete Source Server from service by Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Request to delete Source Server from service by Server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    DeleteVcenterClient_request:
      properties:
        vcenterClientID:
          description: ID of resource to be deleted.
          maxLength: 21
          minLength: 21
          pattern: "^vcc-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - vcenterClientID
      type: object
    DescribeJobLogItems_request:
      properties:
        accountID:
          description: Request to describe Job log Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        jobID:
          description: Request to describe Job log job ID.
          maxLength: 24
          minLength: 24
          pattern: "^mgnjob-[0-9a-zA-Z]{17}$"
          type: string
        maxResults:
          description: Request to describe Job log item maximum results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request to describe Job log next token.
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - jobID
      type: object
    DescribeJobs_request_filters:
      description: Request to describe Job log filters.
      properties:
        fromDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to describe Job log filters by date.
        jobIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
          - description: Request to describe Job log filters by job ID.
        toDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          - description: Request to describe job log items by last date.
      type: object
    DescribeJobs_request:
      properties:
        accountID:
          description: Request to describe job log items by Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        filters:
          $ref: '#/components/schemas/DescribeJobs_request_filters'
        maxResults:
          description: Request to describe job log items by max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request to describe job log items by next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    DescribeLaunchConfigurationTemplates_request:
      properties:
        launchConfigurationTemplateIDs:
          description: Request to filter Launch Configuration Templates list by Launch
            Configuration Template ID.
          items:
            $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          maxItems: 200
          minItems: 0
          type: array
        maxResults:
          description: Maximum results to be returned in DescribeLaunchConfigurationTemplates.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Next pagination token returned from DescribeLaunchConfigurationTemplates.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    DescribeReplicationConfigurationTemplates_request:
      properties:
        maxResults:
          description: Request to describe Replication Configuration template by max
            results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request to describe Replication Configuration template by next
            token.
          maxLength: 2048
          minLength: 0
          type: string
        replicationConfigurationTemplateIDs:
          description: Request to describe Replication Configuration template by template
            IDs.
          items:
            $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          maxItems: 200
          minItems: 0
          type: array
      type: object
    DescribeSourceServers_request_filters:
      description: Request to filter Source Servers list.
      properties:
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestApplicationIDs'
          - description: Request to filter Source Servers list by application IDs.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Request to filter Source Servers list by archived.
        lifeCycleStates:
          allOf:
          - $ref: '#/components/schemas/LifeCycleStates'
          - description: Request to filter Source Servers list by life cycle states.
        replicationTypes:
          allOf:
          - $ref: '#/components/schemas/ReplicationTypes'
          - description: Request to filter Source Servers list by replication type.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
          - description: Request to filter Source Servers list by Source Server ID.
      type: object
    DescribeSourceServers_request:
      properties:
        accountID:
          description: Request to filter Source Servers list by Accoun ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        filters:
          $ref: '#/components/schemas/DescribeSourceServers_request_filters'
        maxResults:
          description: Request to filter Source Servers list by maximum results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request to filter Source Servers list by next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    DisconnectFromService_request:
      properties:
        accountID:
          description: Request to disconnect Source Server from service by Account
            ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Request to disconnect Source Server from service by Server
            ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    FinalizeCutover_request:
      properties:
        accountID:
          description: Request to finalize Cutover by Source Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Request to finalize Cutover by Source Server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    GetLaunchConfiguration_request:
      properties:
        accountID:
          description: Request to get Launch Configuration information by Account
            ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Request to get Launch Configuration information by Source Server
            ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    GetReplicationConfiguration_request:
      properties:
        accountID:
          description: Request to get Replication Configuration by Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Request to get Replication Configuration by Source Server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    ListApplications_request_filters:
      description: Applications list filters.
      properties:
        applicationIDs:
          allOf:
          - $ref: '#/components/schemas/ApplicationIDsFilter'
          - description: Filter applications list by application ID.
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Filter applications list by archival status.
        waveIDs:
          allOf:
          - $ref: '#/components/schemas/WaveIDsFilter'
          - description: Filter applications list by wave ID.
      type: object
    ListApplications_request:
      properties:
        accountID:
          description: Applications list Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        filters:
          $ref: '#/components/schemas/ListApplications_request_filters'
        maxResults:
          description: Maximum results to return when listing applications.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    ListExportErrors_request:
      properties:
        exportID:
          description: List export errors request export id.
          maxLength: 24
          minLength: 24
          pattern: "^export-[0-9a-zA-Z]{17}$"
          type: string
        maxResults:
          description: List export errors request max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: List export errors request next token.
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - exportID
      type: object
    ListExports_request_filters:
      description: List exports request filters.
      properties:
        exportIDs:
          allOf:
          - $ref: '#/components/schemas/ListExportsRequestFiltersExportIDs'
          - description: List exports request filters export ids.
      type: object
    ListExports_request:
      properties:
        filters:
          $ref: '#/components/schemas/ListExports_request_filters'
        maxResults:
          description: List export request max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: List export request next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    ListImportErrors_request:
      properties:
        importID:
          description: List import errors request import id.
          maxLength: 24
          minLength: 24
          pattern: "^import-[0-9a-zA-Z]{17}$"
          type: string
        maxResults:
          description: List import errors request max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: List import errors request next token.
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - importID
      type: object
    ListImports_request_filters:
      description: List imports request filters.
      properties:
        importIDs:
          allOf:
          - $ref: '#/components/schemas/ImportIDsFilter'
          - description: List imports request filters import IDs.
      type: object
    ListImports_request:
      properties:
        filters:
          $ref: '#/components/schemas/ListImports_request_filters'
        maxResults:
          description: List imports request max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: List imports request next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    ListManagedAccounts_request:
      properties:
        maxResults:
          description: List managed accounts request max results.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: List managed accounts request next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    ListSourceServerActions_request_filters:
      description: Source server post migration custom action filters.
      properties:
        actionIDs:
          allOf:
          - $ref: '#/components/schemas/ActionIDs'
          - description: Action IDs to filter source server post migration custom
              actions by.
      type: object
    ListSourceServerActions_request:
      properties:
        accountID:
          description: Account ID to return when listing source server post migration
            custom actions.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        filters:
          $ref: '#/components/schemas/ListSourceServerActions_request_filters'
        maxResults:
          description: Maximum amount of items to return when listing source server
            post migration custom actions.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Next token to use when listing source server post migration
            custom actions.
          maxLength: 2048
          minLength: 0
          type: string
        sourceServerID:
          description: Source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Tag resource by Tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    ListTemplateActions_request_filters:
      description: Template post migration custom action filters.
      properties:
        actionIDs:
          allOf:
          - $ref: '#/components/schemas/ActionIDs'
          - description: Action IDs to filter template post migration custom actions
              by.
      type: object
    ListTemplateActions_request:
      properties:
        filters:
          $ref: '#/components/schemas/ListTemplateActions_request_filters'
        launchConfigurationTemplateID:
          description: Launch configuration template ID.
          maxLength: 21
          minLength: 21
          pattern: "^lct-[0-9a-zA-Z]{17}$"
          type: string
        maxResults:
          description: Maximum amount of items to return when listing template post
            migration custom actions.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Next token to use when listing template post migration custom
            actions.
          maxLength: 2048
          minLength: 0
          type: string
      required:
      - launchConfigurationTemplateID
      type: object
    ListWaves_request_filters:
      description: Waves list filters.
      properties:
        isArchived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Filter waves list by archival status.
        waveIDs:
          allOf:
          - $ref: '#/components/schemas/WaveIDsFilter'
          - description: Filter waves list by wave ID.
      type: object
    ListWaves_request:
      properties:
        accountID:
          description: Request account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        filters:
          $ref: '#/components/schemas/ListWaves_request_filters'
        maxResults:
          description: Maximum results to return when listing waves.
          maximum: 1000
          minimum: 1
          type: integer
        nextToken:
          description: Request next token.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    MarkAsArchived_request:
      properties:
        accountID:
          description: Mark as archived by Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Mark as archived by Source Server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    PauseReplication_request:
      properties:
        accountID:
          description: Pause Replication Request account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Pause Replication Request source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    PutSourceServerAction_request:
      properties:
        accountID:
          description: Source server post migration custom account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        actionID:
          description: Source server post migration custom action ID.
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-zA-Z]$"
          type: string
        actionName:
          description: Source server post migration custom action name.
          maxLength: 256
          minLength: 1
          pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
          type: string
        active:
          description: Source server post migration custom action active status.
          type: boolean
        category:
          description: Source server post migration custom action category.
          enum:
          - DISASTER_RECOVERY
          - OPERATING_SYSTEM
          - LICENSE_AND_SUBSCRIPTION
          - VALIDATION
          - OBSERVABILITY
          - SECURITY
          - NETWORKING
          - CONFIGURATION
          - BACKUP
          - OTHER
          type: string
        description:
          description: Source server post migration custom action description.
          maxLength: 256
          minLength: 0
          pattern: "^[0-9a-zA-Z ():/.,'-_#*; ]*$"
          type: string
        documentIdentifier:
          description: Source server post migration custom action document identifier.
          maxLength: 256
          minLength: 0
          type: string
        documentVersion:
          description: Source server post migration custom action document version.
          pattern: "^(\\$DEFAULT|\\$LATEST|[0-9]+)$"
          type: string
        externalParameters:
          additionalProperties:
            $ref: '#/components/schemas/SsmExternalParameter'
          description: Source server post migration custom action external parameters.
          maxProperties: 20
          minProperties: 0
          type: object
        mustSucceedForCutover:
          description: Source server post migration custom action must succeed for
            cutover.
          type: boolean
        order:
          description: Source server post migration custom action order.
          maximum: 10000
          minimum: 1001
          type: integer
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/SsmParameterStoreParameters'
          description: Source server post migration custom action parameters.
          maxProperties: 20
          minProperties: 0
          type: object
        sourceServerID:
          description: Source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
        timeoutSeconds:
          description: Source server post migration custom action timeout in seconds.
          minimum: 1
          type: integer
      required:
      - actionID
      - actionName
      - documentIdentifier
      - order
      - sourceServerID
      type: object
    PutTemplateAction_request:
      properties:
        actionID:
          description: Template post migration custom action ID.
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-zA-Z]$"
          type: string
        actionName:
          description: Template post migration custom action name.
          maxLength: 256
          minLength: 0
          type: string
        active:
          description: Template post migration custom action active status.
          type: boolean
        category:
          description: Template post migration custom action category.
          enum:
          - DISASTER_RECOVERY
          - OPERATING_SYSTEM
          - LICENSE_AND_SUBSCRIPTION
          - VALIDATION
          - OBSERVABILITY
          - SECURITY
          - NETWORKING
          - CONFIGURATION
          - BACKUP
          - OTHER
          type: string
        description:
          description: Template post migration custom action description.
          maxLength: 256
          minLength: 0
          pattern: "^[0-9a-zA-Z ():/.,'-_#*; ]*$"
          type: string
        documentIdentifier:
          description: Template post migration custom action document identifier.
          maxLength: 256
          minLength: 0
          type: string
        documentVersion:
          description: Template post migration custom action document version.
          pattern: "^(\\$DEFAULT|\\$LATEST|[0-9]+)$"
          type: string
        externalParameters:
          additionalProperties:
            $ref: '#/components/schemas/SsmExternalParameter'
          description: Template post migration custom action external parameters.
          maxProperties: 20
          minProperties: 0
          type: object
        launchConfigurationTemplateID:
          description: Launch configuration template ID.
          maxLength: 21
          minLength: 21
          pattern: "^lct-[0-9a-zA-Z]{17}$"
          type: string
        mustSucceedForCutover:
          description: Template post migration custom action must succeed for cutover.
          type: boolean
        operatingSystem:
          description: Operating system eligible for this template post migration
            custom action.
          pattern: ^(linux|windows)$
          type: string
        order:
          description: Template post migration custom action order.
          maximum: 10000
          minimum: 1001
          type: integer
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/SsmParameterStoreParameters'
          description: Template post migration custom action parameters.
          maxProperties: 20
          minProperties: 0
          type: object
        timeoutSeconds:
          description: Template post migration custom action timeout in seconds.
          minimum: 1
          type: integer
      required:
      - actionID
      - actionName
      - documentIdentifier
      - launchConfigurationTemplateID
      - order
      type: object
    RemoveSourceServerAction_request:
      properties:
        accountID:
          description: Source server post migration account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        actionID:
          description: Source server post migration custom action ID to remove.
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-zA-Z]$"
          type: string
        sourceServerID:
          description: Source server ID of the post migration custom action to remove.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - actionID
      - sourceServerID
      type: object
    RemoveTemplateAction_request:
      properties:
        actionID:
          description: Template post migration custom action ID to remove.
          maxLength: 64
          minLength: 1
          pattern: "[0-9a-zA-Z]$"
          type: string
        launchConfigurationTemplateID:
          description: Launch configuration template ID of the post migration custom
            action to remove.
          maxLength: 21
          minLength: 21
          pattern: "^lct-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - actionID
      - launchConfigurationTemplateID
      type: object
    ResumeReplication_request:
      properties:
        accountID:
          description: Resume Replication Request account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Resume Replication Request source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    RetryDataReplication_request:
      properties:
        accountID:
          description: Retry data replication for Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Retry data replication for Source Server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    StartCutover_request:
      properties:
        accountID:
          description: Start Cutover by Account IDs
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerIDs:
          description: Start Cutover by Source Server IDs.
          items:
            $ref: '#/components/schemas/SourceServerID'
          maxItems: 200
          minItems: 1
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Start Cutover by Tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - sourceServerIDs
      type: object
    StartExport_request:
      properties:
        s3Bucket:
          description: Start export request s3 bucket.
          pattern: "^[a-zA-Z0-9.\\-_]{1,255}$"
          type: string
        s3BucketOwner:
          description: Start export request s3 bucket owner.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        s3Key:
          description: Start export request s3key.
          pattern: "^[^\\x00]{1,1020}\\.csv$"
          type: string
      required:
      - s3Bucket
      - s3Key
      type: object
    StartImport_request_s3BucketSource:
      description: S3 bucket source.
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: S3 bucket source s3 bucket.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          - description: S3 bucket source s3 bucket owner.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: S3 bucket source s3 key.
      type: object
    StartImport_request:
      properties:
        clientToken:
          description: Start import request client token.
          maxLength: 64
          minLength: 0
          type: string
        s3BucketSource:
          $ref: '#/components/schemas/StartImport_request_s3BucketSource'
      required:
      - s3BucketSource
      type: object
    StartReplication_request:
      properties:
        accountID:
          description: Account ID on which to start replication.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: ID of source server on which to start replication.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    StartTest_request:
      properties:
        accountID:
          description: Start Test for Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerIDs:
          description: Start Test for Source Server IDs.
          items:
            $ref: '#/components/schemas/SourceServerID'
          maxItems: 200
          minItems: 1
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Start Test by Tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - sourceServerIDs
      type: object
    StopReplication_request:
      properties:
        accountID:
          description: Stop Replication Request account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerID:
          description: Stop Replication Request source server ID.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - sourceServerID
      type: object
    TerminateTargetInstances_request:
      properties:
        accountID:
          description: Terminate Target instance by Account ID
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        sourceServerIDs:
          description: Terminate Target instance by Source Server IDs.
          items:
            $ref: '#/components/schemas/SourceServerID'
          maxItems: 200
          minItems: 1
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Terminate Target instance by Tags.
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - sourceServerIDs
      type: object
    UpdateApplication_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        applicationID:
          description: Application ID.
          maxLength: 21
          minLength: 21
          pattern: "^app-[0-9a-zA-Z]{17}$"
          type: string
        description:
          description: Application description.
          maxLength: 600
          minLength: 0
          pattern: "^[^\\x00]*$"
          type: string
        name:
          description: Application name.
          maxLength: 256
          minLength: 1
          pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
          type: string
      required:
      - applicationID
      type: object
    UpdateLaunchConfiguration_request:
      properties:
        accountID:
          description: Update Launch configuration Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        bootMode:
          description: Update Launch configuration boot mode request.
          enum:
          - LEGACY_BIOS
          - UEFI
          type: string
        copyPrivateIp:
          description: Update Launch configuration copy Private IP request.
          type: boolean
        copyTags:
          description: Update Launch configuration copy Tags request.
          type: boolean
        enableMapAutoTagging:
          description: Enable map auto tagging.
          type: boolean
        launchDisposition:
          description: Update Launch configuration launch disposition request.
          enum:
          - STOPPED
          - STARTED
          type: string
        licensing:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_licensing'
        mapAutoTaggingMpeID:
          description: Launch configuration map auto tagging MPE ID.
          maxLength: 256
          minLength: 0
          type: string
        name:
          description: Update Launch configuration name request.
          maxLength: 128
          minLength: 0
          type: string
        postLaunchActions:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_postLaunchActions'
        sourceServerID:
          description: Update Launch configuration by Source Server ID request.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
        targetInstanceTypeRightSizingMethod:
          description: Update Launch configuration Target instance right sizing request.
          enum:
          - NONE
          - BASIC
          type: string
      required:
      - sourceServerID
      type: object
    UpdateLaunchConfigurationTemplate_request:
      properties:
        associatePublicIpAddress:
          description: Associate public Ip address.
          type: boolean
        bootMode:
          description: Launch configuration template boot mode.
          enum:
          - LEGACY_BIOS
          - UEFI
          type: string
        copyPrivateIp:
          description: Copy private Ip.
          type: boolean
        copyTags:
          description: Copy tags.
          type: boolean
        enableMapAutoTagging:
          description: Enable map auto tagging.
          type: boolean
        largeVolumeConf:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_largeVolumeConf'
        launchConfigurationTemplateID:
          description: Launch Configuration Template ID.
          maxLength: 21
          minLength: 21
          pattern: "^lct-[0-9a-zA-Z]{17}$"
          type: string
        launchDisposition:
          description: Launch disposition.
          enum:
          - STOPPED
          - STARTED
          type: string
        licensing:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_licensing'
        mapAutoTaggingMpeID:
          description: Launch configuration template map auto tagging MPE ID.
          maxLength: 256
          minLength: 0
          type: string
        postLaunchActions:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_postLaunchActions'
        smallVolumeConf:
          $ref: '#/components/schemas/CreateLaunchConfigurationTemplate_request_largeVolumeConf'
        smallVolumeMaxSize:
          description: Small volume maximum size.
          minimum: 0
          type: integer
        targetInstanceTypeRightSizingMethod:
          description: Target instance type right-sizing method.
          enum:
          - NONE
          - BASIC
          type: string
      required:
      - launchConfigurationTemplateID
      type: object
    UpdateReplicationConfiguration_request:
      properties:
        accountID:
          description: Update replication configuration Account ID request.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        associateDefaultSecurityGroup:
          description: Update replication configuration associate default Application
            Migration Service Security group request.
          type: boolean
        bandwidthThrottling:
          description: Update replication configuration bandwidth throttling request.
          maximum: 10000
          minimum: 0
          type: integer
        createPublicIP:
          description: Update replication configuration create Public IP request.
          type: boolean
        dataPlaneRouting:
          description: Update replication configuration data plane routing request.
          enum:
          - PRIVATE_IP
          - PUBLIC_IP
          type: string
        defaultLargeStagingDiskType:
          description: Update replication configuration use default large Staging
            Disk type request.
          enum:
          - GP2
          - ST1
          - GP3
          type: string
        ebsEncryption:
          description: Update replication configuration EBS encryption request.
          enum:
          - DEFAULT
          - CUSTOM
          type: string
        ebsEncryptionKeyArn:
          description: Update replication configuration EBS encryption key ARN request.
          maxLength: 2048
          minLength: 20
          type: string
        name:
          description: Update replication configuration name request.
          maxLength: 128
          minLength: 0
          type: string
        replicatedDisks:
          description: Update replication configuration replicated disks request.
          items:
            $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
          maxItems: 60
          minItems: 0
          type: array
        replicationServerInstanceType:
          description: Update replication configuration Replication Server instance
            type request.
          maxLength: 255
          minLength: 0
          type: string
        replicationServersSecurityGroupsIDs:
          description: Update replication configuration Replication Server Security
            Groups IDs request.
          items:
            $ref: '#/components/schemas/SecurityGroupID'
          maxItems: 32
          minItems: 0
          type: array
        sourceServerID:
          description: Update replication configuration Source Server ID request.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
        stagingAreaSubnetId:
          description: Update replication configuration Staging Area subnet request.
          maxLength: 255
          minLength: 0
          pattern: "^subnet-[0-9a-fA-F]{8,}$"
          type: string
        stagingAreaTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Update replication configuration Staging Area Tags request.
          maxProperties: 50
          minProperties: 0
          type: object
        useDedicatedReplicationServer:
          description: Update replication configuration use dedicated Replication
            Server request.
          type: boolean
        useFipsEndpoint:
          description: Update replication configuration use Fips Endpoint.
          type: boolean
      required:
      - sourceServerID
      type: object
    UpdateReplicationConfigurationTemplate_request:
      properties:
        arn:
          description: Update replication configuration template ARN request.
          maxLength: 2048
          minLength: 20
          type: string
        associateDefaultSecurityGroup:
          description: Update replication configuration template associate default
            Application Migration Service Security group request.
          type: boolean
        bandwidthThrottling:
          description: Update replication configuration template bandwidth throttling
            request.
          maximum: 10000
          minimum: 0
          type: integer
        createPublicIP:
          description: Update replication configuration template create Public IP
            request.
          type: boolean
        dataPlaneRouting:
          description: Update replication configuration template data plane routing
            request.
          enum:
          - PRIVATE_IP
          - PUBLIC_IP
          type: string
        defaultLargeStagingDiskType:
          description: Update replication configuration template use default large
            Staging Disk type request.
          enum:
          - GP2
          - ST1
          - GP3
          type: string
        ebsEncryption:
          description: Update replication configuration template EBS encryption request.
          enum:
          - DEFAULT
          - CUSTOM
          type: string
        ebsEncryptionKeyArn:
          description: Update replication configuration template EBS encryption key
            ARN request.
          maxLength: 2048
          minLength: 20
          type: string
        replicationConfigurationTemplateID:
          description: Update replication configuration template template ID request.
          maxLength: 21
          minLength: 21
          pattern: "^rct-[0-9a-zA-Z]{17}$"
          type: string
        replicationServerInstanceType:
          description: Update replication configuration template Replication Server
            instance type request.
          maxLength: 255
          minLength: 0
          type: string
        replicationServersSecurityGroupsIDs:
          description: Update replication configuration template Replication Server
            Security groups IDs request.
          items:
            $ref: '#/components/schemas/SecurityGroupID'
          maxItems: 32
          minItems: 0
          type: array
        stagingAreaSubnetId:
          description: Update replication configuration template Staging Area subnet
            ID request.
          maxLength: 255
          minLength: 0
          pattern: "^subnet-[0-9a-fA-F]{8,}$"
          type: string
        stagingAreaTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Update replication configuration template Staging Area Tags
            request.
          maxProperties: 50
          minProperties: 0
          type: object
        useDedicatedReplicationServer:
          description: Update replication configuration template use dedicated Replication
            Server request.
          type: boolean
        useFipsEndpoint:
          description: Update replication configuration template use Fips Endpoint
            request.
          type: boolean
      required:
      - replicationConfigurationTemplateID
      type: object
    UpdateSourceServerReplicationType_request:
      properties:
        accountID:
          description: Account ID on which to update replication type.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        replicationType:
          description: Replication type to which to update source server.
          enum:
          - AGENT_BASED
          - SNAPSHOT_SHIPPING
          type: string
        sourceServerID:
          description: ID of source server on which to update replication type.
          maxLength: 19
          minLength: 19
          pattern: "^s-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - replicationType
      - sourceServerID
      type: object
    UpdateWave_request:
      properties:
        accountID:
          description: Account ID.
          maxLength: 12
          minLength: 12
          pattern: "[0-9]{12,}"
          type: string
        description:
          description: Wave description.
          maxLength: 600
          minLength: 0
          pattern: "^[^\\x00]*$"
          type: string
        name:
          description: Wave name.
          maxLength: 256
          minLength: 1
          pattern: "^[^\\s\\x00]( *[^\\s\\x00])*$"
          type: string
        waveID:
          description: Wave ID.
          maxLength: 22
          minLength: 22
          pattern: "^wave-[0-9a-zA-Z]{17}$"
          type: string
      required:
      - waveID
      type: object
    Application_applicationAggregatedStatus:
      allOf:
      - $ref: '#/components/schemas/ApplicationAggregatedStatus'
      - description: Application aggregated status.
      example:
        lastUpdateDateTime: ""
        healthStatus: ""
        totalSourceServers: ""
        progressStatus: ""
    Wave_waveAggregatedStatus:
      allOf:
      - $ref: '#/components/schemas/WaveAggregatedStatus'
      - description: Wave aggregated status.
      example:
        lastUpdateDateTime: ""
        replicationStartedDateTime: ""
        healthStatus: ""
        progressStatus: ""
        totalApplications: ""
    SourceServer_dataReplicationInfo:
      allOf:
      - $ref: '#/components/schemas/DataReplicationInfo'
      - description: Source server data replication info.
      example:
        lagDuration: ""
        dataReplicationInitiation:
          startDateTime: ""
          nextAttemptDateTime: ""
          steps: ""
        replicatedDisks: ""
        dataReplicationError:
          rawError: ""
          error: ""
        dataReplicationState: ""
        etaDateTime: ""
        lastSnapshotDateTime: ""
    SourceServer_launchedInstance:
      allOf:
      - $ref: '#/components/schemas/LaunchedInstance'
      - description: Source server launched instance.
      example:
        ec2InstanceID: ""
        jobID: ""
        firstBoot: ""
    SourceServer_lifeCycle:
      allOf:
      - $ref: '#/components/schemas/LifeCycle'
      - description: Source server lifecycle state.
      example:
        lastCutover:
          finalized:
            apiCallDateTime: ""
          initiated:
            jobID: ""
            apiCallDateTime: ""
          reverted:
            apiCallDateTime: ""
        addedToServiceDateTime: ""
        firstByteDateTime: ""
        lastTest:
          finalized:
            apiCallDateTime: ""
          initiated:
            jobID: ""
            apiCallDateTime: ""
          reverted:
            apiCallDateTime: ""
        state: ""
        lastSeenByServiceDateTime: ""
        elapsedReplicationDuration: ""
    SourceServer_sourceProperties:
      allOf:
      - $ref: '#/components/schemas/SourceProperties'
      - description: Source server properties.
      example:
        ramBytes: ""
        networkInterfaces: ""
        disks: ""
        os:
          fullString: ""
        recommendedInstanceType: ""
        cpus: ""
        identificationHints:
          hostname: ""
          fqdn: ""
          awsInstanceID: ""
          vmPath: ""
          vmWareUuid: ""
        lastUpdatedDateTime: ""
    LaunchConfigurationTemplate_largeVolumeConf:
      allOf:
      - $ref: '#/components/schemas/LaunchTemplateDiskConf'
      - description: Large volume config.
      example:
        volumeType: ""
        iops: ""
        throughput: ""
    LaunchConfigurationTemplate_postLaunchActions:
      allOf:
      - $ref: '#/components/schemas/PostLaunchActions'
      - description: Post Launch Actions of the Launch Configuration Template.
      example:
        s3OutputKeyPrefix: ""
        ssmDocuments: ""
        s3LogBucket: ""
        cloudWatchLogGroupName: ""
        deployment: ""
    LaunchConfigurationTemplate_smallVolumeConf:
      allOf:
      - $ref: '#/components/schemas/LaunchTemplateDiskConf'
      - description: Small volume config.
      example:
        volumeType: ""
        iops: ""
        throughput: ""
    LaunchConfiguration_licensing:
      allOf:
      - $ref: '#/components/schemas/Licensing'
      - description: Launch configuration OS licensing.
      example:
        osByol: ""
    StartCutoverResponse_job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: Start Cutover Job response.
      example:
        jobID: ""
        participatingServers: ""
        arn: ""
        endDateTime: ""
        type: ""
        initiatedBy: ""
        creationDateTime: ""
        status: ""
        tags: ""
    StartExportResponse_exportTask:
      allOf:
      - $ref: '#/components/schemas/ExportTask'
      - description: Start export response export task.
      example:
        summary:
          wavesCount: ""
          serversCount: ""
          applicationsCount: ""
        s3Key: ""
        progressPercentage: ""
        s3BucketOwner: ""
        endDateTime: ""
        exportID: ""
        s3Bucket: ""
        creationDateTime: ""
        status: ""
    StartImportResponse_importTask:
      allOf:
      - $ref: '#/components/schemas/ImportTask'
      - description: Start import response import task.
      example:
        summary:
          waves:
            modifiedCount: ""
            createdCount: ""
          servers:
            modifiedCount: ""
            createdCount: ""
          applications:
            modifiedCount: ""
            createdCount: ""
        importID: ""
        progressPercentage: ""
        s3BucketSource:
          s3Key: ""
          s3BucketOwner: ""
          s3Bucket: ""
        endDateTime: ""
        creationDateTime: ""
        status: ""
    StartTestResponse_job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: Start Test Job response.
      example:
        jobID: ""
        participatingServers: ""
        arn: ""
        endDateTime: ""
        type: ""
        initiatedBy: ""
        creationDateTime: ""
        status: ""
        tags: ""
    TerminateTargetInstancesResponse_job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: Terminate Target instance Job response.
      example:
        jobID: ""
        participatingServers: ""
        arn: ""
        endDateTime: ""
        type: ""
        initiatedBy: ""
        creationDateTime: ""
        status: ""
        tags: ""
    ChangeServerLifeCycleStateRequest_lifeCycle:
      allOf:
      - $ref: '#/components/schemas/ChangeServerLifeCycleStateSourceServerLifecycle'
      - description: The request to change the source server migration lifecycle state.
      example:
        state: ""
    CreateLaunchConfigurationTemplateRequest_postLaunchActions:
      allOf:
      - $ref: '#/components/schemas/PostLaunchActions'
      - description: Launch configuration template post launch actions.
      example:
        s3OutputKeyPrefix: ""
        ssmDocuments: ""
        s3LogBucket: ""
        cloudWatchLogGroupName: ""
        deployment: ""
    DataReplicationInfo_dataReplicationError:
      allOf:
      - $ref: '#/components/schemas/DataReplicationError'
      - description: Error in obtaining data replication info.
      example:
        rawError: ""
        error: ""
    DataReplicationInfo_dataReplicationInitiation:
      allOf:
      - $ref: '#/components/schemas/DataReplicationInitiation'
      - description: Request to query whether data replication has been initiated.
      example:
        startDateTime: ""
        nextAttemptDateTime: ""
        steps: ""
    DescribeJobsRequest_filters:
      allOf:
      - $ref: '#/components/schemas/DescribeJobsRequestFilters'
      - description: Request to describe Job log filters.
      example:
        fromDate: ""
        jobIDs: ""
        toDate: ""
    DescribeSourceServersRequest_filters:
      allOf:
      - $ref: '#/components/schemas/DescribeSourceServersRequestFilters'
      - description: Request to filter Source Servers list.
      example:
        isArchived: ""
        replicationTypes: ""
        sourceServerIDs: ""
        lifeCycleStates: ""
        applicationIDs: ""
    ExportTaskError_errorData:
      allOf:
      - $ref: '#/components/schemas/ExportErrorData'
      - description: Export task error data.
    ExportTask_summary:
      allOf:
      - $ref: '#/components/schemas/ExportTaskSummary'
      - description: Export task summary.
      example:
        wavesCount: ""
        serversCount: ""
        applicationsCount: ""
    ImportTaskError_errorData:
      allOf:
      - $ref: '#/components/schemas/ImportErrorData'
      - description: Import task error data.
    ImportTask_s3BucketSource:
      allOf:
      - $ref: '#/components/schemas/S3BucketSource'
      - description: Import task s3 bucket source.
      example:
        s3Key: ""
        s3BucketOwner: ""
        s3Bucket: ""
    ImportTask_summary:
      allOf:
      - $ref: '#/components/schemas/ImportTaskSummary'
      - description: Import task summary.
      example:
        waves:
          modifiedCount: ""
          createdCount: ""
        servers:
          modifiedCount: ""
          createdCount: ""
        applications:
          modifiedCount: ""
          createdCount: ""
    ImportTaskSummary_applications:
      allOf:
      - $ref: '#/components/schemas/ImportTaskSummaryApplications'
      - description: Import task summary applications.
      example:
        modifiedCount: ""
        createdCount: ""
    ImportTaskSummary_servers:
      allOf:
      - $ref: '#/components/schemas/ImportTaskSummaryServers'
      - description: Import task summary servers.
      example:
        modifiedCount: ""
        createdCount: ""
    ImportTaskSummary_waves:
      allOf:
      - $ref: '#/components/schemas/ImportTaskSummaryWaves'
      - description: Import task summary waves.
      example:
        modifiedCount: ""
        createdCount: ""
    JobLog_eventData:
      allOf:
      - $ref: '#/components/schemas/JobLogEventData'
      - description: Job event data
    JobPostLaunchActionsLaunchStatus_ssmDocument:
      allOf:
      - $ref: '#/components/schemas/SsmDocument'
      - description: AWS Systems Manager's Document of the of the Job Post Launch
          Actions.
    LifeCycleLastCutover_finalized:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastCutoverFinalized'
      - description: Lifecycle Cutover finalized date and time.
      example:
        apiCallDateTime: ""
    LifeCycleLastCutover_initiated:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastCutoverInitiated'
      - description: Lifecycle last Cutover initiated.
      example:
        jobID: ""
        apiCallDateTime: ""
    LifeCycleLastCutover_reverted:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastCutoverReverted'
      - description: Lifecycle last Cutover reverted.
      example:
        apiCallDateTime: ""
    LifeCycleLastTest_finalized:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastTestFinalized'
      - description: Lifecycle last Test finalized.
      example:
        apiCallDateTime: ""
    LifeCycleLastTest_initiated:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastTestInitiated'
      - description: Lifecycle last Test initiated.
      example:
        jobID: ""
        apiCallDateTime: ""
    LifeCycleLastTest_reverted:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastTestReverted'
      - description: Lifecycle last Test reverted.
      example:
        apiCallDateTime: ""
    LifeCycle_lastCutover:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastCutover'
      - description: Lifecycle last Cutover.
      example:
        finalized:
          apiCallDateTime: ""
        initiated:
          jobID: ""
          apiCallDateTime: ""
        reverted:
          apiCallDateTime: ""
    LifeCycle_lastTest:
      allOf:
      - $ref: '#/components/schemas/LifeCycleLastTest'
      - description: Lifecycle last Test.
      example:
        finalized:
          apiCallDateTime: ""
        initiated:
          jobID: ""
          apiCallDateTime: ""
        reverted:
          apiCallDateTime: ""
    ListApplicationsRequest_filters:
      allOf:
      - $ref: '#/components/schemas/ListApplicationsRequestFilters'
      - description: Applications list filters.
      example:
        isArchived: ""
        waveIDs: ""
        applicationIDs: ""
    ListImportsRequest_filters:
      allOf:
      - $ref: '#/components/schemas/ListImportsRequestFilters'
      - description: List imports request filters.
      example:
        importIDs: ""
    ListSourceServerActionsRequest_filters:
      allOf:
      - $ref: '#/components/schemas/SourceServerActionsRequestFilters'
      - description: Filters to apply when listing source server post migration custom
          actions.
      example:
        actionIDs: ""
    ListTemplateActionsRequest_filters:
      allOf:
      - $ref: '#/components/schemas/TemplateActionsRequestFilters'
      - description: Filters to apply when listing template post migration custom
          actions.
      example:
        actionIDs: ""
    ListWavesRequest_filters:
      allOf:
      - $ref: '#/components/schemas/ListWavesRequestFilters'
      - description: Waves list filters.
      example:
        isArchived: ""
        waveIDs: ""
    ParticipatingServer_postLaunchActionsStatus:
      allOf:
      - $ref: '#/components/schemas/PostLaunchActionsStatus'
      - description: Participating server's Post Launch Actions Status.
    SourceProperties_identificationHints:
      allOf:
      - $ref: '#/components/schemas/IdentificationHints'
      - description: Source server identification hints.
      example:
        hostname: ""
        fqdn: ""
        awsInstanceID: ""
        vmPath: ""
        vmWareUuid: ""
    SourceProperties_os:
      allOf:
      - $ref: '#/components/schemas/OS'
      - description: Source server OS.
      example:
        fullString: ""
    StartImportRequest_s3BucketSource:
      allOf:
      - $ref: '#/components/schemas/S3BucketSource'
      - description: Start import request s3 bucket source.
      example:
        s3Key: ""
        s3BucketOwner: ""
        s3Bucket: ""
    UpdateLaunchConfigurationRequest_licensing:
      allOf:
      - $ref: '#/components/schemas/Licensing'
      - description: Update Launch configuration licensing request.
      example:
        osByol: ""
    UpdateLaunchConfigurationTemplateRequest_postLaunchActions:
      allOf:
      - $ref: '#/components/schemas/PostLaunchActions'
      - description: Post Launch Action to execute on the Test or Cutover instance.
      example:
        s3OutputKeyPrefix: ""
        ssmDocuments: ""
        s3LogBucket: ""
        cloudWatchLogGroupName: ""
        deployment: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

