/*
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ReplicationConfigurationDataPlaneRouting;
import org.openapitools.client.model.ReplicationConfigurationDefaultLargeStagingDiskType;
import org.openapitools.client.model.ReplicationConfigurationEbsEncryption;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReplicationConfiguration
 */
public class ReplicationConfigurationTest {
    private final ReplicationConfiguration model = new ReplicationConfiguration();

    /**
     * Model tests for ReplicationConfiguration
     */
    @Test
    public void testReplicationConfiguration() {
        // TODO: test ReplicationConfiguration
    }

    /**
     * Test the property 'associateDefaultSecurityGroup'
     */
    @Test
    public void associateDefaultSecurityGroupTest() {
        // TODO: test associateDefaultSecurityGroup
    }

    /**
     * Test the property 'bandwidthThrottling'
     */
    @Test
    public void bandwidthThrottlingTest() {
        // TODO: test bandwidthThrottling
    }

    /**
     * Test the property 'createPublicIP'
     */
    @Test
    public void createPublicIPTest() {
        // TODO: test createPublicIP
    }

    /**
     * Test the property 'dataPlaneRouting'
     */
    @Test
    public void dataPlaneRoutingTest() {
        // TODO: test dataPlaneRouting
    }

    /**
     * Test the property 'defaultLargeStagingDiskType'
     */
    @Test
    public void defaultLargeStagingDiskTypeTest() {
        // TODO: test defaultLargeStagingDiskType
    }

    /**
     * Test the property 'ebsEncryption'
     */
    @Test
    public void ebsEncryptionTest() {
        // TODO: test ebsEncryption
    }

    /**
     * Test the property 'ebsEncryptionKeyArn'
     */
    @Test
    public void ebsEncryptionKeyArnTest() {
        // TODO: test ebsEncryptionKeyArn
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'replicatedDisks'
     */
    @Test
    public void replicatedDisksTest() {
        // TODO: test replicatedDisks
    }

    /**
     * Test the property 'replicationServerInstanceType'
     */
    @Test
    public void replicationServerInstanceTypeTest() {
        // TODO: test replicationServerInstanceType
    }

    /**
     * Test the property 'replicationServersSecurityGroupsIDs'
     */
    @Test
    public void replicationServersSecurityGroupsIDsTest() {
        // TODO: test replicationServersSecurityGroupsIDs
    }

    /**
     * Test the property 'sourceServerID'
     */
    @Test
    public void sourceServerIDTest() {
        // TODO: test sourceServerID
    }

    /**
     * Test the property 'stagingAreaSubnetId'
     */
    @Test
    public void stagingAreaSubnetIdTest() {
        // TODO: test stagingAreaSubnetId
    }

    /**
     * Test the property 'stagingAreaTags'
     */
    @Test
    public void stagingAreaTagsTest() {
        // TODO: test stagingAreaTags
    }

    /**
     * Test the property 'useDedicatedReplicationServer'
     */
    @Test
    public void useDedicatedReplicationServerTest() {
        // TODO: test useDedicatedReplicationServer
    }

    /**
     * Test the property 'useFipsEndpoint'
     */
    @Test
    public void useFipsEndpointTest() {
        // TODO: test useFipsEndpoint
    }

}
