# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobLogEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    JOB_START = 'JOB_START'
    SERVER_SKIPPED = 'SERVER_SKIPPED'
    CLEANUP_START = 'CLEANUP_START'
    CLEANUP_END = 'CLEANUP_END'
    CLEANUP_FAIL = 'CLEANUP_FAIL'
    SNAPSHOT_START = 'SNAPSHOT_START'
    SNAPSHOT_END = 'SNAPSHOT_END'
    SNAPSHOT_FAIL = 'SNAPSHOT_FAIL'
    USING_PREVIOUS_SNAPSHOT = 'USING_PREVIOUS_SNAPSHOT'
    CONVERSION_START = 'CONVERSION_START'
    CONVERSION_END = 'CONVERSION_END'
    CONVERSION_FAIL = 'CONVERSION_FAIL'
    LAUNCH_START = 'LAUNCH_START'
    LAUNCH_FAILED = 'LAUNCH_FAILED'
    JOB_CANCEL = 'JOB_CANCEL'
    JOB_END = 'JOB_END'

    def __init__(self):
        """JobLogEvent - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobLogEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobLogEvent of this JobLogEvent.
        """
        return util.deserialize_model(dikt, cls)
