# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DeleteReplicationConfigurationTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replication_configuration_template_id: str=None):
        """DeleteReplicationConfigurationTemplateRequest - a model defined in OpenAPI

        :param replication_configuration_template_id: The replication_configuration_template_id of this DeleteReplicationConfigurationTemplateRequest.
        """
        self.openapi_types = {
            'replication_configuration_template_id': str
        }

        self.attribute_map = {
            'replication_configuration_template_id': 'replicationConfigurationTemplateID'
        }

        self._replication_configuration_template_id = replication_configuration_template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteReplicationConfigurationTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteReplicationConfigurationTemplate_request of this DeleteReplicationConfigurationTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replication_configuration_template_id(self):
        """Gets the replication_configuration_template_id of this DeleteReplicationConfigurationTemplateRequest.

        Request to delete Replication Configuration Template from service by Replication Configuration Template ID.

        :return: The replication_configuration_template_id of this DeleteReplicationConfigurationTemplateRequest.
        :rtype: str
        """
        return self._replication_configuration_template_id

    @replication_configuration_template_id.setter
    def replication_configuration_template_id(self, replication_configuration_template_id):
        """Sets the replication_configuration_template_id of this DeleteReplicationConfigurationTemplateRequest.

        Request to delete Replication Configuration Template from service by Replication Configuration Template ID.

        :param replication_configuration_template_id: The replication_configuration_template_id of this DeleteReplicationConfigurationTemplateRequest.
        :type replication_configuration_template_id: str
        """
        if replication_configuration_template_id is None:
            raise ValueError("Invalid value for `replication_configuration_template_id`, must not be `None`")
        if replication_configuration_template_id is not None and len(replication_configuration_template_id) > 21:
            raise ValueError("Invalid value for `replication_configuration_template_id`, length must be less than or equal to `21`")
        if replication_configuration_template_id is not None and len(replication_configuration_template_id) < 21:
            raise ValueError("Invalid value for `replication_configuration_template_id`, length must be greater than or equal to `21`")
        if replication_configuration_template_id is not None and not re.search(r'^rct-[0-9a-zA-Z]{17}$', replication_configuration_template_id):
            raise ValueError("Invalid value for `replication_configuration_template_id`, must be a follow pattern or equal to `/^rct-[0-9a-zA-Z]{17}$/`")

        self._replication_configuration_template_id = replication_configuration_template_id
