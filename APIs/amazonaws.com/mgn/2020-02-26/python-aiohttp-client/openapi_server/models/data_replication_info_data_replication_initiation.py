# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataReplicationInfoDataReplicationInitiation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_attempt_date_time: str=None, start_date_time: str=None, steps: List=None):
        """DataReplicationInfoDataReplicationInitiation - a model defined in OpenAPI

        :param next_attempt_date_time: The next_attempt_date_time of this DataReplicationInfoDataReplicationInitiation.
        :param start_date_time: The start_date_time of this DataReplicationInfoDataReplicationInitiation.
        :param steps: The steps of this DataReplicationInfoDataReplicationInitiation.
        """
        self.openapi_types = {
            'next_attempt_date_time': str,
            'start_date_time': str,
            'steps': List
        }

        self.attribute_map = {
            'next_attempt_date_time': 'nextAttemptDateTime',
            'start_date_time': 'startDateTime',
            'steps': 'steps'
        }

        self._next_attempt_date_time = next_attempt_date_time
        self._start_date_time = start_date_time
        self._steps = steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataReplicationInfoDataReplicationInitiation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataReplicationInfo_dataReplicationInitiation of this DataReplicationInfoDataReplicationInitiation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_attempt_date_time(self):
        """Gets the next_attempt_date_time of this DataReplicationInfoDataReplicationInitiation.


        :return: The next_attempt_date_time of this DataReplicationInfoDataReplicationInitiation.
        :rtype: str
        """
        return self._next_attempt_date_time

    @next_attempt_date_time.setter
    def next_attempt_date_time(self, next_attempt_date_time):
        """Sets the next_attempt_date_time of this DataReplicationInfoDataReplicationInitiation.


        :param next_attempt_date_time: The next_attempt_date_time of this DataReplicationInfoDataReplicationInitiation.
        :type next_attempt_date_time: str
        """

        self._next_attempt_date_time = next_attempt_date_time

    @property
    def start_date_time(self):
        """Gets the start_date_time of this DataReplicationInfoDataReplicationInitiation.


        :return: The start_date_time of this DataReplicationInfoDataReplicationInitiation.
        :rtype: str
        """
        return self._start_date_time

    @start_date_time.setter
    def start_date_time(self, start_date_time):
        """Sets the start_date_time of this DataReplicationInfoDataReplicationInitiation.


        :param start_date_time: The start_date_time of this DataReplicationInfoDataReplicationInitiation.
        :type start_date_time: str
        """

        self._start_date_time = start_date_time

    @property
    def steps(self):
        """Gets the steps of this DataReplicationInfoDataReplicationInitiation.


        :return: The steps of this DataReplicationInfoDataReplicationInitiation.
        :rtype: List
        """
        return self._steps

    @steps.setter
    def steps(self, steps):
        """Sets the steps of this DataReplicationInfoDataReplicationInitiation.


        :param steps: The steps of this DataReplicationInfoDataReplicationInitiation.
        :type steps: List
        """

        self._steps = steps
