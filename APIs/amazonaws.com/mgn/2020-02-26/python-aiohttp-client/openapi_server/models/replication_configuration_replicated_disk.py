# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replication_configuration_replicated_disk_staging_disk_type import ReplicationConfigurationReplicatedDiskStagingDiskType
from openapi_server import util


class ReplicationConfigurationReplicatedDisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_name: str=None, iops: int=None, is_boot_disk: bool=None, staging_disk_type: ReplicationConfigurationReplicatedDiskStagingDiskType=None, throughput: int=None):
        """ReplicationConfigurationReplicatedDisk - a model defined in OpenAPI

        :param device_name: The device_name of this ReplicationConfigurationReplicatedDisk.
        :param iops: The iops of this ReplicationConfigurationReplicatedDisk.
        :param is_boot_disk: The is_boot_disk of this ReplicationConfigurationReplicatedDisk.
        :param staging_disk_type: The staging_disk_type of this ReplicationConfigurationReplicatedDisk.
        :param throughput: The throughput of this ReplicationConfigurationReplicatedDisk.
        """
        self.openapi_types = {
            'device_name': str,
            'iops': int,
            'is_boot_disk': bool,
            'staging_disk_type': ReplicationConfigurationReplicatedDiskStagingDiskType,
            'throughput': int
        }

        self.attribute_map = {
            'device_name': 'deviceName',
            'iops': 'iops',
            'is_boot_disk': 'isBootDisk',
            'staging_disk_type': 'stagingDiskType',
            'throughput': 'throughput'
        }

        self._device_name = device_name
        self._iops = iops
        self._is_boot_disk = is_boot_disk
        self._staging_disk_type = staging_disk_type
        self._throughput = throughput

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicationConfigurationReplicatedDisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicationConfigurationReplicatedDisk of this ReplicationConfigurationReplicatedDisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_name(self):
        """Gets the device_name of this ReplicationConfigurationReplicatedDisk.


        :return: The device_name of this ReplicationConfigurationReplicatedDisk.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this ReplicationConfigurationReplicatedDisk.


        :param device_name: The device_name of this ReplicationConfigurationReplicatedDisk.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def iops(self):
        """Gets the iops of this ReplicationConfigurationReplicatedDisk.


        :return: The iops of this ReplicationConfigurationReplicatedDisk.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this ReplicationConfigurationReplicatedDisk.


        :param iops: The iops of this ReplicationConfigurationReplicatedDisk.
        :type iops: int
        """

        self._iops = iops

    @property
    def is_boot_disk(self):
        """Gets the is_boot_disk of this ReplicationConfigurationReplicatedDisk.


        :return: The is_boot_disk of this ReplicationConfigurationReplicatedDisk.
        :rtype: bool
        """
        return self._is_boot_disk

    @is_boot_disk.setter
    def is_boot_disk(self, is_boot_disk):
        """Sets the is_boot_disk of this ReplicationConfigurationReplicatedDisk.


        :param is_boot_disk: The is_boot_disk of this ReplicationConfigurationReplicatedDisk.
        :type is_boot_disk: bool
        """

        self._is_boot_disk = is_boot_disk

    @property
    def staging_disk_type(self):
        """Gets the staging_disk_type of this ReplicationConfigurationReplicatedDisk.


        :return: The staging_disk_type of this ReplicationConfigurationReplicatedDisk.
        :rtype: ReplicationConfigurationReplicatedDiskStagingDiskType
        """
        return self._staging_disk_type

    @staging_disk_type.setter
    def staging_disk_type(self, staging_disk_type):
        """Sets the staging_disk_type of this ReplicationConfigurationReplicatedDisk.


        :param staging_disk_type: The staging_disk_type of this ReplicationConfigurationReplicatedDisk.
        :type staging_disk_type: ReplicationConfigurationReplicatedDiskStagingDiskType
        """

        self._staging_disk_type = staging_disk_type

    @property
    def throughput(self):
        """Gets the throughput of this ReplicationConfigurationReplicatedDisk.


        :return: The throughput of this ReplicationConfigurationReplicatedDisk.
        :rtype: int
        """
        return self._throughput

    @throughput.setter
    def throughput(self, throughput):
        """Sets the throughput of this ReplicationConfigurationReplicatedDisk.


        :param throughput: The throughput of this ReplicationConfigurationReplicatedDisk.
        :type throughput: int
        """

        self._throughput = throughput
