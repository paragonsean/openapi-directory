# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnarchiveApplicationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, application_id: str=None):
        """UnarchiveApplicationRequest - a model defined in OpenAPI

        :param account_id: The account_id of this UnarchiveApplicationRequest.
        :param application_id: The application_id of this UnarchiveApplicationRequest.
        """
        self.openapi_types = {
            'account_id': str,
            'application_id': str
        }

        self.attribute_map = {
            'account_id': 'accountID',
            'application_id': 'applicationID'
        }

        self._account_id = account_id
        self._application_id = application_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnarchiveApplicationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnarchiveApplicationRequest of this UnarchiveApplicationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this UnarchiveApplicationRequest.


        :return: The account_id of this UnarchiveApplicationRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this UnarchiveApplicationRequest.


        :param account_id: The account_id of this UnarchiveApplicationRequest.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def application_id(self):
        """Gets the application_id of this UnarchiveApplicationRequest.


        :return: The application_id of this UnarchiveApplicationRequest.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this UnarchiveApplicationRequest.


        :param application_id: The application_id of this UnarchiveApplicationRequest.
        :type application_id: str
        """
        if application_id is None:
            raise ValueError("Invalid value for `application_id`, must not be `None`")

        self._application_id = application_id
