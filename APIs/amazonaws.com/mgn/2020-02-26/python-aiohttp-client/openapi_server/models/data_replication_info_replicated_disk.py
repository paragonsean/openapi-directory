# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataReplicationInfoReplicatedDisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backlogged_storage_bytes: int=None, device_name: str=None, replicated_storage_bytes: int=None, rescanned_storage_bytes: int=None, total_storage_bytes: int=None):
        """DataReplicationInfoReplicatedDisk - a model defined in OpenAPI

        :param backlogged_storage_bytes: The backlogged_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :param device_name: The device_name of this DataReplicationInfoReplicatedDisk.
        :param replicated_storage_bytes: The replicated_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :param rescanned_storage_bytes: The rescanned_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :param total_storage_bytes: The total_storage_bytes of this DataReplicationInfoReplicatedDisk.
        """
        self.openapi_types = {
            'backlogged_storage_bytes': int,
            'device_name': str,
            'replicated_storage_bytes': int,
            'rescanned_storage_bytes': int,
            'total_storage_bytes': int
        }

        self.attribute_map = {
            'backlogged_storage_bytes': 'backloggedStorageBytes',
            'device_name': 'deviceName',
            'replicated_storage_bytes': 'replicatedStorageBytes',
            'rescanned_storage_bytes': 'rescannedStorageBytes',
            'total_storage_bytes': 'totalStorageBytes'
        }

        self._backlogged_storage_bytes = backlogged_storage_bytes
        self._device_name = device_name
        self._replicated_storage_bytes = replicated_storage_bytes
        self._rescanned_storage_bytes = rescanned_storage_bytes
        self._total_storage_bytes = total_storage_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataReplicationInfoReplicatedDisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataReplicationInfoReplicatedDisk of this DataReplicationInfoReplicatedDisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backlogged_storage_bytes(self):
        """Gets the backlogged_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :return: The backlogged_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :rtype: int
        """
        return self._backlogged_storage_bytes

    @backlogged_storage_bytes.setter
    def backlogged_storage_bytes(self, backlogged_storage_bytes):
        """Sets the backlogged_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :param backlogged_storage_bytes: The backlogged_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :type backlogged_storage_bytes: int
        """

        self._backlogged_storage_bytes = backlogged_storage_bytes

    @property
    def device_name(self):
        """Gets the device_name of this DataReplicationInfoReplicatedDisk.


        :return: The device_name of this DataReplicationInfoReplicatedDisk.
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this DataReplicationInfoReplicatedDisk.


        :param device_name: The device_name of this DataReplicationInfoReplicatedDisk.
        :type device_name: str
        """

        self._device_name = device_name

    @property
    def replicated_storage_bytes(self):
        """Gets the replicated_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :return: The replicated_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :rtype: int
        """
        return self._replicated_storage_bytes

    @replicated_storage_bytes.setter
    def replicated_storage_bytes(self, replicated_storage_bytes):
        """Sets the replicated_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :param replicated_storage_bytes: The replicated_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :type replicated_storage_bytes: int
        """

        self._replicated_storage_bytes = replicated_storage_bytes

    @property
    def rescanned_storage_bytes(self):
        """Gets the rescanned_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :return: The rescanned_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :rtype: int
        """
        return self._rescanned_storage_bytes

    @rescanned_storage_bytes.setter
    def rescanned_storage_bytes(self, rescanned_storage_bytes):
        """Sets the rescanned_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :param rescanned_storage_bytes: The rescanned_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :type rescanned_storage_bytes: int
        """

        self._rescanned_storage_bytes = rescanned_storage_bytes

    @property
    def total_storage_bytes(self):
        """Gets the total_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :return: The total_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :rtype: int
        """
        return self._total_storage_bytes

    @total_storage_bytes.setter
    def total_storage_bytes(self, total_storage_bytes):
        """Sets the total_storage_bytes of this DataReplicationInfoReplicatedDisk.


        :param total_storage_bytes: The total_storage_bytes of this DataReplicationInfoReplicatedDisk.
        :type total_storage_bytes: int
        """

        self._total_storage_bytes = total_storage_bytes
