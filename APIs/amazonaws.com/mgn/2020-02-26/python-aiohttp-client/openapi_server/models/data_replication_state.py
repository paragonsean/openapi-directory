# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataReplicationState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    STOPPED = 'STOPPED'
    INITIATING = 'INITIATING'
    INITIAL_SYNC = 'INITIAL_SYNC'
    BACKLOG = 'BACKLOG'
    CREATING_SNAPSHOT = 'CREATING_SNAPSHOT'
    CONTINUOUS = 'CONTINUOUS'
    PAUSED = 'PAUSED'
    RESCAN = 'RESCAN'
    STALLED = 'STALLED'
    DISCONNECTED = 'DISCONNECTED'
    PENDING_SNAPSHOT_SHIPPING = 'PENDING_SNAPSHOT_SHIPPING'
    SHIPPING_SNAPSHOT = 'SHIPPING_SNAPSHOT'

    def __init__(self):
        """DataReplicationState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataReplicationState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataReplicationState of this DataReplicationState.
        """
        return util.deserialize_model(dikt, cls)
