# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_task_summary_applications import ImportTaskSummaryApplications
from openapi_server.models.import_task_summary_servers import ImportTaskSummaryServers
from openapi_server.models.import_task_summary_waves import ImportTaskSummaryWaves
from openapi_server import util


class ImportTaskSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applications: ImportTaskSummaryApplications=None, servers: ImportTaskSummaryServers=None, waves: ImportTaskSummaryWaves=None):
        """ImportTaskSummary - a model defined in OpenAPI

        :param applications: The applications of this ImportTaskSummary.
        :param servers: The servers of this ImportTaskSummary.
        :param waves: The waves of this ImportTaskSummary.
        """
        self.openapi_types = {
            'applications': ImportTaskSummaryApplications,
            'servers': ImportTaskSummaryServers,
            'waves': ImportTaskSummaryWaves
        }

        self.attribute_map = {
            'applications': 'applications',
            'servers': 'servers',
            'waves': 'waves'
        }

        self._applications = applications
        self._servers = servers
        self._waves = waves

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportTaskSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportTask_summary of this ImportTaskSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applications(self):
        """Gets the applications of this ImportTaskSummary.


        :return: The applications of this ImportTaskSummary.
        :rtype: ImportTaskSummaryApplications
        """
        return self._applications

    @applications.setter
    def applications(self, applications):
        """Sets the applications of this ImportTaskSummary.


        :param applications: The applications of this ImportTaskSummary.
        :type applications: ImportTaskSummaryApplications
        """

        self._applications = applications

    @property
    def servers(self):
        """Gets the servers of this ImportTaskSummary.


        :return: The servers of this ImportTaskSummary.
        :rtype: ImportTaskSummaryServers
        """
        return self._servers

    @servers.setter
    def servers(self, servers):
        """Sets the servers of this ImportTaskSummary.


        :param servers: The servers of this ImportTaskSummary.
        :type servers: ImportTaskSummaryServers
        """

        self._servers = servers

    @property
    def waves(self):
        """Gets the waves of this ImportTaskSummary.


        :return: The waves of this ImportTaskSummary.
        :rtype: ImportTaskSummaryWaves
        """
        return self._waves

    @waves.setter
    def waves(self, waves):
        """Sets the waves of this ImportTaskSummary.


        :param waves: The waves of this ImportTaskSummary.
        :type waves: ImportTaskSummaryWaves
        """

        self._waves = waves
