# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volume_type import VolumeType
from openapi_server import util


class CreateLaunchConfigurationTemplateRequestLargeVolumeConf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iops: int=None, throughput: int=None, volume_type: VolumeType=None):
        """CreateLaunchConfigurationTemplateRequestLargeVolumeConf - a model defined in OpenAPI

        :param iops: The iops of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :param throughput: The throughput of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :param volume_type: The volume_type of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        """
        self.openapi_types = {
            'iops': int,
            'throughput': int,
            'volume_type': VolumeType
        }

        self.attribute_map = {
            'iops': 'iops',
            'throughput': 'throughput',
            'volume_type': 'volumeType'
        }

        self._iops = iops
        self._throughput = throughput
        self._volume_type = volume_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLaunchConfigurationTemplateRequestLargeVolumeConf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLaunchConfigurationTemplate_request_largeVolumeConf of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iops(self):
        """Gets the iops of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :return: The iops of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :rtype: int
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :param iops: The iops of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :type iops: int
        """

        self._iops = iops

    @property
    def throughput(self):
        """Gets the throughput of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :return: The throughput of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :rtype: int
        """
        return self._throughput

    @throughput.setter
    def throughput(self, throughput):
        """Sets the throughput of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :param throughput: The throughput of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :type throughput: int
        """

        self._throughput = throughput

    @property
    def volume_type(self):
        """Gets the volume_type of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :return: The volume_type of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :rtype: VolumeType
        """
        return self._volume_type

    @volume_type.setter
    def volume_type(self, volume_type):
        """Sets the volume_type of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.


        :param volume_type: The volume_type of this CreateLaunchConfigurationTemplateRequestLargeVolumeConf.
        :type volume_type: VolumeType
        """

        self._volume_type = volume_type
