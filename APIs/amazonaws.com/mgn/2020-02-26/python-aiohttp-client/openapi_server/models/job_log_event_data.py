# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobLogEventData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversion_server_id: str=None, raw_error: str=None, source_server_id: str=None, target_instance_id: str=None):
        """JobLogEventData - a model defined in OpenAPI

        :param conversion_server_id: The conversion_server_id of this JobLogEventData.
        :param raw_error: The raw_error of this JobLogEventData.
        :param source_server_id: The source_server_id of this JobLogEventData.
        :param target_instance_id: The target_instance_id of this JobLogEventData.
        """
        self.openapi_types = {
            'conversion_server_id': str,
            'raw_error': str,
            'source_server_id': str,
            'target_instance_id': str
        }

        self.attribute_map = {
            'conversion_server_id': 'conversionServerID',
            'raw_error': 'rawError',
            'source_server_id': 'sourceServerID',
            'target_instance_id': 'targetInstanceID'
        }

        self._conversion_server_id = conversion_server_id
        self._raw_error = raw_error
        self._source_server_id = source_server_id
        self._target_instance_id = target_instance_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobLogEventData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobLog_eventData of this JobLogEventData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion_server_id(self):
        """Gets the conversion_server_id of this JobLogEventData.


        :return: The conversion_server_id of this JobLogEventData.
        :rtype: str
        """
        return self._conversion_server_id

    @conversion_server_id.setter
    def conversion_server_id(self, conversion_server_id):
        """Sets the conversion_server_id of this JobLogEventData.


        :param conversion_server_id: The conversion_server_id of this JobLogEventData.
        :type conversion_server_id: str
        """

        self._conversion_server_id = conversion_server_id

    @property
    def raw_error(self):
        """Gets the raw_error of this JobLogEventData.


        :return: The raw_error of this JobLogEventData.
        :rtype: str
        """
        return self._raw_error

    @raw_error.setter
    def raw_error(self, raw_error):
        """Sets the raw_error of this JobLogEventData.


        :param raw_error: The raw_error of this JobLogEventData.
        :type raw_error: str
        """

        self._raw_error = raw_error

    @property
    def source_server_id(self):
        """Gets the source_server_id of this JobLogEventData.


        :return: The source_server_id of this JobLogEventData.
        :rtype: str
        """
        return self._source_server_id

    @source_server_id.setter
    def source_server_id(self, source_server_id):
        """Sets the source_server_id of this JobLogEventData.


        :param source_server_id: The source_server_id of this JobLogEventData.
        :type source_server_id: str
        """

        self._source_server_id = source_server_id

    @property
    def target_instance_id(self):
        """Gets the target_instance_id of this JobLogEventData.


        :return: The target_instance_id of this JobLogEventData.
        :rtype: str
        """
        return self._target_instance_id

    @target_instance_id.setter
    def target_instance_id(self, target_instance_id):
        """Sets the target_instance_id of this JobLogEventData.


        :param target_instance_id: The target_instance_id of this JobLogEventData.
        :type target_instance_id: str
        """

        self._target_instance_id = target_instance_id
