# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_server_life_cycle_state_request_life_cycle import ChangeServerLifeCycleStateRequestLifeCycle
import re
from openapi_server import util


class ChangeServerLifeCycleStateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, life_cycle: ChangeServerLifeCycleStateRequestLifeCycle=None, source_server_id: str=None):
        """ChangeServerLifeCycleStateRequest - a model defined in OpenAPI

        :param account_id: The account_id of this ChangeServerLifeCycleStateRequest.
        :param life_cycle: The life_cycle of this ChangeServerLifeCycleStateRequest.
        :param source_server_id: The source_server_id of this ChangeServerLifeCycleStateRequest.
        """
        self.openapi_types = {
            'account_id': str,
            'life_cycle': ChangeServerLifeCycleStateRequestLifeCycle,
            'source_server_id': str
        }

        self.attribute_map = {
            'account_id': 'accountID',
            'life_cycle': 'lifeCycle',
            'source_server_id': 'sourceServerID'
        }

        self._account_id = account_id
        self._life_cycle = life_cycle
        self._source_server_id = source_server_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeServerLifeCycleStateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeServerLifeCycleState_request of this ChangeServerLifeCycleStateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ChangeServerLifeCycleStateRequest.

        The request to change the source server migration account ID.

        :return: The account_id of this ChangeServerLifeCycleStateRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ChangeServerLifeCycleStateRequest.

        The request to change the source server migration account ID.

        :param account_id: The account_id of this ChangeServerLifeCycleStateRequest.
        :type account_id: str
        """
        if account_id is not None and len(account_id) > 12:
            raise ValueError("Invalid value for `account_id`, length must be less than or equal to `12`")
        if account_id is not None and len(account_id) < 12:
            raise ValueError("Invalid value for `account_id`, length must be greater than or equal to `12`")
        if account_id is not None and not re.search(r'[0-9]{12,}', account_id):
            raise ValueError("Invalid value for `account_id`, must be a follow pattern or equal to `/[0-9]{12,}/`")

        self._account_id = account_id

    @property
    def life_cycle(self):
        """Gets the life_cycle of this ChangeServerLifeCycleStateRequest.


        :return: The life_cycle of this ChangeServerLifeCycleStateRequest.
        :rtype: ChangeServerLifeCycleStateRequestLifeCycle
        """
        return self._life_cycle

    @life_cycle.setter
    def life_cycle(self, life_cycle):
        """Sets the life_cycle of this ChangeServerLifeCycleStateRequest.


        :param life_cycle: The life_cycle of this ChangeServerLifeCycleStateRequest.
        :type life_cycle: ChangeServerLifeCycleStateRequestLifeCycle
        """
        if life_cycle is None:
            raise ValueError("Invalid value for `life_cycle`, must not be `None`")

        self._life_cycle = life_cycle

    @property
    def source_server_id(self):
        """Gets the source_server_id of this ChangeServerLifeCycleStateRequest.

        The request to change the source server migration lifecycle state by source server ID.

        :return: The source_server_id of this ChangeServerLifeCycleStateRequest.
        :rtype: str
        """
        return self._source_server_id

    @source_server_id.setter
    def source_server_id(self, source_server_id):
        """Sets the source_server_id of this ChangeServerLifeCycleStateRequest.

        The request to change the source server migration lifecycle state by source server ID.

        :param source_server_id: The source_server_id of this ChangeServerLifeCycleStateRequest.
        :type source_server_id: str
        """
        if source_server_id is None:
            raise ValueError("Invalid value for `source_server_id`, must not be `None`")
        if source_server_id is not None and len(source_server_id) > 19:
            raise ValueError("Invalid value for `source_server_id`, length must be less than or equal to `19`")
        if source_server_id is not None and len(source_server_id) < 19:
            raise ValueError("Invalid value for `source_server_id`, length must be greater than or equal to `19`")
        if source_server_id is not None and not re.search(r'^s-[0-9a-zA-Z]{17}$', source_server_id):
            raise ValueError("Invalid value for `source_server_id`, must be a follow pattern or equal to `/^s-[0-9a-zA-Z]{17}$/`")

        self._source_server_id = source_server_id
