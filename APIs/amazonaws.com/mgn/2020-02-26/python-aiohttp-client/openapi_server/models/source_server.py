# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replication_type import ReplicationType
from openapi_server.models.source_server_data_replication_info import SourceServerDataReplicationInfo
from openapi_server.models.source_server_launched_instance import SourceServerLaunchedInstance
from openapi_server.models.source_server_life_cycle import SourceServerLifeCycle
from openapi_server.models.source_server_source_properties import SourceServerSourceProperties
from openapi_server import util


class SourceServer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, arn: str=None, data_replication_info: SourceServerDataReplicationInfo=None, fqdn_for_action_framework: str=None, is_archived: bool=None, launched_instance: SourceServerLaunchedInstance=None, life_cycle: SourceServerLifeCycle=None, replication_type: ReplicationType=None, source_properties: SourceServerSourceProperties=None, source_server_id: str=None, tags: Dict=None, user_provided_id: str=None, vcenter_client_id: str=None):
        """SourceServer - a model defined in OpenAPI

        :param application_id: The application_id of this SourceServer.
        :param arn: The arn of this SourceServer.
        :param data_replication_info: The data_replication_info of this SourceServer.
        :param fqdn_for_action_framework: The fqdn_for_action_framework of this SourceServer.
        :param is_archived: The is_archived of this SourceServer.
        :param launched_instance: The launched_instance of this SourceServer.
        :param life_cycle: The life_cycle of this SourceServer.
        :param replication_type: The replication_type of this SourceServer.
        :param source_properties: The source_properties of this SourceServer.
        :param source_server_id: The source_server_id of this SourceServer.
        :param tags: The tags of this SourceServer.
        :param user_provided_id: The user_provided_id of this SourceServer.
        :param vcenter_client_id: The vcenter_client_id of this SourceServer.
        """
        self.openapi_types = {
            'application_id': str,
            'arn': str,
            'data_replication_info': SourceServerDataReplicationInfo,
            'fqdn_for_action_framework': str,
            'is_archived': bool,
            'launched_instance': SourceServerLaunchedInstance,
            'life_cycle': SourceServerLifeCycle,
            'replication_type': ReplicationType,
            'source_properties': SourceServerSourceProperties,
            'source_server_id': str,
            'tags': Dict,
            'user_provided_id': str,
            'vcenter_client_id': str
        }

        self.attribute_map = {
            'application_id': 'applicationID',
            'arn': 'arn',
            'data_replication_info': 'dataReplicationInfo',
            'fqdn_for_action_framework': 'fqdnForActionFramework',
            'is_archived': 'isArchived',
            'launched_instance': 'launchedInstance',
            'life_cycle': 'lifeCycle',
            'replication_type': 'replicationType',
            'source_properties': 'sourceProperties',
            'source_server_id': 'sourceServerID',
            'tags': 'tags',
            'user_provided_id': 'userProvidedID',
            'vcenter_client_id': 'vcenterClientID'
        }

        self._application_id = application_id
        self._arn = arn
        self._data_replication_info = data_replication_info
        self._fqdn_for_action_framework = fqdn_for_action_framework
        self._is_archived = is_archived
        self._launched_instance = launched_instance
        self._life_cycle = life_cycle
        self._replication_type = replication_type
        self._source_properties = source_properties
        self._source_server_id = source_server_id
        self._tags = tags
        self._user_provided_id = user_provided_id
        self._vcenter_client_id = vcenter_client_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceServer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceServer of this SourceServer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this SourceServer.


        :return: The application_id of this SourceServer.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this SourceServer.


        :param application_id: The application_id of this SourceServer.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def arn(self):
        """Gets the arn of this SourceServer.


        :return: The arn of this SourceServer.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this SourceServer.


        :param arn: The arn of this SourceServer.
        :type arn: str
        """

        self._arn = arn

    @property
    def data_replication_info(self):
        """Gets the data_replication_info of this SourceServer.


        :return: The data_replication_info of this SourceServer.
        :rtype: SourceServerDataReplicationInfo
        """
        return self._data_replication_info

    @data_replication_info.setter
    def data_replication_info(self, data_replication_info):
        """Sets the data_replication_info of this SourceServer.


        :param data_replication_info: The data_replication_info of this SourceServer.
        :type data_replication_info: SourceServerDataReplicationInfo
        """

        self._data_replication_info = data_replication_info

    @property
    def fqdn_for_action_framework(self):
        """Gets the fqdn_for_action_framework of this SourceServer.


        :return: The fqdn_for_action_framework of this SourceServer.
        :rtype: str
        """
        return self._fqdn_for_action_framework

    @fqdn_for_action_framework.setter
    def fqdn_for_action_framework(self, fqdn_for_action_framework):
        """Sets the fqdn_for_action_framework of this SourceServer.


        :param fqdn_for_action_framework: The fqdn_for_action_framework of this SourceServer.
        :type fqdn_for_action_framework: str
        """

        self._fqdn_for_action_framework = fqdn_for_action_framework

    @property
    def is_archived(self):
        """Gets the is_archived of this SourceServer.


        :return: The is_archived of this SourceServer.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this SourceServer.


        :param is_archived: The is_archived of this SourceServer.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def launched_instance(self):
        """Gets the launched_instance of this SourceServer.


        :return: The launched_instance of this SourceServer.
        :rtype: SourceServerLaunchedInstance
        """
        return self._launched_instance

    @launched_instance.setter
    def launched_instance(self, launched_instance):
        """Sets the launched_instance of this SourceServer.


        :param launched_instance: The launched_instance of this SourceServer.
        :type launched_instance: SourceServerLaunchedInstance
        """

        self._launched_instance = launched_instance

    @property
    def life_cycle(self):
        """Gets the life_cycle of this SourceServer.


        :return: The life_cycle of this SourceServer.
        :rtype: SourceServerLifeCycle
        """
        return self._life_cycle

    @life_cycle.setter
    def life_cycle(self, life_cycle):
        """Sets the life_cycle of this SourceServer.


        :param life_cycle: The life_cycle of this SourceServer.
        :type life_cycle: SourceServerLifeCycle
        """

        self._life_cycle = life_cycle

    @property
    def replication_type(self):
        """Gets the replication_type of this SourceServer.


        :return: The replication_type of this SourceServer.
        :rtype: ReplicationType
        """
        return self._replication_type

    @replication_type.setter
    def replication_type(self, replication_type):
        """Sets the replication_type of this SourceServer.


        :param replication_type: The replication_type of this SourceServer.
        :type replication_type: ReplicationType
        """

        self._replication_type = replication_type

    @property
    def source_properties(self):
        """Gets the source_properties of this SourceServer.


        :return: The source_properties of this SourceServer.
        :rtype: SourceServerSourceProperties
        """
        return self._source_properties

    @source_properties.setter
    def source_properties(self, source_properties):
        """Sets the source_properties of this SourceServer.


        :param source_properties: The source_properties of this SourceServer.
        :type source_properties: SourceServerSourceProperties
        """

        self._source_properties = source_properties

    @property
    def source_server_id(self):
        """Gets the source_server_id of this SourceServer.


        :return: The source_server_id of this SourceServer.
        :rtype: str
        """
        return self._source_server_id

    @source_server_id.setter
    def source_server_id(self, source_server_id):
        """Sets the source_server_id of this SourceServer.


        :param source_server_id: The source_server_id of this SourceServer.
        :type source_server_id: str
        """

        self._source_server_id = source_server_id

    @property
    def tags(self):
        """Gets the tags of this SourceServer.


        :return: The tags of this SourceServer.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SourceServer.


        :param tags: The tags of this SourceServer.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def user_provided_id(self):
        """Gets the user_provided_id of this SourceServer.


        :return: The user_provided_id of this SourceServer.
        :rtype: str
        """
        return self._user_provided_id

    @user_provided_id.setter
    def user_provided_id(self, user_provided_id):
        """Sets the user_provided_id of this SourceServer.


        :param user_provided_id: The user_provided_id of this SourceServer.
        :type user_provided_id: str
        """

        self._user_provided_id = user_provided_id

    @property
    def vcenter_client_id(self):
        """Gets the vcenter_client_id of this SourceServer.


        :return: The vcenter_client_id of this SourceServer.
        :rtype: str
        """
        return self._vcenter_client_id

    @vcenter_client_id.setter
    def vcenter_client_id(self, vcenter_client_id):
        """Sets the vcenter_client_id of this SourceServer.


        :param vcenter_client_id: The vcenter_client_id of this SourceServer.
        :type vcenter_client_id: str
        """

        self._vcenter_client_id = vcenter_client_id
