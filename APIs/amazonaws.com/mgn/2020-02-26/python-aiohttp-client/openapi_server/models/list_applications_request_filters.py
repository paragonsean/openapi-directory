# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListApplicationsRequestFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_ids: List=None, is_archived: bool=None, wave_ids: List=None):
        """ListApplicationsRequestFilters - a model defined in OpenAPI

        :param application_ids: The application_ids of this ListApplicationsRequestFilters.
        :param is_archived: The is_archived of this ListApplicationsRequestFilters.
        :param wave_ids: The wave_ids of this ListApplicationsRequestFilters.
        """
        self.openapi_types = {
            'application_ids': List,
            'is_archived': bool,
            'wave_ids': List
        }

        self.attribute_map = {
            'application_ids': 'applicationIDs',
            'is_archived': 'isArchived',
            'wave_ids': 'waveIDs'
        }

        self._application_ids = application_ids
        self._is_archived = is_archived
        self._wave_ids = wave_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListApplicationsRequestFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListApplicationsRequest_filters of this ListApplicationsRequestFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_ids(self):
        """Gets the application_ids of this ListApplicationsRequestFilters.


        :return: The application_ids of this ListApplicationsRequestFilters.
        :rtype: List
        """
        return self._application_ids

    @application_ids.setter
    def application_ids(self, application_ids):
        """Sets the application_ids of this ListApplicationsRequestFilters.


        :param application_ids: The application_ids of this ListApplicationsRequestFilters.
        :type application_ids: List
        """

        self._application_ids = application_ids

    @property
    def is_archived(self):
        """Gets the is_archived of this ListApplicationsRequestFilters.


        :return: The is_archived of this ListApplicationsRequestFilters.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this ListApplicationsRequestFilters.


        :param is_archived: The is_archived of this ListApplicationsRequestFilters.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def wave_ids(self):
        """Gets the wave_ids of this ListApplicationsRequestFilters.


        :return: The wave_ids of this ListApplicationsRequestFilters.
        :rtype: List
        """
        return self._wave_ids

    @wave_ids.setter
    def wave_ids(self, wave_ids):
        """Sets the wave_ids of this ListApplicationsRequestFilters.


        :param wave_ids: The wave_ids of this ListApplicationsRequestFilters.
        :type wave_ids: List
        """

        self._wave_ids = wave_ids
