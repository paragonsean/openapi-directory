# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_status import ImportStatus
from openapi_server.models.import_task_s3_bucket_source import ImportTaskS3BucketSource
from openapi_server.models.import_task_summary import ImportTaskSummary
from openapi_server import util


class StartImportResponseImportTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date_time: str=None, end_date_time: str=None, import_id: str=None, progress_percentage: float=None, s3_bucket_source: ImportTaskS3BucketSource=None, status: ImportStatus=None, summary: ImportTaskSummary=None):
        """StartImportResponseImportTask - a model defined in OpenAPI

        :param creation_date_time: The creation_date_time of this StartImportResponseImportTask.
        :param end_date_time: The end_date_time of this StartImportResponseImportTask.
        :param import_id: The import_id of this StartImportResponseImportTask.
        :param progress_percentage: The progress_percentage of this StartImportResponseImportTask.
        :param s3_bucket_source: The s3_bucket_source of this StartImportResponseImportTask.
        :param status: The status of this StartImportResponseImportTask.
        :param summary: The summary of this StartImportResponseImportTask.
        """
        self.openapi_types = {
            'creation_date_time': str,
            'end_date_time': str,
            'import_id': str,
            'progress_percentage': float,
            's3_bucket_source': ImportTaskS3BucketSource,
            'status': ImportStatus,
            'summary': ImportTaskSummary
        }

        self.attribute_map = {
            'creation_date_time': 'creationDateTime',
            'end_date_time': 'endDateTime',
            'import_id': 'importID',
            'progress_percentage': 'progressPercentage',
            's3_bucket_source': 's3BucketSource',
            'status': 'status',
            'summary': 'summary'
        }

        self._creation_date_time = creation_date_time
        self._end_date_time = end_date_time
        self._import_id = import_id
        self._progress_percentage = progress_percentage
        self._s3_bucket_source = s3_bucket_source
        self._status = status
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartImportResponseImportTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartImportResponse_importTask of this StartImportResponseImportTask.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date_time(self):
        """Gets the creation_date_time of this StartImportResponseImportTask.


        :return: The creation_date_time of this StartImportResponseImportTask.
        :rtype: str
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time):
        """Sets the creation_date_time of this StartImportResponseImportTask.


        :param creation_date_time: The creation_date_time of this StartImportResponseImportTask.
        :type creation_date_time: str
        """

        self._creation_date_time = creation_date_time

    @property
    def end_date_time(self):
        """Gets the end_date_time of this StartImportResponseImportTask.


        :return: The end_date_time of this StartImportResponseImportTask.
        :rtype: str
        """
        return self._end_date_time

    @end_date_time.setter
    def end_date_time(self, end_date_time):
        """Sets the end_date_time of this StartImportResponseImportTask.


        :param end_date_time: The end_date_time of this StartImportResponseImportTask.
        :type end_date_time: str
        """

        self._end_date_time = end_date_time

    @property
    def import_id(self):
        """Gets the import_id of this StartImportResponseImportTask.


        :return: The import_id of this StartImportResponseImportTask.
        :rtype: str
        """
        return self._import_id

    @import_id.setter
    def import_id(self, import_id):
        """Sets the import_id of this StartImportResponseImportTask.


        :param import_id: The import_id of this StartImportResponseImportTask.
        :type import_id: str
        """

        self._import_id = import_id

    @property
    def progress_percentage(self):
        """Gets the progress_percentage of this StartImportResponseImportTask.


        :return: The progress_percentage of this StartImportResponseImportTask.
        :rtype: float
        """
        return self._progress_percentage

    @progress_percentage.setter
    def progress_percentage(self, progress_percentage):
        """Sets the progress_percentage of this StartImportResponseImportTask.


        :param progress_percentage: The progress_percentage of this StartImportResponseImportTask.
        :type progress_percentage: float
        """

        self._progress_percentage = progress_percentage

    @property
    def s3_bucket_source(self):
        """Gets the s3_bucket_source of this StartImportResponseImportTask.


        :return: The s3_bucket_source of this StartImportResponseImportTask.
        :rtype: ImportTaskS3BucketSource
        """
        return self._s3_bucket_source

    @s3_bucket_source.setter
    def s3_bucket_source(self, s3_bucket_source):
        """Sets the s3_bucket_source of this StartImportResponseImportTask.


        :param s3_bucket_source: The s3_bucket_source of this StartImportResponseImportTask.
        :type s3_bucket_source: ImportTaskS3BucketSource
        """

        self._s3_bucket_source = s3_bucket_source

    @property
    def status(self):
        """Gets the status of this StartImportResponseImportTask.


        :return: The status of this StartImportResponseImportTask.
        :rtype: ImportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StartImportResponseImportTask.


        :param status: The status of this StartImportResponseImportTask.
        :type status: ImportStatus
        """

        self._status = status

    @property
    def summary(self):
        """Gets the summary of this StartImportResponseImportTask.


        :return: The summary of this StartImportResponseImportTask.
        :rtype: ImportTaskSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this StartImportResponseImportTask.


        :param summary: The summary of this StartImportResponseImportTask.
        :type summary: ImportTaskSummary
        """

        self._summary = summary
