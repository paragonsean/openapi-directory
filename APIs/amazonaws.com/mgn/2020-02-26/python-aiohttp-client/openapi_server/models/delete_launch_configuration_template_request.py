# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DeleteLaunchConfigurationTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, launch_configuration_template_id: str=None):
        """DeleteLaunchConfigurationTemplateRequest - a model defined in OpenAPI

        :param launch_configuration_template_id: The launch_configuration_template_id of this DeleteLaunchConfigurationTemplateRequest.
        """
        self.openapi_types = {
            'launch_configuration_template_id': str
        }

        self.attribute_map = {
            'launch_configuration_template_id': 'launchConfigurationTemplateID'
        }

        self._launch_configuration_template_id = launch_configuration_template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteLaunchConfigurationTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteLaunchConfigurationTemplate_request of this DeleteLaunchConfigurationTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def launch_configuration_template_id(self):
        """Gets the launch_configuration_template_id of this DeleteLaunchConfigurationTemplateRequest.

        ID of resource to be deleted.

        :return: The launch_configuration_template_id of this DeleteLaunchConfigurationTemplateRequest.
        :rtype: str
        """
        return self._launch_configuration_template_id

    @launch_configuration_template_id.setter
    def launch_configuration_template_id(self, launch_configuration_template_id):
        """Sets the launch_configuration_template_id of this DeleteLaunchConfigurationTemplateRequest.

        ID of resource to be deleted.

        :param launch_configuration_template_id: The launch_configuration_template_id of this DeleteLaunchConfigurationTemplateRequest.
        :type launch_configuration_template_id: str
        """
        if launch_configuration_template_id is None:
            raise ValueError("Invalid value for `launch_configuration_template_id`, must not be `None`")
        if launch_configuration_template_id is not None and len(launch_configuration_template_id) > 21:
            raise ValueError("Invalid value for `launch_configuration_template_id`, length must be less than or equal to `21`")
        if launch_configuration_template_id is not None and len(launch_configuration_template_id) < 21:
            raise ValueError("Invalid value for `launch_configuration_template_id`, length must be greater than or equal to `21`")
        if launch_configuration_template_id is not None and not re.search(r'^lct-[0-9a-zA-Z]{17}$', launch_configuration_template_id):
            raise ValueError("Invalid value for `launch_configuration_template_id`, must be a follow pattern or equal to `/^lct-[0-9a-zA-Z]{17}$/`")

        self._launch_configuration_template_id = launch_configuration_template_id
