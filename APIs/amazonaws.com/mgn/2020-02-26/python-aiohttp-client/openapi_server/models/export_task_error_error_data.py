# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportTaskErrorErrorData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, raw_error: str=None):
        """ExportTaskErrorErrorData - a model defined in OpenAPI

        :param raw_error: The raw_error of this ExportTaskErrorErrorData.
        """
        self.openapi_types = {
            'raw_error': str
        }

        self.attribute_map = {
            'raw_error': 'rawError'
        }

        self._raw_error = raw_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportTaskErrorErrorData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportTaskError_errorData of this ExportTaskErrorErrorData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def raw_error(self):
        """Gets the raw_error of this ExportTaskErrorErrorData.


        :return: The raw_error of this ExportTaskErrorErrorData.
        :rtype: str
        """
        return self._raw_error

    @raw_error.setter
    def raw_error(self, raw_error):
        """Sets the raw_error of this ExportTaskErrorErrorData.


        :param raw_error: The raw_error of this ExportTaskErrorErrorData.
        :type raw_error: str
        """

        self._raw_error = raw_error
