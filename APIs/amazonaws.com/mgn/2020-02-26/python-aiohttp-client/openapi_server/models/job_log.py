# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_log_event import JobLogEvent
from openapi_server.models.job_log_event_data import JobLogEventData
from openapi_server import util


class JobLog(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: JobLogEvent=None, event_data: JobLogEventData=None, log_date_time: str=None):
        """JobLog - a model defined in OpenAPI

        :param event: The event of this JobLog.
        :param event_data: The event_data of this JobLog.
        :param log_date_time: The log_date_time of this JobLog.
        """
        self.openapi_types = {
            'event': JobLogEvent,
            'event_data': JobLogEventData,
            'log_date_time': str
        }

        self.attribute_map = {
            'event': 'event',
            'event_data': 'eventData',
            'log_date_time': 'logDateTime'
        }

        self._event = event
        self._event_data = event_data
        self._log_date_time = log_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobLog':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobLog of this JobLog.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this JobLog.


        :return: The event of this JobLog.
        :rtype: JobLogEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this JobLog.


        :param event: The event of this JobLog.
        :type event: JobLogEvent
        """

        self._event = event

    @property
    def event_data(self):
        """Gets the event_data of this JobLog.


        :return: The event_data of this JobLog.
        :rtype: JobLogEventData
        """
        return self._event_data

    @event_data.setter
    def event_data(self, event_data):
        """Sets the event_data of this JobLog.


        :param event_data: The event_data of this JobLog.
        :type event_data: JobLogEventData
        """

        self._event_data = event_data

    @property
    def log_date_time(self):
        """Gets the log_date_time of this JobLog.


        :return: The log_date_time of this JobLog.
        :rtype: str
        """
        return self._log_date_time

    @log_date_time.setter
    def log_date_time(self, log_date_time):
        """Sets the log_date_time of this JobLog.


        :param log_date_time: The log_date_time of this JobLog.
        :type log_date_time: str
        """

        self._log_date_time = log_date_time
