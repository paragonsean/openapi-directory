# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CPU(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cores: int=None, model_name: str=None):
        """CPU - a model defined in OpenAPI

        :param cores: The cores of this CPU.
        :param model_name: The model_name of this CPU.
        """
        self.openapi_types = {
            'cores': int,
            'model_name': str
        }

        self.attribute_map = {
            'cores': 'cores',
            'model_name': 'modelName'
        }

        self._cores = cores
        self._model_name = model_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CPU':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CPU of this CPU.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cores(self):
        """Gets the cores of this CPU.


        :return: The cores of this CPU.
        :rtype: int
        """
        return self._cores

    @cores.setter
    def cores(self, cores):
        """Sets the cores of this CPU.


        :param cores: The cores of this CPU.
        :type cores: int
        """

        self._cores = cores

    @property
    def model_name(self):
        """Gets the model_name of this CPU.


        :return: The model_name of this CPU.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this CPU.


        :param model_name: The model_name of this CPU.
        :type model_name: str
        """

        self._model_name = model_name
