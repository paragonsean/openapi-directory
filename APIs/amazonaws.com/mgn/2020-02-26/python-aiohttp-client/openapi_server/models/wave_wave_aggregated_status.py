# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wave_health_status import WaveHealthStatus
from openapi_server.models.wave_progress_status import WaveProgressStatus
from openapi_server import util


class WaveWaveAggregatedStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, health_status: WaveHealthStatus=None, last_update_date_time: str=None, progress_status: WaveProgressStatus=None, replication_started_date_time: str=None, total_applications: int=None):
        """WaveWaveAggregatedStatus - a model defined in OpenAPI

        :param health_status: The health_status of this WaveWaveAggregatedStatus.
        :param last_update_date_time: The last_update_date_time of this WaveWaveAggregatedStatus.
        :param progress_status: The progress_status of this WaveWaveAggregatedStatus.
        :param replication_started_date_time: The replication_started_date_time of this WaveWaveAggregatedStatus.
        :param total_applications: The total_applications of this WaveWaveAggregatedStatus.
        """
        self.openapi_types = {
            'health_status': WaveHealthStatus,
            'last_update_date_time': str,
            'progress_status': WaveProgressStatus,
            'replication_started_date_time': str,
            'total_applications': int
        }

        self.attribute_map = {
            'health_status': 'healthStatus',
            'last_update_date_time': 'lastUpdateDateTime',
            'progress_status': 'progressStatus',
            'replication_started_date_time': 'replicationStartedDateTime',
            'total_applications': 'totalApplications'
        }

        self._health_status = health_status
        self._last_update_date_time = last_update_date_time
        self._progress_status = progress_status
        self._replication_started_date_time = replication_started_date_time
        self._total_applications = total_applications

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaveWaveAggregatedStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Wave_waveAggregatedStatus of this WaveWaveAggregatedStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def health_status(self):
        """Gets the health_status of this WaveWaveAggregatedStatus.


        :return: The health_status of this WaveWaveAggregatedStatus.
        :rtype: WaveHealthStatus
        """
        return self._health_status

    @health_status.setter
    def health_status(self, health_status):
        """Sets the health_status of this WaveWaveAggregatedStatus.


        :param health_status: The health_status of this WaveWaveAggregatedStatus.
        :type health_status: WaveHealthStatus
        """

        self._health_status = health_status

    @property
    def last_update_date_time(self):
        """Gets the last_update_date_time of this WaveWaveAggregatedStatus.


        :return: The last_update_date_time of this WaveWaveAggregatedStatus.
        :rtype: str
        """
        return self._last_update_date_time

    @last_update_date_time.setter
    def last_update_date_time(self, last_update_date_time):
        """Sets the last_update_date_time of this WaveWaveAggregatedStatus.


        :param last_update_date_time: The last_update_date_time of this WaveWaveAggregatedStatus.
        :type last_update_date_time: str
        """

        self._last_update_date_time = last_update_date_time

    @property
    def progress_status(self):
        """Gets the progress_status of this WaveWaveAggregatedStatus.


        :return: The progress_status of this WaveWaveAggregatedStatus.
        :rtype: WaveProgressStatus
        """
        return self._progress_status

    @progress_status.setter
    def progress_status(self, progress_status):
        """Sets the progress_status of this WaveWaveAggregatedStatus.


        :param progress_status: The progress_status of this WaveWaveAggregatedStatus.
        :type progress_status: WaveProgressStatus
        """

        self._progress_status = progress_status

    @property
    def replication_started_date_time(self):
        """Gets the replication_started_date_time of this WaveWaveAggregatedStatus.


        :return: The replication_started_date_time of this WaveWaveAggregatedStatus.
        :rtype: str
        """
        return self._replication_started_date_time

    @replication_started_date_time.setter
    def replication_started_date_time(self, replication_started_date_time):
        """Sets the replication_started_date_time of this WaveWaveAggregatedStatus.


        :param replication_started_date_time: The replication_started_date_time of this WaveWaveAggregatedStatus.
        :type replication_started_date_time: str
        """

        self._replication_started_date_time = replication_started_date_time

    @property
    def total_applications(self):
        """Gets the total_applications of this WaveWaveAggregatedStatus.


        :return: The total_applications of this WaveWaveAggregatedStatus.
        :rtype: int
        """
        return self._total_applications

    @total_applications.setter
    def total_applications(self, total_applications):
        """Sets the total_applications of this WaveWaveAggregatedStatus.


        :param total_applications: The total_applications of this WaveWaveAggregatedStatus.
        :type total_applications: int
        """

        self._total_applications = total_applications
