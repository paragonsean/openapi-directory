# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobPostLaunchActionsLaunchStatusSsmDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, external_parameters: Dict=None, must_succeed_for_cutover: bool=None, parameters: Dict=None, ssm_document_name: str=None, timeout_seconds: int=None):
        """JobPostLaunchActionsLaunchStatusSsmDocument - a model defined in OpenAPI

        :param action_name: The action_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :param external_parameters: The external_parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :param must_succeed_for_cutover: The must_succeed_for_cutover of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :param parameters: The parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :param ssm_document_name: The ssm_document_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :param timeout_seconds: The timeout_seconds of this JobPostLaunchActionsLaunchStatusSsmDocument.
        """
        self.openapi_types = {
            'action_name': str,
            'external_parameters': Dict,
            'must_succeed_for_cutover': bool,
            'parameters': Dict,
            'ssm_document_name': str,
            'timeout_seconds': int
        }

        self.attribute_map = {
            'action_name': 'actionName',
            'external_parameters': 'externalParameters',
            'must_succeed_for_cutover': 'mustSucceedForCutover',
            'parameters': 'parameters',
            'ssm_document_name': 'ssmDocumentName',
            'timeout_seconds': 'timeoutSeconds'
        }

        self._action_name = action_name
        self._external_parameters = external_parameters
        self._must_succeed_for_cutover = must_succeed_for_cutover
        self._parameters = parameters
        self._ssm_document_name = ssm_document_name
        self._timeout_seconds = timeout_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobPostLaunchActionsLaunchStatusSsmDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobPostLaunchActionsLaunchStatus_ssmDocument of this JobPostLaunchActionsLaunchStatusSsmDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The action_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param action_name: The action_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def external_parameters(self):
        """Gets the external_parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The external_parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: Dict
        """
        return self._external_parameters

    @external_parameters.setter
    def external_parameters(self, external_parameters):
        """Sets the external_parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param external_parameters: The external_parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type external_parameters: Dict
        """

        self._external_parameters = external_parameters

    @property
    def must_succeed_for_cutover(self):
        """Gets the must_succeed_for_cutover of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The must_succeed_for_cutover of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: bool
        """
        return self._must_succeed_for_cutover

    @must_succeed_for_cutover.setter
    def must_succeed_for_cutover(self, must_succeed_for_cutover):
        """Sets the must_succeed_for_cutover of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param must_succeed_for_cutover: The must_succeed_for_cutover of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type must_succeed_for_cutover: bool
        """

        self._must_succeed_for_cutover = must_succeed_for_cutover

    @property
    def parameters(self):
        """Gets the parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param parameters: The parameters of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def ssm_document_name(self):
        """Gets the ssm_document_name of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The ssm_document_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: str
        """
        return self._ssm_document_name

    @ssm_document_name.setter
    def ssm_document_name(self, ssm_document_name):
        """Sets the ssm_document_name of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param ssm_document_name: The ssm_document_name of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type ssm_document_name: str
        """
        if ssm_document_name is None:
            raise ValueError("Invalid value for `ssm_document_name`, must not be `None`")

        self._ssm_document_name = ssm_document_name

    @property
    def timeout_seconds(self):
        """Gets the timeout_seconds of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :return: The timeout_seconds of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :rtype: int
        """
        return self._timeout_seconds

    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds):
        """Sets the timeout_seconds of this JobPostLaunchActionsLaunchStatusSsmDocument.


        :param timeout_seconds: The timeout_seconds of this JobPostLaunchActionsLaunchStatusSsmDocument.
        :type timeout_seconds: int
        """

        self._timeout_seconds = timeout_seconds
