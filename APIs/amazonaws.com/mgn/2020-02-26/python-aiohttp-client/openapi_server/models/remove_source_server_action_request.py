# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class RemoveSourceServerActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, action_id: str=None, source_server_id: str=None):
        """RemoveSourceServerActionRequest - a model defined in OpenAPI

        :param account_id: The account_id of this RemoveSourceServerActionRequest.
        :param action_id: The action_id of this RemoveSourceServerActionRequest.
        :param source_server_id: The source_server_id of this RemoveSourceServerActionRequest.
        """
        self.openapi_types = {
            'account_id': str,
            'action_id': str,
            'source_server_id': str
        }

        self.attribute_map = {
            'account_id': 'accountID',
            'action_id': 'actionID',
            'source_server_id': 'sourceServerID'
        }

        self._account_id = account_id
        self._action_id = action_id
        self._source_server_id = source_server_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveSourceServerActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveSourceServerAction_request of this RemoveSourceServerActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this RemoveSourceServerActionRequest.

        Source server post migration account ID.

        :return: The account_id of this RemoveSourceServerActionRequest.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this RemoveSourceServerActionRequest.

        Source server post migration account ID.

        :param account_id: The account_id of this RemoveSourceServerActionRequest.
        :type account_id: str
        """
        if account_id is not None and len(account_id) > 12:
            raise ValueError("Invalid value for `account_id`, length must be less than or equal to `12`")
        if account_id is not None and len(account_id) < 12:
            raise ValueError("Invalid value for `account_id`, length must be greater than or equal to `12`")
        if account_id is not None and not re.search(r'[0-9]{12,}', account_id):
            raise ValueError("Invalid value for `account_id`, must be a follow pattern or equal to `/[0-9]{12,}/`")

        self._account_id = account_id

    @property
    def action_id(self):
        """Gets the action_id of this RemoveSourceServerActionRequest.

        Source server post migration custom action ID to remove.

        :return: The action_id of this RemoveSourceServerActionRequest.
        :rtype: str
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this RemoveSourceServerActionRequest.

        Source server post migration custom action ID to remove.

        :param action_id: The action_id of this RemoveSourceServerActionRequest.
        :type action_id: str
        """
        if action_id is None:
            raise ValueError("Invalid value for `action_id`, must not be `None`")
        if action_id is not None and len(action_id) > 64:
            raise ValueError("Invalid value for `action_id`, length must be less than or equal to `64`")
        if action_id is not None and len(action_id) < 1:
            raise ValueError("Invalid value for `action_id`, length must be greater than or equal to `1`")
        if action_id is not None and not re.search(r'[0-9a-zA-Z]$', action_id):
            raise ValueError("Invalid value for `action_id`, must be a follow pattern or equal to `/[0-9a-zA-Z]$/`")

        self._action_id = action_id

    @property
    def source_server_id(self):
        """Gets the source_server_id of this RemoveSourceServerActionRequest.

        Source server ID of the post migration custom action to remove.

        :return: The source_server_id of this RemoveSourceServerActionRequest.
        :rtype: str
        """
        return self._source_server_id

    @source_server_id.setter
    def source_server_id(self, source_server_id):
        """Sets the source_server_id of this RemoveSourceServerActionRequest.

        Source server ID of the post migration custom action to remove.

        :param source_server_id: The source_server_id of this RemoveSourceServerActionRequest.
        :type source_server_id: str
        """
        if source_server_id is None:
            raise ValueError("Invalid value for `source_server_id`, must not be `None`")
        if source_server_id is not None and len(source_server_id) > 19:
            raise ValueError("Invalid value for `source_server_id`, length must be less than or equal to `19`")
        if source_server_id is not None and len(source_server_id) < 19:
            raise ValueError("Invalid value for `source_server_id`, length must be greater than or equal to `19`")
        if source_server_id is not None and not re.search(r'^s-[0-9a-zA-Z]{17}$', source_server_id):
            raise ValueError("Invalid value for `source_server_id`, must be a follow pattern or equal to `/^s-[0-9a-zA-Z]{17}$/`")

        self._source_server_id = source_server_id
