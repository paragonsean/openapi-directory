# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportErrorData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, application_id: str=None, ec2_launch_template_id: str=None, raw_error: str=None, row_number: int=None, source_server_id: str=None, wave_id: str=None):
        """ImportErrorData - a model defined in OpenAPI

        :param account_id: The account_id of this ImportErrorData.
        :param application_id: The application_id of this ImportErrorData.
        :param ec2_launch_template_id: The ec2_launch_template_id of this ImportErrorData.
        :param raw_error: The raw_error of this ImportErrorData.
        :param row_number: The row_number of this ImportErrorData.
        :param source_server_id: The source_server_id of this ImportErrorData.
        :param wave_id: The wave_id of this ImportErrorData.
        """
        self.openapi_types = {
            'account_id': str,
            'application_id': str,
            'ec2_launch_template_id': str,
            'raw_error': str,
            'row_number': int,
            'source_server_id': str,
            'wave_id': str
        }

        self.attribute_map = {
            'account_id': 'accountID',
            'application_id': 'applicationID',
            'ec2_launch_template_id': 'ec2LaunchTemplateID',
            'raw_error': 'rawError',
            'row_number': 'rowNumber',
            'source_server_id': 'sourceServerID',
            'wave_id': 'waveID'
        }

        self._account_id = account_id
        self._application_id = application_id
        self._ec2_launch_template_id = ec2_launch_template_id
        self._raw_error = raw_error
        self._row_number = row_number
        self._source_server_id = source_server_id
        self._wave_id = wave_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportErrorData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportErrorData of this ImportErrorData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this ImportErrorData.


        :return: The account_id of this ImportErrorData.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ImportErrorData.


        :param account_id: The account_id of this ImportErrorData.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def application_id(self):
        """Gets the application_id of this ImportErrorData.


        :return: The application_id of this ImportErrorData.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this ImportErrorData.


        :param application_id: The application_id of this ImportErrorData.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def ec2_launch_template_id(self):
        """Gets the ec2_launch_template_id of this ImportErrorData.


        :return: The ec2_launch_template_id of this ImportErrorData.
        :rtype: str
        """
        return self._ec2_launch_template_id

    @ec2_launch_template_id.setter
    def ec2_launch_template_id(self, ec2_launch_template_id):
        """Sets the ec2_launch_template_id of this ImportErrorData.


        :param ec2_launch_template_id: The ec2_launch_template_id of this ImportErrorData.
        :type ec2_launch_template_id: str
        """

        self._ec2_launch_template_id = ec2_launch_template_id

    @property
    def raw_error(self):
        """Gets the raw_error of this ImportErrorData.


        :return: The raw_error of this ImportErrorData.
        :rtype: str
        """
        return self._raw_error

    @raw_error.setter
    def raw_error(self, raw_error):
        """Sets the raw_error of this ImportErrorData.


        :param raw_error: The raw_error of this ImportErrorData.
        :type raw_error: str
        """

        self._raw_error = raw_error

    @property
    def row_number(self):
        """Gets the row_number of this ImportErrorData.


        :return: The row_number of this ImportErrorData.
        :rtype: int
        """
        return self._row_number

    @row_number.setter
    def row_number(self, row_number):
        """Sets the row_number of this ImportErrorData.


        :param row_number: The row_number of this ImportErrorData.
        :type row_number: int
        """

        self._row_number = row_number

    @property
    def source_server_id(self):
        """Gets the source_server_id of this ImportErrorData.


        :return: The source_server_id of this ImportErrorData.
        :rtype: str
        """
        return self._source_server_id

    @source_server_id.setter
    def source_server_id(self, source_server_id):
        """Sets the source_server_id of this ImportErrorData.


        :param source_server_id: The source_server_id of this ImportErrorData.
        :type source_server_id: str
        """

        self._source_server_id = source_server_id

    @property
    def wave_id(self):
        """Gets the wave_id of this ImportErrorData.


        :return: The wave_id of this ImportErrorData.
        :rtype: str
        """
        return self._wave_id

    @wave_id.setter
    def wave_id(self, wave_id):
        """Sets the wave_id of this ImportErrorData.


        :param wave_id: The wave_id of this ImportErrorData.
        :type wave_id: str
        """

        self._wave_id = wave_id
