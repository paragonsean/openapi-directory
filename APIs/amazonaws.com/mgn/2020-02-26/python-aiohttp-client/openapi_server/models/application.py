# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_application_aggregated_status import ApplicationApplicationAggregatedStatus
from openapi_server import util


class Application(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_aggregated_status: ApplicationApplicationAggregatedStatus=None, application_id: str=None, arn: str=None, creation_date_time: str=None, description: str=None, is_archived: bool=None, last_modified_date_time: str=None, name: str=None, tags: Dict=None, wave_id: str=None):
        """Application - a model defined in OpenAPI

        :param application_aggregated_status: The application_aggregated_status of this Application.
        :param application_id: The application_id of this Application.
        :param arn: The arn of this Application.
        :param creation_date_time: The creation_date_time of this Application.
        :param description: The description of this Application.
        :param is_archived: The is_archived of this Application.
        :param last_modified_date_time: The last_modified_date_time of this Application.
        :param name: The name of this Application.
        :param tags: The tags of this Application.
        :param wave_id: The wave_id of this Application.
        """
        self.openapi_types = {
            'application_aggregated_status': ApplicationApplicationAggregatedStatus,
            'application_id': str,
            'arn': str,
            'creation_date_time': str,
            'description': str,
            'is_archived': bool,
            'last_modified_date_time': str,
            'name': str,
            'tags': Dict,
            'wave_id': str
        }

        self.attribute_map = {
            'application_aggregated_status': 'applicationAggregatedStatus',
            'application_id': 'applicationID',
            'arn': 'arn',
            'creation_date_time': 'creationDateTime',
            'description': 'description',
            'is_archived': 'isArchived',
            'last_modified_date_time': 'lastModifiedDateTime',
            'name': 'name',
            'tags': 'tags',
            'wave_id': 'waveID'
        }

        self._application_aggregated_status = application_aggregated_status
        self._application_id = application_id
        self._arn = arn
        self._creation_date_time = creation_date_time
        self._description = description
        self._is_archived = is_archived
        self._last_modified_date_time = last_modified_date_time
        self._name = name
        self._tags = tags
        self._wave_id = wave_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Application':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Application of this Application.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_aggregated_status(self):
        """Gets the application_aggregated_status of this Application.


        :return: The application_aggregated_status of this Application.
        :rtype: ApplicationApplicationAggregatedStatus
        """
        return self._application_aggregated_status

    @application_aggregated_status.setter
    def application_aggregated_status(self, application_aggregated_status):
        """Sets the application_aggregated_status of this Application.


        :param application_aggregated_status: The application_aggregated_status of this Application.
        :type application_aggregated_status: ApplicationApplicationAggregatedStatus
        """

        self._application_aggregated_status = application_aggregated_status

    @property
    def application_id(self):
        """Gets the application_id of this Application.


        :return: The application_id of this Application.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this Application.


        :param application_id: The application_id of this Application.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def arn(self):
        """Gets the arn of this Application.


        :return: The arn of this Application.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Application.


        :param arn: The arn of this Application.
        :type arn: str
        """

        self._arn = arn

    @property
    def creation_date_time(self):
        """Gets the creation_date_time of this Application.


        :return: The creation_date_time of this Application.
        :rtype: str
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time):
        """Sets the creation_date_time of this Application.


        :param creation_date_time: The creation_date_time of this Application.
        :type creation_date_time: str
        """

        self._creation_date_time = creation_date_time

    @property
    def description(self):
        """Gets the description of this Application.


        :return: The description of this Application.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Application.


        :param description: The description of this Application.
        :type description: str
        """

        self._description = description

    @property
    def is_archived(self):
        """Gets the is_archived of this Application.


        :return: The is_archived of this Application.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this Application.


        :param is_archived: The is_archived of this Application.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def last_modified_date_time(self):
        """Gets the last_modified_date_time of this Application.


        :return: The last_modified_date_time of this Application.
        :rtype: str
        """
        return self._last_modified_date_time

    @last_modified_date_time.setter
    def last_modified_date_time(self, last_modified_date_time):
        """Sets the last_modified_date_time of this Application.


        :param last_modified_date_time: The last_modified_date_time of this Application.
        :type last_modified_date_time: str
        """

        self._last_modified_date_time = last_modified_date_time

    @property
    def name(self):
        """Gets the name of this Application.


        :return: The name of this Application.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Application.


        :param name: The name of this Application.
        :type name: str
        """

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this Application.


        :return: The tags of this Application.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Application.


        :param tags: The tags of this Application.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def wave_id(self):
        """Gets the wave_id of this Application.


        :return: The wave_id of this Application.
        :rtype: str
        """
        return self._wave_id

    @wave_id.setter
    def wave_id(self, wave_id):
        """Sets the wave_id of this Application.


        :param wave_id: The wave_id of this Application.
        :type wave_id: str
        """

        self._wave_id = wave_id
