# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSourceServersRequestFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_ids: List=None, is_archived: bool=None, life_cycle_states: List=None, replication_types: List=None, source_server_ids: List=None):
        """DescribeSourceServersRequestFilters - a model defined in OpenAPI

        :param application_ids: The application_ids of this DescribeSourceServersRequestFilters.
        :param is_archived: The is_archived of this DescribeSourceServersRequestFilters.
        :param life_cycle_states: The life_cycle_states of this DescribeSourceServersRequestFilters.
        :param replication_types: The replication_types of this DescribeSourceServersRequestFilters.
        :param source_server_ids: The source_server_ids of this DescribeSourceServersRequestFilters.
        """
        self.openapi_types = {
            'application_ids': List,
            'is_archived': bool,
            'life_cycle_states': List,
            'replication_types': List,
            'source_server_ids': List
        }

        self.attribute_map = {
            'application_ids': 'applicationIDs',
            'is_archived': 'isArchived',
            'life_cycle_states': 'lifeCycleStates',
            'replication_types': 'replicationTypes',
            'source_server_ids': 'sourceServerIDs'
        }

        self._application_ids = application_ids
        self._is_archived = is_archived
        self._life_cycle_states = life_cycle_states
        self._replication_types = replication_types
        self._source_server_ids = source_server_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSourceServersRequestFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSourceServersRequest_filters of this DescribeSourceServersRequestFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_ids(self):
        """Gets the application_ids of this DescribeSourceServersRequestFilters.


        :return: The application_ids of this DescribeSourceServersRequestFilters.
        :rtype: List
        """
        return self._application_ids

    @application_ids.setter
    def application_ids(self, application_ids):
        """Sets the application_ids of this DescribeSourceServersRequestFilters.


        :param application_ids: The application_ids of this DescribeSourceServersRequestFilters.
        :type application_ids: List
        """

        self._application_ids = application_ids

    @property
    def is_archived(self):
        """Gets the is_archived of this DescribeSourceServersRequestFilters.


        :return: The is_archived of this DescribeSourceServersRequestFilters.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this DescribeSourceServersRequestFilters.


        :param is_archived: The is_archived of this DescribeSourceServersRequestFilters.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def life_cycle_states(self):
        """Gets the life_cycle_states of this DescribeSourceServersRequestFilters.


        :return: The life_cycle_states of this DescribeSourceServersRequestFilters.
        :rtype: List
        """
        return self._life_cycle_states

    @life_cycle_states.setter
    def life_cycle_states(self, life_cycle_states):
        """Sets the life_cycle_states of this DescribeSourceServersRequestFilters.


        :param life_cycle_states: The life_cycle_states of this DescribeSourceServersRequestFilters.
        :type life_cycle_states: List
        """

        self._life_cycle_states = life_cycle_states

    @property
    def replication_types(self):
        """Gets the replication_types of this DescribeSourceServersRequestFilters.


        :return: The replication_types of this DescribeSourceServersRequestFilters.
        :rtype: List
        """
        return self._replication_types

    @replication_types.setter
    def replication_types(self, replication_types):
        """Sets the replication_types of this DescribeSourceServersRequestFilters.


        :param replication_types: The replication_types of this DescribeSourceServersRequestFilters.
        :type replication_types: List
        """

        self._replication_types = replication_types

    @property
    def source_server_ids(self):
        """Gets the source_server_ids of this DescribeSourceServersRequestFilters.


        :return: The source_server_ids of this DescribeSourceServersRequestFilters.
        :rtype: List
        """
        return self._source_server_ids

    @source_server_ids.setter
    def source_server_ids(self, source_server_ids):
        """Sets the source_server_ids of this DescribeSourceServersRequestFilters.


        :param source_server_ids: The source_server_ids of this DescribeSourceServersRequestFilters.
        :type source_server_ids: List
        """

        self._source_server_ids = source_server_ids
