# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_replication_info_data_replication_error import DataReplicationInfoDataReplicationError
from openapi_server.models.data_replication_info_data_replication_initiation import DataReplicationInfoDataReplicationInitiation
from openapi_server.models.data_replication_state import DataReplicationState
from openapi_server import util


class SourceServerDataReplicationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_replication_error: DataReplicationInfoDataReplicationError=None, data_replication_initiation: DataReplicationInfoDataReplicationInitiation=None, data_replication_state: DataReplicationState=None, eta_date_time: str=None, lag_duration: str=None, last_snapshot_date_time: str=None, replicated_disks: List=None):
        """SourceServerDataReplicationInfo - a model defined in OpenAPI

        :param data_replication_error: The data_replication_error of this SourceServerDataReplicationInfo.
        :param data_replication_initiation: The data_replication_initiation of this SourceServerDataReplicationInfo.
        :param data_replication_state: The data_replication_state of this SourceServerDataReplicationInfo.
        :param eta_date_time: The eta_date_time of this SourceServerDataReplicationInfo.
        :param lag_duration: The lag_duration of this SourceServerDataReplicationInfo.
        :param last_snapshot_date_time: The last_snapshot_date_time of this SourceServerDataReplicationInfo.
        :param replicated_disks: The replicated_disks of this SourceServerDataReplicationInfo.
        """
        self.openapi_types = {
            'data_replication_error': DataReplicationInfoDataReplicationError,
            'data_replication_initiation': DataReplicationInfoDataReplicationInitiation,
            'data_replication_state': DataReplicationState,
            'eta_date_time': str,
            'lag_duration': str,
            'last_snapshot_date_time': str,
            'replicated_disks': List
        }

        self.attribute_map = {
            'data_replication_error': 'dataReplicationError',
            'data_replication_initiation': 'dataReplicationInitiation',
            'data_replication_state': 'dataReplicationState',
            'eta_date_time': 'etaDateTime',
            'lag_duration': 'lagDuration',
            'last_snapshot_date_time': 'lastSnapshotDateTime',
            'replicated_disks': 'replicatedDisks'
        }

        self._data_replication_error = data_replication_error
        self._data_replication_initiation = data_replication_initiation
        self._data_replication_state = data_replication_state
        self._eta_date_time = eta_date_time
        self._lag_duration = lag_duration
        self._last_snapshot_date_time = last_snapshot_date_time
        self._replicated_disks = replicated_disks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceServerDataReplicationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceServer_dataReplicationInfo of this SourceServerDataReplicationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_replication_error(self):
        """Gets the data_replication_error of this SourceServerDataReplicationInfo.


        :return: The data_replication_error of this SourceServerDataReplicationInfo.
        :rtype: DataReplicationInfoDataReplicationError
        """
        return self._data_replication_error

    @data_replication_error.setter
    def data_replication_error(self, data_replication_error):
        """Sets the data_replication_error of this SourceServerDataReplicationInfo.


        :param data_replication_error: The data_replication_error of this SourceServerDataReplicationInfo.
        :type data_replication_error: DataReplicationInfoDataReplicationError
        """

        self._data_replication_error = data_replication_error

    @property
    def data_replication_initiation(self):
        """Gets the data_replication_initiation of this SourceServerDataReplicationInfo.


        :return: The data_replication_initiation of this SourceServerDataReplicationInfo.
        :rtype: DataReplicationInfoDataReplicationInitiation
        """
        return self._data_replication_initiation

    @data_replication_initiation.setter
    def data_replication_initiation(self, data_replication_initiation):
        """Sets the data_replication_initiation of this SourceServerDataReplicationInfo.


        :param data_replication_initiation: The data_replication_initiation of this SourceServerDataReplicationInfo.
        :type data_replication_initiation: DataReplicationInfoDataReplicationInitiation
        """

        self._data_replication_initiation = data_replication_initiation

    @property
    def data_replication_state(self):
        """Gets the data_replication_state of this SourceServerDataReplicationInfo.


        :return: The data_replication_state of this SourceServerDataReplicationInfo.
        :rtype: DataReplicationState
        """
        return self._data_replication_state

    @data_replication_state.setter
    def data_replication_state(self, data_replication_state):
        """Sets the data_replication_state of this SourceServerDataReplicationInfo.


        :param data_replication_state: The data_replication_state of this SourceServerDataReplicationInfo.
        :type data_replication_state: DataReplicationState
        """

        self._data_replication_state = data_replication_state

    @property
    def eta_date_time(self):
        """Gets the eta_date_time of this SourceServerDataReplicationInfo.


        :return: The eta_date_time of this SourceServerDataReplicationInfo.
        :rtype: str
        """
        return self._eta_date_time

    @eta_date_time.setter
    def eta_date_time(self, eta_date_time):
        """Sets the eta_date_time of this SourceServerDataReplicationInfo.


        :param eta_date_time: The eta_date_time of this SourceServerDataReplicationInfo.
        :type eta_date_time: str
        """

        self._eta_date_time = eta_date_time

    @property
    def lag_duration(self):
        """Gets the lag_duration of this SourceServerDataReplicationInfo.


        :return: The lag_duration of this SourceServerDataReplicationInfo.
        :rtype: str
        """
        return self._lag_duration

    @lag_duration.setter
    def lag_duration(self, lag_duration):
        """Sets the lag_duration of this SourceServerDataReplicationInfo.


        :param lag_duration: The lag_duration of this SourceServerDataReplicationInfo.
        :type lag_duration: str
        """

        self._lag_duration = lag_duration

    @property
    def last_snapshot_date_time(self):
        """Gets the last_snapshot_date_time of this SourceServerDataReplicationInfo.


        :return: The last_snapshot_date_time of this SourceServerDataReplicationInfo.
        :rtype: str
        """
        return self._last_snapshot_date_time

    @last_snapshot_date_time.setter
    def last_snapshot_date_time(self, last_snapshot_date_time):
        """Sets the last_snapshot_date_time of this SourceServerDataReplicationInfo.


        :param last_snapshot_date_time: The last_snapshot_date_time of this SourceServerDataReplicationInfo.
        :type last_snapshot_date_time: str
        """

        self._last_snapshot_date_time = last_snapshot_date_time

    @property
    def replicated_disks(self):
        """Gets the replicated_disks of this SourceServerDataReplicationInfo.


        :return: The replicated_disks of this SourceServerDataReplicationInfo.
        :rtype: List
        """
        return self._replicated_disks

    @replicated_disks.setter
    def replicated_disks(self, replicated_disks):
        """Sets the replicated_disks of this SourceServerDataReplicationInfo.


        :param replicated_disks: The replicated_disks of this SourceServerDataReplicationInfo.
        :type replicated_disks: List
        """

        self._replicated_disks = replicated_disks
