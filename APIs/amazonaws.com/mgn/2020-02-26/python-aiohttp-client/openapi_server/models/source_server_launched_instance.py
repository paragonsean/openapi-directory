# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.first_boot import FirstBoot
from openapi_server import util


class SourceServerLaunchedInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ec2_instance_id: str=None, first_boot: FirstBoot=None, job_id: str=None):
        """SourceServerLaunchedInstance - a model defined in OpenAPI

        :param ec2_instance_id: The ec2_instance_id of this SourceServerLaunchedInstance.
        :param first_boot: The first_boot of this SourceServerLaunchedInstance.
        :param job_id: The job_id of this SourceServerLaunchedInstance.
        """
        self.openapi_types = {
            'ec2_instance_id': str,
            'first_boot': FirstBoot,
            'job_id': str
        }

        self.attribute_map = {
            'ec2_instance_id': 'ec2InstanceID',
            'first_boot': 'firstBoot',
            'job_id': 'jobID'
        }

        self._ec2_instance_id = ec2_instance_id
        self._first_boot = first_boot
        self._job_id = job_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceServerLaunchedInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceServer_launchedInstance of this SourceServerLaunchedInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ec2_instance_id(self):
        """Gets the ec2_instance_id of this SourceServerLaunchedInstance.


        :return: The ec2_instance_id of this SourceServerLaunchedInstance.
        :rtype: str
        """
        return self._ec2_instance_id

    @ec2_instance_id.setter
    def ec2_instance_id(self, ec2_instance_id):
        """Sets the ec2_instance_id of this SourceServerLaunchedInstance.


        :param ec2_instance_id: The ec2_instance_id of this SourceServerLaunchedInstance.
        :type ec2_instance_id: str
        """

        self._ec2_instance_id = ec2_instance_id

    @property
    def first_boot(self):
        """Gets the first_boot of this SourceServerLaunchedInstance.


        :return: The first_boot of this SourceServerLaunchedInstance.
        :rtype: FirstBoot
        """
        return self._first_boot

    @first_boot.setter
    def first_boot(self, first_boot):
        """Sets the first_boot of this SourceServerLaunchedInstance.


        :param first_boot: The first_boot of this SourceServerLaunchedInstance.
        :type first_boot: FirstBoot
        """

        self._first_boot = first_boot

    @property
    def job_id(self):
        """Gets the job_id of this SourceServerLaunchedInstance.


        :return: The job_id of this SourceServerLaunchedInstance.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this SourceServerLaunchedInstance.


        :param job_id: The job_id of this SourceServerLaunchedInstance.
        :type job_id: str
        """

        self._job_id = job_id
