# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataReplicationErrorString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AGENT_NOT_SEEN = 'AGENT_NOT_SEEN'
    SNAPSHOTS_FAILURE = 'SNAPSHOTS_FAILURE'
    NOT_CONVERGING = 'NOT_CONVERGING'
    UNSTABLE_NETWORK = 'UNSTABLE_NETWORK'
    FAILED_TO_CREATE_SECURITY_GROUP = 'FAILED_TO_CREATE_SECURITY_GROUP'
    FAILED_TO_LAUNCH_REPLICATION_SERVER = 'FAILED_TO_LAUNCH_REPLICATION_SERVER'
    FAILED_TO_BOOT_REPLICATION_SERVER = 'FAILED_TO_BOOT_REPLICATION_SERVER'
    FAILED_TO_AUTHENTICATE_WITH_SERVICE = 'FAILED_TO_AUTHENTICATE_WITH_SERVICE'
    FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE = 'FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE'
    FAILED_TO_CREATE_STAGING_DISKS = 'FAILED_TO_CREATE_STAGING_DISKS'
    FAILED_TO_ATTACH_STAGING_DISKS = 'FAILED_TO_ATTACH_STAGING_DISKS'
    FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT = 'FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT'
    FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER = 'FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER'
    FAILED_TO_START_DATA_TRANSFER = 'FAILED_TO_START_DATA_TRANSFER'
    UNSUPPORTED_VM_CONFIGURATION = 'UNSUPPORTED_VM_CONFIGURATION'
    LAST_SNAPSHOT_JOB_FAILED = 'LAST_SNAPSHOT_JOB_FAILED'

    def __init__(self):
        """DataReplicationErrorString - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataReplicationErrorString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataReplicationErrorString of this DataReplicationErrorString.
        """
        return util.deserialize_model(dikt, cls)
