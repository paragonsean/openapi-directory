# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.life_cycle_last_cutover import LifeCycleLastCutover
from openapi_server.models.life_cycle_last_test import LifeCycleLastTest
from openapi_server.models.life_cycle_state import LifeCycleState
from openapi_server import util


class LifeCycle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_to_service_date_time: str=None, elapsed_replication_duration: str=None, first_byte_date_time: str=None, last_cutover: LifeCycleLastCutover=None, last_seen_by_service_date_time: str=None, last_test: LifeCycleLastTest=None, state: LifeCycleState=None):
        """LifeCycle - a model defined in OpenAPI

        :param added_to_service_date_time: The added_to_service_date_time of this LifeCycle.
        :param elapsed_replication_duration: The elapsed_replication_duration of this LifeCycle.
        :param first_byte_date_time: The first_byte_date_time of this LifeCycle.
        :param last_cutover: The last_cutover of this LifeCycle.
        :param last_seen_by_service_date_time: The last_seen_by_service_date_time of this LifeCycle.
        :param last_test: The last_test of this LifeCycle.
        :param state: The state of this LifeCycle.
        """
        self.openapi_types = {
            'added_to_service_date_time': str,
            'elapsed_replication_duration': str,
            'first_byte_date_time': str,
            'last_cutover': LifeCycleLastCutover,
            'last_seen_by_service_date_time': str,
            'last_test': LifeCycleLastTest,
            'state': LifeCycleState
        }

        self.attribute_map = {
            'added_to_service_date_time': 'addedToServiceDateTime',
            'elapsed_replication_duration': 'elapsedReplicationDuration',
            'first_byte_date_time': 'firstByteDateTime',
            'last_cutover': 'lastCutover',
            'last_seen_by_service_date_time': 'lastSeenByServiceDateTime',
            'last_test': 'lastTest',
            'state': 'state'
        }

        self._added_to_service_date_time = added_to_service_date_time
        self._elapsed_replication_duration = elapsed_replication_duration
        self._first_byte_date_time = first_byte_date_time
        self._last_cutover = last_cutover
        self._last_seen_by_service_date_time = last_seen_by_service_date_time
        self._last_test = last_test
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifeCycle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifeCycle of this LifeCycle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_to_service_date_time(self):
        """Gets the added_to_service_date_time of this LifeCycle.


        :return: The added_to_service_date_time of this LifeCycle.
        :rtype: str
        """
        return self._added_to_service_date_time

    @added_to_service_date_time.setter
    def added_to_service_date_time(self, added_to_service_date_time):
        """Sets the added_to_service_date_time of this LifeCycle.


        :param added_to_service_date_time: The added_to_service_date_time of this LifeCycle.
        :type added_to_service_date_time: str
        """

        self._added_to_service_date_time = added_to_service_date_time

    @property
    def elapsed_replication_duration(self):
        """Gets the elapsed_replication_duration of this LifeCycle.


        :return: The elapsed_replication_duration of this LifeCycle.
        :rtype: str
        """
        return self._elapsed_replication_duration

    @elapsed_replication_duration.setter
    def elapsed_replication_duration(self, elapsed_replication_duration):
        """Sets the elapsed_replication_duration of this LifeCycle.


        :param elapsed_replication_duration: The elapsed_replication_duration of this LifeCycle.
        :type elapsed_replication_duration: str
        """

        self._elapsed_replication_duration = elapsed_replication_duration

    @property
    def first_byte_date_time(self):
        """Gets the first_byte_date_time of this LifeCycle.


        :return: The first_byte_date_time of this LifeCycle.
        :rtype: str
        """
        return self._first_byte_date_time

    @first_byte_date_time.setter
    def first_byte_date_time(self, first_byte_date_time):
        """Sets the first_byte_date_time of this LifeCycle.


        :param first_byte_date_time: The first_byte_date_time of this LifeCycle.
        :type first_byte_date_time: str
        """

        self._first_byte_date_time = first_byte_date_time

    @property
    def last_cutover(self):
        """Gets the last_cutover of this LifeCycle.


        :return: The last_cutover of this LifeCycle.
        :rtype: LifeCycleLastCutover
        """
        return self._last_cutover

    @last_cutover.setter
    def last_cutover(self, last_cutover):
        """Sets the last_cutover of this LifeCycle.


        :param last_cutover: The last_cutover of this LifeCycle.
        :type last_cutover: LifeCycleLastCutover
        """

        self._last_cutover = last_cutover

    @property
    def last_seen_by_service_date_time(self):
        """Gets the last_seen_by_service_date_time of this LifeCycle.


        :return: The last_seen_by_service_date_time of this LifeCycle.
        :rtype: str
        """
        return self._last_seen_by_service_date_time

    @last_seen_by_service_date_time.setter
    def last_seen_by_service_date_time(self, last_seen_by_service_date_time):
        """Sets the last_seen_by_service_date_time of this LifeCycle.


        :param last_seen_by_service_date_time: The last_seen_by_service_date_time of this LifeCycle.
        :type last_seen_by_service_date_time: str
        """

        self._last_seen_by_service_date_time = last_seen_by_service_date_time

    @property
    def last_test(self):
        """Gets the last_test of this LifeCycle.


        :return: The last_test of this LifeCycle.
        :rtype: LifeCycleLastTest
        """
        return self._last_test

    @last_test.setter
    def last_test(self, last_test):
        """Sets the last_test of this LifeCycle.


        :param last_test: The last_test of this LifeCycle.
        :type last_test: LifeCycleLastTest
        """

        self._last_test = last_test

    @property
    def state(self):
        """Gets the state of this LifeCycle.


        :return: The state of this LifeCycle.
        :rtype: LifeCycleState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this LifeCycle.


        :param state: The state of this LifeCycle.
        :type state: LifeCycleState
        """

        self._state = state
