/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FirstBoot from './FirstBoot';
import LaunchedInstance from './LaunchedInstance';

/**
 * The SourceServerLaunchedInstance model module.
 * @module model/SourceServerLaunchedInstance
 * @version 2020-02-26
 */
class SourceServerLaunchedInstance {
    /**
     * Constructs a new <code>SourceServerLaunchedInstance</code>.
     * @alias module:model/SourceServerLaunchedInstance
     * @implements module:model/LaunchedInstance
     */
    constructor() { 
        LaunchedInstance.initialize(this);
        SourceServerLaunchedInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceServerLaunchedInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceServerLaunchedInstance} obj Optional instance to populate.
     * @return {module:model/SourceServerLaunchedInstance} The populated <code>SourceServerLaunchedInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceServerLaunchedInstance();
            LaunchedInstance.constructFromObject(data, obj);

            if (data.hasOwnProperty('ec2InstanceID')) {
                obj['ec2InstanceID'] = ApiClient.convertToType(data['ec2InstanceID'], 'String');
            }
            if (data.hasOwnProperty('firstBoot')) {
                obj['firstBoot'] = ApiClient.convertToType(data['firstBoot'], FirstBoot);
            }
            if (data.hasOwnProperty('jobID')) {
                obj['jobID'] = ApiClient.convertToType(data['jobID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceServerLaunchedInstance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceServerLaunchedInstance</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ec2InstanceID`
        if (data['ec2InstanceID']) { // data not null
          String.validateJSON(data['ec2InstanceID']);
        }
        // validate the optional field `firstBoot`
        if (data['firstBoot']) { // data not null
          FirstBoot.validateJSON(data['firstBoot']);
        }
        // validate the optional field `jobID`
        if (data['jobID']) { // data not null
          String.validateJSON(data['jobID']);
        }

        return true;
    }


}



/**
 * @member {String} ec2InstanceID
 */
SourceServerLaunchedInstance.prototype['ec2InstanceID'] = undefined;

/**
 * @member {module:model/FirstBoot} firstBoot
 */
SourceServerLaunchedInstance.prototype['firstBoot'] = undefined;

/**
 * @member {String} jobID
 */
SourceServerLaunchedInstance.prototype['jobID'] = undefined;


// Implement LaunchedInstance interface:
/**
 * @member {String} ec2InstanceID
 */
LaunchedInstance.prototype['ec2InstanceID'] = undefined;
/**
 * @member {module:model/FirstBoot} firstBoot
 */
LaunchedInstance.prototype['firstBoot'] = undefined;
/**
 * @member {String} jobID
 */
LaunchedInstance.prototype['jobID'] = undefined;




export default SourceServerLaunchedInstance;

