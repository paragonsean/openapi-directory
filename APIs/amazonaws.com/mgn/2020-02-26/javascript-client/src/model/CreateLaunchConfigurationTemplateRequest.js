/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateLaunchConfigurationTemplateRequestLargeVolumeConf from './CreateLaunchConfigurationTemplateRequestLargeVolumeConf';
import CreateLaunchConfigurationTemplateRequestLicensing from './CreateLaunchConfigurationTemplateRequestLicensing';
import CreateLaunchConfigurationTemplateRequestPostLaunchActions from './CreateLaunchConfigurationTemplateRequestPostLaunchActions';

/**
 * The CreateLaunchConfigurationTemplateRequest model module.
 * @module model/CreateLaunchConfigurationTemplateRequest
 * @version 2020-02-26
 */
class CreateLaunchConfigurationTemplateRequest {
    /**
     * Constructs a new <code>CreateLaunchConfigurationTemplateRequest</code>.
     * @alias module:model/CreateLaunchConfigurationTemplateRequest
     */
    constructor() { 
        
        CreateLaunchConfigurationTemplateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateLaunchConfigurationTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLaunchConfigurationTemplateRequest} obj Optional instance to populate.
     * @return {module:model/CreateLaunchConfigurationTemplateRequest} The populated <code>CreateLaunchConfigurationTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateLaunchConfigurationTemplateRequest();

            if (data.hasOwnProperty('associatePublicIpAddress')) {
                obj['associatePublicIpAddress'] = ApiClient.convertToType(data['associatePublicIpAddress'], 'Boolean');
            }
            if (data.hasOwnProperty('bootMode')) {
                obj['bootMode'] = ApiClient.convertToType(data['bootMode'], 'String');
            }
            if (data.hasOwnProperty('copyPrivateIp')) {
                obj['copyPrivateIp'] = ApiClient.convertToType(data['copyPrivateIp'], 'Boolean');
            }
            if (data.hasOwnProperty('copyTags')) {
                obj['copyTags'] = ApiClient.convertToType(data['copyTags'], 'Boolean');
            }
            if (data.hasOwnProperty('enableMapAutoTagging')) {
                obj['enableMapAutoTagging'] = ApiClient.convertToType(data['enableMapAutoTagging'], 'Boolean');
            }
            if (data.hasOwnProperty('largeVolumeConf')) {
                obj['largeVolumeConf'] = CreateLaunchConfigurationTemplateRequestLargeVolumeConf.constructFromObject(data['largeVolumeConf']);
            }
            if (data.hasOwnProperty('launchDisposition')) {
                obj['launchDisposition'] = ApiClient.convertToType(data['launchDisposition'], 'String');
            }
            if (data.hasOwnProperty('licensing')) {
                obj['licensing'] = CreateLaunchConfigurationTemplateRequestLicensing.constructFromObject(data['licensing']);
            }
            if (data.hasOwnProperty('mapAutoTaggingMpeID')) {
                obj['mapAutoTaggingMpeID'] = ApiClient.convertToType(data['mapAutoTaggingMpeID'], 'String');
            }
            if (data.hasOwnProperty('postLaunchActions')) {
                obj['postLaunchActions'] = CreateLaunchConfigurationTemplateRequestPostLaunchActions.constructFromObject(data['postLaunchActions']);
            }
            if (data.hasOwnProperty('smallVolumeConf')) {
                obj['smallVolumeConf'] = CreateLaunchConfigurationTemplateRequestLargeVolumeConf.constructFromObject(data['smallVolumeConf']);
            }
            if (data.hasOwnProperty('smallVolumeMaxSize')) {
                obj['smallVolumeMaxSize'] = ApiClient.convertToType(data['smallVolumeMaxSize'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('targetInstanceTypeRightSizingMethod')) {
                obj['targetInstanceTypeRightSizingMethod'] = ApiClient.convertToType(data['targetInstanceTypeRightSizingMethod'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLaunchConfigurationTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLaunchConfigurationTemplateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bootMode'] && !(typeof data['bootMode'] === 'string' || data['bootMode'] instanceof String)) {
            throw new Error("Expected the field `bootMode` to be a primitive type in the JSON string but got " + data['bootMode']);
        }
        // validate the optional field `largeVolumeConf`
        if (data['largeVolumeConf']) { // data not null
          CreateLaunchConfigurationTemplateRequestLargeVolumeConf.validateJSON(data['largeVolumeConf']);
        }
        // ensure the json data is a string
        if (data['launchDisposition'] && !(typeof data['launchDisposition'] === 'string' || data['launchDisposition'] instanceof String)) {
            throw new Error("Expected the field `launchDisposition` to be a primitive type in the JSON string but got " + data['launchDisposition']);
        }
        // validate the optional field `licensing`
        if (data['licensing']) { // data not null
          CreateLaunchConfigurationTemplateRequestLicensing.validateJSON(data['licensing']);
        }
        // ensure the json data is a string
        if (data['mapAutoTaggingMpeID'] && !(typeof data['mapAutoTaggingMpeID'] === 'string' || data['mapAutoTaggingMpeID'] instanceof String)) {
            throw new Error("Expected the field `mapAutoTaggingMpeID` to be a primitive type in the JSON string but got " + data['mapAutoTaggingMpeID']);
        }
        // validate the optional field `postLaunchActions`
        if (data['postLaunchActions']) { // data not null
          CreateLaunchConfigurationTemplateRequestPostLaunchActions.validateJSON(data['postLaunchActions']);
        }
        // validate the optional field `smallVolumeConf`
        if (data['smallVolumeConf']) { // data not null
          CreateLaunchConfigurationTemplateRequestLargeVolumeConf.validateJSON(data['smallVolumeConf']);
        }
        // ensure the json data is a string
        if (data['targetInstanceTypeRightSizingMethod'] && !(typeof data['targetInstanceTypeRightSizingMethod'] === 'string' || data['targetInstanceTypeRightSizingMethod'] instanceof String)) {
            throw new Error("Expected the field `targetInstanceTypeRightSizingMethod` to be a primitive type in the JSON string but got " + data['targetInstanceTypeRightSizingMethod']);
        }

        return true;
    }


}



/**
 * Associate public Ip address.
 * @member {Boolean} associatePublicIpAddress
 */
CreateLaunchConfigurationTemplateRequest.prototype['associatePublicIpAddress'] = undefined;

/**
 * Launch configuration template boot mode.
 * @member {module:model/CreateLaunchConfigurationTemplateRequest.BootModeEnum} bootMode
 */
CreateLaunchConfigurationTemplateRequest.prototype['bootMode'] = undefined;

/**
 * Copy private Ip.
 * @member {Boolean} copyPrivateIp
 */
CreateLaunchConfigurationTemplateRequest.prototype['copyPrivateIp'] = undefined;

/**
 * Copy tags.
 * @member {Boolean} copyTags
 */
CreateLaunchConfigurationTemplateRequest.prototype['copyTags'] = undefined;

/**
 * Enable map auto tagging.
 * @member {Boolean} enableMapAutoTagging
 */
CreateLaunchConfigurationTemplateRequest.prototype['enableMapAutoTagging'] = undefined;

/**
 * @member {module:model/CreateLaunchConfigurationTemplateRequestLargeVolumeConf} largeVolumeConf
 */
CreateLaunchConfigurationTemplateRequest.prototype['largeVolumeConf'] = undefined;

/**
 * Launch disposition.
 * @member {module:model/CreateLaunchConfigurationTemplateRequest.LaunchDispositionEnum} launchDisposition
 */
CreateLaunchConfigurationTemplateRequest.prototype['launchDisposition'] = undefined;

/**
 * @member {module:model/CreateLaunchConfigurationTemplateRequestLicensing} licensing
 */
CreateLaunchConfigurationTemplateRequest.prototype['licensing'] = undefined;

/**
 * Launch configuration template map auto tagging MPE ID.
 * @member {String} mapAutoTaggingMpeID
 */
CreateLaunchConfigurationTemplateRequest.prototype['mapAutoTaggingMpeID'] = undefined;

/**
 * @member {module:model/CreateLaunchConfigurationTemplateRequestPostLaunchActions} postLaunchActions
 */
CreateLaunchConfigurationTemplateRequest.prototype['postLaunchActions'] = undefined;

/**
 * @member {module:model/CreateLaunchConfigurationTemplateRequestLargeVolumeConf} smallVolumeConf
 */
CreateLaunchConfigurationTemplateRequest.prototype['smallVolumeConf'] = undefined;

/**
 * Small volume maximum size.
 * @member {Number} smallVolumeMaxSize
 */
CreateLaunchConfigurationTemplateRequest.prototype['smallVolumeMaxSize'] = undefined;

/**
 * Request to associate tags during creation of a Launch Configuration Template.
 * @member {Object.<String, String>} tags
 */
CreateLaunchConfigurationTemplateRequest.prototype['tags'] = undefined;

/**
 * Target instance type right-sizing method.
 * @member {module:model/CreateLaunchConfigurationTemplateRequest.TargetInstanceTypeRightSizingMethodEnum} targetInstanceTypeRightSizingMethod
 */
CreateLaunchConfigurationTemplateRequest.prototype['targetInstanceTypeRightSizingMethod'] = undefined;





/**
 * Allowed values for the <code>bootMode</code> property.
 * @enum {String}
 * @readonly
 */
CreateLaunchConfigurationTemplateRequest['BootModeEnum'] = {

    /**
     * value: "LEGACY_BIOS"
     * @const
     */
    "LEGACY_BIOS": "LEGACY_BIOS",

    /**
     * value: "UEFI"
     * @const
     */
    "UEFI": "UEFI"
};


/**
 * Allowed values for the <code>launchDisposition</code> property.
 * @enum {String}
 * @readonly
 */
CreateLaunchConfigurationTemplateRequest['LaunchDispositionEnum'] = {

    /**
     * value: "STOPPED"
     * @const
     */
    "STOPPED": "STOPPED",

    /**
     * value: "STARTED"
     * @const
     */
    "STARTED": "STARTED"
};


/**
 * Allowed values for the <code>targetInstanceTypeRightSizingMethod</code> property.
 * @enum {String}
 * @readonly
 */
CreateLaunchConfigurationTemplateRequest['TargetInstanceTypeRightSizingMethodEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "BASIC"
     * @const
     */
    "BASIC": "BASIC"
};



export default CreateLaunchConfigurationTemplateRequest;

