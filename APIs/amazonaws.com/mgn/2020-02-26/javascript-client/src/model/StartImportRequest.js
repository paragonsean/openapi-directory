/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartImportRequestS3BucketSource from './StartImportRequestS3BucketSource';

/**
 * The StartImportRequest model module.
 * @module model/StartImportRequest
 * @version 2020-02-26
 */
class StartImportRequest {
    /**
     * Constructs a new <code>StartImportRequest</code>.
     * @alias module:model/StartImportRequest
     * @param s3BucketSource {module:model/StartImportRequestS3BucketSource} 
     */
    constructor(s3BucketSource) { 
        
        StartImportRequest.initialize(this, s3BucketSource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3BucketSource) { 
        obj['s3BucketSource'] = s3BucketSource;
    }

    /**
     * Constructs a <code>StartImportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartImportRequest} obj Optional instance to populate.
     * @return {module:model/StartImportRequest} The populated <code>StartImportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartImportRequest();

            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('s3BucketSource')) {
                obj['s3BucketSource'] = StartImportRequestS3BucketSource.constructFromObject(data['s3BucketSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartImportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartImportRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartImportRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // validate the optional field `s3BucketSource`
        if (data['s3BucketSource']) { // data not null
          StartImportRequestS3BucketSource.validateJSON(data['s3BucketSource']);
        }

        return true;
    }


}

StartImportRequest.RequiredProperties = ["s3BucketSource"];

/**
 * Start import request client token.
 * @member {String} clientToken
 */
StartImportRequest.prototype['clientToken'] = undefined;

/**
 * @member {module:model/StartImportRequestS3BucketSource} s3BucketSource
 */
StartImportRequest.prototype['s3BucketSource'] = undefined;






export default StartImportRequest;

