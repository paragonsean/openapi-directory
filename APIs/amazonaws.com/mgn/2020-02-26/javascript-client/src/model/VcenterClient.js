/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VcenterClient model module.
 * @module model/VcenterClient
 * @version 2020-02-26
 */
class VcenterClient {
    /**
     * Constructs a new <code>VcenterClient</code>.
     * vCenter client.
     * @alias module:model/VcenterClient
     */
    constructor() { 
        
        VcenterClient.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VcenterClient</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VcenterClient} obj Optional instance to populate.
     * @return {module:model/VcenterClient} The populated <code>VcenterClient</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VcenterClient();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('datacenterName')) {
                obj['datacenterName'] = ApiClient.convertToType(data['datacenterName'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('lastSeenDatetime')) {
                obj['lastSeenDatetime'] = ApiClient.convertToType(data['lastSeenDatetime'], 'String');
            }
            if (data.hasOwnProperty('sourceServerTags')) {
                obj['sourceServerTags'] = ApiClient.convertToType(data['sourceServerTags'], Object);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('vcenterClientID')) {
                obj['vcenterClientID'] = ApiClient.convertToType(data['vcenterClientID'], 'String');
            }
            if (data.hasOwnProperty('vcenterUUID')) {
                obj['vcenterUUID'] = ApiClient.convertToType(data['vcenterUUID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VcenterClient</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VcenterClient</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `datacenterName`
        if (data['datacenterName']) { // data not null
          String.validateJSON(data['datacenterName']);
        }
        // validate the optional field `hostname`
        if (data['hostname']) { // data not null
          String.validateJSON(data['hostname']);
        }
        // validate the optional field `lastSeenDatetime`
        if (data['lastSeenDatetime']) { // data not null
          String.validateJSON(data['lastSeenDatetime']);
        }
        // validate the optional field `sourceServerTags`
        if (data['sourceServerTags']) { // data not null
          Object.validateJSON(data['sourceServerTags']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `vcenterClientID`
        if (data['vcenterClientID']) { // data not null
          String.validateJSON(data['vcenterClientID']);
        }
        // validate the optional field `vcenterUUID`
        if (data['vcenterUUID']) { // data not null
          String.validateJSON(data['vcenterUUID']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
VcenterClient.prototype['arn'] = undefined;

/**
 * @member {String} datacenterName
 */
VcenterClient.prototype['datacenterName'] = undefined;

/**
 * @member {String} hostname
 */
VcenterClient.prototype['hostname'] = undefined;

/**
 * @member {String} lastSeenDatetime
 */
VcenterClient.prototype['lastSeenDatetime'] = undefined;

/**
 * @member {Object} sourceServerTags
 */
VcenterClient.prototype['sourceServerTags'] = undefined;

/**
 * @member {Object} tags
 */
VcenterClient.prototype['tags'] = undefined;

/**
 * @member {String} vcenterClientID
 */
VcenterClient.prototype['vcenterClientID'] = undefined;

/**
 * @member {String} vcenterUUID
 */
VcenterClient.prototype['vcenterUUID'] = undefined;






export default VcenterClient;

