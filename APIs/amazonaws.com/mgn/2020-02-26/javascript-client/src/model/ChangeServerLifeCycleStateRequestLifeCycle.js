/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChangeServerLifeCycleStateSourceServerLifecycle from './ChangeServerLifeCycleStateSourceServerLifecycle';
import ChangeServerLifeCycleStateSourceServerLifecycleState from './ChangeServerLifeCycleStateSourceServerLifecycleState';

/**
 * The ChangeServerLifeCycleStateRequestLifeCycle model module.
 * @module model/ChangeServerLifeCycleStateRequestLifeCycle
 * @version 2020-02-26
 */
class ChangeServerLifeCycleStateRequestLifeCycle {
    /**
     * Constructs a new <code>ChangeServerLifeCycleStateRequestLifeCycle</code>.
     * @alias module:model/ChangeServerLifeCycleStateRequestLifeCycle
     * @implements module:model/ChangeServerLifeCycleStateSourceServerLifecycle
     * @param state {module:model/ChangeServerLifeCycleStateSourceServerLifecycleState} 
     */
    constructor(state) { 
        ChangeServerLifeCycleStateSourceServerLifecycle.initialize(this, state);
        ChangeServerLifeCycleStateRequestLifeCycle.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ChangeServerLifeCycleStateRequestLifeCycle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeServerLifeCycleStateRequestLifeCycle} obj Optional instance to populate.
     * @return {module:model/ChangeServerLifeCycleStateRequestLifeCycle} The populated <code>ChangeServerLifeCycleStateRequestLifeCycle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeServerLifeCycleStateRequestLifeCycle();
            ChangeServerLifeCycleStateSourceServerLifecycle.constructFromObject(data, obj);

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], ChangeServerLifeCycleStateSourceServerLifecycleState);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangeServerLifeCycleStateRequestLifeCycle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangeServerLifeCycleStateRequestLifeCycle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChangeServerLifeCycleStateRequestLifeCycle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          ChangeServerLifeCycleStateSourceServerLifecycleState.validateJSON(data['state']);
        }

        return true;
    }


}

ChangeServerLifeCycleStateRequestLifeCycle.RequiredProperties = ["state"];

/**
 * @member {module:model/ChangeServerLifeCycleStateSourceServerLifecycleState} state
 */
ChangeServerLifeCycleStateRequestLifeCycle.prototype['state'] = undefined;


// Implement ChangeServerLifeCycleStateSourceServerLifecycle interface:
/**
 * @member {module:model/ChangeServerLifeCycleStateSourceServerLifecycleState} state
 */
ChangeServerLifeCycleStateSourceServerLifecycle.prototype['state'] = undefined;




export default ChangeServerLifeCycleStateRequestLifeCycle;

