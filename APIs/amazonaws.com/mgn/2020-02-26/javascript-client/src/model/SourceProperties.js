/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourcePropertiesIdentificationHints from './SourcePropertiesIdentificationHints';
import SourcePropertiesOs from './SourcePropertiesOs';

/**
 * The SourceProperties model module.
 * @module model/SourceProperties
 * @version 2020-02-26
 */
class SourceProperties {
    /**
     * Constructs a new <code>SourceProperties</code>.
     * Source server properties.
     * @alias module:model/SourceProperties
     */
    constructor() { 
        
        SourceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceProperties} obj Optional instance to populate.
     * @return {module:model/SourceProperties} The populated <code>SourceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceProperties();

            if (data.hasOwnProperty('cpus')) {
                obj['cpus'] = ApiClient.convertToType(data['cpus'], Array);
            }
            if (data.hasOwnProperty('disks')) {
                obj['disks'] = ApiClient.convertToType(data['disks'], Array);
            }
            if (data.hasOwnProperty('identificationHints')) {
                obj['identificationHints'] = SourcePropertiesIdentificationHints.constructFromObject(data['identificationHints']);
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'String');
            }
            if (data.hasOwnProperty('networkInterfaces')) {
                obj['networkInterfaces'] = ApiClient.convertToType(data['networkInterfaces'], Array);
            }
            if (data.hasOwnProperty('os')) {
                obj['os'] = SourcePropertiesOs.constructFromObject(data['os']);
            }
            if (data.hasOwnProperty('ramBytes')) {
                obj['ramBytes'] = ApiClient.convertToType(data['ramBytes'], 'Number');
            }
            if (data.hasOwnProperty('recommendedInstanceType')) {
                obj['recommendedInstanceType'] = ApiClient.convertToType(data['recommendedInstanceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cpus`
        if (data['cpus']) { // data not null
          Array.validateJSON(data['cpus']);
        }
        // validate the optional field `disks`
        if (data['disks']) { // data not null
          Array.validateJSON(data['disks']);
        }
        // validate the optional field `identificationHints`
        if (data['identificationHints']) { // data not null
          SourcePropertiesIdentificationHints.validateJSON(data['identificationHints']);
        }
        // validate the optional field `lastUpdatedDateTime`
        if (data['lastUpdatedDateTime']) { // data not null
          String.validateJSON(data['lastUpdatedDateTime']);
        }
        // validate the optional field `networkInterfaces`
        if (data['networkInterfaces']) { // data not null
          Array.validateJSON(data['networkInterfaces']);
        }
        // validate the optional field `os`
        if (data['os']) { // data not null
          SourcePropertiesOs.validateJSON(data['os']);
        }
        // validate the optional field `ramBytes`
        if (data['ramBytes']) { // data not null
          Number.validateJSON(data['ramBytes']);
        }
        // validate the optional field `recommendedInstanceType`
        if (data['recommendedInstanceType']) { // data not null
          String.validateJSON(data['recommendedInstanceType']);
        }

        return true;
    }


}



/**
 * @member {Array} cpus
 */
SourceProperties.prototype['cpus'] = undefined;

/**
 * @member {Array} disks
 */
SourceProperties.prototype['disks'] = undefined;

/**
 * @member {module:model/SourcePropertiesIdentificationHints} identificationHints
 */
SourceProperties.prototype['identificationHints'] = undefined;

/**
 * @member {String} lastUpdatedDateTime
 */
SourceProperties.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {Array} networkInterfaces
 */
SourceProperties.prototype['networkInterfaces'] = undefined;

/**
 * @member {module:model/SourcePropertiesOs} os
 */
SourceProperties.prototype['os'] = undefined;

/**
 * @member {Number} ramBytes
 */
SourceProperties.prototype['ramBytes'] = undefined;

/**
 * @member {String} recommendedInstanceType
 */
SourceProperties.prototype['recommendedInstanceType'] = undefined;






export default SourceProperties;

