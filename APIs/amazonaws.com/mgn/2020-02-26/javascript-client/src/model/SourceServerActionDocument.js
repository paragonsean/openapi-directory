/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActionCategory from './ActionCategory';

/**
 * The SourceServerActionDocument model module.
 * @module model/SourceServerActionDocument
 * @version 2020-02-26
 */
class SourceServerActionDocument {
    /**
     * Constructs a new <code>SourceServerActionDocument</code>.
     * @alias module:model/SourceServerActionDocument
     */
    constructor() { 
        
        SourceServerActionDocument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SourceServerActionDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SourceServerActionDocument} obj Optional instance to populate.
     * @return {module:model/SourceServerActionDocument} The populated <code>SourceServerActionDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SourceServerActionDocument();

            if (data.hasOwnProperty('actionID')) {
                obj['actionID'] = ApiClient.convertToType(data['actionID'], 'String');
            }
            if (data.hasOwnProperty('actionName')) {
                obj['actionName'] = ApiClient.convertToType(data['actionName'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], ActionCategory);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('documentIdentifier')) {
                obj['documentIdentifier'] = ApiClient.convertToType(data['documentIdentifier'], 'String');
            }
            if (data.hasOwnProperty('documentVersion')) {
                obj['documentVersion'] = ApiClient.convertToType(data['documentVersion'], 'String');
            }
            if (data.hasOwnProperty('externalParameters')) {
                obj['externalParameters'] = ApiClient.convertToType(data['externalParameters'], Object);
            }
            if (data.hasOwnProperty('mustSucceedForCutover')) {
                obj['mustSucceedForCutover'] = ApiClient.convertToType(data['mustSucceedForCutover'], 'Boolean');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
            if (data.hasOwnProperty('timeoutSeconds')) {
                obj['timeoutSeconds'] = ApiClient.convertToType(data['timeoutSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SourceServerActionDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SourceServerActionDocument</code>.
     */
    static validateJSON(data) {
        // validate the optional field `actionID`
        if (data['actionID']) { // data not null
          String.validateJSON(data['actionID']);
        }
        // validate the optional field `actionName`
        if (data['actionName']) { // data not null
          String.validateJSON(data['actionName']);
        }
        // validate the optional field `active`
        if (data['active']) { // data not null
          Boolean.validateJSON(data['active']);
        }
        // validate the optional field `category`
        if (data['category']) { // data not null
          ActionCategory.validateJSON(data['category']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `documentIdentifier`
        if (data['documentIdentifier']) { // data not null
          String.validateJSON(data['documentIdentifier']);
        }
        // validate the optional field `documentVersion`
        if (data['documentVersion']) { // data not null
          String.validateJSON(data['documentVersion']);
        }
        // validate the optional field `externalParameters`
        if (data['externalParameters']) { // data not null
          Object.validateJSON(data['externalParameters']);
        }
        // validate the optional field `mustSucceedForCutover`
        if (data['mustSucceedForCutover']) { // data not null
          Boolean.validateJSON(data['mustSucceedForCutover']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          Number.validateJSON(data['order']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          Object.validateJSON(data['parameters']);
        }
        // validate the optional field `timeoutSeconds`
        if (data['timeoutSeconds']) { // data not null
          Number.validateJSON(data['timeoutSeconds']);
        }

        return true;
    }


}



/**
 * @member {String} actionID
 */
SourceServerActionDocument.prototype['actionID'] = undefined;

/**
 * @member {String} actionName
 */
SourceServerActionDocument.prototype['actionName'] = undefined;

/**
 * @member {Boolean} active
 */
SourceServerActionDocument.prototype['active'] = undefined;

/**
 * @member {module:model/ActionCategory} category
 */
SourceServerActionDocument.prototype['category'] = undefined;

/**
 * @member {String} description
 */
SourceServerActionDocument.prototype['description'] = undefined;

/**
 * @member {String} documentIdentifier
 */
SourceServerActionDocument.prototype['documentIdentifier'] = undefined;

/**
 * @member {String} documentVersion
 */
SourceServerActionDocument.prototype['documentVersion'] = undefined;

/**
 * @member {Object} externalParameters
 */
SourceServerActionDocument.prototype['externalParameters'] = undefined;

/**
 * @member {Boolean} mustSucceedForCutover
 */
SourceServerActionDocument.prototype['mustSucceedForCutover'] = undefined;

/**
 * @member {Number} order
 */
SourceServerActionDocument.prototype['order'] = undefined;

/**
 * @member {Object} parameters
 */
SourceServerActionDocument.prototype['parameters'] = undefined;

/**
 * @member {Number} timeoutSeconds
 */
SourceServerActionDocument.prototype['timeoutSeconds'] = undefined;






export default SourceServerActionDocument;

