/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportErrorData from './ImportErrorData';

/**
 * The ImportTaskErrorErrorData model module.
 * @module model/ImportTaskErrorErrorData
 * @version 2020-02-26
 */
class ImportTaskErrorErrorData {
    /**
     * Constructs a new <code>ImportTaskErrorErrorData</code>.
     * @alias module:model/ImportTaskErrorErrorData
     * @implements module:model/ImportErrorData
     */
    constructor() { 
        ImportErrorData.initialize(this);
        ImportTaskErrorErrorData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportTaskErrorErrorData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportTaskErrorErrorData} obj Optional instance to populate.
     * @return {module:model/ImportTaskErrorErrorData} The populated <code>ImportTaskErrorErrorData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportTaskErrorErrorData();
            ImportErrorData.constructFromObject(data, obj);

            if (data.hasOwnProperty('accountID')) {
                obj['accountID'] = ApiClient.convertToType(data['accountID'], 'String');
            }
            if (data.hasOwnProperty('applicationID')) {
                obj['applicationID'] = ApiClient.convertToType(data['applicationID'], 'String');
            }
            if (data.hasOwnProperty('ec2LaunchTemplateID')) {
                obj['ec2LaunchTemplateID'] = ApiClient.convertToType(data['ec2LaunchTemplateID'], 'String');
            }
            if (data.hasOwnProperty('rawError')) {
                obj['rawError'] = ApiClient.convertToType(data['rawError'], 'String');
            }
            if (data.hasOwnProperty('rowNumber')) {
                obj['rowNumber'] = ApiClient.convertToType(data['rowNumber'], 'Number');
            }
            if (data.hasOwnProperty('sourceServerID')) {
                obj['sourceServerID'] = ApiClient.convertToType(data['sourceServerID'], 'String');
            }
            if (data.hasOwnProperty('waveID')) {
                obj['waveID'] = ApiClient.convertToType(data['waveID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportTaskErrorErrorData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportTaskErrorErrorData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `accountID`
        if (data['accountID']) { // data not null
          String.validateJSON(data['accountID']);
        }
        // validate the optional field `applicationID`
        if (data['applicationID']) { // data not null
          String.validateJSON(data['applicationID']);
        }
        // validate the optional field `ec2LaunchTemplateID`
        if (data['ec2LaunchTemplateID']) { // data not null
          String.validateJSON(data['ec2LaunchTemplateID']);
        }
        // validate the optional field `rawError`
        if (data['rawError']) { // data not null
          String.validateJSON(data['rawError']);
        }
        // validate the optional field `rowNumber`
        if (data['rowNumber']) { // data not null
          Number.validateJSON(data['rowNumber']);
        }
        // validate the optional field `sourceServerID`
        if (data['sourceServerID']) { // data not null
          String.validateJSON(data['sourceServerID']);
        }
        // validate the optional field `waveID`
        if (data['waveID']) { // data not null
          String.validateJSON(data['waveID']);
        }

        return true;
    }


}



/**
 * @member {String} accountID
 */
ImportTaskErrorErrorData.prototype['accountID'] = undefined;

/**
 * @member {String} applicationID
 */
ImportTaskErrorErrorData.prototype['applicationID'] = undefined;

/**
 * @member {String} ec2LaunchTemplateID
 */
ImportTaskErrorErrorData.prototype['ec2LaunchTemplateID'] = undefined;

/**
 * @member {String} rawError
 */
ImportTaskErrorErrorData.prototype['rawError'] = undefined;

/**
 * @member {Number} rowNumber
 */
ImportTaskErrorErrorData.prototype['rowNumber'] = undefined;

/**
 * @member {String} sourceServerID
 */
ImportTaskErrorErrorData.prototype['sourceServerID'] = undefined;

/**
 * @member {String} waveID
 */
ImportTaskErrorErrorData.prototype['waveID'] = undefined;


// Implement ImportErrorData interface:
/**
 * @member {String} accountID
 */
ImportErrorData.prototype['accountID'] = undefined;
/**
 * @member {String} applicationID
 */
ImportErrorData.prototype['applicationID'] = undefined;
/**
 * @member {String} ec2LaunchTemplateID
 */
ImportErrorData.prototype['ec2LaunchTemplateID'] = undefined;
/**
 * @member {String} rawError
 */
ImportErrorData.prototype['rawError'] = undefined;
/**
 * @member {Number} rowNumber
 */
ImportErrorData.prototype['rowNumber'] = undefined;
/**
 * @member {String} sourceServerID
 */
ImportErrorData.prototype['sourceServerID'] = undefined;
/**
 * @member {String} waveID
 */
ImportErrorData.prototype['waveID'] = undefined;




export default ImportTaskErrorErrorData;

