/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CPU model module.
 * @module model/CPU
 * @version 2020-02-26
 */
class CPU {
    /**
     * Constructs a new <code>CPU</code>.
     * Source server CPU information.
     * @alias module:model/CPU
     */
    constructor() { 
        
        CPU.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CPU</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CPU} obj Optional instance to populate.
     * @return {module:model/CPU} The populated <code>CPU</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CPU();

            if (data.hasOwnProperty('cores')) {
                obj['cores'] = ApiClient.convertToType(data['cores'], 'Number');
            }
            if (data.hasOwnProperty('modelName')) {
                obj['modelName'] = ApiClient.convertToType(data['modelName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CPU</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CPU</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cores`
        if (data['cores']) { // data not null
          Number.validateJSON(data['cores']);
        }
        // validate the optional field `modelName`
        if (data['modelName']) { // data not null
          String.validateJSON(data['modelName']);
        }

        return true;
    }


}



/**
 * @member {Number} cores
 */
CPU.prototype['cores'] = undefined;

/**
 * @member {String} modelName
 */
CPU.prototype['modelName'] = undefined;






export default CPU;

