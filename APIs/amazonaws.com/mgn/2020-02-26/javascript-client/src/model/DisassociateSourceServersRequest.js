/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DisassociateSourceServersRequest model module.
 * @module model/DisassociateSourceServersRequest
 * @version 2020-02-26
 */
class DisassociateSourceServersRequest {
    /**
     * Constructs a new <code>DisassociateSourceServersRequest</code>.
     * @alias module:model/DisassociateSourceServersRequest
     * @param applicationID {String} 
     * @param sourceServerIDs {Array} 
     */
    constructor(applicationID, sourceServerIDs) { 
        
        DisassociateSourceServersRequest.initialize(this, applicationID, sourceServerIDs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationID, sourceServerIDs) { 
        obj['applicationID'] = applicationID;
        obj['sourceServerIDs'] = sourceServerIDs;
    }

    /**
     * Constructs a <code>DisassociateSourceServersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisassociateSourceServersRequest} obj Optional instance to populate.
     * @return {module:model/DisassociateSourceServersRequest} The populated <code>DisassociateSourceServersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisassociateSourceServersRequest();

            if (data.hasOwnProperty('accountID')) {
                obj['accountID'] = ApiClient.convertToType(data['accountID'], 'String');
            }
            if (data.hasOwnProperty('applicationID')) {
                obj['applicationID'] = ApiClient.convertToType(data['applicationID'], 'String');
            }
            if (data.hasOwnProperty('sourceServerIDs')) {
                obj['sourceServerIDs'] = ApiClient.convertToType(data['sourceServerIDs'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisassociateSourceServersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisassociateSourceServersRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DisassociateSourceServersRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `accountID`
        if (data['accountID']) { // data not null
          String.validateJSON(data['accountID']);
        }
        // validate the optional field `applicationID`
        if (data['applicationID']) { // data not null
          String.validateJSON(data['applicationID']);
        }
        // validate the optional field `sourceServerIDs`
        if (data['sourceServerIDs']) { // data not null
          Array.validateJSON(data['sourceServerIDs']);
        }

        return true;
    }


}

DisassociateSourceServersRequest.RequiredProperties = ["applicationID", "sourceServerIDs"];

/**
 * @member {String} accountID
 */
DisassociateSourceServersRequest.prototype['accountID'] = undefined;

/**
 * @member {String} applicationID
 */
DisassociateSourceServersRequest.prototype['applicationID'] = undefined;

/**
 * @member {Array} sourceServerIDs
 */
DisassociateSourceServersRequest.prototype['sourceServerIDs'] = undefined;






export default DisassociateSourceServersRequest;

