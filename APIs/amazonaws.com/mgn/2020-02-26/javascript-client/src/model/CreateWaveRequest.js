/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateWaveRequest model module.
 * @module model/CreateWaveRequest
 * @version 2020-02-26
 */
class CreateWaveRequest {
    /**
     * Constructs a new <code>CreateWaveRequest</code>.
     * @alias module:model/CreateWaveRequest
     * @param name {String} Wave name.
     */
    constructor(name) { 
        
        CreateWaveRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateWaveRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWaveRequest} obj Optional instance to populate.
     * @return {module:model/CreateWaveRequest} The populated <code>CreateWaveRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWaveRequest();

            if (data.hasOwnProperty('accountID')) {
                obj['accountID'] = ApiClient.convertToType(data['accountID'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWaveRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWaveRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateWaveRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accountID'] && !(typeof data['accountID'] === 'string' || data['accountID'] instanceof String)) {
            throw new Error("Expected the field `accountID` to be a primitive type in the JSON string but got " + data['accountID']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateWaveRequest.RequiredProperties = ["name"];

/**
 * Account ID.
 * @member {String} accountID
 */
CreateWaveRequest.prototype['accountID'] = undefined;

/**
 * Wave description.
 * @member {String} description
 */
CreateWaveRequest.prototype['description'] = undefined;

/**
 * Wave name.
 * @member {String} name
 */
CreateWaveRequest.prototype['name'] = undefined;

/**
 * Wave tags.
 * @member {Object.<String, String>} tags
 */
CreateWaveRequest.prototype['tags'] = undefined;






export default CreateWaveRequest;

