/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WaveWaveAggregatedStatus from './WaveWaveAggregatedStatus';

/**
 * The Wave model module.
 * @module model/Wave
 * @version 2020-02-26
 */
class Wave {
    /**
     * Constructs a new <code>Wave</code>.
     * @alias module:model/Wave
     */
    constructor() { 
        
        Wave.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Wave</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Wave} obj Optional instance to populate.
     * @return {module:model/Wave} The populated <code>Wave</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Wave();

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isArchived')) {
                obj['isArchived'] = ApiClient.convertToType(data['isArchived'], 'Boolean');
            }
            if (data.hasOwnProperty('lastModifiedDateTime')) {
                obj['lastModifiedDateTime'] = ApiClient.convertToType(data['lastModifiedDateTime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('waveAggregatedStatus')) {
                obj['waveAggregatedStatus'] = WaveWaveAggregatedStatus.constructFromObject(data['waveAggregatedStatus']);
            }
            if (data.hasOwnProperty('waveID')) {
                obj['waveID'] = ApiClient.convertToType(data['waveID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Wave</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Wave</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          String.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `isArchived`
        if (data['isArchived']) { // data not null
          Boolean.validateJSON(data['isArchived']);
        }
        // validate the optional field `lastModifiedDateTime`
        if (data['lastModifiedDateTime']) { // data not null
          String.validateJSON(data['lastModifiedDateTime']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `waveAggregatedStatus`
        if (data['waveAggregatedStatus']) { // data not null
          WaveWaveAggregatedStatus.validateJSON(data['waveAggregatedStatus']);
        }
        // validate the optional field `waveID`
        if (data['waveID']) { // data not null
          String.validateJSON(data['waveID']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
Wave.prototype['arn'] = undefined;

/**
 * @member {String} creationDateTime
 */
Wave.prototype['creationDateTime'] = undefined;

/**
 * @member {String} description
 */
Wave.prototype['description'] = undefined;

/**
 * @member {Boolean} isArchived
 */
Wave.prototype['isArchived'] = undefined;

/**
 * @member {String} lastModifiedDateTime
 */
Wave.prototype['lastModifiedDateTime'] = undefined;

/**
 * @member {String} name
 */
Wave.prototype['name'] = undefined;

/**
 * @member {Object} tags
 */
Wave.prototype['tags'] = undefined;

/**
 * @member {module:model/WaveWaveAggregatedStatus} waveAggregatedStatus
 */
Wave.prototype['waveAggregatedStatus'] = undefined;

/**
 * @member {String} waveID
 */
Wave.prototype['waveID'] = undefined;






export default Wave;

