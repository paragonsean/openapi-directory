/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportStatus from './ImportStatus';
import ImportTaskS3BucketSource from './ImportTaskS3BucketSource';
import ImportTaskSummary from './ImportTaskSummary';

/**
 * The ImportTask model module.
 * @module model/ImportTask
 * @version 2020-02-26
 */
class ImportTask {
    /**
     * Constructs a new <code>ImportTask</code>.
     * Import task.
     * @alias module:model/ImportTask
     */
    constructor() { 
        
        ImportTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportTask} obj Optional instance to populate.
     * @return {module:model/ImportTask} The populated <code>ImportTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportTask();

            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'String');
            }
            if (data.hasOwnProperty('endDateTime')) {
                obj['endDateTime'] = ApiClient.convertToType(data['endDateTime'], 'String');
            }
            if (data.hasOwnProperty('importID')) {
                obj['importID'] = ApiClient.convertToType(data['importID'], 'String');
            }
            if (data.hasOwnProperty('progressPercentage')) {
                obj['progressPercentage'] = ApiClient.convertToType(data['progressPercentage'], 'Number');
            }
            if (data.hasOwnProperty('s3BucketSource')) {
                obj['s3BucketSource'] = ImportTaskS3BucketSource.constructFromObject(data['s3BucketSource']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ImportStatus);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ImportTaskSummary.constructFromObject(data['summary']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportTask</code>.
     */
    static validateJSON(data) {
        // validate the optional field `creationDateTime`
        if (data['creationDateTime']) { // data not null
          String.validateJSON(data['creationDateTime']);
        }
        // validate the optional field `endDateTime`
        if (data['endDateTime']) { // data not null
          String.validateJSON(data['endDateTime']);
        }
        // validate the optional field `importID`
        if (data['importID']) { // data not null
          String.validateJSON(data['importID']);
        }
        // validate the optional field `progressPercentage`
        if (data['progressPercentage']) { // data not null
          Number.validateJSON(data['progressPercentage']);
        }
        // validate the optional field `s3BucketSource`
        if (data['s3BucketSource']) { // data not null
          ImportTaskS3BucketSource.validateJSON(data['s3BucketSource']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ImportStatus.validateJSON(data['status']);
        }
        // validate the optional field `summary`
        if (data['summary']) { // data not null
          ImportTaskSummary.validateJSON(data['summary']);
        }

        return true;
    }


}



/**
 * @member {String} creationDateTime
 */
ImportTask.prototype['creationDateTime'] = undefined;

/**
 * @member {String} endDateTime
 */
ImportTask.prototype['endDateTime'] = undefined;

/**
 * @member {String} importID
 */
ImportTask.prototype['importID'] = undefined;

/**
 * @member {Number} progressPercentage
 */
ImportTask.prototype['progressPercentage'] = undefined;

/**
 * @member {module:model/ImportTaskS3BucketSource} s3BucketSource
 */
ImportTask.prototype['s3BucketSource'] = undefined;

/**
 * @member {module:model/ImportStatus} status
 */
ImportTask.prototype['status'] = undefined;

/**
 * @member {module:model/ImportTaskSummary} summary
 */
ImportTask.prototype['summary'] = undefined;






export default ImportTask;

