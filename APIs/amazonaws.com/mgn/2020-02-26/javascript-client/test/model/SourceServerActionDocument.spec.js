/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApplicationMigrationService);
  }
}(this, function(expect, ApplicationMigrationService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApplicationMigrationService.SourceServerActionDocument();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SourceServerActionDocument', function() {
    it('should create an instance of SourceServerActionDocument', function() {
      // uncomment below and update the code to test SourceServerActionDocument
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be.a(ApplicationMigrationService.SourceServerActionDocument);
    });

    it('should have the property actionID (base name: "actionID")', function() {
      // uncomment below and update the code to test the property actionID
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property actionName (base name: "actionName")', function() {
      // uncomment below and update the code to test the property actionName
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property documentIdentifier (base name: "documentIdentifier")', function() {
      // uncomment below and update the code to test the property documentIdentifier
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property documentVersion (base name: "documentVersion")', function() {
      // uncomment below and update the code to test the property documentVersion
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property externalParameters (base name: "externalParameters")', function() {
      // uncomment below and update the code to test the property externalParameters
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property mustSucceedForCutover (base name: "mustSucceedForCutover")', function() {
      // uncomment below and update the code to test the property mustSucceedForCutover
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

    it('should have the property timeoutSeconds (base name: "timeoutSeconds")', function() {
      // uncomment below and update the code to test the property timeoutSeconds
      //var instance = new ApplicationMigrationService.SourceServerActionDocument();
      //expect(instance).to.be();
    });

  });

}));
