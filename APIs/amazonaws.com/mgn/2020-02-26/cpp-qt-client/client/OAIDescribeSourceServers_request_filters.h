/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeSourceServers_request_filters.h
 *
 * Request to filter Source Servers list.
 */

#ifndef OAIDescribeSourceServers_request_filters_H
#define OAIDescribeSourceServers_request_filters_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeSourceServers_request_filters : public OAIObject {
public:
    OAIDescribeSourceServers_request_filters();
    OAIDescribeSourceServers_request_filters(QString json);
    ~OAIDescribeSourceServers_request_filters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getApplicationIds() const;
    void setApplicationIds(const QList &application_ids);
    bool is_application_ids_Set() const;
    bool is_application_ids_Valid() const;

    bool getIsArchived() const;
    void setIsArchived(const bool &is_archived);
    bool is_is_archived_Set() const;
    bool is_is_archived_Valid() const;

    QList getLifeCycleStates() const;
    void setLifeCycleStates(const QList &life_cycle_states);
    bool is_life_cycle_states_Set() const;
    bool is_life_cycle_states_Valid() const;

    QList getReplicationTypes() const;
    void setReplicationTypes(const QList &replication_types);
    bool is_replication_types_Set() const;
    bool is_replication_types_Valid() const;

    QList getSourceServerIds() const;
    void setSourceServerIds(const QList &source_server_ids);
    bool is_source_server_ids_Set() const;
    bool is_source_server_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_application_ids;
    bool m_application_ids_isSet;
    bool m_application_ids_isValid;

    bool m_is_archived;
    bool m_is_archived_isSet;
    bool m_is_archived_isValid;

    QList m_life_cycle_states;
    bool m_life_cycle_states_isSet;
    bool m_life_cycle_states_isValid;

    QList m_replication_types;
    bool m_replication_types_isSet;
    bool m_replication_types_isValid;

    QList m_source_server_ids;
    bool m_source_server_ids_isSet;
    bool m_source_server_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeSourceServers_request_filters)

#endif // OAIDescribeSourceServers_request_filters_H
