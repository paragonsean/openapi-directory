/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINetworkInterface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINetworkInterface::OAINetworkInterface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINetworkInterface::OAINetworkInterface() {
    this->initializeModel();
}

OAINetworkInterface::~OAINetworkInterface() {}

void OAINetworkInterface::initializeModel() {

    m_ips_isSet = false;
    m_ips_isValid = false;

    m_is_primary_isSet = false;
    m_is_primary_isValid = false;

    m_mac_address_isSet = false;
    m_mac_address_isValid = false;
}

void OAINetworkInterface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINetworkInterface::fromJsonObject(QJsonObject json) {

    m_ips_isValid = ::OpenAPI::fromJsonValue(m_ips, json[QString("ips")]);
    m_ips_isSet = !json[QString("ips")].isNull() && m_ips_isValid;

    m_is_primary_isValid = ::OpenAPI::fromJsonValue(m_is_primary, json[QString("isPrimary")]);
    m_is_primary_isSet = !json[QString("isPrimary")].isNull() && m_is_primary_isValid;

    m_mac_address_isValid = ::OpenAPI::fromJsonValue(m_mac_address, json[QString("macAddress")]);
    m_mac_address_isSet = !json[QString("macAddress")].isNull() && m_mac_address_isValid;
}

QString OAINetworkInterface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINetworkInterface::asJsonObject() const {
    QJsonObject obj;
    if (m_ips.isSet()) {
        obj.insert(QString("ips"), ::OpenAPI::toJsonValue(m_ips));
    }
    if (m_is_primary_isSet) {
        obj.insert(QString("isPrimary"), ::OpenAPI::toJsonValue(m_is_primary));
    }
    if (m_mac_address_isSet) {
        obj.insert(QString("macAddress"), ::OpenAPI::toJsonValue(m_mac_address));
    }
    return obj;
}

QList OAINetworkInterface::getIps() const {
    return m_ips;
}
void OAINetworkInterface::setIps(const QList &ips) {
    m_ips = ips;
    m_ips_isSet = true;
}

bool OAINetworkInterface::is_ips_Set() const{
    return m_ips_isSet;
}

bool OAINetworkInterface::is_ips_Valid() const{
    return m_ips_isValid;
}

bool OAINetworkInterface::getIsPrimary() const {
    return m_is_primary;
}
void OAINetworkInterface::setIsPrimary(const bool &is_primary) {
    m_is_primary = is_primary;
    m_is_primary_isSet = true;
}

bool OAINetworkInterface::is_is_primary_Set() const{
    return m_is_primary_isSet;
}

bool OAINetworkInterface::is_is_primary_Valid() const{
    return m_is_primary_isValid;
}

QString OAINetworkInterface::getMacAddress() const {
    return m_mac_address;
}
void OAINetworkInterface::setMacAddress(const QString &mac_address) {
    m_mac_address = mac_address;
    m_mac_address_isSet = true;
}

bool OAINetworkInterface::is_mac_address_Set() const{
    return m_mac_address_isSet;
}

bool OAINetworkInterface::is_mac_address_Valid() const{
    return m_mac_address_isValid;
}

bool OAINetworkInterface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ips.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINetworkInterface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
