/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceServer_sourceProperties.h
 *
 * 
 */

#ifndef OAISourceServer_sourceProperties_H
#define OAISourceServer_sourceProperties_H

#include <QJsonObject>

#include "OAISourceProperties_identificationHints.h"
#include "OAISourceProperties_os.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceProperties_identificationHints;
class OAISourceProperties_os;

class OAISourceServer_sourceProperties : public OAIObject {
public:
    OAISourceServer_sourceProperties();
    OAISourceServer_sourceProperties(QString json);
    ~OAISourceServer_sourceProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCpus() const;
    void setCpus(const QList &cpus);
    bool is_cpus_Set() const;
    bool is_cpus_Valid() const;

    QList getDisks() const;
    void setDisks(const QList &disks);
    bool is_disks_Set() const;
    bool is_disks_Valid() const;

    OAISourceProperties_identificationHints getIdentificationHints() const;
    void setIdentificationHints(const OAISourceProperties_identificationHints &identification_hints);
    bool is_identification_hints_Set() const;
    bool is_identification_hints_Valid() const;

    QString getLastUpdatedDateTime() const;
    void setLastUpdatedDateTime(const QString &last_updated_date_time);
    bool is_last_updated_date_time_Set() const;
    bool is_last_updated_date_time_Valid() const;

    QList getNetworkInterfaces() const;
    void setNetworkInterfaces(const QList &network_interfaces);
    bool is_network_interfaces_Set() const;
    bool is_network_interfaces_Valid() const;

    OAISourceProperties_os getOs() const;
    void setOs(const OAISourceProperties_os &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    qint32 getRamBytes() const;
    void setRamBytes(const qint32 &ram_bytes);
    bool is_ram_bytes_Set() const;
    bool is_ram_bytes_Valid() const;

    QString getRecommendedInstanceType() const;
    void setRecommendedInstanceType(const QString &recommended_instance_type);
    bool is_recommended_instance_type_Set() const;
    bool is_recommended_instance_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_cpus;
    bool m_cpus_isSet;
    bool m_cpus_isValid;

    QList m_disks;
    bool m_disks_isSet;
    bool m_disks_isValid;

    OAISourceProperties_identificationHints m_identification_hints;
    bool m_identification_hints_isSet;
    bool m_identification_hints_isValid;

    QString m_last_updated_date_time;
    bool m_last_updated_date_time_isSet;
    bool m_last_updated_date_time_isValid;

    QList m_network_interfaces;
    bool m_network_interfaces_isSet;
    bool m_network_interfaces_isValid;

    OAISourceProperties_os m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    qint32 m_ram_bytes;
    bool m_ram_bytes_isSet;
    bool m_ram_bytes_isValid;

    QString m_recommended_instance_type;
    bool m_recommended_instance_type_isSet;
    bool m_recommended_instance_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceServer_sourceProperties)

#endif // OAISourceServer_sourceProperties_H
