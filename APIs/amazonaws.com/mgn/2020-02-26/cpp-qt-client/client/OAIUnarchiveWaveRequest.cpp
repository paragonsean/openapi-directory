/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnarchiveWaveRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnarchiveWaveRequest::OAIUnarchiveWaveRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnarchiveWaveRequest::OAIUnarchiveWaveRequest() {
    this->initializeModel();
}

OAIUnarchiveWaveRequest::~OAIUnarchiveWaveRequest() {}

void OAIUnarchiveWaveRequest::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_wave_id_isSet = false;
    m_wave_id_isValid = false;
}

void OAIUnarchiveWaveRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnarchiveWaveRequest::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountID")]);
    m_account_id_isSet = !json[QString("accountID")].isNull() && m_account_id_isValid;

    m_wave_id_isValid = ::OpenAPI::fromJsonValue(m_wave_id, json[QString("waveID")]);
    m_wave_id_isSet = !json[QString("waveID")].isNull() && m_wave_id_isValid;
}

QString OAIUnarchiveWaveRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnarchiveWaveRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountID"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_wave_id_isSet) {
        obj.insert(QString("waveID"), ::OpenAPI::toJsonValue(m_wave_id));
    }
    return obj;
}

QString OAIUnarchiveWaveRequest::getAccountId() const {
    return m_account_id;
}
void OAIUnarchiveWaveRequest::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIUnarchiveWaveRequest::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIUnarchiveWaveRequest::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIUnarchiveWaveRequest::getWaveId() const {
    return m_wave_id;
}
void OAIUnarchiveWaveRequest::setWaveId(const QString &wave_id) {
    m_wave_id = wave_id;
    m_wave_id_isSet = true;
}

bool OAIUnarchiveWaveRequest::is_wave_id_Set() const{
    return m_wave_id_isSet;
}

bool OAIUnarchiveWaveRequest::is_wave_id_Valid() const{
    return m_wave_id_isValid;
}

bool OAIUnarchiveWaveRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wave_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnarchiveWaveRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_wave_id_isValid && true;
}

} // namespace OpenAPI
