/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostLaunchActions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostLaunchActions::OAIPostLaunchActions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostLaunchActions::OAIPostLaunchActions() {
    this->initializeModel();
}

OAIPostLaunchActions::~OAIPostLaunchActions() {}

void OAIPostLaunchActions::initializeModel() {

    m_cloud_watch_log_group_name_isSet = false;
    m_cloud_watch_log_group_name_isValid = false;

    m_deployment_isSet = false;
    m_deployment_isValid = false;

    m_s3_log_bucket_isSet = false;
    m_s3_log_bucket_isValid = false;

    m_s3_output_key_prefix_isSet = false;
    m_s3_output_key_prefix_isValid = false;

    m_ssm_documents_isSet = false;
    m_ssm_documents_isValid = false;
}

void OAIPostLaunchActions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostLaunchActions::fromJsonObject(QJsonObject json) {

    m_cloud_watch_log_group_name_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_log_group_name, json[QString("cloudWatchLogGroupName")]);
    m_cloud_watch_log_group_name_isSet = !json[QString("cloudWatchLogGroupName")].isNull() && m_cloud_watch_log_group_name_isValid;

    m_deployment_isValid = ::OpenAPI::fromJsonValue(m_deployment, json[QString("deployment")]);
    m_deployment_isSet = !json[QString("deployment")].isNull() && m_deployment_isValid;

    m_s3_log_bucket_isValid = ::OpenAPI::fromJsonValue(m_s3_log_bucket, json[QString("s3LogBucket")]);
    m_s3_log_bucket_isSet = !json[QString("s3LogBucket")].isNull() && m_s3_log_bucket_isValid;

    m_s3_output_key_prefix_isValid = ::OpenAPI::fromJsonValue(m_s3_output_key_prefix, json[QString("s3OutputKeyPrefix")]);
    m_s3_output_key_prefix_isSet = !json[QString("s3OutputKeyPrefix")].isNull() && m_s3_output_key_prefix_isValid;

    m_ssm_documents_isValid = ::OpenAPI::fromJsonValue(m_ssm_documents, json[QString("ssmDocuments")]);
    m_ssm_documents_isSet = !json[QString("ssmDocuments")].isNull() && m_ssm_documents_isValid;
}

QString OAIPostLaunchActions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostLaunchActions::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_watch_log_group_name_isSet) {
        obj.insert(QString("cloudWatchLogGroupName"), ::OpenAPI::toJsonValue(m_cloud_watch_log_group_name));
    }
    if (m_deployment.isSet()) {
        obj.insert(QString("deployment"), ::OpenAPI::toJsonValue(m_deployment));
    }
    if (m_s3_log_bucket_isSet) {
        obj.insert(QString("s3LogBucket"), ::OpenAPI::toJsonValue(m_s3_log_bucket));
    }
    if (m_s3_output_key_prefix_isSet) {
        obj.insert(QString("s3OutputKeyPrefix"), ::OpenAPI::toJsonValue(m_s3_output_key_prefix));
    }
    if (m_ssm_documents.isSet()) {
        obj.insert(QString("ssmDocuments"), ::OpenAPI::toJsonValue(m_ssm_documents));
    }
    return obj;
}

QString OAIPostLaunchActions::getCloudWatchLogGroupName() const {
    return m_cloud_watch_log_group_name;
}
void OAIPostLaunchActions::setCloudWatchLogGroupName(const QString &cloud_watch_log_group_name) {
    m_cloud_watch_log_group_name = cloud_watch_log_group_name;
    m_cloud_watch_log_group_name_isSet = true;
}

bool OAIPostLaunchActions::is_cloud_watch_log_group_name_Set() const{
    return m_cloud_watch_log_group_name_isSet;
}

bool OAIPostLaunchActions::is_cloud_watch_log_group_name_Valid() const{
    return m_cloud_watch_log_group_name_isValid;
}

OAIPostLaunchActionsDeploymentType OAIPostLaunchActions::getDeployment() const {
    return m_deployment;
}
void OAIPostLaunchActions::setDeployment(const OAIPostLaunchActionsDeploymentType &deployment) {
    m_deployment = deployment;
    m_deployment_isSet = true;
}

bool OAIPostLaunchActions::is_deployment_Set() const{
    return m_deployment_isSet;
}

bool OAIPostLaunchActions::is_deployment_Valid() const{
    return m_deployment_isValid;
}

QString OAIPostLaunchActions::getS3LogBucket() const {
    return m_s3_log_bucket;
}
void OAIPostLaunchActions::setS3LogBucket(const QString &s3_log_bucket) {
    m_s3_log_bucket = s3_log_bucket;
    m_s3_log_bucket_isSet = true;
}

bool OAIPostLaunchActions::is_s3_log_bucket_Set() const{
    return m_s3_log_bucket_isSet;
}

bool OAIPostLaunchActions::is_s3_log_bucket_Valid() const{
    return m_s3_log_bucket_isValid;
}

QString OAIPostLaunchActions::getS3OutputKeyPrefix() const {
    return m_s3_output_key_prefix;
}
void OAIPostLaunchActions::setS3OutputKeyPrefix(const QString &s3_output_key_prefix) {
    m_s3_output_key_prefix = s3_output_key_prefix;
    m_s3_output_key_prefix_isSet = true;
}

bool OAIPostLaunchActions::is_s3_output_key_prefix_Set() const{
    return m_s3_output_key_prefix_isSet;
}

bool OAIPostLaunchActions::is_s3_output_key_prefix_Valid() const{
    return m_s3_output_key_prefix_isValid;
}

QList OAIPostLaunchActions::getSsmDocuments() const {
    return m_ssm_documents;
}
void OAIPostLaunchActions::setSsmDocuments(const QList &ssm_documents) {
    m_ssm_documents = ssm_documents;
    m_ssm_documents_isSet = true;
}

bool OAIPostLaunchActions::is_ssm_documents_Set() const{
    return m_ssm_documents_isSet;
}

bool OAIPostLaunchActions::is_ssm_documents_Valid() const{
    return m_ssm_documents_isValid;
}

bool OAIPostLaunchActions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_watch_log_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_log_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_output_key_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssm_documents.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostLaunchActions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
