/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImportTaskSummaryServers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImportTaskSummaryServers::OAIImportTaskSummaryServers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImportTaskSummaryServers::OAIImportTaskSummaryServers() {
    this->initializeModel();
}

OAIImportTaskSummaryServers::~OAIImportTaskSummaryServers() {}

void OAIImportTaskSummaryServers::initializeModel() {

    m_created_count_isSet = false;
    m_created_count_isValid = false;

    m_modified_count_isSet = false;
    m_modified_count_isValid = false;
}

void OAIImportTaskSummaryServers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImportTaskSummaryServers::fromJsonObject(QJsonObject json) {

    m_created_count_isValid = ::OpenAPI::fromJsonValue(m_created_count, json[QString("createdCount")]);
    m_created_count_isSet = !json[QString("createdCount")].isNull() && m_created_count_isValid;

    m_modified_count_isValid = ::OpenAPI::fromJsonValue(m_modified_count, json[QString("modifiedCount")]);
    m_modified_count_isSet = !json[QString("modifiedCount")].isNull() && m_modified_count_isValid;
}

QString OAIImportTaskSummaryServers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImportTaskSummaryServers::asJsonObject() const {
    QJsonObject obj;
    if (m_created_count_isSet) {
        obj.insert(QString("createdCount"), ::OpenAPI::toJsonValue(m_created_count));
    }
    if (m_modified_count_isSet) {
        obj.insert(QString("modifiedCount"), ::OpenAPI::toJsonValue(m_modified_count));
    }
    return obj;
}

qint32 OAIImportTaskSummaryServers::getCreatedCount() const {
    return m_created_count;
}
void OAIImportTaskSummaryServers::setCreatedCount(const qint32 &created_count) {
    m_created_count = created_count;
    m_created_count_isSet = true;
}

bool OAIImportTaskSummaryServers::is_created_count_Set() const{
    return m_created_count_isSet;
}

bool OAIImportTaskSummaryServers::is_created_count_Valid() const{
    return m_created_count_isValid;
}

qint32 OAIImportTaskSummaryServers::getModifiedCount() const {
    return m_modified_count;
}
void OAIImportTaskSummaryServers::setModifiedCount(const qint32 &modified_count) {
    m_modified_count = modified_count;
    m_modified_count_isSet = true;
}

bool OAIImportTaskSummaryServers::is_modified_count_Set() const{
    return m_modified_count_isSet;
}

bool OAIImportTaskSummaryServers::is_modified_count_Valid() const{
    return m_modified_count_isValid;
}

bool OAIImportTaskSummaryServers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImportTaskSummaryServers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
