/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartImportResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartImportResponse::OAIStartImportResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartImportResponse::OAIStartImportResponse() {
    this->initializeModel();
}

OAIStartImportResponse::~OAIStartImportResponse() {}

void OAIStartImportResponse::initializeModel() {

    m_import_task_isSet = false;
    m_import_task_isValid = false;
}

void OAIStartImportResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartImportResponse::fromJsonObject(QJsonObject json) {

    m_import_task_isValid = ::OpenAPI::fromJsonValue(m_import_task, json[QString("importTask")]);
    m_import_task_isSet = !json[QString("importTask")].isNull() && m_import_task_isValid;
}

QString OAIStartImportResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartImportResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_import_task.isSet()) {
        obj.insert(QString("importTask"), ::OpenAPI::toJsonValue(m_import_task));
    }
    return obj;
}

OAIStartImportResponse_importTask OAIStartImportResponse::getImportTask() const {
    return m_import_task;
}
void OAIStartImportResponse::setImportTask(const OAIStartImportResponse_importTask &import_task) {
    m_import_task = import_task;
    m_import_task_isSet = true;
}

bool OAIStartImportResponse::is_import_task_Set() const{
    return m_import_task_isSet;
}

bool OAIStartImportResponse::is_import_task_Valid() const{
    return m_import_task_isValid;
}

bool OAIStartImportResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_import_task.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartImportResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
