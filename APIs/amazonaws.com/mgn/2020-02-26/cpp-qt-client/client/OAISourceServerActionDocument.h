/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceServerActionDocument.h
 *
 * 
 */

#ifndef OAISourceServerActionDocument_H
#define OAISourceServerActionDocument_H

#include <QJsonObject>

#include "OAIActionCategory.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceServerActionDocument : public OAIObject {
public:
    OAISourceServerActionDocument();
    OAISourceServerActionDocument(QString json);
    ~OAISourceServerActionDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionId() const;
    void setActionId(const QString &action_id);
    bool is_action_id_Set() const;
    bool is_action_id_Valid() const;

    QString getActionName() const;
    void setActionName(const QString &action_name);
    bool is_action_name_Set() const;
    bool is_action_name_Valid() const;

    bool getActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAIActionCategory getCategory() const;
    void setCategory(const OAIActionCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDocumentIdentifier() const;
    void setDocumentIdentifier(const QString &document_identifier);
    bool is_document_identifier_Set() const;
    bool is_document_identifier_Valid() const;

    QString getDocumentVersion() const;
    void setDocumentVersion(const QString &document_version);
    bool is_document_version_Set() const;
    bool is_document_version_Valid() const;

    QMap getExternalParameters() const;
    void setExternalParameters(const QMap &external_parameters);
    bool is_external_parameters_Set() const;
    bool is_external_parameters_Valid() const;

    bool getMustSucceedForCutover() const;
    void setMustSucceedForCutover(const bool &must_succeed_for_cutover);
    bool is_must_succeed_for_cutover_Set() const;
    bool is_must_succeed_for_cutover_Valid() const;

    qint32 getOrder() const;
    void setOrder(const qint32 &order);
    bool is_order_Set() const;
    bool is_order_Valid() const;

    QMap getParameters() const;
    void setParameters(const QMap &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    qint32 getTimeoutSeconds() const;
    void setTimeoutSeconds(const qint32 &timeout_seconds);
    bool is_timeout_seconds_Set() const;
    bool is_timeout_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_id;
    bool m_action_id_isSet;
    bool m_action_id_isValid;

    QString m_action_name;
    bool m_action_name_isSet;
    bool m_action_name_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAIActionCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_document_identifier;
    bool m_document_identifier_isSet;
    bool m_document_identifier_isValid;

    QString m_document_version;
    bool m_document_version_isSet;
    bool m_document_version_isValid;

    QMap m_external_parameters;
    bool m_external_parameters_isSet;
    bool m_external_parameters_isValid;

    bool m_must_succeed_for_cutover;
    bool m_must_succeed_for_cutover_isSet;
    bool m_must_succeed_for_cutover_isValid;

    qint32 m_order;
    bool m_order_isSet;
    bool m_order_isValid;

    QMap m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    qint32 m_timeout_seconds;
    bool m_timeout_seconds_isSet;
    bool m_timeout_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceServerActionDocument)

#endif // OAISourceServerActionDocument_H
