/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeLaunchConfigurationTemplatesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeLaunchConfigurationTemplatesRequest::OAIDescribeLaunchConfigurationTemplatesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeLaunchConfigurationTemplatesRequest::OAIDescribeLaunchConfigurationTemplatesRequest() {
    this->initializeModel();
}

OAIDescribeLaunchConfigurationTemplatesRequest::~OAIDescribeLaunchConfigurationTemplatesRequest() {}

void OAIDescribeLaunchConfigurationTemplatesRequest::initializeModel() {

    m_launch_configuration_template_ids_isSet = false;
    m_launch_configuration_template_ids_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIDescribeLaunchConfigurationTemplatesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeLaunchConfigurationTemplatesRequest::fromJsonObject(QJsonObject json) {

    m_launch_configuration_template_ids_isValid = ::OpenAPI::fromJsonValue(m_launch_configuration_template_ids, json[QString("launchConfigurationTemplateIDs")]);
    m_launch_configuration_template_ids_isSet = !json[QString("launchConfigurationTemplateIDs")].isNull() && m_launch_configuration_template_ids_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIDescribeLaunchConfigurationTemplatesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeLaunchConfigurationTemplatesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_launch_configuration_template_ids.isSet()) {
        obj.insert(QString("launchConfigurationTemplateIDs"), ::OpenAPI::toJsonValue(m_launch_configuration_template_ids));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIDescribeLaunchConfigurationTemplatesRequest::getLaunchConfigurationTemplateIds() const {
    return m_launch_configuration_template_ids;
}
void OAIDescribeLaunchConfigurationTemplatesRequest::setLaunchConfigurationTemplateIds(const QList &launch_configuration_template_ids) {
    m_launch_configuration_template_ids = launch_configuration_template_ids;
    m_launch_configuration_template_ids_isSet = true;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_launch_configuration_template_ids_Set() const{
    return m_launch_configuration_template_ids_isSet;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_launch_configuration_template_ids_Valid() const{
    return m_launch_configuration_template_ids_isValid;
}

qint32 OAIDescribeLaunchConfigurationTemplatesRequest::getMaxResults() const {
    return m_max_results;
}
void OAIDescribeLaunchConfigurationTemplatesRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QString OAIDescribeLaunchConfigurationTemplatesRequest::getNextToken() const {
    return m_next_token;
}
void OAIDescribeLaunchConfigurationTemplatesRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_launch_configuration_template_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeLaunchConfigurationTemplatesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
