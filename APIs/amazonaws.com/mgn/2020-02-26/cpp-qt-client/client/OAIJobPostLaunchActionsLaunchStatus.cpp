/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobPostLaunchActionsLaunchStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobPostLaunchActionsLaunchStatus::OAIJobPostLaunchActionsLaunchStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobPostLaunchActionsLaunchStatus::OAIJobPostLaunchActionsLaunchStatus() {
    this->initializeModel();
}

OAIJobPostLaunchActionsLaunchStatus::~OAIJobPostLaunchActionsLaunchStatus() {}

void OAIJobPostLaunchActionsLaunchStatus::initializeModel() {

    m_execution_id_isSet = false;
    m_execution_id_isValid = false;

    m_execution_status_isSet = false;
    m_execution_status_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_ssm_document_isSet = false;
    m_ssm_document_isValid = false;

    m_ssm_document_type_isSet = false;
    m_ssm_document_type_isValid = false;
}

void OAIJobPostLaunchActionsLaunchStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobPostLaunchActionsLaunchStatus::fromJsonObject(QJsonObject json) {

    m_execution_id_isValid = ::OpenAPI::fromJsonValue(m_execution_id, json[QString("executionID")]);
    m_execution_id_isSet = !json[QString("executionID")].isNull() && m_execution_id_isValid;

    m_execution_status_isValid = ::OpenAPI::fromJsonValue(m_execution_status, json[QString("executionStatus")]);
    m_execution_status_isSet = !json[QString("executionStatus")].isNull() && m_execution_status_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failureReason")]);
    m_failure_reason_isSet = !json[QString("failureReason")].isNull() && m_failure_reason_isValid;

    m_ssm_document_isValid = ::OpenAPI::fromJsonValue(m_ssm_document, json[QString("ssmDocument")]);
    m_ssm_document_isSet = !json[QString("ssmDocument")].isNull() && m_ssm_document_isValid;

    m_ssm_document_type_isValid = ::OpenAPI::fromJsonValue(m_ssm_document_type, json[QString("ssmDocumentType")]);
    m_ssm_document_type_isSet = !json[QString("ssmDocumentType")].isNull() && m_ssm_document_type_isValid;
}

QString OAIJobPostLaunchActionsLaunchStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobPostLaunchActionsLaunchStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_execution_id_isSet) {
        obj.insert(QString("executionID"), ::OpenAPI::toJsonValue(m_execution_id));
    }
    if (m_execution_status.isSet()) {
        obj.insert(QString("executionStatus"), ::OpenAPI::toJsonValue(m_execution_status));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("failureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_ssm_document.isSet()) {
        obj.insert(QString("ssmDocument"), ::OpenAPI::toJsonValue(m_ssm_document));
    }
    if (m_ssm_document_type.isSet()) {
        obj.insert(QString("ssmDocumentType"), ::OpenAPI::toJsonValue(m_ssm_document_type));
    }
    return obj;
}

QString OAIJobPostLaunchActionsLaunchStatus::getExecutionId() const {
    return m_execution_id;
}
void OAIJobPostLaunchActionsLaunchStatus::setExecutionId(const QString &execution_id) {
    m_execution_id = execution_id;
    m_execution_id_isSet = true;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_execution_id_Set() const{
    return m_execution_id_isSet;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_execution_id_Valid() const{
    return m_execution_id_isValid;
}

OAIPostLaunchActionExecutionStatus OAIJobPostLaunchActionsLaunchStatus::getExecutionStatus() const {
    return m_execution_status;
}
void OAIJobPostLaunchActionsLaunchStatus::setExecutionStatus(const OAIPostLaunchActionExecutionStatus &execution_status) {
    m_execution_status = execution_status;
    m_execution_status_isSet = true;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_execution_status_Set() const{
    return m_execution_status_isSet;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_execution_status_Valid() const{
    return m_execution_status_isValid;
}

QString OAIJobPostLaunchActionsLaunchStatus::getFailureReason() const {
    return m_failure_reason;
}
void OAIJobPostLaunchActionsLaunchStatus::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

OAIJobPostLaunchActionsLaunchStatus_ssmDocument OAIJobPostLaunchActionsLaunchStatus::getSsmDocument() const {
    return m_ssm_document;
}
void OAIJobPostLaunchActionsLaunchStatus::setSsmDocument(const OAIJobPostLaunchActionsLaunchStatus_ssmDocument &ssm_document) {
    m_ssm_document = ssm_document;
    m_ssm_document_isSet = true;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_ssm_document_Set() const{
    return m_ssm_document_isSet;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_ssm_document_Valid() const{
    return m_ssm_document_isValid;
}

OAISsmDocumentType OAIJobPostLaunchActionsLaunchStatus::getSsmDocumentType() const {
    return m_ssm_document_type;
}
void OAIJobPostLaunchActionsLaunchStatus::setSsmDocumentType(const OAISsmDocumentType &ssm_document_type) {
    m_ssm_document_type = ssm_document_type;
    m_ssm_document_type_isSet = true;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_ssm_document_type_Set() const{
    return m_ssm_document_type_isSet;
}

bool OAIJobPostLaunchActionsLaunchStatus::is_ssm_document_type_Valid() const{
    return m_ssm_document_type_isValid;
}

bool OAIJobPostLaunchActionsLaunchStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_execution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssm_document.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssm_document_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobPostLaunchActionsLaunchStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
