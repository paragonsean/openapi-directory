/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILaunchStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILaunchStatus::OAILaunchStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILaunchStatus::OAILaunchStatus() {
    this->initializeModel();
}

OAILaunchStatus::~OAILaunchStatus() {}

void OAILaunchStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILaunchStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILaunchStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAILaunchStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILaunchStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAUNCHED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILaunchStatus::LAUNCHED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILaunchStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TERMINATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILaunchStatus::TERMINATED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILaunchStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILaunchStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILaunchStatus::PENDING:
            val = "PENDING";
            break;
        case eOAILaunchStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAILaunchStatus::LAUNCHED:
            val = "LAUNCHED";
            break;
        case eOAILaunchStatus::FAILED:
            val = "FAILED";
            break;
        case eOAILaunchStatus::TERMINATED:
            val = "TERMINATED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILaunchStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILaunchStatus::eOAILaunchStatus OAILaunchStatus::getValue() const {
    return m_value;
}

void OAILaunchStatus::setValue(const OAILaunchStatus::eOAILaunchStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILaunchStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAILaunchStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
