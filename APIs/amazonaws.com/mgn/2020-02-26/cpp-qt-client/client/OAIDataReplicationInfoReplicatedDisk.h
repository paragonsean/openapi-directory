/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataReplicationInfoReplicatedDisk.h
 *
 * Request to query disks replicated.
 */

#ifndef OAIDataReplicationInfoReplicatedDisk_H
#define OAIDataReplicationInfoReplicatedDisk_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataReplicationInfoReplicatedDisk : public OAIObject {
public:
    OAIDataReplicationInfoReplicatedDisk();
    OAIDataReplicationInfoReplicatedDisk(QString json);
    ~OAIDataReplicationInfoReplicatedDisk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBackloggedStorageBytes() const;
    void setBackloggedStorageBytes(const qint32 &backlogged_storage_bytes);
    bool is_backlogged_storage_bytes_Set() const;
    bool is_backlogged_storage_bytes_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    qint32 getReplicatedStorageBytes() const;
    void setReplicatedStorageBytes(const qint32 &replicated_storage_bytes);
    bool is_replicated_storage_bytes_Set() const;
    bool is_replicated_storage_bytes_Valid() const;

    qint32 getRescannedStorageBytes() const;
    void setRescannedStorageBytes(const qint32 &rescanned_storage_bytes);
    bool is_rescanned_storage_bytes_Set() const;
    bool is_rescanned_storage_bytes_Valid() const;

    qint32 getTotalStorageBytes() const;
    void setTotalStorageBytes(const qint32 &total_storage_bytes);
    bool is_total_storage_bytes_Set() const;
    bool is_total_storage_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_backlogged_storage_bytes;
    bool m_backlogged_storage_bytes_isSet;
    bool m_backlogged_storage_bytes_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    qint32 m_replicated_storage_bytes;
    bool m_replicated_storage_bytes_isSet;
    bool m_replicated_storage_bytes_isValid;

    qint32 m_rescanned_storage_bytes;
    bool m_rescanned_storage_bytes_isSet;
    bool m_rescanned_storage_bytes_isValid;

    qint32 m_total_storage_bytes;
    bool m_total_storage_bytes_isSet;
    bool m_total_storage_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataReplicationInfoReplicatedDisk)

#endif // OAIDataReplicationInfoReplicatedDisk_H
