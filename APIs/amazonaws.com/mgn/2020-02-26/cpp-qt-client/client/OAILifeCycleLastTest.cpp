/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILifeCycleLastTest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILifeCycleLastTest::OAILifeCycleLastTest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILifeCycleLastTest::OAILifeCycleLastTest() {
    this->initializeModel();
}

OAILifeCycleLastTest::~OAILifeCycleLastTest() {}

void OAILifeCycleLastTest::initializeModel() {

    m_finalized_isSet = false;
    m_finalized_isValid = false;

    m_initiated_isSet = false;
    m_initiated_isValid = false;

    m_reverted_isSet = false;
    m_reverted_isValid = false;
}

void OAILifeCycleLastTest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILifeCycleLastTest::fromJsonObject(QJsonObject json) {

    m_finalized_isValid = ::OpenAPI::fromJsonValue(m_finalized, json[QString("finalized")]);
    m_finalized_isSet = !json[QString("finalized")].isNull() && m_finalized_isValid;

    m_initiated_isValid = ::OpenAPI::fromJsonValue(m_initiated, json[QString("initiated")]);
    m_initiated_isSet = !json[QString("initiated")].isNull() && m_initiated_isValid;

    m_reverted_isValid = ::OpenAPI::fromJsonValue(m_reverted, json[QString("reverted")]);
    m_reverted_isSet = !json[QString("reverted")].isNull() && m_reverted_isValid;
}

QString OAILifeCycleLastTest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILifeCycleLastTest::asJsonObject() const {
    QJsonObject obj;
    if (m_finalized.isSet()) {
        obj.insert(QString("finalized"), ::OpenAPI::toJsonValue(m_finalized));
    }
    if (m_initiated.isSet()) {
        obj.insert(QString("initiated"), ::OpenAPI::toJsonValue(m_initiated));
    }
    if (m_reverted.isSet()) {
        obj.insert(QString("reverted"), ::OpenAPI::toJsonValue(m_reverted));
    }
    return obj;
}

OAILifeCycleLastTest_finalized OAILifeCycleLastTest::getFinalized() const {
    return m_finalized;
}
void OAILifeCycleLastTest::setFinalized(const OAILifeCycleLastTest_finalized &finalized) {
    m_finalized = finalized;
    m_finalized_isSet = true;
}

bool OAILifeCycleLastTest::is_finalized_Set() const{
    return m_finalized_isSet;
}

bool OAILifeCycleLastTest::is_finalized_Valid() const{
    return m_finalized_isValid;
}

OAILifeCycleLastTest_initiated OAILifeCycleLastTest::getInitiated() const {
    return m_initiated;
}
void OAILifeCycleLastTest::setInitiated(const OAILifeCycleLastTest_initiated &initiated) {
    m_initiated = initiated;
    m_initiated_isSet = true;
}

bool OAILifeCycleLastTest::is_initiated_Set() const{
    return m_initiated_isSet;
}

bool OAILifeCycleLastTest::is_initiated_Valid() const{
    return m_initiated_isValid;
}

OAILifeCycleLastTest_reverted OAILifeCycleLastTest::getReverted() const {
    return m_reverted;
}
void OAILifeCycleLastTest::setReverted(const OAILifeCycleLastTest_reverted &reverted) {
    m_reverted = reverted;
    m_reverted_isSet = true;
}

bool OAILifeCycleLastTest::is_reverted_Set() const{
    return m_reverted_isSet;
}

bool OAILifeCycleLastTest::is_reverted_Valid() const{
    return m_reverted_isValid;
}

bool OAILifeCycleLastTest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_finalized.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiated.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reverted.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILifeCycleLastTest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
