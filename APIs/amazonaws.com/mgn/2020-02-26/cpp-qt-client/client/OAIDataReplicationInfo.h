/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataReplicationInfo.h
 *
 * Request data replication info.
 */

#ifndef OAIDataReplicationInfo_H
#define OAIDataReplicationInfo_H

#include <QJsonObject>

#include "OAIDataReplicationInfo_dataReplicationError.h"
#include "OAIDataReplicationInfo_dataReplicationInitiation.h"
#include "OAIDataReplicationState.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataReplicationInfo_dataReplicationError;
class OAIDataReplicationInfo_dataReplicationInitiation;

class OAIDataReplicationInfo : public OAIObject {
public:
    OAIDataReplicationInfo();
    OAIDataReplicationInfo(QString json);
    ~OAIDataReplicationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataReplicationInfo_dataReplicationError getDataReplicationError() const;
    void setDataReplicationError(const OAIDataReplicationInfo_dataReplicationError &data_replication_error);
    bool is_data_replication_error_Set() const;
    bool is_data_replication_error_Valid() const;

    OAIDataReplicationInfo_dataReplicationInitiation getDataReplicationInitiation() const;
    void setDataReplicationInitiation(const OAIDataReplicationInfo_dataReplicationInitiation &data_replication_initiation);
    bool is_data_replication_initiation_Set() const;
    bool is_data_replication_initiation_Valid() const;

    OAIDataReplicationState getDataReplicationState() const;
    void setDataReplicationState(const OAIDataReplicationState &data_replication_state);
    bool is_data_replication_state_Set() const;
    bool is_data_replication_state_Valid() const;

    QString getEtaDateTime() const;
    void setEtaDateTime(const QString &eta_date_time);
    bool is_eta_date_time_Set() const;
    bool is_eta_date_time_Valid() const;

    QString getLagDuration() const;
    void setLagDuration(const QString &lag_duration);
    bool is_lag_duration_Set() const;
    bool is_lag_duration_Valid() const;

    QString getLastSnapshotDateTime() const;
    void setLastSnapshotDateTime(const QString &last_snapshot_date_time);
    bool is_last_snapshot_date_time_Set() const;
    bool is_last_snapshot_date_time_Valid() const;

    QList getReplicatedDisks() const;
    void setReplicatedDisks(const QList &replicated_disks);
    bool is_replicated_disks_Set() const;
    bool is_replicated_disks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataReplicationInfo_dataReplicationError m_data_replication_error;
    bool m_data_replication_error_isSet;
    bool m_data_replication_error_isValid;

    OAIDataReplicationInfo_dataReplicationInitiation m_data_replication_initiation;
    bool m_data_replication_initiation_isSet;
    bool m_data_replication_initiation_isValid;

    OAIDataReplicationState m_data_replication_state;
    bool m_data_replication_state_isSet;
    bool m_data_replication_state_isValid;

    QString m_eta_date_time;
    bool m_eta_date_time_isSet;
    bool m_eta_date_time_isValid;

    QString m_lag_duration;
    bool m_lag_duration_isSet;
    bool m_lag_duration_isValid;

    QString m_last_snapshot_date_time;
    bool m_last_snapshot_date_time_isSet;
    bool m_last_snapshot_date_time_isValid;

    QList m_replicated_disks;
    bool m_replicated_disks_isSet;
    bool m_replicated_disks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataReplicationInfo)

#endif // OAIDataReplicationInfo_H
