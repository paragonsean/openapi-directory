/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeSourceServers_request.h
 *
 * 
 */

#ifndef OAIDescribeSourceServers_request_H
#define OAIDescribeSourceServers_request_H

#include <QJsonObject>

#include "OAIDescribeSourceServers_request_filters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeSourceServers_request_filters;

class OAIDescribeSourceServers_request : public OAIObject {
public:
    OAIDescribeSourceServers_request();
    OAIDescribeSourceServers_request(QString json);
    ~OAIDescribeSourceServers_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIDescribeSourceServers_request_filters getFilters() const;
    void setFilters(const OAIDescribeSourceServers_request_filters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIDescribeSourceServers_request_filters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeSourceServers_request)

#endif // OAIDescribeSourceServers_request_H
