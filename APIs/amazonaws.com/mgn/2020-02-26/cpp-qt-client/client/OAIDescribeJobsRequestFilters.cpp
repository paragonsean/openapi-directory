/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeJobsRequestFilters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeJobsRequestFilters::OAIDescribeJobsRequestFilters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeJobsRequestFilters::OAIDescribeJobsRequestFilters() {
    this->initializeModel();
}

OAIDescribeJobsRequestFilters::~OAIDescribeJobsRequestFilters() {}

void OAIDescribeJobsRequestFilters::initializeModel() {

    m_from_date_isSet = false;
    m_from_date_isValid = false;

    m_job_ids_isSet = false;
    m_job_ids_isValid = false;

    m_to_date_isSet = false;
    m_to_date_isValid = false;
}

void OAIDescribeJobsRequestFilters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeJobsRequestFilters::fromJsonObject(QJsonObject json) {

    m_from_date_isValid = ::OpenAPI::fromJsonValue(m_from_date, json[QString("fromDate")]);
    m_from_date_isSet = !json[QString("fromDate")].isNull() && m_from_date_isValid;

    m_job_ids_isValid = ::OpenAPI::fromJsonValue(m_job_ids, json[QString("jobIDs")]);
    m_job_ids_isSet = !json[QString("jobIDs")].isNull() && m_job_ids_isValid;

    m_to_date_isValid = ::OpenAPI::fromJsonValue(m_to_date, json[QString("toDate")]);
    m_to_date_isSet = !json[QString("toDate")].isNull() && m_to_date_isValid;
}

QString OAIDescribeJobsRequestFilters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeJobsRequestFilters::asJsonObject() const {
    QJsonObject obj;
    if (m_from_date_isSet) {
        obj.insert(QString("fromDate"), ::OpenAPI::toJsonValue(m_from_date));
    }
    if (m_job_ids.isSet()) {
        obj.insert(QString("jobIDs"), ::OpenAPI::toJsonValue(m_job_ids));
    }
    if (m_to_date_isSet) {
        obj.insert(QString("toDate"), ::OpenAPI::toJsonValue(m_to_date));
    }
    return obj;
}

QString OAIDescribeJobsRequestFilters::getFromDate() const {
    return m_from_date;
}
void OAIDescribeJobsRequestFilters::setFromDate(const QString &from_date) {
    m_from_date = from_date;
    m_from_date_isSet = true;
}

bool OAIDescribeJobsRequestFilters::is_from_date_Set() const{
    return m_from_date_isSet;
}

bool OAIDescribeJobsRequestFilters::is_from_date_Valid() const{
    return m_from_date_isValid;
}

QList OAIDescribeJobsRequestFilters::getJobIds() const {
    return m_job_ids;
}
void OAIDescribeJobsRequestFilters::setJobIds(const QList &job_ids) {
    m_job_ids = job_ids;
    m_job_ids_isSet = true;
}

bool OAIDescribeJobsRequestFilters::is_job_ids_Set() const{
    return m_job_ids_isSet;
}

bool OAIDescribeJobsRequestFilters::is_job_ids_Valid() const{
    return m_job_ids_isValid;
}

QString OAIDescribeJobsRequestFilters::getToDate() const {
    return m_to_date;
}
void OAIDescribeJobsRequestFilters::setToDate(const QString &to_date) {
    m_to_date = to_date;
    m_to_date_isSet = true;
}

bool OAIDescribeJobsRequestFilters::is_to_date_Set() const{
    return m_to_date_isSet;
}

bool OAIDescribeJobsRequestFilters::is_to_date_Valid() const{
    return m_to_date_isValid;
}

bool OAIDescribeJobsRequestFilters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeJobsRequestFilters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
