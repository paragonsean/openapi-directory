/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateLaunchConfigurationTemplate_request_licensing.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateLaunchConfigurationTemplate_request_licensing::OAICreateLaunchConfigurationTemplate_request_licensing(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateLaunchConfigurationTemplate_request_licensing::OAICreateLaunchConfigurationTemplate_request_licensing() {
    this->initializeModel();
}

OAICreateLaunchConfigurationTemplate_request_licensing::~OAICreateLaunchConfigurationTemplate_request_licensing() {}

void OAICreateLaunchConfigurationTemplate_request_licensing::initializeModel() {

    m_os_byol_isSet = false;
    m_os_byol_isValid = false;
}

void OAICreateLaunchConfigurationTemplate_request_licensing::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateLaunchConfigurationTemplate_request_licensing::fromJsonObject(QJsonObject json) {

    m_os_byol_isValid = ::OpenAPI::fromJsonValue(m_os_byol, json[QString("osByol")]);
    m_os_byol_isSet = !json[QString("osByol")].isNull() && m_os_byol_isValid;
}

QString OAICreateLaunchConfigurationTemplate_request_licensing::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateLaunchConfigurationTemplate_request_licensing::asJsonObject() const {
    QJsonObject obj;
    if (m_os_byol_isSet) {
        obj.insert(QString("osByol"), ::OpenAPI::toJsonValue(m_os_byol));
    }
    return obj;
}

bool OAICreateLaunchConfigurationTemplate_request_licensing::getOsByol() const {
    return m_os_byol;
}
void OAICreateLaunchConfigurationTemplate_request_licensing::setOsByol(const bool &os_byol) {
    m_os_byol = os_byol;
    m_os_byol_isSet = true;
}

bool OAICreateLaunchConfigurationTemplate_request_licensing::is_os_byol_Set() const{
    return m_os_byol_isSet;
}

bool OAICreateLaunchConfigurationTemplate_request_licensing::is_os_byol_Valid() const{
    return m_os_byol_isValid;
}

bool OAICreateLaunchConfigurationTemplate_request_licensing::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_os_byol_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateLaunchConfigurationTemplate_request_licensing::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
