/**
 * Application Migration Service
 * The Application Migration Service service.
 *
 * The version of the OpenAPI document: 2020-02-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTemplateActionsRequest_filters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTemplateActionsRequest_filters::OAIListTemplateActionsRequest_filters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTemplateActionsRequest_filters::OAIListTemplateActionsRequest_filters() {
    this->initializeModel();
}

OAIListTemplateActionsRequest_filters::~OAIListTemplateActionsRequest_filters() {}

void OAIListTemplateActionsRequest_filters::initializeModel() {

    m_action_ids_isSet = false;
    m_action_ids_isValid = false;
}

void OAIListTemplateActionsRequest_filters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTemplateActionsRequest_filters::fromJsonObject(QJsonObject json) {

    m_action_ids_isValid = ::OpenAPI::fromJsonValue(m_action_ids, json[QString("actionIDs")]);
    m_action_ids_isSet = !json[QString("actionIDs")].isNull() && m_action_ids_isValid;
}

QString OAIListTemplateActionsRequest_filters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTemplateActionsRequest_filters::asJsonObject() const {
    QJsonObject obj;
    if (m_action_ids.isSet()) {
        obj.insert(QString("actionIDs"), ::OpenAPI::toJsonValue(m_action_ids));
    }
    return obj;
}

QList OAIListTemplateActionsRequest_filters::getActionIds() const {
    return m_action_ids;
}
void OAIListTemplateActionsRequest_filters::setActionIds(const QList &action_ids) {
    m_action_ids = action_ids;
    m_action_ids_isSet = true;
}

bool OAIListTemplateActionsRequest_filters::is_action_ids_Set() const{
    return m_action_ids_isSet;
}

bool OAIListTemplateActionsRequest_filters::is_action_ids_Valid() const{
    return m_action_ids_isValid;
}

bool OAIListTemplateActionsRequest_filters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTemplateActionsRequest_filters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
