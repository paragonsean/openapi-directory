/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetLexiconOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetLexiconOutput::OAIGetLexiconOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetLexiconOutput::OAIGetLexiconOutput() {
    this->initializeModel();
}

OAIGetLexiconOutput::~OAIGetLexiconOutput() {}

void OAIGetLexiconOutput::initializeModel() {

    m_lexicon_isSet = false;
    m_lexicon_isValid = false;

    m_lexicon_attributes_isSet = false;
    m_lexicon_attributes_isValid = false;
}

void OAIGetLexiconOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetLexiconOutput::fromJsonObject(QJsonObject json) {

    m_lexicon_isValid = ::OpenAPI::fromJsonValue(m_lexicon, json[QString("Lexicon")]);
    m_lexicon_isSet = !json[QString("Lexicon")].isNull() && m_lexicon_isValid;

    m_lexicon_attributes_isValid = ::OpenAPI::fromJsonValue(m_lexicon_attributes, json[QString("LexiconAttributes")]);
    m_lexicon_attributes_isSet = !json[QString("LexiconAttributes")].isNull() && m_lexicon_attributes_isValid;
}

QString OAIGetLexiconOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetLexiconOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_lexicon.isSet()) {
        obj.insert(QString("Lexicon"), ::OpenAPI::toJsonValue(m_lexicon));
    }
    if (m_lexicon_attributes.isSet()) {
        obj.insert(QString("LexiconAttributes"), ::OpenAPI::toJsonValue(m_lexicon_attributes));
    }
    return obj;
}

OAIGetLexiconOutput_Lexicon OAIGetLexiconOutput::getLexicon() const {
    return m_lexicon;
}
void OAIGetLexiconOutput::setLexicon(const OAIGetLexiconOutput_Lexicon &lexicon) {
    m_lexicon = lexicon;
    m_lexicon_isSet = true;
}

bool OAIGetLexiconOutput::is_lexicon_Set() const{
    return m_lexicon_isSet;
}

bool OAIGetLexiconOutput::is_lexicon_Valid() const{
    return m_lexicon_isValid;
}

OAIGetLexiconOutput_LexiconAttributes OAIGetLexiconOutput::getLexiconAttributes() const {
    return m_lexicon_attributes;
}
void OAIGetLexiconOutput::setLexiconAttributes(const OAIGetLexiconOutput_LexiconAttributes &lexicon_attributes) {
    m_lexicon_attributes = lexicon_attributes;
    m_lexicon_attributes_isSet = true;
}

bool OAIGetLexiconOutput::is_lexicon_attributes_Set() const{
    return m_lexicon_attributes_isSet;
}

bool OAIGetLexiconOutput::is_lexicon_attributes_Valid() const{
    return m_lexicon_attributes_isValid;
}

bool OAIGetLexiconOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lexicon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lexicon_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetLexiconOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
