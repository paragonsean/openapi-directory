/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILexiconDescription_Attributes.h
 *
 * 
 */

#ifndef OAILexiconDescription_Attributes_H
#define OAILexiconDescription_Attributes_H

#include <QJsonObject>

#include "OAILanguageCode.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILexiconDescription_Attributes : public OAIObject {
public:
    OAILexiconDescription_Attributes();
    OAILexiconDescription_Attributes(QString json);
    ~OAILexiconDescription_Attributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlphabet() const;
    void setAlphabet(const QString &alphabet);
    bool is_alphabet_Set() const;
    bool is_alphabet_Valid() const;

    OAILanguageCode getLanguageCode() const;
    void setLanguageCode(const OAILanguageCode &language_code);
    bool is_language_code_Set() const;
    bool is_language_code_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getLexiconArn() const;
    void setLexiconArn(const QString &lexicon_arn);
    bool is_lexicon_arn_Set() const;
    bool is_lexicon_arn_Valid() const;

    qint32 getLexemesCount() const;
    void setLexemesCount(const qint32 &lexemes_count);
    bool is_lexemes_count_Set() const;
    bool is_lexemes_count_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alphabet;
    bool m_alphabet_isSet;
    bool m_alphabet_isValid;

    OAILanguageCode m_language_code;
    bool m_language_code_isSet;
    bool m_language_code_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_lexicon_arn;
    bool m_lexicon_arn_isSet;
    bool m_lexicon_arn_isValid;

    qint32 m_lexemes_count;
    bool m_lexemes_count_isSet;
    bool m_lexemes_count_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILexiconDescription_Attributes)

#endif // OAILexiconDescription_Attributes_H
