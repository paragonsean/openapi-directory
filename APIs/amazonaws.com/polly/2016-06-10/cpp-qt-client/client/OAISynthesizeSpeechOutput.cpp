/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISynthesizeSpeechOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISynthesizeSpeechOutput::OAISynthesizeSpeechOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISynthesizeSpeechOutput::OAISynthesizeSpeechOutput() {
    this->initializeModel();
}

OAISynthesizeSpeechOutput::~OAISynthesizeSpeechOutput() {}

void OAISynthesizeSpeechOutput::initializeModel() {

    m_audio_stream_isSet = false;
    m_audio_stream_isValid = false;
}

void OAISynthesizeSpeechOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISynthesizeSpeechOutput::fromJsonObject(QJsonObject json) {

    m_audio_stream_isValid = ::OpenAPI::fromJsonValue(m_audio_stream, json[QString("AudioStream")]);
    m_audio_stream_isSet = !json[QString("AudioStream")].isNull() && m_audio_stream_isValid;
}

QString OAISynthesizeSpeechOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISynthesizeSpeechOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_stream_isSet) {
        obj.insert(QString("AudioStream"), ::OpenAPI::toJsonValue(m_audio_stream));
    }
    return obj;
}

QString OAISynthesizeSpeechOutput::getAudioStream() const {
    return m_audio_stream;
}
void OAISynthesizeSpeechOutput::setAudioStream(const QString &audio_stream) {
    m_audio_stream = audio_stream;
    m_audio_stream_isSet = true;
}

bool OAISynthesizeSpeechOutput::is_audio_stream_Set() const{
    return m_audio_stream_isSet;
}

bool OAISynthesizeSpeechOutput::is_audio_stream_Valid() const{
    return m_audio_stream_isValid;
}

bool OAISynthesizeSpeechOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_stream_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISynthesizeSpeechOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
