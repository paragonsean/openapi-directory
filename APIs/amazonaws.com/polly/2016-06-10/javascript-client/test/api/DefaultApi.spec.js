/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonPolly);
  }
}(this, function(expect, AmazonPolly) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonPolly.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('deleteLexicon', function() {
      it('should call deleteLexicon successfully', function(done) {
        //uncomment below and update the code to test deleteLexicon
        //instance.deleteLexicon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeVoices', function() {
      it('should call describeVoices successfully', function(done) {
        //uncomment below and update the code to test describeVoices
        //instance.describeVoices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLexicon', function() {
      it('should call getLexicon successfully', function(done) {
        //uncomment below and update the code to test getLexicon
        //instance.getLexicon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpeechSynthesisTask', function() {
      it('should call getSpeechSynthesisTask successfully', function(done) {
        //uncomment below and update the code to test getSpeechSynthesisTask
        //instance.getSpeechSynthesisTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLexicons', function() {
      it('should call listLexicons successfully', function(done) {
        //uncomment below and update the code to test listLexicons
        //instance.listLexicons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSpeechSynthesisTasks', function() {
      it('should call listSpeechSynthesisTasks successfully', function(done) {
        //uncomment below and update the code to test listSpeechSynthesisTasks
        //instance.listSpeechSynthesisTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLexicon', function() {
      it('should call putLexicon successfully', function(done) {
        //uncomment below and update the code to test putLexicon
        //instance.putLexicon(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startSpeechSynthesisTask', function() {
      it('should call startSpeechSynthesisTask successfully', function(done) {
        //uncomment below and update the code to test startSpeechSynthesisTask
        //instance.startSpeechSynthesisTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('synthesizeSpeech', function() {
      it('should call synthesizeSpeech successfully', function(done) {
        //uncomment below and update the code to test synthesizeSpeech
        //instance.synthesizeSpeech(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
