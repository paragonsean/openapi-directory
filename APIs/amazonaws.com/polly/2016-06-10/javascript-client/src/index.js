/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DescribeVoicesOutput from './model/DescribeVoicesOutput';
import Engine from './model/Engine';
import Gender from './model/Gender';
import GetLexiconOutput from './model/GetLexiconOutput';
import GetLexiconOutputLexicon from './model/GetLexiconOutputLexicon';
import GetLexiconOutputLexiconAttributes from './model/GetLexiconOutputLexiconAttributes';
import GetSpeechSynthesisTaskOutput from './model/GetSpeechSynthesisTaskOutput';
import GetSpeechSynthesisTaskOutputSynthesisTask from './model/GetSpeechSynthesisTaskOutputSynthesisTask';
import LanguageCode from './model/LanguageCode';
import Lexicon from './model/Lexicon';
import LexiconAttributes from './model/LexiconAttributes';
import LexiconDescription from './model/LexiconDescription';
import LexiconDescriptionAttributes from './model/LexiconDescriptionAttributes';
import ListLexiconsOutput from './model/ListLexiconsOutput';
import ListSpeechSynthesisTasksOutput from './model/ListSpeechSynthesisTasksOutput';
import OutputFormat from './model/OutputFormat';
import PutLexiconInput from './model/PutLexiconInput';
import PutLexiconRequest from './model/PutLexiconRequest';
import SpeechMarkType from './model/SpeechMarkType';
import StartSpeechSynthesisTaskInput from './model/StartSpeechSynthesisTaskInput';
import StartSpeechSynthesisTaskOutput from './model/StartSpeechSynthesisTaskOutput';
import StartSpeechSynthesisTaskOutputSynthesisTask from './model/StartSpeechSynthesisTaskOutputSynthesisTask';
import StartSpeechSynthesisTaskRequest from './model/StartSpeechSynthesisTaskRequest';
import SynthesisTask from './model/SynthesisTask';
import SynthesizeSpeechInput from './model/SynthesizeSpeechInput';
import SynthesizeSpeechOutput from './model/SynthesizeSpeechOutput';
import SynthesizeSpeechRequest from './model/SynthesizeSpeechRequest';
import TaskStatus from './model/TaskStatus';
import TextType from './model/TextType';
import Voice from './model/Voice';
import VoiceId from './model/VoiceId';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;Amazon Polly is a web service that makes it easy to synthesize speech from text.&lt;/p&gt; &lt;p&gt;The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonPolly = require('index'); // See note below*.
* var xxxSvc = new AmazonPolly.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonPolly.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonPolly.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonPolly.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-06-10
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DescribeVoicesOutput model constructor.
     * @property {module:model/DescribeVoicesOutput}
     */
    DescribeVoicesOutput,

    /**
     * The Engine model constructor.
     * @property {module:model/Engine}
     */
    Engine,

    /**
     * The Gender model constructor.
     * @property {module:model/Gender}
     */
    Gender,

    /**
     * The GetLexiconOutput model constructor.
     * @property {module:model/GetLexiconOutput}
     */
    GetLexiconOutput,

    /**
     * The GetLexiconOutputLexicon model constructor.
     * @property {module:model/GetLexiconOutputLexicon}
     */
    GetLexiconOutputLexicon,

    /**
     * The GetLexiconOutputLexiconAttributes model constructor.
     * @property {module:model/GetLexiconOutputLexiconAttributes}
     */
    GetLexiconOutputLexiconAttributes,

    /**
     * The GetSpeechSynthesisTaskOutput model constructor.
     * @property {module:model/GetSpeechSynthesisTaskOutput}
     */
    GetSpeechSynthesisTaskOutput,

    /**
     * The GetSpeechSynthesisTaskOutputSynthesisTask model constructor.
     * @property {module:model/GetSpeechSynthesisTaskOutputSynthesisTask}
     */
    GetSpeechSynthesisTaskOutputSynthesisTask,

    /**
     * The LanguageCode model constructor.
     * @property {module:model/LanguageCode}
     */
    LanguageCode,

    /**
     * The Lexicon model constructor.
     * @property {module:model/Lexicon}
     */
    Lexicon,

    /**
     * The LexiconAttributes model constructor.
     * @property {module:model/LexiconAttributes}
     */
    LexiconAttributes,

    /**
     * The LexiconDescription model constructor.
     * @property {module:model/LexiconDescription}
     */
    LexiconDescription,

    /**
     * The LexiconDescriptionAttributes model constructor.
     * @property {module:model/LexiconDescriptionAttributes}
     */
    LexiconDescriptionAttributes,

    /**
     * The ListLexiconsOutput model constructor.
     * @property {module:model/ListLexiconsOutput}
     */
    ListLexiconsOutput,

    /**
     * The ListSpeechSynthesisTasksOutput model constructor.
     * @property {module:model/ListSpeechSynthesisTasksOutput}
     */
    ListSpeechSynthesisTasksOutput,

    /**
     * The OutputFormat model constructor.
     * @property {module:model/OutputFormat}
     */
    OutputFormat,

    /**
     * The PutLexiconInput model constructor.
     * @property {module:model/PutLexiconInput}
     */
    PutLexiconInput,

    /**
     * The PutLexiconRequest model constructor.
     * @property {module:model/PutLexiconRequest}
     */
    PutLexiconRequest,

    /**
     * The SpeechMarkType model constructor.
     * @property {module:model/SpeechMarkType}
     */
    SpeechMarkType,

    /**
     * The StartSpeechSynthesisTaskInput model constructor.
     * @property {module:model/StartSpeechSynthesisTaskInput}
     */
    StartSpeechSynthesisTaskInput,

    /**
     * The StartSpeechSynthesisTaskOutput model constructor.
     * @property {module:model/StartSpeechSynthesisTaskOutput}
     */
    StartSpeechSynthesisTaskOutput,

    /**
     * The StartSpeechSynthesisTaskOutputSynthesisTask model constructor.
     * @property {module:model/StartSpeechSynthesisTaskOutputSynthesisTask}
     */
    StartSpeechSynthesisTaskOutputSynthesisTask,

    /**
     * The StartSpeechSynthesisTaskRequest model constructor.
     * @property {module:model/StartSpeechSynthesisTaskRequest}
     */
    StartSpeechSynthesisTaskRequest,

    /**
     * The SynthesisTask model constructor.
     * @property {module:model/SynthesisTask}
     */
    SynthesisTask,

    /**
     * The SynthesizeSpeechInput model constructor.
     * @property {module:model/SynthesizeSpeechInput}
     */
    SynthesizeSpeechInput,

    /**
     * The SynthesizeSpeechOutput model constructor.
     * @property {module:model/SynthesizeSpeechOutput}
     */
    SynthesizeSpeechOutput,

    /**
     * The SynthesizeSpeechRequest model constructor.
     * @property {module:model/SynthesizeSpeechRequest}
     */
    SynthesizeSpeechRequest,

    /**
     * The TaskStatus model constructor.
     * @property {module:model/TaskStatus}
     */
    TaskStatus,

    /**
     * The TextType model constructor.
     * @property {module:model/TextType}
     */
    TextType,

    /**
     * The Voice model constructor.
     * @property {module:model/Voice}
     */
    Voice,

    /**
     * The VoiceId model constructor.
     * @property {module:model/VoiceId}
     */
    VoiceId,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
