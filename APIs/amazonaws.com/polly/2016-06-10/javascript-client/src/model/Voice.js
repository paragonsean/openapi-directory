/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Gender from './Gender';
import LanguageCode from './LanguageCode';
import VoiceId from './VoiceId';

/**
 * The Voice model module.
 * @module model/Voice
 * @version 2016-06-10
 */
class Voice {
    /**
     * Constructs a new <code>Voice</code>.
     * Description of the voice.
     * @alias module:model/Voice
     */
    constructor() { 
        
        Voice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Voice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Voice} obj Optional instance to populate.
     * @return {module:model/Voice} The populated <code>Voice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Voice();

            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], Gender);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], VoiceId);
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], LanguageCode);
            }
            if (data.hasOwnProperty('LanguageName')) {
                obj['LanguageName'] = ApiClient.convertToType(data['LanguageName'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('AdditionalLanguageCodes')) {
                obj['AdditionalLanguageCodes'] = ApiClient.convertToType(data['AdditionalLanguageCodes'], Array);
            }
            if (data.hasOwnProperty('SupportedEngines')) {
                obj['SupportedEngines'] = ApiClient.convertToType(data['SupportedEngines'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Voice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Voice</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Gender`
        if (data['Gender']) { // data not null
          Gender.validateJSON(data['Gender']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          VoiceId.validateJSON(data['Id']);
        }
        // validate the optional field `LanguageCode`
        if (data['LanguageCode']) { // data not null
          LanguageCode.validateJSON(data['LanguageCode']);
        }
        // validate the optional field `LanguageName`
        if (data['LanguageName']) { // data not null
          String.validateJSON(data['LanguageName']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `AdditionalLanguageCodes`
        if (data['AdditionalLanguageCodes']) { // data not null
          Array.validateJSON(data['AdditionalLanguageCodes']);
        }
        // validate the optional field `SupportedEngines`
        if (data['SupportedEngines']) { // data not null
          Array.validateJSON(data['SupportedEngines']);
        }

        return true;
    }


}



/**
 * @member {module:model/Gender} Gender
 */
Voice.prototype['Gender'] = undefined;

/**
 * @member {module:model/VoiceId} Id
 */
Voice.prototype['Id'] = undefined;

/**
 * @member {module:model/LanguageCode} LanguageCode
 */
Voice.prototype['LanguageCode'] = undefined;

/**
 * @member {String} LanguageName
 */
Voice.prototype['LanguageName'] = undefined;

/**
 * @member {String} Name
 */
Voice.prototype['Name'] = undefined;

/**
 * @member {Array} AdditionalLanguageCodes
 */
Voice.prototype['AdditionalLanguageCodes'] = undefined;

/**
 * @member {Array} SupportedEngines
 */
Voice.prototype['SupportedEngines'] = undefined;






export default Voice;

