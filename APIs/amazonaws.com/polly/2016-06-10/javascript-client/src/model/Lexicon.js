/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Lexicon model module.
 * @module model/Lexicon
 * @version 2016-06-10
 */
class Lexicon {
    /**
     * Constructs a new <code>Lexicon</code>.
     * Provides lexicon name and lexicon content in string format. For more information, see &lt;a href&#x3D;\&quot;https://www.w3.org/TR/pronunciation-lexicon/\&quot;&gt;Pronunciation Lexicon Specification (PLS) Version 1.0&lt;/a&gt;.
     * @alias module:model/Lexicon
     */
    constructor() { 
        
        Lexicon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Lexicon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Lexicon} obj Optional instance to populate.
     * @return {module:model/Lexicon} The populated <code>Lexicon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Lexicon();

            if (data.hasOwnProperty('Content')) {
                obj['Content'] = ApiClient.convertToType(data['Content'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Lexicon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Lexicon</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Content`
        if (data['Content']) { // data not null
          String.validateJSON(data['Content']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }

        return true;
    }


}



/**
 * @member {String} Content
 */
Lexicon.prototype['Content'] = undefined;

/**
 * @member {String} Name
 */
Lexicon.prototype['Name'] = undefined;






export default Lexicon;

