/**
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LanguageCode from './LanguageCode';
import LexiconAttributes from './LexiconAttributes';

/**
 * The LexiconDescriptionAttributes model module.
 * @module model/LexiconDescriptionAttributes
 * @version 2016-06-10
 */
class LexiconDescriptionAttributes {
    /**
     * Constructs a new <code>LexiconDescriptionAttributes</code>.
     * @alias module:model/LexiconDescriptionAttributes
     * @implements module:model/LexiconAttributes
     */
    constructor() { 
        LexiconAttributes.initialize(this);
        LexiconDescriptionAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LexiconDescriptionAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LexiconDescriptionAttributes} obj Optional instance to populate.
     * @return {module:model/LexiconDescriptionAttributes} The populated <code>LexiconDescriptionAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LexiconDescriptionAttributes();
            LexiconAttributes.constructFromObject(data, obj);

            if (data.hasOwnProperty('Alphabet')) {
                obj['Alphabet'] = ApiClient.convertToType(data['Alphabet'], 'String');
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], LanguageCode);
            }
            if (data.hasOwnProperty('LastModified')) {
                obj['LastModified'] = ApiClient.convertToType(data['LastModified'], 'Date');
            }
            if (data.hasOwnProperty('LexiconArn')) {
                obj['LexiconArn'] = ApiClient.convertToType(data['LexiconArn'], 'String');
            }
            if (data.hasOwnProperty('LexemesCount')) {
                obj['LexemesCount'] = ApiClient.convertToType(data['LexemesCount'], 'Number');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LexiconDescriptionAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LexiconDescriptionAttributes</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Alphabet`
        if (data['Alphabet']) { // data not null
          String.validateJSON(data['Alphabet']);
        }
        // validate the optional field `LanguageCode`
        if (data['LanguageCode']) { // data not null
          LanguageCode.validateJSON(data['LanguageCode']);
        }
        // validate the optional field `LastModified`
        if (data['LastModified']) { // data not null
          Date.validateJSON(data['LastModified']);
        }
        // validate the optional field `LexiconArn`
        if (data['LexiconArn']) { // data not null
          String.validateJSON(data['LexiconArn']);
        }
        // validate the optional field `LexemesCount`
        if (data['LexemesCount']) { // data not null
          Number.validateJSON(data['LexemesCount']);
        }
        // validate the optional field `Size`
        if (data['Size']) { // data not null
          Number.validateJSON(data['Size']);
        }

        return true;
    }


}



/**
 * @member {String} Alphabet
 */
LexiconDescriptionAttributes.prototype['Alphabet'] = undefined;

/**
 * @member {module:model/LanguageCode} LanguageCode
 */
LexiconDescriptionAttributes.prototype['LanguageCode'] = undefined;

/**
 * @member {Date} LastModified
 */
LexiconDescriptionAttributes.prototype['LastModified'] = undefined;

/**
 * @member {String} LexiconArn
 */
LexiconDescriptionAttributes.prototype['LexiconArn'] = undefined;

/**
 * @member {Number} LexemesCount
 */
LexiconDescriptionAttributes.prototype['LexemesCount'] = undefined;

/**
 * @member {Number} Size
 */
LexiconDescriptionAttributes.prototype['Size'] = undefined;


// Implement LexiconAttributes interface:
/**
 * @member {String} Alphabet
 */
LexiconAttributes.prototype['Alphabet'] = undefined;
/**
 * @member {module:model/LanguageCode} LanguageCode
 */
LexiconAttributes.prototype['LanguageCode'] = undefined;
/**
 * @member {Date} LastModified
 */
LexiconAttributes.prototype['LastModified'] = undefined;
/**
 * @member {String} LexiconArn
 */
LexiconAttributes.prototype['LexiconArn'] = undefined;
/**
 * @member {Number} LexemesCount
 */
LexiconAttributes.prototype['LexemesCount'] = undefined;
/**
 * @member {Number} Size
 */
LexiconAttributes.prototype['Size'] = undefined;




export default LexiconDescriptionAttributes;

