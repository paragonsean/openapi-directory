/*
 * Amazon Polly
 * <p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>
 *
 * The version of the OpenAPI document: 2016-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Engine;
import org.openapitools.client.model.LanguageCode;
import org.openapitools.client.model.OutputFormat;
import org.openapitools.client.model.TaskStatus;
import org.openapitools.client.model.TextType;
import org.openapitools.client.model.VoiceId;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetSpeechSynthesisTaskOutputSynthesisTask
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:49.167874-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSpeechSynthesisTaskOutputSynthesisTask {
  public static final String SERIALIZED_NAME_ENGINE = "Engine";
  @SerializedName(SERIALIZED_NAME_ENGINE)
  private Engine engine;

  public static final String SERIALIZED_NAME_TASK_ID = "TaskId";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private String taskId;

  public static final String SERIALIZED_NAME_TASK_STATUS = "TaskStatus";
  @SerializedName(SERIALIZED_NAME_TASK_STATUS)
  private TaskStatus taskStatus;

  public static final String SERIALIZED_NAME_TASK_STATUS_REASON = "TaskStatusReason";
  @SerializedName(SERIALIZED_NAME_TASK_STATUS_REASON)
  private String taskStatusReason;

  public static final String SERIALIZED_NAME_OUTPUT_URI = "OutputUri";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URI)
  private String outputUri;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_REQUEST_CHARACTERS = "RequestCharacters";
  @SerializedName(SERIALIZED_NAME_REQUEST_CHARACTERS)
  private Integer requestCharacters;

  public static final String SERIALIZED_NAME_SNS_TOPIC_ARN = "SnsTopicArn";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_ARN)
  private String snsTopicArn;

  public static final String SERIALIZED_NAME_LEXICON_NAMES = "LexiconNames";
  @SerializedName(SERIALIZED_NAME_LEXICON_NAMES)
  private List lexiconNames;

  public static final String SERIALIZED_NAME_OUTPUT_FORMAT = "OutputFormat";
  @SerializedName(SERIALIZED_NAME_OUTPUT_FORMAT)
  private OutputFormat outputFormat;

  public static final String SERIALIZED_NAME_SAMPLE_RATE = "SampleRate";
  @SerializedName(SERIALIZED_NAME_SAMPLE_RATE)
  private String sampleRate;

  public static final String SERIALIZED_NAME_SPEECH_MARK_TYPES = "SpeechMarkTypes";
  @SerializedName(SERIALIZED_NAME_SPEECH_MARK_TYPES)
  private List speechMarkTypes;

  public static final String SERIALIZED_NAME_TEXT_TYPE = "TextType";
  @SerializedName(SERIALIZED_NAME_TEXT_TYPE)
  private TextType textType;

  public static final String SERIALIZED_NAME_VOICE_ID = "VoiceId";
  @SerializedName(SERIALIZED_NAME_VOICE_ID)
  private VoiceId voiceId;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private LanguageCode languageCode;

  public GetSpeechSynthesisTaskOutputSynthesisTask() {
  }

  public GetSpeechSynthesisTaskOutputSynthesisTask engine(Engine engine) {
    this.engine = engine;
    return this;
  }

  /**
   * Get engine
   * @return engine
   */
  @javax.annotation.Nullable
  public Engine getEngine() {
    return engine;
  }

  public void setEngine(Engine engine) {
    this.engine = engine;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

  /**
   * Get taskId
   * @return taskId
   */
  @javax.annotation.Nullable
  public String getTaskId() {
    return taskId;
  }

  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask taskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

  /**
   * Get taskStatus
   * @return taskStatus
   */
  @javax.annotation.Nullable
  public TaskStatus getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask taskStatusReason(String taskStatusReason) {
    this.taskStatusReason = taskStatusReason;
    return this;
  }

  /**
   * Get taskStatusReason
   * @return taskStatusReason
   */
  @javax.annotation.Nullable
  public String getTaskStatusReason() {
    return taskStatusReason;
  }

  public void setTaskStatusReason(String taskStatusReason) {
    this.taskStatusReason = taskStatusReason;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask outputUri(String outputUri) {
    this.outputUri = outputUri;
    return this;
  }

  /**
   * Get outputUri
   * @return outputUri
   */
  @javax.annotation.Nullable
  public String getOutputUri() {
    return outputUri;
  }

  public void setOutputUri(String outputUri) {
    this.outputUri = outputUri;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask requestCharacters(Integer requestCharacters) {
    this.requestCharacters = requestCharacters;
    return this;
  }

  /**
   * Get requestCharacters
   * @return requestCharacters
   */
  @javax.annotation.Nullable
  public Integer getRequestCharacters() {
    return requestCharacters;
  }

  public void setRequestCharacters(Integer requestCharacters) {
    this.requestCharacters = requestCharacters;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask snsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
    return this;
  }

  /**
   * Get snsTopicArn
   * @return snsTopicArn
   */
  @javax.annotation.Nullable
  public String getSnsTopicArn() {
    return snsTopicArn;
  }

  public void setSnsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask lexiconNames(List lexiconNames) {
    this.lexiconNames = lexiconNames;
    return this;
  }

  /**
   * Get lexiconNames
   * @return lexiconNames
   */
  @javax.annotation.Nullable
  public List getLexiconNames() {
    return lexiconNames;
  }

  public void setLexiconNames(List lexiconNames) {
    this.lexiconNames = lexiconNames;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask outputFormat(OutputFormat outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

  /**
   * Get outputFormat
   * @return outputFormat
   */
  @javax.annotation.Nullable
  public OutputFormat getOutputFormat() {
    return outputFormat;
  }

  public void setOutputFormat(OutputFormat outputFormat) {
    this.outputFormat = outputFormat;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask sampleRate(String sampleRate) {
    this.sampleRate = sampleRate;
    return this;
  }

  /**
   * Get sampleRate
   * @return sampleRate
   */
  @javax.annotation.Nullable
  public String getSampleRate() {
    return sampleRate;
  }

  public void setSampleRate(String sampleRate) {
    this.sampleRate = sampleRate;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask speechMarkTypes(List speechMarkTypes) {
    this.speechMarkTypes = speechMarkTypes;
    return this;
  }

  /**
   * Get speechMarkTypes
   * @return speechMarkTypes
   */
  @javax.annotation.Nullable
  public List getSpeechMarkTypes() {
    return speechMarkTypes;
  }

  public void setSpeechMarkTypes(List speechMarkTypes) {
    this.speechMarkTypes = speechMarkTypes;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask textType(TextType textType) {
    this.textType = textType;
    return this;
  }

  /**
   * Get textType
   * @return textType
   */
  @javax.annotation.Nullable
  public TextType getTextType() {
    return textType;
  }

  public void setTextType(TextType textType) {
    this.textType = textType;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask voiceId(VoiceId voiceId) {
    this.voiceId = voiceId;
    return this;
  }

  /**
   * Get voiceId
   * @return voiceId
   */
  @javax.annotation.Nullable
  public VoiceId getVoiceId() {
    return voiceId;
  }

  public void setVoiceId(VoiceId voiceId) {
    this.voiceId = voiceId;
  }


  public GetSpeechSynthesisTaskOutputSynthesisTask languageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Get languageCode
   * @return languageCode
   */
  @javax.annotation.Nullable
  public LanguageCode getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(LanguageCode languageCode) {
    this.languageCode = languageCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSpeechSynthesisTaskOutputSynthesisTask getSpeechSynthesisTaskOutputSynthesisTask = (GetSpeechSynthesisTaskOutputSynthesisTask) o;
    return Objects.equals(this.engine, getSpeechSynthesisTaskOutputSynthesisTask.engine) &&
        Objects.equals(this.taskId, getSpeechSynthesisTaskOutputSynthesisTask.taskId) &&
        Objects.equals(this.taskStatus, getSpeechSynthesisTaskOutputSynthesisTask.taskStatus) &&
        Objects.equals(this.taskStatusReason, getSpeechSynthesisTaskOutputSynthesisTask.taskStatusReason) &&
        Objects.equals(this.outputUri, getSpeechSynthesisTaskOutputSynthesisTask.outputUri) &&
        Objects.equals(this.creationTime, getSpeechSynthesisTaskOutputSynthesisTask.creationTime) &&
        Objects.equals(this.requestCharacters, getSpeechSynthesisTaskOutputSynthesisTask.requestCharacters) &&
        Objects.equals(this.snsTopicArn, getSpeechSynthesisTaskOutputSynthesisTask.snsTopicArn) &&
        Objects.equals(this.lexiconNames, getSpeechSynthesisTaskOutputSynthesisTask.lexiconNames) &&
        Objects.equals(this.outputFormat, getSpeechSynthesisTaskOutputSynthesisTask.outputFormat) &&
        Objects.equals(this.sampleRate, getSpeechSynthesisTaskOutputSynthesisTask.sampleRate) &&
        Objects.equals(this.speechMarkTypes, getSpeechSynthesisTaskOutputSynthesisTask.speechMarkTypes) &&
        Objects.equals(this.textType, getSpeechSynthesisTaskOutputSynthesisTask.textType) &&
        Objects.equals(this.voiceId, getSpeechSynthesisTaskOutputSynthesisTask.voiceId) &&
        Objects.equals(this.languageCode, getSpeechSynthesisTaskOutputSynthesisTask.languageCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(engine, taskId, taskStatus, taskStatusReason, outputUri, creationTime, requestCharacters, snsTopicArn, lexiconNames, outputFormat, sampleRate, speechMarkTypes, textType, voiceId, languageCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSpeechSynthesisTaskOutputSynthesisTask {\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    taskStatusReason: ").append(toIndentedString(taskStatusReason)).append("\n");
    sb.append("    outputUri: ").append(toIndentedString(outputUri)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    requestCharacters: ").append(toIndentedString(requestCharacters)).append("\n");
    sb.append("    snsTopicArn: ").append(toIndentedString(snsTopicArn)).append("\n");
    sb.append("    lexiconNames: ").append(toIndentedString(lexiconNames)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("    sampleRate: ").append(toIndentedString(sampleRate)).append("\n");
    sb.append("    speechMarkTypes: ").append(toIndentedString(speechMarkTypes)).append("\n");
    sb.append("    textType: ").append(toIndentedString(textType)).append("\n");
    sb.append("    voiceId: ").append(toIndentedString(voiceId)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Engine");
    openapiFields.add("TaskId");
    openapiFields.add("TaskStatus");
    openapiFields.add("TaskStatusReason");
    openapiFields.add("OutputUri");
    openapiFields.add("CreationTime");
    openapiFields.add("RequestCharacters");
    openapiFields.add("SnsTopicArn");
    openapiFields.add("LexiconNames");
    openapiFields.add("OutputFormat");
    openapiFields.add("SampleRate");
    openapiFields.add("SpeechMarkTypes");
    openapiFields.add("TextType");
    openapiFields.add("VoiceId");
    openapiFields.add("LanguageCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSpeechSynthesisTaskOutputSynthesisTask
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSpeechSynthesisTaskOutputSynthesisTask.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSpeechSynthesisTaskOutputSynthesisTask is not found in the empty JSON string", GetSpeechSynthesisTaskOutputSynthesisTask.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSpeechSynthesisTaskOutputSynthesisTask.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSpeechSynthesisTaskOutputSynthesisTask` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Engine`
      if (jsonObj.get("Engine") != null && !jsonObj.get("Engine").isJsonNull()) {
        Engine.validateJsonElement(jsonObj.get("Engine"));
      }
      // validate the optional field `TaskId`
      if (jsonObj.get("TaskId") != null && !jsonObj.get("TaskId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskId"));
      }
      // validate the optional field `TaskStatus`
      if (jsonObj.get("TaskStatus") != null && !jsonObj.get("TaskStatus").isJsonNull()) {
        TaskStatus.validateJsonElement(jsonObj.get("TaskStatus"));
      }
      // validate the optional field `TaskStatusReason`
      if (jsonObj.get("TaskStatusReason") != null && !jsonObj.get("TaskStatusReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskStatusReason"));
      }
      // validate the optional field `OutputUri`
      if (jsonObj.get("OutputUri") != null && !jsonObj.get("OutputUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OutputUri"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `RequestCharacters`
      if (jsonObj.get("RequestCharacters") != null && !jsonObj.get("RequestCharacters").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RequestCharacters"));
      }
      // validate the optional field `SnsTopicArn`
      if (jsonObj.get("SnsTopicArn") != null && !jsonObj.get("SnsTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicArn"));
      }
      // validate the optional field `LexiconNames`
      if (jsonObj.get("LexiconNames") != null && !jsonObj.get("LexiconNames").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("LexiconNames"));
      }
      // validate the optional field `OutputFormat`
      if (jsonObj.get("OutputFormat") != null && !jsonObj.get("OutputFormat").isJsonNull()) {
        OutputFormat.validateJsonElement(jsonObj.get("OutputFormat"));
      }
      // validate the optional field `SampleRate`
      if (jsonObj.get("SampleRate") != null && !jsonObj.get("SampleRate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SampleRate"));
      }
      // validate the optional field `SpeechMarkTypes`
      if (jsonObj.get("SpeechMarkTypes") != null && !jsonObj.get("SpeechMarkTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SpeechMarkTypes"));
      }
      // validate the optional field `TextType`
      if (jsonObj.get("TextType") != null && !jsonObj.get("TextType").isJsonNull()) {
        TextType.validateJsonElement(jsonObj.get("TextType"));
      }
      // validate the optional field `VoiceId`
      if (jsonObj.get("VoiceId") != null && !jsonObj.get("VoiceId").isJsonNull()) {
        VoiceId.validateJsonElement(jsonObj.get("VoiceId"));
      }
      // validate the optional field `LanguageCode`
      if (jsonObj.get("LanguageCode") != null && !jsonObj.get("LanguageCode").isJsonNull()) {
        LanguageCode.validateJsonElement(jsonObj.get("LanguageCode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSpeechSynthesisTaskOutputSynthesisTask.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSpeechSynthesisTaskOutputSynthesisTask' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSpeechSynthesisTaskOutputSynthesisTask> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSpeechSynthesisTaskOutputSynthesisTask.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSpeechSynthesisTaskOutputSynthesisTask>() {
           @Override
           public void write(JsonWriter out, GetSpeechSynthesisTaskOutputSynthesisTask value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSpeechSynthesisTaskOutputSynthesisTask read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSpeechSynthesisTaskOutputSynthesisTask given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSpeechSynthesisTaskOutputSynthesisTask
   * @throws IOException if the JSON string is invalid with respect to GetSpeechSynthesisTaskOutputSynthesisTask
   */
  public static GetSpeechSynthesisTaskOutputSynthesisTask fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSpeechSynthesisTaskOutputSynthesisTask.class);
  }

  /**
   * Convert an instance of GetSpeechSynthesisTaskOutputSynthesisTask to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

