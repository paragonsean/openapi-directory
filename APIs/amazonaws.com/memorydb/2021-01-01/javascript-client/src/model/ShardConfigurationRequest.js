/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShardConfigurationRequest model module.
 * @module model/ShardConfigurationRequest
 * @version 2021-01-01
 */
class ShardConfigurationRequest {
    /**
     * Constructs a new <code>ShardConfigurationRequest</code>.
     * A request to configure the sharding properties of a cluster
     * @alias module:model/ShardConfigurationRequest
     */
    constructor() { 
        
        ShardConfigurationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShardConfigurationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShardConfigurationRequest} obj Optional instance to populate.
     * @return {module:model/ShardConfigurationRequest} The populated <code>ShardConfigurationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShardConfigurationRequest();

            if (data.hasOwnProperty('ShardCount')) {
                obj['ShardCount'] = ApiClient.convertToType(data['ShardCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShardConfigurationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShardConfigurationRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ShardCount`
        if (data['ShardCount']) { // data not null
          Number.validateJSON(data['ShardCount']);
        }

        return true;
    }


}



/**
 * @member {Number} ShardCount
 */
ShardConfigurationRequest.prototype['ShardCount'] = undefined;






export default ShardConfigurationRequest;

