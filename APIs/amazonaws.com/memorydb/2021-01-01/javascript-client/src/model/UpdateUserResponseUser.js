/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';
import UserAuthentication from './UserAuthentication';

/**
 * The UpdateUserResponseUser model module.
 * @module model/UpdateUserResponseUser
 * @version 2021-01-01
 */
class UpdateUserResponseUser {
    /**
     * Constructs a new <code>UpdateUserResponseUser</code>.
     * @alias module:model/UpdateUserResponseUser
     * @implements module:model/User
     */
    constructor() { 
        User.initialize(this);
        UpdateUserResponseUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateUserResponseUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateUserResponseUser} obj Optional instance to populate.
     * @return {module:model/UpdateUserResponseUser} The populated <code>UpdateUserResponseUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateUserResponseUser();
            User.constructFromObject(data, obj);

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('AccessString')) {
                obj['AccessString'] = ApiClient.convertToType(data['AccessString'], 'String');
            }
            if (data.hasOwnProperty('ACLNames')) {
                obj['ACLNames'] = ApiClient.convertToType(data['ACLNames'], Array);
            }
            if (data.hasOwnProperty('MinimumEngineVersion')) {
                obj['MinimumEngineVersion'] = ApiClient.convertToType(data['MinimumEngineVersion'], 'String');
            }
            if (data.hasOwnProperty('Authentication')) {
                obj['Authentication'] = UserAuthentication.constructFromObject(data['Authentication']);
            }
            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateUserResponseUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateUserResponseUser</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `AccessString`
        if (data['AccessString']) { // data not null
          String.validateJSON(data['AccessString']);
        }
        // validate the optional field `ACLNames`
        if (data['ACLNames']) { // data not null
          Array.validateJSON(data['ACLNames']);
        }
        // validate the optional field `MinimumEngineVersion`
        if (data['MinimumEngineVersion']) { // data not null
          String.validateJSON(data['MinimumEngineVersion']);
        }
        // validate the optional field `Authentication`
        if (data['Authentication']) { // data not null
          UserAuthentication.validateJSON(data['Authentication']);
        }
        // validate the optional field `ARN`
        if (data['ARN']) { // data not null
          String.validateJSON(data['ARN']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
UpdateUserResponseUser.prototype['Name'] = undefined;

/**
 * @member {String} Status
 */
UpdateUserResponseUser.prototype['Status'] = undefined;

/**
 * @member {String} AccessString
 */
UpdateUserResponseUser.prototype['AccessString'] = undefined;

/**
 * @member {Array} ACLNames
 */
UpdateUserResponseUser.prototype['ACLNames'] = undefined;

/**
 * @member {String} MinimumEngineVersion
 */
UpdateUserResponseUser.prototype['MinimumEngineVersion'] = undefined;

/**
 * @member {module:model/UserAuthentication} Authentication
 */
UpdateUserResponseUser.prototype['Authentication'] = undefined;

/**
 * @member {String} ARN
 */
UpdateUserResponseUser.prototype['ARN'] = undefined;


// Implement User interface:
/**
 * @member {String} Name
 */
User.prototype['Name'] = undefined;
/**
 * @member {String} Status
 */
User.prototype['Status'] = undefined;
/**
 * @member {String} AccessString
 */
User.prototype['AccessString'] = undefined;
/**
 * @member {Array} ACLNames
 */
User.prototype['ACLNames'] = undefined;
/**
 * @member {String} MinimumEngineVersion
 */
User.prototype['MinimumEngineVersion'] = undefined;
/**
 * @member {module:model/UserAuthentication} Authentication
 */
User.prototype['Authentication'] = undefined;
/**
 * @member {String} ARN
 */
User.prototype['ARN'] = undefined;




export default UpdateUserResponseUser;

