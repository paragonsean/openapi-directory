/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Parameter model module.
 * @module model/Parameter
 * @version 2021-01-01
 */
class Parameter {
    /**
     * Constructs a new <code>Parameter</code>.
     * Describes an individual setting that controls some aspect of MemoryDB behavior.
     * @alias module:model/Parameter
     */
    constructor() { 
        
        Parameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Parameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Parameter} obj Optional instance to populate.
     * @return {module:model/Parameter} The populated <code>Parameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Parameter();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DataType')) {
                obj['DataType'] = ApiClient.convertToType(data['DataType'], 'String');
            }
            if (data.hasOwnProperty('AllowedValues')) {
                obj['AllowedValues'] = ApiClient.convertToType(data['AllowedValues'], 'String');
            }
            if (data.hasOwnProperty('MinimumEngineVersion')) {
                obj['MinimumEngineVersion'] = ApiClient.convertToType(data['MinimumEngineVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Parameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Parameter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          String.validateJSON(data['Value']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `DataType`
        if (data['DataType']) { // data not null
          String.validateJSON(data['DataType']);
        }
        // validate the optional field `AllowedValues`
        if (data['AllowedValues']) { // data not null
          String.validateJSON(data['AllowedValues']);
        }
        // validate the optional field `MinimumEngineVersion`
        if (data['MinimumEngineVersion']) { // data not null
          String.validateJSON(data['MinimumEngineVersion']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
Parameter.prototype['Name'] = undefined;

/**
 * @member {String} Value
 */
Parameter.prototype['Value'] = undefined;

/**
 * @member {String} Description
 */
Parameter.prototype['Description'] = undefined;

/**
 * @member {String} DataType
 */
Parameter.prototype['DataType'] = undefined;

/**
 * @member {String} AllowedValues
 */
Parameter.prototype['AllowedValues'] = undefined;

/**
 * @member {String} MinimumEngineVersion
 */
Parameter.prototype['MinimumEngineVersion'] = undefined;






export default Parameter;

