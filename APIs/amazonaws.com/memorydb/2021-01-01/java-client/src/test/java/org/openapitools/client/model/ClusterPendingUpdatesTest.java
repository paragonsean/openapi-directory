/*
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClusterPendingUpdatesACLs;
import org.openapitools.client.model.ClusterPendingUpdatesResharding;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ClusterPendingUpdates
 */
public class ClusterPendingUpdatesTest {
    private final ClusterPendingUpdates model = new ClusterPendingUpdates();

    /**
     * Model tests for ClusterPendingUpdates
     */
    @Test
    public void testClusterPendingUpdates() {
        // TODO: test ClusterPendingUpdates
    }

    /**
     * Test the property 'resharding'
     */
    @Test
    public void reshardingTest() {
        // TODO: test resharding
    }

    /**
     * Test the property 'acLs'
     */
    @Test
    public void acLsTest() {
        // TODO: test acLs
    }

    /**
     * Test the property 'serviceUpdates'
     */
    @Test
    public void serviceUpdatesTest() {
        // TODO: test serviceUpdates
    }

}
