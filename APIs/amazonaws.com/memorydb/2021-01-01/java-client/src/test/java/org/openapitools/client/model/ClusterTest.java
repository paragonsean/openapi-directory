/*
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AZStatus;
import org.openapitools.client.model.ClusterClusterEndpoint;
import org.openapitools.client.model.ClusterPendingUpdates;
import org.openapitools.client.model.DataTieringStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Cluster
 */
public class ClusterTest {
    private final Cluster model = new Cluster();

    /**
     * Model tests for Cluster
     */
    @Test
    public void testCluster() {
        // TODO: test Cluster
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'pendingUpdates'
     */
    @Test
    public void pendingUpdatesTest() {
        // TODO: test pendingUpdates
    }

    /**
     * Test the property 'numberOfShards'
     */
    @Test
    public void numberOfShardsTest() {
        // TODO: test numberOfShards
    }

    /**
     * Test the property 'shards'
     */
    @Test
    public void shardsTest() {
        // TODO: test shards
    }

    /**
     * Test the property 'availabilityMode'
     */
    @Test
    public void availabilityModeTest() {
        // TODO: test availabilityMode
    }

    /**
     * Test the property 'clusterEndpoint'
     */
    @Test
    public void clusterEndpointTest() {
        // TODO: test clusterEndpoint
    }

    /**
     * Test the property 'nodeType'
     */
    @Test
    public void nodeTypeTest() {
        // TODO: test nodeType
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'enginePatchVersion'
     */
    @Test
    public void enginePatchVersionTest() {
        // TODO: test enginePatchVersion
    }

    /**
     * Test the property 'parameterGroupName'
     */
    @Test
    public void parameterGroupNameTest() {
        // TODO: test parameterGroupName
    }

    /**
     * Test the property 'parameterGroupStatus'
     */
    @Test
    public void parameterGroupStatusTest() {
        // TODO: test parameterGroupStatus
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'subnetGroupName'
     */
    @Test
    public void subnetGroupNameTest() {
        // TODO: test subnetGroupName
    }

    /**
     * Test the property 'tlSEnabled'
     */
    @Test
    public void tlSEnabledTest() {
        // TODO: test tlSEnabled
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'ARN'
     */
    @Test
    public void ARNTest() {
        // TODO: test ARN
    }

    /**
     * Test the property 'snsTopicArn'
     */
    @Test
    public void snsTopicArnTest() {
        // TODO: test snsTopicArn
    }

    /**
     * Test the property 'snsTopicStatus'
     */
    @Test
    public void snsTopicStatusTest() {
        // TODO: test snsTopicStatus
    }

    /**
     * Test the property 'snapshotRetentionLimit'
     */
    @Test
    public void snapshotRetentionLimitTest() {
        // TODO: test snapshotRetentionLimit
    }

    /**
     * Test the property 'maintenanceWindow'
     */
    @Test
    public void maintenanceWindowTest() {
        // TODO: test maintenanceWindow
    }

    /**
     * Test the property 'snapshotWindow'
     */
    @Test
    public void snapshotWindowTest() {
        // TODO: test snapshotWindow
    }

    /**
     * Test the property 'acLName'
     */
    @Test
    public void acLNameTest() {
        // TODO: test acLName
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'dataTiering'
     */
    @Test
    public void dataTieringTest() {
        // TODO: test dataTiering
    }

}
