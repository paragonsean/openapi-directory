/*
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AZStatus;
import org.openapitools.client.model.ClusterClusterEndpoint;
import org.openapitools.client.model.ClusterPendingUpdates;
import org.openapitools.client.model.DataTieringStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FailoverShardResponseCluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:10.082054-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FailoverShardResponseCluster {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PENDING_UPDATES = "PendingUpdates";
  @SerializedName(SERIALIZED_NAME_PENDING_UPDATES)
  private ClusterPendingUpdates pendingUpdates;

  public static final String SERIALIZED_NAME_NUMBER_OF_SHARDS = "NumberOfShards";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_SHARDS)
  private Integer numberOfShards;

  public static final String SERIALIZED_NAME_SHARDS = "Shards";
  @SerializedName(SERIALIZED_NAME_SHARDS)
  private List shards;

  public static final String SERIALIZED_NAME_AVAILABILITY_MODE = "AvailabilityMode";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_MODE)
  private AZStatus availabilityMode;

  public static final String SERIALIZED_NAME_CLUSTER_ENDPOINT = "ClusterEndpoint";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ENDPOINT)
  private ClusterClusterEndpoint clusterEndpoint;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_ENGINE_PATCH_VERSION = "EnginePatchVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_PATCH_VERSION)
  private String enginePatchVersion;

  public static final String SERIALIZED_NAME_PARAMETER_GROUP_NAME = "ParameterGroupName";
  @SerializedName(SERIALIZED_NAME_PARAMETER_GROUP_NAME)
  private String parameterGroupName;

  public static final String SERIALIZED_NAME_PARAMETER_GROUP_STATUS = "ParameterGroupStatus";
  @SerializedName(SERIALIZED_NAME_PARAMETER_GROUP_STATUS)
  private String parameterGroupStatus;

  public static final String SERIALIZED_NAME_SECURITY_GROUPS = "SecurityGroups";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUPS)
  private List securityGroups;

  public static final String SERIALIZED_NAME_SUBNET_GROUP_NAME = "SubnetGroupName";
  @SerializedName(SERIALIZED_NAME_SUBNET_GROUP_NAME)
  private String subnetGroupName;

  public static final String SERIALIZED_NAME_TL_S_ENABLED = "TLSEnabled";
  @SerializedName(SERIALIZED_NAME_TL_S_ENABLED)
  private Boolean tlSEnabled;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_A_R_N = "ARN";
  @SerializedName(SERIALIZED_NAME_A_R_N)
  private String ARN;

  public static final String SERIALIZED_NAME_SNS_TOPIC_ARN = "SnsTopicArn";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_ARN)
  private String snsTopicArn;

  public static final String SERIALIZED_NAME_SNS_TOPIC_STATUS = "SnsTopicStatus";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_STATUS)
  private String snsTopicStatus;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_MAINTENANCE_WINDOW = "MaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_WINDOW)
  private String maintenanceWindow;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_AC_L_NAME = "ACLName";
  @SerializedName(SERIALIZED_NAME_AC_L_NAME)
  private String acLName;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_DATA_TIERING = "DataTiering";
  @SerializedName(SERIALIZED_NAME_DATA_TIERING)
  private DataTieringStatus dataTiering;

  public FailoverShardResponseCluster() {
  }

  public FailoverShardResponseCluster name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public FailoverShardResponseCluster description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public FailoverShardResponseCluster status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public FailoverShardResponseCluster pendingUpdates(ClusterPendingUpdates pendingUpdates) {
    this.pendingUpdates = pendingUpdates;
    return this;
  }

  /**
   * Get pendingUpdates
   * @return pendingUpdates
   */
  @javax.annotation.Nullable
  public ClusterPendingUpdates getPendingUpdates() {
    return pendingUpdates;
  }

  public void setPendingUpdates(ClusterPendingUpdates pendingUpdates) {
    this.pendingUpdates = pendingUpdates;
  }


  public FailoverShardResponseCluster numberOfShards(Integer numberOfShards) {
    this.numberOfShards = numberOfShards;
    return this;
  }

  /**
   * Get numberOfShards
   * @return numberOfShards
   */
  @javax.annotation.Nullable
  public Integer getNumberOfShards() {
    return numberOfShards;
  }

  public void setNumberOfShards(Integer numberOfShards) {
    this.numberOfShards = numberOfShards;
  }


  public FailoverShardResponseCluster shards(List shards) {
    this.shards = shards;
    return this;
  }

  /**
   * Get shards
   * @return shards
   */
  @javax.annotation.Nullable
  public List getShards() {
    return shards;
  }

  public void setShards(List shards) {
    this.shards = shards;
  }


  public FailoverShardResponseCluster availabilityMode(AZStatus availabilityMode) {
    this.availabilityMode = availabilityMode;
    return this;
  }

  /**
   * Get availabilityMode
   * @return availabilityMode
   */
  @javax.annotation.Nullable
  public AZStatus getAvailabilityMode() {
    return availabilityMode;
  }

  public void setAvailabilityMode(AZStatus availabilityMode) {
    this.availabilityMode = availabilityMode;
  }


  public FailoverShardResponseCluster clusterEndpoint(ClusterClusterEndpoint clusterEndpoint) {
    this.clusterEndpoint = clusterEndpoint;
    return this;
  }

  /**
   * Get clusterEndpoint
   * @return clusterEndpoint
   */
  @javax.annotation.Nullable
  public ClusterClusterEndpoint getClusterEndpoint() {
    return clusterEndpoint;
  }

  public void setClusterEndpoint(ClusterClusterEndpoint clusterEndpoint) {
    this.clusterEndpoint = clusterEndpoint;
  }


  public FailoverShardResponseCluster nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nullable
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public FailoverShardResponseCluster engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public FailoverShardResponseCluster enginePatchVersion(String enginePatchVersion) {
    this.enginePatchVersion = enginePatchVersion;
    return this;
  }

  /**
   * Get enginePatchVersion
   * @return enginePatchVersion
   */
  @javax.annotation.Nullable
  public String getEnginePatchVersion() {
    return enginePatchVersion;
  }

  public void setEnginePatchVersion(String enginePatchVersion) {
    this.enginePatchVersion = enginePatchVersion;
  }


  public FailoverShardResponseCluster parameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
    return this;
  }

  /**
   * Get parameterGroupName
   * @return parameterGroupName
   */
  @javax.annotation.Nullable
  public String getParameterGroupName() {
    return parameterGroupName;
  }

  public void setParameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
  }


  public FailoverShardResponseCluster parameterGroupStatus(String parameterGroupStatus) {
    this.parameterGroupStatus = parameterGroupStatus;
    return this;
  }

  /**
   * Get parameterGroupStatus
   * @return parameterGroupStatus
   */
  @javax.annotation.Nullable
  public String getParameterGroupStatus() {
    return parameterGroupStatus;
  }

  public void setParameterGroupStatus(String parameterGroupStatus) {
    this.parameterGroupStatus = parameterGroupStatus;
  }


  public FailoverShardResponseCluster securityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
    return this;
  }

  /**
   * Get securityGroups
   * @return securityGroups
   */
  @javax.annotation.Nullable
  public List getSecurityGroups() {
    return securityGroups;
  }

  public void setSecurityGroups(List securityGroups) {
    this.securityGroups = securityGroups;
  }


  public FailoverShardResponseCluster subnetGroupName(String subnetGroupName) {
    this.subnetGroupName = subnetGroupName;
    return this;
  }

  /**
   * Get subnetGroupName
   * @return subnetGroupName
   */
  @javax.annotation.Nullable
  public String getSubnetGroupName() {
    return subnetGroupName;
  }

  public void setSubnetGroupName(String subnetGroupName) {
    this.subnetGroupName = subnetGroupName;
  }


  public FailoverShardResponseCluster tlSEnabled(Boolean tlSEnabled) {
    this.tlSEnabled = tlSEnabled;
    return this;
  }

  /**
   * Get tlSEnabled
   * @return tlSEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTlSEnabled() {
    return tlSEnabled;
  }

  public void setTlSEnabled(Boolean tlSEnabled) {
    this.tlSEnabled = tlSEnabled;
  }


  public FailoverShardResponseCluster kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public FailoverShardResponseCluster ARN(String ARN) {
    this.ARN = ARN;
    return this;
  }

  /**
   * Get ARN
   * @return ARN
   */
  @javax.annotation.Nullable
  public String getARN() {
    return ARN;
  }

  public void setARN(String ARN) {
    this.ARN = ARN;
  }


  public FailoverShardResponseCluster snsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
    return this;
  }

  /**
   * Get snsTopicArn
   * @return snsTopicArn
   */
  @javax.annotation.Nullable
  public String getSnsTopicArn() {
    return snsTopicArn;
  }

  public void setSnsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
  }


  public FailoverShardResponseCluster snsTopicStatus(String snsTopicStatus) {
    this.snsTopicStatus = snsTopicStatus;
    return this;
  }

  /**
   * Get snsTopicStatus
   * @return snsTopicStatus
   */
  @javax.annotation.Nullable
  public String getSnsTopicStatus() {
    return snsTopicStatus;
  }

  public void setSnsTopicStatus(String snsTopicStatus) {
    this.snsTopicStatus = snsTopicStatus;
  }


  public FailoverShardResponseCluster snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public FailoverShardResponseCluster maintenanceWindow(String maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
    return this;
  }

  /**
   * Get maintenanceWindow
   * @return maintenanceWindow
   */
  @javax.annotation.Nullable
  public String getMaintenanceWindow() {
    return maintenanceWindow;
  }

  public void setMaintenanceWindow(String maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
  }


  public FailoverShardResponseCluster snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public FailoverShardResponseCluster acLName(String acLName) {
    this.acLName = acLName;
    return this;
  }

  /**
   * Get acLName
   * @return acLName
   */
  @javax.annotation.Nullable
  public String getAcLName() {
    return acLName;
  }

  public void setAcLName(String acLName) {
    this.acLName = acLName;
  }


  public FailoverShardResponseCluster autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public FailoverShardResponseCluster dataTiering(DataTieringStatus dataTiering) {
    this.dataTiering = dataTiering;
    return this;
  }

  /**
   * Get dataTiering
   * @return dataTiering
   */
  @javax.annotation.Nullable
  public DataTieringStatus getDataTiering() {
    return dataTiering;
  }

  public void setDataTiering(DataTieringStatus dataTiering) {
    this.dataTiering = dataTiering;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailoverShardResponseCluster failoverShardResponseCluster = (FailoverShardResponseCluster) o;
    return Objects.equals(this.name, failoverShardResponseCluster.name) &&
        Objects.equals(this.description, failoverShardResponseCluster.description) &&
        Objects.equals(this.status, failoverShardResponseCluster.status) &&
        Objects.equals(this.pendingUpdates, failoverShardResponseCluster.pendingUpdates) &&
        Objects.equals(this.numberOfShards, failoverShardResponseCluster.numberOfShards) &&
        Objects.equals(this.shards, failoverShardResponseCluster.shards) &&
        Objects.equals(this.availabilityMode, failoverShardResponseCluster.availabilityMode) &&
        Objects.equals(this.clusterEndpoint, failoverShardResponseCluster.clusterEndpoint) &&
        Objects.equals(this.nodeType, failoverShardResponseCluster.nodeType) &&
        Objects.equals(this.engineVersion, failoverShardResponseCluster.engineVersion) &&
        Objects.equals(this.enginePatchVersion, failoverShardResponseCluster.enginePatchVersion) &&
        Objects.equals(this.parameterGroupName, failoverShardResponseCluster.parameterGroupName) &&
        Objects.equals(this.parameterGroupStatus, failoverShardResponseCluster.parameterGroupStatus) &&
        Objects.equals(this.securityGroups, failoverShardResponseCluster.securityGroups) &&
        Objects.equals(this.subnetGroupName, failoverShardResponseCluster.subnetGroupName) &&
        Objects.equals(this.tlSEnabled, failoverShardResponseCluster.tlSEnabled) &&
        Objects.equals(this.kmsKeyId, failoverShardResponseCluster.kmsKeyId) &&
        Objects.equals(this.ARN, failoverShardResponseCluster.ARN) &&
        Objects.equals(this.snsTopicArn, failoverShardResponseCluster.snsTopicArn) &&
        Objects.equals(this.snsTopicStatus, failoverShardResponseCluster.snsTopicStatus) &&
        Objects.equals(this.snapshotRetentionLimit, failoverShardResponseCluster.snapshotRetentionLimit) &&
        Objects.equals(this.maintenanceWindow, failoverShardResponseCluster.maintenanceWindow) &&
        Objects.equals(this.snapshotWindow, failoverShardResponseCluster.snapshotWindow) &&
        Objects.equals(this.acLName, failoverShardResponseCluster.acLName) &&
        Objects.equals(this.autoMinorVersionUpgrade, failoverShardResponseCluster.autoMinorVersionUpgrade) &&
        Objects.equals(this.dataTiering, failoverShardResponseCluster.dataTiering);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, status, pendingUpdates, numberOfShards, shards, availabilityMode, clusterEndpoint, nodeType, engineVersion, enginePatchVersion, parameterGroupName, parameterGroupStatus, securityGroups, subnetGroupName, tlSEnabled, kmsKeyId, ARN, snsTopicArn, snsTopicStatus, snapshotRetentionLimit, maintenanceWindow, snapshotWindow, acLName, autoMinorVersionUpgrade, dataTiering);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailoverShardResponseCluster {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    pendingUpdates: ").append(toIndentedString(pendingUpdates)).append("\n");
    sb.append("    numberOfShards: ").append(toIndentedString(numberOfShards)).append("\n");
    sb.append("    shards: ").append(toIndentedString(shards)).append("\n");
    sb.append("    availabilityMode: ").append(toIndentedString(availabilityMode)).append("\n");
    sb.append("    clusterEndpoint: ").append(toIndentedString(clusterEndpoint)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    enginePatchVersion: ").append(toIndentedString(enginePatchVersion)).append("\n");
    sb.append("    parameterGroupName: ").append(toIndentedString(parameterGroupName)).append("\n");
    sb.append("    parameterGroupStatus: ").append(toIndentedString(parameterGroupStatus)).append("\n");
    sb.append("    securityGroups: ").append(toIndentedString(securityGroups)).append("\n");
    sb.append("    subnetGroupName: ").append(toIndentedString(subnetGroupName)).append("\n");
    sb.append("    tlSEnabled: ").append(toIndentedString(tlSEnabled)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    ARN: ").append(toIndentedString(ARN)).append("\n");
    sb.append("    snsTopicArn: ").append(toIndentedString(snsTopicArn)).append("\n");
    sb.append("    snsTopicStatus: ").append(toIndentedString(snsTopicStatus)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    maintenanceWindow: ").append(toIndentedString(maintenanceWindow)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    acLName: ").append(toIndentedString(acLName)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    dataTiering: ").append(toIndentedString(dataTiering)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("Status");
    openapiFields.add("PendingUpdates");
    openapiFields.add("NumberOfShards");
    openapiFields.add("Shards");
    openapiFields.add("AvailabilityMode");
    openapiFields.add("ClusterEndpoint");
    openapiFields.add("NodeType");
    openapiFields.add("EngineVersion");
    openapiFields.add("EnginePatchVersion");
    openapiFields.add("ParameterGroupName");
    openapiFields.add("ParameterGroupStatus");
    openapiFields.add("SecurityGroups");
    openapiFields.add("SubnetGroupName");
    openapiFields.add("TLSEnabled");
    openapiFields.add("KmsKeyId");
    openapiFields.add("ARN");
    openapiFields.add("SnsTopicArn");
    openapiFields.add("SnsTopicStatus");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("MaintenanceWindow");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("ACLName");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("DataTiering");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FailoverShardResponseCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FailoverShardResponseCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FailoverShardResponseCluster is not found in the empty JSON string", FailoverShardResponseCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FailoverShardResponseCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FailoverShardResponseCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `PendingUpdates`
      if (jsonObj.get("PendingUpdates") != null && !jsonObj.get("PendingUpdates").isJsonNull()) {
        ClusterPendingUpdates.validateJsonElement(jsonObj.get("PendingUpdates"));
      }
      // validate the optional field `NumberOfShards`
      if (jsonObj.get("NumberOfShards") != null && !jsonObj.get("NumberOfShards").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfShards"));
      }
      // validate the optional field `Shards`
      if (jsonObj.get("Shards") != null && !jsonObj.get("Shards").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Shards"));
      }
      // validate the optional field `AvailabilityMode`
      if (jsonObj.get("AvailabilityMode") != null && !jsonObj.get("AvailabilityMode").isJsonNull()) {
        AZStatus.validateJsonElement(jsonObj.get("AvailabilityMode"));
      }
      // validate the optional field `ClusterEndpoint`
      if (jsonObj.get("ClusterEndpoint") != null && !jsonObj.get("ClusterEndpoint").isJsonNull()) {
        ClusterClusterEndpoint.validateJsonElement(jsonObj.get("ClusterEndpoint"));
      }
      // validate the optional field `NodeType`
      if (jsonObj.get("NodeType") != null && !jsonObj.get("NodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodeType"));
      }
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `EnginePatchVersion`
      if (jsonObj.get("EnginePatchVersion") != null && !jsonObj.get("EnginePatchVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EnginePatchVersion"));
      }
      // validate the optional field `ParameterGroupName`
      if (jsonObj.get("ParameterGroupName") != null && !jsonObj.get("ParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParameterGroupName"));
      }
      // validate the optional field `ParameterGroupStatus`
      if (jsonObj.get("ParameterGroupStatus") != null && !jsonObj.get("ParameterGroupStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParameterGroupStatus"));
      }
      // validate the optional field `SecurityGroups`
      if (jsonObj.get("SecurityGroups") != null && !jsonObj.get("SecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroups"));
      }
      // validate the optional field `SubnetGroupName`
      if (jsonObj.get("SubnetGroupName") != null && !jsonObj.get("SubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetGroupName"));
      }
      // validate the optional field `TLSEnabled`
      if (jsonObj.get("TLSEnabled") != null && !jsonObj.get("TLSEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TLSEnabled"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `ARN`
      if (jsonObj.get("ARN") != null && !jsonObj.get("ARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ARN"));
      }
      // validate the optional field `SnsTopicArn`
      if (jsonObj.get("SnsTopicArn") != null && !jsonObj.get("SnsTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicArn"));
      }
      // validate the optional field `SnsTopicStatus`
      if (jsonObj.get("SnsTopicStatus") != null && !jsonObj.get("SnsTopicStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicStatus"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `MaintenanceWindow`
      if (jsonObj.get("MaintenanceWindow") != null && !jsonObj.get("MaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceWindow"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the optional field `ACLName`
      if (jsonObj.get("ACLName") != null && !jsonObj.get("ACLName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ACLName"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `DataTiering`
      if (jsonObj.get("DataTiering") != null && !jsonObj.get("DataTiering").isJsonNull()) {
        DataTieringStatus.validateJsonElement(jsonObj.get("DataTiering"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FailoverShardResponseCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FailoverShardResponseCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FailoverShardResponseCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FailoverShardResponseCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<FailoverShardResponseCluster>() {
           @Override
           public void write(JsonWriter out, FailoverShardResponseCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FailoverShardResponseCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FailoverShardResponseCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FailoverShardResponseCluster
   * @throws IOException if the JSON string is invalid with respect to FailoverShardResponseCluster
   */
  public static FailoverShardResponseCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FailoverShardResponseCluster.class);
  }

  /**
   * Convert an instance of FailoverShardResponseCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

