/*
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateClusterRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:10.082054-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateClusterRequest {
  public static final String SERIALIZED_NAME_CLUSTER_NAME = "ClusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_PARAMETER_GROUP_NAME = "ParameterGroupName";
  @SerializedName(SERIALIZED_NAME_PARAMETER_GROUP_NAME)
  private String parameterGroupName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NUM_SHARDS = "NumShards";
  @SerializedName(SERIALIZED_NAME_NUM_SHARDS)
  private Integer numShards;

  public static final String SERIALIZED_NAME_NUM_REPLICAS_PER_SHARD = "NumReplicasPerShard";
  @SerializedName(SERIALIZED_NAME_NUM_REPLICAS_PER_SHARD)
  private Integer numReplicasPerShard;

  public static final String SERIALIZED_NAME_SUBNET_GROUP_NAME = "SubnetGroupName";
  @SerializedName(SERIALIZED_NAME_SUBNET_GROUP_NAME)
  private String subnetGroupName;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_MAINTENANCE_WINDOW = "MaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_WINDOW)
  private String maintenanceWindow;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_SNS_TOPIC_ARN = "SnsTopicArn";
  @SerializedName(SERIALIZED_NAME_SNS_TOPIC_ARN)
  private String snsTopicArn;

  public static final String SERIALIZED_NAME_TL_S_ENABLED = "TLSEnabled";
  @SerializedName(SERIALIZED_NAME_TL_S_ENABLED)
  private Boolean tlSEnabled;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_SNAPSHOT_ARNS = "SnapshotArns";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_ARNS)
  private List snapshotArns;

  public static final String SERIALIZED_NAME_SNAPSHOT_NAME = "SnapshotName";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_NAME)
  private String snapshotName;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT = "SnapshotRetentionLimit";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_LIMIT)
  private Integer snapshotRetentionLimit;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_SNAPSHOT_WINDOW = "SnapshotWindow";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_WINDOW)
  private String snapshotWindow;

  public static final String SERIALIZED_NAME_AC_L_NAME = "ACLName";
  @SerializedName(SERIALIZED_NAME_AC_L_NAME)
  private String acLName;

  public static final String SERIALIZED_NAME_ENGINE_VERSION = "EngineVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_VERSION)
  private String engineVersion;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_DATA_TIERING = "DataTiering";
  @SerializedName(SERIALIZED_NAME_DATA_TIERING)
  private Boolean dataTiering;

  public CreateClusterRequest() {
  }

  public CreateClusterRequest clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nonnull
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public CreateClusterRequest nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nonnull
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public CreateClusterRequest parameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
    return this;
  }

  /**
   * Get parameterGroupName
   * @return parameterGroupName
   */
  @javax.annotation.Nullable
  public String getParameterGroupName() {
    return parameterGroupName;
  }

  public void setParameterGroupName(String parameterGroupName) {
    this.parameterGroupName = parameterGroupName;
  }


  public CreateClusterRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateClusterRequest numShards(Integer numShards) {
    this.numShards = numShards;
    return this;
  }

  /**
   * Get numShards
   * @return numShards
   */
  @javax.annotation.Nullable
  public Integer getNumShards() {
    return numShards;
  }

  public void setNumShards(Integer numShards) {
    this.numShards = numShards;
  }


  public CreateClusterRequest numReplicasPerShard(Integer numReplicasPerShard) {
    this.numReplicasPerShard = numReplicasPerShard;
    return this;
  }

  /**
   * Get numReplicasPerShard
   * @return numReplicasPerShard
   */
  @javax.annotation.Nullable
  public Integer getNumReplicasPerShard() {
    return numReplicasPerShard;
  }

  public void setNumReplicasPerShard(Integer numReplicasPerShard) {
    this.numReplicasPerShard = numReplicasPerShard;
  }


  public CreateClusterRequest subnetGroupName(String subnetGroupName) {
    this.subnetGroupName = subnetGroupName;
    return this;
  }

  /**
   * Get subnetGroupName
   * @return subnetGroupName
   */
  @javax.annotation.Nullable
  public String getSubnetGroupName() {
    return subnetGroupName;
  }

  public void setSubnetGroupName(String subnetGroupName) {
    this.subnetGroupName = subnetGroupName;
  }


  public CreateClusterRequest securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public CreateClusterRequest maintenanceWindow(String maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
    return this;
  }

  /**
   * Get maintenanceWindow
   * @return maintenanceWindow
   */
  @javax.annotation.Nullable
  public String getMaintenanceWindow() {
    return maintenanceWindow;
  }

  public void setMaintenanceWindow(String maintenanceWindow) {
    this.maintenanceWindow = maintenanceWindow;
  }


  public CreateClusterRequest port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public CreateClusterRequest snsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
    return this;
  }

  /**
   * Get snsTopicArn
   * @return snsTopicArn
   */
  @javax.annotation.Nullable
  public String getSnsTopicArn() {
    return snsTopicArn;
  }

  public void setSnsTopicArn(String snsTopicArn) {
    this.snsTopicArn = snsTopicArn;
  }


  public CreateClusterRequest tlSEnabled(Boolean tlSEnabled) {
    this.tlSEnabled = tlSEnabled;
    return this;
  }

  /**
   * Get tlSEnabled
   * @return tlSEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTlSEnabled() {
    return tlSEnabled;
  }

  public void setTlSEnabled(Boolean tlSEnabled) {
    this.tlSEnabled = tlSEnabled;
  }


  public CreateClusterRequest kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public CreateClusterRequest snapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
    return this;
  }

  /**
   * Get snapshotArns
   * @return snapshotArns
   */
  @javax.annotation.Nullable
  public List getSnapshotArns() {
    return snapshotArns;
  }

  public void setSnapshotArns(List snapshotArns) {
    this.snapshotArns = snapshotArns;
  }


  public CreateClusterRequest snapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
    return this;
  }

  /**
   * Get snapshotName
   * @return snapshotName
   */
  @javax.annotation.Nullable
  public String getSnapshotName() {
    return snapshotName;
  }

  public void setSnapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
  }


  public CreateClusterRequest snapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
    return this;
  }

  /**
   * Get snapshotRetentionLimit
   * @return snapshotRetentionLimit
   */
  @javax.annotation.Nullable
  public Integer getSnapshotRetentionLimit() {
    return snapshotRetentionLimit;
  }

  public void setSnapshotRetentionLimit(Integer snapshotRetentionLimit) {
    this.snapshotRetentionLimit = snapshotRetentionLimit;
  }


  public CreateClusterRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateClusterRequest snapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
    return this;
  }

  /**
   * Get snapshotWindow
   * @return snapshotWindow
   */
  @javax.annotation.Nullable
  public String getSnapshotWindow() {
    return snapshotWindow;
  }

  public void setSnapshotWindow(String snapshotWindow) {
    this.snapshotWindow = snapshotWindow;
  }


  public CreateClusterRequest acLName(String acLName) {
    this.acLName = acLName;
    return this;
  }

  /**
   * Get acLName
   * @return acLName
   */
  @javax.annotation.Nonnull
  public String getAcLName() {
    return acLName;
  }

  public void setAcLName(String acLName) {
    this.acLName = acLName;
  }


  public CreateClusterRequest engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

  /**
   * Get engineVersion
   * @return engineVersion
   */
  @javax.annotation.Nullable
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }


  public CreateClusterRequest autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public CreateClusterRequest dataTiering(Boolean dataTiering) {
    this.dataTiering = dataTiering;
    return this;
  }

  /**
   * Get dataTiering
   * @return dataTiering
   */
  @javax.annotation.Nullable
  public Boolean getDataTiering() {
    return dataTiering;
  }

  public void setDataTiering(Boolean dataTiering) {
    this.dataTiering = dataTiering;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClusterRequest createClusterRequest = (CreateClusterRequest) o;
    return Objects.equals(this.clusterName, createClusterRequest.clusterName) &&
        Objects.equals(this.nodeType, createClusterRequest.nodeType) &&
        Objects.equals(this.parameterGroupName, createClusterRequest.parameterGroupName) &&
        Objects.equals(this.description, createClusterRequest.description) &&
        Objects.equals(this.numShards, createClusterRequest.numShards) &&
        Objects.equals(this.numReplicasPerShard, createClusterRequest.numReplicasPerShard) &&
        Objects.equals(this.subnetGroupName, createClusterRequest.subnetGroupName) &&
        Objects.equals(this.securityGroupIds, createClusterRequest.securityGroupIds) &&
        Objects.equals(this.maintenanceWindow, createClusterRequest.maintenanceWindow) &&
        Objects.equals(this.port, createClusterRequest.port) &&
        Objects.equals(this.snsTopicArn, createClusterRequest.snsTopicArn) &&
        Objects.equals(this.tlSEnabled, createClusterRequest.tlSEnabled) &&
        Objects.equals(this.kmsKeyId, createClusterRequest.kmsKeyId) &&
        Objects.equals(this.snapshotArns, createClusterRequest.snapshotArns) &&
        Objects.equals(this.snapshotName, createClusterRequest.snapshotName) &&
        Objects.equals(this.snapshotRetentionLimit, createClusterRequest.snapshotRetentionLimit) &&
        Objects.equals(this.tags, createClusterRequest.tags) &&
        Objects.equals(this.snapshotWindow, createClusterRequest.snapshotWindow) &&
        Objects.equals(this.acLName, createClusterRequest.acLName) &&
        Objects.equals(this.engineVersion, createClusterRequest.engineVersion) &&
        Objects.equals(this.autoMinorVersionUpgrade, createClusterRequest.autoMinorVersionUpgrade) &&
        Objects.equals(this.dataTiering, createClusterRequest.dataTiering);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterName, nodeType, parameterGroupName, description, numShards, numReplicasPerShard, subnetGroupName, securityGroupIds, maintenanceWindow, port, snsTopicArn, tlSEnabled, kmsKeyId, snapshotArns, snapshotName, snapshotRetentionLimit, tags, snapshotWindow, acLName, engineVersion, autoMinorVersionUpgrade, dataTiering);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClusterRequest {\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    parameterGroupName: ").append(toIndentedString(parameterGroupName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    numShards: ").append(toIndentedString(numShards)).append("\n");
    sb.append("    numReplicasPerShard: ").append(toIndentedString(numReplicasPerShard)).append("\n");
    sb.append("    subnetGroupName: ").append(toIndentedString(subnetGroupName)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    maintenanceWindow: ").append(toIndentedString(maintenanceWindow)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    snsTopicArn: ").append(toIndentedString(snsTopicArn)).append("\n");
    sb.append("    tlSEnabled: ").append(toIndentedString(tlSEnabled)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    snapshotArns: ").append(toIndentedString(snapshotArns)).append("\n");
    sb.append("    snapshotName: ").append(toIndentedString(snapshotName)).append("\n");
    sb.append("    snapshotRetentionLimit: ").append(toIndentedString(snapshotRetentionLimit)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    snapshotWindow: ").append(toIndentedString(snapshotWindow)).append("\n");
    sb.append("    acLName: ").append(toIndentedString(acLName)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    dataTiering: ").append(toIndentedString(dataTiering)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterName");
    openapiFields.add("NodeType");
    openapiFields.add("ParameterGroupName");
    openapiFields.add("Description");
    openapiFields.add("NumShards");
    openapiFields.add("NumReplicasPerShard");
    openapiFields.add("SubnetGroupName");
    openapiFields.add("SecurityGroupIds");
    openapiFields.add("MaintenanceWindow");
    openapiFields.add("Port");
    openapiFields.add("SnsTopicArn");
    openapiFields.add("TLSEnabled");
    openapiFields.add("KmsKeyId");
    openapiFields.add("SnapshotArns");
    openapiFields.add("SnapshotName");
    openapiFields.add("SnapshotRetentionLimit");
    openapiFields.add("Tags");
    openapiFields.add("SnapshotWindow");
    openapiFields.add("ACLName");
    openapiFields.add("EngineVersion");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("DataTiering");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ClusterName");
    openapiRequiredFields.add("NodeType");
    openapiRequiredFields.add("ACLName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateClusterRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateClusterRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateClusterRequest is not found in the empty JSON string", CreateClusterRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateClusterRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateClusterRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateClusterRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ClusterName`
      String.validateJsonElement(jsonObj.get("ClusterName"));
      // validate the required field `NodeType`
      String.validateJsonElement(jsonObj.get("NodeType"));
      // validate the optional field `ParameterGroupName`
      if (jsonObj.get("ParameterGroupName") != null && !jsonObj.get("ParameterGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParameterGroupName"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `NumShards`
      if (jsonObj.get("NumShards") != null && !jsonObj.get("NumShards").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumShards"));
      }
      // validate the optional field `NumReplicasPerShard`
      if (jsonObj.get("NumReplicasPerShard") != null && !jsonObj.get("NumReplicasPerShard").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumReplicasPerShard"));
      }
      // validate the optional field `SubnetGroupName`
      if (jsonObj.get("SubnetGroupName") != null && !jsonObj.get("SubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetGroupName"));
      }
      // validate the optional field `SecurityGroupIds`
      if (jsonObj.get("SecurityGroupIds") != null && !jsonObj.get("SecurityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SecurityGroupIds"));
      }
      // validate the optional field `MaintenanceWindow`
      if (jsonObj.get("MaintenanceWindow") != null && !jsonObj.get("MaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceWindow"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `SnsTopicArn`
      if (jsonObj.get("SnsTopicArn") != null && !jsonObj.get("SnsTopicArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnsTopicArn"));
      }
      // validate the optional field `TLSEnabled`
      if (jsonObj.get("TLSEnabled") != null && !jsonObj.get("TLSEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("TLSEnabled"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `SnapshotArns`
      if (jsonObj.get("SnapshotArns") != null && !jsonObj.get("SnapshotArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SnapshotArns"));
      }
      // validate the optional field `SnapshotName`
      if (jsonObj.get("SnapshotName") != null && !jsonObj.get("SnapshotName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotName"));
      }
      // validate the optional field `SnapshotRetentionLimit`
      if (jsonObj.get("SnapshotRetentionLimit") != null && !jsonObj.get("SnapshotRetentionLimit").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotRetentionLimit"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `SnapshotWindow`
      if (jsonObj.get("SnapshotWindow") != null && !jsonObj.get("SnapshotWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotWindow"));
      }
      // validate the required field `ACLName`
      String.validateJsonElement(jsonObj.get("ACLName"));
      // validate the optional field `EngineVersion`
      if (jsonObj.get("EngineVersion") != null && !jsonObj.get("EngineVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineVersion"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `DataTiering`
      if (jsonObj.get("DataTiering") != null && !jsonObj.get("DataTiering").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DataTiering"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateClusterRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateClusterRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateClusterRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateClusterRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateClusterRequest>() {
           @Override
           public void write(JsonWriter out, CreateClusterRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateClusterRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateClusterRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateClusterRequest
   * @throws IOException if the JSON string is invalid with respect to CreateClusterRequest
   */
  public static CreateClusterRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateClusterRequest.class);
  }

  /**
   * Convert an instance of CreateClusterRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

