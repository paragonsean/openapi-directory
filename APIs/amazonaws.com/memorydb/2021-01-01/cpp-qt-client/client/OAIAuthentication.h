/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthentication.h
 *
 * Denotes the user&#39;s authentication properties, such as whether it requires a password to authenticate. Used in output responses.
 */

#ifndef OAIAuthentication_H
#define OAIAuthentication_H

#include <QJsonObject>

#include "OAIAuthenticationType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthentication : public OAIObject {
public:
    OAIAuthentication();
    OAIAuthentication(QString json);
    ~OAIAuthentication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthenticationType getType() const;
    void setType(const OAIAuthenticationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getPasswordCount() const;
    void setPasswordCount(const qint32 &password_count);
    bool is_password_count_Set() const;
    bool is_password_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthenticationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_password_count;
    bool m_password_count_isSet;
    bool m_password_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthentication)

#endif // OAIAuthentication_H
