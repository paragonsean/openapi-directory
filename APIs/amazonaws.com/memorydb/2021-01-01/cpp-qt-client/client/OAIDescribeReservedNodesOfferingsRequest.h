/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeReservedNodesOfferingsRequest.h
 *
 * 
 */

#ifndef OAIDescribeReservedNodesOfferingsRequest_H
#define OAIDescribeReservedNodesOfferingsRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeReservedNodesOfferingsRequest : public OAIObject {
public:
    OAIDescribeReservedNodesOfferingsRequest();
    OAIDescribeReservedNodesOfferingsRequest(QString json);
    ~OAIDescribeReservedNodesOfferingsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReservedNodesOfferingId() const;
    void setReservedNodesOfferingId(const QString &reserved_nodes_offering_id);
    bool is_reserved_nodes_offering_id_Set() const;
    bool is_reserved_nodes_offering_id_Valid() const;

    QString getNodeType() const;
    void setNodeType(const QString &node_type);
    bool is_node_type_Set() const;
    bool is_node_type_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getOfferingType() const;
    void setOfferingType(const QString &offering_type);
    bool is_offering_type_Set() const;
    bool is_offering_type_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reserved_nodes_offering_id;
    bool m_reserved_nodes_offering_id_isSet;
    bool m_reserved_nodes_offering_id_isValid;

    QString m_node_type;
    bool m_node_type_isSet;
    bool m_node_type_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_offering_type;
    bool m_offering_type_isSet;
    bool m_offering_type_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeReservedNodesOfferingsRequest)

#endif // OAIDescribeReservedNodesOfferingsRequest_H
