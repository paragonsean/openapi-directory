/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubnet.h
 *
 * Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with MemoryDB.
 */

#ifndef OAISubnet_H
#define OAISubnet_H

#include <QJsonObject>

#include "OAISubnet_AvailabilityZone.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubnet_AvailabilityZone;

class OAISubnet : public OAIObject {
public:
    OAISubnet();
    OAISubnet(QString json);
    ~OAISubnet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    OAISubnet_AvailabilityZone getAvailabilityZone() const;
    void setAvailabilityZone(const OAISubnet_AvailabilityZone &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    OAISubnet_AvailabilityZone m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubnet)

#endif // OAISubnet_H
