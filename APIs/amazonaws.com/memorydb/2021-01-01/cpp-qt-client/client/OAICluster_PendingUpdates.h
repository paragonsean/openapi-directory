/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster_PendingUpdates.h
 *
 * 
 */

#ifndef OAICluster_PendingUpdates_H
#define OAICluster_PendingUpdates_H

#include <QJsonObject>

#include "OAIClusterPendingUpdates_ACLs.h"
#include "OAIClusterPendingUpdates_Resharding.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterPendingUpdates_Resharding;
class OAIClusterPendingUpdates_ACLs;

class OAICluster_PendingUpdates : public OAIObject {
public:
    OAICluster_PendingUpdates();
    OAICluster_PendingUpdates(QString json);
    ~OAICluster_PendingUpdates() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClusterPendingUpdates_Resharding getResharding() const;
    void setResharding(const OAIClusterPendingUpdates_Resharding &resharding);
    bool is_resharding_Set() const;
    bool is_resharding_Valid() const;

    OAIClusterPendingUpdates_ACLs getAcls() const;
    void setAcls(const OAIClusterPendingUpdates_ACLs &acls);
    bool is_acls_Set() const;
    bool is_acls_Valid() const;

    QList getServiceUpdates() const;
    void setServiceUpdates(const QList &service_updates);
    bool is_service_updates_Set() const;
    bool is_service_updates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClusterPendingUpdates_Resharding m_resharding;
    bool m_resharding_isSet;
    bool m_resharding_isValid;

    OAIClusterPendingUpdates_ACLs m_acls;
    bool m_acls_isSet;
    bool m_acls_isValid;

    QList m_service_updates;
    bool m_service_updates_isSet;
    bool m_service_updates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster_PendingUpdates)

#endif // OAICluster_PendingUpdates_H
