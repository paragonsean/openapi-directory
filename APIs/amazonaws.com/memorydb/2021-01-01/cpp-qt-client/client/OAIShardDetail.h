/**
 * Amazon MemoryDB
 * MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShardDetail.h
 *
 * Provides details of a shard in a snapshot
 */

#ifndef OAIShardDetail_H
#define OAIShardDetail_H

#include <QJsonObject>

#include "OAIShardDetail_Configuration.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIShardDetail_Configuration;

class OAIShardDetail : public OAIObject {
public:
    OAIShardDetail();
    OAIShardDetail(QString json);
    ~OAIShardDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIShardDetail_Configuration getConfiguration() const;
    void setConfiguration(const OAIShardDetail_Configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QDateTime getSnapshotCreationTime() const;
    void setSnapshotCreationTime(const QDateTime &snapshot_creation_time);
    bool is_snapshot_creation_time_Set() const;
    bool is_snapshot_creation_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIShardDetail_Configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QDateTime m_snapshot_creation_time;
    bool m_snapshot_creation_time_isSet;
    bool m_snapshot_creation_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShardDetail)

#endif // OAIShardDetail_H
