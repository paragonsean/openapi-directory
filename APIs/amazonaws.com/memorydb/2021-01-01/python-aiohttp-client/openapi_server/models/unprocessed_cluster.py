# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnprocessedCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name: str=None, error_type: str=None, error_message: str=None):
        """UnprocessedCluster - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this UnprocessedCluster.
        :param error_type: The error_type of this UnprocessedCluster.
        :param error_message: The error_message of this UnprocessedCluster.
        """
        self.openapi_types = {
            'cluster_name': str,
            'error_type': str,
            'error_message': str
        }

        self.attribute_map = {
            'cluster_name': 'ClusterName',
            'error_type': 'ErrorType',
            'error_message': 'ErrorMessage'
        }

        self._cluster_name = cluster_name
        self._error_type = error_type
        self._error_message = error_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnprocessedCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnprocessedCluster of this UnprocessedCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this UnprocessedCluster.


        :return: The cluster_name of this UnprocessedCluster.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this UnprocessedCluster.


        :param cluster_name: The cluster_name of this UnprocessedCluster.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def error_type(self):
        """Gets the error_type of this UnprocessedCluster.


        :return: The error_type of this UnprocessedCluster.
        :rtype: str
        """
        return self._error_type

    @error_type.setter
    def error_type(self, error_type):
        """Sets the error_type of this UnprocessedCluster.


        :param error_type: The error_type of this UnprocessedCluster.
        :type error_type: str
        """

        self._error_type = error_type

    @property
    def error_message(self):
        """Gets the error_message of this UnprocessedCluster.


        :return: The error_message of this UnprocessedCluster.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this UnprocessedCluster.


        :param error_message: The error_message of this UnprocessedCluster.
        :type error_message: str
        """

        self._error_message = error_message
