# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateClusterRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name: str=None, node_type: str=None, parameter_group_name: str=None, description: str=None, num_shards: int=None, num_replicas_per_shard: int=None, subnet_group_name: str=None, security_group_ids: List=None, maintenance_window: str=None, port: int=None, sns_topic_arn: str=None, tls_enabled: bool=None, kms_key_id: str=None, snapshot_arns: List=None, snapshot_name: str=None, snapshot_retention_limit: int=None, tags: List=None, snapshot_window: str=None, acl_name: str=None, engine_version: str=None, auto_minor_version_upgrade: bool=None, data_tiering: bool=None):
        """CreateClusterRequest - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this CreateClusterRequest.
        :param node_type: The node_type of this CreateClusterRequest.
        :param parameter_group_name: The parameter_group_name of this CreateClusterRequest.
        :param description: The description of this CreateClusterRequest.
        :param num_shards: The num_shards of this CreateClusterRequest.
        :param num_replicas_per_shard: The num_replicas_per_shard of this CreateClusterRequest.
        :param subnet_group_name: The subnet_group_name of this CreateClusterRequest.
        :param security_group_ids: The security_group_ids of this CreateClusterRequest.
        :param maintenance_window: The maintenance_window of this CreateClusterRequest.
        :param port: The port of this CreateClusterRequest.
        :param sns_topic_arn: The sns_topic_arn of this CreateClusterRequest.
        :param tls_enabled: The tls_enabled of this CreateClusterRequest.
        :param kms_key_id: The kms_key_id of this CreateClusterRequest.
        :param snapshot_arns: The snapshot_arns of this CreateClusterRequest.
        :param snapshot_name: The snapshot_name of this CreateClusterRequest.
        :param snapshot_retention_limit: The snapshot_retention_limit of this CreateClusterRequest.
        :param tags: The tags of this CreateClusterRequest.
        :param snapshot_window: The snapshot_window of this CreateClusterRequest.
        :param acl_name: The acl_name of this CreateClusterRequest.
        :param engine_version: The engine_version of this CreateClusterRequest.
        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this CreateClusterRequest.
        :param data_tiering: The data_tiering of this CreateClusterRequest.
        """
        self.openapi_types = {
            'cluster_name': str,
            'node_type': str,
            'parameter_group_name': str,
            'description': str,
            'num_shards': int,
            'num_replicas_per_shard': int,
            'subnet_group_name': str,
            'security_group_ids': List,
            'maintenance_window': str,
            'port': int,
            'sns_topic_arn': str,
            'tls_enabled': bool,
            'kms_key_id': str,
            'snapshot_arns': List,
            'snapshot_name': str,
            'snapshot_retention_limit': int,
            'tags': List,
            'snapshot_window': str,
            'acl_name': str,
            'engine_version': str,
            'auto_minor_version_upgrade': bool,
            'data_tiering': bool
        }

        self.attribute_map = {
            'cluster_name': 'ClusterName',
            'node_type': 'NodeType',
            'parameter_group_name': 'ParameterGroupName',
            'description': 'Description',
            'num_shards': 'NumShards',
            'num_replicas_per_shard': 'NumReplicasPerShard',
            'subnet_group_name': 'SubnetGroupName',
            'security_group_ids': 'SecurityGroupIds',
            'maintenance_window': 'MaintenanceWindow',
            'port': 'Port',
            'sns_topic_arn': 'SnsTopicArn',
            'tls_enabled': 'TLSEnabled',
            'kms_key_id': 'KmsKeyId',
            'snapshot_arns': 'SnapshotArns',
            'snapshot_name': 'SnapshotName',
            'snapshot_retention_limit': 'SnapshotRetentionLimit',
            'tags': 'Tags',
            'snapshot_window': 'SnapshotWindow',
            'acl_name': 'ACLName',
            'engine_version': 'EngineVersion',
            'auto_minor_version_upgrade': 'AutoMinorVersionUpgrade',
            'data_tiering': 'DataTiering'
        }

        self._cluster_name = cluster_name
        self._node_type = node_type
        self._parameter_group_name = parameter_group_name
        self._description = description
        self._num_shards = num_shards
        self._num_replicas_per_shard = num_replicas_per_shard
        self._subnet_group_name = subnet_group_name
        self._security_group_ids = security_group_ids
        self._maintenance_window = maintenance_window
        self._port = port
        self._sns_topic_arn = sns_topic_arn
        self._tls_enabled = tls_enabled
        self._kms_key_id = kms_key_id
        self._snapshot_arns = snapshot_arns
        self._snapshot_name = snapshot_name
        self._snapshot_retention_limit = snapshot_retention_limit
        self._tags = tags
        self._snapshot_window = snapshot_window
        self._acl_name = acl_name
        self._engine_version = engine_version
        self._auto_minor_version_upgrade = auto_minor_version_upgrade
        self._data_tiering = data_tiering

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterRequest of this CreateClusterRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this CreateClusterRequest.


        :return: The cluster_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this CreateClusterRequest.


        :param cluster_name: The cluster_name of this CreateClusterRequest.
        :type cluster_name: str
        """
        if cluster_name is None:
            raise ValueError("Invalid value for `cluster_name`, must not be `None`")

        self._cluster_name = cluster_name

    @property
    def node_type(self):
        """Gets the node_type of this CreateClusterRequest.


        :return: The node_type of this CreateClusterRequest.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this CreateClusterRequest.


        :param node_type: The node_type of this CreateClusterRequest.
        :type node_type: str
        """
        if node_type is None:
            raise ValueError("Invalid value for `node_type`, must not be `None`")

        self._node_type = node_type

    @property
    def parameter_group_name(self):
        """Gets the parameter_group_name of this CreateClusterRequest.


        :return: The parameter_group_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._parameter_group_name

    @parameter_group_name.setter
    def parameter_group_name(self, parameter_group_name):
        """Sets the parameter_group_name of this CreateClusterRequest.


        :param parameter_group_name: The parameter_group_name of this CreateClusterRequest.
        :type parameter_group_name: str
        """

        self._parameter_group_name = parameter_group_name

    @property
    def description(self):
        """Gets the description of this CreateClusterRequest.


        :return: The description of this CreateClusterRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateClusterRequest.


        :param description: The description of this CreateClusterRequest.
        :type description: str
        """

        self._description = description

    @property
    def num_shards(self):
        """Gets the num_shards of this CreateClusterRequest.


        :return: The num_shards of this CreateClusterRequest.
        :rtype: int
        """
        return self._num_shards

    @num_shards.setter
    def num_shards(self, num_shards):
        """Sets the num_shards of this CreateClusterRequest.


        :param num_shards: The num_shards of this CreateClusterRequest.
        :type num_shards: int
        """

        self._num_shards = num_shards

    @property
    def num_replicas_per_shard(self):
        """Gets the num_replicas_per_shard of this CreateClusterRequest.


        :return: The num_replicas_per_shard of this CreateClusterRequest.
        :rtype: int
        """
        return self._num_replicas_per_shard

    @num_replicas_per_shard.setter
    def num_replicas_per_shard(self, num_replicas_per_shard):
        """Sets the num_replicas_per_shard of this CreateClusterRequest.


        :param num_replicas_per_shard: The num_replicas_per_shard of this CreateClusterRequest.
        :type num_replicas_per_shard: int
        """

        self._num_replicas_per_shard = num_replicas_per_shard

    @property
    def subnet_group_name(self):
        """Gets the subnet_group_name of this CreateClusterRequest.


        :return: The subnet_group_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._subnet_group_name

    @subnet_group_name.setter
    def subnet_group_name(self, subnet_group_name):
        """Sets the subnet_group_name of this CreateClusterRequest.


        :param subnet_group_name: The subnet_group_name of this CreateClusterRequest.
        :type subnet_group_name: str
        """

        self._subnet_group_name = subnet_group_name

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this CreateClusterRequest.


        :return: The security_group_ids of this CreateClusterRequest.
        :rtype: List
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this CreateClusterRequest.


        :param security_group_ids: The security_group_ids of this CreateClusterRequest.
        :type security_group_ids: List
        """

        self._security_group_ids = security_group_ids

    @property
    def maintenance_window(self):
        """Gets the maintenance_window of this CreateClusterRequest.


        :return: The maintenance_window of this CreateClusterRequest.
        :rtype: str
        """
        return self._maintenance_window

    @maintenance_window.setter
    def maintenance_window(self, maintenance_window):
        """Sets the maintenance_window of this CreateClusterRequest.


        :param maintenance_window: The maintenance_window of this CreateClusterRequest.
        :type maintenance_window: str
        """

        self._maintenance_window = maintenance_window

    @property
    def port(self):
        """Gets the port of this CreateClusterRequest.


        :return: The port of this CreateClusterRequest.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this CreateClusterRequest.


        :param port: The port of this CreateClusterRequest.
        :type port: int
        """

        self._port = port

    @property
    def sns_topic_arn(self):
        """Gets the sns_topic_arn of this CreateClusterRequest.


        :return: The sns_topic_arn of this CreateClusterRequest.
        :rtype: str
        """
        return self._sns_topic_arn

    @sns_topic_arn.setter
    def sns_topic_arn(self, sns_topic_arn):
        """Sets the sns_topic_arn of this CreateClusterRequest.


        :param sns_topic_arn: The sns_topic_arn of this CreateClusterRequest.
        :type sns_topic_arn: str
        """

        self._sns_topic_arn = sns_topic_arn

    @property
    def tls_enabled(self):
        """Gets the tls_enabled of this CreateClusterRequest.


        :return: The tls_enabled of this CreateClusterRequest.
        :rtype: bool
        """
        return self._tls_enabled

    @tls_enabled.setter
    def tls_enabled(self, tls_enabled):
        """Sets the tls_enabled of this CreateClusterRequest.


        :param tls_enabled: The tls_enabled of this CreateClusterRequest.
        :type tls_enabled: bool
        """

        self._tls_enabled = tls_enabled

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateClusterRequest.


        :return: The kms_key_id of this CreateClusterRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateClusterRequest.


        :param kms_key_id: The kms_key_id of this CreateClusterRequest.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def snapshot_arns(self):
        """Gets the snapshot_arns of this CreateClusterRequest.


        :return: The snapshot_arns of this CreateClusterRequest.
        :rtype: List
        """
        return self._snapshot_arns

    @snapshot_arns.setter
    def snapshot_arns(self, snapshot_arns):
        """Sets the snapshot_arns of this CreateClusterRequest.


        :param snapshot_arns: The snapshot_arns of this CreateClusterRequest.
        :type snapshot_arns: List
        """

        self._snapshot_arns = snapshot_arns

    @property
    def snapshot_name(self):
        """Gets the snapshot_name of this CreateClusterRequest.


        :return: The snapshot_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._snapshot_name

    @snapshot_name.setter
    def snapshot_name(self, snapshot_name):
        """Sets the snapshot_name of this CreateClusterRequest.


        :param snapshot_name: The snapshot_name of this CreateClusterRequest.
        :type snapshot_name: str
        """

        self._snapshot_name = snapshot_name

    @property
    def snapshot_retention_limit(self):
        """Gets the snapshot_retention_limit of this CreateClusterRequest.


        :return: The snapshot_retention_limit of this CreateClusterRequest.
        :rtype: int
        """
        return self._snapshot_retention_limit

    @snapshot_retention_limit.setter
    def snapshot_retention_limit(self, snapshot_retention_limit):
        """Sets the snapshot_retention_limit of this CreateClusterRequest.


        :param snapshot_retention_limit: The snapshot_retention_limit of this CreateClusterRequest.
        :type snapshot_retention_limit: int
        """

        self._snapshot_retention_limit = snapshot_retention_limit

    @property
    def tags(self):
        """Gets the tags of this CreateClusterRequest.


        :return: The tags of this CreateClusterRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateClusterRequest.


        :param tags: The tags of this CreateClusterRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def snapshot_window(self):
        """Gets the snapshot_window of this CreateClusterRequest.


        :return: The snapshot_window of this CreateClusterRequest.
        :rtype: str
        """
        return self._snapshot_window

    @snapshot_window.setter
    def snapshot_window(self, snapshot_window):
        """Sets the snapshot_window of this CreateClusterRequest.


        :param snapshot_window: The snapshot_window of this CreateClusterRequest.
        :type snapshot_window: str
        """

        self._snapshot_window = snapshot_window

    @property
    def acl_name(self):
        """Gets the acl_name of this CreateClusterRequest.


        :return: The acl_name of this CreateClusterRequest.
        :rtype: str
        """
        return self._acl_name

    @acl_name.setter
    def acl_name(self, acl_name):
        """Sets the acl_name of this CreateClusterRequest.


        :param acl_name: The acl_name of this CreateClusterRequest.
        :type acl_name: str
        """
        if acl_name is None:
            raise ValueError("Invalid value for `acl_name`, must not be `None`")

        self._acl_name = acl_name

    @property
    def engine_version(self):
        """Gets the engine_version of this CreateClusterRequest.


        :return: The engine_version of this CreateClusterRequest.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this CreateClusterRequest.


        :param engine_version: The engine_version of this CreateClusterRequest.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def auto_minor_version_upgrade(self):
        """Gets the auto_minor_version_upgrade of this CreateClusterRequest.


        :return: The auto_minor_version_upgrade of this CreateClusterRequest.
        :rtype: bool
        """
        return self._auto_minor_version_upgrade

    @auto_minor_version_upgrade.setter
    def auto_minor_version_upgrade(self, auto_minor_version_upgrade):
        """Sets the auto_minor_version_upgrade of this CreateClusterRequest.


        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this CreateClusterRequest.
        :type auto_minor_version_upgrade: bool
        """

        self._auto_minor_version_upgrade = auto_minor_version_upgrade

    @property
    def data_tiering(self):
        """Gets the data_tiering of this CreateClusterRequest.


        :return: The data_tiering of this CreateClusterRequest.
        :rtype: bool
        """
        return self._data_tiering

    @data_tiering.setter
    def data_tiering(self, data_tiering):
        """Sets the data_tiering of this CreateClusterRequest.


        :param data_tiering: The data_tiering of this CreateClusterRequest.
        :type data_tiering: bool
        """

        self._data_tiering = data_tiering
