# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeClustersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_name: str=None, max_results: int=None, next_token: str=None, show_shard_details: bool=None):
        """DescribeClustersRequest - a model defined in OpenAPI

        :param cluster_name: The cluster_name of this DescribeClustersRequest.
        :param max_results: The max_results of this DescribeClustersRequest.
        :param next_token: The next_token of this DescribeClustersRequest.
        :param show_shard_details: The show_shard_details of this DescribeClustersRequest.
        """
        self.openapi_types = {
            'cluster_name': str,
            'max_results': int,
            'next_token': str,
            'show_shard_details': bool
        }

        self.attribute_map = {
            'cluster_name': 'ClusterName',
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'show_shard_details': 'ShowShardDetails'
        }

        self._cluster_name = cluster_name
        self._max_results = max_results
        self._next_token = next_token
        self._show_shard_details = show_shard_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeClustersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeClustersRequest of this DescribeClustersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_name(self):
        """Gets the cluster_name of this DescribeClustersRequest.


        :return: The cluster_name of this DescribeClustersRequest.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this DescribeClustersRequest.


        :param cluster_name: The cluster_name of this DescribeClustersRequest.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def max_results(self):
        """Gets the max_results of this DescribeClustersRequest.


        :return: The max_results of this DescribeClustersRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeClustersRequest.


        :param max_results: The max_results of this DescribeClustersRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeClustersRequest.


        :return: The next_token of this DescribeClustersRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeClustersRequest.


        :param next_token: The next_token of this DescribeClustersRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def show_shard_details(self):
        """Gets the show_shard_details of this DescribeClustersRequest.


        :return: The show_shard_details of this DescribeClustersRequest.
        :rtype: bool
        """
        return self._show_shard_details

    @show_shard_details.setter
    def show_shard_details(self, show_shard_details):
        """Sets the show_shard_details of this DescribeClustersRequest.


        :param show_shard_details: The show_shard_details of this DescribeClustersRequest.
        :type show_shard_details: bool
        """

        self._show_shard_details = show_shard_details
