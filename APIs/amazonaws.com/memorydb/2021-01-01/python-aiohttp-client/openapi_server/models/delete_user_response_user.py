# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_authentication import UserAuthentication
from openapi_server import util


class DeleteUserResponseUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, status: str=None, access_string: str=None, acl_names: List=None, minimum_engine_version: str=None, authentication: UserAuthentication=None, arn: str=None):
        """DeleteUserResponseUser - a model defined in OpenAPI

        :param name: The name of this DeleteUserResponseUser.
        :param status: The status of this DeleteUserResponseUser.
        :param access_string: The access_string of this DeleteUserResponseUser.
        :param acl_names: The acl_names of this DeleteUserResponseUser.
        :param minimum_engine_version: The minimum_engine_version of this DeleteUserResponseUser.
        :param authentication: The authentication of this DeleteUserResponseUser.
        :param arn: The arn of this DeleteUserResponseUser.
        """
        self.openapi_types = {
            'name': str,
            'status': str,
            'access_string': str,
            'acl_names': List,
            'minimum_engine_version': str,
            'authentication': UserAuthentication,
            'arn': str
        }

        self.attribute_map = {
            'name': 'Name',
            'status': 'Status',
            'access_string': 'AccessString',
            'acl_names': 'ACLNames',
            'minimum_engine_version': 'MinimumEngineVersion',
            'authentication': 'Authentication',
            'arn': 'ARN'
        }

        self._name = name
        self._status = status
        self._access_string = access_string
        self._acl_names = acl_names
        self._minimum_engine_version = minimum_engine_version
        self._authentication = authentication
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteUserResponseUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteUserResponse_User of this DeleteUserResponseUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeleteUserResponseUser.


        :return: The name of this DeleteUserResponseUser.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeleteUserResponseUser.


        :param name: The name of this DeleteUserResponseUser.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this DeleteUserResponseUser.


        :return: The status of this DeleteUserResponseUser.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeleteUserResponseUser.


        :param status: The status of this DeleteUserResponseUser.
        :type status: str
        """

        self._status = status

    @property
    def access_string(self):
        """Gets the access_string of this DeleteUserResponseUser.


        :return: The access_string of this DeleteUserResponseUser.
        :rtype: str
        """
        return self._access_string

    @access_string.setter
    def access_string(self, access_string):
        """Sets the access_string of this DeleteUserResponseUser.


        :param access_string: The access_string of this DeleteUserResponseUser.
        :type access_string: str
        """

        self._access_string = access_string

    @property
    def acl_names(self):
        """Gets the acl_names of this DeleteUserResponseUser.


        :return: The acl_names of this DeleteUserResponseUser.
        :rtype: List
        """
        return self._acl_names

    @acl_names.setter
    def acl_names(self, acl_names):
        """Sets the acl_names of this DeleteUserResponseUser.


        :param acl_names: The acl_names of this DeleteUserResponseUser.
        :type acl_names: List
        """

        self._acl_names = acl_names

    @property
    def minimum_engine_version(self):
        """Gets the minimum_engine_version of this DeleteUserResponseUser.


        :return: The minimum_engine_version of this DeleteUserResponseUser.
        :rtype: str
        """
        return self._minimum_engine_version

    @minimum_engine_version.setter
    def minimum_engine_version(self, minimum_engine_version):
        """Sets the minimum_engine_version of this DeleteUserResponseUser.


        :param minimum_engine_version: The minimum_engine_version of this DeleteUserResponseUser.
        :type minimum_engine_version: str
        """

        self._minimum_engine_version = minimum_engine_version

    @property
    def authentication(self):
        """Gets the authentication of this DeleteUserResponseUser.


        :return: The authentication of this DeleteUserResponseUser.
        :rtype: UserAuthentication
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this DeleteUserResponseUser.


        :param authentication: The authentication of this DeleteUserResponseUser.
        :type authentication: UserAuthentication
        """

        self._authentication = authentication

    @property
    def arn(self):
        """Gets the arn of this DeleteUserResponseUser.


        :return: The arn of this DeleteUserResponseUser.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DeleteUserResponseUser.


        :param arn: The arn of this DeleteUserResponseUser.
        :type arn: str
        """

        self._arn = arn
