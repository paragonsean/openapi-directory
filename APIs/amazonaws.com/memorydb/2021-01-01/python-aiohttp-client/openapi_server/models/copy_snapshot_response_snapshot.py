# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_tiering_status import DataTieringStatus
from openapi_server.models.snapshot_cluster_configuration import SnapshotClusterConfiguration
from openapi_server import util


class CopySnapshotResponseSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, status: str=None, source: str=None, kms_key_id: str=None, arn: str=None, cluster_configuration: SnapshotClusterConfiguration=None, data_tiering: DataTieringStatus=None):
        """CopySnapshotResponseSnapshot - a model defined in OpenAPI

        :param name: The name of this CopySnapshotResponseSnapshot.
        :param status: The status of this CopySnapshotResponseSnapshot.
        :param source: The source of this CopySnapshotResponseSnapshot.
        :param kms_key_id: The kms_key_id of this CopySnapshotResponseSnapshot.
        :param arn: The arn of this CopySnapshotResponseSnapshot.
        :param cluster_configuration: The cluster_configuration of this CopySnapshotResponseSnapshot.
        :param data_tiering: The data_tiering of this CopySnapshotResponseSnapshot.
        """
        self.openapi_types = {
            'name': str,
            'status': str,
            'source': str,
            'kms_key_id': str,
            'arn': str,
            'cluster_configuration': SnapshotClusterConfiguration,
            'data_tiering': DataTieringStatus
        }

        self.attribute_map = {
            'name': 'Name',
            'status': 'Status',
            'source': 'Source',
            'kms_key_id': 'KmsKeyId',
            'arn': 'ARN',
            'cluster_configuration': 'ClusterConfiguration',
            'data_tiering': 'DataTiering'
        }

        self._name = name
        self._status = status
        self._source = source
        self._kms_key_id = kms_key_id
        self._arn = arn
        self._cluster_configuration = cluster_configuration
        self._data_tiering = data_tiering

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopySnapshotResponseSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopySnapshotResponse_Snapshot of this CopySnapshotResponseSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CopySnapshotResponseSnapshot.


        :return: The name of this CopySnapshotResponseSnapshot.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CopySnapshotResponseSnapshot.


        :param name: The name of this CopySnapshotResponseSnapshot.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this CopySnapshotResponseSnapshot.


        :return: The status of this CopySnapshotResponseSnapshot.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CopySnapshotResponseSnapshot.


        :param status: The status of this CopySnapshotResponseSnapshot.
        :type status: str
        """

        self._status = status

    @property
    def source(self):
        """Gets the source of this CopySnapshotResponseSnapshot.


        :return: The source of this CopySnapshotResponseSnapshot.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this CopySnapshotResponseSnapshot.


        :param source: The source of this CopySnapshotResponseSnapshot.
        :type source: str
        """

        self._source = source

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CopySnapshotResponseSnapshot.


        :return: The kms_key_id of this CopySnapshotResponseSnapshot.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CopySnapshotResponseSnapshot.


        :param kms_key_id: The kms_key_id of this CopySnapshotResponseSnapshot.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def arn(self):
        """Gets the arn of this CopySnapshotResponseSnapshot.


        :return: The arn of this CopySnapshotResponseSnapshot.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CopySnapshotResponseSnapshot.


        :param arn: The arn of this CopySnapshotResponseSnapshot.
        :type arn: str
        """

        self._arn = arn

    @property
    def cluster_configuration(self):
        """Gets the cluster_configuration of this CopySnapshotResponseSnapshot.


        :return: The cluster_configuration of this CopySnapshotResponseSnapshot.
        :rtype: SnapshotClusterConfiguration
        """
        return self._cluster_configuration

    @cluster_configuration.setter
    def cluster_configuration(self, cluster_configuration):
        """Sets the cluster_configuration of this CopySnapshotResponseSnapshot.


        :param cluster_configuration: The cluster_configuration of this CopySnapshotResponseSnapshot.
        :type cluster_configuration: SnapshotClusterConfiguration
        """

        self._cluster_configuration = cluster_configuration

    @property
    def data_tiering(self):
        """Gets the data_tiering of this CopySnapshotResponseSnapshot.


        :return: The data_tiering of this CopySnapshotResponseSnapshot.
        :rtype: DataTieringStatus
        """
        return self._data_tiering

    @data_tiering.setter
    def data_tiering(self, data_tiering):
        """Sets the data_tiering of this CopySnapshotResponseSnapshot.


        :param data_tiering: The data_tiering of this CopySnapshotResponseSnapshot.
        :type data_tiering: DataTieringStatus
        """

        self._data_tiering = data_tiering
