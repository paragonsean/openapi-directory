# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subnet_availability_zone import SubnetAvailabilityZone
from openapi_server import util


class Subnet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identifier: str=None, availability_zone: SubnetAvailabilityZone=None):
        """Subnet - a model defined in OpenAPI

        :param identifier: The identifier of this Subnet.
        :param availability_zone: The availability_zone of this Subnet.
        """
        self.openapi_types = {
            'identifier': str,
            'availability_zone': SubnetAvailabilityZone
        }

        self.attribute_map = {
            'identifier': 'Identifier',
            'availability_zone': 'AvailabilityZone'
        }

        self._identifier = identifier
        self._availability_zone = availability_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subnet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subnet of this Subnet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifier(self):
        """Gets the identifier of this Subnet.


        :return: The identifier of this Subnet.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this Subnet.


        :param identifier: The identifier of this Subnet.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def availability_zone(self):
        """Gets the availability_zone of this Subnet.


        :return: The availability_zone of this Subnet.
        :rtype: SubnetAvailabilityZone
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this Subnet.


        :param availability_zone: The availability_zone of this Subnet.
        :type availability_zone: SubnetAvailabilityZone
        """

        self._availability_zone = availability_zone
