# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopySnapshotRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_snapshot_name: str=None, target_snapshot_name: str=None, target_bucket: str=None, kms_key_id: str=None, tags: List=None):
        """CopySnapshotRequest - a model defined in OpenAPI

        :param source_snapshot_name: The source_snapshot_name of this CopySnapshotRequest.
        :param target_snapshot_name: The target_snapshot_name of this CopySnapshotRequest.
        :param target_bucket: The target_bucket of this CopySnapshotRequest.
        :param kms_key_id: The kms_key_id of this CopySnapshotRequest.
        :param tags: The tags of this CopySnapshotRequest.
        """
        self.openapi_types = {
            'source_snapshot_name': str,
            'target_snapshot_name': str,
            'target_bucket': str,
            'kms_key_id': str,
            'tags': List
        }

        self.attribute_map = {
            'source_snapshot_name': 'SourceSnapshotName',
            'target_snapshot_name': 'TargetSnapshotName',
            'target_bucket': 'TargetBucket',
            'kms_key_id': 'KmsKeyId',
            'tags': 'Tags'
        }

        self._source_snapshot_name = source_snapshot_name
        self._target_snapshot_name = target_snapshot_name
        self._target_bucket = target_bucket
        self._kms_key_id = kms_key_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopySnapshotRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopySnapshotRequest of this CopySnapshotRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_snapshot_name(self):
        """Gets the source_snapshot_name of this CopySnapshotRequest.


        :return: The source_snapshot_name of this CopySnapshotRequest.
        :rtype: str
        """
        return self._source_snapshot_name

    @source_snapshot_name.setter
    def source_snapshot_name(self, source_snapshot_name):
        """Sets the source_snapshot_name of this CopySnapshotRequest.


        :param source_snapshot_name: The source_snapshot_name of this CopySnapshotRequest.
        :type source_snapshot_name: str
        """
        if source_snapshot_name is None:
            raise ValueError("Invalid value for `source_snapshot_name`, must not be `None`")

        self._source_snapshot_name = source_snapshot_name

    @property
    def target_snapshot_name(self):
        """Gets the target_snapshot_name of this CopySnapshotRequest.


        :return: The target_snapshot_name of this CopySnapshotRequest.
        :rtype: str
        """
        return self._target_snapshot_name

    @target_snapshot_name.setter
    def target_snapshot_name(self, target_snapshot_name):
        """Sets the target_snapshot_name of this CopySnapshotRequest.


        :param target_snapshot_name: The target_snapshot_name of this CopySnapshotRequest.
        :type target_snapshot_name: str
        """
        if target_snapshot_name is None:
            raise ValueError("Invalid value for `target_snapshot_name`, must not be `None`")

        self._target_snapshot_name = target_snapshot_name

    @property
    def target_bucket(self):
        """Gets the target_bucket of this CopySnapshotRequest.


        :return: The target_bucket of this CopySnapshotRequest.
        :rtype: str
        """
        return self._target_bucket

    @target_bucket.setter
    def target_bucket(self, target_bucket):
        """Sets the target_bucket of this CopySnapshotRequest.


        :param target_bucket: The target_bucket of this CopySnapshotRequest.
        :type target_bucket: str
        """

        self._target_bucket = target_bucket

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CopySnapshotRequest.


        :return: The kms_key_id of this CopySnapshotRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CopySnapshotRequest.


        :param kms_key_id: The kms_key_id of this CopySnapshotRequest.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def tags(self):
        """Gets the tags of this CopySnapshotRequest.


        :return: The tags of this CopySnapshotRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CopySnapshotRequest.


        :param tags: The tags of this CopySnapshotRequest.
        :type tags: List
        """

        self._tags = tags
