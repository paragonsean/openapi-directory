# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_subnet_group_response_subnet_group import UpdateSubnetGroupResponseSubnetGroup
from openapi_server import util


class UpdateSubnetGroupResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet_group: UpdateSubnetGroupResponseSubnetGroup=None):
        """UpdateSubnetGroupResponse - a model defined in OpenAPI

        :param subnet_group: The subnet_group of this UpdateSubnetGroupResponse.
        """
        self.openapi_types = {
            'subnet_group': UpdateSubnetGroupResponseSubnetGroup
        }

        self.attribute_map = {
            'subnet_group': 'SubnetGroup'
        }

        self._subnet_group = subnet_group

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSubnetGroupResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSubnetGroupResponse of this UpdateSubnetGroupResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet_group(self):
        """Gets the subnet_group of this UpdateSubnetGroupResponse.


        :return: The subnet_group of this UpdateSubnetGroupResponse.
        :rtype: UpdateSubnetGroupResponseSubnetGroup
        """
        return self._subnet_group

    @subnet_group.setter
    def subnet_group(self, subnet_group):
        """Sets the subnet_group of this UpdateSubnetGroupResponse.


        :param subnet_group: The subnet_group of this UpdateSubnetGroupResponse.
        :type subnet_group: UpdateSubnetGroupResponseSubnetGroup
        """

        self._subnet_group = subnet_group
