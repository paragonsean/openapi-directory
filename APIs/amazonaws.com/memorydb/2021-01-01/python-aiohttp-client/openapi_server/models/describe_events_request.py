# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_type import SourceType
from openapi_server import util


class DescribeEventsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_name: str=None, source_type: SourceType=None, start_time: datetime=None, end_time: datetime=None, duration: int=None, max_results: int=None, next_token: str=None):
        """DescribeEventsRequest - a model defined in OpenAPI

        :param source_name: The source_name of this DescribeEventsRequest.
        :param source_type: The source_type of this DescribeEventsRequest.
        :param start_time: The start_time of this DescribeEventsRequest.
        :param end_time: The end_time of this DescribeEventsRequest.
        :param duration: The duration of this DescribeEventsRequest.
        :param max_results: The max_results of this DescribeEventsRequest.
        :param next_token: The next_token of this DescribeEventsRequest.
        """
        self.openapi_types = {
            'source_name': str,
            'source_type': SourceType,
            'start_time': datetime,
            'end_time': datetime,
            'duration': int,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'source_name': 'SourceName',
            'source_type': 'SourceType',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'duration': 'Duration',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._source_name = source_name
        self._source_type = source_type
        self._start_time = start_time
        self._end_time = end_time
        self._duration = duration
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEventsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEventsRequest of this DescribeEventsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_name(self):
        """Gets the source_name of this DescribeEventsRequest.


        :return: The source_name of this DescribeEventsRequest.
        :rtype: str
        """
        return self._source_name

    @source_name.setter
    def source_name(self, source_name):
        """Sets the source_name of this DescribeEventsRequest.


        :param source_name: The source_name of this DescribeEventsRequest.
        :type source_name: str
        """

        self._source_name = source_name

    @property
    def source_type(self):
        """Gets the source_type of this DescribeEventsRequest.


        :return: The source_type of this DescribeEventsRequest.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this DescribeEventsRequest.


        :param source_type: The source_type of this DescribeEventsRequest.
        :type source_type: SourceType
        """

        self._source_type = source_type

    @property
    def start_time(self):
        """Gets the start_time of this DescribeEventsRequest.


        :return: The start_time of this DescribeEventsRequest.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DescribeEventsRequest.


        :param start_time: The start_time of this DescribeEventsRequest.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this DescribeEventsRequest.


        :return: The end_time of this DescribeEventsRequest.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DescribeEventsRequest.


        :param end_time: The end_time of this DescribeEventsRequest.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def duration(self):
        """Gets the duration of this DescribeEventsRequest.


        :return: The duration of this DescribeEventsRequest.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this DescribeEventsRequest.


        :param duration: The duration of this DescribeEventsRequest.
        :type duration: int
        """

        self._duration = duration

    @property
    def max_results(self):
        """Gets the max_results of this DescribeEventsRequest.


        :return: The max_results of this DescribeEventsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeEventsRequest.


        :param max_results: The max_results of this DescribeEventsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeEventsRequest.


        :return: The next_token of this DescribeEventsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeEventsRequest.


        :param next_token: The next_token of this DescribeEventsRequest.
        :type next_token: str
        """

        self._next_token = next_token
