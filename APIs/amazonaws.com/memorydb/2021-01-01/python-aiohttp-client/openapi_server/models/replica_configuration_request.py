# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplicaConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replica_count: int=None):
        """ReplicaConfigurationRequest - a model defined in OpenAPI

        :param replica_count: The replica_count of this ReplicaConfigurationRequest.
        """
        self.openapi_types = {
            'replica_count': int
        }

        self.attribute_map = {
            'replica_count': 'ReplicaCount'
        }

        self._replica_count = replica_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplicaConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReplicaConfigurationRequest of this ReplicaConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replica_count(self):
        """Gets the replica_count of this ReplicaConfigurationRequest.


        :return: The replica_count of this ReplicaConfigurationRequest.
        :rtype: int
        """
        return self._replica_count

    @replica_count.setter
    def replica_count(self, replica_count):
        """Sets the replica_count of this ReplicaConfigurationRequest.


        :param replica_count: The replica_count of this ReplicaConfigurationRequest.
        :type replica_count: int
        """

        self._replica_count = replica_count
