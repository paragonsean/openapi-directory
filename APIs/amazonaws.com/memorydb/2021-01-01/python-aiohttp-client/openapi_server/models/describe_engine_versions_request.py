# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeEngineVersionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, engine_version: str=None, parameter_group_family: str=None, max_results: int=None, next_token: str=None, default_only: bool=None):
        """DescribeEngineVersionsRequest - a model defined in OpenAPI

        :param engine_version: The engine_version of this DescribeEngineVersionsRequest.
        :param parameter_group_family: The parameter_group_family of this DescribeEngineVersionsRequest.
        :param max_results: The max_results of this DescribeEngineVersionsRequest.
        :param next_token: The next_token of this DescribeEngineVersionsRequest.
        :param default_only: The default_only of this DescribeEngineVersionsRequest.
        """
        self.openapi_types = {
            'engine_version': str,
            'parameter_group_family': str,
            'max_results': int,
            'next_token': str,
            'default_only': bool
        }

        self.attribute_map = {
            'engine_version': 'EngineVersion',
            'parameter_group_family': 'ParameterGroupFamily',
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'default_only': 'DefaultOnly'
        }

        self._engine_version = engine_version
        self._parameter_group_family = parameter_group_family
        self._max_results = max_results
        self._next_token = next_token
        self._default_only = default_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEngineVersionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEngineVersionsRequest of this DescribeEngineVersionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def engine_version(self):
        """Gets the engine_version of this DescribeEngineVersionsRequest.


        :return: The engine_version of this DescribeEngineVersionsRequest.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DescribeEngineVersionsRequest.


        :param engine_version: The engine_version of this DescribeEngineVersionsRequest.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def parameter_group_family(self):
        """Gets the parameter_group_family of this DescribeEngineVersionsRequest.


        :return: The parameter_group_family of this DescribeEngineVersionsRequest.
        :rtype: str
        """
        return self._parameter_group_family

    @parameter_group_family.setter
    def parameter_group_family(self, parameter_group_family):
        """Sets the parameter_group_family of this DescribeEngineVersionsRequest.


        :param parameter_group_family: The parameter_group_family of this DescribeEngineVersionsRequest.
        :type parameter_group_family: str
        """

        self._parameter_group_family = parameter_group_family

    @property
    def max_results(self):
        """Gets the max_results of this DescribeEngineVersionsRequest.


        :return: The max_results of this DescribeEngineVersionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeEngineVersionsRequest.


        :param max_results: The max_results of this DescribeEngineVersionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeEngineVersionsRequest.


        :return: The next_token of this DescribeEngineVersionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeEngineVersionsRequest.


        :param next_token: The next_token of this DescribeEngineVersionsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def default_only(self):
        """Gets the default_only of this DescribeEngineVersionsRequest.


        :return: The default_only of this DescribeEngineVersionsRequest.
        :rtype: bool
        """
        return self._default_only

    @default_only.setter
    def default_only(self, default_only):
        """Sets the default_only of this DescribeEngineVersionsRequest.


        :param default_only: The default_only of this DescribeEngineVersionsRequest.
        :type default_only: bool
        """

        self._default_only = default_only
