# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SnapshotClusterConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, node_type: str=None, engine_version: str=None, maintenance_window: str=None, topic_arn: str=None, port: int=None, parameter_group_name: str=None, subnet_group_name: str=None, vpc_id: str=None, snapshot_retention_limit: int=None, snapshot_window: str=None, num_shards: int=None, shards: List=None):
        """SnapshotClusterConfiguration - a model defined in OpenAPI

        :param name: The name of this SnapshotClusterConfiguration.
        :param description: The description of this SnapshotClusterConfiguration.
        :param node_type: The node_type of this SnapshotClusterConfiguration.
        :param engine_version: The engine_version of this SnapshotClusterConfiguration.
        :param maintenance_window: The maintenance_window of this SnapshotClusterConfiguration.
        :param topic_arn: The topic_arn of this SnapshotClusterConfiguration.
        :param port: The port of this SnapshotClusterConfiguration.
        :param parameter_group_name: The parameter_group_name of this SnapshotClusterConfiguration.
        :param subnet_group_name: The subnet_group_name of this SnapshotClusterConfiguration.
        :param vpc_id: The vpc_id of this SnapshotClusterConfiguration.
        :param snapshot_retention_limit: The snapshot_retention_limit of this SnapshotClusterConfiguration.
        :param snapshot_window: The snapshot_window of this SnapshotClusterConfiguration.
        :param num_shards: The num_shards of this SnapshotClusterConfiguration.
        :param shards: The shards of this SnapshotClusterConfiguration.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'node_type': str,
            'engine_version': str,
            'maintenance_window': str,
            'topic_arn': str,
            'port': int,
            'parameter_group_name': str,
            'subnet_group_name': str,
            'vpc_id': str,
            'snapshot_retention_limit': int,
            'snapshot_window': str,
            'num_shards': int,
            'shards': List
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'node_type': 'NodeType',
            'engine_version': 'EngineVersion',
            'maintenance_window': 'MaintenanceWindow',
            'topic_arn': 'TopicArn',
            'port': 'Port',
            'parameter_group_name': 'ParameterGroupName',
            'subnet_group_name': 'SubnetGroupName',
            'vpc_id': 'VpcId',
            'snapshot_retention_limit': 'SnapshotRetentionLimit',
            'snapshot_window': 'SnapshotWindow',
            'num_shards': 'NumShards',
            'shards': 'Shards'
        }

        self._name = name
        self._description = description
        self._node_type = node_type
        self._engine_version = engine_version
        self._maintenance_window = maintenance_window
        self._topic_arn = topic_arn
        self._port = port
        self._parameter_group_name = parameter_group_name
        self._subnet_group_name = subnet_group_name
        self._vpc_id = vpc_id
        self._snapshot_retention_limit = snapshot_retention_limit
        self._snapshot_window = snapshot_window
        self._num_shards = num_shards
        self._shards = shards

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SnapshotClusterConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Snapshot_ClusterConfiguration of this SnapshotClusterConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this SnapshotClusterConfiguration.


        :return: The name of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SnapshotClusterConfiguration.


        :param name: The name of this SnapshotClusterConfiguration.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this SnapshotClusterConfiguration.


        :return: The description of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SnapshotClusterConfiguration.


        :param description: The description of this SnapshotClusterConfiguration.
        :type description: str
        """

        self._description = description

    @property
    def node_type(self):
        """Gets the node_type of this SnapshotClusterConfiguration.


        :return: The node_type of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this SnapshotClusterConfiguration.


        :param node_type: The node_type of this SnapshotClusterConfiguration.
        :type node_type: str
        """

        self._node_type = node_type

    @property
    def engine_version(self):
        """Gets the engine_version of this SnapshotClusterConfiguration.


        :return: The engine_version of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this SnapshotClusterConfiguration.


        :param engine_version: The engine_version of this SnapshotClusterConfiguration.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def maintenance_window(self):
        """Gets the maintenance_window of this SnapshotClusterConfiguration.


        :return: The maintenance_window of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._maintenance_window

    @maintenance_window.setter
    def maintenance_window(self, maintenance_window):
        """Sets the maintenance_window of this SnapshotClusterConfiguration.


        :param maintenance_window: The maintenance_window of this SnapshotClusterConfiguration.
        :type maintenance_window: str
        """

        self._maintenance_window = maintenance_window

    @property
    def topic_arn(self):
        """Gets the topic_arn of this SnapshotClusterConfiguration.


        :return: The topic_arn of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._topic_arn

    @topic_arn.setter
    def topic_arn(self, topic_arn):
        """Sets the topic_arn of this SnapshotClusterConfiguration.


        :param topic_arn: The topic_arn of this SnapshotClusterConfiguration.
        :type topic_arn: str
        """

        self._topic_arn = topic_arn

    @property
    def port(self):
        """Gets the port of this SnapshotClusterConfiguration.


        :return: The port of this SnapshotClusterConfiguration.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SnapshotClusterConfiguration.


        :param port: The port of this SnapshotClusterConfiguration.
        :type port: int
        """

        self._port = port

    @property
    def parameter_group_name(self):
        """Gets the parameter_group_name of this SnapshotClusterConfiguration.


        :return: The parameter_group_name of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._parameter_group_name

    @parameter_group_name.setter
    def parameter_group_name(self, parameter_group_name):
        """Sets the parameter_group_name of this SnapshotClusterConfiguration.


        :param parameter_group_name: The parameter_group_name of this SnapshotClusterConfiguration.
        :type parameter_group_name: str
        """

        self._parameter_group_name = parameter_group_name

    @property
    def subnet_group_name(self):
        """Gets the subnet_group_name of this SnapshotClusterConfiguration.


        :return: The subnet_group_name of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._subnet_group_name

    @subnet_group_name.setter
    def subnet_group_name(self, subnet_group_name):
        """Sets the subnet_group_name of this SnapshotClusterConfiguration.


        :param subnet_group_name: The subnet_group_name of this SnapshotClusterConfiguration.
        :type subnet_group_name: str
        """

        self._subnet_group_name = subnet_group_name

    @property
    def vpc_id(self):
        """Gets the vpc_id of this SnapshotClusterConfiguration.


        :return: The vpc_id of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this SnapshotClusterConfiguration.


        :param vpc_id: The vpc_id of this SnapshotClusterConfiguration.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def snapshot_retention_limit(self):
        """Gets the snapshot_retention_limit of this SnapshotClusterConfiguration.


        :return: The snapshot_retention_limit of this SnapshotClusterConfiguration.
        :rtype: int
        """
        return self._snapshot_retention_limit

    @snapshot_retention_limit.setter
    def snapshot_retention_limit(self, snapshot_retention_limit):
        """Sets the snapshot_retention_limit of this SnapshotClusterConfiguration.


        :param snapshot_retention_limit: The snapshot_retention_limit of this SnapshotClusterConfiguration.
        :type snapshot_retention_limit: int
        """

        self._snapshot_retention_limit = snapshot_retention_limit

    @property
    def snapshot_window(self):
        """Gets the snapshot_window of this SnapshotClusterConfiguration.


        :return: The snapshot_window of this SnapshotClusterConfiguration.
        :rtype: str
        """
        return self._snapshot_window

    @snapshot_window.setter
    def snapshot_window(self, snapshot_window):
        """Sets the snapshot_window of this SnapshotClusterConfiguration.


        :param snapshot_window: The snapshot_window of this SnapshotClusterConfiguration.
        :type snapshot_window: str
        """

        self._snapshot_window = snapshot_window

    @property
    def num_shards(self):
        """Gets the num_shards of this SnapshotClusterConfiguration.


        :return: The num_shards of this SnapshotClusterConfiguration.
        :rtype: int
        """
        return self._num_shards

    @num_shards.setter
    def num_shards(self, num_shards):
        """Sets the num_shards of this SnapshotClusterConfiguration.


        :param num_shards: The num_shards of this SnapshotClusterConfiguration.
        :type num_shards: int
        """

        self._num_shards = num_shards

    @property
    def shards(self):
        """Gets the shards of this SnapshotClusterConfiguration.


        :return: The shards of this SnapshotClusterConfiguration.
        :rtype: List
        """
        return self._shards

    @shards.setter
    def shards(self, shards):
        """Sets the shards of this SnapshotClusterConfiguration.


        :param shards: The shards of this SnapshotClusterConfiguration.
        :type shards: List
        """

        self._shards = shards
