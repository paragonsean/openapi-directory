# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acl_pending_changes import ACLPendingChanges
from openapi_server import util


class ACL(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, status: str=None, user_names: List=None, minimum_engine_version: str=None, pending_changes: ACLPendingChanges=None, clusters: List=None, arn: str=None):
        """ACL - a model defined in OpenAPI

        :param name: The name of this ACL.
        :param status: The status of this ACL.
        :param user_names: The user_names of this ACL.
        :param minimum_engine_version: The minimum_engine_version of this ACL.
        :param pending_changes: The pending_changes of this ACL.
        :param clusters: The clusters of this ACL.
        :param arn: The arn of this ACL.
        """
        self.openapi_types = {
            'name': str,
            'status': str,
            'user_names': List,
            'minimum_engine_version': str,
            'pending_changes': ACLPendingChanges,
            'clusters': List,
            'arn': str
        }

        self.attribute_map = {
            'name': 'Name',
            'status': 'Status',
            'user_names': 'UserNames',
            'minimum_engine_version': 'MinimumEngineVersion',
            'pending_changes': 'PendingChanges',
            'clusters': 'Clusters',
            'arn': 'ARN'
        }

        self._name = name
        self._status = status
        self._user_names = user_names
        self._minimum_engine_version = minimum_engine_version
        self._pending_changes = pending_changes
        self._clusters = clusters
        self._arn = arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ACL':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ACL of this ACL.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ACL.


        :return: The name of this ACL.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ACL.


        :param name: The name of this ACL.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this ACL.


        :return: The status of this ACL.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ACL.


        :param status: The status of this ACL.
        :type status: str
        """

        self._status = status

    @property
    def user_names(self):
        """Gets the user_names of this ACL.


        :return: The user_names of this ACL.
        :rtype: List
        """
        return self._user_names

    @user_names.setter
    def user_names(self, user_names):
        """Sets the user_names of this ACL.


        :param user_names: The user_names of this ACL.
        :type user_names: List
        """

        self._user_names = user_names

    @property
    def minimum_engine_version(self):
        """Gets the minimum_engine_version of this ACL.


        :return: The minimum_engine_version of this ACL.
        :rtype: str
        """
        return self._minimum_engine_version

    @minimum_engine_version.setter
    def minimum_engine_version(self, minimum_engine_version):
        """Sets the minimum_engine_version of this ACL.


        :param minimum_engine_version: The minimum_engine_version of this ACL.
        :type minimum_engine_version: str
        """

        self._minimum_engine_version = minimum_engine_version

    @property
    def pending_changes(self):
        """Gets the pending_changes of this ACL.


        :return: The pending_changes of this ACL.
        :rtype: ACLPendingChanges
        """
        return self._pending_changes

    @pending_changes.setter
    def pending_changes(self, pending_changes):
        """Sets the pending_changes of this ACL.


        :param pending_changes: The pending_changes of this ACL.
        :type pending_changes: ACLPendingChanges
        """

        self._pending_changes = pending_changes

    @property
    def clusters(self):
        """Gets the clusters of this ACL.


        :return: The clusters of this ACL.
        :rtype: List
        """
        return self._clusters

    @clusters.setter
    def clusters(self, clusters):
        """Sets the clusters of this ACL.


        :param clusters: The clusters of this ACL.
        :type clusters: List
        """

        self._clusters = clusters

    @property
    def arn(self):
        """Gets the arn of this ACL.


        :return: The arn of this ACL.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ACL.


        :param arn: The arn of this ACL.
        :type arn: str
        """

        self._arn = arn
