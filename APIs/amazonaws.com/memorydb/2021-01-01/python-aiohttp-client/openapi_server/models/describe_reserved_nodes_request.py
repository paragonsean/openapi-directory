# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeReservedNodesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reservation_id: str=None, reserved_nodes_offering_id: str=None, node_type: str=None, duration: str=None, offering_type: str=None, max_results: int=None, next_token: str=None):
        """DescribeReservedNodesRequest - a model defined in OpenAPI

        :param reservation_id: The reservation_id of this DescribeReservedNodesRequest.
        :param reserved_nodes_offering_id: The reserved_nodes_offering_id of this DescribeReservedNodesRequest.
        :param node_type: The node_type of this DescribeReservedNodesRequest.
        :param duration: The duration of this DescribeReservedNodesRequest.
        :param offering_type: The offering_type of this DescribeReservedNodesRequest.
        :param max_results: The max_results of this DescribeReservedNodesRequest.
        :param next_token: The next_token of this DescribeReservedNodesRequest.
        """
        self.openapi_types = {
            'reservation_id': str,
            'reserved_nodes_offering_id': str,
            'node_type': str,
            'duration': str,
            'offering_type': str,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'reservation_id': 'ReservationId',
            'reserved_nodes_offering_id': 'ReservedNodesOfferingId',
            'node_type': 'NodeType',
            'duration': 'Duration',
            'offering_type': 'OfferingType',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._reservation_id = reservation_id
        self._reserved_nodes_offering_id = reserved_nodes_offering_id
        self._node_type = node_type
        self._duration = duration
        self._offering_type = offering_type
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeReservedNodesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeReservedNodesRequest of this DescribeReservedNodesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reservation_id(self):
        """Gets the reservation_id of this DescribeReservedNodesRequest.


        :return: The reservation_id of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._reservation_id

    @reservation_id.setter
    def reservation_id(self, reservation_id):
        """Sets the reservation_id of this DescribeReservedNodesRequest.


        :param reservation_id: The reservation_id of this DescribeReservedNodesRequest.
        :type reservation_id: str
        """

        self._reservation_id = reservation_id

    @property
    def reserved_nodes_offering_id(self):
        """Gets the reserved_nodes_offering_id of this DescribeReservedNodesRequest.


        :return: The reserved_nodes_offering_id of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._reserved_nodes_offering_id

    @reserved_nodes_offering_id.setter
    def reserved_nodes_offering_id(self, reserved_nodes_offering_id):
        """Sets the reserved_nodes_offering_id of this DescribeReservedNodesRequest.


        :param reserved_nodes_offering_id: The reserved_nodes_offering_id of this DescribeReservedNodesRequest.
        :type reserved_nodes_offering_id: str
        """

        self._reserved_nodes_offering_id = reserved_nodes_offering_id

    @property
    def node_type(self):
        """Gets the node_type of this DescribeReservedNodesRequest.


        :return: The node_type of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this DescribeReservedNodesRequest.


        :param node_type: The node_type of this DescribeReservedNodesRequest.
        :type node_type: str
        """

        self._node_type = node_type

    @property
    def duration(self):
        """Gets the duration of this DescribeReservedNodesRequest.


        :return: The duration of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this DescribeReservedNodesRequest.


        :param duration: The duration of this DescribeReservedNodesRequest.
        :type duration: str
        """

        self._duration = duration

    @property
    def offering_type(self):
        """Gets the offering_type of this DescribeReservedNodesRequest.


        :return: The offering_type of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._offering_type

    @offering_type.setter
    def offering_type(self, offering_type):
        """Sets the offering_type of this DescribeReservedNodesRequest.


        :param offering_type: The offering_type of this DescribeReservedNodesRequest.
        :type offering_type: str
        """

        self._offering_type = offering_type

    @property
    def max_results(self):
        """Gets the max_results of this DescribeReservedNodesRequest.


        :return: The max_results of this DescribeReservedNodesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeReservedNodesRequest.


        :param max_results: The max_results of this DescribeReservedNodesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeReservedNodesRequest.


        :return: The next_token of this DescribeReservedNodesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeReservedNodesRequest.


        :param next_token: The next_token of this DescribeReservedNodesRequest.
        :type next_token: str
        """

        self._next_token = next_token
