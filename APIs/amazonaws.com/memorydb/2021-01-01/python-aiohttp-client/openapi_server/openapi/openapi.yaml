openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "MemoryDB for Redis is a fully managed, Redis-compatible, in-memory\
    \ database that delivers ultra-fast performance and Multi-AZ durability for modern\
    \ applications built using microservices architectures. MemoryDB stores the entire\
    \ database in-memory, enabling low latency and high throughput data access. It\
    \ is compatible with Redis, a popular open source data store, enabling you to\
    \ leverage Redisâ€™ flexible and friendly data structures, APIs, and commands."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon MemoryDB
  version: 2021-01-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: memorydb
  x-aws-signingName: memorydb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/memorydb-2021-01-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/memory-db/
servers:
- description: The Amazon MemoryDB multi-region endpoint
  url: "http://memory-db.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon MemoryDB multi-region endpoint
  url: "https://memory-db.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon MemoryDB endpoint for China (Beijing) and China (Ningxia)
  url: "http://memory-db.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon MemoryDB endpoint for China (Beijing) and China (Ningxia)
  url: "https://memory-db.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AmazonMemoryDB.BatchUpdateCluster:
    post:
      description: "Apply the service update to a list of clusters supplied. For more\
        \ information on service updates and applying them, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/managing-updates.html#applying-updates\"\
        >Applying the service updates</a>."
      operationId: batch_update_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.BatchUpdateCluster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateClusterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'
          description: ServiceUpdateNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CopySnapshot:
    post:
      description: Makes a copy of an existing snapshot.
      operationId: copy_snapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CopySnapshot
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopySnapshotRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySnapshotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateACL:
    post:
      description: "Creates an Access Control List. For more information, see <a href=\"\
        https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\
        >Authenticating users with Access Contol Lists (ACLs)</a>."
      operationId: create_acl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateACL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateACLResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLAlreadyExistsFault'
          description: ACLAlreadyExistsFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLQuotaExceededFault'
          description: ACLQuotaExceededFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateCluster:
    post:
      description: Creates a cluster. All nodes in the cluster run the same protocol-compliant
        engine software.
      operationId: create_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateCluster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
          description: ClusterAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
          description: InsufficientClusterCapacityFault
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardsPerClusterQuotaExceededFault'
          description: ShardsPerClusterQuotaExceededFault
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCredentialsException'
          description: InvalidCredentialsException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidACLStateFault'
          description: InvalidACLStateFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateParameterGroup:
    post:
      description: "Creates a new MemoryDB parameter group. A parameter group is a\
        \ collection of parameters and their values that are applied to all of the\
        \ nodes in any cluster. For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/parametergroups.html\"\
        >Configuring engine parameters using parameter groups</a>. "
      operationId: create_parameter_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateParameterGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParameterGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateParameterGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupQuotaExceededFault'
          description: ParameterGroupQuotaExceededFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupAlreadyExistsFault'
          description: ParameterGroupAlreadyExistsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
          description: InvalidParameterGroupStateFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateSnapshot:
    post:
      description: Creates a copy of an entire cluster at a specific moment in time.
      operationId: create_snapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateSnapshot
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateSubnetGroup:
    post:
      description: "Creates a subnet group. A subnet group is a collection of subnets\
        \ (typically private) that you can designate for your clusters running in\
        \ an Amazon Virtual Private Cloud (VPC) environment. When you create a cluster\
        \ in an Amazon VPC, you must specify a subnet group. MemoryDB uses that subnet\
        \ group to choose a subnet and IP addresses within that subnet to associate\
        \ with your nodes. For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/subnetgroups.html\"\
        >Subnets and subnet groups</a>."
      operationId: create_subnet_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateSubnetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubnetGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubnetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupAlreadyExistsFault'
          description: SubnetGroupAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupQuotaExceededFault'
          description: SubnetGroupQuotaExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetQuotaExceededFault'
          description: SubnetQuotaExceededFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.CreateUser:
    post:
      description: "Creates a MemoryDB user. For more information, see <a href=\"\
        https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\
        >Authenticating users with Access Contol Lists (ACLs)</a>."
      operationId: create_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.CreateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAlreadyExistsFault'
          description: UserAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuotaExceededFault'
          description: UserQuotaExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteACL:
    post:
      description: "Deletes an Access Control List. The ACL must first be disassociated\
        \ from the cluster before it can be deleted. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\
        >Authenticating users with Access Contol Lists (ACLs)</a>."
      operationId: delete_acl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteACL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteACLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteACLResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidACLStateFault'
          description: InvalidACLStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteCluster:
    post:
      description: Deletes a cluster. It also deletes all associated nodes and node
        endpoints
      operationId: delete_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteCluster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'
          description: SnapshotAlreadyExistsFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteParameterGroup:
    post:
      description: Deletes the specified parameter group. You cannot delete a parameter
        group if it is associated with any clusters. You cannot delete the default
        parameter groups in your account.
      operationId: delete_parameter_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteParameterGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParameterGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParameterGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
          description: InvalidParameterGroupStateFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteSnapshot:
    post:
      description: "Deletes an existing snapshot. When you receive a successful response\
        \ from this operation, MemoryDB immediately begins deleting the snapshot;\
        \ you cannot cancel or revert this operation."
      operationId: delete_snapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteSnapshot
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSnapshotStateFault'
          description: InvalidSnapshotStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteSubnetGroup:
    post:
      description: Deletes a subnet group. You cannot delete a default subnet group
        or one that is associated with any clusters.
      operationId: delete_subnet_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteSubnetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSubnetGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubnetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupInUseFault'
          description: SubnetGroupInUseFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DeleteUser:
    post:
      description: Deletes a user. The user will be removed from all ACLs and in turn
        removed from all clusters.
      operationId: delete_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DeleteUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeACLs:
    post:
      description: Returns a list of ACLs
      operationId: describe_acls
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeACLs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeACLsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeACLsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeClusters:
    post:
      description: "Returns information about all provisioned clusters if no cluster\
        \ identifier is specified, or about a specific cluster if a cluster name is\
        \ supplied."
      operationId: describe_clusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeClusters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClustersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClustersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeEngineVersions:
    post:
      description: Returns a list of the available Redis engine versions.
      operationId: describe_engine_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeEngineVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEngineVersionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEngineVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeEvents:
    post:
      description: "Returns events related to clusters, security groups, and parameter\
        \ groups. You can obtain events specific to a particular cluster, security\
        \ group, or parameter group by providing the name as a parameter. By default,\
        \ only the events occurring within the last hour are returned; however, you\
        \ can retrieve up to 14 days' worth of events if necessary."
      operationId: describe_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeParameterGroups:
    post:
      description: "Returns a list of parameter group descriptions. If a parameter\
        \ group name is specified, the list contains only the descriptions for that\
        \ group."
      operationId: describe_parameter_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeParameterGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParameterGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParameterGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeParameters:
    post:
      description: Returns the detailed parameter list for a particular parameter
        group.
      operationId: describe_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParametersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParametersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeReservedNodes:
    post:
      description: "Returns information about reserved nodes for this account, or\
        \ about a specified reserved node."
      operationId: describe_reserved_nodes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeReservedNodes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedNodesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
          description: ReservedNodeNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeReservedNodesOfferings:
    post:
      description: Lists available reserved node offerings.
      operationId: describe_reserved_nodes_offerings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeReservedNodesOfferings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodesOfferingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedNodesOfferingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNodesOfferingNotFoundFault'
          description: ReservedNodesOfferingNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeServiceUpdates:
    post:
      description: Returns details of the service updates
      operationId: describe_service_updates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeServiceUpdates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServiceUpdatesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServiceUpdatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeSnapshots:
    post:
      description: "Returns information about cluster snapshots. By default, DescribeSnapshots\
        \ lists all of your snapshots; it can optionally describe a single snapshot,\
        \ or just the snapshots associated with a particular cluster."
      operationId: describe_snapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeSnapshots
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSnapshotsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeSubnetGroups:
    post:
      description: "Returns a list of subnet group descriptions. If a subnet group\
        \ name is specified, the list contains only the description of that group."
      operationId: describe_subnet_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeSubnetGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSubnetGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSubnetGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.DescribeUsers:
    post:
      description: Returns a list of users.
      operationId: describe_users
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.DescribeUsers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUsersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.FailoverShard:
    post:
      description: "Used to failover a shard. This API is designed for testing the\
        \ behavior of your application in case of MemoryDB failover. It is not designed\
        \ to be used as a production-level tool for initiating a failover to overcome\
        \ a problem you may have with the cluster. Moreover, in certain conditions\
        \ such as large scale operational events, Amazon may block this API. "
      operationId: failover_shard
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.FailoverShard
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverShardRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailoverShardResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'
          description: APICallRateForCustomerExceededFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardNotFoundFault'
          description: ShardNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestFailoverNotAvailableFault'
          description: TestFailoverNotAvailableFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.ListAllowedNodeTypeUpdates:
    post:
      description: "Lists all available node types that you can scale to from your\
        \ cluster's current node type. When you use the UpdateCluster operation to\
        \ scale your cluster, the value of the NodeType parameter must be one of the\
        \ node types returned by this operation."
      operationId: list_allowed_node_type_updates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.ListAllowedNodeTypeUpdates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAllowedNodeTypeUpdatesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllowedNodeTypeUpdatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.ListTags:
    post:
      description: "Lists all tags currently on a named resource. A tag is a key-value\
        \ pair where the key and value are case-sensitive. You can use tags to categorize\
        \ and track your MemoryDB resources. For more information, see <a href=\"\
        https://docs.aws.amazon.com/MemoryDB/latest/devguide/Tagging-Resources.html\"\
        >Tagging your MemoryDB resources</a> "
      operationId: list_tags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.ListTags
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.PurchaseReservedNodesOffering:
    post:
      description: Allows you to purchase a reserved node offering. Reserved nodes
        are not eligible for cancellation and are non-refundable.
      operationId: purchase_reserved_nodes_offering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.PurchaseReservedNodesOffering
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReservedNodesOfferingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReservedNodesOfferingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNodesOfferingNotFoundFault'
          description: ReservedNodesOfferingNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
          description: ReservedNodeAlreadyExistsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservedNodeQuotaExceededFault'
          description: ReservedNodeQuotaExceededFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.ResetParameterGroup:
    post:
      description: "Modifies the parameters of a parameter group to the engine or\
        \ system default value. You can reset specific parameters by submitting a\
        \ list of parameter names. To reset the entire parameter group, specify the\
        \ AllParameters and ParameterGroupName parameters."
      operationId: reset_parameter_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.ResetParameterGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetParameterGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetParameterGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
          description: InvalidParameterGroupStateFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.TagResource:
    post:
      description: "<p>A tag is a key-value pair where the key and value are case-sensitive.\
        \ You can use tags to categorize and track all your MemoryDB resources. When\
        \ you add or remove tags on clusters, those actions will be replicated to\
        \ all nodes in the cluster. For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/iam.resourcelevelpermissions.html\"\
        >Resource-level permissions</a>.</p> <p>For example, you can use cost-allocation\
        \ tags to your MemoryDB resources, Amazon generates a cost allocation report\
        \ as a comma-separated value (CSV) file with your usage and costs aggregated\
        \ by your tags. You can apply tags that represent business categories (such\
        \ as cost centers, application names, or owners) to organize your costs across\
        \ multiple services. For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging.html\"\
        >Using Cost Allocation Tags</a>.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
          description: TagQuotaPerResourceExceeded
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UntagResource:
    post:
      description: Use this operation to remove tags on a resource
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotNotFoundFault'
          description: SnapshotNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
          description: InvalidARNFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
          description: TagNotFoundFault
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UpdateACL:
    post:
      description: Changes the list of users that belong to the Access Control List.
      operationId: update_acl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UpdateACL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateACLRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateACLResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateUserNameFault'
          description: DuplicateUserNameFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultUserRequired'
          description: DefaultUserRequired
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidACLStateFault'
          description: InvalidACLStateFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UpdateCluster:
    post:
      description: Modifies the settings for a cluster. You can use this operation
        to change one or more cluster configuration settings by specifying the settings
        and the new values.
      operationId: update_cluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UpdateCluster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
          description: ClusterNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
          description: InvalidClusterStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNodeStateFault'
          description: InvalidNodeStateFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKMSKeyFault'
          description: InvalidKMSKeyFault
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
          description: NodeQuotaForClusterExceededFault
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
          description: ClusterQuotaForCustomerExceededFault
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardsPerClusterQuotaExceededFault'
          description: ShardsPerClusterQuotaExceededFault
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
          description: NodeQuotaForCustomerExceededFault
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoOperationFault'
          description: NoOperationFault
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidACLStateFault'
          description: InvalidACLStateFault
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLNotFoundFault'
          description: ACLNotFoundFault
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "495":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UpdateParameterGroup:
    post:
      description: Updates the parameters of a parameter group. You can modify up
        to 20 parameters in a single request by submitting a list parameter name and
        value pairs.
      operationId: update_parameter_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UpdateParameterGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParameterGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateParameterGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
          description: ParameterGroupNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
          description: InvalidParameterGroupStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UpdateSubnetGroup:
    post:
      description: "Updates a subnet group. For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/ubnetGroups.Modifying.html\"\
        >Updating a subnet group</a> "
      operationId: update_subnet_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UpdateSubnetGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubnetGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubnetGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
          description: SubnetGroupNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetQuotaExceededFault'
          description: SubnetQuotaExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
          description: SubnetInUse
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'
          description: ServiceLinkedRoleNotFoundFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetNotAllowedFault'
          description: SubnetNotAllowedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonMemoryDB.UpdateUser:
    post:
      description: Changes user password(s) and/or access string.
      operationId: update_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonMemoryDB.UpdateUser
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundFault'
          description: UserNotFoundFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUserStateFault'
          description: InvalidUserStateFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
          description: InvalidParameterCombinationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchUpdateClusterResponse:
      example:
        ProcessedClusters: ""
        UnprocessedClusters: ""
      properties:
        ProcessedClusters:
          allOf:
          - $ref: '#/components/schemas/ClusterList'
          - description: The list of clusters that have been updated.
          title: ProcessedClusters
        UnprocessedClusters:
          allOf:
          - $ref: '#/components/schemas/UnprocessedClusterList'
          - description: The list of clusters where updates have not been applied.
          title: UnprocessedClusters
      title: BatchUpdateClusterResponse
      type: object
    BatchUpdateClusterRequest:
      example:
        ClusterNames: ""
        ServiceUpdate:
          ServiceUpdateNameToApply: ""
      properties:
        ClusterNames:
          allOf:
          - $ref: '#/components/schemas/ClusterNameList'
          - description: The cluster names to apply the updates.
          title: ClusterNames
        ServiceUpdate:
          $ref: '#/components/schemas/BatchUpdateClusterRequest_ServiceUpdate'
      required:
      - ClusterNames
      title: BatchUpdateClusterRequest
      type: object
    ServiceUpdateNotFoundFault: {}
    InvalidParameterValueException: {}
    CopySnapshotResponse:
      example:
        Snapshot:
          Status: ""
          DataTiering: ""
          KmsKeyId: ""
          ClusterConfiguration:
            Description: ""
            EngineVersion: ""
            TopicArn: ""
            ParameterGroupName: ""
            Port: ""
            SubnetGroupName: ""
            Name: ""
            NumShards: ""
            SnapshotWindow: ""
            SnapshotRetentionLimit: ""
            VpcId: ""
            NodeType: ""
            MaintenanceWindow: ""
            Shards: ""
          ARN: ""
          Source: ""
          Name: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/CopySnapshotResponse_Snapshot'
      title: CopySnapshotResponse
      type: object
    CopySnapshotRequest:
      example:
        KmsKeyId: ""
        SourceSnapshotName: ""
        TargetSnapshotName: ""
        TargetBucket: ""
        Tags: ""
      properties:
        SourceSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of an existing snapshot from which to make a copy.
          title: SourceSnapshotName
        TargetSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A name for the snapshot copy. MemoryDB does not permit overwriting\
              \ a snapshot, therefore this name must be unique within its context\
              \ - MemoryDB or an Amazon S3 bucket if exporting."
          title: TargetSnapshotName
        TargetBucket:
          allOf:
          - $ref: '#/components/schemas/TargetBucket'
          - description: "The Amazon S3 bucket to which the snapshot is exported.\
              \ This parameter is used only when exporting a snapshot for external\
              \ access. When using this parameter to export a snapshot, be sure MemoryDB\
              \ has the needed permissions to this S3 bucket. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/snapshots-exporting.html\"\
              >Step 2: Grant MemoryDB Access to Your Amazon S3 Bucket</a>. "
          title: TargetBucket
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: The ID of the KMS key used to encrypt the target snapshot.
          title: KmsKeyId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - SourceSnapshotName
      - TargetSnapshotName
      title: CopySnapshotRequest
      type: object
    SnapshotAlreadyExistsFault: {}
    SnapshotNotFoundFault: {}
    SnapshotQuotaExceededFault: {}
    InvalidSnapshotStateFault: {}
    ServiceLinkedRoleNotFoundFault: {}
    InvalidParameterCombinationException: {}
    TagQuotaPerResourceExceeded: {}
    CreateACLResponse:
      example:
        ACL:
          Status: ""
          PendingChanges:
            UserNamesToRemove: ""
            UserNamesToAdd: ""
          Clusters: ""
          MinimumEngineVersion: ""
          UserNames: ""
          ARN: ""
          Name: ""
      properties:
        ACL:
          $ref: '#/components/schemas/CreateACLResponse_ACL'
      title: CreateACLResponse
      type: object
    CreateACLRequest:
      example:
        ACLName: ""
        UserNames: ""
        Tags: ""
      properties:
        ACLName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Access Control List.
          title: ACLName
        UserNames:
          allOf:
          - $ref: '#/components/schemas/UserNameListInput'
          - description: The list of users that belong to the Access Control List.
          title: UserNames
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - ACLName
      title: CreateACLRequest
      type: object
    UserNotFoundFault: {}
    DuplicateUserNameFault: {}
    ACLAlreadyExistsFault: {}
    DefaultUserRequired: {}
    ACLQuotaExceededFault: {}
    CreateClusterResponse:
      example:
        Cluster:
          SecurityGroups: ""
          Description: ""
          ParameterGroupName: ""
          ACLName: ""
          Name: ""
          NumberOfShards: ""
          TLSEnabled: ""
          AvailabilityMode: ""
          PendingUpdates:
            Resharding:
              SlotMigration:
                ProgressPercentage: ""
            ACLs:
              ACLToApply: ""
            ServiceUpdates: ""
          ParameterGroupStatus: ""
          SnsTopicArn: ""
          Status: ""
          EngineVersion: ""
          KmsKeyId: ""
          SnsTopicStatus: ""
          SubnetGroupName: ""
          AutoMinorVersionUpgrade: ""
          ClusterEndpoint:
            Address: ""
            Port: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          DataTiering: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
          ARN: ""
          EnginePatchVersion: ""
      properties:
        Cluster:
          $ref: '#/components/schemas/CreateClusterResponse_Cluster'
      title: CreateClusterResponse
      type: object
    CreateClusterRequest:
      example:
        NumReplicasPerShard: ""
        Description: ""
        EngineVersion: ""
        KmsKeyId: ""
        ParameterGroupName: ""
        SnapshotArns: ""
        SubnetGroupName: ""
        Port: ""
        ACLName: ""
        AutoMinorVersionUpgrade: ""
        SecurityGroupIds: ""
        SnapshotName: ""
        NumShards: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        DataTiering: ""
        TLSEnabled: ""
        NodeType: ""
        ClusterName: ""
        MaintenanceWindow: ""
        SnsTopicArn: ""
        Tags: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster. This value must be unique as it
              also serves as the cluster identifier.
          title: ClusterName
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The compute and memory capacity of the nodes in the cluster.
          title: NodeType
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group associated with the cluster.
          title: ParameterGroupName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An optional description of the cluster.
          title: Description
        NumShards:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: 'The number of shards the cluster will contain. The default
              value is 1. '
          title: NumShards
        NumReplicasPerShard:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: 'The number of replicas to apply to each shard. The default
              value is 1. The maximum is 5. '
          title: NumReplicasPerShard
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group to be used for the cluster.
          title: SubnetGroupName
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: A list of security group names to associate with this cluster.
          title: SecurityGroupIds
        MaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
          title: MaintenanceWindow
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port number on which each of the nodes accepts connections.
          title: Port
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the Amazon Simple Notification
              Service (SNS) topic to which notifications are sent.
          title: SnsTopicArn
        TLSEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag to enable in-transit encryption on the cluster.
          title: TLSEnabled
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the cluster.
          title: KmsKeyId
        SnapshotArns:
          allOf:
          - $ref: '#/components/schemas/SnapshotArnsList'
          - description: A list of Amazon Resource Names (ARN) that uniquely identify
              the RDB snapshot files stored in Amazon S3. The snapshot files are used
              to populate the new cluster. The Amazon S3 object name in the ARN cannot
              contain any commas.
          title: SnapshotArns
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a snapshot from which to restore data into the
              new cluster. The snapshot status changes to restoring while the new
              cluster is being created.
          title: SnapshotName
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The number of days for which MemoryDB retains automatic\
              \ snapshots before deleting them. For example, if you set SnapshotRetentionLimit\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted."
          title: SnapshotRetentionLimit
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. Tags are comma-separated\
              \ key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include\
              \ multiple tags as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey,\
              \ Value=mySecondKeyValue."
          title: Tags
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range (in UTC) during which MemoryDB begins\
              \ taking a daily snapshot of your shard.</p> <p> Example: 05:00-09:00</p>\
              \ <p> If you do not specify this parameter, MemoryDB automatically chooses\
              \ an appropriate time range.</p>"
          title: SnapshotWindow
        ACLName:
          allOf:
          - $ref: '#/components/schemas/ACLName'
          - description: The name of the Access Control List to associate with the
              cluster.
          title: ACLName
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the Redis engine to be used for the
              cluster.
          title: EngineVersion
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "When set to true, the cluster will automatically receive\
              \ minor engine version upgrades after launch."
          title: AutoMinorVersionUpgrade
        DataTiering:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ clusters using the r6gd node type. This parameter must be set when\
              \ using r6gd nodes. For more information, see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html\"\
              >Data tiering</a>."
          title: DataTiering
      required:
      - ACLName
      - ClusterName
      - NodeType
      title: CreateClusterRequest
      type: object
    ClusterAlreadyExistsFault: {}
    SubnetGroupNotFoundFault: {}
    ClusterQuotaForCustomerExceededFault: {}
    NodeQuotaForClusterExceededFault: {}
    NodeQuotaForCustomerExceededFault: {}
    ParameterGroupNotFoundFault: {}
    InsufficientClusterCapacityFault: {}
    InvalidVPCNetworkStateFault: {}
    ShardsPerClusterQuotaExceededFault: {}
    InvalidCredentialsException: {}
    ACLNotFoundFault: {}
    InvalidACLStateFault: {}
    CreateParameterGroupResponse:
      example:
        ParameterGroup:
          Description: ""
          Family: ""
          ARN: ""
          Name: ""
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/CreateParameterGroupResponse_ParameterGroup'
      title: CreateParameterGroupResponse
      type: object
    CreateParameterGroupRequest:
      example:
        Description: ""
        ParameterGroupName: ""
        Family: ""
        Tags: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group.
          title: ParameterGroupName
        Family:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group family that the parameter
              group can be used with.
          title: Family
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An optional description of the parameter group.
          title: Description
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - Family
      - ParameterGroupName
      title: CreateParameterGroupRequest
      type: object
    ParameterGroupQuotaExceededFault: {}
    ParameterGroupAlreadyExistsFault: {}
    InvalidParameterGroupStateFault: {}
    CreateSnapshotResponse:
      example:
        Snapshot:
          Status: ""
          DataTiering: ""
          KmsKeyId: ""
          ClusterConfiguration:
            Description: ""
            EngineVersion: ""
            TopicArn: ""
            ParameterGroupName: ""
            Port: ""
            SubnetGroupName: ""
            Name: ""
            NumShards: ""
            SnapshotWindow: ""
            SnapshotRetentionLimit: ""
            VpcId: ""
            NodeType: ""
            MaintenanceWindow: ""
            Shards: ""
          ARN: ""
          Source: ""
          Name: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/CreateSnapshotResponse_Snapshot'
      title: CreateSnapshotResponse
      type: object
    CreateSnapshotRequest:
      example:
        KmsKeyId: ""
        ClusterName: ""
        SnapshotName: ""
        Tags: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The snapshot is created from this cluster.
          title: ClusterName
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A name for the snapshot being created.
          title: SnapshotName
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
          title: KmsKeyId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - ClusterName
      - SnapshotName
      title: CreateSnapshotRequest
      type: object
    ClusterNotFoundFault: {}
    InvalidClusterStateFault: {}
    CreateSubnetGroupResponse:
      example:
        SubnetGroup:
          Subnets: ""
          Description: ""
          VpcId: ""
          ARN: ""
          Name: ""
      properties:
        SubnetGroup:
          $ref: '#/components/schemas/CreateSubnetGroupResponse_SubnetGroup'
      title: CreateSubnetGroupResponse
      type: object
    CreateSubnetGroupRequest:
      example:
        Description: ""
        SubnetGroupName: ""
        SubnetIds: ""
        Tags: ""
      properties:
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group.
          title: SubnetGroupName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the subnet group.
          title: Description
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: A list of VPC subnet IDs for the subnet group.
          title: SubnetIds
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - SubnetGroupName
      - SubnetIds
      title: CreateSubnetGroupRequest
      type: object
    SubnetGroupAlreadyExistsFault: {}
    SubnetGroupQuotaExceededFault: {}
    SubnetQuotaExceededFault: {}
    InvalidSubnet: {}
    SubnetNotAllowedFault: {}
    CreateUserResponse:
      example:
        User:
          Status: ""
          AccessString: ""
          Authentication:
            Type: ""
            PasswordCount: ""
          ACLNames: ""
          MinimumEngineVersion: ""
          ARN: ""
          Name: ""
      properties:
        User:
          $ref: '#/components/schemas/CreateUserResponse_User'
      title: CreateUserResponse
      type: object
    CreateUserRequest:
      example:
        AuthenticationMode:
          Type: ""
          Passwords: ""
        UserName: ""
        AccessString: ""
        Tags: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user. This value must be unique as it also
              serves as the user identifier.
          title: UserName
        AuthenticationMode:
          $ref: '#/components/schemas/CreateUserRequest_AuthenticationMode'
        AccessString:
          allOf:
          - $ref: '#/components/schemas/AccessString'
          - description: Access permissions string used for this user.
          title: AccessString
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - AccessString
      - AuthenticationMode
      - UserName
      title: CreateUserRequest
      type: object
    UserAlreadyExistsFault: {}
    UserQuotaExceededFault: {}
    DeleteACLResponse:
      example:
        ACL:
          Status: ""
          PendingChanges:
            UserNamesToRemove: ""
            UserNamesToAdd: ""
          Clusters: ""
          MinimumEngineVersion: ""
          UserNames: ""
          ARN: ""
          Name: ""
      properties:
        ACL:
          $ref: '#/components/schemas/DeleteACLResponse_ACL'
      title: DeleteACLResponse
      type: object
    DeleteACLRequest:
      example:
        ACLName: ""
      properties:
        ACLName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Access Control List to delete
          title: ACLName
      required:
      - ACLName
      title: DeleteACLRequest
      type: object
    DeleteClusterResponse:
      example:
        Cluster:
          SecurityGroups: ""
          Description: ""
          ParameterGroupName: ""
          ACLName: ""
          Name: ""
          NumberOfShards: ""
          TLSEnabled: ""
          AvailabilityMode: ""
          PendingUpdates:
            Resharding:
              SlotMigration:
                ProgressPercentage: ""
            ACLs:
              ACLToApply: ""
            ServiceUpdates: ""
          ParameterGroupStatus: ""
          SnsTopicArn: ""
          Status: ""
          EngineVersion: ""
          KmsKeyId: ""
          SnsTopicStatus: ""
          SubnetGroupName: ""
          AutoMinorVersionUpgrade: ""
          ClusterEndpoint:
            Address: ""
            Port: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          DataTiering: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
          ARN: ""
          EnginePatchVersion: ""
      properties:
        Cluster:
          $ref: '#/components/schemas/DeleteClusterResponse_Cluster'
      title: DeleteClusterResponse
      type: object
    DeleteClusterRequest:
      example:
        FinalSnapshotName: ""
        ClusterName: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster to be deleted
          title: ClusterName
        FinalSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The user-supplied name of a final cluster snapshot. This\
              \ is the unique name that identifies the snapshot. MemoryDB creates\
              \ the snapshot, and then deletes the cluster immediately afterward."
          title: FinalSnapshotName
      required:
      - ClusterName
      title: DeleteClusterRequest
      type: object
    DeleteParameterGroupResponse:
      example:
        ParameterGroup:
          Description: ""
          Family: ""
          ARN: ""
          Name: ""
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/DeleteParameterGroupResponse_ParameterGroup'
      title: DeleteParameterGroupResponse
      type: object
    DeleteParameterGroupRequest:
      example:
        ParameterGroupName: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group to delete.
          title: ParameterGroupName
      required:
      - ParameterGroupName
      title: DeleteParameterGroupRequest
      type: object
    DeleteSnapshotResponse:
      example:
        Snapshot:
          Status: ""
          DataTiering: ""
          KmsKeyId: ""
          ClusterConfiguration:
            Description: ""
            EngineVersion: ""
            TopicArn: ""
            ParameterGroupName: ""
            Port: ""
            SubnetGroupName: ""
            Name: ""
            NumShards: ""
            SnapshotWindow: ""
            SnapshotRetentionLimit: ""
            VpcId: ""
            NodeType: ""
            MaintenanceWindow: ""
            Shards: ""
          ARN: ""
          Source: ""
          Name: ""
      properties:
        Snapshot:
          $ref: '#/components/schemas/DeleteSnapshotResponse_Snapshot'
      title: DeleteSnapshotResponse
      type: object
    DeleteSnapshotRequest:
      example:
        SnapshotName: ""
      properties:
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the snapshot to delete
          title: SnapshotName
      required:
      - SnapshotName
      title: DeleteSnapshotRequest
      type: object
    DeleteSubnetGroupResponse:
      example:
        SubnetGroup:
          Subnets: ""
          Description: ""
          VpcId: ""
          ARN: ""
          Name: ""
      properties:
        SubnetGroup:
          $ref: '#/components/schemas/DeleteSubnetGroupResponse_SubnetGroup'
      title: DeleteSubnetGroupResponse
      type: object
    DeleteSubnetGroupRequest:
      example:
        SubnetGroupName: ""
      properties:
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group to delete
          title: SubnetGroupName
      required:
      - SubnetGroupName
      title: DeleteSubnetGroupRequest
      type: object
    SubnetGroupInUseFault: {}
    DeleteUserResponse:
      example:
        User:
          Status: ""
          AccessString: ""
          Authentication:
            Type: ""
            PasswordCount: ""
          ACLNames: ""
          MinimumEngineVersion: ""
          ARN: ""
          Name: ""
      properties:
        User:
          $ref: '#/components/schemas/DeleteUserResponse_User'
      title: DeleteUserResponse
      type: object
    DeleteUserRequest:
      example:
        UserName: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user to delete
          title: UserName
      required:
      - UserName
      title: DeleteUserRequest
      type: object
    InvalidUserStateFault: {}
    DescribeACLsResponse:
      example:
        NextToken: ""
        ACLs: ""
      properties:
        ACLs:
          allOf:
          - $ref: '#/components/schemas/ACLList'
          - description: The list of ACLs
          title: ACLs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If nextToken is returned, there are more results available.\
              \ The value of nextToken is a unique pagination token for each page.\
              \ Make the call again using the returned token to retrieve the next\
              \ page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeACLsResponse
      type: object
    DescribeACLsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        ACLName: ""
      properties:
        ACLName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the ACL
          title: ACLName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeACLsRequest
      type: object
    DescribeClustersResponse:
      example:
        NextToken: ""
        Clusters: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        Clusters:
          allOf:
          - $ref: '#/components/schemas/ClusterList'
          - description: A list of clusters
          title: Clusters
      title: DescribeClustersResponse
      type: object
    DescribeClustersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        ShowShardDetails: ""
        ClusterName: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster
          title: ClusterName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        ShowShardDetails:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: An optional flag that can be included in the request to retrieve
              information about the individual shard(s).
          title: ShowShardDetails
      title: DescribeClustersRequest
      type: object
    DescribeEngineVersionsResponse:
      example:
        NextToken: ""
        EngineVersions: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        EngineVersions:
          allOf:
          - $ref: '#/components/schemas/EngineVersionInfoList'
          - description: A list of engine version details. Each element in the list
              contains detailed information about one engine version.
          title: EngineVersions
      title: DescribeEngineVersionsResponse
      type: object
    DescribeEngineVersionsRequest:
      example:
        DefaultOnly: ""
        EngineVersion: ""
        NextToken: ""
        ParameterGroupFamily: ""
        MaxResults: ""
      properties:
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Redis engine version
          title: EngineVersion
        ParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a specific parameter group family to return details
              for.
          title: ParameterGroupFamily
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        DefaultOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, specifies that only the default version of the\
              \ specified engine or engine and major version combination is to be\
              \ returned."
          title: DefaultOnly
      title: DescribeEngineVersionsRequest
      type: object
    DescribeEventsResponse:
      example:
        NextToken: ""
        Events: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: A list of events. Each element in the list contains detailed
              information about one event.
          title: Events
      title: DescribeEventsResponse
      type: object
    DescribeEventsRequest:
      example:
        EndTime: ""
        NextToken: ""
        SourceType: ""
        MaxResults: ""
        StartTime: ""
        SourceName: ""
        Duration: ""
      properties:
        SourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier of the event source for which events are\
              \ returned. If not specified, all sources are included in the response."
          title: SourceName
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "The event source to retrieve events for. If no value is\
              \ specified, all events are returned."
          title: SourceType
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The beginning of the time interval to retrieve events for,\
              \ specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z"
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The end of the time interval for which to retrieve events,\
              \ specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z"
          title: EndTime
        Duration:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of minutes worth of events to retrieve.
          title: Duration
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeEventsRequest
      type: object
    DescribeParameterGroupsResponse:
      example:
        ParameterGroups: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        ParameterGroups:
          allOf:
          - $ref: '#/components/schemas/ParameterGroupList'
          - description: A list of parameter groups. Each element in the list contains
              detailed information about one parameter group.
          title: ParameterGroups
      title: DescribeParameterGroupsResponse
      type: object
    DescribeParameterGroupsRequest:
      example:
        NextToken: ""
        ParameterGroupName: ""
        MaxResults: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a specific parameter group to return details
              for.
          title: ParameterGroupName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeParameterGroupsRequest
      type: object
    DescribeParametersResponse:
      example:
        Parameters: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of parameters specific to a particular parameter group.
              Each element in the list contains detailed information about one parameter.
          title: Parameters
      title: DescribeParametersResponse
      type: object
    DescribeParametersRequest:
      example:
        NextToken: ""
        ParameterGroupName: ""
        MaxResults: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: he name of a specific parameter group to return details for.
          title: ParameterGroupName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      required:
      - ParameterGroupName
      title: DescribeParametersRequest
      type: object
    DescribeReservedNodesResponse:
      example:
        NextToken: ""
        ReservedNodes: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords."
          title: NextToken
        ReservedNodes:
          allOf:
          - $ref: '#/components/schemas/ReservedNodeList'
          - description: "Returns information about reserved nodes for this account,\
              \ or about a specified reserved node."
          title: ReservedNodes
      title: DescribeReservedNodesResponse
      type: object
    DescribeReservedNodesRequest:
      example:
        OfferingType: ""
        NextToken: ""
        ReservationId: ""
        NodeType: ""
        MaxResults: ""
        Duration: ""
        ReservedNodesOfferingId: ""
      properties:
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reserved node identifier filter value. Use this parameter
              to show only the reservation that matches the specified reservation
              ID.
          title: ReservationId
        ReservedNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering identifier filter value. Use this parameter
              to show only purchased reservations matching the specified offering
              identifier.
          title: ReservedNodesOfferingId
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The node type filter value. Use this parameter to show only\
              \ those reservations matching the specified node type. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/nodes.reserved.html#reserved-nodes-supported\"\
              >Supported node types</a>."
          title: NodeType
        Duration:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The duration filter value, specified in years or seconds.\
              \ Use this parameter to show only reservations for this duration."
          title: Duration
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The offering type filter value. Use this parameter to show\
              \ only the available offerings matching the specified offering type.\
              \ Valid values: \"All Upfront\"|\"Partial Upfront\"| \"No Upfront\""
          title: OfferingType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxRecords value, a marker\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords."
          title: NextToken
      title: DescribeReservedNodesRequest
      type: object
    ReservedNodeNotFoundFault: {}
    DescribeReservedNodesOfferingsResponse:
      example:
        NextToken: ""
        ReservedNodesOfferings: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords."
          title: NextToken
        ReservedNodesOfferings:
          allOf:
          - $ref: '#/components/schemas/ReservedNodesOfferingList'
          - description: Lists available reserved node offerings.
          title: ReservedNodesOfferings
      title: DescribeReservedNodesOfferingsResponse
      type: object
    DescribeReservedNodesOfferingsRequest:
      example:
        OfferingType: ""
        NextToken: ""
        NodeType: ""
        MaxResults: ""
        Duration: ""
        ReservedNodesOfferingId: ""
      properties:
        ReservedNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering identifier filter value. Use this parameter
              to show only the available offering that matches the specified reservation
              identifier.
          title: ReservedNodesOfferingId
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The node type for the reserved nodes. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/nodes.reserved.html#reserved-nodes-supported\"\
              >Supported node types</a>."
          title: NodeType
        Duration:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Duration filter value, specified in years or seconds. Use\
              \ this parameter to show only reservations for a given duration."
          title: Duration
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The offering type filter value. Use this parameter to show\
              \ only the available offerings matching the specified offering type.\
              \ Valid values: \"All Upfront\"|\"Partial Upfront\"| \"No Upfront\""
          title: OfferingType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxRecords value, a marker\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional marker returned from a prior request. Use this\
              \ marker for pagination of results from this operation. If this parameter\
              \ is specified, the response includes only records beyond the marker,\
              \ up to the value specified by MaxRecords."
          title: NextToken
      title: DescribeReservedNodesOfferingsRequest
      type: object
    ReservedNodesOfferingNotFoundFault: {}
    DescribeServiceUpdatesResponse:
      example:
        NextToken: ""
        ServiceUpdates: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        ServiceUpdates:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateList'
          - description: A list of service updates
          title: ServiceUpdates
      title: DescribeServiceUpdatesResponse
      type: object
    DescribeServiceUpdatesRequest:
      example:
        Status: ""
        NextToken: ""
        MaxResults: ""
        ClusterNames: ""
        ServiceUpdateName: ""
      properties:
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update to describe.
          title: ServiceUpdateName
        ClusterNames:
          allOf:
          - $ref: '#/components/schemas/ClusterNameList'
          - description: The list of cluster names to identify service updates to
              apply
          title: ClusterNames
        Status:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatusList'
          - description: The status(es) of the service updates to filter on
          title: Status
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeServiceUpdatesRequest
      type: object
    DescribeSnapshotsResponse:
      example:
        NextToken: ""
        Snapshots: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        Snapshots:
          allOf:
          - $ref: '#/components/schemas/SnapshotList'
          - description: A list of snapshots. Each item in the list contains detailed
              information about one snapshot.
          title: Snapshots
      title: DescribeSnapshotsResponse
      type: object
    DescribeSnapshotsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        ClusterName: ""
        SnapshotName: ""
        ShowDetail: ""
        Source: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A user-supplied cluster identifier. If this parameter is\
              \ specified, only snapshots associated with that specific cluster are\
              \ described."
          title: ClusterName
        SnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A user-supplied name of the snapshot. If this parameter\
              \ is specified, only this named snapshot is described."
          title: SnapshotName
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If set to system, the output shows snapshots that were automatically\
              \ created by MemoryDB. If set to user the output shows snapshots that\
              \ were manually created. If omitted, the output shows both automatically\
              \ and manually created snapshots."
          title: Source
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        ShowDetail:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A Boolean value which if true, the shard configuration is\
              \ included in the snapshot description."
          title: ShowDetail
      title: DescribeSnapshotsRequest
      type: object
    DescribeSubnetGroupsResponse:
      example:
        NextToken: ""
        SubnetGroups: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
        SubnetGroups:
          allOf:
          - $ref: '#/components/schemas/SubnetGroupList'
          - description: A list of subnet groups. Each element in the list contains
              detailed information about one group.
          title: SubnetGroups
      title: DescribeSubnetGroupsResponse
      type: object
    DescribeSubnetGroupsRequest:
      example:
        NextToken: ""
        SubnetGroupName: ""
        MaxResults: ""
      properties:
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group to return details for.
          title: SubnetGroupName
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeSubnetGroupsRequest
      type: object
    DescribeUsersResponse:
      example:
        NextToken: ""
        Users: ""
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          - description: A list of users.
          title: Users
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeUsersResponse
      type: object
    DescribeUsersRequest:
      example:
        Filters: ""
        UserName: ""
        NextToken: ""
        MaxResults: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user
          title: UserName
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: Filter to determine the list of users to return.
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified MaxResults value, a token\
              \ is included in the response so that the remaining results can be retrieved."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional argument to pass in case the total number of\
              \ records exceeds the value of MaxResults. If nextToken is returned,\
              \ there are more results available. The value of nextToken is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged. "
          title: NextToken
      title: DescribeUsersRequest
      type: object
    FailoverShardResponse:
      example:
        Cluster:
          SecurityGroups: ""
          Description: ""
          ParameterGroupName: ""
          ACLName: ""
          Name: ""
          NumberOfShards: ""
          TLSEnabled: ""
          AvailabilityMode: ""
          PendingUpdates:
            Resharding:
              SlotMigration:
                ProgressPercentage: ""
            ACLs:
              ACLToApply: ""
            ServiceUpdates: ""
          ParameterGroupStatus: ""
          SnsTopicArn: ""
          Status: ""
          EngineVersion: ""
          KmsKeyId: ""
          SnsTopicStatus: ""
          SubnetGroupName: ""
          AutoMinorVersionUpgrade: ""
          ClusterEndpoint:
            Address: ""
            Port: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          DataTiering: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
          ARN: ""
          EnginePatchVersion: ""
      properties:
        Cluster:
          $ref: '#/components/schemas/FailoverShardResponse_Cluster'
      title: FailoverShardResponse
      type: object
    FailoverShardRequest:
      example:
        ClusterName: ""
        ShardName: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster being failed over
          title: ClusterName
        ShardName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the shard
          title: ShardName
      required:
      - ClusterName
      - ShardName
      title: FailoverShardRequest
      type: object
    APICallRateForCustomerExceededFault: {}
    ShardNotFoundFault: {}
    TestFailoverNotAvailableFault: {}
    InvalidKMSKeyFault: {}
    ListAllowedNodeTypeUpdatesResponse:
      example:
        ScaleDownNodeTypes: ""
        ScaleUpNodeTypes: ""
      properties:
        ScaleUpNodeTypes:
          allOf:
          - $ref: '#/components/schemas/NodeTypeList'
          - description: A list node types which you can use to scale up your cluster.
          title: ScaleUpNodeTypes
        ScaleDownNodeTypes:
          allOf:
          - $ref: '#/components/schemas/NodeTypeList'
          - description: A list node types which you can use to scale down your cluster.
          title: ScaleDownNodeTypes
      title: ListAllowedNodeTypeUpdatesResponse
      type: object
    ListAllowedNodeTypeUpdatesRequest:
      example:
        ClusterName: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the cluster you want to scale. MemoryDB uses\
              \ the cluster name to identify the current node type being used by this\
              \ cluster, and from that to create a list of node types you can scale\
              \ up to."
          title: ClusterName
      required:
      - ClusterName
      title: ListAllowedNodeTypeUpdatesRequest
      type: object
    ListTagsResponse:
      example:
        TagList: ""
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags as key-value pairs.
          title: TagList
      title: ListTagsResponse
      type: object
    ListTagsRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource for which
              you want the list of tags
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsRequest
      type: object
    InvalidARNFault: {}
    PurchaseReservedNodesOfferingResponse:
      example:
        ReservedNode:
          OfferingType: ""
          NodeCount: ""
          ReservationId: ""
          State: ""
          NodeType: ""
          StartTime: ""
          RecurringCharges: ""
          Duration: ""
          ReservedNodesOfferingId: ""
          ARN: ""
          FixedPrice: ""
      properties:
        ReservedNode:
          $ref: '#/components/schemas/PurchaseReservedNodesOfferingResponse_ReservedNode'
      title: PurchaseReservedNodesOfferingResponse
      type: object
    PurchaseReservedNodesOfferingRequest:
      example:
        NodeCount: ""
        ReservationId: ""
        ReservedNodesOfferingId: ""
        Tags: ""
      properties:
        ReservedNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the reserved node offering to purchase.
          title: ReservedNodesOfferingId
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A customer-specified identifier to track this reservation.
          title: ReservationId
        NodeCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of node instances to reserve.
          title: NodeCount
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - ReservedNodesOfferingId
      title: PurchaseReservedNodesOfferingRequest
      type: object
    ReservedNodeAlreadyExistsFault: {}
    ReservedNodeQuotaExceededFault: {}
    ResetParameterGroupResponse:
      example:
        ParameterGroup:
          Description: ""
          Family: ""
          ARN: ""
          Name: ""
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/ResetParameterGroupResponse_ParameterGroup'
      title: ResetParameterGroupResponse
      type: object
    ResetParameterGroupRequest:
      example:
        AllParameters: ""
        ParameterNames: ""
        ParameterGroupName: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group to reset.
          title: ParameterGroupName
        AllParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If true, all parameters in the parameter group are reset\
              \ to their default values. If false, only the parameters listed by ParameterNames\
              \ are reset to their default values."
          title: AllParameters
        ParameterNames:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: "An array of parameter names to reset to their default values.\
              \ If AllParameters is true, do not use ParameterNames. If AllParameters\
              \ is false, you must specify the name of at least one parameter to reset."
          title: ParameterNames
      required:
      - ParameterGroupName
      title: ResetParameterGroupRequest
      type: object
    TagResourceResponse:
      example:
        TagList: ""
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags as key-value pairs.
          title: TagList
      title: TagResourceResponse
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource to which the
              tags are to be added
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags to be added to this resource. A tag is a\
              \ key-value pair. A tag key must be accompanied by a tag value, although\
              \ null is accepted."
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      example:
        TagList: ""
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags removed
          title: TagList
      title: UntagResourceResponse
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource to which the
              tags are to be removed
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: The list of keys of the tags that are to be removed
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    TagNotFoundFault: {}
    UpdateACLResponse:
      example:
        ACL:
          Status: ""
          PendingChanges:
            UserNamesToRemove: ""
            UserNamesToAdd: ""
          Clusters: ""
          MinimumEngineVersion: ""
          UserNames: ""
          ARN: ""
          Name: ""
      properties:
        ACL:
          $ref: '#/components/schemas/UpdateACLResponse_ACL'
      title: UpdateACLResponse
      type: object
    UpdateACLRequest:
      example:
        UserNamesToRemove: ""
        ACLName: ""
        UserNamesToAdd: ""
      properties:
        ACLName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Access Control List
          title: ACLName
        UserNamesToAdd:
          allOf:
          - $ref: '#/components/schemas/UserNameListInput'
          - description: The list of users to add to the Access Control List
          title: UserNamesToAdd
        UserNamesToRemove:
          allOf:
          - $ref: '#/components/schemas/UserNameListInput'
          - description: The list of users to remove from the Access Control List
          title: UserNamesToRemove
      required:
      - ACLName
      title: UpdateACLRequest
      type: object
    UpdateClusterResponse:
      example:
        Cluster:
          SecurityGroups: ""
          Description: ""
          ParameterGroupName: ""
          ACLName: ""
          Name: ""
          NumberOfShards: ""
          TLSEnabled: ""
          AvailabilityMode: ""
          PendingUpdates:
            Resharding:
              SlotMigration:
                ProgressPercentage: ""
            ACLs:
              ACLToApply: ""
            ServiceUpdates: ""
          ParameterGroupStatus: ""
          SnsTopicArn: ""
          Status: ""
          EngineVersion: ""
          KmsKeyId: ""
          SnsTopicStatus: ""
          SubnetGroupName: ""
          AutoMinorVersionUpgrade: ""
          ClusterEndpoint:
            Address: ""
            Port: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          DataTiering: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
          ARN: ""
          EnginePatchVersion: ""
      properties:
        Cluster:
          $ref: '#/components/schemas/UpdateClusterResponse_Cluster'
      title: UpdateClusterResponse
      type: object
    UpdateClusterRequest:
      example:
        Description: ""
        EngineVersion: ""
        SnsTopicStatus: ""
        ParameterGroupName: ""
        ShardConfiguration:
          ShardCount: ""
        ACLName: ""
        ReplicaConfiguration:
          ReplicaCount: ""
        SecurityGroupIds: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        NodeType: ""
        ClusterName: ""
        MaintenanceWindow: ""
        SnsTopicArn: ""
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster to update
          title: ClusterName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cluster to update
          title: Description
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdsList'
          - description: The SecurityGroupIds to update
          title: SecurityGroupIds
        MaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the weekly time range during which maintenance\
              \ on the cluster is performed. It is specified as a range in the format\
              \ ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window\
              \ is a 60 minute period.</p> <p>Valid values for <code>ddd</code> are:</p>\
              \ <ul> <li> <p> <code>sun</code> </p> </li> <li> <p> <code>mon</code>\
              \ </p> </li> <li> <p> <code>tue</code> </p> </li> <li> <p> <code>wed</code>\
              \ </p> </li> <li> <p> <code>thu</code> </p> </li> <li> <p> <code>fri</code>\
              \ </p> </li> <li> <p> <code>sat</code> </p> </li> </ul> <p>Example:\
              \ <code>sun:23:00-mon:01:30</code> </p>"
          title: MaintenanceWindow
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The SNS topic ARN to update
          title: SnsTopicArn
        SnsTopicStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the Amazon SNS notification topic. Notifications
              are sent only if the status is active.
          title: SnsTopicStatus
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group to update
          title: ParameterGroupName
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The daily time range (in UTC) during which MemoryDB begins
              taking a daily snapshot of your cluster.
          title: SnapshotWindow
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The number of days for which MemoryDB retains automatic\
              \ cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted."
          title: SnapshotRetentionLimit
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid node type that you want to scale this cluster up
              or down to.
          title: NodeType
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The upgraded version of the engine to be run on the nodes.\
              \ You can upgrade to a newer engine version, but you cannot downgrade\
              \ to an earlier engine version. If you want to use an earlier engine\
              \ version, you must delete the existing cluster and create it anew with\
              \ the earlier engine version."
          title: EngineVersion
        ReplicaConfiguration:
          $ref: '#/components/schemas/UpdateClusterRequest_ReplicaConfiguration'
        ShardConfiguration:
          $ref: '#/components/schemas/UpdateClusterRequest_ShardConfiguration'
        ACLName:
          allOf:
          - $ref: '#/components/schemas/ACLName'
          - description: The Access Control List that is associated with the cluster
          title: ACLName
      required:
      - ClusterName
      title: UpdateClusterRequest
      type: object
    InvalidNodeStateFault: {}
    NoOperationFault: {}
    UpdateParameterGroupResponse:
      example:
        ParameterGroup:
          Description: ""
          Family: ""
          ARN: ""
          Name: ""
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/UpdateParameterGroupResponse_ParameterGroup'
      title: UpdateParameterGroupResponse
      type: object
    UpdateParameterGroupRequest:
      example:
        ParameterNameValues: ""
        ParameterGroupName: ""
      properties:
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group to update.
          title: ParameterGroupName
        ParameterNameValues:
          allOf:
          - $ref: '#/components/schemas/ParameterNameValueList'
          - description: An array of parameter names and values for the parameter
              update. You must supply at least one parameter name and value; subsequent
              arguments are optional. A maximum of 20 parameters may be updated per
              request.
          title: ParameterNameValues
      required:
      - ParameterGroupName
      - ParameterNameValues
      title: UpdateParameterGroupRequest
      type: object
    UpdateSubnetGroupResponse:
      example:
        SubnetGroup:
          Subnets: ""
          Description: ""
          VpcId: ""
          ARN: ""
          Name: ""
      properties:
        SubnetGroup:
          $ref: '#/components/schemas/UpdateSubnetGroupResponse_SubnetGroup'
      title: UpdateSubnetGroupResponse
      type: object
    UpdateSubnetGroupRequest:
      example:
        Description: ""
        SubnetGroupName: ""
        SubnetIds: ""
      properties:
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group
          title: SubnetGroupName
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the subnet group
          title: Description
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The EC2 subnet IDs for the subnet group.
          title: SubnetIds
      required:
      - SubnetGroupName
      title: UpdateSubnetGroupRequest
      type: object
    SubnetInUse: {}
    UpdateUserResponse:
      example:
        User:
          Status: ""
          AccessString: ""
          Authentication:
            Type: ""
            PasswordCount: ""
          ACLNames: ""
          MinimumEngineVersion: ""
          ARN: ""
          Name: ""
      properties:
        User:
          $ref: '#/components/schemas/UpdateUserResponse_User'
      title: UpdateUserResponse
      type: object
    UpdateUserRequest:
      example:
        AuthenticationMode:
          Type: ""
          Passwords: ""
        UserName: ""
        AccessString: ""
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the user
          title: UserName
        AuthenticationMode:
          $ref: '#/components/schemas/CreateUserRequest_AuthenticationMode'
        AccessString:
          allOf:
          - $ref: '#/components/schemas/AccessString'
          - description: Access permissions string used for this user.
          title: AccessString
      required:
      - UserName
      title: UpdateUserRequest
      type: object
    String:
      title: String
      type: string
    UserNameList:
      items:
        $ref: '#/components/schemas/UserName'
      type: array
    ACLPendingChanges:
      description: Returns the updates being applied to the ACL.
      properties:
        UserNamesToRemove:
          allOf:
          - $ref: '#/components/schemas/UserNameList'
          - description: A list of user names being removed from the ACL
          title: UserNamesToRemove
        UserNamesToAdd:
          allOf:
          - $ref: '#/components/schemas/UserNameList'
          - description: A list of users being added to the ACL
          title: UserNamesToAdd
      title: ACLPendingChanges
      type: object
    ACLClusterNameList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ACL:
      description: An Access Control List. You can authenticate users with Access
        Contol Lists. ACLs enable you to control cluster access by grouping users.
        These Access control lists are designed as a way to organize access to clusters.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Access Control List
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates ACL status. Can be \"creating\", \"active\", \"\
              modifying\", \"deleting\"."
          title: Status
        UserNames:
          allOf:
          - $ref: '#/components/schemas/UserNameList'
          - description: The list of user names that belong to the ACL.
          title: UserNames
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The minimum engine version supported for the ACL
          title: MinimumEngineVersion
        PendingChanges:
          $ref: '#/components/schemas/ACL_PendingChanges'
        Clusters:
          allOf:
          - $ref: '#/components/schemas/ACLClusterNameList'
          - description: A list of clusters associated with the ACL.
          title: Clusters
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the ACL
          title: ARN
      title: ACL
      type: object
    ACLList:
      items:
        $ref: '#/components/schemas/ACL'
      type: array
    ACLName:
      minLength: 1
      pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
      title: ACLName
      type: string
    ACLNameList:
      items:
        $ref: '#/components/schemas/ACLName'
      type: array
    ACLsUpdateStatus:
      description: The status of the ACL update
      properties:
        ACLToApply:
          allOf:
          - $ref: '#/components/schemas/ACLName'
          - description: A list of ACLs pending to be applied.
          title: ACLToApply
      title: ACLsUpdateStatus
      type: object
    AZStatus:
      enum:
      - singleaz
      - multiaz
      title: AZStatus
      type: string
    AccessString:
      pattern: .*\S.*
      type: string
    AuthenticationType:
      enum:
      - password
      - no-password
      - iam
      title: AuthenticationType
      type: string
    IntegerOptional:
      type: integer
    Authentication:
      description: "Denotes the user's authentication properties, such as whether\
        \ it requires a password to authenticate. Used in output responses."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          - description: Indicates whether the user requires a password to authenticate.
          title: Type
        PasswordCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of passwords belonging to the user. The maximum
              is two.
          title: PasswordCount
      title: Authentication
      type: object
    InputAuthenticationType:
      enum:
      - password
      - iam
      title: InputAuthenticationType
      type: string
    PasswordListInput:
      items:
        $ref: '#/components/schemas/String'
      minItems: 1
      type: array
    AuthenticationMode:
      description: "Denotes the user's authentication properties, such as whether\
        \ it requires a password to authenticate. Used in output responses."
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InputAuthenticationType'
          - description: Indicates whether the user requires a password to authenticate.
              All newly-created users require a password.
          title: Type
        Passwords:
          allOf:
          - $ref: '#/components/schemas/PasswordListInput'
          - description: The password(s) used for authentication
          title: Passwords
      title: AuthenticationMode
      type: object
    AvailabilityZone:
      description: Indicates if the cluster has a Multi-AZ configuration (multiaz)
        or not (singleaz).
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone.
          title: Name
      title: AvailabilityZone
      type: object
    ClusterNameList:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 20
      type: array
    ServiceUpdateRequest:
      description: A request to apply a service update
      properties:
        ServiceUpdateNameToApply:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
          title: ServiceUpdateNameToApply
      title: ServiceUpdateRequest
      type: object
    ClusterList:
      items:
        $ref: '#/components/schemas/Cluster'
      type: array
    UnprocessedClusterList:
      items:
        $ref: '#/components/schemas/UnprocessedCluster'
      type: array
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    ClusterPendingUpdates:
      description: A list of updates being applied to the cluster
      properties:
        Resharding:
          $ref: '#/components/schemas/ClusterPendingUpdates_Resharding'
        ACLs:
          $ref: '#/components/schemas/ClusterPendingUpdates_ACLs'
        ServiceUpdates:
          allOf:
          - $ref: '#/components/schemas/PendingModifiedServiceUpdateList'
          - description: A list of service updates being applied to the cluster
          title: ServiceUpdates
      title: ClusterPendingUpdates
      type: object
    ShardList:
      items:
        $ref: '#/components/schemas/Shard'
      type: array
    Endpoint:
      description: Represents the information required for client programs to connect
        to the cluster and its nodes.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The DNS hostname of the node.
          title: Address
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The port number that the engine is listening on.
          title: Port
      title: Endpoint
      type: object
    SecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/SecurityGroupMembership'
      type: array
    DataTieringStatus:
      enum:
      - "true"
      - "false"
      title: DataTieringStatus
      type: string
    Cluster:
      description: Contains all of the attributes of a specific cluster.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user-supplied name of the cluster. This identifier is
              a unique key that identifies a cluster.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the cluster
          title: Description
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the cluster. For example, Available, Updating,\
              \ Creating."
          title: Status
        PendingUpdates:
          $ref: '#/components/schemas/Cluster_PendingUpdates'
        NumberOfShards:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of shards in the cluster
          title: NumberOfShards
        Shards:
          allOf:
          - $ref: '#/components/schemas/ShardList'
          - description: A list of shards that are members of the cluster.
          title: Shards
        AvailabilityMode:
          allOf:
          - $ref: '#/components/schemas/AZStatus'
          - description: Indicates if the cluster has a Multi-AZ configuration (multiaz)
              or not (singleaz).
          title: AvailabilityMode
        ClusterEndpoint:
          $ref: '#/components/schemas/Cluster_ClusterEndpoint'
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster's node type
          title: NodeType
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Redis engine version used by the cluster
          title: EngineVersion
        EnginePatchVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Redis engine patch version used by the cluster
          title: EnginePatchVersion
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group used by the cluster
          title: ParameterGroupName
        ParameterGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the parameter group used by the cluster, for\
              \ example 'active' or 'applying'."
          title: ParameterGroupStatus
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupMembershipList'
          - description: A list of security groups used by the cluster
          title: SecurityGroups
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group used by the cluster
          title: SubnetGroupName
        TLSEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: A flag to indicate if In-transit encryption is enabled
          title: TLSEnabled
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the cluster
          title: KmsKeyId
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the cluster.
          title: ARN
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS notification topic
          title: SnsTopicArn
        SnsTopicStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The SNS topic must be in Active status to receive notifications
          title: SnsTopicStatus
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The number of days for which MemoryDB retains automatic\
              \ snapshots before deleting them. For example, if you set SnapshotRetentionLimit\
              \ to 5, a snapshot that was taken today is retained for 5 days before\
              \ being deleted."
          title: SnapshotRetentionLimit
        MaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'Specifies the weekly time range during which maintenance
              on the cluster is performed. It is specified as a range in the format
              ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window
              is a 60 minute period. '
          title: MaintenanceWindow
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The daily time range (in UTC) during which MemoryDB begins\
              \ taking a daily snapshot of your shard. Example: 05:00-09:00 If you\
              \ do not specify this parameter, MemoryDB automatically chooses an appropriate\
              \ time range."
          title: SnapshotWindow
        ACLName:
          allOf:
          - $ref: '#/components/schemas/ACLName'
          - description: The name of the Access Control List associated with this
              cluster.
          title: ACLName
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "When set to true, the cluster will automatically receive\
              \ minor engine version upgrades after launch."
          title: AutoMinorVersionUpgrade
        DataTiering:
          allOf:
          - $ref: '#/components/schemas/DataTieringStatus'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ clusters using the r6gd node type. This parameter must be set when\
              \ using r6gd nodes. For more information, see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html\"\
              >Data tiering</a>."
          title: DataTiering
      title: Cluster
      type: object
    ShardDetails:
      items:
        $ref: '#/components/schemas/ShardDetail'
      type: array
    ClusterConfiguration:
      description: 'A list of cluster configuration options. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the cluster configuration
          title: Description
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The node type used for the cluster
          title: NodeType
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Redis engine version used by the cluster
          title: EngineVersion
        MaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The specified maintenance window for the cluster
          title: MaintenanceWindow
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS notification topic
              for the cluster
          title: TopicArn
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port used by the cluster
          title: Port
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of parameter group used by the cluster
          title: ParameterGroupName
        SubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group used by the cluster
          title: SubnetGroupName
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the VPC the cluster belongs to
          title: VpcId
        SnapshotRetentionLimit:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The snapshot retention limit set by the cluster
          title: SnapshotRetentionLimit
        SnapshotWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The snapshot window set by the cluster
          title: SnapshotWindow
        NumShards:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of shards in the cluster
          title: NumShards
        Shards:
          allOf:
          - $ref: '#/components/schemas/ShardDetails'
          - description: The list of shards in the cluster
          title: Shards
      title: ClusterConfiguration
      type: object
    ReshardingStatus:
      description: The status of the online resharding
      properties:
        SlotMigration:
          $ref: '#/components/schemas/ReshardingStatus_SlotMigration'
      title: ReshardingStatus
      type: object
    PendingModifiedServiceUpdateList:
      items:
        $ref: '#/components/schemas/PendingModifiedServiceUpdate'
      type: array
    TargetBucket:
      maxLength: 255
      pattern: "^[A-Za-z0-9._-]+$"
      type: string
    KmsKeyId:
      maxLength: 2048
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      type: array
    Snapshot:
      description: Represents a copy of an entire cluster as of the time when the
        snapshot was taken.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the snapshot
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the snapshot. Valid values: creating | available\
              \ | restoring | copying | deleting."
          title: Status
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates whether the snapshot is from an automatic backup
              (automated) or was created manually (manual).
          title: Source
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the KMS key used to encrypt the snapshot.
          title: KmsKeyId
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the snapshot.
          title: ARN
        ClusterConfiguration:
          $ref: '#/components/schemas/Snapshot_ClusterConfiguration'
        DataTiering:
          allOf:
          - $ref: '#/components/schemas/DataTieringStatus'
          - description: "Enables data tiering. Data tiering is only supported for\
              \ clusters using the r6gd node type. This parameter must be set when\
              \ using r6gd nodes. For more information, see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/data-tiering.html\"\
              >Data tiering</a>."
          title: DataTiering
      title: Snapshot
      type: object
    UserNameListInput:
      items:
        $ref: '#/components/schemas/UserName'
      minItems: 1
      type: array
    SecurityGroupIdsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    SnapshotArnsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ParameterGroup:
      description: Represents the output of a CreateParameterGroup operation. A parameter
        group represents a combination of specific values for the parameters that
        are passed to the engine software during startup.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group
          title: Name
        Family:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group family that this parameter
              group is compatible with.
          title: Family
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the parameter group
          title: Description
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the parameter group
          title: ARN
      title: ParameterGroup
      type: object
    SubnetIdentifierList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    SubnetGroup:
      description: <p>Represents the output of one of the following operations:</p>
        <ul> <li> <p>CreateSubnetGroup</p> </li> <li> <p>UpdateSubnetGroup</p> </li>
        </ul> <p>A subnet group is a collection of subnets (typically private) that
        you can designate for your clusters running in an Amazon Virtual Private Cloud
        (VPC) environment.</p>
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the subnet group
          title: Description
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Virtual Private Cloud identifier (VPC ID) of the
              subnet group.
          title: VpcId
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SubnetList'
          - description: A list of subnets associated with the subnet group.
          title: Subnets
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN (Amazon Resource Name) of the subnet group.
          title: ARN
      title: SubnetGroup
      type: object
    UserName:
      minLength: 1
      pattern: "[a-zA-Z][a-zA-Z0-9\\-]*"
      title: UserName
      type: string
    User:
      description: "You create users and assign them specific permissions by using\
        \ an access string. You assign the users to Access Control Lists aligned with\
        \ a specific role (administrators, human resources) that are then deployed\
        \ to one or more MemoryDB clusters."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the user
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates the user status. Can be \"active\", \"modifying\"\
              \ or \"deleting\"."
          title: Status
        AccessString:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Access permissions string used for this user.
          title: AccessString
        ACLNames:
          allOf:
          - $ref: '#/components/schemas/ACLNameList'
          - description: The names of the Access Control Lists to which the user belongs
          title: ACLNames
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The minimum engine version supported for the user
          title: MinimumEngineVersion
        Authentication:
          $ref: '#/components/schemas/User_Authentication'
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The Amazon Resource Name (ARN) of the user. '
          title: ARN
      title: User
      type: object
    EngineVersionInfoList:
      items:
        $ref: '#/components/schemas/EngineVersionInfo'
      type: array
    SourceType:
      enum:
      - node
      - parameter-group
      - subnet-group
      - cluster
      - user
      - acl
      title: SourceType
      type: string
    TStamp:
      format: date-time
      type: string
    EventList:
      items:
        $ref: '#/components/schemas/Event'
      type: array
    ParameterGroupList:
      items:
        $ref: '#/components/schemas/ParameterGroup'
      type: array
    ParametersList:
      items:
        $ref: '#/components/schemas/Parameter'
      type: array
    ReservedNodesOfferingList:
      items:
        $ref: '#/components/schemas/ReservedNodesOffering'
      type: array
    ReservedNodeList:
      items:
        $ref: '#/components/schemas/ReservedNode'
      type: array
    ServiceUpdateStatusList:
      items:
        $ref: '#/components/schemas/ServiceUpdateStatus'
      maxItems: 4
      type: array
    ServiceUpdateList:
      items:
        $ref: '#/components/schemas/ServiceUpdate'
      type: array
    SnapshotList:
      items:
        $ref: '#/components/schemas/Snapshot'
      type: array
    SubnetGroupList:
      items:
        $ref: '#/components/schemas/SubnetGroup'
      type: array
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    UserList:
      items:
        $ref: '#/components/schemas/User'
      type: array
    Double:
      format: double
      type: number
    Integer:
      type: integer
    EngineVersionInfo:
      description: Provides details of the Redis engine version
      properties:
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version
          title: EngineVersion
        EnginePatchVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The patched engine version
          title: EnginePatchVersion
        ParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the parameter group family to which
              the engine default parameters apply.
          title: ParameterGroupFamily
      title: EngineVersionInfo
      type: object
    Event:
      description: Represents a single occurrence of something interesting within
        the system. Some examples of events are creating a cluster or adding or removing
        a node.
      properties:
        SourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name for the source of the event. For example, if the\
              \ event occurred at the cluster level, the identifier would be the name\
              \ of the cluster."
          title: SourceName
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "Specifies the origin of this event - a cluster, a parameter\
              \ group, a security group, etc."
          title: SourceType
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text of the event.
          title: Message
        Date:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the event occurred.
          title: Date
      title: Event
      type: object
    FilterName:
      pattern: .*\S.*
      type: string
    FilterValueList:
      items:
        $ref: '#/components/schemas/FilterValue'
      minItems: 1
      type: array
    Filter:
      description: Used to streamline results of a search based on the property being
        filtered.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: "The property being filtered. For example, UserName."
          title: Name
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          - description: "The property values to filter on. For example, \"user-123\"\
              ."
          title: Values
      required:
      - Name
      - Values
      title: Filter
      type: object
    FilterValue:
      pattern: .*\S.*
      title: FilterValue
      type: string
    KeyList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    NodeTypeList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Node:
      description: Represents an individual node within a cluster. Each node runs
        its own instance of the cluster's protocol-compliant caching software.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The node identifier. A node name is a numeric identifier\
              \ (0001, 0002, etc.). The combination of cluster name, shard name and\
              \ node name uniquely identifies every node used in a customer's Amazon\
              \ account."
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the service update on the node
          title: Status
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Availability Zone in which the node resides
          title: AvailabilityZone
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time when the node was created.
          title: CreateTime
        Endpoint:
          $ref: '#/components/schemas/Node_Endpoint'
      title: Node
      type: object
    NodeList:
      items:
        $ref: '#/components/schemas/Node'
      type: array
    Parameter:
      description: Describes an individual setting that controls some aspect of MemoryDB
        behavior.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the parameter
          title: Value
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the parameter
          title: Description
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The parameter's data type
          title: DataType
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The valid range of values for the parameter.
          title: AllowedValues
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The earliest engine version to which the parameter can apply.
          title: MinimumEngineVersion
      title: Parameter
      type: object
    ParameterNameList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ParameterNameValue:
      description: Describes a name-value pair that is used to update the value of
        a parameter.
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter
          title: ParameterName
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the parameter
          title: ParameterValue
      title: ParameterNameValue
      type: object
    ParameterNameValueList:
      items:
        $ref: '#/components/schemas/ParameterNameValue'
      type: array
    ServiceUpdateStatus:
      enum:
      - available
      - in-progress
      - complete
      - scheduled
      title: ServiceUpdateStatus
      type: string
    PendingModifiedServiceUpdate:
      description: Update action that has yet to be processed for the corresponding
        apply/stop request
      properties:
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
          title: ServiceUpdateName
        Status:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatus'
          - description: The status of the service update
          title: Status
      title: PendingModifiedServiceUpdate
      type: object
    ReservedNode:
      description: Represents the output of a <code>PurchaseReservedNodesOffering</code>
        operation.
      properties:
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A customer-specified identifier to track this reservation.
          title: ReservationId
        ReservedNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the reserved node offering to purchase.
          title: ReservedNodesOfferingId
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The node type for the reserved nodes.
          title: NodeType
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The time the reservation started.
          title: StartTime
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The duration of the reservation in seconds.
          title: Duration
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The fixed price charged for this reserved node.
          title: FixedPrice
        NodeCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of nodes that have been reserved.
          title: NodeCount
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering type of this reserved node.
          title: OfferingType
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The state of the reserved node.
          title: State
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          - description: The recurring price charged to run this reserved node.
          title: RecurringCharges
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the reserved node.
          title: ARN
      title: ReservedNode
      type: object
    RecurringCharge:
      description: The recurring charge to run this reserved node.
      properties:
        RecurringChargeAmount:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The amount of the recurring charge to run this reserved node.
          title: RecurringChargeAmount
        RecurringChargeFrequency:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The frequency of the recurring price charged to run this
              reserved node.
          title: RecurringChargeFrequency
      title: RecurringCharge
      type: object
    RecurringChargeList:
      items:
        $ref: '#/components/schemas/RecurringCharge'
      type: array
    ReplicaConfigurationRequest:
      description: A request to configure the number of replicas in a shard
      properties:
        ReplicaCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of replicas to scale up or down to
          title: ReplicaCount
      title: ReplicaConfigurationRequest
      type: object
    ReservedNodesOffering:
      description: The offering type of this node.
      properties:
        ReservedNodesOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering identifier.
          title: ReservedNodesOfferingId
        NodeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The node type for the reserved nodes. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/memorydb/latest/devguide/nodes.reserved.html#reserved-nodes-supported\"\
              >Supported node types</a>."
          title: NodeType
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The duration of the reservation in seconds.
          title: Duration
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The fixed price charged for this reserved node.
          title: FixedPrice
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The offering type of this reserved node.
          title: OfferingType
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          - description: The recurring price charged to run this reserved node.
          title: RecurringCharges
      title: ReservedNodesOffering
      type: object
    SlotMigration:
      description: Represents the progress of an online resharding operation.
      properties:
        ProgressPercentage:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The percentage of the slot migration that is complete.
          title: ProgressPercentage
      title: SlotMigration
      type: object
    SecurityGroupMembership:
      description: Represents a single security group and its status.
      properties:
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the security group.
          title: SecurityGroupId
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the security group membership. The status\
              \ changes whenever a security group is modified, or when the security\
              \ groups assigned to a cluster are modified."
          title: Status
      title: SecurityGroupMembership
      type: object
    ServiceUpdateType:
      enum:
      - security-update
      title: ServiceUpdateType
      type: string
    ServiceUpdate:
      description: An update that you can apply to your MemoryDB clusters.
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster to which the service update applies
          title: ClusterName
        ServiceUpdateName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the service update
          title: ServiceUpdateName
        ReleaseDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date when the service update is initially available
          title: ReleaseDate
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides details of the service update
          title: Description
        Status:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateStatus'
          - description: The status of the service update
          title: Status
        Type:
          allOf:
          - $ref: '#/components/schemas/ServiceUpdateType'
          - description: Reflects the nature of the service update
          title: Type
        NodesUpdated:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A list of nodes updated by the service update
          title: NodesUpdated
        AutoUpdateStartDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date at which the service update will be automatically
              applied
          title: AutoUpdateStartDate
      title: ServiceUpdate
      type: object
    Shard:
      description: Represents a collection of nodes in a cluster. One node in the
        node group is the read/write primary node. All the other nodes are read-only
        Replica nodes.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the shard
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The current state of this replication group - creating,\
              \ available, modifying, deleting."
          title: Status
        Slots:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The keyspace for this shard.
          title: Slots
        Nodes:
          allOf:
          - $ref: '#/components/schemas/NodeList'
          - description: A list containing information about individual nodes within
              the shard
          title: Nodes
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of nodes in the shard
          title: NumberOfNodes
      title: Shard
      type: object
    ShardConfiguration:
      description: "Shard configuration options. Each shard configuration has the\
        \ following: Slots and ReplicaCount."
      properties:
        Slots:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A string that specifies the keyspace for a particular node\
              \ group. Keyspaces range from 0 to 16,383. The string is in the format\
              \ startkey-endkey."
          title: Slots
        ReplicaCount:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The number of read replica nodes in this shard.
          title: ReplicaCount
      title: ShardConfiguration
      type: object
    ShardConfigurationRequest:
      description: A request to configure the sharding properties of a cluster
      properties:
        ShardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of shards in the cluster
          title: ShardCount
      title: ShardConfigurationRequest
      type: object
    ShardDetail:
      description: Provides details of a shard in a snapshot
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the shard
          title: Name
        Configuration:
          $ref: '#/components/schemas/ShardDetail_Configuration'
        Size:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The size of the shard's snapshot
          title: Size
        SnapshotCreationTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The date and time that the shard's snapshot was created
          title: SnapshotCreationTime
      title: ShardDetail
      type: object
    Subnet:
      description: Represents the subnet associated with a cluster. This parameter
        refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and
        used with MemoryDB.
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifier for the subnet.
          title: Identifier
        AvailabilityZone:
          $ref: '#/components/schemas/Subnet_AvailabilityZone'
      title: Subnet
      type: object
    SubnetList:
      items:
        $ref: '#/components/schemas/Subnet'
      type: array
    Tag:
      description: "A tag that can be added to an MemoryDB resource. Tags are composed\
        \ of a Key/Value pair. You can use tags to categorize and track all your MemoryDB\
        \ resources. When you add or remove tags on clusters, those actions will be\
        \ replicated to all nodes in the cluster. A tag with a null Value is permitted.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging-resources.html\"\
        >Tagging your MemoryDB resources</a> "
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key for the tag. May not be null.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The tag's value. May be null.
          title: Value
      title: Tag
      type: object
    UnprocessedCluster:
      description: A cluster whose updates have failed
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster
          title: ClusterName
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error type associated with the update failure
          title: ErrorType
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message associated with the update failure
          title: ErrorMessage
      title: UnprocessedCluster
      type: object
    BatchUpdateClusterRequest_ServiceUpdate:
      allOf:
      - $ref: '#/components/schemas/ServiceUpdateRequest'
      - description: The unique ID of the service update
      example:
        ServiceUpdateNameToApply: ""
      title: BatchUpdateClusterRequest_ServiceUpdate
    CopySnapshotResponse_Snapshot:
      allOf:
      - $ref: '#/components/schemas/Snapshot'
      - description: Represents a copy of an entire cluster as of the time when the
          snapshot was taken.
      example:
        Status: ""
        DataTiering: ""
        KmsKeyId: ""
        ClusterConfiguration:
          Description: ""
          EngineVersion: ""
          TopicArn: ""
          ParameterGroupName: ""
          Port: ""
          SubnetGroupName: ""
          Name: ""
          NumShards: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          VpcId: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
        ARN: ""
        Source: ""
        Name: ""
      title: CopySnapshotResponse_Snapshot
    CreateACLResponse_ACL:
      allOf:
      - $ref: '#/components/schemas/ACL'
      - description: The newly-created Access Control List.
      example:
        Status: ""
        PendingChanges:
          UserNamesToRemove: ""
          UserNamesToAdd: ""
        Clusters: ""
        MinimumEngineVersion: ""
        UserNames: ""
        ARN: ""
        Name: ""
      title: CreateACLResponse_ACL
    CreateClusterResponse_Cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: The newly-created cluster.
      example:
        SecurityGroups: ""
        Description: ""
        ParameterGroupName: ""
        ACLName: ""
        Name: ""
        NumberOfShards: ""
        TLSEnabled: ""
        AvailabilityMode: ""
        PendingUpdates:
          Resharding:
            SlotMigration:
              ProgressPercentage: ""
          ACLs:
            ACLToApply: ""
          ServiceUpdates: ""
        ParameterGroupStatus: ""
        SnsTopicArn: ""
        Status: ""
        EngineVersion: ""
        KmsKeyId: ""
        SnsTopicStatus: ""
        SubnetGroupName: ""
        AutoMinorVersionUpgrade: ""
        ClusterEndpoint:
          Address: ""
          Port: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        DataTiering: ""
        NodeType: ""
        MaintenanceWindow: ""
        Shards: ""
        ARN: ""
        EnginePatchVersion: ""
      title: CreateClusterResponse_Cluster
    CreateParameterGroupResponse_ParameterGroup:
      allOf:
      - $ref: '#/components/schemas/ParameterGroup'
      - description: The newly-created parameter group.
      example:
        Description: ""
        Family: ""
        ARN: ""
        Name: ""
      title: CreateParameterGroupResponse_ParameterGroup
    CreateSnapshotResponse_Snapshot:
      allOf:
      - $ref: '#/components/schemas/Snapshot'
      - description: The newly-created snapshot.
      example:
        Status: ""
        DataTiering: ""
        KmsKeyId: ""
        ClusterConfiguration:
          Description: ""
          EngineVersion: ""
          TopicArn: ""
          ParameterGroupName: ""
          Port: ""
          SubnetGroupName: ""
          Name: ""
          NumShards: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          VpcId: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
        ARN: ""
        Source: ""
        Name: ""
      title: CreateSnapshotResponse_Snapshot
    CreateSubnetGroupResponse_SubnetGroup:
      allOf:
      - $ref: '#/components/schemas/SubnetGroup'
      - description: The newly-created subnet group
      example:
        Subnets: ""
        Description: ""
        VpcId: ""
        ARN: ""
        Name: ""
      title: CreateSubnetGroupResponse_SubnetGroup
    CreateUserResponse_User:
      allOf:
      - $ref: '#/components/schemas/User'
      - description: The newly-created user.
      example:
        Status: ""
        AccessString: ""
        Authentication:
          Type: ""
          PasswordCount: ""
        ACLNames: ""
        MinimumEngineVersion: ""
        ARN: ""
        Name: ""
      title: CreateUserResponse_User
    CreateUserRequest_AuthenticationMode:
      allOf:
      - $ref: '#/components/schemas/AuthenticationMode'
      - description: "Denotes the user's authentication properties, such as whether\
          \ it requires a password to authenticate."
      example:
        Type: ""
        Passwords: ""
      title: CreateUserRequest_AuthenticationMode
    DeleteACLResponse_ACL:
      allOf:
      - $ref: '#/components/schemas/ACL'
      - description: The Access Control List object that has been deleted.
      example:
        Status: ""
        PendingChanges:
          UserNamesToRemove: ""
          UserNamesToAdd: ""
        Clusters: ""
        MinimumEngineVersion: ""
        UserNames: ""
        ARN: ""
        Name: ""
      title: DeleteACLResponse_ACL
    DeleteClusterResponse_Cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: The cluster object that has been deleted
      example:
        SecurityGroups: ""
        Description: ""
        ParameterGroupName: ""
        ACLName: ""
        Name: ""
        NumberOfShards: ""
        TLSEnabled: ""
        AvailabilityMode: ""
        PendingUpdates:
          Resharding:
            SlotMigration:
              ProgressPercentage: ""
          ACLs:
            ACLToApply: ""
          ServiceUpdates: ""
        ParameterGroupStatus: ""
        SnsTopicArn: ""
        Status: ""
        EngineVersion: ""
        KmsKeyId: ""
        SnsTopicStatus: ""
        SubnetGroupName: ""
        AutoMinorVersionUpgrade: ""
        ClusterEndpoint:
          Address: ""
          Port: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        DataTiering: ""
        NodeType: ""
        MaintenanceWindow: ""
        Shards: ""
        ARN: ""
        EnginePatchVersion: ""
      title: DeleteClusterResponse_Cluster
    DeleteParameterGroupResponse_ParameterGroup:
      allOf:
      - $ref: '#/components/schemas/ParameterGroup'
      - description: The parameter group that has been deleted.
      example:
        Description: ""
        Family: ""
        ARN: ""
        Name: ""
      title: DeleteParameterGroupResponse_ParameterGroup
    DeleteSnapshotResponse_Snapshot:
      allOf:
      - $ref: '#/components/schemas/Snapshot'
      - description: The snapshot object that has been deleted.
      example:
        Status: ""
        DataTiering: ""
        KmsKeyId: ""
        ClusterConfiguration:
          Description: ""
          EngineVersion: ""
          TopicArn: ""
          ParameterGroupName: ""
          Port: ""
          SubnetGroupName: ""
          Name: ""
          NumShards: ""
          SnapshotWindow: ""
          SnapshotRetentionLimit: ""
          VpcId: ""
          NodeType: ""
          MaintenanceWindow: ""
          Shards: ""
        ARN: ""
        Source: ""
        Name: ""
      title: DeleteSnapshotResponse_Snapshot
    DeleteSubnetGroupResponse_SubnetGroup:
      allOf:
      - $ref: '#/components/schemas/SubnetGroup'
      - description: The subnet group object that has been deleted.
      example:
        Subnets: ""
        Description: ""
        VpcId: ""
        ARN: ""
        Name: ""
      title: DeleteSubnetGroupResponse_SubnetGroup
    DeleteUserResponse_User:
      allOf:
      - $ref: '#/components/schemas/User'
      - description: The user object that has been deleted.
      example:
        Status: ""
        AccessString: ""
        Authentication:
          Type: ""
          PasswordCount: ""
        ACLNames: ""
        MinimumEngineVersion: ""
        ARN: ""
        Name: ""
      title: DeleteUserResponse_User
    FailoverShardResponse_Cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: The cluster being failed over
      example:
        SecurityGroups: ""
        Description: ""
        ParameterGroupName: ""
        ACLName: ""
        Name: ""
        NumberOfShards: ""
        TLSEnabled: ""
        AvailabilityMode: ""
        PendingUpdates:
          Resharding:
            SlotMigration:
              ProgressPercentage: ""
          ACLs:
            ACLToApply: ""
          ServiceUpdates: ""
        ParameterGroupStatus: ""
        SnsTopicArn: ""
        Status: ""
        EngineVersion: ""
        KmsKeyId: ""
        SnsTopicStatus: ""
        SubnetGroupName: ""
        AutoMinorVersionUpgrade: ""
        ClusterEndpoint:
          Address: ""
          Port: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        DataTiering: ""
        NodeType: ""
        MaintenanceWindow: ""
        Shards: ""
        ARN: ""
        EnginePatchVersion: ""
      title: FailoverShardResponse_Cluster
    PurchaseReservedNodesOfferingResponse_ReservedNode:
      allOf:
      - $ref: '#/components/schemas/ReservedNode'
      - description: Represents the output of a <code>PurchaseReservedNodesOffering</code>
          operation.
      example:
        OfferingType: ""
        NodeCount: ""
        ReservationId: ""
        State: ""
        NodeType: ""
        StartTime: ""
        RecurringCharges: ""
        Duration: ""
        ReservedNodesOfferingId: ""
        ARN: ""
        FixedPrice: ""
      title: PurchaseReservedNodesOfferingResponse_ReservedNode
    ResetParameterGroupResponse_ParameterGroup:
      allOf:
      - $ref: '#/components/schemas/ParameterGroup'
      - description: The parameter group being reset.
      example:
        Description: ""
        Family: ""
        ARN: ""
        Name: ""
      title: ResetParameterGroupResponse_ParameterGroup
    UpdateACLResponse_ACL:
      allOf:
      - $ref: '#/components/schemas/ACL'
      - description: The updated Access Control List
      example:
        Status: ""
        PendingChanges:
          UserNamesToRemove: ""
          UserNamesToAdd: ""
        Clusters: ""
        MinimumEngineVersion: ""
        UserNames: ""
        ARN: ""
        Name: ""
      title: UpdateACLResponse_ACL
    UpdateClusterResponse_Cluster:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - description: The updated cluster
      example:
        SecurityGroups: ""
        Description: ""
        ParameterGroupName: ""
        ACLName: ""
        Name: ""
        NumberOfShards: ""
        TLSEnabled: ""
        AvailabilityMode: ""
        PendingUpdates:
          Resharding:
            SlotMigration:
              ProgressPercentage: ""
          ACLs:
            ACLToApply: ""
          ServiceUpdates: ""
        ParameterGroupStatus: ""
        SnsTopicArn: ""
        Status: ""
        EngineVersion: ""
        KmsKeyId: ""
        SnsTopicStatus: ""
        SubnetGroupName: ""
        AutoMinorVersionUpgrade: ""
        ClusterEndpoint:
          Address: ""
          Port: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        DataTiering: ""
        NodeType: ""
        MaintenanceWindow: ""
        Shards: ""
        ARN: ""
        EnginePatchVersion: ""
      title: UpdateClusterResponse_Cluster
    UpdateClusterRequest_ReplicaConfiguration:
      allOf:
      - $ref: '#/components/schemas/ReplicaConfigurationRequest'
      - description: The number of replicas that will reside in each shard
      example:
        ReplicaCount: ""
      title: UpdateClusterRequest_ReplicaConfiguration
    UpdateClusterRequest_ShardConfiguration:
      allOf:
      - $ref: '#/components/schemas/ShardConfigurationRequest'
      - description: The number of shards in the cluster
      example:
        ShardCount: ""
      title: UpdateClusterRequest_ShardConfiguration
    UpdateParameterGroupResponse_ParameterGroup:
      allOf:
      - $ref: '#/components/schemas/ParameterGroup'
      - description: The updated parameter group
      example:
        Description: ""
        Family: ""
        ARN: ""
        Name: ""
      title: UpdateParameterGroupResponse_ParameterGroup
    UpdateSubnetGroupResponse_SubnetGroup:
      allOf:
      - $ref: '#/components/schemas/SubnetGroup'
      - description: The updated subnet group
      example:
        Subnets: ""
        Description: ""
        VpcId: ""
        ARN: ""
        Name: ""
      title: UpdateSubnetGroupResponse_SubnetGroup
    UpdateUserResponse_User:
      allOf:
      - $ref: '#/components/schemas/User'
      - description: The updated user
      example:
        Status: ""
        AccessString: ""
        Authentication:
          Type: ""
          PasswordCount: ""
        ACLNames: ""
        MinimumEngineVersion: ""
        ARN: ""
        Name: ""
      title: UpdateUserResponse_User
    ACL_PendingChanges:
      allOf:
      - $ref: '#/components/schemas/ACLPendingChanges'
      - description: A list of updates being applied to the ACL.
      example:
        UserNamesToRemove: ""
        UserNamesToAdd: ""
      title: ACL_PendingChanges
    ClusterPendingUpdates_Resharding:
      allOf:
      - $ref: '#/components/schemas/ReshardingStatus'
      - description: The status of an online resharding operation.
      example:
        SlotMigration:
          ProgressPercentage: ""
      title: ClusterPendingUpdates_Resharding
    ClusterPendingUpdates_ACLs:
      allOf:
      - $ref: '#/components/schemas/ACLsUpdateStatus'
      - description: A list of ACLs associated with the cluster that are being updated
      example:
        ACLToApply: ""
      title: ClusterPendingUpdates_ACLs
    Cluster_PendingUpdates:
      allOf:
      - $ref: '#/components/schemas/ClusterPendingUpdates'
      - description: A group of settings that are currently being applied.
      example:
        Resharding:
          SlotMigration:
            ProgressPercentage: ""
        ACLs:
          ACLToApply: ""
        ServiceUpdates: ""
      title: Cluster_PendingUpdates
    Cluster_ClusterEndpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The cluster's configuration endpoint
      example:
        Address: ""
        Port: ""
      title: Cluster_ClusterEndpoint
    ReshardingStatus_SlotMigration:
      allOf:
      - $ref: '#/components/schemas/SlotMigration'
      - description: The status of the online resharding slot migration
      example:
        ProgressPercentage: ""
      title: ReshardingStatus_SlotMigration
    Snapshot_ClusterConfiguration:
      allOf:
      - $ref: '#/components/schemas/ClusterConfiguration'
      - description: The configuration of the cluster from which the snapshot was
          taken
      example:
        Description: ""
        EngineVersion: ""
        TopicArn: ""
        ParameterGroupName: ""
        Port: ""
        SubnetGroupName: ""
        Name: ""
        NumShards: ""
        SnapshotWindow: ""
        SnapshotRetentionLimit: ""
        VpcId: ""
        NodeType: ""
        MaintenanceWindow: ""
        Shards: ""
      title: Snapshot_ClusterConfiguration
    User_Authentication:
      allOf:
      - $ref: '#/components/schemas/Authentication'
      - description: Denotes whether the user requires a password to authenticate.
      example:
        Type: ""
        PasswordCount: ""
      title: User_Authentication
    Node_Endpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: The hostname for connecting to this node.
      title: Node_Endpoint
    ShardDetail_Configuration:
      allOf:
      - $ref: '#/components/schemas/ShardConfiguration'
      - description: The configuration details of the shard
      title: ShardDetail_Configuration
    Subnet_AvailabilityZone:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - description: The Availability Zone where the subnet resides
      title: Subnet_AvailabilityZone
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
