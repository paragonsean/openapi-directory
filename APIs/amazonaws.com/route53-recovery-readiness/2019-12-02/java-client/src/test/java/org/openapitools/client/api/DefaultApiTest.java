/*
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateCellRequest;
import org.openapitools.client.model.CreateCellResponse;
import org.openapitools.client.model.CreateCrossAccountAuthorizationRequest;
import org.openapitools.client.model.CreateCrossAccountAuthorizationResponse;
import org.openapitools.client.model.CreateReadinessCheckRequest;
import org.openapitools.client.model.CreateReadinessCheckResponse;
import org.openapitools.client.model.CreateRecoveryGroupRequest;
import org.openapitools.client.model.CreateRecoveryGroupResponse;
import org.openapitools.client.model.CreateResourceSetRequest;
import org.openapitools.client.model.CreateResourceSetResponse;
import org.openapitools.client.model.GetArchitectureRecommendationsResponse;
import org.openapitools.client.model.GetCellReadinessSummaryResponse;
import org.openapitools.client.model.GetCellResponse;
import org.openapitools.client.model.GetReadinessCheckResourceStatusResponse;
import org.openapitools.client.model.GetReadinessCheckResponse;
import org.openapitools.client.model.GetReadinessCheckStatusResponse;
import org.openapitools.client.model.GetRecoveryGroupReadinessSummaryResponse;
import org.openapitools.client.model.GetRecoveryGroupResponse;
import org.openapitools.client.model.GetResourceSetResponse;
import org.openapitools.client.model.ListCellsResponse;
import org.openapitools.client.model.ListCrossAccountAuthorizationsResponse;
import org.openapitools.client.model.ListReadinessChecksResponse;
import org.openapitools.client.model.ListRecoveryGroupsResponse;
import org.openapitools.client.model.ListResourceSetsResponse;
import org.openapitools.client.model.ListRulesResponse;
import org.openapitools.client.model.ListTagsForResourcesResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateCellRequest;
import org.openapitools.client.model.UpdateCellResponse;
import org.openapitools.client.model.UpdateReadinessCheckRequest;
import org.openapitools.client.model.UpdateReadinessCheckResponse;
import org.openapitools.client.model.UpdateRecoveryGroupRequest;
import org.openapitools.client.model.UpdateRecoveryGroupResponse;
import org.openapitools.client.model.UpdateResourceSetRequest;
import org.openapitools.client.model.UpdateResourceSetResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Creates a cell in an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCellTest() throws ApiException {
        CreateCellRequest createCellRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCellResponse response = api.createCell(createCellRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a cross-account readiness authorization. This lets you authorize another account to work with Route 53 Application Recovery Controller, for example, to check the readiness status of resources in a separate account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCrossAccountAuthorizationTest() throws ApiException {
        CreateCrossAccountAuthorizationRequest createCrossAccountAuthorizationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCrossAccountAuthorizationResponse response = api.createCrossAccountAuthorization(createCrossAccountAuthorizationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a readiness check in an account. A readiness check monitors a resource set in your application, such as a set of Amazon Aurora instances, that Application Recovery Controller is auditing recovery readiness for. The audits run once every minute on every resource that&#39;s associated with a readiness check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReadinessCheckTest() throws ApiException {
        CreateReadinessCheckRequest createReadinessCheckRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateReadinessCheckResponse response = api.createReadinessCheck(createReadinessCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a recovery group in an account. A recovery group corresponds to an application and includes a list of the cells that make up the application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRecoveryGroupTest() throws ApiException {
        CreateRecoveryGroupRequest createRecoveryGroupRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRecoveryGroupResponse response = api.createRecoveryGroup(createRecoveryGroupRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a resource set. A resource set is a set of resources of one type that span multiple cells. You can associate a resource set with a readiness check to monitor the resources for failover readiness.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createResourceSetTest() throws ApiException {
        CreateResourceSetRequest createResourceSetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateResourceSetResponse response = api.createResourceSet(createResourceSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Delete a cell. When successful, the response code is 204, with no response body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCellTest() throws ApiException {
        String cellName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteCell(cellName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes cross account readiness authorization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCrossAccountAuthorizationTest() throws ApiException {
        String crossAccountAuthorization = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteCrossAccountAuthorization(crossAccountAuthorization, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a readiness check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteReadinessCheckTest() throws ApiException {
        String readinessCheckName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteReadinessCheck(readinessCheckName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a recovery group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRecoveryGroupTest() throws ApiException {
        String recoveryGroupName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteRecoveryGroup(recoveryGroupName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a resource set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResourceSetTest() throws ApiException {
        String resourceSetName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteResourceSet(resourceSetName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets recommendations about architecture designs for improving resiliency for an application, based on a recovery group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArchitectureRecommendationsTest() throws ApiException {
        String recoveryGroupName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        GetArchitectureRecommendationsResponse response = api.getArchitectureRecommendations(recoveryGroupName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Gets information about a cell including cell name, cell Amazon Resource Name (ARN), ARNs of nested cells for this cell, and a list of those cell ARNs with their associated recovery group ARNs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCellTest() throws ApiException {
        String cellName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetCellResponse response = api.getCell(cellName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets readiness for a cell. Aggregates the readiness of all the resources that are associated with the cell into a single value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCellReadinessSummaryTest() throws ApiException {
        String cellName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetCellReadinessSummaryResponse response = api.getCellReadinessSummary(cellName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Gets details about a readiness check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReadinessCheckTest() throws ApiException {
        String readinessCheckName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetReadinessCheckResponse response = api.getReadinessCheck(readinessCheckName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets individual readiness status for a readiness check. To see the overall readiness status for a recovery group, that considers the readiness status for all the readiness checks in the recovery group, use GetRecoveryGroupReadinessSummary.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReadinessCheckResourceStatusTest() throws ApiException {
        String readinessCheckName = null;
        String resourceIdentifier = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetReadinessCheckResourceStatusResponse response = api.getReadinessCheckResourceStatus(readinessCheckName, resourceIdentifier, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Gets the readiness status for an individual readiness check. To see the overall readiness status for a recovery group, that considers the readiness status for all the readiness checks in a recovery group, use GetRecoveryGroupReadinessSummary.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReadinessCheckStatusTest() throws ApiException {
        String readinessCheckName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetReadinessCheckStatusResponse response = api.getReadinessCheckStatus(readinessCheckName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Gets details about a recovery group, including a list of the cells that are included in it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecoveryGroupTest() throws ApiException {
        String recoveryGroupName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetRecoveryGroupResponse response = api.getRecoveryGroup(recoveryGroupName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Displays a summary of information about a recovery group&#39;s readiness status. Includes the readiness checks for resources in the recovery group and the readiness status of each one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecoveryGroupReadinessSummaryTest() throws ApiException {
        String recoveryGroupName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetRecoveryGroupReadinessSummaryResponse response = api.getRecoveryGroupReadinessSummary(recoveryGroupName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Displays the details about a resource set, including a list of the resources in the set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResourceSetTest() throws ApiException {
        String resourceSetName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetResourceSetResponse response = api.getResourceSet(resourceSetName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the cells for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCellsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListCellsResponse response = api.listCells(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the cross-account readiness authorizations that are in place for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCrossAccountAuthorizationsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListCrossAccountAuthorizationsResponse response = api.listCrossAccountAuthorizations(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the readiness checks for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listReadinessChecksTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListReadinessChecksResponse response = api.listReadinessChecks(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the recovery groups in an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecoveryGroupsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListRecoveryGroupsResponse response = api.listRecoveryGroups(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the resource sets in an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listResourceSetsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListResourceSetsResponse response = api.listResourceSets(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all readiness rules, or lists the readiness rules for a specific resource type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRulesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String resourceType = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListRulesResponse response = api.listRules(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, resourceType, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the tags for a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourcesTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourcesResponse response = api.listTagsForResources(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds a tag to a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a tag from a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a cell to replace the list of nested cells with a new list of nested cells.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCellTest() throws ApiException {
        String cellName = null;
        UpdateCellRequest updateCellRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateCellResponse response = api.updateCell(cellName, updateCellRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a readiness check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateReadinessCheckTest() throws ApiException {
        String readinessCheckName = null;
        UpdateReadinessCheckRequest updateReadinessCheckRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateReadinessCheckResponse response = api.updateReadinessCheck(readinessCheckName, updateReadinessCheckRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a recovery group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRecoveryGroupTest() throws ApiException {
        String recoveryGroupName = null;
        UpdateRecoveryGroupRequest updateRecoveryGroupRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateRecoveryGroupResponse response = api.updateRecoveryGroup(recoveryGroupName, updateRecoveryGroupRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a resource set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateResourceSetTest() throws ApiException {
        String resourceSetName = null;
        UpdateResourceSetRequest updateResourceSetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateResourceSetResponse response = api.updateResourceSet(resourceSetName, updateResourceSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
