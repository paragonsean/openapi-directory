/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsRoute53RecoveryReadiness);
  }
}(this, function(expect, AwsRoute53RecoveryReadiness) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsRoute53RecoveryReadiness.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createCell', function() {
      it('should call createCell successfully', function(done) {
        //uncomment below and update the code to test createCell
        //instance.createCell(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCrossAccountAuthorization', function() {
      it('should call createCrossAccountAuthorization successfully', function(done) {
        //uncomment below and update the code to test createCrossAccountAuthorization
        //instance.createCrossAccountAuthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReadinessCheck', function() {
      it('should call createReadinessCheck successfully', function(done) {
        //uncomment below and update the code to test createReadinessCheck
        //instance.createReadinessCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRecoveryGroup', function() {
      it('should call createRecoveryGroup successfully', function(done) {
        //uncomment below and update the code to test createRecoveryGroup
        //instance.createRecoveryGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createResourceSet', function() {
      it('should call createResourceSet successfully', function(done) {
        //uncomment below and update the code to test createResourceSet
        //instance.createResourceSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCell', function() {
      it('should call deleteCell successfully', function(done) {
        //uncomment below and update the code to test deleteCell
        //instance.deleteCell(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCrossAccountAuthorization', function() {
      it('should call deleteCrossAccountAuthorization successfully', function(done) {
        //uncomment below and update the code to test deleteCrossAccountAuthorization
        //instance.deleteCrossAccountAuthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReadinessCheck', function() {
      it('should call deleteReadinessCheck successfully', function(done) {
        //uncomment below and update the code to test deleteReadinessCheck
        //instance.deleteReadinessCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRecoveryGroup', function() {
      it('should call deleteRecoveryGroup successfully', function(done) {
        //uncomment below and update the code to test deleteRecoveryGroup
        //instance.deleteRecoveryGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourceSet', function() {
      it('should call deleteResourceSet successfully', function(done) {
        //uncomment below and update the code to test deleteResourceSet
        //instance.deleteResourceSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getArchitectureRecommendations', function() {
      it('should call getArchitectureRecommendations successfully', function(done) {
        //uncomment below and update the code to test getArchitectureRecommendations
        //instance.getArchitectureRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCell', function() {
      it('should call getCell successfully', function(done) {
        //uncomment below and update the code to test getCell
        //instance.getCell(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCellReadinessSummary', function() {
      it('should call getCellReadinessSummary successfully', function(done) {
        //uncomment below and update the code to test getCellReadinessSummary
        //instance.getCellReadinessSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadinessCheck', function() {
      it('should call getReadinessCheck successfully', function(done) {
        //uncomment below and update the code to test getReadinessCheck
        //instance.getReadinessCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadinessCheckResourceStatus', function() {
      it('should call getReadinessCheckResourceStatus successfully', function(done) {
        //uncomment below and update the code to test getReadinessCheckResourceStatus
        //instance.getReadinessCheckResourceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReadinessCheckStatus', function() {
      it('should call getReadinessCheckStatus successfully', function(done) {
        //uncomment below and update the code to test getReadinessCheckStatus
        //instance.getReadinessCheckStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecoveryGroup', function() {
      it('should call getRecoveryGroup successfully', function(done) {
        //uncomment below and update the code to test getRecoveryGroup
        //instance.getRecoveryGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecoveryGroupReadinessSummary', function() {
      it('should call getRecoveryGroupReadinessSummary successfully', function(done) {
        //uncomment below and update the code to test getRecoveryGroupReadinessSummary
        //instance.getRecoveryGroupReadinessSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResourceSet', function() {
      it('should call getResourceSet successfully', function(done) {
        //uncomment below and update the code to test getResourceSet
        //instance.getResourceSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCells', function() {
      it('should call listCells successfully', function(done) {
        //uncomment below and update the code to test listCells
        //instance.listCells(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCrossAccountAuthorizations', function() {
      it('should call listCrossAccountAuthorizations successfully', function(done) {
        //uncomment below and update the code to test listCrossAccountAuthorizations
        //instance.listCrossAccountAuthorizations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReadinessChecks', function() {
      it('should call listReadinessChecks successfully', function(done) {
        //uncomment below and update the code to test listReadinessChecks
        //instance.listReadinessChecks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecoveryGroups', function() {
      it('should call listRecoveryGroups successfully', function(done) {
        //uncomment below and update the code to test listRecoveryGroups
        //instance.listRecoveryGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourceSets', function() {
      it('should call listResourceSets successfully', function(done) {
        //uncomment below and update the code to test listResourceSets
        //instance.listResourceSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRules', function() {
      it('should call listRules successfully', function(done) {
        //uncomment below and update the code to test listRules
        //instance.listRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResources', function() {
      it('should call listTagsForResources successfully', function(done) {
        //uncomment below and update the code to test listTagsForResources
        //instance.listTagsForResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCell', function() {
      it('should call updateCell successfully', function(done) {
        //uncomment below and update the code to test updateCell
        //instance.updateCell(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateReadinessCheck', function() {
      it('should call updateReadinessCheck successfully', function(done) {
        //uncomment below and update the code to test updateReadinessCheck
        //instance.updateReadinessCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRecoveryGroup', function() {
      it('should call updateRecoveryGroup successfully', function(done) {
        //uncomment below and update the code to test updateRecoveryGroup
        //instance.updateRecoveryGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateResourceSet', function() {
      it('should call updateResourceSet successfully', function(done) {
        //uncomment below and update the code to test updateResourceSet
        //instance.updateResourceSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
