/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Resource from './Resource';

/**
 * The CreateResourceSetRequest model module.
 * @module model/CreateResourceSetRequest
 * @version 2019-12-02
 */
class CreateResourceSetRequest {
    /**
     * Constructs a new <code>CreateResourceSetRequest</code>.
     * @alias module:model/CreateResourceSetRequest
     * @param resourceSetName {String} The name of the resource set to create.
     * @param resourceSetType {String} <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
     * @param resources {Array.<module:model/Resource>} A list of resource objects in the resource set.
     */
    constructor(resourceSetName, resourceSetType, resources) { 
        
        CreateResourceSetRequest.initialize(this, resourceSetName, resourceSetType, resources);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceSetName, resourceSetType, resources) { 
        obj['resourceSetName'] = resourceSetName;
        obj['resourceSetType'] = resourceSetType;
        obj['resources'] = resources;
    }

    /**
     * Constructs a <code>CreateResourceSetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateResourceSetRequest} obj Optional instance to populate.
     * @return {module:model/CreateResourceSetRequest} The populated <code>CreateResourceSetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateResourceSetRequest();

            if (data.hasOwnProperty('resourceSetName')) {
                obj['resourceSetName'] = ApiClient.convertToType(data['resourceSetName'], 'String');
            }
            if (data.hasOwnProperty('resourceSetType')) {
                obj['resourceSetType'] = ApiClient.convertToType(data['resourceSetType'], 'String');
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], [Resource]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateResourceSetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateResourceSetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateResourceSetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['resourceSetName'] && !(typeof data['resourceSetName'] === 'string' || data['resourceSetName'] instanceof String)) {
            throw new Error("Expected the field `resourceSetName` to be a primitive type in the JSON string but got " + data['resourceSetName']);
        }
        // ensure the json data is a string
        if (data['resourceSetType'] && !(typeof data['resourceSetType'] === 'string' || data['resourceSetType'] instanceof String)) {
            throw new Error("Expected the field `resourceSetType` to be a primitive type in the JSON string but got " + data['resourceSetType']);
        }
        if (data['resources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resources'])) {
                throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
            }
            // validate the optional field `resources` (array)
            for (const item of data['resources']) {
                Resource.validateJSON(item);
            };
        }

        return true;
    }


}

CreateResourceSetRequest.RequiredProperties = ["resourceSetName", "resourceSetType", "resources"];

/**
 * The name of the resource set to create.
 * @member {String} resourceSetName
 */
CreateResourceSetRequest.prototype['resourceSetName'] = undefined;

/**
 * <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
 * @member {String} resourceSetType
 */
CreateResourceSetRequest.prototype['resourceSetType'] = undefined;

/**
 * A list of resource objects in the resource set.
 * @member {Array.<module:model/Resource>} resources
 */
CreateResourceSetRequest.prototype['resources'] = undefined;

/**
 * A collection of tags associated with a resource.
 * @member {Object.<String, String>} tags
 */
CreateResourceSetRequest.prototype['tags'] = undefined;






export default CreateResourceSetRequest;

