/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CellOutput model module.
 * @module model/CellOutput
 * @version 2019-12-02
 */
class CellOutput {
    /**
     * Constructs a new <code>CellOutput</code>.
     * Information about a cell.
     * @alias module:model/CellOutput
     * @param cellArn {String} 
     * @param cellName {String} 
     * @param cells {Array} 
     * @param parentReadinessScopes {Array} 
     */
    constructor(cellArn, cellName, cells, parentReadinessScopes) { 
        
        CellOutput.initialize(this, cellArn, cellName, cells, parentReadinessScopes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cellArn, cellName, cells, parentReadinessScopes) { 
        obj['CellArn'] = cellArn;
        obj['CellName'] = cellName;
        obj['Cells'] = cells;
        obj['ParentReadinessScopes'] = parentReadinessScopes;
    }

    /**
     * Constructs a <code>CellOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CellOutput} obj Optional instance to populate.
     * @return {module:model/CellOutput} The populated <code>CellOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CellOutput();

            if (data.hasOwnProperty('CellArn')) {
                obj['CellArn'] = ApiClient.convertToType(data['CellArn'], 'String');
            }
            if (data.hasOwnProperty('CellName')) {
                obj['CellName'] = ApiClient.convertToType(data['CellName'], 'String');
            }
            if (data.hasOwnProperty('Cells')) {
                obj['Cells'] = ApiClient.convertToType(data['Cells'], Array);
            }
            if (data.hasOwnProperty('ParentReadinessScopes')) {
                obj['ParentReadinessScopes'] = ApiClient.convertToType(data['ParentReadinessScopes'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CellOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CellOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CellOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CellArn`
        if (data['CellArn']) { // data not null
          String.validateJSON(data['CellArn']);
        }
        // validate the optional field `CellName`
        if (data['CellName']) { // data not null
          String.validateJSON(data['CellName']);
        }
        // validate the optional field `Cells`
        if (data['Cells']) { // data not null
          Array.validateJSON(data['Cells']);
        }
        // validate the optional field `ParentReadinessScopes`
        if (data['ParentReadinessScopes']) { // data not null
          Array.validateJSON(data['ParentReadinessScopes']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }

        return true;
    }


}

CellOutput.RequiredProperties = ["CellArn", "CellName", "Cells", "ParentReadinessScopes"];

/**
 * @member {String} CellArn
 */
CellOutput.prototype['CellArn'] = undefined;

/**
 * @member {String} CellName
 */
CellOutput.prototype['CellName'] = undefined;

/**
 * @member {Array} Cells
 */
CellOutput.prototype['Cells'] = undefined;

/**
 * @member {Array} ParentReadinessScopes
 */
CellOutput.prototype['ParentReadinessScopes'] = undefined;

/**
 * @member {Object} Tags
 */
CellOutput.prototype['Tags'] = undefined;






export default CellOutput;

