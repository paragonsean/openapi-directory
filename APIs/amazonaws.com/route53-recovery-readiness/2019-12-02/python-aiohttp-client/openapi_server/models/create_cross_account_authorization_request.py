# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateCrossAccountAuthorizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cross_account_authorization: str=None):
        """CreateCrossAccountAuthorizationRequest - a model defined in OpenAPI

        :param cross_account_authorization: The cross_account_authorization of this CreateCrossAccountAuthorizationRequest.
        """
        self.openapi_types = {
            'cross_account_authorization': str
        }

        self.attribute_map = {
            'cross_account_authorization': 'crossAccountAuthorization'
        }

        self._cross_account_authorization = cross_account_authorization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCrossAccountAuthorizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCrossAccountAuthorization_request of this CreateCrossAccountAuthorizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cross_account_authorization(self):
        """Gets the cross_account_authorization of this CreateCrossAccountAuthorizationRequest.

        CrossAccountAuthorization

        :return: The cross_account_authorization of this CreateCrossAccountAuthorizationRequest.
        :rtype: str
        """
        return self._cross_account_authorization

    @cross_account_authorization.setter
    def cross_account_authorization(self, cross_account_authorization):
        """Sets the cross_account_authorization of this CreateCrossAccountAuthorizationRequest.

        CrossAccountAuthorization

        :param cross_account_authorization: The cross_account_authorization of this CreateCrossAccountAuthorizationRequest.
        :type cross_account_authorization: str
        """
        if cross_account_authorization is None:
            raise ValueError("Invalid value for `cross_account_authorization`, must not be `None`")

        self._cross_account_authorization = cross_account_authorization
