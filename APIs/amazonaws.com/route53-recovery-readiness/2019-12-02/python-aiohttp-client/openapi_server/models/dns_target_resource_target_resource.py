# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_resource_nlb_resource import TargetResourceNLBResource
from openapi_server.models.target_resource_r53_resource import TargetResourceR53Resource
from openapi_server import util


class DNSTargetResourceTargetResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nlb_resource: TargetResourceNLBResource=None, r53_resource: TargetResourceR53Resource=None):
        """DNSTargetResourceTargetResource - a model defined in OpenAPI

        :param nlb_resource: The nlb_resource of this DNSTargetResourceTargetResource.
        :param r53_resource: The r53_resource of this DNSTargetResourceTargetResource.
        """
        self.openapi_types = {
            'nlb_resource': TargetResourceNLBResource,
            'r53_resource': TargetResourceR53Resource
        }

        self.attribute_map = {
            'nlb_resource': 'NLBResource',
            'r53_resource': 'R53Resource'
        }

        self._nlb_resource = nlb_resource
        self._r53_resource = r53_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DNSTargetResourceTargetResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DNSTargetResource_TargetResource of this DNSTargetResourceTargetResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nlb_resource(self):
        """Gets the nlb_resource of this DNSTargetResourceTargetResource.


        :return: The nlb_resource of this DNSTargetResourceTargetResource.
        :rtype: TargetResourceNLBResource
        """
        return self._nlb_resource

    @nlb_resource.setter
    def nlb_resource(self, nlb_resource):
        """Sets the nlb_resource of this DNSTargetResourceTargetResource.


        :param nlb_resource: The nlb_resource of this DNSTargetResourceTargetResource.
        :type nlb_resource: TargetResourceNLBResource
        """

        self._nlb_resource = nlb_resource

    @property
    def r53_resource(self):
        """Gets the r53_resource of this DNSTargetResourceTargetResource.


        :return: The r53_resource of this DNSTargetResourceTargetResource.
        :rtype: TargetResourceR53Resource
        """
        return self._r53_resource

    @r53_resource.setter
    def r53_resource(self, r53_resource):
        """Sets the r53_resource of this DNSTargetResourceTargetResource.


        :param r53_resource: The r53_resource of this DNSTargetResourceTargetResource.
        :type r53_resource: TargetResourceR53Resource
        """

        self._r53_resource = r53_resource
