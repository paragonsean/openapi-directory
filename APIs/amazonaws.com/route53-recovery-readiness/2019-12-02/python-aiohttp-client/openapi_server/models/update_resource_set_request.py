# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource import Resource
import re
from openapi_server import util


class UpdateResourceSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_set_type: str=None, resources: List[Resource]=None):
        """UpdateResourceSetRequest - a model defined in OpenAPI

        :param resource_set_type: The resource_set_type of this UpdateResourceSetRequest.
        :param resources: The resources of this UpdateResourceSetRequest.
        """
        self.openapi_types = {
            'resource_set_type': str,
            'resources': List[Resource]
        }

        self.attribute_map = {
            'resource_set_type': 'resourceSetType',
            'resources': 'resources'
        }

        self._resource_set_type = resource_set_type
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResourceSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResourceSet_request of this UpdateResourceSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_set_type(self):
        """Gets the resource_set_type of this UpdateResourceSetRequest.

        <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>

        :return: The resource_set_type of this UpdateResourceSetRequest.
        :rtype: str
        """
        return self._resource_set_type

    @resource_set_type.setter
    def resource_set_type(self, resource_set_type):
        """Sets the resource_set_type of this UpdateResourceSetRequest.

        <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>

        :param resource_set_type: The resource_set_type of this UpdateResourceSetRequest.
        :type resource_set_type: str
        """
        if resource_set_type is None:
            raise ValueError("Invalid value for `resource_set_type`, must not be `None`")
        if resource_set_type is not None and not re.search(r'AWS::[A-Za-z0-9]+::[A-Za-z0-9]+', resource_set_type):
            raise ValueError("Invalid value for `resource_set_type`, must be a follow pattern or equal to `/AWS::[A-Za-z0-9]+::[A-Za-z0-9]+/`")

        self._resource_set_type = resource_set_type

    @property
    def resources(self):
        """Gets the resources of this UpdateResourceSetRequest.

        A list of resource objects.

        :return: The resources of this UpdateResourceSetRequest.
        :rtype: List[Resource]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this UpdateResourceSetRequest.

        A list of resource objects.

        :param resources: The resources of this UpdateResourceSetRequest.
        :type resources: List[Resource]
        """
        if resources is None:
            raise ValueError("Invalid value for `resources`, must not be `None`")

        self._resources = resources
