# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateReadinessCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, readiness_check_arn: str=None, readiness_check_name: str=None, resource_set: str=None, tags: Dict=None):
        """CreateReadinessCheckResponse - a model defined in OpenAPI

        :param readiness_check_arn: The readiness_check_arn of this CreateReadinessCheckResponse.
        :param readiness_check_name: The readiness_check_name of this CreateReadinessCheckResponse.
        :param resource_set: The resource_set of this CreateReadinessCheckResponse.
        :param tags: The tags of this CreateReadinessCheckResponse.
        """
        self.openapi_types = {
            'readiness_check_arn': str,
            'readiness_check_name': str,
            'resource_set': str,
            'tags': Dict
        }

        self.attribute_map = {
            'readiness_check_arn': 'ReadinessCheckArn',
            'readiness_check_name': 'ReadinessCheckName',
            'resource_set': 'ResourceSet',
            'tags': 'Tags'
        }

        self._readiness_check_arn = readiness_check_arn
        self._readiness_check_name = readiness_check_name
        self._resource_set = resource_set
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateReadinessCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateReadinessCheckResponse of this CreateReadinessCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def readiness_check_arn(self):
        """Gets the readiness_check_arn of this CreateReadinessCheckResponse.


        :return: The readiness_check_arn of this CreateReadinessCheckResponse.
        :rtype: str
        """
        return self._readiness_check_arn

    @readiness_check_arn.setter
    def readiness_check_arn(self, readiness_check_arn):
        """Sets the readiness_check_arn of this CreateReadinessCheckResponse.


        :param readiness_check_arn: The readiness_check_arn of this CreateReadinessCheckResponse.
        :type readiness_check_arn: str
        """

        self._readiness_check_arn = readiness_check_arn

    @property
    def readiness_check_name(self):
        """Gets the readiness_check_name of this CreateReadinessCheckResponse.


        :return: The readiness_check_name of this CreateReadinessCheckResponse.
        :rtype: str
        """
        return self._readiness_check_name

    @readiness_check_name.setter
    def readiness_check_name(self, readiness_check_name):
        """Sets the readiness_check_name of this CreateReadinessCheckResponse.


        :param readiness_check_name: The readiness_check_name of this CreateReadinessCheckResponse.
        :type readiness_check_name: str
        """

        self._readiness_check_name = readiness_check_name

    @property
    def resource_set(self):
        """Gets the resource_set of this CreateReadinessCheckResponse.


        :return: The resource_set of this CreateReadinessCheckResponse.
        :rtype: str
        """
        return self._resource_set

    @resource_set.setter
    def resource_set(self, resource_set):
        """Sets the resource_set of this CreateReadinessCheckResponse.


        :param resource_set: The resource_set of this CreateReadinessCheckResponse.
        :type resource_set: str
        """

        self._resource_set = resource_set

    @property
    def tags(self):
        """Gets the tags of this CreateReadinessCheckResponse.


        :return: The tags of this CreateReadinessCheckResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateReadinessCheckResponse.


        :param tags: The tags of this CreateReadinessCheckResponse.
        :type tags: Dict
        """

        self._tags = tags
