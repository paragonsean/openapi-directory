# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateRecoveryGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cells: List[str]=None, recovery_group_name: str=None, tags: Dict[str, str]=None):
        """CreateRecoveryGroupRequest - a model defined in OpenAPI

        :param cells: The cells of this CreateRecoveryGroupRequest.
        :param recovery_group_name: The recovery_group_name of this CreateRecoveryGroupRequest.
        :param tags: The tags of this CreateRecoveryGroupRequest.
        """
        self.openapi_types = {
            'cells': List[str],
            'recovery_group_name': str,
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'cells': 'cells',
            'recovery_group_name': 'recoveryGroupName',
            'tags': 'tags'
        }

        self._cells = cells
        self._recovery_group_name = recovery_group_name
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRecoveryGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRecoveryGroup_request of this CreateRecoveryGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cells(self):
        """Gets the cells of this CreateRecoveryGroupRequest.

        A list of the cell Amazon Resource Names (ARNs) in the recovery group.

        :return: The cells of this CreateRecoveryGroupRequest.
        :rtype: List[str]
        """
        return self._cells

    @cells.setter
    def cells(self, cells):
        """Sets the cells of this CreateRecoveryGroupRequest.

        A list of the cell Amazon Resource Names (ARNs) in the recovery group.

        :param cells: The cells of this CreateRecoveryGroupRequest.
        :type cells: List[str]
        """

        self._cells = cells

    @property
    def recovery_group_name(self):
        """Gets the recovery_group_name of this CreateRecoveryGroupRequest.

        The name of the recovery group to create.

        :return: The recovery_group_name of this CreateRecoveryGroupRequest.
        :rtype: str
        """
        return self._recovery_group_name

    @recovery_group_name.setter
    def recovery_group_name(self, recovery_group_name):
        """Sets the recovery_group_name of this CreateRecoveryGroupRequest.

        The name of the recovery group to create.

        :param recovery_group_name: The recovery_group_name of this CreateRecoveryGroupRequest.
        :type recovery_group_name: str
        """
        if recovery_group_name is None:
            raise ValueError("Invalid value for `recovery_group_name`, must not be `None`")

        self._recovery_group_name = recovery_group_name

    @property
    def tags(self):
        """Gets the tags of this CreateRecoveryGroupRequest.

        A collection of tags associated with a resource.

        :return: The tags of this CreateRecoveryGroupRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateRecoveryGroupRequest.

        A collection of tags associated with a resource.

        :param tags: The tags of this CreateRecoveryGroupRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
