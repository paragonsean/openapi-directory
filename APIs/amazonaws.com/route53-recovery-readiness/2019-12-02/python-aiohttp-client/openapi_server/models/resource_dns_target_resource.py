# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dns_target_resource_target_resource import DNSTargetResourceTargetResource
from openapi_server import util


class ResourceDnsTargetResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, hosted_zone_arn: str=None, record_set_id: str=None, record_type: str=None, target_resource: DNSTargetResourceTargetResource=None):
        """ResourceDnsTargetResource - a model defined in OpenAPI

        :param domain_name: The domain_name of this ResourceDnsTargetResource.
        :param hosted_zone_arn: The hosted_zone_arn of this ResourceDnsTargetResource.
        :param record_set_id: The record_set_id of this ResourceDnsTargetResource.
        :param record_type: The record_type of this ResourceDnsTargetResource.
        :param target_resource: The target_resource of this ResourceDnsTargetResource.
        """
        self.openapi_types = {
            'domain_name': str,
            'hosted_zone_arn': str,
            'record_set_id': str,
            'record_type': str,
            'target_resource': DNSTargetResourceTargetResource
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'hosted_zone_arn': 'HostedZoneArn',
            'record_set_id': 'RecordSetId',
            'record_type': 'RecordType',
            'target_resource': 'TargetResource'
        }

        self._domain_name = domain_name
        self._hosted_zone_arn = hosted_zone_arn
        self._record_set_id = record_set_id
        self._record_type = record_type
        self._target_resource = target_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceDnsTargetResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Resource_DnsTargetResource of this ResourceDnsTargetResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this ResourceDnsTargetResource.


        :return: The domain_name of this ResourceDnsTargetResource.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this ResourceDnsTargetResource.


        :param domain_name: The domain_name of this ResourceDnsTargetResource.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def hosted_zone_arn(self):
        """Gets the hosted_zone_arn of this ResourceDnsTargetResource.


        :return: The hosted_zone_arn of this ResourceDnsTargetResource.
        :rtype: str
        """
        return self._hosted_zone_arn

    @hosted_zone_arn.setter
    def hosted_zone_arn(self, hosted_zone_arn):
        """Sets the hosted_zone_arn of this ResourceDnsTargetResource.


        :param hosted_zone_arn: The hosted_zone_arn of this ResourceDnsTargetResource.
        :type hosted_zone_arn: str
        """

        self._hosted_zone_arn = hosted_zone_arn

    @property
    def record_set_id(self):
        """Gets the record_set_id of this ResourceDnsTargetResource.


        :return: The record_set_id of this ResourceDnsTargetResource.
        :rtype: str
        """
        return self._record_set_id

    @record_set_id.setter
    def record_set_id(self, record_set_id):
        """Sets the record_set_id of this ResourceDnsTargetResource.


        :param record_set_id: The record_set_id of this ResourceDnsTargetResource.
        :type record_set_id: str
        """

        self._record_set_id = record_set_id

    @property
    def record_type(self):
        """Gets the record_type of this ResourceDnsTargetResource.


        :return: The record_type of this ResourceDnsTargetResource.
        :rtype: str
        """
        return self._record_type

    @record_type.setter
    def record_type(self, record_type):
        """Sets the record_type of this ResourceDnsTargetResource.


        :param record_type: The record_type of this ResourceDnsTargetResource.
        :type record_type: str
        """

        self._record_type = record_type

    @property
    def target_resource(self):
        """Gets the target_resource of this ResourceDnsTargetResource.


        :return: The target_resource of this ResourceDnsTargetResource.
        :rtype: DNSTargetResourceTargetResource
        """
        return self._target_resource

    @target_resource.setter
    def target_resource(self, target_resource):
        """Sets the target_resource of this ResourceDnsTargetResource.


        :param target_resource: The target_resource of this ResourceDnsTargetResource.
        :type target_resource: DNSTargetResourceTargetResource
        """

        self._target_resource = target_resource
