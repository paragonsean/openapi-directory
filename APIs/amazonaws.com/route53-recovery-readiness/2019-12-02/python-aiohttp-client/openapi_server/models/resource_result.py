# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.readiness import Readiness
from openapi_server import util


class ResourceResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component_id: str=None, last_checked_timestamp: datetime=None, readiness: Readiness=None, resource_arn: str=None):
        """ResourceResult - a model defined in OpenAPI

        :param component_id: The component_id of this ResourceResult.
        :param last_checked_timestamp: The last_checked_timestamp of this ResourceResult.
        :param readiness: The readiness of this ResourceResult.
        :param resource_arn: The resource_arn of this ResourceResult.
        """
        self.openapi_types = {
            'component_id': str,
            'last_checked_timestamp': datetime,
            'readiness': Readiness,
            'resource_arn': str
        }

        self.attribute_map = {
            'component_id': 'ComponentId',
            'last_checked_timestamp': 'LastCheckedTimestamp',
            'readiness': 'Readiness',
            'resource_arn': 'ResourceArn'
        }

        self._component_id = component_id
        self._last_checked_timestamp = last_checked_timestamp
        self._readiness = readiness
        self._resource_arn = resource_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceResult of this ResourceResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component_id(self):
        """Gets the component_id of this ResourceResult.


        :return: The component_id of this ResourceResult.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this ResourceResult.


        :param component_id: The component_id of this ResourceResult.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def last_checked_timestamp(self):
        """Gets the last_checked_timestamp of this ResourceResult.


        :return: The last_checked_timestamp of this ResourceResult.
        :rtype: datetime
        """
        return self._last_checked_timestamp

    @last_checked_timestamp.setter
    def last_checked_timestamp(self, last_checked_timestamp):
        """Sets the last_checked_timestamp of this ResourceResult.


        :param last_checked_timestamp: The last_checked_timestamp of this ResourceResult.
        :type last_checked_timestamp: datetime
        """
        if last_checked_timestamp is None:
            raise ValueError("Invalid value for `last_checked_timestamp`, must not be `None`")

        self._last_checked_timestamp = last_checked_timestamp

    @property
    def readiness(self):
        """Gets the readiness of this ResourceResult.


        :return: The readiness of this ResourceResult.
        :rtype: Readiness
        """
        return self._readiness

    @readiness.setter
    def readiness(self, readiness):
        """Sets the readiness of this ResourceResult.


        :param readiness: The readiness of this ResourceResult.
        :type readiness: Readiness
        """
        if readiness is None:
            raise ValueError("Invalid value for `readiness`, must not be `None`")

        self._readiness = readiness

    @property
    def resource_arn(self):
        """Gets the resource_arn of this ResourceResult.


        :return: The resource_arn of this ResourceResult.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this ResourceResult.


        :param resource_arn: The resource_arn of this ResourceResult.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn
