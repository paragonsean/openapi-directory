/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResource.h
 *
 * The resource element of a resource set.
 */

#ifndef OAIResource_H
#define OAIResource_H

#include <QJsonObject>

#include "OAIResource_DnsTargetResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource_DnsTargetResource;

class OAIResource : public OAIObject {
public:
    OAIResource();
    OAIResource(QString json);
    ~OAIResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getComponentId() const;
    void setComponentId(const QString &component_id);
    bool is_component_id_Set() const;
    bool is_component_id_Valid() const;

    OAIResource_DnsTargetResource getDnsTargetResource() const;
    void setDnsTargetResource(const OAIResource_DnsTargetResource &dns_target_resource);
    bool is_dns_target_resource_Set() const;
    bool is_dns_target_resource_Valid() const;

    QList getReadinessScopes() const;
    void setReadinessScopes(const QList &readiness_scopes);
    bool is_readiness_scopes_Set() const;
    bool is_readiness_scopes_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_component_id;
    bool m_component_id_isSet;
    bool m_component_id_isValid;

    OAIResource_DnsTargetResource m_dns_target_resource;
    bool m_dns_target_resource_isSet;
    bool m_dns_target_resource_isValid;

    QList m_readiness_scopes;
    bool m_readiness_scopes_isSet;
    bool m_readiness_scopes_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResource)

#endif // OAIResource_H
