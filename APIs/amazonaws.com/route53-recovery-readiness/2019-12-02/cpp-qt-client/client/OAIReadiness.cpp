/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReadiness.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReadiness::OAIReadiness(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReadiness::OAIReadiness() {
    this->initializeModel();
}

OAIReadiness::~OAIReadiness() {}

void OAIReadiness::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReadiness::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReadiness::fromJson(QString jsonString) {
    
    if ( jsonString.compare("READY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadiness::READY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_READY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadiness::NOT_READY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadiness::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOT_AUTHORIZED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReadiness::NOT_AUTHORIZED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReadiness::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReadiness::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReadiness::READY:
            val = "READY";
            break;
        case eOAIReadiness::NOT_READY:
            val = "NOT_READY";
            break;
        case eOAIReadiness::UNKNOWN:
            val = "UNKNOWN";
            break;
        case eOAIReadiness::NOT_AUTHORIZED:
            val = "NOT_AUTHORIZED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReadiness::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReadiness::eOAIReadiness OAIReadiness::getValue() const {
    return m_value;
}

void OAIReadiness::setValue(const OAIReadiness::eOAIReadiness& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReadiness::isSet() const {
    
    return m_value_isSet;
}

bool OAIReadiness::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
