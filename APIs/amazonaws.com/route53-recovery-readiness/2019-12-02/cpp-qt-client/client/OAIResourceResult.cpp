/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceResult::OAIResourceResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceResult::OAIResourceResult() {
    this->initializeModel();
}

OAIResourceResult::~OAIResourceResult() {}

void OAIResourceResult::initializeModel() {

    m_component_id_isSet = false;
    m_component_id_isValid = false;

    m_last_checked_timestamp_isSet = false;
    m_last_checked_timestamp_isValid = false;

    m_readiness_isSet = false;
    m_readiness_isValid = false;

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;
}

void OAIResourceResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceResult::fromJsonObject(QJsonObject json) {

    m_component_id_isValid = ::OpenAPI::fromJsonValue(m_component_id, json[QString("ComponentId")]);
    m_component_id_isSet = !json[QString("ComponentId")].isNull() && m_component_id_isValid;

    m_last_checked_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_checked_timestamp, json[QString("LastCheckedTimestamp")]);
    m_last_checked_timestamp_isSet = !json[QString("LastCheckedTimestamp")].isNull() && m_last_checked_timestamp_isValid;

    m_readiness_isValid = ::OpenAPI::fromJsonValue(m_readiness, json[QString("Readiness")]);
    m_readiness_isSet = !json[QString("Readiness")].isNull() && m_readiness_isValid;

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceArn")]);
    m_resource_arn_isSet = !json[QString("ResourceArn")].isNull() && m_resource_arn_isValid;
}

QString OAIResourceResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceResult::asJsonObject() const {
    QJsonObject obj;
    if (m_component_id_isSet) {
        obj.insert(QString("ComponentId"), ::OpenAPI::toJsonValue(m_component_id));
    }
    if (m_last_checked_timestamp_isSet) {
        obj.insert(QString("LastCheckedTimestamp"), ::OpenAPI::toJsonValue(m_last_checked_timestamp));
    }
    if (m_readiness.isSet()) {
        obj.insert(QString("Readiness"), ::OpenAPI::toJsonValue(m_readiness));
    }
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    return obj;
}

QString OAIResourceResult::getComponentId() const {
    return m_component_id;
}
void OAIResourceResult::setComponentId(const QString &component_id) {
    m_component_id = component_id;
    m_component_id_isSet = true;
}

bool OAIResourceResult::is_component_id_Set() const{
    return m_component_id_isSet;
}

bool OAIResourceResult::is_component_id_Valid() const{
    return m_component_id_isValid;
}

QDateTime OAIResourceResult::getLastCheckedTimestamp() const {
    return m_last_checked_timestamp;
}
void OAIResourceResult::setLastCheckedTimestamp(const QDateTime &last_checked_timestamp) {
    m_last_checked_timestamp = last_checked_timestamp;
    m_last_checked_timestamp_isSet = true;
}

bool OAIResourceResult::is_last_checked_timestamp_Set() const{
    return m_last_checked_timestamp_isSet;
}

bool OAIResourceResult::is_last_checked_timestamp_Valid() const{
    return m_last_checked_timestamp_isValid;
}

OAIReadiness OAIResourceResult::getReadiness() const {
    return m_readiness;
}
void OAIResourceResult::setReadiness(const OAIReadiness &readiness) {
    m_readiness = readiness;
    m_readiness_isSet = true;
}

bool OAIResourceResult::is_readiness_Set() const{
    return m_readiness_isSet;
}

bool OAIResourceResult::is_readiness_Valid() const{
    return m_readiness_isValid;
}

QString OAIResourceResult::getResourceArn() const {
    return m_resource_arn;
}
void OAIResourceResult::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIResourceResult::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIResourceResult::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

bool OAIResourceResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_checked_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_readiness.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_last_checked_timestamp_isValid && m_readiness_isValid && true;
}

} // namespace OpenAPI
