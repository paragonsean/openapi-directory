/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRecoveryGroupResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRecoveryGroupResponse::OAICreateRecoveryGroupResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRecoveryGroupResponse::OAICreateRecoveryGroupResponse() {
    this->initializeModel();
}

OAICreateRecoveryGroupResponse::~OAICreateRecoveryGroupResponse() {}

void OAICreateRecoveryGroupResponse::initializeModel() {

    m_cells_isSet = false;
    m_cells_isValid = false;

    m_recovery_group_arn_isSet = false;
    m_recovery_group_arn_isValid = false;

    m_recovery_group_name_isSet = false;
    m_recovery_group_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateRecoveryGroupResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRecoveryGroupResponse::fromJsonObject(QJsonObject json) {

    m_cells_isValid = ::OpenAPI::fromJsonValue(m_cells, json[QString("Cells")]);
    m_cells_isSet = !json[QString("Cells")].isNull() && m_cells_isValid;

    m_recovery_group_arn_isValid = ::OpenAPI::fromJsonValue(m_recovery_group_arn, json[QString("RecoveryGroupArn")]);
    m_recovery_group_arn_isSet = !json[QString("RecoveryGroupArn")].isNull() && m_recovery_group_arn_isValid;

    m_recovery_group_name_isValid = ::OpenAPI::fromJsonValue(m_recovery_group_name, json[QString("RecoveryGroupName")]);
    m_recovery_group_name_isSet = !json[QString("RecoveryGroupName")].isNull() && m_recovery_group_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateRecoveryGroupResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRecoveryGroupResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_cells.isSet()) {
        obj.insert(QString("Cells"), ::OpenAPI::toJsonValue(m_cells));
    }
    if (m_recovery_group_arn_isSet) {
        obj.insert(QString("RecoveryGroupArn"), ::OpenAPI::toJsonValue(m_recovery_group_arn));
    }
    if (m_recovery_group_name_isSet) {
        obj.insert(QString("RecoveryGroupName"), ::OpenAPI::toJsonValue(m_recovery_group_name));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QList OAICreateRecoveryGroupResponse::getCells() const {
    return m_cells;
}
void OAICreateRecoveryGroupResponse::setCells(const QList &cells) {
    m_cells = cells;
    m_cells_isSet = true;
}

bool OAICreateRecoveryGroupResponse::is_cells_Set() const{
    return m_cells_isSet;
}

bool OAICreateRecoveryGroupResponse::is_cells_Valid() const{
    return m_cells_isValid;
}

QString OAICreateRecoveryGroupResponse::getRecoveryGroupArn() const {
    return m_recovery_group_arn;
}
void OAICreateRecoveryGroupResponse::setRecoveryGroupArn(const QString &recovery_group_arn) {
    m_recovery_group_arn = recovery_group_arn;
    m_recovery_group_arn_isSet = true;
}

bool OAICreateRecoveryGroupResponse::is_recovery_group_arn_Set() const{
    return m_recovery_group_arn_isSet;
}

bool OAICreateRecoveryGroupResponse::is_recovery_group_arn_Valid() const{
    return m_recovery_group_arn_isValid;
}

QString OAICreateRecoveryGroupResponse::getRecoveryGroupName() const {
    return m_recovery_group_name;
}
void OAICreateRecoveryGroupResponse::setRecoveryGroupName(const QString &recovery_group_name) {
    m_recovery_group_name = recovery_group_name;
    m_recovery_group_name_isSet = true;
}

bool OAICreateRecoveryGroupResponse::is_recovery_group_name_Set() const{
    return m_recovery_group_name_isSet;
}

bool OAICreateRecoveryGroupResponse::is_recovery_group_name_Valid() const{
    return m_recovery_group_name_isValid;
}

QMap OAICreateRecoveryGroupResponse::getTags() const {
    return m_tags;
}
void OAICreateRecoveryGroupResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateRecoveryGroupResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateRecoveryGroupResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateRecoveryGroupResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cells.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRecoveryGroupResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
