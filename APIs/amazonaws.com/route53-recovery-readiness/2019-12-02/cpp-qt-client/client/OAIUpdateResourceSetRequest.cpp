/**
 * AWS Route53 Recovery Readiness
 * Recovery readiness
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateResourceSetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateResourceSetRequest::OAIUpdateResourceSetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateResourceSetRequest::OAIUpdateResourceSetRequest() {
    this->initializeModel();
}

OAIUpdateResourceSetRequest::~OAIUpdateResourceSetRequest() {}

void OAIUpdateResourceSetRequest::initializeModel() {

    m_resource_set_type_isSet = false;
    m_resource_set_type_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;
}

void OAIUpdateResourceSetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateResourceSetRequest::fromJsonObject(QJsonObject json) {

    m_resource_set_type_isValid = ::OpenAPI::fromJsonValue(m_resource_set_type, json[QString("ResourceSetType")]);
    m_resource_set_type_isSet = !json[QString("ResourceSetType")].isNull() && m_resource_set_type_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("Resources")]);
    m_resources_isSet = !json[QString("Resources")].isNull() && m_resources_isValid;
}

QString OAIUpdateResourceSetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateResourceSetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_set_type_isSet) {
        obj.insert(QString("ResourceSetType"), ::OpenAPI::toJsonValue(m_resource_set_type));
    }
    if (m_resources.isSet()) {
        obj.insert(QString("Resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    return obj;
}

QString OAIUpdateResourceSetRequest::getResourceSetType() const {
    return m_resource_set_type;
}
void OAIUpdateResourceSetRequest::setResourceSetType(const QString &resource_set_type) {
    m_resource_set_type = resource_set_type;
    m_resource_set_type_isSet = true;
}

bool OAIUpdateResourceSetRequest::is_resource_set_type_Set() const{
    return m_resource_set_type_isSet;
}

bool OAIUpdateResourceSetRequest::is_resource_set_type_Valid() const{
    return m_resource_set_type_isValid;
}

QList OAIUpdateResourceSetRequest::getResources() const {
    return m_resources;
}
void OAIUpdateResourceSetRequest::setResources(const QList &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIUpdateResourceSetRequest::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIUpdateResourceSetRequest::is_resources_Valid() const{
    return m_resources_isValid;
}

bool OAIUpdateResourceSetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_set_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateResourceSetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_set_type_isValid && m_resources_isValid && true;
}

} // namespace OpenAPI
