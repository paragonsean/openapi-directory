/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaConvert);
  }
}(this, function(expect, AwsElementalMediaConvert) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaConvert.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateCertificate', function() {
      it('should call associateCertificate successfully', function(done) {
        //uncomment below and update the code to test associateCertificate
        //instance.associateCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelJob', function() {
      it('should call cancelJob successfully', function(done) {
        //uncomment below and update the code to test cancelJob
        //instance.cancelJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJob', function() {
      it('should call createJob successfully', function(done) {
        //uncomment below and update the code to test createJob
        //instance.createJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJobTemplate', function() {
      it('should call createJobTemplate successfully', function(done) {
        //uncomment below and update the code to test createJobTemplate
        //instance.createJobTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPreset', function() {
      it('should call createPreset successfully', function(done) {
        //uncomment below and update the code to test createPreset
        //instance.createPreset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQueue', function() {
      it('should call createQueue successfully', function(done) {
        //uncomment below and update the code to test createQueue
        //instance.createQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJobTemplate', function() {
      it('should call deleteJobTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteJobTemplate
        //instance.deleteJobTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePolicy', function() {
      it('should call deletePolicy successfully', function(done) {
        //uncomment below and update the code to test deletePolicy
        //instance.deletePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePreset', function() {
      it('should call deletePreset successfully', function(done) {
        //uncomment below and update the code to test deletePreset
        //instance.deletePreset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQueue', function() {
      it('should call deleteQueue successfully', function(done) {
        //uncomment below and update the code to test deleteQueue
        //instance.deleteQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEndpoints', function() {
      it('should call describeEndpoints successfully', function(done) {
        //uncomment below and update the code to test describeEndpoints
        //instance.describeEndpoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateCertificate', function() {
      it('should call disassociateCertificate successfully', function(done) {
        //uncomment below and update the code to test disassociateCertificate
        //instance.disassociateCertificate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJob', function() {
      it('should call getJob successfully', function(done) {
        //uncomment below and update the code to test getJob
        //instance.getJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobTemplate', function() {
      it('should call getJobTemplate successfully', function(done) {
        //uncomment below and update the code to test getJobTemplate
        //instance.getJobTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPolicy', function() {
      it('should call getPolicy successfully', function(done) {
        //uncomment below and update the code to test getPolicy
        //instance.getPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPreset', function() {
      it('should call getPreset successfully', function(done) {
        //uncomment below and update the code to test getPreset
        //instance.getPreset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueue', function() {
      it('should call getQueue successfully', function(done) {
        //uncomment below and update the code to test getQueue
        //instance.getQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listJobTemplates', function() {
      it('should call listJobTemplates successfully', function(done) {
        //uncomment below and update the code to test listJobTemplates
        //instance.listJobTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listJobs', function() {
      it('should call listJobs successfully', function(done) {
        //uncomment below and update the code to test listJobs
        //instance.listJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPresets', function() {
      it('should call listPresets successfully', function(done) {
        //uncomment below and update the code to test listPresets
        //instance.listPresets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQueues', function() {
      it('should call listQueues successfully', function(done) {
        //uncomment below and update the code to test listQueues
        //instance.listQueues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPolicy', function() {
      it('should call putPolicy successfully', function(done) {
        //uncomment below and update the code to test putPolicy
        //instance.putPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJobTemplate', function() {
      it('should call updateJobTemplate successfully', function(done) {
        //uncomment below and update the code to test updateJobTemplate
        //instance.updateJobTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePreset', function() {
      it('should call updatePreset successfully', function(done) {
        //uncomment below and update the code to test updatePreset
        //instance.updatePreset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQueue', function() {
      it('should call updateQueue successfully', function(done) {
        //uncomment below and update the code to test updateQueue
        //instance.updateQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
