/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaConvert);
  }
}(this, function(expect, AwsElementalMediaConvert) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VideoCodecSettingsXavcSettings', function() {
    it('should create an instance of VideoCodecSettingsXavcSettings', function() {
      // uncomment below and update the code to test VideoCodecSettingsXavcSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be.a(AwsElementalMediaConvert.VideoCodecSettingsXavcSettings);
    });

    it('should have the property adaptiveQuantization (base name: "AdaptiveQuantization")', function() {
      // uncomment below and update the code to test the property adaptiveQuantization
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property entropyEncoding (base name: "EntropyEncoding")', function() {
      // uncomment below and update the code to test the property entropyEncoding
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property framerateControl (base name: "FramerateControl")', function() {
      // uncomment below and update the code to test the property framerateControl
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property framerateConversionAlgorithm (base name: "FramerateConversionAlgorithm")', function() {
      // uncomment below and update the code to test the property framerateConversionAlgorithm
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property framerateDenominator (base name: "FramerateDenominator")', function() {
      // uncomment below and update the code to test the property framerateDenominator
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property framerateNumerator (base name: "FramerateNumerator")', function() {
      // uncomment below and update the code to test the property framerateNumerator
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property profile (base name: "Profile")', function() {
      // uncomment below and update the code to test the property profile
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property slowPal (base name: "SlowPal")', function() {
      // uncomment below and update the code to test the property slowPal
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property softness (base name: "Softness")', function() {
      // uncomment below and update the code to test the property softness
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property spatialAdaptiveQuantization (base name: "SpatialAdaptiveQuantization")', function() {
      // uncomment below and update the code to test the property spatialAdaptiveQuantization
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property temporalAdaptiveQuantization (base name: "TemporalAdaptiveQuantization")', function() {
      // uncomment below and update the code to test the property temporalAdaptiveQuantization
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property xavc4kIntraCbgProfileSettings (base name: "Xavc4kIntraCbgProfileSettings")', function() {
      // uncomment below and update the code to test the property xavc4kIntraCbgProfileSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property xavc4kIntraVbrProfileSettings (base name: "Xavc4kIntraVbrProfileSettings")', function() {
      // uncomment below and update the code to test the property xavc4kIntraVbrProfileSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property xavc4kProfileSettings (base name: "Xavc4kProfileSettings")', function() {
      // uncomment below and update the code to test the property xavc4kProfileSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property xavcHdIntraCbgProfileSettings (base name: "XavcHdIntraCbgProfileSettings")', function() {
      // uncomment below and update the code to test the property xavcHdIntraCbgProfileSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

    it('should have the property xavcHdProfileSettings (base name: "XavcHdProfileSettings")', function() {
      // uncomment below and update the code to test the property xavcHdProfileSettings
      //var instance = new AwsElementalMediaConvert.VideoCodecSettingsXavcSettings();
      //expect(instance).to.be();
    });

  });

}));
