/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaConvert);
  }
}(this, function(expect, AwsElementalMediaConvert) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateJobRequestSettingsNielsenNonLinearWatermark', function() {
    it('should create an instance of CreateJobRequestSettingsNielsenNonLinearWatermark', function() {
      // uncomment below and update the code to test CreateJobRequestSettingsNielsenNonLinearWatermark
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be.a(AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark);
    });

    it('should have the property activeWatermarkProcess (base name: "ActiveWatermarkProcess")', function() {
      // uncomment below and update the code to test the property activeWatermarkProcess
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property adiFilename (base name: "AdiFilename")', function() {
      // uncomment below and update the code to test the property adiFilename
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property assetId (base name: "AssetId")', function() {
      // uncomment below and update the code to test the property assetId
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property assetName (base name: "AssetName")', function() {
      // uncomment below and update the code to test the property assetName
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property cbetSourceId (base name: "CbetSourceId")', function() {
      // uncomment below and update the code to test the property cbetSourceId
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property episodeId (base name: "EpisodeId")', function() {
      // uncomment below and update the code to test the property episodeId
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property metadataDestination (base name: "MetadataDestination")', function() {
      // uncomment below and update the code to test the property metadataDestination
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property sourceId (base name: "SourceId")', function() {
      // uncomment below and update the code to test the property sourceId
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property sourceWatermarkStatus (base name: "SourceWatermarkStatus")', function() {
      // uncomment below and update the code to test the property sourceWatermarkStatus
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property ticServerUrl (base name: "TicServerUrl")', function() {
      // uncomment below and update the code to test the property ticServerUrl
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

    it('should have the property uniqueTicPerAudioTrack (base name: "UniqueTicPerAudioTrack")', function() {
      // uncomment below and update the code to test the property uniqueTicPerAudioTrack
      //var instance = new AwsElementalMediaConvert.CreateJobRequestSettingsNielsenNonLinearWatermark();
      //expect(instance).to.be();
    });

  });

}));
