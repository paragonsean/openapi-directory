/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CmfcAudioDuration from './CmfcAudioDuration';
import CmfcAudioTrackType from './CmfcAudioTrackType';
import CmfcDescriptiveVideoServiceFlag from './CmfcDescriptiveVideoServiceFlag';
import CmfcIFrameOnlyManifest from './CmfcIFrameOnlyManifest';
import CmfcKlvMetadata from './CmfcKlvMetadata';
import CmfcManifestMetadataSignaling from './CmfcManifestMetadataSignaling';
import CmfcScte35Esam from './CmfcScte35Esam';
import CmfcScte35Source from './CmfcScte35Source';
import CmfcTimedMetadata from './CmfcTimedMetadata';
import CmfcTimedMetadataBoxVersion from './CmfcTimedMetadataBoxVersion';

/**
 * The CmfcSettings model module.
 * @module model/CmfcSettings
 * @version 2017-08-29
 */
class CmfcSettings {
    /**
     * Constructs a new <code>CmfcSettings</code>.
     * These settings relate to the fragmented MP4 container for the segments in your CMAF outputs.
     * @alias module:model/CmfcSettings
     */
    constructor() { 
        
        CmfcSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CmfcSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CmfcSettings} obj Optional instance to populate.
     * @return {module:model/CmfcSettings} The populated <code>CmfcSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CmfcSettings();

            if (data.hasOwnProperty('AudioDuration')) {
                obj['AudioDuration'] = ApiClient.convertToType(data['AudioDuration'], CmfcAudioDuration);
            }
            if (data.hasOwnProperty('AudioGroupId')) {
                obj['AudioGroupId'] = ApiClient.convertToType(data['AudioGroupId'], 'String');
            }
            if (data.hasOwnProperty('AudioRenditionSets')) {
                obj['AudioRenditionSets'] = ApiClient.convertToType(data['AudioRenditionSets'], 'String');
            }
            if (data.hasOwnProperty('AudioTrackType')) {
                obj['AudioTrackType'] = ApiClient.convertToType(data['AudioTrackType'], CmfcAudioTrackType);
            }
            if (data.hasOwnProperty('DescriptiveVideoServiceFlag')) {
                obj['DescriptiveVideoServiceFlag'] = ApiClient.convertToType(data['DescriptiveVideoServiceFlag'], CmfcDescriptiveVideoServiceFlag);
            }
            if (data.hasOwnProperty('IFrameOnlyManifest')) {
                obj['IFrameOnlyManifest'] = ApiClient.convertToType(data['IFrameOnlyManifest'], CmfcIFrameOnlyManifest);
            }
            if (data.hasOwnProperty('KlvMetadata')) {
                obj['KlvMetadata'] = ApiClient.convertToType(data['KlvMetadata'], CmfcKlvMetadata);
            }
            if (data.hasOwnProperty('ManifestMetadataSignaling')) {
                obj['ManifestMetadataSignaling'] = ApiClient.convertToType(data['ManifestMetadataSignaling'], CmfcManifestMetadataSignaling);
            }
            if (data.hasOwnProperty('Scte35Esam')) {
                obj['Scte35Esam'] = ApiClient.convertToType(data['Scte35Esam'], CmfcScte35Esam);
            }
            if (data.hasOwnProperty('Scte35Source')) {
                obj['Scte35Source'] = ApiClient.convertToType(data['Scte35Source'], CmfcScte35Source);
            }
            if (data.hasOwnProperty('TimedMetadata')) {
                obj['TimedMetadata'] = ApiClient.convertToType(data['TimedMetadata'], CmfcTimedMetadata);
            }
            if (data.hasOwnProperty('TimedMetadataBoxVersion')) {
                obj['TimedMetadataBoxVersion'] = ApiClient.convertToType(data['TimedMetadataBoxVersion'], CmfcTimedMetadataBoxVersion);
            }
            if (data.hasOwnProperty('TimedMetadataSchemeIdUri')) {
                obj['TimedMetadataSchemeIdUri'] = ApiClient.convertToType(data['TimedMetadataSchemeIdUri'], 'String');
            }
            if (data.hasOwnProperty('TimedMetadataValue')) {
                obj['TimedMetadataValue'] = ApiClient.convertToType(data['TimedMetadataValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CmfcSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CmfcSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AudioDuration`
        if (data['AudioDuration']) { // data not null
          CmfcAudioDuration.validateJSON(data['AudioDuration']);
        }
        // validate the optional field `AudioGroupId`
        if (data['AudioGroupId']) { // data not null
          String.validateJSON(data['AudioGroupId']);
        }
        // validate the optional field `AudioRenditionSets`
        if (data['AudioRenditionSets']) { // data not null
          String.validateJSON(data['AudioRenditionSets']);
        }
        // validate the optional field `AudioTrackType`
        if (data['AudioTrackType']) { // data not null
          CmfcAudioTrackType.validateJSON(data['AudioTrackType']);
        }
        // validate the optional field `DescriptiveVideoServiceFlag`
        if (data['DescriptiveVideoServiceFlag']) { // data not null
          CmfcDescriptiveVideoServiceFlag.validateJSON(data['DescriptiveVideoServiceFlag']);
        }
        // validate the optional field `IFrameOnlyManifest`
        if (data['IFrameOnlyManifest']) { // data not null
          CmfcIFrameOnlyManifest.validateJSON(data['IFrameOnlyManifest']);
        }
        // validate the optional field `KlvMetadata`
        if (data['KlvMetadata']) { // data not null
          CmfcKlvMetadata.validateJSON(data['KlvMetadata']);
        }
        // validate the optional field `ManifestMetadataSignaling`
        if (data['ManifestMetadataSignaling']) { // data not null
          CmfcManifestMetadataSignaling.validateJSON(data['ManifestMetadataSignaling']);
        }
        // validate the optional field `Scte35Esam`
        if (data['Scte35Esam']) { // data not null
          CmfcScte35Esam.validateJSON(data['Scte35Esam']);
        }
        // validate the optional field `Scte35Source`
        if (data['Scte35Source']) { // data not null
          CmfcScte35Source.validateJSON(data['Scte35Source']);
        }
        // validate the optional field `TimedMetadata`
        if (data['TimedMetadata']) { // data not null
          CmfcTimedMetadata.validateJSON(data['TimedMetadata']);
        }
        // validate the optional field `TimedMetadataBoxVersion`
        if (data['TimedMetadataBoxVersion']) { // data not null
          CmfcTimedMetadataBoxVersion.validateJSON(data['TimedMetadataBoxVersion']);
        }
        // validate the optional field `TimedMetadataSchemeIdUri`
        if (data['TimedMetadataSchemeIdUri']) { // data not null
          String.validateJSON(data['TimedMetadataSchemeIdUri']);
        }
        // validate the optional field `TimedMetadataValue`
        if (data['TimedMetadataValue']) { // data not null
          String.validateJSON(data['TimedMetadataValue']);
        }

        return true;
    }


}



/**
 * @member {module:model/CmfcAudioDuration} AudioDuration
 */
CmfcSettings.prototype['AudioDuration'] = undefined;

/**
 * @member {String} AudioGroupId
 */
CmfcSettings.prototype['AudioGroupId'] = undefined;

/**
 * @member {String} AudioRenditionSets
 */
CmfcSettings.prototype['AudioRenditionSets'] = undefined;

/**
 * @member {module:model/CmfcAudioTrackType} AudioTrackType
 */
CmfcSettings.prototype['AudioTrackType'] = undefined;

/**
 * @member {module:model/CmfcDescriptiveVideoServiceFlag} DescriptiveVideoServiceFlag
 */
CmfcSettings.prototype['DescriptiveVideoServiceFlag'] = undefined;

/**
 * @member {module:model/CmfcIFrameOnlyManifest} IFrameOnlyManifest
 */
CmfcSettings.prototype['IFrameOnlyManifest'] = undefined;

/**
 * @member {module:model/CmfcKlvMetadata} KlvMetadata
 */
CmfcSettings.prototype['KlvMetadata'] = undefined;

/**
 * @member {module:model/CmfcManifestMetadataSignaling} ManifestMetadataSignaling
 */
CmfcSettings.prototype['ManifestMetadataSignaling'] = undefined;

/**
 * @member {module:model/CmfcScte35Esam} Scte35Esam
 */
CmfcSettings.prototype['Scte35Esam'] = undefined;

/**
 * @member {module:model/CmfcScte35Source} Scte35Source
 */
CmfcSettings.prototype['Scte35Source'] = undefined;

/**
 * @member {module:model/CmfcTimedMetadata} TimedMetadata
 */
CmfcSettings.prototype['TimedMetadata'] = undefined;

/**
 * @member {module:model/CmfcTimedMetadataBoxVersion} TimedMetadataBoxVersion
 */
CmfcSettings.prototype['TimedMetadataBoxVersion'] = undefined;

/**
 * @member {String} TimedMetadataSchemeIdUri
 */
CmfcSettings.prototype['TimedMetadataSchemeIdUri'] = undefined;

/**
 * @member {String} TimedMetadataValue
 */
CmfcSettings.prototype['TimedMetadataValue'] = undefined;






export default CmfcSettings;

