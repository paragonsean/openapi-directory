/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SpekeKeyProvider from './SpekeKeyProvider';

/**
 * The DashIsoEncryptionSettingsSpekeKeyProvider model module.
 * @module model/DashIsoEncryptionSettingsSpekeKeyProvider
 * @version 2017-08-29
 */
class DashIsoEncryptionSettingsSpekeKeyProvider {
    /**
     * Constructs a new <code>DashIsoEncryptionSettingsSpekeKeyProvider</code>.
     * @alias module:model/DashIsoEncryptionSettingsSpekeKeyProvider
     * @implements module:model/SpekeKeyProvider
     */
    constructor() { 
        SpekeKeyProvider.initialize(this);
        DashIsoEncryptionSettingsSpekeKeyProvider.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DashIsoEncryptionSettingsSpekeKeyProvider</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DashIsoEncryptionSettingsSpekeKeyProvider} obj Optional instance to populate.
     * @return {module:model/DashIsoEncryptionSettingsSpekeKeyProvider} The populated <code>DashIsoEncryptionSettingsSpekeKeyProvider</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DashIsoEncryptionSettingsSpekeKeyProvider();
            SpekeKeyProvider.constructFromObject(data, obj);

            if (data.hasOwnProperty('CertificateArn')) {
                obj['CertificateArn'] = ApiClient.convertToType(data['CertificateArn'], 'String');
            }
            if (data.hasOwnProperty('ResourceId')) {
                obj['ResourceId'] = ApiClient.convertToType(data['ResourceId'], 'String');
            }
            if (data.hasOwnProperty('SystemIds')) {
                obj['SystemIds'] = ApiClient.convertToType(data['SystemIds'], Array);
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DashIsoEncryptionSettingsSpekeKeyProvider</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DashIsoEncryptionSettingsSpekeKeyProvider</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CertificateArn`
        if (data['CertificateArn']) { // data not null
          String.validateJSON(data['CertificateArn']);
        }
        // validate the optional field `ResourceId`
        if (data['ResourceId']) { // data not null
          String.validateJSON(data['ResourceId']);
        }
        // validate the optional field `SystemIds`
        if (data['SystemIds']) { // data not null
          Array.validateJSON(data['SystemIds']);
        }
        // validate the optional field `Url`
        if (data['Url']) { // data not null
          String.validateJSON(data['Url']);
        }

        return true;
    }


}



/**
 * @member {String} CertificateArn
 */
DashIsoEncryptionSettingsSpekeKeyProvider.prototype['CertificateArn'] = undefined;

/**
 * @member {String} ResourceId
 */
DashIsoEncryptionSettingsSpekeKeyProvider.prototype['ResourceId'] = undefined;

/**
 * @member {Array} SystemIds
 */
DashIsoEncryptionSettingsSpekeKeyProvider.prototype['SystemIds'] = undefined;

/**
 * @member {String} Url
 */
DashIsoEncryptionSettingsSpekeKeyProvider.prototype['Url'] = undefined;


// Implement SpekeKeyProvider interface:
/**
 * @member {String} CertificateArn
 */
SpekeKeyProvider.prototype['CertificateArn'] = undefined;
/**
 * @member {String} ResourceId
 */
SpekeKeyProvider.prototype['ResourceId'] = undefined;
/**
 * @member {Array} SystemIds
 */
SpekeKeyProvider.prototype['SystemIds'] = undefined;
/**
 * @member {String} Url
 */
SpekeKeyProvider.prototype['Url'] = undefined;




export default DashIsoEncryptionSettingsSpekeKeyProvider;

