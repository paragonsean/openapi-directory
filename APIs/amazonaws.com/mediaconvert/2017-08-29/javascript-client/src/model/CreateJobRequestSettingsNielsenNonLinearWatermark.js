/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NielsenActiveWatermarkProcessType from './NielsenActiveWatermarkProcessType';
import NielsenNonLinearWatermarkSettings from './NielsenNonLinearWatermarkSettings';
import NielsenSourceWatermarkStatusType from './NielsenSourceWatermarkStatusType';
import NielsenUniqueTicPerAudioTrackType from './NielsenUniqueTicPerAudioTrackType';

/**
 * The CreateJobRequestSettingsNielsenNonLinearWatermark model module.
 * @module model/CreateJobRequestSettingsNielsenNonLinearWatermark
 * @version 2017-08-29
 */
class CreateJobRequestSettingsNielsenNonLinearWatermark {
    /**
     * Constructs a new <code>CreateJobRequestSettingsNielsenNonLinearWatermark</code>.
     * @alias module:model/CreateJobRequestSettingsNielsenNonLinearWatermark
     * @implements module:model/NielsenNonLinearWatermarkSettings
     */
    constructor() { 
        NielsenNonLinearWatermarkSettings.initialize(this);
        CreateJobRequestSettingsNielsenNonLinearWatermark.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateJobRequestSettingsNielsenNonLinearWatermark</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJobRequestSettingsNielsenNonLinearWatermark} obj Optional instance to populate.
     * @return {module:model/CreateJobRequestSettingsNielsenNonLinearWatermark} The populated <code>CreateJobRequestSettingsNielsenNonLinearWatermark</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJobRequestSettingsNielsenNonLinearWatermark();
            NielsenNonLinearWatermarkSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('ActiveWatermarkProcess')) {
                obj['ActiveWatermarkProcess'] = ApiClient.convertToType(data['ActiveWatermarkProcess'], NielsenActiveWatermarkProcessType);
            }
            if (data.hasOwnProperty('AdiFilename')) {
                obj['AdiFilename'] = ApiClient.convertToType(data['AdiFilename'], 'String');
            }
            if (data.hasOwnProperty('AssetId')) {
                obj['AssetId'] = ApiClient.convertToType(data['AssetId'], 'String');
            }
            if (data.hasOwnProperty('AssetName')) {
                obj['AssetName'] = ApiClient.convertToType(data['AssetName'], 'String');
            }
            if (data.hasOwnProperty('CbetSourceId')) {
                obj['CbetSourceId'] = ApiClient.convertToType(data['CbetSourceId'], 'String');
            }
            if (data.hasOwnProperty('EpisodeId')) {
                obj['EpisodeId'] = ApiClient.convertToType(data['EpisodeId'], 'String');
            }
            if (data.hasOwnProperty('MetadataDestination')) {
                obj['MetadataDestination'] = ApiClient.convertToType(data['MetadataDestination'], 'String');
            }
            if (data.hasOwnProperty('SourceId')) {
                obj['SourceId'] = ApiClient.convertToType(data['SourceId'], 'Number');
            }
            if (data.hasOwnProperty('SourceWatermarkStatus')) {
                obj['SourceWatermarkStatus'] = ApiClient.convertToType(data['SourceWatermarkStatus'], NielsenSourceWatermarkStatusType);
            }
            if (data.hasOwnProperty('TicServerUrl')) {
                obj['TicServerUrl'] = ApiClient.convertToType(data['TicServerUrl'], 'String');
            }
            if (data.hasOwnProperty('UniqueTicPerAudioTrack')) {
                obj['UniqueTicPerAudioTrack'] = ApiClient.convertToType(data['UniqueTicPerAudioTrack'], NielsenUniqueTicPerAudioTrackType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJobRequestSettingsNielsenNonLinearWatermark</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJobRequestSettingsNielsenNonLinearWatermark</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ActiveWatermarkProcess`
        if (data['ActiveWatermarkProcess']) { // data not null
          NielsenActiveWatermarkProcessType.validateJSON(data['ActiveWatermarkProcess']);
        }
        // validate the optional field `AdiFilename`
        if (data['AdiFilename']) { // data not null
          String.validateJSON(data['AdiFilename']);
        }
        // validate the optional field `AssetId`
        if (data['AssetId']) { // data not null
          String.validateJSON(data['AssetId']);
        }
        // validate the optional field `AssetName`
        if (data['AssetName']) { // data not null
          String.validateJSON(data['AssetName']);
        }
        // validate the optional field `CbetSourceId`
        if (data['CbetSourceId']) { // data not null
          String.validateJSON(data['CbetSourceId']);
        }
        // validate the optional field `EpisodeId`
        if (data['EpisodeId']) { // data not null
          String.validateJSON(data['EpisodeId']);
        }
        // validate the optional field `MetadataDestination`
        if (data['MetadataDestination']) { // data not null
          String.validateJSON(data['MetadataDestination']);
        }
        // validate the optional field `SourceId`
        if (data['SourceId']) { // data not null
          Number.validateJSON(data['SourceId']);
        }
        // validate the optional field `SourceWatermarkStatus`
        if (data['SourceWatermarkStatus']) { // data not null
          NielsenSourceWatermarkStatusType.validateJSON(data['SourceWatermarkStatus']);
        }
        // validate the optional field `TicServerUrl`
        if (data['TicServerUrl']) { // data not null
          String.validateJSON(data['TicServerUrl']);
        }
        // validate the optional field `UniqueTicPerAudioTrack`
        if (data['UniqueTicPerAudioTrack']) { // data not null
          NielsenUniqueTicPerAudioTrackType.validateJSON(data['UniqueTicPerAudioTrack']);
        }

        return true;
    }


}



/**
 * @member {module:model/NielsenActiveWatermarkProcessType} ActiveWatermarkProcess
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['ActiveWatermarkProcess'] = undefined;

/**
 * @member {String} AdiFilename
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['AdiFilename'] = undefined;

/**
 * @member {String} AssetId
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['AssetId'] = undefined;

/**
 * @member {String} AssetName
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['AssetName'] = undefined;

/**
 * @member {String} CbetSourceId
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['CbetSourceId'] = undefined;

/**
 * @member {String} EpisodeId
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['EpisodeId'] = undefined;

/**
 * @member {String} MetadataDestination
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['MetadataDestination'] = undefined;

/**
 * @member {Number} SourceId
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['SourceId'] = undefined;

/**
 * @member {module:model/NielsenSourceWatermarkStatusType} SourceWatermarkStatus
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['SourceWatermarkStatus'] = undefined;

/**
 * @member {String} TicServerUrl
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['TicServerUrl'] = undefined;

/**
 * @member {module:model/NielsenUniqueTicPerAudioTrackType} UniqueTicPerAudioTrack
 */
CreateJobRequestSettingsNielsenNonLinearWatermark.prototype['UniqueTicPerAudioTrack'] = undefined;


// Implement NielsenNonLinearWatermarkSettings interface:
/**
 * @member {module:model/NielsenActiveWatermarkProcessType} ActiveWatermarkProcess
 */
NielsenNonLinearWatermarkSettings.prototype['ActiveWatermarkProcess'] = undefined;
/**
 * @member {String} AdiFilename
 */
NielsenNonLinearWatermarkSettings.prototype['AdiFilename'] = undefined;
/**
 * @member {String} AssetId
 */
NielsenNonLinearWatermarkSettings.prototype['AssetId'] = undefined;
/**
 * @member {String} AssetName
 */
NielsenNonLinearWatermarkSettings.prototype['AssetName'] = undefined;
/**
 * @member {String} CbetSourceId
 */
NielsenNonLinearWatermarkSettings.prototype['CbetSourceId'] = undefined;
/**
 * @member {String} EpisodeId
 */
NielsenNonLinearWatermarkSettings.prototype['EpisodeId'] = undefined;
/**
 * @member {String} MetadataDestination
 */
NielsenNonLinearWatermarkSettings.prototype['MetadataDestination'] = undefined;
/**
 * @member {Number} SourceId
 */
NielsenNonLinearWatermarkSettings.prototype['SourceId'] = undefined;
/**
 * @member {module:model/NielsenSourceWatermarkStatusType} SourceWatermarkStatus
 */
NielsenNonLinearWatermarkSettings.prototype['SourceWatermarkStatus'] = undefined;
/**
 * @member {String} TicServerUrl
 */
NielsenNonLinearWatermarkSettings.prototype['TicServerUrl'] = undefined;
/**
 * @member {module:model/NielsenUniqueTicPerAudioTrackType} UniqueTicPerAudioTrack
 */
NielsenNonLinearWatermarkSettings.prototype['UniqueTicPerAudioTrack'] = undefined;




export default CreateJobRequestSettingsNielsenNonLinearWatermark;

