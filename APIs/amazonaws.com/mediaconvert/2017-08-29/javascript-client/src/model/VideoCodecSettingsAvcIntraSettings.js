/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AvcIntraClass from './AvcIntraClass';
import AvcIntraFramerateControl from './AvcIntraFramerateControl';
import AvcIntraFramerateConversionAlgorithm from './AvcIntraFramerateConversionAlgorithm';
import AvcIntraInterlaceMode from './AvcIntraInterlaceMode';
import AvcIntraScanTypeConversionMode from './AvcIntraScanTypeConversionMode';
import AvcIntraSettings from './AvcIntraSettings';
import AvcIntraSettingsAvcIntraUhdSettings from './AvcIntraSettingsAvcIntraUhdSettings';
import AvcIntraSlowPal from './AvcIntraSlowPal';
import AvcIntraTelecine from './AvcIntraTelecine';

/**
 * The VideoCodecSettingsAvcIntraSettings model module.
 * @module model/VideoCodecSettingsAvcIntraSettings
 * @version 2017-08-29
 */
class VideoCodecSettingsAvcIntraSettings {
    /**
     * Constructs a new <code>VideoCodecSettingsAvcIntraSettings</code>.
     * @alias module:model/VideoCodecSettingsAvcIntraSettings
     * @implements module:model/AvcIntraSettings
     */
    constructor() { 
        AvcIntraSettings.initialize(this);
        VideoCodecSettingsAvcIntraSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoCodecSettingsAvcIntraSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoCodecSettingsAvcIntraSettings} obj Optional instance to populate.
     * @return {module:model/VideoCodecSettingsAvcIntraSettings} The populated <code>VideoCodecSettingsAvcIntraSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoCodecSettingsAvcIntraSettings();
            AvcIntraSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AvcIntraClass')) {
                obj['AvcIntraClass'] = ApiClient.convertToType(data['AvcIntraClass'], AvcIntraClass);
            }
            if (data.hasOwnProperty('AvcIntraUhdSettings')) {
                obj['AvcIntraUhdSettings'] = AvcIntraSettingsAvcIntraUhdSettings.constructFromObject(data['AvcIntraUhdSettings']);
            }
            if (data.hasOwnProperty('FramerateControl')) {
                obj['FramerateControl'] = ApiClient.convertToType(data['FramerateControl'], AvcIntraFramerateControl);
            }
            if (data.hasOwnProperty('FramerateConversionAlgorithm')) {
                obj['FramerateConversionAlgorithm'] = ApiClient.convertToType(data['FramerateConversionAlgorithm'], AvcIntraFramerateConversionAlgorithm);
            }
            if (data.hasOwnProperty('FramerateDenominator')) {
                obj['FramerateDenominator'] = ApiClient.convertToType(data['FramerateDenominator'], 'Number');
            }
            if (data.hasOwnProperty('FramerateNumerator')) {
                obj['FramerateNumerator'] = ApiClient.convertToType(data['FramerateNumerator'], 'Number');
            }
            if (data.hasOwnProperty('InterlaceMode')) {
                obj['InterlaceMode'] = ApiClient.convertToType(data['InterlaceMode'], AvcIntraInterlaceMode);
            }
            if (data.hasOwnProperty('ScanTypeConversionMode')) {
                obj['ScanTypeConversionMode'] = ApiClient.convertToType(data['ScanTypeConversionMode'], AvcIntraScanTypeConversionMode);
            }
            if (data.hasOwnProperty('SlowPal')) {
                obj['SlowPal'] = ApiClient.convertToType(data['SlowPal'], AvcIntraSlowPal);
            }
            if (data.hasOwnProperty('Telecine')) {
                obj['Telecine'] = ApiClient.convertToType(data['Telecine'], AvcIntraTelecine);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoCodecSettingsAvcIntraSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoCodecSettingsAvcIntraSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AvcIntraClass`
        if (data['AvcIntraClass']) { // data not null
          AvcIntraClass.validateJSON(data['AvcIntraClass']);
        }
        // validate the optional field `AvcIntraUhdSettings`
        if (data['AvcIntraUhdSettings']) { // data not null
          AvcIntraSettingsAvcIntraUhdSettings.validateJSON(data['AvcIntraUhdSettings']);
        }
        // validate the optional field `FramerateControl`
        if (data['FramerateControl']) { // data not null
          AvcIntraFramerateControl.validateJSON(data['FramerateControl']);
        }
        // validate the optional field `FramerateConversionAlgorithm`
        if (data['FramerateConversionAlgorithm']) { // data not null
          AvcIntraFramerateConversionAlgorithm.validateJSON(data['FramerateConversionAlgorithm']);
        }
        // validate the optional field `FramerateDenominator`
        if (data['FramerateDenominator']) { // data not null
          Number.validateJSON(data['FramerateDenominator']);
        }
        // validate the optional field `FramerateNumerator`
        if (data['FramerateNumerator']) { // data not null
          Number.validateJSON(data['FramerateNumerator']);
        }
        // validate the optional field `InterlaceMode`
        if (data['InterlaceMode']) { // data not null
          AvcIntraInterlaceMode.validateJSON(data['InterlaceMode']);
        }
        // validate the optional field `ScanTypeConversionMode`
        if (data['ScanTypeConversionMode']) { // data not null
          AvcIntraScanTypeConversionMode.validateJSON(data['ScanTypeConversionMode']);
        }
        // validate the optional field `SlowPal`
        if (data['SlowPal']) { // data not null
          AvcIntraSlowPal.validateJSON(data['SlowPal']);
        }
        // validate the optional field `Telecine`
        if (data['Telecine']) { // data not null
          AvcIntraTelecine.validateJSON(data['Telecine']);
        }

        return true;
    }


}



/**
 * @member {module:model/AvcIntraClass} AvcIntraClass
 */
VideoCodecSettingsAvcIntraSettings.prototype['AvcIntraClass'] = undefined;

/**
 * @member {module:model/AvcIntraSettingsAvcIntraUhdSettings} AvcIntraUhdSettings
 */
VideoCodecSettingsAvcIntraSettings.prototype['AvcIntraUhdSettings'] = undefined;

/**
 * @member {module:model/AvcIntraFramerateControl} FramerateControl
 */
VideoCodecSettingsAvcIntraSettings.prototype['FramerateControl'] = undefined;

/**
 * @member {module:model/AvcIntraFramerateConversionAlgorithm} FramerateConversionAlgorithm
 */
VideoCodecSettingsAvcIntraSettings.prototype['FramerateConversionAlgorithm'] = undefined;

/**
 * @member {Number} FramerateDenominator
 */
VideoCodecSettingsAvcIntraSettings.prototype['FramerateDenominator'] = undefined;

/**
 * @member {Number} FramerateNumerator
 */
VideoCodecSettingsAvcIntraSettings.prototype['FramerateNumerator'] = undefined;

/**
 * @member {module:model/AvcIntraInterlaceMode} InterlaceMode
 */
VideoCodecSettingsAvcIntraSettings.prototype['InterlaceMode'] = undefined;

/**
 * @member {module:model/AvcIntraScanTypeConversionMode} ScanTypeConversionMode
 */
VideoCodecSettingsAvcIntraSettings.prototype['ScanTypeConversionMode'] = undefined;

/**
 * @member {module:model/AvcIntraSlowPal} SlowPal
 */
VideoCodecSettingsAvcIntraSettings.prototype['SlowPal'] = undefined;

/**
 * @member {module:model/AvcIntraTelecine} Telecine
 */
VideoCodecSettingsAvcIntraSettings.prototype['Telecine'] = undefined;


// Implement AvcIntraSettings interface:
/**
 * @member {module:model/AvcIntraClass} AvcIntraClass
 */
AvcIntraSettings.prototype['AvcIntraClass'] = undefined;
/**
 * @member {module:model/AvcIntraSettingsAvcIntraUhdSettings} AvcIntraUhdSettings
 */
AvcIntraSettings.prototype['AvcIntraUhdSettings'] = undefined;
/**
 * @member {module:model/AvcIntraFramerateControl} FramerateControl
 */
AvcIntraSettings.prototype['FramerateControl'] = undefined;
/**
 * @member {module:model/AvcIntraFramerateConversionAlgorithm} FramerateConversionAlgorithm
 */
AvcIntraSettings.prototype['FramerateConversionAlgorithm'] = undefined;
/**
 * @member {Number} FramerateDenominator
 */
AvcIntraSettings.prototype['FramerateDenominator'] = undefined;
/**
 * @member {Number} FramerateNumerator
 */
AvcIntraSettings.prototype['FramerateNumerator'] = undefined;
/**
 * @member {module:model/AvcIntraInterlaceMode} InterlaceMode
 */
AvcIntraSettings.prototype['InterlaceMode'] = undefined;
/**
 * @member {module:model/AvcIntraScanTypeConversionMode} ScanTypeConversionMode
 */
AvcIntraSettings.prototype['ScanTypeConversionMode'] = undefined;
/**
 * @member {module:model/AvcIntraSlowPal} SlowPal
 */
AvcIntraSettings.prototype['SlowPal'] = undefined;
/**
 * @member {module:model/AvcIntraTelecine} Telecine
 */
AvcIntraSettings.prototype['Telecine'] = undefined;




export default VideoCodecSettingsAvcIntraSettings;

