/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemixSettings from './RemixSettings';
import RemixSettingsChannelMapping from './RemixSettingsChannelMapping';

/**
 * The AudioDescriptionRemixSettings model module.
 * @module model/AudioDescriptionRemixSettings
 * @version 2017-08-29
 */
class AudioDescriptionRemixSettings {
    /**
     * Constructs a new <code>AudioDescriptionRemixSettings</code>.
     * @alias module:model/AudioDescriptionRemixSettings
     * @implements module:model/RemixSettings
     */
    constructor() { 
        RemixSettings.initialize(this);
        AudioDescriptionRemixSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioDescriptionRemixSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioDescriptionRemixSettings} obj Optional instance to populate.
     * @return {module:model/AudioDescriptionRemixSettings} The populated <code>AudioDescriptionRemixSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioDescriptionRemixSettings();
            RemixSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('ChannelMapping')) {
                obj['ChannelMapping'] = RemixSettingsChannelMapping.constructFromObject(data['ChannelMapping']);
            }
            if (data.hasOwnProperty('ChannelsIn')) {
                obj['ChannelsIn'] = ApiClient.convertToType(data['ChannelsIn'], 'Number');
            }
            if (data.hasOwnProperty('ChannelsOut')) {
                obj['ChannelsOut'] = ApiClient.convertToType(data['ChannelsOut'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioDescriptionRemixSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioDescriptionRemixSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ChannelMapping`
        if (data['ChannelMapping']) { // data not null
          RemixSettingsChannelMapping.validateJSON(data['ChannelMapping']);
        }
        // validate the optional field `ChannelsIn`
        if (data['ChannelsIn']) { // data not null
          Number.validateJSON(data['ChannelsIn']);
        }
        // validate the optional field `ChannelsOut`
        if (data['ChannelsOut']) { // data not null
          Number.validateJSON(data['ChannelsOut']);
        }

        return true;
    }


}



/**
 * @member {module:model/RemixSettingsChannelMapping} ChannelMapping
 */
AudioDescriptionRemixSettings.prototype['ChannelMapping'] = undefined;

/**
 * @member {Number} ChannelsIn
 */
AudioDescriptionRemixSettings.prototype['ChannelsIn'] = undefined;

/**
 * @member {Number} ChannelsOut
 */
AudioDescriptionRemixSettings.prototype['ChannelsOut'] = undefined;


// Implement RemixSettings interface:
/**
 * @member {module:model/RemixSettingsChannelMapping} ChannelMapping
 */
RemixSettings.prototype['ChannelMapping'] = undefined;
/**
 * @member {Number} ChannelsIn
 */
RemixSettings.prototype['ChannelsIn'] = undefined;
/**
 * @member {Number} ChannelsOut
 */
RemixSettings.prototype['ChannelsOut'] = undefined;




export default AudioDescriptionRemixSettings;

