/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CmafClientCache from './CmafClientCache';
import CmafCodecSpecification from './CmafCodecSpecification';
import CmafGroupSettings from './CmafGroupSettings';
import CmafGroupSettingsDestinationSettings from './CmafGroupSettingsDestinationSettings';
import CmafGroupSettingsEncryption from './CmafGroupSettingsEncryption';
import CmafGroupSettingsImageBasedTrickPlaySettings from './CmafGroupSettingsImageBasedTrickPlaySettings';
import CmafImageBasedTrickPlay from './CmafImageBasedTrickPlay';
import CmafManifestCompression from './CmafManifestCompression';
import CmafManifestDurationFormat from './CmafManifestDurationFormat';
import CmafMpdManifestBandwidthType from './CmafMpdManifestBandwidthType';
import CmafMpdProfile from './CmafMpdProfile';
import CmafPtsOffsetHandlingForBFrames from './CmafPtsOffsetHandlingForBFrames';
import CmafSegmentControl from './CmafSegmentControl';
import CmafSegmentLengthControl from './CmafSegmentLengthControl';
import CmafStreamInfResolution from './CmafStreamInfResolution';
import CmafTargetDurationCompatibilityMode from './CmafTargetDurationCompatibilityMode';
import CmafVideoCompositionOffsets from './CmafVideoCompositionOffsets';
import CmafWriteDASHManifest from './CmafWriteDASHManifest';
import CmafWriteHLSManifest from './CmafWriteHLSManifest';
import CmafWriteSegmentTimelineInRepresentation from './CmafWriteSegmentTimelineInRepresentation';
import DashManifestStyle from './DashManifestStyle';

/**
 * The OutputGroupSettingsCmafGroupSettings model module.
 * @module model/OutputGroupSettingsCmafGroupSettings
 * @version 2017-08-29
 */
class OutputGroupSettingsCmafGroupSettings {
    /**
     * Constructs a new <code>OutputGroupSettingsCmafGroupSettings</code>.
     * @alias module:model/OutputGroupSettingsCmafGroupSettings
     * @implements module:model/CmafGroupSettings
     */
    constructor() { 
        CmafGroupSettings.initialize(this);
        OutputGroupSettingsCmafGroupSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutputGroupSettingsCmafGroupSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutputGroupSettingsCmafGroupSettings} obj Optional instance to populate.
     * @return {module:model/OutputGroupSettingsCmafGroupSettings} The populated <code>OutputGroupSettingsCmafGroupSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutputGroupSettingsCmafGroupSettings();
            CmafGroupSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AdditionalManifests')) {
                obj['AdditionalManifests'] = ApiClient.convertToType(data['AdditionalManifests'], Array);
            }
            if (data.hasOwnProperty('BaseUrl')) {
                obj['BaseUrl'] = ApiClient.convertToType(data['BaseUrl'], 'String');
            }
            if (data.hasOwnProperty('ClientCache')) {
                obj['ClientCache'] = ApiClient.convertToType(data['ClientCache'], CmafClientCache);
            }
            if (data.hasOwnProperty('CodecSpecification')) {
                obj['CodecSpecification'] = ApiClient.convertToType(data['CodecSpecification'], CmafCodecSpecification);
            }
            if (data.hasOwnProperty('DashManifestStyle')) {
                obj['DashManifestStyle'] = ApiClient.convertToType(data['DashManifestStyle'], DashManifestStyle);
            }
            if (data.hasOwnProperty('Destination')) {
                obj['Destination'] = ApiClient.convertToType(data['Destination'], 'String');
            }
            if (data.hasOwnProperty('DestinationSettings')) {
                obj['DestinationSettings'] = CmafGroupSettingsDestinationSettings.constructFromObject(data['DestinationSettings']);
            }
            if (data.hasOwnProperty('Encryption')) {
                obj['Encryption'] = CmafGroupSettingsEncryption.constructFromObject(data['Encryption']);
            }
            if (data.hasOwnProperty('FragmentLength')) {
                obj['FragmentLength'] = ApiClient.convertToType(data['FragmentLength'], 'Number');
            }
            if (data.hasOwnProperty('ImageBasedTrickPlay')) {
                obj['ImageBasedTrickPlay'] = ApiClient.convertToType(data['ImageBasedTrickPlay'], CmafImageBasedTrickPlay);
            }
            if (data.hasOwnProperty('ImageBasedTrickPlaySettings')) {
                obj['ImageBasedTrickPlaySettings'] = CmafGroupSettingsImageBasedTrickPlaySettings.constructFromObject(data['ImageBasedTrickPlaySettings']);
            }
            if (data.hasOwnProperty('ManifestCompression')) {
                obj['ManifestCompression'] = ApiClient.convertToType(data['ManifestCompression'], CmafManifestCompression);
            }
            if (data.hasOwnProperty('ManifestDurationFormat')) {
                obj['ManifestDurationFormat'] = ApiClient.convertToType(data['ManifestDurationFormat'], CmafManifestDurationFormat);
            }
            if (data.hasOwnProperty('MinBufferTime')) {
                obj['MinBufferTime'] = ApiClient.convertToType(data['MinBufferTime'], 'Number');
            }
            if (data.hasOwnProperty('MinFinalSegmentLength')) {
                obj['MinFinalSegmentLength'] = ApiClient.convertToType(data['MinFinalSegmentLength'], 'Number');
            }
            if (data.hasOwnProperty('MpdManifestBandwidthType')) {
                obj['MpdManifestBandwidthType'] = ApiClient.convertToType(data['MpdManifestBandwidthType'], CmafMpdManifestBandwidthType);
            }
            if (data.hasOwnProperty('MpdProfile')) {
                obj['MpdProfile'] = ApiClient.convertToType(data['MpdProfile'], CmafMpdProfile);
            }
            if (data.hasOwnProperty('PtsOffsetHandlingForBFrames')) {
                obj['PtsOffsetHandlingForBFrames'] = ApiClient.convertToType(data['PtsOffsetHandlingForBFrames'], CmafPtsOffsetHandlingForBFrames);
            }
            if (data.hasOwnProperty('SegmentControl')) {
                obj['SegmentControl'] = ApiClient.convertToType(data['SegmentControl'], CmafSegmentControl);
            }
            if (data.hasOwnProperty('SegmentLength')) {
                obj['SegmentLength'] = ApiClient.convertToType(data['SegmentLength'], 'Number');
            }
            if (data.hasOwnProperty('SegmentLengthControl')) {
                obj['SegmentLengthControl'] = ApiClient.convertToType(data['SegmentLengthControl'], CmafSegmentLengthControl);
            }
            if (data.hasOwnProperty('StreamInfResolution')) {
                obj['StreamInfResolution'] = ApiClient.convertToType(data['StreamInfResolution'], CmafStreamInfResolution);
            }
            if (data.hasOwnProperty('TargetDurationCompatibilityMode')) {
                obj['TargetDurationCompatibilityMode'] = ApiClient.convertToType(data['TargetDurationCompatibilityMode'], CmafTargetDurationCompatibilityMode);
            }
            if (data.hasOwnProperty('VideoCompositionOffsets')) {
                obj['VideoCompositionOffsets'] = ApiClient.convertToType(data['VideoCompositionOffsets'], CmafVideoCompositionOffsets);
            }
            if (data.hasOwnProperty('WriteDashManifest')) {
                obj['WriteDashManifest'] = ApiClient.convertToType(data['WriteDashManifest'], CmafWriteDASHManifest);
            }
            if (data.hasOwnProperty('WriteHlsManifest')) {
                obj['WriteHlsManifest'] = ApiClient.convertToType(data['WriteHlsManifest'], CmafWriteHLSManifest);
            }
            if (data.hasOwnProperty('WriteSegmentTimelineInRepresentation')) {
                obj['WriteSegmentTimelineInRepresentation'] = ApiClient.convertToType(data['WriteSegmentTimelineInRepresentation'], CmafWriteSegmentTimelineInRepresentation);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OutputGroupSettingsCmafGroupSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OutputGroupSettingsCmafGroupSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AdditionalManifests`
        if (data['AdditionalManifests']) { // data not null
          Array.validateJSON(data['AdditionalManifests']);
        }
        // validate the optional field `BaseUrl`
        if (data['BaseUrl']) { // data not null
          String.validateJSON(data['BaseUrl']);
        }
        // validate the optional field `ClientCache`
        if (data['ClientCache']) { // data not null
          CmafClientCache.validateJSON(data['ClientCache']);
        }
        // validate the optional field `CodecSpecification`
        if (data['CodecSpecification']) { // data not null
          CmafCodecSpecification.validateJSON(data['CodecSpecification']);
        }
        // validate the optional field `DashManifestStyle`
        if (data['DashManifestStyle']) { // data not null
          DashManifestStyle.validateJSON(data['DashManifestStyle']);
        }
        // validate the optional field `Destination`
        if (data['Destination']) { // data not null
          String.validateJSON(data['Destination']);
        }
        // validate the optional field `DestinationSettings`
        if (data['DestinationSettings']) { // data not null
          CmafGroupSettingsDestinationSettings.validateJSON(data['DestinationSettings']);
        }
        // validate the optional field `Encryption`
        if (data['Encryption']) { // data not null
          CmafGroupSettingsEncryption.validateJSON(data['Encryption']);
        }
        // validate the optional field `FragmentLength`
        if (data['FragmentLength']) { // data not null
          Number.validateJSON(data['FragmentLength']);
        }
        // validate the optional field `ImageBasedTrickPlay`
        if (data['ImageBasedTrickPlay']) { // data not null
          CmafImageBasedTrickPlay.validateJSON(data['ImageBasedTrickPlay']);
        }
        // validate the optional field `ImageBasedTrickPlaySettings`
        if (data['ImageBasedTrickPlaySettings']) { // data not null
          CmafGroupSettingsImageBasedTrickPlaySettings.validateJSON(data['ImageBasedTrickPlaySettings']);
        }
        // validate the optional field `ManifestCompression`
        if (data['ManifestCompression']) { // data not null
          CmafManifestCompression.validateJSON(data['ManifestCompression']);
        }
        // validate the optional field `ManifestDurationFormat`
        if (data['ManifestDurationFormat']) { // data not null
          CmafManifestDurationFormat.validateJSON(data['ManifestDurationFormat']);
        }
        // validate the optional field `MinBufferTime`
        if (data['MinBufferTime']) { // data not null
          Number.validateJSON(data['MinBufferTime']);
        }
        // validate the optional field `MinFinalSegmentLength`
        if (data['MinFinalSegmentLength']) { // data not null
          Number.validateJSON(data['MinFinalSegmentLength']);
        }
        // validate the optional field `MpdManifestBandwidthType`
        if (data['MpdManifestBandwidthType']) { // data not null
          CmafMpdManifestBandwidthType.validateJSON(data['MpdManifestBandwidthType']);
        }
        // validate the optional field `MpdProfile`
        if (data['MpdProfile']) { // data not null
          CmafMpdProfile.validateJSON(data['MpdProfile']);
        }
        // validate the optional field `PtsOffsetHandlingForBFrames`
        if (data['PtsOffsetHandlingForBFrames']) { // data not null
          CmafPtsOffsetHandlingForBFrames.validateJSON(data['PtsOffsetHandlingForBFrames']);
        }
        // validate the optional field `SegmentControl`
        if (data['SegmentControl']) { // data not null
          CmafSegmentControl.validateJSON(data['SegmentControl']);
        }
        // validate the optional field `SegmentLength`
        if (data['SegmentLength']) { // data not null
          Number.validateJSON(data['SegmentLength']);
        }
        // validate the optional field `SegmentLengthControl`
        if (data['SegmentLengthControl']) { // data not null
          CmafSegmentLengthControl.validateJSON(data['SegmentLengthControl']);
        }
        // validate the optional field `StreamInfResolution`
        if (data['StreamInfResolution']) { // data not null
          CmafStreamInfResolution.validateJSON(data['StreamInfResolution']);
        }
        // validate the optional field `TargetDurationCompatibilityMode`
        if (data['TargetDurationCompatibilityMode']) { // data not null
          CmafTargetDurationCompatibilityMode.validateJSON(data['TargetDurationCompatibilityMode']);
        }
        // validate the optional field `VideoCompositionOffsets`
        if (data['VideoCompositionOffsets']) { // data not null
          CmafVideoCompositionOffsets.validateJSON(data['VideoCompositionOffsets']);
        }
        // validate the optional field `WriteDashManifest`
        if (data['WriteDashManifest']) { // data not null
          CmafWriteDASHManifest.validateJSON(data['WriteDashManifest']);
        }
        // validate the optional field `WriteHlsManifest`
        if (data['WriteHlsManifest']) { // data not null
          CmafWriteHLSManifest.validateJSON(data['WriteHlsManifest']);
        }
        // validate the optional field `WriteSegmentTimelineInRepresentation`
        if (data['WriteSegmentTimelineInRepresentation']) { // data not null
          CmafWriteSegmentTimelineInRepresentation.validateJSON(data['WriteSegmentTimelineInRepresentation']);
        }

        return true;
    }


}



/**
 * @member {Array} AdditionalManifests
 */
OutputGroupSettingsCmafGroupSettings.prototype['AdditionalManifests'] = undefined;

/**
 * @member {String} BaseUrl
 */
OutputGroupSettingsCmafGroupSettings.prototype['BaseUrl'] = undefined;

/**
 * @member {module:model/CmafClientCache} ClientCache
 */
OutputGroupSettingsCmafGroupSettings.prototype['ClientCache'] = undefined;

/**
 * @member {module:model/CmafCodecSpecification} CodecSpecification
 */
OutputGroupSettingsCmafGroupSettings.prototype['CodecSpecification'] = undefined;

/**
 * @member {module:model/DashManifestStyle} DashManifestStyle
 */
OutputGroupSettingsCmafGroupSettings.prototype['DashManifestStyle'] = undefined;

/**
 * @member {String} Destination
 */
OutputGroupSettingsCmafGroupSettings.prototype['Destination'] = undefined;

/**
 * @member {module:model/CmafGroupSettingsDestinationSettings} DestinationSettings
 */
OutputGroupSettingsCmafGroupSettings.prototype['DestinationSettings'] = undefined;

/**
 * @member {module:model/CmafGroupSettingsEncryption} Encryption
 */
OutputGroupSettingsCmafGroupSettings.prototype['Encryption'] = undefined;

/**
 * @member {Number} FragmentLength
 */
OutputGroupSettingsCmafGroupSettings.prototype['FragmentLength'] = undefined;

/**
 * @member {module:model/CmafImageBasedTrickPlay} ImageBasedTrickPlay
 */
OutputGroupSettingsCmafGroupSettings.prototype['ImageBasedTrickPlay'] = undefined;

/**
 * @member {module:model/CmafGroupSettingsImageBasedTrickPlaySettings} ImageBasedTrickPlaySettings
 */
OutputGroupSettingsCmafGroupSettings.prototype['ImageBasedTrickPlaySettings'] = undefined;

/**
 * @member {module:model/CmafManifestCompression} ManifestCompression
 */
OutputGroupSettingsCmafGroupSettings.prototype['ManifestCompression'] = undefined;

/**
 * @member {module:model/CmafManifestDurationFormat} ManifestDurationFormat
 */
OutputGroupSettingsCmafGroupSettings.prototype['ManifestDurationFormat'] = undefined;

/**
 * @member {Number} MinBufferTime
 */
OutputGroupSettingsCmafGroupSettings.prototype['MinBufferTime'] = undefined;

/**
 * @member {Number} MinFinalSegmentLength
 */
OutputGroupSettingsCmafGroupSettings.prototype['MinFinalSegmentLength'] = undefined;

/**
 * @member {module:model/CmafMpdManifestBandwidthType} MpdManifestBandwidthType
 */
OutputGroupSettingsCmafGroupSettings.prototype['MpdManifestBandwidthType'] = undefined;

/**
 * @member {module:model/CmafMpdProfile} MpdProfile
 */
OutputGroupSettingsCmafGroupSettings.prototype['MpdProfile'] = undefined;

/**
 * @member {module:model/CmafPtsOffsetHandlingForBFrames} PtsOffsetHandlingForBFrames
 */
OutputGroupSettingsCmafGroupSettings.prototype['PtsOffsetHandlingForBFrames'] = undefined;

/**
 * @member {module:model/CmafSegmentControl} SegmentControl
 */
OutputGroupSettingsCmafGroupSettings.prototype['SegmentControl'] = undefined;

/**
 * @member {Number} SegmentLength
 */
OutputGroupSettingsCmafGroupSettings.prototype['SegmentLength'] = undefined;

/**
 * @member {module:model/CmafSegmentLengthControl} SegmentLengthControl
 */
OutputGroupSettingsCmafGroupSettings.prototype['SegmentLengthControl'] = undefined;

/**
 * @member {module:model/CmafStreamInfResolution} StreamInfResolution
 */
OutputGroupSettingsCmafGroupSettings.prototype['StreamInfResolution'] = undefined;

/**
 * @member {module:model/CmafTargetDurationCompatibilityMode} TargetDurationCompatibilityMode
 */
OutputGroupSettingsCmafGroupSettings.prototype['TargetDurationCompatibilityMode'] = undefined;

/**
 * @member {module:model/CmafVideoCompositionOffsets} VideoCompositionOffsets
 */
OutputGroupSettingsCmafGroupSettings.prototype['VideoCompositionOffsets'] = undefined;

/**
 * @member {module:model/CmafWriteDASHManifest} WriteDashManifest
 */
OutputGroupSettingsCmafGroupSettings.prototype['WriteDashManifest'] = undefined;

/**
 * @member {module:model/CmafWriteHLSManifest} WriteHlsManifest
 */
OutputGroupSettingsCmafGroupSettings.prototype['WriteHlsManifest'] = undefined;

/**
 * @member {module:model/CmafWriteSegmentTimelineInRepresentation} WriteSegmentTimelineInRepresentation
 */
OutputGroupSettingsCmafGroupSettings.prototype['WriteSegmentTimelineInRepresentation'] = undefined;


// Implement CmafGroupSettings interface:
/**
 * @member {Array} AdditionalManifests
 */
CmafGroupSettings.prototype['AdditionalManifests'] = undefined;
/**
 * @member {String} BaseUrl
 */
CmafGroupSettings.prototype['BaseUrl'] = undefined;
/**
 * @member {module:model/CmafClientCache} ClientCache
 */
CmafGroupSettings.prototype['ClientCache'] = undefined;
/**
 * @member {module:model/CmafCodecSpecification} CodecSpecification
 */
CmafGroupSettings.prototype['CodecSpecification'] = undefined;
/**
 * @member {module:model/DashManifestStyle} DashManifestStyle
 */
CmafGroupSettings.prototype['DashManifestStyle'] = undefined;
/**
 * @member {String} Destination
 */
CmafGroupSettings.prototype['Destination'] = undefined;
/**
 * @member {module:model/CmafGroupSettingsDestinationSettings} DestinationSettings
 */
CmafGroupSettings.prototype['DestinationSettings'] = undefined;
/**
 * @member {module:model/CmafGroupSettingsEncryption} Encryption
 */
CmafGroupSettings.prototype['Encryption'] = undefined;
/**
 * @member {Number} FragmentLength
 */
CmafGroupSettings.prototype['FragmentLength'] = undefined;
/**
 * @member {module:model/CmafImageBasedTrickPlay} ImageBasedTrickPlay
 */
CmafGroupSettings.prototype['ImageBasedTrickPlay'] = undefined;
/**
 * @member {module:model/CmafGroupSettingsImageBasedTrickPlaySettings} ImageBasedTrickPlaySettings
 */
CmafGroupSettings.prototype['ImageBasedTrickPlaySettings'] = undefined;
/**
 * @member {module:model/CmafManifestCompression} ManifestCompression
 */
CmafGroupSettings.prototype['ManifestCompression'] = undefined;
/**
 * @member {module:model/CmafManifestDurationFormat} ManifestDurationFormat
 */
CmafGroupSettings.prototype['ManifestDurationFormat'] = undefined;
/**
 * @member {Number} MinBufferTime
 */
CmafGroupSettings.prototype['MinBufferTime'] = undefined;
/**
 * @member {Number} MinFinalSegmentLength
 */
CmafGroupSettings.prototype['MinFinalSegmentLength'] = undefined;
/**
 * @member {module:model/CmafMpdManifestBandwidthType} MpdManifestBandwidthType
 */
CmafGroupSettings.prototype['MpdManifestBandwidthType'] = undefined;
/**
 * @member {module:model/CmafMpdProfile} MpdProfile
 */
CmafGroupSettings.prototype['MpdProfile'] = undefined;
/**
 * @member {module:model/CmafPtsOffsetHandlingForBFrames} PtsOffsetHandlingForBFrames
 */
CmafGroupSettings.prototype['PtsOffsetHandlingForBFrames'] = undefined;
/**
 * @member {module:model/CmafSegmentControl} SegmentControl
 */
CmafGroupSettings.prototype['SegmentControl'] = undefined;
/**
 * @member {Number} SegmentLength
 */
CmafGroupSettings.prototype['SegmentLength'] = undefined;
/**
 * @member {module:model/CmafSegmentLengthControl} SegmentLengthControl
 */
CmafGroupSettings.prototype['SegmentLengthControl'] = undefined;
/**
 * @member {module:model/CmafStreamInfResolution} StreamInfResolution
 */
CmafGroupSettings.prototype['StreamInfResolution'] = undefined;
/**
 * @member {module:model/CmafTargetDurationCompatibilityMode} TargetDurationCompatibilityMode
 */
CmafGroupSettings.prototype['TargetDurationCompatibilityMode'] = undefined;
/**
 * @member {module:model/CmafVideoCompositionOffsets} VideoCompositionOffsets
 */
CmafGroupSettings.prototype['VideoCompositionOffsets'] = undefined;
/**
 * @member {module:model/CmafWriteDASHManifest} WriteDashManifest
 */
CmafGroupSettings.prototype['WriteDashManifest'] = undefined;
/**
 * @member {module:model/CmafWriteHLSManifest} WriteHlsManifest
 */
CmafGroupSettings.prototype['WriteHlsManifest'] = undefined;
/**
 * @member {module:model/CmafWriteSegmentTimelineInRepresentation} WriteSegmentTimelineInRepresentation
 */
CmafGroupSettings.prototype['WriteSegmentTimelineInRepresentation'] = undefined;




export default OutputGroupSettingsCmafGroupSettings;

