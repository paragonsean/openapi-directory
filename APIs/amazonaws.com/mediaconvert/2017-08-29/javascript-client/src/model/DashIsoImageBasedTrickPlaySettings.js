/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DashIsoIntervalCadence from './DashIsoIntervalCadence';

/**
 * The DashIsoImageBasedTrickPlaySettings model module.
 * @module model/DashIsoImageBasedTrickPlaySettings
 * @version 2017-08-29
 */
class DashIsoImageBasedTrickPlaySettings {
    /**
     * Constructs a new <code>DashIsoImageBasedTrickPlaySettings</code>.
     * Tile and thumbnail settings applicable when imageBasedTrickPlay is ADVANCED
     * @alias module:model/DashIsoImageBasedTrickPlaySettings
     */
    constructor() { 
        
        DashIsoImageBasedTrickPlaySettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DashIsoImageBasedTrickPlaySettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DashIsoImageBasedTrickPlaySettings} obj Optional instance to populate.
     * @return {module:model/DashIsoImageBasedTrickPlaySettings} The populated <code>DashIsoImageBasedTrickPlaySettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DashIsoImageBasedTrickPlaySettings();

            if (data.hasOwnProperty('IntervalCadence')) {
                obj['IntervalCadence'] = ApiClient.convertToType(data['IntervalCadence'], DashIsoIntervalCadence);
            }
            if (data.hasOwnProperty('ThumbnailHeight')) {
                obj['ThumbnailHeight'] = ApiClient.convertToType(data['ThumbnailHeight'], 'Number');
            }
            if (data.hasOwnProperty('ThumbnailInterval')) {
                obj['ThumbnailInterval'] = ApiClient.convertToType(data['ThumbnailInterval'], 'Number');
            }
            if (data.hasOwnProperty('ThumbnailWidth')) {
                obj['ThumbnailWidth'] = ApiClient.convertToType(data['ThumbnailWidth'], 'Number');
            }
            if (data.hasOwnProperty('TileHeight')) {
                obj['TileHeight'] = ApiClient.convertToType(data['TileHeight'], 'Number');
            }
            if (data.hasOwnProperty('TileWidth')) {
                obj['TileWidth'] = ApiClient.convertToType(data['TileWidth'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DashIsoImageBasedTrickPlaySettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DashIsoImageBasedTrickPlaySettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `IntervalCadence`
        if (data['IntervalCadence']) { // data not null
          DashIsoIntervalCadence.validateJSON(data['IntervalCadence']);
        }
        // validate the optional field `ThumbnailHeight`
        if (data['ThumbnailHeight']) { // data not null
          Number.validateJSON(data['ThumbnailHeight']);
        }
        // validate the optional field `ThumbnailInterval`
        if (data['ThumbnailInterval']) { // data not null
          Number.validateJSON(data['ThumbnailInterval']);
        }
        // validate the optional field `ThumbnailWidth`
        if (data['ThumbnailWidth']) { // data not null
          Number.validateJSON(data['ThumbnailWidth']);
        }
        // validate the optional field `TileHeight`
        if (data['TileHeight']) { // data not null
          Number.validateJSON(data['TileHeight']);
        }
        // validate the optional field `TileWidth`
        if (data['TileWidth']) { // data not null
          Number.validateJSON(data['TileWidth']);
        }

        return true;
    }


}



/**
 * @member {module:model/DashIsoIntervalCadence} IntervalCadence
 */
DashIsoImageBasedTrickPlaySettings.prototype['IntervalCadence'] = undefined;

/**
 * @member {Number} ThumbnailHeight
 */
DashIsoImageBasedTrickPlaySettings.prototype['ThumbnailHeight'] = undefined;

/**
 * @member {Number} ThumbnailInterval
 */
DashIsoImageBasedTrickPlaySettings.prototype['ThumbnailInterval'] = undefined;

/**
 * @member {Number} ThumbnailWidth
 */
DashIsoImageBasedTrickPlaySettings.prototype['ThumbnailWidth'] = undefined;

/**
 * @member {Number} TileHeight
 */
DashIsoImageBasedTrickPlaySettings.prototype['TileHeight'] = undefined;

/**
 * @member {Number} TileWidth
 */
DashIsoImageBasedTrickPlaySettings.prototype['TileWidth'] = undefined;






export default DashIsoImageBasedTrickPlaySettings;

