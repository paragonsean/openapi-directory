/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Vp9FramerateControl from './Vp9FramerateControl';
import Vp9FramerateConversionAlgorithm from './Vp9FramerateConversionAlgorithm';
import Vp9ParControl from './Vp9ParControl';
import Vp9QualityTuningLevel from './Vp9QualityTuningLevel';
import Vp9RateControlMode from './Vp9RateControlMode';

/**
 * The Vp9Settings model module.
 * @module model/Vp9Settings
 * @version 2017-08-29
 */
class Vp9Settings {
    /**
     * Constructs a new <code>Vp9Settings</code>.
     * Required when you set Codec to the value VP9.
     * @alias module:model/Vp9Settings
     */
    constructor() { 
        
        Vp9Settings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Vp9Settings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Vp9Settings} obj Optional instance to populate.
     * @return {module:model/Vp9Settings} The populated <code>Vp9Settings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Vp9Settings();

            if (data.hasOwnProperty('Bitrate')) {
                obj['Bitrate'] = ApiClient.convertToType(data['Bitrate'], 'Number');
            }
            if (data.hasOwnProperty('FramerateControl')) {
                obj['FramerateControl'] = ApiClient.convertToType(data['FramerateControl'], Vp9FramerateControl);
            }
            if (data.hasOwnProperty('FramerateConversionAlgorithm')) {
                obj['FramerateConversionAlgorithm'] = ApiClient.convertToType(data['FramerateConversionAlgorithm'], Vp9FramerateConversionAlgorithm);
            }
            if (data.hasOwnProperty('FramerateDenominator')) {
                obj['FramerateDenominator'] = ApiClient.convertToType(data['FramerateDenominator'], 'Number');
            }
            if (data.hasOwnProperty('FramerateNumerator')) {
                obj['FramerateNumerator'] = ApiClient.convertToType(data['FramerateNumerator'], 'Number');
            }
            if (data.hasOwnProperty('GopSize')) {
                obj['GopSize'] = ApiClient.convertToType(data['GopSize'], 'Number');
            }
            if (data.hasOwnProperty('HrdBufferSize')) {
                obj['HrdBufferSize'] = ApiClient.convertToType(data['HrdBufferSize'], 'Number');
            }
            if (data.hasOwnProperty('MaxBitrate')) {
                obj['MaxBitrate'] = ApiClient.convertToType(data['MaxBitrate'], 'Number');
            }
            if (data.hasOwnProperty('ParControl')) {
                obj['ParControl'] = ApiClient.convertToType(data['ParControl'], Vp9ParControl);
            }
            if (data.hasOwnProperty('ParDenominator')) {
                obj['ParDenominator'] = ApiClient.convertToType(data['ParDenominator'], 'Number');
            }
            if (data.hasOwnProperty('ParNumerator')) {
                obj['ParNumerator'] = ApiClient.convertToType(data['ParNumerator'], 'Number');
            }
            if (data.hasOwnProperty('QualityTuningLevel')) {
                obj['QualityTuningLevel'] = ApiClient.convertToType(data['QualityTuningLevel'], Vp9QualityTuningLevel);
            }
            if (data.hasOwnProperty('RateControlMode')) {
                obj['RateControlMode'] = ApiClient.convertToType(data['RateControlMode'], Vp9RateControlMode);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Vp9Settings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Vp9Settings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Bitrate`
        if (data['Bitrate']) { // data not null
          Number.validateJSON(data['Bitrate']);
        }
        // validate the optional field `FramerateControl`
        if (data['FramerateControl']) { // data not null
          Vp9FramerateControl.validateJSON(data['FramerateControl']);
        }
        // validate the optional field `FramerateConversionAlgorithm`
        if (data['FramerateConversionAlgorithm']) { // data not null
          Vp9FramerateConversionAlgorithm.validateJSON(data['FramerateConversionAlgorithm']);
        }
        // validate the optional field `FramerateDenominator`
        if (data['FramerateDenominator']) { // data not null
          Number.validateJSON(data['FramerateDenominator']);
        }
        // validate the optional field `FramerateNumerator`
        if (data['FramerateNumerator']) { // data not null
          Number.validateJSON(data['FramerateNumerator']);
        }
        // validate the optional field `GopSize`
        if (data['GopSize']) { // data not null
          Number.validateJSON(data['GopSize']);
        }
        // validate the optional field `HrdBufferSize`
        if (data['HrdBufferSize']) { // data not null
          Number.validateJSON(data['HrdBufferSize']);
        }
        // validate the optional field `MaxBitrate`
        if (data['MaxBitrate']) { // data not null
          Number.validateJSON(data['MaxBitrate']);
        }
        // validate the optional field `ParControl`
        if (data['ParControl']) { // data not null
          Vp9ParControl.validateJSON(data['ParControl']);
        }
        // validate the optional field `ParDenominator`
        if (data['ParDenominator']) { // data not null
          Number.validateJSON(data['ParDenominator']);
        }
        // validate the optional field `ParNumerator`
        if (data['ParNumerator']) { // data not null
          Number.validateJSON(data['ParNumerator']);
        }
        // validate the optional field `QualityTuningLevel`
        if (data['QualityTuningLevel']) { // data not null
          Vp9QualityTuningLevel.validateJSON(data['QualityTuningLevel']);
        }
        // validate the optional field `RateControlMode`
        if (data['RateControlMode']) { // data not null
          Vp9RateControlMode.validateJSON(data['RateControlMode']);
        }

        return true;
    }


}



/**
 * @member {Number} Bitrate
 */
Vp9Settings.prototype['Bitrate'] = undefined;

/**
 * @member {module:model/Vp9FramerateControl} FramerateControl
 */
Vp9Settings.prototype['FramerateControl'] = undefined;

/**
 * @member {module:model/Vp9FramerateConversionAlgorithm} FramerateConversionAlgorithm
 */
Vp9Settings.prototype['FramerateConversionAlgorithm'] = undefined;

/**
 * @member {Number} FramerateDenominator
 */
Vp9Settings.prototype['FramerateDenominator'] = undefined;

/**
 * @member {Number} FramerateNumerator
 */
Vp9Settings.prototype['FramerateNumerator'] = undefined;

/**
 * @member {Number} GopSize
 */
Vp9Settings.prototype['GopSize'] = undefined;

/**
 * @member {Number} HrdBufferSize
 */
Vp9Settings.prototype['HrdBufferSize'] = undefined;

/**
 * @member {Number} MaxBitrate
 */
Vp9Settings.prototype['MaxBitrate'] = undefined;

/**
 * @member {module:model/Vp9ParControl} ParControl
 */
Vp9Settings.prototype['ParControl'] = undefined;

/**
 * @member {Number} ParDenominator
 */
Vp9Settings.prototype['ParDenominator'] = undefined;

/**
 * @member {Number} ParNumerator
 */
Vp9Settings.prototype['ParNumerator'] = undefined;

/**
 * @member {module:model/Vp9QualityTuningLevel} QualityTuningLevel
 */
Vp9Settings.prototype['QualityTuningLevel'] = undefined;

/**
 * @member {module:model/Vp9RateControlMode} RateControlMode
 */
Vp9Settings.prototype['RateControlMode'] = undefined;






export default Vp9Settings;

