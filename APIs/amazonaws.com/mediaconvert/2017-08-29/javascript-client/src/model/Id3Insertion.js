/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Id3Insertion model module.
 * @module model/Id3Insertion
 * @version 2017-08-29
 */
class Id3Insertion {
    /**
     * Constructs a new <code>Id3Insertion</code>.
     * To insert ID3 tags in your output, specify two values. Use ID3 tag to specify the base 64 encoded string and use Timecode to specify the time when the tag should be inserted. To insert multiple ID3 tags in your output, create multiple instances of ID3 insertion.
     * @alias module:model/Id3Insertion
     */
    constructor() { 
        
        Id3Insertion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Id3Insertion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Id3Insertion} obj Optional instance to populate.
     * @return {module:model/Id3Insertion} The populated <code>Id3Insertion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Id3Insertion();

            if (data.hasOwnProperty('Id3')) {
                obj['Id3'] = ApiClient.convertToType(data['Id3'], 'String');
            }
            if (data.hasOwnProperty('Timecode')) {
                obj['Timecode'] = ApiClient.convertToType(data['Timecode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Id3Insertion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Id3Insertion</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id3`
        if (data['Id3']) { // data not null
          String.validateJSON(data['Id3']);
        }
        // validate the optional field `Timecode`
        if (data['Timecode']) { // data not null
          String.validateJSON(data['Timecode']);
        }

        return true;
    }


}



/**
 * @member {String} Id3
 */
Id3Insertion.prototype['Id3'] = undefined;

/**
 * @member {String} Timecode
 */
Id3Insertion.prototype['Timecode'] = undefined;






export default Id3Insertion;

