/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioCodec from './AudioCodec';
import AudioCodecSettingsAacSettings from './AudioCodecSettingsAacSettings';
import AudioCodecSettingsAc3Settings from './AudioCodecSettingsAc3Settings';
import AudioCodecSettingsAiffSettings from './AudioCodecSettingsAiffSettings';
import AudioCodecSettingsEac3AtmosSettings from './AudioCodecSettingsEac3AtmosSettings';
import AudioCodecSettingsEac3Settings from './AudioCodecSettingsEac3Settings';
import AudioCodecSettingsMp2Settings from './AudioCodecSettingsMp2Settings';
import AudioCodecSettingsMp3Settings from './AudioCodecSettingsMp3Settings';
import AudioCodecSettingsOpusSettings from './AudioCodecSettingsOpusSettings';
import AudioCodecSettingsVorbisSettings from './AudioCodecSettingsVorbisSettings';
import AudioCodecSettingsWavSettings from './AudioCodecSettingsWavSettings';

/**
 * The AudioCodecSettings model module.
 * @module model/AudioCodecSettings
 * @version 2017-08-29
 */
class AudioCodecSettings {
    /**
     * Constructs a new <code>AudioCodecSettings</code>.
     * Settings related to audio encoding. The settings in this group vary depending on the value that you choose for your audio codec.
     * @alias module:model/AudioCodecSettings
     */
    constructor() { 
        
        AudioCodecSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AudioCodecSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioCodecSettings} obj Optional instance to populate.
     * @return {module:model/AudioCodecSettings} The populated <code>AudioCodecSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioCodecSettings();

            if (data.hasOwnProperty('AacSettings')) {
                obj['AacSettings'] = AudioCodecSettingsAacSettings.constructFromObject(data['AacSettings']);
            }
            if (data.hasOwnProperty('Ac3Settings')) {
                obj['Ac3Settings'] = AudioCodecSettingsAc3Settings.constructFromObject(data['Ac3Settings']);
            }
            if (data.hasOwnProperty('AiffSettings')) {
                obj['AiffSettings'] = AudioCodecSettingsAiffSettings.constructFromObject(data['AiffSettings']);
            }
            if (data.hasOwnProperty('Codec')) {
                obj['Codec'] = ApiClient.convertToType(data['Codec'], AudioCodec);
            }
            if (data.hasOwnProperty('Eac3AtmosSettings')) {
                obj['Eac3AtmosSettings'] = AudioCodecSettingsEac3AtmosSettings.constructFromObject(data['Eac3AtmosSettings']);
            }
            if (data.hasOwnProperty('Eac3Settings')) {
                obj['Eac3Settings'] = AudioCodecSettingsEac3Settings.constructFromObject(data['Eac3Settings']);
            }
            if (data.hasOwnProperty('Mp2Settings')) {
                obj['Mp2Settings'] = AudioCodecSettingsMp2Settings.constructFromObject(data['Mp2Settings']);
            }
            if (data.hasOwnProperty('Mp3Settings')) {
                obj['Mp3Settings'] = AudioCodecSettingsMp3Settings.constructFromObject(data['Mp3Settings']);
            }
            if (data.hasOwnProperty('OpusSettings')) {
                obj['OpusSettings'] = AudioCodecSettingsOpusSettings.constructFromObject(data['OpusSettings']);
            }
            if (data.hasOwnProperty('VorbisSettings')) {
                obj['VorbisSettings'] = AudioCodecSettingsVorbisSettings.constructFromObject(data['VorbisSettings']);
            }
            if (data.hasOwnProperty('WavSettings')) {
                obj['WavSettings'] = AudioCodecSettingsWavSettings.constructFromObject(data['WavSettings']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioCodecSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioCodecSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AacSettings`
        if (data['AacSettings']) { // data not null
          AudioCodecSettingsAacSettings.validateJSON(data['AacSettings']);
        }
        // validate the optional field `Ac3Settings`
        if (data['Ac3Settings']) { // data not null
          AudioCodecSettingsAc3Settings.validateJSON(data['Ac3Settings']);
        }
        // validate the optional field `AiffSettings`
        if (data['AiffSettings']) { // data not null
          AudioCodecSettingsAiffSettings.validateJSON(data['AiffSettings']);
        }
        // validate the optional field `Codec`
        if (data['Codec']) { // data not null
          AudioCodec.validateJSON(data['Codec']);
        }
        // validate the optional field `Eac3AtmosSettings`
        if (data['Eac3AtmosSettings']) { // data not null
          AudioCodecSettingsEac3AtmosSettings.validateJSON(data['Eac3AtmosSettings']);
        }
        // validate the optional field `Eac3Settings`
        if (data['Eac3Settings']) { // data not null
          AudioCodecSettingsEac3Settings.validateJSON(data['Eac3Settings']);
        }
        // validate the optional field `Mp2Settings`
        if (data['Mp2Settings']) { // data not null
          AudioCodecSettingsMp2Settings.validateJSON(data['Mp2Settings']);
        }
        // validate the optional field `Mp3Settings`
        if (data['Mp3Settings']) { // data not null
          AudioCodecSettingsMp3Settings.validateJSON(data['Mp3Settings']);
        }
        // validate the optional field `OpusSettings`
        if (data['OpusSettings']) { // data not null
          AudioCodecSettingsOpusSettings.validateJSON(data['OpusSettings']);
        }
        // validate the optional field `VorbisSettings`
        if (data['VorbisSettings']) { // data not null
          AudioCodecSettingsVorbisSettings.validateJSON(data['VorbisSettings']);
        }
        // validate the optional field `WavSettings`
        if (data['WavSettings']) { // data not null
          AudioCodecSettingsWavSettings.validateJSON(data['WavSettings']);
        }

        return true;
    }


}



/**
 * @member {module:model/AudioCodecSettingsAacSettings} AacSettings
 */
AudioCodecSettings.prototype['AacSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsAc3Settings} Ac3Settings
 */
AudioCodecSettings.prototype['Ac3Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsAiffSettings} AiffSettings
 */
AudioCodecSettings.prototype['AiffSettings'] = undefined;

/**
 * @member {module:model/AudioCodec} Codec
 */
AudioCodecSettings.prototype['Codec'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsEac3AtmosSettings} Eac3AtmosSettings
 */
AudioCodecSettings.prototype['Eac3AtmosSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsEac3Settings} Eac3Settings
 */
AudioCodecSettings.prototype['Eac3Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsMp2Settings} Mp2Settings
 */
AudioCodecSettings.prototype['Mp2Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsMp3Settings} Mp3Settings
 */
AudioCodecSettings.prototype['Mp3Settings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsOpusSettings} OpusSettings
 */
AudioCodecSettings.prototype['OpusSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsVorbisSettings} VorbisSettings
 */
AudioCodecSettings.prototype['VorbisSettings'] = undefined;

/**
 * @member {module:model/AudioCodecSettingsWavSettings} WavSettings
 */
AudioCodecSettings.prototype['WavSettings'] = undefined;






export default AudioCodecSettings;

