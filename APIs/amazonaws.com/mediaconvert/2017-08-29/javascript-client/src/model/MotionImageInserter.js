/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MotionImageInserterFramerate from './MotionImageInserterFramerate';
import MotionImageInserterOffset from './MotionImageInserterOffset';
import MotionImageInsertionMode from './MotionImageInsertionMode';
import MotionImagePlayback from './MotionImagePlayback';

/**
 * The MotionImageInserter model module.
 * @module model/MotionImageInserter
 * @version 2017-08-29
 */
class MotionImageInserter {
    /**
     * Constructs a new <code>MotionImageInserter</code>.
     * Overlay motion graphics on top of your video. The motion graphics that you specify here appear on all outputs in all output groups. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/motion-graphic-overlay.html.
     * @alias module:model/MotionImageInserter
     */
    constructor() { 
        
        MotionImageInserter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MotionImageInserter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MotionImageInserter} obj Optional instance to populate.
     * @return {module:model/MotionImageInserter} The populated <code>MotionImageInserter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MotionImageInserter();

            if (data.hasOwnProperty('Framerate')) {
                obj['Framerate'] = MotionImageInserterFramerate.constructFromObject(data['Framerate']);
            }
            if (data.hasOwnProperty('Input')) {
                obj['Input'] = ApiClient.convertToType(data['Input'], 'String');
            }
            if (data.hasOwnProperty('InsertionMode')) {
                obj['InsertionMode'] = ApiClient.convertToType(data['InsertionMode'], MotionImageInsertionMode);
            }
            if (data.hasOwnProperty('Offset')) {
                obj['Offset'] = MotionImageInserterOffset.constructFromObject(data['Offset']);
            }
            if (data.hasOwnProperty('Playback')) {
                obj['Playback'] = ApiClient.convertToType(data['Playback'], MotionImagePlayback);
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MotionImageInserter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MotionImageInserter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Framerate`
        if (data['Framerate']) { // data not null
          MotionImageInserterFramerate.validateJSON(data['Framerate']);
        }
        // validate the optional field `Input`
        if (data['Input']) { // data not null
          String.validateJSON(data['Input']);
        }
        // validate the optional field `InsertionMode`
        if (data['InsertionMode']) { // data not null
          MotionImageInsertionMode.validateJSON(data['InsertionMode']);
        }
        // validate the optional field `Offset`
        if (data['Offset']) { // data not null
          MotionImageInserterOffset.validateJSON(data['Offset']);
        }
        // validate the optional field `Playback`
        if (data['Playback']) { // data not null
          MotionImagePlayback.validateJSON(data['Playback']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          String.validateJSON(data['StartTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/MotionImageInserterFramerate} Framerate
 */
MotionImageInserter.prototype['Framerate'] = undefined;

/**
 * @member {String} Input
 */
MotionImageInserter.prototype['Input'] = undefined;

/**
 * @member {module:model/MotionImageInsertionMode} InsertionMode
 */
MotionImageInserter.prototype['InsertionMode'] = undefined;

/**
 * @member {module:model/MotionImageInserterOffset} Offset
 */
MotionImageInserter.prototype['Offset'] = undefined;

/**
 * @member {module:model/MotionImagePlayback} Playback
 */
MotionImageInserter.prototype['Playback'] = undefined;

/**
 * @member {String} StartTime
 */
MotionImageInserter.prototype['StartTime'] = undefined;






export default MotionImageInserter;

