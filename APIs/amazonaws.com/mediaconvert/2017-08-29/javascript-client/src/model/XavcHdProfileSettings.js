/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import XavcFlickerAdaptiveQuantization from './XavcFlickerAdaptiveQuantization';
import XavcGopBReference from './XavcGopBReference';
import XavcHdProfileBitrateClass from './XavcHdProfileBitrateClass';
import XavcHdProfileQualityTuningLevel from './XavcHdProfileQualityTuningLevel';
import XavcHdProfileTelecine from './XavcHdProfileTelecine';
import XavcInterlaceMode from './XavcInterlaceMode';

/**
 * The XavcHdProfileSettings model module.
 * @module model/XavcHdProfileSettings
 * @version 2017-08-29
 */
class XavcHdProfileSettings {
    /**
     * Constructs a new <code>XavcHdProfileSettings</code>.
     * Required when you set Profile to the value XAVC_HD.
     * @alias module:model/XavcHdProfileSettings
     */
    constructor() { 
        
        XavcHdProfileSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>XavcHdProfileSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/XavcHdProfileSettings} obj Optional instance to populate.
     * @return {module:model/XavcHdProfileSettings} The populated <code>XavcHdProfileSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new XavcHdProfileSettings();

            if (data.hasOwnProperty('BitrateClass')) {
                obj['BitrateClass'] = ApiClient.convertToType(data['BitrateClass'], XavcHdProfileBitrateClass);
            }
            if (data.hasOwnProperty('FlickerAdaptiveQuantization')) {
                obj['FlickerAdaptiveQuantization'] = ApiClient.convertToType(data['FlickerAdaptiveQuantization'], XavcFlickerAdaptiveQuantization);
            }
            if (data.hasOwnProperty('GopBReference')) {
                obj['GopBReference'] = ApiClient.convertToType(data['GopBReference'], XavcGopBReference);
            }
            if (data.hasOwnProperty('GopClosedCadence')) {
                obj['GopClosedCadence'] = ApiClient.convertToType(data['GopClosedCadence'], 'Number');
            }
            if (data.hasOwnProperty('HrdBufferSize')) {
                obj['HrdBufferSize'] = ApiClient.convertToType(data['HrdBufferSize'], 'Number');
            }
            if (data.hasOwnProperty('InterlaceMode')) {
                obj['InterlaceMode'] = ApiClient.convertToType(data['InterlaceMode'], XavcInterlaceMode);
            }
            if (data.hasOwnProperty('QualityTuningLevel')) {
                obj['QualityTuningLevel'] = ApiClient.convertToType(data['QualityTuningLevel'], XavcHdProfileQualityTuningLevel);
            }
            if (data.hasOwnProperty('Slices')) {
                obj['Slices'] = ApiClient.convertToType(data['Slices'], 'Number');
            }
            if (data.hasOwnProperty('Telecine')) {
                obj['Telecine'] = ApiClient.convertToType(data['Telecine'], XavcHdProfileTelecine);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>XavcHdProfileSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>XavcHdProfileSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `BitrateClass`
        if (data['BitrateClass']) { // data not null
          XavcHdProfileBitrateClass.validateJSON(data['BitrateClass']);
        }
        // validate the optional field `FlickerAdaptiveQuantization`
        if (data['FlickerAdaptiveQuantization']) { // data not null
          XavcFlickerAdaptiveQuantization.validateJSON(data['FlickerAdaptiveQuantization']);
        }
        // validate the optional field `GopBReference`
        if (data['GopBReference']) { // data not null
          XavcGopBReference.validateJSON(data['GopBReference']);
        }
        // validate the optional field `GopClosedCadence`
        if (data['GopClosedCadence']) { // data not null
          Number.validateJSON(data['GopClosedCadence']);
        }
        // validate the optional field `HrdBufferSize`
        if (data['HrdBufferSize']) { // data not null
          Number.validateJSON(data['HrdBufferSize']);
        }
        // validate the optional field `InterlaceMode`
        if (data['InterlaceMode']) { // data not null
          XavcInterlaceMode.validateJSON(data['InterlaceMode']);
        }
        // validate the optional field `QualityTuningLevel`
        if (data['QualityTuningLevel']) { // data not null
          XavcHdProfileQualityTuningLevel.validateJSON(data['QualityTuningLevel']);
        }
        // validate the optional field `Slices`
        if (data['Slices']) { // data not null
          Number.validateJSON(data['Slices']);
        }
        // validate the optional field `Telecine`
        if (data['Telecine']) { // data not null
          XavcHdProfileTelecine.validateJSON(data['Telecine']);
        }

        return true;
    }


}



/**
 * @member {module:model/XavcHdProfileBitrateClass} BitrateClass
 */
XavcHdProfileSettings.prototype['BitrateClass'] = undefined;

/**
 * @member {module:model/XavcFlickerAdaptiveQuantization} FlickerAdaptiveQuantization
 */
XavcHdProfileSettings.prototype['FlickerAdaptiveQuantization'] = undefined;

/**
 * @member {module:model/XavcGopBReference} GopBReference
 */
XavcHdProfileSettings.prototype['GopBReference'] = undefined;

/**
 * @member {Number} GopClosedCadence
 */
XavcHdProfileSettings.prototype['GopClosedCadence'] = undefined;

/**
 * @member {Number} HrdBufferSize
 */
XavcHdProfileSettings.prototype['HrdBufferSize'] = undefined;

/**
 * @member {module:model/XavcInterlaceMode} InterlaceMode
 */
XavcHdProfileSettings.prototype['InterlaceMode'] = undefined;

/**
 * @member {module:model/XavcHdProfileQualityTuningLevel} QualityTuningLevel
 */
XavcHdProfileSettings.prototype['QualityTuningLevel'] = undefined;

/**
 * @member {Number} Slices
 */
XavcHdProfileSettings.prototype['Slices'] = undefined;

/**
 * @member {module:model/XavcHdProfileTelecine} Telecine
 */
XavcHdProfileSettings.prototype['Telecine'] = undefined;






export default XavcHdProfileSettings;

