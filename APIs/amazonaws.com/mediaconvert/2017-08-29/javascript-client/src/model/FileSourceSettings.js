/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CaptionSourceConvertPaintOnToPopOn from './CaptionSourceConvertPaintOnToPopOn';
import FileSourceConvert608To708 from './FileSourceConvert608To708';
import FileSourceSettingsFramerate from './FileSourceSettingsFramerate';
import FileSourceTimeDeltaUnits from './FileSourceTimeDeltaUnits';

/**
 * The FileSourceSettings model module.
 * @module model/FileSourceSettings
 * @version 2017-08-29
 */
class FileSourceSettings {
    /**
     * Constructs a new <code>FileSourceSettings</code>.
     * If your input captions are SCC, SMI, SRT, STL, TTML, WebVTT, or IMSC 1.1 in an xml file, specify the URI of the input caption source file. If your caption source is IMSC in an IMF package, use TrackSourceSettings instead of FileSoureSettings.
     * @alias module:model/FileSourceSettings
     */
    constructor() { 
        
        FileSourceSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileSourceSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileSourceSettings} obj Optional instance to populate.
     * @return {module:model/FileSourceSettings} The populated <code>FileSourceSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileSourceSettings();

            if (data.hasOwnProperty('Convert608To708')) {
                obj['Convert608To708'] = ApiClient.convertToType(data['Convert608To708'], FileSourceConvert608To708);
            }
            if (data.hasOwnProperty('ConvertPaintToPop')) {
                obj['ConvertPaintToPop'] = ApiClient.convertToType(data['ConvertPaintToPop'], CaptionSourceConvertPaintOnToPopOn);
            }
            if (data.hasOwnProperty('Framerate')) {
                obj['Framerate'] = FileSourceSettingsFramerate.constructFromObject(data['Framerate']);
            }
            if (data.hasOwnProperty('SourceFile')) {
                obj['SourceFile'] = ApiClient.convertToType(data['SourceFile'], 'String');
            }
            if (data.hasOwnProperty('TimeDelta')) {
                obj['TimeDelta'] = ApiClient.convertToType(data['TimeDelta'], 'Number');
            }
            if (data.hasOwnProperty('TimeDeltaUnits')) {
                obj['TimeDeltaUnits'] = ApiClient.convertToType(data['TimeDeltaUnits'], FileSourceTimeDeltaUnits);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileSourceSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileSourceSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Convert608To708`
        if (data['Convert608To708']) { // data not null
          FileSourceConvert608To708.validateJSON(data['Convert608To708']);
        }
        // validate the optional field `ConvertPaintToPop`
        if (data['ConvertPaintToPop']) { // data not null
          CaptionSourceConvertPaintOnToPopOn.validateJSON(data['ConvertPaintToPop']);
        }
        // validate the optional field `Framerate`
        if (data['Framerate']) { // data not null
          FileSourceSettingsFramerate.validateJSON(data['Framerate']);
        }
        // validate the optional field `SourceFile`
        if (data['SourceFile']) { // data not null
          String.validateJSON(data['SourceFile']);
        }
        // validate the optional field `TimeDelta`
        if (data['TimeDelta']) { // data not null
          Number.validateJSON(data['TimeDelta']);
        }
        // validate the optional field `TimeDeltaUnits`
        if (data['TimeDeltaUnits']) { // data not null
          FileSourceTimeDeltaUnits.validateJSON(data['TimeDeltaUnits']);
        }

        return true;
    }


}



/**
 * @member {module:model/FileSourceConvert608To708} Convert608To708
 */
FileSourceSettings.prototype['Convert608To708'] = undefined;

/**
 * @member {module:model/CaptionSourceConvertPaintOnToPopOn} ConvertPaintToPop
 */
FileSourceSettings.prototype['ConvertPaintToPop'] = undefined;

/**
 * @member {module:model/FileSourceSettingsFramerate} Framerate
 */
FileSourceSettings.prototype['Framerate'] = undefined;

/**
 * @member {String} SourceFile
 */
FileSourceSettings.prototype['SourceFile'] = undefined;

/**
 * @member {Number} TimeDelta
 */
FileSourceSettings.prototype['TimeDelta'] = undefined;

/**
 * @member {module:model/FileSourceTimeDeltaUnits} TimeDeltaUnits
 */
FileSourceSettings.prototype['TimeDeltaUnits'] = undefined;






export default FileSourceSettings;

