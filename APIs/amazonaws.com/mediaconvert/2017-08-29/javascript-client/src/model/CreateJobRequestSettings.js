/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateJobRequestSettingsAvailBlanking from './CreateJobRequestSettingsAvailBlanking';
import CreateJobRequestSettingsEsam from './CreateJobRequestSettingsEsam';
import CreateJobRequestSettingsExtendedDataServices from './CreateJobRequestSettingsExtendedDataServices';
import CreateJobRequestSettingsKantarWatermark from './CreateJobRequestSettingsKantarWatermark';
import CreateJobRequestSettingsMotionImageInserter from './CreateJobRequestSettingsMotionImageInserter';
import CreateJobRequestSettingsNielsenConfiguration from './CreateJobRequestSettingsNielsenConfiguration';
import CreateJobRequestSettingsNielsenNonLinearWatermark from './CreateJobRequestSettingsNielsenNonLinearWatermark';
import CreateJobRequestSettingsTimecodeConfig from './CreateJobRequestSettingsTimecodeConfig';
import CreateJobRequestSettingsTimedMetadataInsertion from './CreateJobRequestSettingsTimedMetadataInsertion';
import JobSettings from './JobSettings';

/**
 * The CreateJobRequestSettings model module.
 * @module model/CreateJobRequestSettings
 * @version 2017-08-29
 */
class CreateJobRequestSettings {
    /**
     * Constructs a new <code>CreateJobRequestSettings</code>.
     * @alias module:model/CreateJobRequestSettings
     * @implements module:model/JobSettings
     */
    constructor() { 
        JobSettings.initialize(this);
        CreateJobRequestSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateJobRequestSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJobRequestSettings} obj Optional instance to populate.
     * @return {module:model/CreateJobRequestSettings} The populated <code>CreateJobRequestSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJobRequestSettings();
            JobSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('AdAvailOffset')) {
                obj['AdAvailOffset'] = ApiClient.convertToType(data['AdAvailOffset'], 'Number');
            }
            if (data.hasOwnProperty('AvailBlanking')) {
                obj['AvailBlanking'] = CreateJobRequestSettingsAvailBlanking.constructFromObject(data['AvailBlanking']);
            }
            if (data.hasOwnProperty('Esam')) {
                obj['Esam'] = CreateJobRequestSettingsEsam.constructFromObject(data['Esam']);
            }
            if (data.hasOwnProperty('ExtendedDataServices')) {
                obj['ExtendedDataServices'] = CreateJobRequestSettingsExtendedDataServices.constructFromObject(data['ExtendedDataServices']);
            }
            if (data.hasOwnProperty('Inputs')) {
                obj['Inputs'] = ApiClient.convertToType(data['Inputs'], Array);
            }
            if (data.hasOwnProperty('KantarWatermark')) {
                obj['KantarWatermark'] = CreateJobRequestSettingsKantarWatermark.constructFromObject(data['KantarWatermark']);
            }
            if (data.hasOwnProperty('MotionImageInserter')) {
                obj['MotionImageInserter'] = CreateJobRequestSettingsMotionImageInserter.constructFromObject(data['MotionImageInserter']);
            }
            if (data.hasOwnProperty('NielsenConfiguration')) {
                obj['NielsenConfiguration'] = CreateJobRequestSettingsNielsenConfiguration.constructFromObject(data['NielsenConfiguration']);
            }
            if (data.hasOwnProperty('NielsenNonLinearWatermark')) {
                obj['NielsenNonLinearWatermark'] = CreateJobRequestSettingsNielsenNonLinearWatermark.constructFromObject(data['NielsenNonLinearWatermark']);
            }
            if (data.hasOwnProperty('OutputGroups')) {
                obj['OutputGroups'] = ApiClient.convertToType(data['OutputGroups'], Array);
            }
            if (data.hasOwnProperty('TimecodeConfig')) {
                obj['TimecodeConfig'] = CreateJobRequestSettingsTimecodeConfig.constructFromObject(data['TimecodeConfig']);
            }
            if (data.hasOwnProperty('TimedMetadataInsertion')) {
                obj['TimedMetadataInsertion'] = CreateJobRequestSettingsTimedMetadataInsertion.constructFromObject(data['TimedMetadataInsertion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJobRequestSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJobRequestSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AdAvailOffset`
        if (data['AdAvailOffset']) { // data not null
          Number.validateJSON(data['AdAvailOffset']);
        }
        // validate the optional field `AvailBlanking`
        if (data['AvailBlanking']) { // data not null
          CreateJobRequestSettingsAvailBlanking.validateJSON(data['AvailBlanking']);
        }
        // validate the optional field `Esam`
        if (data['Esam']) { // data not null
          CreateJobRequestSettingsEsam.validateJSON(data['Esam']);
        }
        // validate the optional field `ExtendedDataServices`
        if (data['ExtendedDataServices']) { // data not null
          CreateJobRequestSettingsExtendedDataServices.validateJSON(data['ExtendedDataServices']);
        }
        // validate the optional field `Inputs`
        if (data['Inputs']) { // data not null
          Array.validateJSON(data['Inputs']);
        }
        // validate the optional field `KantarWatermark`
        if (data['KantarWatermark']) { // data not null
          CreateJobRequestSettingsKantarWatermark.validateJSON(data['KantarWatermark']);
        }
        // validate the optional field `MotionImageInserter`
        if (data['MotionImageInserter']) { // data not null
          CreateJobRequestSettingsMotionImageInserter.validateJSON(data['MotionImageInserter']);
        }
        // validate the optional field `NielsenConfiguration`
        if (data['NielsenConfiguration']) { // data not null
          CreateJobRequestSettingsNielsenConfiguration.validateJSON(data['NielsenConfiguration']);
        }
        // validate the optional field `NielsenNonLinearWatermark`
        if (data['NielsenNonLinearWatermark']) { // data not null
          CreateJobRequestSettingsNielsenNonLinearWatermark.validateJSON(data['NielsenNonLinearWatermark']);
        }
        // validate the optional field `OutputGroups`
        if (data['OutputGroups']) { // data not null
          Array.validateJSON(data['OutputGroups']);
        }
        // validate the optional field `TimecodeConfig`
        if (data['TimecodeConfig']) { // data not null
          CreateJobRequestSettingsTimecodeConfig.validateJSON(data['TimecodeConfig']);
        }
        // validate the optional field `TimedMetadataInsertion`
        if (data['TimedMetadataInsertion']) { // data not null
          CreateJobRequestSettingsTimedMetadataInsertion.validateJSON(data['TimedMetadataInsertion']);
        }

        return true;
    }


}



/**
 * @member {Number} AdAvailOffset
 */
CreateJobRequestSettings.prototype['AdAvailOffset'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsAvailBlanking} AvailBlanking
 */
CreateJobRequestSettings.prototype['AvailBlanking'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsEsam} Esam
 */
CreateJobRequestSettings.prototype['Esam'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsExtendedDataServices} ExtendedDataServices
 */
CreateJobRequestSettings.prototype['ExtendedDataServices'] = undefined;

/**
 * @member {Array} Inputs
 */
CreateJobRequestSettings.prototype['Inputs'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsKantarWatermark} KantarWatermark
 */
CreateJobRequestSettings.prototype['KantarWatermark'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsMotionImageInserter} MotionImageInserter
 */
CreateJobRequestSettings.prototype['MotionImageInserter'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsNielsenConfiguration} NielsenConfiguration
 */
CreateJobRequestSettings.prototype['NielsenConfiguration'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsNielsenNonLinearWatermark} NielsenNonLinearWatermark
 */
CreateJobRequestSettings.prototype['NielsenNonLinearWatermark'] = undefined;

/**
 * @member {Array} OutputGroups
 */
CreateJobRequestSettings.prototype['OutputGroups'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsTimecodeConfig} TimecodeConfig
 */
CreateJobRequestSettings.prototype['TimecodeConfig'] = undefined;

/**
 * @member {module:model/CreateJobRequestSettingsTimedMetadataInsertion} TimedMetadataInsertion
 */
CreateJobRequestSettings.prototype['TimedMetadataInsertion'] = undefined;


// Implement JobSettings interface:
/**
 * @member {Number} AdAvailOffset
 */
JobSettings.prototype['AdAvailOffset'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsAvailBlanking} AvailBlanking
 */
JobSettings.prototype['AvailBlanking'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsEsam} Esam
 */
JobSettings.prototype['Esam'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsExtendedDataServices} ExtendedDataServices
 */
JobSettings.prototype['ExtendedDataServices'] = undefined;
/**
 * @member {Array} Inputs
 */
JobSettings.prototype['Inputs'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsKantarWatermark} KantarWatermark
 */
JobSettings.prototype['KantarWatermark'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsMotionImageInserter} MotionImageInserter
 */
JobSettings.prototype['MotionImageInserter'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsNielsenConfiguration} NielsenConfiguration
 */
JobSettings.prototype['NielsenConfiguration'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsNielsenNonLinearWatermark} NielsenNonLinearWatermark
 */
JobSettings.prototype['NielsenNonLinearWatermark'] = undefined;
/**
 * @member {Array} OutputGroups
 */
JobSettings.prototype['OutputGroups'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsTimecodeConfig} TimecodeConfig
 */
JobSettings.prototype['TimecodeConfig'] = undefined;
/**
 * @member {module:model/CreateJobRequestSettingsTimedMetadataInsertion} TimedMetadataInsertion
 */
JobSettings.prototype['TimedMetadataInsertion'] = undefined;




export default CreateJobRequestSettings;

