/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClipLimits from './ClipLimits';

/**
 * The ColorCorrectorClipLimits model module.
 * @module model/ColorCorrectorClipLimits
 * @version 2017-08-29
 */
class ColorCorrectorClipLimits {
    /**
     * Constructs a new <code>ColorCorrectorClipLimits</code>.
     * @alias module:model/ColorCorrectorClipLimits
     * @implements module:model/ClipLimits
     */
    constructor() { 
        ClipLimits.initialize(this);
        ColorCorrectorClipLimits.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ColorCorrectorClipLimits</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ColorCorrectorClipLimits} obj Optional instance to populate.
     * @return {module:model/ColorCorrectorClipLimits} The populated <code>ColorCorrectorClipLimits</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ColorCorrectorClipLimits();
            ClipLimits.constructFromObject(data, obj);

            if (data.hasOwnProperty('MaximumRGBTolerance')) {
                obj['MaximumRGBTolerance'] = ApiClient.convertToType(data['MaximumRGBTolerance'], 'Number');
            }
            if (data.hasOwnProperty('MaximumYUV')) {
                obj['MaximumYUV'] = ApiClient.convertToType(data['MaximumYUV'], 'Number');
            }
            if (data.hasOwnProperty('MinimumRGBTolerance')) {
                obj['MinimumRGBTolerance'] = ApiClient.convertToType(data['MinimumRGBTolerance'], 'Number');
            }
            if (data.hasOwnProperty('MinimumYUV')) {
                obj['MinimumYUV'] = ApiClient.convertToType(data['MinimumYUV'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ColorCorrectorClipLimits</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ColorCorrectorClipLimits</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MaximumRGBTolerance`
        if (data['MaximumRGBTolerance']) { // data not null
          Number.validateJSON(data['MaximumRGBTolerance']);
        }
        // validate the optional field `MaximumYUV`
        if (data['MaximumYUV']) { // data not null
          Number.validateJSON(data['MaximumYUV']);
        }
        // validate the optional field `MinimumRGBTolerance`
        if (data['MinimumRGBTolerance']) { // data not null
          Number.validateJSON(data['MinimumRGBTolerance']);
        }
        // validate the optional field `MinimumYUV`
        if (data['MinimumYUV']) { // data not null
          Number.validateJSON(data['MinimumYUV']);
        }

        return true;
    }


}



/**
 * @member {Number} MaximumRGBTolerance
 */
ColorCorrectorClipLimits.prototype['MaximumRGBTolerance'] = undefined;

/**
 * @member {Number} MaximumYUV
 */
ColorCorrectorClipLimits.prototype['MaximumYUV'] = undefined;

/**
 * @member {Number} MinimumRGBTolerance
 */
ColorCorrectorClipLimits.prototype['MinimumRGBTolerance'] = undefined;

/**
 * @member {Number} MinimumYUV
 */
ColorCorrectorClipLimits.prototype['MinimumYUV'] = undefined;


// Implement ClipLimits interface:
/**
 * @member {Number} MaximumRGBTolerance
 */
ClipLimits.prototype['MaximumRGBTolerance'] = undefined;
/**
 * @member {Number} MaximumYUV
 */
ClipLimits.prototype['MaximumYUV'] = undefined;
/**
 * @member {Number} MinimumRGBTolerance
 */
ClipLimits.prototype['MinimumRGBTolerance'] = undefined;
/**
 * @member {Number} MinimumYUV
 */
ClipLimits.prototype['MinimumYUV'] = undefined;




export default ColorCorrectorClipLimits;

