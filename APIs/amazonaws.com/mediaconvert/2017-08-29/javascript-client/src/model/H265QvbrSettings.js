/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The H265QvbrSettings model module.
 * @module model/H265QvbrSettings
 * @version 2017-08-29
 */
class H265QvbrSettings {
    /**
     * Constructs a new <code>H265QvbrSettings</code>.
     * Settings for quality-defined variable bitrate encoding with the H.265 codec. Use these settings only when you set QVBR for Rate control mode.
     * @alias module:model/H265QvbrSettings
     */
    constructor() { 
        
        H265QvbrSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>H265QvbrSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/H265QvbrSettings} obj Optional instance to populate.
     * @return {module:model/H265QvbrSettings} The populated <code>H265QvbrSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new H265QvbrSettings();

            if (data.hasOwnProperty('MaxAverageBitrate')) {
                obj['MaxAverageBitrate'] = ApiClient.convertToType(data['MaxAverageBitrate'], 'Number');
            }
            if (data.hasOwnProperty('QvbrQualityLevel')) {
                obj['QvbrQualityLevel'] = ApiClient.convertToType(data['QvbrQualityLevel'], 'Number');
            }
            if (data.hasOwnProperty('QvbrQualityLevelFineTune')) {
                obj['QvbrQualityLevelFineTune'] = ApiClient.convertToType(data['QvbrQualityLevelFineTune'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>H265QvbrSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>H265QvbrSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MaxAverageBitrate`
        if (data['MaxAverageBitrate']) { // data not null
          Number.validateJSON(data['MaxAverageBitrate']);
        }
        // validate the optional field `QvbrQualityLevel`
        if (data['QvbrQualityLevel']) { // data not null
          Number.validateJSON(data['QvbrQualityLevel']);
        }
        // validate the optional field `QvbrQualityLevelFineTune`
        if (data['QvbrQualityLevelFineTune']) { // data not null
          Number.validateJSON(data['QvbrQualityLevelFineTune']);
        }

        return true;
    }


}



/**
 * @member {Number} MaxAverageBitrate
 */
H265QvbrSettings.prototype['MaxAverageBitrate'] = undefined;

/**
 * @member {Number} QvbrQualityLevel
 */
H265QvbrSettings.prototype['QvbrQualityLevel'] = undefined;

/**
 * @member {Number} QvbrQualityLevelFineTune
 */
H265QvbrSettings.prototype['QvbrQualityLevelFineTune'] = undefined;






export default H265QvbrSettings;

