/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrameCaptureSettings model module.
 * @module model/FrameCaptureSettings
 * @version 2017-08-29
 */
class FrameCaptureSettings {
    /**
     * Constructs a new <code>FrameCaptureSettings</code>.
     * Required when you set Codec to the value FRAME_CAPTURE.
     * @alias module:model/FrameCaptureSettings
     */
    constructor() { 
        
        FrameCaptureSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrameCaptureSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameCaptureSettings} obj Optional instance to populate.
     * @return {module:model/FrameCaptureSettings} The populated <code>FrameCaptureSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameCaptureSettings();

            if (data.hasOwnProperty('FramerateDenominator')) {
                obj['FramerateDenominator'] = ApiClient.convertToType(data['FramerateDenominator'], 'Number');
            }
            if (data.hasOwnProperty('FramerateNumerator')) {
                obj['FramerateNumerator'] = ApiClient.convertToType(data['FramerateNumerator'], 'Number');
            }
            if (data.hasOwnProperty('MaxCaptures')) {
                obj['MaxCaptures'] = ApiClient.convertToType(data['MaxCaptures'], 'Number');
            }
            if (data.hasOwnProperty('Quality')) {
                obj['Quality'] = ApiClient.convertToType(data['Quality'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrameCaptureSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrameCaptureSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FramerateDenominator`
        if (data['FramerateDenominator']) { // data not null
          Number.validateJSON(data['FramerateDenominator']);
        }
        // validate the optional field `FramerateNumerator`
        if (data['FramerateNumerator']) { // data not null
          Number.validateJSON(data['FramerateNumerator']);
        }
        // validate the optional field `MaxCaptures`
        if (data['MaxCaptures']) { // data not null
          Number.validateJSON(data['MaxCaptures']);
        }
        // validate the optional field `Quality`
        if (data['Quality']) { // data not null
          Number.validateJSON(data['Quality']);
        }

        return true;
    }


}



/**
 * @member {Number} FramerateDenominator
 */
FrameCaptureSettings.prototype['FramerateDenominator'] = undefined;

/**
 * @member {Number} FramerateNumerator
 */
FrameCaptureSettings.prototype['FramerateNumerator'] = undefined;

/**
 * @member {Number} MaxCaptures
 */
FrameCaptureSettings.prototype['MaxCaptures'] = undefined;

/**
 * @member {Number} Quality
 */
FrameCaptureSettings.prototype['Quality'] = undefined;






export default FrameCaptureSettings;

