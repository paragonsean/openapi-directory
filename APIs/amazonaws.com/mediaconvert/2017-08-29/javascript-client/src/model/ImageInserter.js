/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageInserter model module.
 * @module model/ImageInserter
 * @version 2017-08-29
 */
class ImageInserter {
    /**
     * Constructs a new <code>ImageInserter</code>.
     * Use the image inserter feature to include a graphic overlay on your video. Enable or disable this feature for each input or output individually. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/graphic-overlay.html. This setting is disabled by default.
     * @alias module:model/ImageInserter
     */
    constructor() { 
        
        ImageInserter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageInserter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageInserter} obj Optional instance to populate.
     * @return {module:model/ImageInserter} The populated <code>ImageInserter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageInserter();

            if (data.hasOwnProperty('InsertableImages')) {
                obj['InsertableImages'] = ApiClient.convertToType(data['InsertableImages'], Array);
            }
            if (data.hasOwnProperty('SdrReferenceWhiteLevel')) {
                obj['SdrReferenceWhiteLevel'] = ApiClient.convertToType(data['SdrReferenceWhiteLevel'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageInserter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageInserter</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InsertableImages`
        if (data['InsertableImages']) { // data not null
          Array.validateJSON(data['InsertableImages']);
        }
        // validate the optional field `SdrReferenceWhiteLevel`
        if (data['SdrReferenceWhiteLevel']) { // data not null
          Number.validateJSON(data['SdrReferenceWhiteLevel']);
        }

        return true;
    }


}



/**
 * @member {Array} InsertableImages
 */
ImageInserter.prototype['InsertableImages'] = undefined;

/**
 * @member {Number} SdrReferenceWhiteLevel
 */
ImageInserter.prototype['SdrReferenceWhiteLevel'] = undefined;






export default ImageInserter;

