/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MovClapAtom from './MovClapAtom';
import MovCslgAtom from './MovCslgAtom';
import MovMpeg2FourCCControl from './MovMpeg2FourCCControl';
import MovPaddingControl from './MovPaddingControl';
import MovReference from './MovReference';

/**
 * The MovSettings model module.
 * @module model/MovSettings
 * @version 2017-08-29
 */
class MovSettings {
    /**
     * Constructs a new <code>MovSettings</code>.
     * These settings relate to your QuickTime MOV output container.
     * @alias module:model/MovSettings
     */
    constructor() { 
        
        MovSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MovSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MovSettings} obj Optional instance to populate.
     * @return {module:model/MovSettings} The populated <code>MovSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MovSettings();

            if (data.hasOwnProperty('ClapAtom')) {
                obj['ClapAtom'] = ApiClient.convertToType(data['ClapAtom'], MovClapAtom);
            }
            if (data.hasOwnProperty('CslgAtom')) {
                obj['CslgAtom'] = ApiClient.convertToType(data['CslgAtom'], MovCslgAtom);
            }
            if (data.hasOwnProperty('Mpeg2FourCCControl')) {
                obj['Mpeg2FourCCControl'] = ApiClient.convertToType(data['Mpeg2FourCCControl'], MovMpeg2FourCCControl);
            }
            if (data.hasOwnProperty('PaddingControl')) {
                obj['PaddingControl'] = ApiClient.convertToType(data['PaddingControl'], MovPaddingControl);
            }
            if (data.hasOwnProperty('Reference')) {
                obj['Reference'] = ApiClient.convertToType(data['Reference'], MovReference);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MovSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MovSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ClapAtom`
        if (data['ClapAtom']) { // data not null
          MovClapAtom.validateJSON(data['ClapAtom']);
        }
        // validate the optional field `CslgAtom`
        if (data['CslgAtom']) { // data not null
          MovCslgAtom.validateJSON(data['CslgAtom']);
        }
        // validate the optional field `Mpeg2FourCCControl`
        if (data['Mpeg2FourCCControl']) { // data not null
          MovMpeg2FourCCControl.validateJSON(data['Mpeg2FourCCControl']);
        }
        // validate the optional field `PaddingControl`
        if (data['PaddingControl']) { // data not null
          MovPaddingControl.validateJSON(data['PaddingControl']);
        }
        // validate the optional field `Reference`
        if (data['Reference']) { // data not null
          MovReference.validateJSON(data['Reference']);
        }

        return true;
    }


}



/**
 * @member {module:model/MovClapAtom} ClapAtom
 */
MovSettings.prototype['ClapAtom'] = undefined;

/**
 * @member {module:model/MovCslgAtom} CslgAtom
 */
MovSettings.prototype['CslgAtom'] = undefined;

/**
 * @member {module:model/MovMpeg2FourCCControl} Mpeg2FourCCControl
 */
MovSettings.prototype['Mpeg2FourCCControl'] = undefined;

/**
 * @member {module:model/MovPaddingControl} PaddingControl
 */
MovSettings.prototype['PaddingControl'] = undefined;

/**
 * @member {module:model/MovReference} Reference
 */
MovSettings.prototype['Reference'] = undefined;






export default MovSettings;

