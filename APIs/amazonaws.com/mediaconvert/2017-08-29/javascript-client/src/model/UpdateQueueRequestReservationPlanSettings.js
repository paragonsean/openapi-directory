/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Commitment from './Commitment';
import RenewalType from './RenewalType';
import ReservationPlanSettings from './ReservationPlanSettings';

/**
 * The UpdateQueueRequestReservationPlanSettings model module.
 * @module model/UpdateQueueRequestReservationPlanSettings
 * @version 2017-08-29
 */
class UpdateQueueRequestReservationPlanSettings {
    /**
     * Constructs a new <code>UpdateQueueRequestReservationPlanSettings</code>.
     * @alias module:model/UpdateQueueRequestReservationPlanSettings
     * @implements module:model/ReservationPlanSettings
     * @param commitment {module:model/Commitment} 
     * @param renewalType {module:model/RenewalType} 
     * @param reservedSlots {Number} 
     */
    constructor(commitment, renewalType, reservedSlots) { 
        ReservationPlanSettings.initialize(this, commitment, renewalType, reservedSlots);
        UpdateQueueRequestReservationPlanSettings.initialize(this, commitment, renewalType, reservedSlots);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, commitment, renewalType, reservedSlots) { 
        obj['Commitment'] = commitment;
        obj['RenewalType'] = renewalType;
        obj['ReservedSlots'] = reservedSlots;
    }

    /**
     * Constructs a <code>UpdateQueueRequestReservationPlanSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateQueueRequestReservationPlanSettings} obj Optional instance to populate.
     * @return {module:model/UpdateQueueRequestReservationPlanSettings} The populated <code>UpdateQueueRequestReservationPlanSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateQueueRequestReservationPlanSettings();
            ReservationPlanSettings.constructFromObject(data, obj);

            if (data.hasOwnProperty('Commitment')) {
                obj['Commitment'] = ApiClient.convertToType(data['Commitment'], Commitment);
            }
            if (data.hasOwnProperty('RenewalType')) {
                obj['RenewalType'] = ApiClient.convertToType(data['RenewalType'], RenewalType);
            }
            if (data.hasOwnProperty('ReservedSlots')) {
                obj['ReservedSlots'] = ApiClient.convertToType(data['ReservedSlots'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateQueueRequestReservationPlanSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateQueueRequestReservationPlanSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateQueueRequestReservationPlanSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Commitment`
        if (data['Commitment']) { // data not null
          Commitment.validateJSON(data['Commitment']);
        }
        // validate the optional field `RenewalType`
        if (data['RenewalType']) { // data not null
          RenewalType.validateJSON(data['RenewalType']);
        }
        // validate the optional field `ReservedSlots`
        if (data['ReservedSlots']) { // data not null
          Number.validateJSON(data['ReservedSlots']);
        }

        return true;
    }


}

UpdateQueueRequestReservationPlanSettings.RequiredProperties = ["Commitment", "RenewalType", "ReservedSlots"];

/**
 * @member {module:model/Commitment} Commitment
 */
UpdateQueueRequestReservationPlanSettings.prototype['Commitment'] = undefined;

/**
 * @member {module:model/RenewalType} RenewalType
 */
UpdateQueueRequestReservationPlanSettings.prototype['RenewalType'] = undefined;

/**
 * @member {Number} ReservedSlots
 */
UpdateQueueRequestReservationPlanSettings.prototype['ReservedSlots'] = undefined;


// Implement ReservationPlanSettings interface:
/**
 * @member {module:model/Commitment} Commitment
 */
ReservationPlanSettings.prototype['Commitment'] = undefined;
/**
 * @member {module:model/RenewalType} RenewalType
 */
ReservationPlanSettings.prototype['RenewalType'] = undefined;
/**
 * @member {Number} ReservedSlots
 */
ReservationPlanSettings.prototype['ReservedSlots'] = undefined;




export default UpdateQueueRequestReservationPlanSettings;

