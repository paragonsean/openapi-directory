/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PricingPlan from './PricingPlan';
import Queue from './Queue';
import QueueReservationPlan from './QueueReservationPlan';
import QueueStatus from './QueueStatus';
import Type from './Type';

/**
 * The CreateQueueResponseQueue model module.
 * @module model/CreateQueueResponseQueue
 * @version 2017-08-29
 */
class CreateQueueResponseQueue {
    /**
     * Constructs a new <code>CreateQueueResponseQueue</code>.
     * @alias module:model/CreateQueueResponseQueue
     * @implements module:model/Queue
     * @param name {String} 
     */
    constructor(name) { 
        Queue.initialize(this, name);
        CreateQueueResponseQueue.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>CreateQueueResponseQueue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateQueueResponseQueue} obj Optional instance to populate.
     * @return {module:model/CreateQueueResponseQueue} The populated <code>CreateQueueResponseQueue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateQueueResponseQueue();
            Queue.constructFromObject(data, obj);

            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LastUpdated')) {
                obj['LastUpdated'] = ApiClient.convertToType(data['LastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PricingPlan')) {
                obj['PricingPlan'] = ApiClient.convertToType(data['PricingPlan'], PricingPlan);
            }
            if (data.hasOwnProperty('ProgressingJobsCount')) {
                obj['ProgressingJobsCount'] = ApiClient.convertToType(data['ProgressingJobsCount'], 'Number');
            }
            if (data.hasOwnProperty('ReservationPlan')) {
                obj['ReservationPlan'] = QueueReservationPlan.constructFromObject(data['ReservationPlan']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], QueueStatus);
            }
            if (data.hasOwnProperty('SubmittedJobsCount')) {
                obj['SubmittedJobsCount'] = ApiClient.convertToType(data['SubmittedJobsCount'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], Type);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateQueueResponseQueue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateQueueResponseQueue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateQueueResponseQueue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `LastUpdated`
        if (data['LastUpdated']) { // data not null
          Date.validateJSON(data['LastUpdated']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `PricingPlan`
        if (data['PricingPlan']) { // data not null
          PricingPlan.validateJSON(data['PricingPlan']);
        }
        // validate the optional field `ProgressingJobsCount`
        if (data['ProgressingJobsCount']) { // data not null
          Number.validateJSON(data['ProgressingJobsCount']);
        }
        // validate the optional field `ReservationPlan`
        if (data['ReservationPlan']) { // data not null
          QueueReservationPlan.validateJSON(data['ReservationPlan']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          QueueStatus.validateJSON(data['Status']);
        }
        // validate the optional field `SubmittedJobsCount`
        if (data['SubmittedJobsCount']) { // data not null
          Number.validateJSON(data['SubmittedJobsCount']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          Type.validateJSON(data['Type']);
        }

        return true;
    }


}

CreateQueueResponseQueue.RequiredProperties = ["Name"];

/**
 * @member {String} Arn
 */
CreateQueueResponseQueue.prototype['Arn'] = undefined;

/**
 * @member {Date} CreatedAt
 */
CreateQueueResponseQueue.prototype['CreatedAt'] = undefined;

/**
 * @member {String} Description
 */
CreateQueueResponseQueue.prototype['Description'] = undefined;

/**
 * @member {Date} LastUpdated
 */
CreateQueueResponseQueue.prototype['LastUpdated'] = undefined;

/**
 * @member {String} Name
 */
CreateQueueResponseQueue.prototype['Name'] = undefined;

/**
 * @member {module:model/PricingPlan} PricingPlan
 */
CreateQueueResponseQueue.prototype['PricingPlan'] = undefined;

/**
 * @member {Number} ProgressingJobsCount
 */
CreateQueueResponseQueue.prototype['ProgressingJobsCount'] = undefined;

/**
 * @member {module:model/QueueReservationPlan} ReservationPlan
 */
CreateQueueResponseQueue.prototype['ReservationPlan'] = undefined;

/**
 * @member {module:model/QueueStatus} Status
 */
CreateQueueResponseQueue.prototype['Status'] = undefined;

/**
 * @member {Number} SubmittedJobsCount
 */
CreateQueueResponseQueue.prototype['SubmittedJobsCount'] = undefined;

/**
 * @member {module:model/Type} Type
 */
CreateQueueResponseQueue.prototype['Type'] = undefined;


// Implement Queue interface:
/**
 * @member {String} Arn
 */
Queue.prototype['Arn'] = undefined;
/**
 * @member {Date} CreatedAt
 */
Queue.prototype['CreatedAt'] = undefined;
/**
 * @member {String} Description
 */
Queue.prototype['Description'] = undefined;
/**
 * @member {Date} LastUpdated
 */
Queue.prototype['LastUpdated'] = undefined;
/**
 * @member {String} Name
 */
Queue.prototype['Name'] = undefined;
/**
 * @member {module:model/PricingPlan} PricingPlan
 */
Queue.prototype['PricingPlan'] = undefined;
/**
 * @member {Number} ProgressingJobsCount
 */
Queue.prototype['ProgressingJobsCount'] = undefined;
/**
 * @member {module:model/QueueReservationPlan} ReservationPlan
 */
Queue.prototype['ReservationPlan'] = undefined;
/**
 * @member {module:model/QueueStatus} Status
 */
Queue.prototype['Status'] = undefined;
/**
 * @member {Number} SubmittedJobsCount
 */
Queue.prototype['SubmittedJobsCount'] = undefined;
/**
 * @member {module:model/Type} Type
 */
Queue.prototype['Type'] = undefined;




export default CreateQueueResponseQueue;

