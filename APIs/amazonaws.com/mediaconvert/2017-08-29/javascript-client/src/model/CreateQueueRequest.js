/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateQueueRequestReservationPlanSettings from './CreateQueueRequestReservationPlanSettings';

/**
 * The CreateQueueRequest model module.
 * @module model/CreateQueueRequest
 * @version 2017-08-29
 */
class CreateQueueRequest {
    /**
     * Constructs a new <code>CreateQueueRequest</code>.
     * @alias module:model/CreateQueueRequest
     * @param name {String} The name of the queue that you are creating.
     */
    constructor(name) { 
        
        CreateQueueRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateQueueRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateQueueRequest} obj Optional instance to populate.
     * @return {module:model/CreateQueueRequest} The populated <code>CreateQueueRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateQueueRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pricingPlan')) {
                obj['pricingPlan'] = ApiClient.convertToType(data['pricingPlan'], 'String');
            }
            if (data.hasOwnProperty('reservationPlanSettings')) {
                obj['reservationPlanSettings'] = CreateQueueRequestReservationPlanSettings.constructFromObject(data['reservationPlanSettings']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateQueueRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateQueueRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateQueueRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pricingPlan'] && !(typeof data['pricingPlan'] === 'string' || data['pricingPlan'] instanceof String)) {
            throw new Error("Expected the field `pricingPlan` to be a primitive type in the JSON string but got " + data['pricingPlan']);
        }
        // validate the optional field `reservationPlanSettings`
        if (data['reservationPlanSettings']) { // data not null
          CreateQueueRequestReservationPlanSettings.validateJSON(data['reservationPlanSettings']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

CreateQueueRequest.RequiredProperties = ["name"];

/**
 * Optional. A description of the queue that you are creating.
 * @member {String} description
 */
CreateQueueRequest.prototype['description'] = undefined;

/**
 * The name of the queue that you are creating.
 * @member {String} name
 */
CreateQueueRequest.prototype['name'] = undefined;

/**
 * Specifies whether the pricing plan for the queue is on-demand or reserved. For on-demand, you pay per minute, billed in increments of .01 minute. For reserved, you pay for the transcoding capacity of the entire queue, regardless of how much or how little you use it. Reserved pricing requires a 12-month commitment.
 * @member {module:model/CreateQueueRequest.PricingPlanEnum} pricingPlan
 */
CreateQueueRequest.prototype['pricingPlan'] = undefined;

/**
 * @member {module:model/CreateQueueRequestReservationPlanSettings} reservationPlanSettings
 */
CreateQueueRequest.prototype['reservationPlanSettings'] = undefined;

/**
 * Queues can be ACTIVE or PAUSED. If you pause a queue, jobs in that queue won't begin. Jobs that are running when you pause a queue continue to run until they finish or result in an error.
 * @member {module:model/CreateQueueRequest.StatusEnum} status
 */
CreateQueueRequest.prototype['status'] = undefined;

/**
 * The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.
 * @member {Object.<String, String>} tags
 */
CreateQueueRequest.prototype['tags'] = undefined;





/**
 * Allowed values for the <code>pricingPlan</code> property.
 * @enum {String}
 * @readonly
 */
CreateQueueRequest['PricingPlanEnum'] = {

    /**
     * value: "ON_DEMAND"
     * @const
     */
    "ON_DEMAND": "ON_DEMAND",

    /**
     * value: "RESERVED"
     * @const
     */
    "RESERVED": "RESERVED"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CreateQueueRequest['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "PAUSED"
     * @const
     */
    "PAUSED": "PAUSED"
};



export default CreateQueueRequest;

