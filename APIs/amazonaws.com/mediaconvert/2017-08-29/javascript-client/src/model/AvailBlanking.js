/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailBlanking model module.
 * @module model/AvailBlanking
 * @version 2017-08-29
 */
class AvailBlanking {
    /**
     * Constructs a new <code>AvailBlanking</code>.
     * Use ad avail blanking settings to specify your output content during SCTE-35 triggered ad avails. You can blank your video or overlay it with an image. MediaConvert also removes any audio and embedded captions during the ad avail. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ad-avail-blanking.html.
     * @alias module:model/AvailBlanking
     */
    constructor() { 
        
        AvailBlanking.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvailBlanking</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvailBlanking} obj Optional instance to populate.
     * @return {module:model/AvailBlanking} The populated <code>AvailBlanking</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailBlanking();

            if (data.hasOwnProperty('AvailBlankingImage')) {
                obj['AvailBlankingImage'] = ApiClient.convertToType(data['AvailBlankingImage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailBlanking</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailBlanking</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AvailBlankingImage`
        if (data['AvailBlankingImage']) { // data not null
          String.validateJSON(data['AvailBlankingImage']);
        }

        return true;
    }


}



/**
 * @member {String} AvailBlankingImage
 */
AvailBlanking.prototype['AvailBlankingImage'] = undefined;






export default AvailBlanking;

