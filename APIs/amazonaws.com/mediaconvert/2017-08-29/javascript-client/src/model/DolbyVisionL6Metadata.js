/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DolbyVisionLevel6Metadata from './DolbyVisionLevel6Metadata';

/**
 * The DolbyVisionL6Metadata model module.
 * @module model/DolbyVisionL6Metadata
 * @version 2017-08-29
 */
class DolbyVisionL6Metadata {
    /**
     * Constructs a new <code>DolbyVisionL6Metadata</code>.
     * @alias module:model/DolbyVisionL6Metadata
     * @implements module:model/DolbyVisionLevel6Metadata
     */
    constructor() { 
        DolbyVisionLevel6Metadata.initialize(this);
        DolbyVisionL6Metadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DolbyVisionL6Metadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DolbyVisionL6Metadata} obj Optional instance to populate.
     * @return {module:model/DolbyVisionL6Metadata} The populated <code>DolbyVisionL6Metadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DolbyVisionL6Metadata();
            DolbyVisionLevel6Metadata.constructFromObject(data, obj);

            if (data.hasOwnProperty('MaxCll')) {
                obj['MaxCll'] = ApiClient.convertToType(data['MaxCll'], 'Number');
            }
            if (data.hasOwnProperty('MaxFall')) {
                obj['MaxFall'] = ApiClient.convertToType(data['MaxFall'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DolbyVisionL6Metadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DolbyVisionL6Metadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MaxCll`
        if (data['MaxCll']) { // data not null
          Number.validateJSON(data['MaxCll']);
        }
        // validate the optional field `MaxFall`
        if (data['MaxFall']) { // data not null
          Number.validateJSON(data['MaxFall']);
        }

        return true;
    }


}



/**
 * @member {Number} MaxCll
 */
DolbyVisionL6Metadata.prototype['MaxCll'] = undefined;

/**
 * @member {Number} MaxFall
 */
DolbyVisionL6Metadata.prototype['MaxFall'] = undefined;


// Implement DolbyVisionLevel6Metadata interface:
/**
 * @member {Number} MaxCll
 */
DolbyVisionLevel6Metadata.prototype['MaxCll'] = undefined;
/**
 * @member {Number} MaxFall
 */
DolbyVisionLevel6Metadata.prototype['MaxFall'] = undefined;




export default DolbyVisionL6Metadata;

