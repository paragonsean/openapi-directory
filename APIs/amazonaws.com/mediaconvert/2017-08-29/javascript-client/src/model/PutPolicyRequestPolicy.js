/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputPolicy from './InputPolicy';

/**
 * The PutPolicyRequestPolicy model module.
 * @module model/PutPolicyRequestPolicy
 * @version 2017-08-29
 */
class PutPolicyRequestPolicy {
    /**
     * Constructs a new <code>PutPolicyRequestPolicy</code>.
     * A policy configures behavior that you allow or disallow for your account. For information about MediaConvert policies, see the user guide at http://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html
     * @alias module:model/PutPolicyRequestPolicy
     */
    constructor() { 
        
        PutPolicyRequestPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutPolicyRequestPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutPolicyRequestPolicy} obj Optional instance to populate.
     * @return {module:model/PutPolicyRequestPolicy} The populated <code>PutPolicyRequestPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutPolicyRequestPolicy();

            if (data.hasOwnProperty('HttpInputs')) {
                obj['HttpInputs'] = ApiClient.convertToType(data['HttpInputs'], InputPolicy);
            }
            if (data.hasOwnProperty('HttpsInputs')) {
                obj['HttpsInputs'] = ApiClient.convertToType(data['HttpsInputs'], InputPolicy);
            }
            if (data.hasOwnProperty('S3Inputs')) {
                obj['S3Inputs'] = ApiClient.convertToType(data['S3Inputs'], InputPolicy);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutPolicyRequestPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutPolicyRequestPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `HttpInputs`
        if (data['HttpInputs']) { // data not null
          InputPolicy.validateJSON(data['HttpInputs']);
        }
        // validate the optional field `HttpsInputs`
        if (data['HttpsInputs']) { // data not null
          InputPolicy.validateJSON(data['HttpsInputs']);
        }
        // validate the optional field `S3Inputs`
        if (data['S3Inputs']) { // data not null
          InputPolicy.validateJSON(data['S3Inputs']);
        }

        return true;
    }


}



/**
 * @member {module:model/InputPolicy} HttpInputs
 */
PutPolicyRequestPolicy.prototype['HttpInputs'] = undefined;

/**
 * @member {module:model/InputPolicy} HttpsInputs
 */
PutPolicyRequestPolicy.prototype['HttpsInputs'] = undefined;

/**
 * @member {module:model/InputPolicy} S3Inputs
 */
PutPolicyRequestPolicy.prototype['S3Inputs'] = undefined;






export default PutPolicyRequestPolicy;

