/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProresChromaSampling from './ProresChromaSampling';
import ProresCodecProfile from './ProresCodecProfile';
import ProresFramerateControl from './ProresFramerateControl';
import ProresFramerateConversionAlgorithm from './ProresFramerateConversionAlgorithm';
import ProresInterlaceMode from './ProresInterlaceMode';
import ProresParControl from './ProresParControl';
import ProresScanTypeConversionMode from './ProresScanTypeConversionMode';
import ProresSlowPal from './ProresSlowPal';
import ProresTelecine from './ProresTelecine';

/**
 * The ProresSettings model module.
 * @module model/ProresSettings
 * @version 2017-08-29
 */
class ProresSettings {
    /**
     * Constructs a new <code>ProresSettings</code>.
     * Required when you set Codec to the value PRORES.
     * @alias module:model/ProresSettings
     */
    constructor() { 
        
        ProresSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProresSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProresSettings} obj Optional instance to populate.
     * @return {module:model/ProresSettings} The populated <code>ProresSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProresSettings();

            if (data.hasOwnProperty('ChromaSampling')) {
                obj['ChromaSampling'] = ApiClient.convertToType(data['ChromaSampling'], ProresChromaSampling);
            }
            if (data.hasOwnProperty('CodecProfile')) {
                obj['CodecProfile'] = ApiClient.convertToType(data['CodecProfile'], ProresCodecProfile);
            }
            if (data.hasOwnProperty('FramerateControl')) {
                obj['FramerateControl'] = ApiClient.convertToType(data['FramerateControl'], ProresFramerateControl);
            }
            if (data.hasOwnProperty('FramerateConversionAlgorithm')) {
                obj['FramerateConversionAlgorithm'] = ApiClient.convertToType(data['FramerateConversionAlgorithm'], ProresFramerateConversionAlgorithm);
            }
            if (data.hasOwnProperty('FramerateDenominator')) {
                obj['FramerateDenominator'] = ApiClient.convertToType(data['FramerateDenominator'], 'Number');
            }
            if (data.hasOwnProperty('FramerateNumerator')) {
                obj['FramerateNumerator'] = ApiClient.convertToType(data['FramerateNumerator'], 'Number');
            }
            if (data.hasOwnProperty('InterlaceMode')) {
                obj['InterlaceMode'] = ApiClient.convertToType(data['InterlaceMode'], ProresInterlaceMode);
            }
            if (data.hasOwnProperty('ParControl')) {
                obj['ParControl'] = ApiClient.convertToType(data['ParControl'], ProresParControl);
            }
            if (data.hasOwnProperty('ParDenominator')) {
                obj['ParDenominator'] = ApiClient.convertToType(data['ParDenominator'], 'Number');
            }
            if (data.hasOwnProperty('ParNumerator')) {
                obj['ParNumerator'] = ApiClient.convertToType(data['ParNumerator'], 'Number');
            }
            if (data.hasOwnProperty('ScanTypeConversionMode')) {
                obj['ScanTypeConversionMode'] = ApiClient.convertToType(data['ScanTypeConversionMode'], ProresScanTypeConversionMode);
            }
            if (data.hasOwnProperty('SlowPal')) {
                obj['SlowPal'] = ApiClient.convertToType(data['SlowPal'], ProresSlowPal);
            }
            if (data.hasOwnProperty('Telecine')) {
                obj['Telecine'] = ApiClient.convertToType(data['Telecine'], ProresTelecine);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProresSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProresSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ChromaSampling`
        if (data['ChromaSampling']) { // data not null
          ProresChromaSampling.validateJSON(data['ChromaSampling']);
        }
        // validate the optional field `CodecProfile`
        if (data['CodecProfile']) { // data not null
          ProresCodecProfile.validateJSON(data['CodecProfile']);
        }
        // validate the optional field `FramerateControl`
        if (data['FramerateControl']) { // data not null
          ProresFramerateControl.validateJSON(data['FramerateControl']);
        }
        // validate the optional field `FramerateConversionAlgorithm`
        if (data['FramerateConversionAlgorithm']) { // data not null
          ProresFramerateConversionAlgorithm.validateJSON(data['FramerateConversionAlgorithm']);
        }
        // validate the optional field `FramerateDenominator`
        if (data['FramerateDenominator']) { // data not null
          Number.validateJSON(data['FramerateDenominator']);
        }
        // validate the optional field `FramerateNumerator`
        if (data['FramerateNumerator']) { // data not null
          Number.validateJSON(data['FramerateNumerator']);
        }
        // validate the optional field `InterlaceMode`
        if (data['InterlaceMode']) { // data not null
          ProresInterlaceMode.validateJSON(data['InterlaceMode']);
        }
        // validate the optional field `ParControl`
        if (data['ParControl']) { // data not null
          ProresParControl.validateJSON(data['ParControl']);
        }
        // validate the optional field `ParDenominator`
        if (data['ParDenominator']) { // data not null
          Number.validateJSON(data['ParDenominator']);
        }
        // validate the optional field `ParNumerator`
        if (data['ParNumerator']) { // data not null
          Number.validateJSON(data['ParNumerator']);
        }
        // validate the optional field `ScanTypeConversionMode`
        if (data['ScanTypeConversionMode']) { // data not null
          ProresScanTypeConversionMode.validateJSON(data['ScanTypeConversionMode']);
        }
        // validate the optional field `SlowPal`
        if (data['SlowPal']) { // data not null
          ProresSlowPal.validateJSON(data['SlowPal']);
        }
        // validate the optional field `Telecine`
        if (data['Telecine']) { // data not null
          ProresTelecine.validateJSON(data['Telecine']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProresChromaSampling} ChromaSampling
 */
ProresSettings.prototype['ChromaSampling'] = undefined;

/**
 * @member {module:model/ProresCodecProfile} CodecProfile
 */
ProresSettings.prototype['CodecProfile'] = undefined;

/**
 * @member {module:model/ProresFramerateControl} FramerateControl
 */
ProresSettings.prototype['FramerateControl'] = undefined;

/**
 * @member {module:model/ProresFramerateConversionAlgorithm} FramerateConversionAlgorithm
 */
ProresSettings.prototype['FramerateConversionAlgorithm'] = undefined;

/**
 * @member {Number} FramerateDenominator
 */
ProresSettings.prototype['FramerateDenominator'] = undefined;

/**
 * @member {Number} FramerateNumerator
 */
ProresSettings.prototype['FramerateNumerator'] = undefined;

/**
 * @member {module:model/ProresInterlaceMode} InterlaceMode
 */
ProresSettings.prototype['InterlaceMode'] = undefined;

/**
 * @member {module:model/ProresParControl} ParControl
 */
ProresSettings.prototype['ParControl'] = undefined;

/**
 * @member {Number} ParDenominator
 */
ProresSettings.prototype['ParDenominator'] = undefined;

/**
 * @member {Number} ParNumerator
 */
ProresSettings.prototype['ParNumerator'] = undefined;

/**
 * @member {module:model/ProresScanTypeConversionMode} ScanTypeConversionMode
 */
ProresSettings.prototype['ScanTypeConversionMode'] = undefined;

/**
 * @member {module:model/ProresSlowPal} SlowPal
 */
ProresSettings.prototype['SlowPal'] = undefined;

/**
 * @member {module:model/ProresTelecine} Telecine
 */
ProresSettings.prototype['Telecine'] = undefined;






export default ProresSettings;

