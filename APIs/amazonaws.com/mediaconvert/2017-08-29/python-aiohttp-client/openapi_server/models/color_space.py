# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ColorSpace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    FOLLOW = 'FOLLOW'
    REC_601 = 'REC_601'
    REC_709 = 'REC_709'
    HDR10 = 'HDR10'
    HLG_2020 = 'HLG_2020'
    P3DCI = 'P3DCI'
    P3_D65_SDR = 'P3D65_SDR'
    P3_D65_HDR = 'P3D65_HDR'

    def __init__(self):
        """ColorSpace - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColorSpace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColorSpace of this ColorSpace.
        """
        return util.deserialize_model(dikt, cls)
