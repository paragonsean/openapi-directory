# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.m3u8_audio_duration import M3u8AudioDuration
from openapi_server.models.m3u8_data_pts_control import M3u8DataPtsControl
from openapi_server.models.m3u8_nielsen_id3 import M3u8NielsenId3
from openapi_server.models.m3u8_pcr_control import M3u8PcrControl
from openapi_server.models.m3u8_scte35_source import M3u8Scte35Source
from openapi_server.models.timed_metadata import TimedMetadata
from openapi_server import util


class ContainerSettingsM3u8Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_duration: M3u8AudioDuration=None, audio_frames_per_pes: int=None, audio_pids: List=None, data_pts_control: M3u8DataPtsControl=None, max_pcr_interval: int=None, nielsen_id3: M3u8NielsenId3=None, pat_interval: int=None, pcr_control: M3u8PcrControl=None, pcr_pid: int=None, pmt_interval: int=None, pmt_pid: int=None, private_metadata_pid: int=None, program_number: int=None, scte35_pid: int=None, scte35_source: M3u8Scte35Source=None, timed_metadata: TimedMetadata=None, timed_metadata_pid: int=None, transport_stream_id: int=None, video_pid: int=None):
        """ContainerSettingsM3u8Settings - a model defined in OpenAPI

        :param audio_duration: The audio_duration of this ContainerSettingsM3u8Settings.
        :param audio_frames_per_pes: The audio_frames_per_pes of this ContainerSettingsM3u8Settings.
        :param audio_pids: The audio_pids of this ContainerSettingsM3u8Settings.
        :param data_pts_control: The data_pts_control of this ContainerSettingsM3u8Settings.
        :param max_pcr_interval: The max_pcr_interval of this ContainerSettingsM3u8Settings.
        :param nielsen_id3: The nielsen_id3 of this ContainerSettingsM3u8Settings.
        :param pat_interval: The pat_interval of this ContainerSettingsM3u8Settings.
        :param pcr_control: The pcr_control of this ContainerSettingsM3u8Settings.
        :param pcr_pid: The pcr_pid of this ContainerSettingsM3u8Settings.
        :param pmt_interval: The pmt_interval of this ContainerSettingsM3u8Settings.
        :param pmt_pid: The pmt_pid of this ContainerSettingsM3u8Settings.
        :param private_metadata_pid: The private_metadata_pid of this ContainerSettingsM3u8Settings.
        :param program_number: The program_number of this ContainerSettingsM3u8Settings.
        :param scte35_pid: The scte35_pid of this ContainerSettingsM3u8Settings.
        :param scte35_source: The scte35_source of this ContainerSettingsM3u8Settings.
        :param timed_metadata: The timed_metadata of this ContainerSettingsM3u8Settings.
        :param timed_metadata_pid: The timed_metadata_pid of this ContainerSettingsM3u8Settings.
        :param transport_stream_id: The transport_stream_id of this ContainerSettingsM3u8Settings.
        :param video_pid: The video_pid of this ContainerSettingsM3u8Settings.
        """
        self.openapi_types = {
            'audio_duration': M3u8AudioDuration,
            'audio_frames_per_pes': int,
            'audio_pids': List,
            'data_pts_control': M3u8DataPtsControl,
            'max_pcr_interval': int,
            'nielsen_id3': M3u8NielsenId3,
            'pat_interval': int,
            'pcr_control': M3u8PcrControl,
            'pcr_pid': int,
            'pmt_interval': int,
            'pmt_pid': int,
            'private_metadata_pid': int,
            'program_number': int,
            'scte35_pid': int,
            'scte35_source': M3u8Scte35Source,
            'timed_metadata': TimedMetadata,
            'timed_metadata_pid': int,
            'transport_stream_id': int,
            'video_pid': int
        }

        self.attribute_map = {
            'audio_duration': 'AudioDuration',
            'audio_frames_per_pes': 'AudioFramesPerPes',
            'audio_pids': 'AudioPids',
            'data_pts_control': 'DataPTSControl',
            'max_pcr_interval': 'MaxPcrInterval',
            'nielsen_id3': 'NielsenId3',
            'pat_interval': 'PatInterval',
            'pcr_control': 'PcrControl',
            'pcr_pid': 'PcrPid',
            'pmt_interval': 'PmtInterval',
            'pmt_pid': 'PmtPid',
            'private_metadata_pid': 'PrivateMetadataPid',
            'program_number': 'ProgramNumber',
            'scte35_pid': 'Scte35Pid',
            'scte35_source': 'Scte35Source',
            'timed_metadata': 'TimedMetadata',
            'timed_metadata_pid': 'TimedMetadataPid',
            'transport_stream_id': 'TransportStreamId',
            'video_pid': 'VideoPid'
        }

        self._audio_duration = audio_duration
        self._audio_frames_per_pes = audio_frames_per_pes
        self._audio_pids = audio_pids
        self._data_pts_control = data_pts_control
        self._max_pcr_interval = max_pcr_interval
        self._nielsen_id3 = nielsen_id3
        self._pat_interval = pat_interval
        self._pcr_control = pcr_control
        self._pcr_pid = pcr_pid
        self._pmt_interval = pmt_interval
        self._pmt_pid = pmt_pid
        self._private_metadata_pid = private_metadata_pid
        self._program_number = program_number
        self._scte35_pid = scte35_pid
        self._scte35_source = scte35_source
        self._timed_metadata = timed_metadata
        self._timed_metadata_pid = timed_metadata_pid
        self._transport_stream_id = transport_stream_id
        self._video_pid = video_pid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerSettingsM3u8Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerSettings_M3u8Settings of this ContainerSettingsM3u8Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_duration(self):
        """Gets the audio_duration of this ContainerSettingsM3u8Settings.


        :return: The audio_duration of this ContainerSettingsM3u8Settings.
        :rtype: M3u8AudioDuration
        """
        return self._audio_duration

    @audio_duration.setter
    def audio_duration(self, audio_duration):
        """Sets the audio_duration of this ContainerSettingsM3u8Settings.


        :param audio_duration: The audio_duration of this ContainerSettingsM3u8Settings.
        :type audio_duration: M3u8AudioDuration
        """

        self._audio_duration = audio_duration

    @property
    def audio_frames_per_pes(self):
        """Gets the audio_frames_per_pes of this ContainerSettingsM3u8Settings.


        :return: The audio_frames_per_pes of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._audio_frames_per_pes

    @audio_frames_per_pes.setter
    def audio_frames_per_pes(self, audio_frames_per_pes):
        """Sets the audio_frames_per_pes of this ContainerSettingsM3u8Settings.


        :param audio_frames_per_pes: The audio_frames_per_pes of this ContainerSettingsM3u8Settings.
        :type audio_frames_per_pes: int
        """

        self._audio_frames_per_pes = audio_frames_per_pes

    @property
    def audio_pids(self):
        """Gets the audio_pids of this ContainerSettingsM3u8Settings.


        :return: The audio_pids of this ContainerSettingsM3u8Settings.
        :rtype: List
        """
        return self._audio_pids

    @audio_pids.setter
    def audio_pids(self, audio_pids):
        """Sets the audio_pids of this ContainerSettingsM3u8Settings.


        :param audio_pids: The audio_pids of this ContainerSettingsM3u8Settings.
        :type audio_pids: List
        """

        self._audio_pids = audio_pids

    @property
    def data_pts_control(self):
        """Gets the data_pts_control of this ContainerSettingsM3u8Settings.


        :return: The data_pts_control of this ContainerSettingsM3u8Settings.
        :rtype: M3u8DataPtsControl
        """
        return self._data_pts_control

    @data_pts_control.setter
    def data_pts_control(self, data_pts_control):
        """Sets the data_pts_control of this ContainerSettingsM3u8Settings.


        :param data_pts_control: The data_pts_control of this ContainerSettingsM3u8Settings.
        :type data_pts_control: M3u8DataPtsControl
        """

        self._data_pts_control = data_pts_control

    @property
    def max_pcr_interval(self):
        """Gets the max_pcr_interval of this ContainerSettingsM3u8Settings.


        :return: The max_pcr_interval of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._max_pcr_interval

    @max_pcr_interval.setter
    def max_pcr_interval(self, max_pcr_interval):
        """Sets the max_pcr_interval of this ContainerSettingsM3u8Settings.


        :param max_pcr_interval: The max_pcr_interval of this ContainerSettingsM3u8Settings.
        :type max_pcr_interval: int
        """

        self._max_pcr_interval = max_pcr_interval

    @property
    def nielsen_id3(self):
        """Gets the nielsen_id3 of this ContainerSettingsM3u8Settings.


        :return: The nielsen_id3 of this ContainerSettingsM3u8Settings.
        :rtype: M3u8NielsenId3
        """
        return self._nielsen_id3

    @nielsen_id3.setter
    def nielsen_id3(self, nielsen_id3):
        """Sets the nielsen_id3 of this ContainerSettingsM3u8Settings.


        :param nielsen_id3: The nielsen_id3 of this ContainerSettingsM3u8Settings.
        :type nielsen_id3: M3u8NielsenId3
        """

        self._nielsen_id3 = nielsen_id3

    @property
    def pat_interval(self):
        """Gets the pat_interval of this ContainerSettingsM3u8Settings.


        :return: The pat_interval of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._pat_interval

    @pat_interval.setter
    def pat_interval(self, pat_interval):
        """Sets the pat_interval of this ContainerSettingsM3u8Settings.


        :param pat_interval: The pat_interval of this ContainerSettingsM3u8Settings.
        :type pat_interval: int
        """

        self._pat_interval = pat_interval

    @property
    def pcr_control(self):
        """Gets the pcr_control of this ContainerSettingsM3u8Settings.


        :return: The pcr_control of this ContainerSettingsM3u8Settings.
        :rtype: M3u8PcrControl
        """
        return self._pcr_control

    @pcr_control.setter
    def pcr_control(self, pcr_control):
        """Sets the pcr_control of this ContainerSettingsM3u8Settings.


        :param pcr_control: The pcr_control of this ContainerSettingsM3u8Settings.
        :type pcr_control: M3u8PcrControl
        """

        self._pcr_control = pcr_control

    @property
    def pcr_pid(self):
        """Gets the pcr_pid of this ContainerSettingsM3u8Settings.


        :return: The pcr_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._pcr_pid

    @pcr_pid.setter
    def pcr_pid(self, pcr_pid):
        """Sets the pcr_pid of this ContainerSettingsM3u8Settings.


        :param pcr_pid: The pcr_pid of this ContainerSettingsM3u8Settings.
        :type pcr_pid: int
        """

        self._pcr_pid = pcr_pid

    @property
    def pmt_interval(self):
        """Gets the pmt_interval of this ContainerSettingsM3u8Settings.


        :return: The pmt_interval of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._pmt_interval

    @pmt_interval.setter
    def pmt_interval(self, pmt_interval):
        """Sets the pmt_interval of this ContainerSettingsM3u8Settings.


        :param pmt_interval: The pmt_interval of this ContainerSettingsM3u8Settings.
        :type pmt_interval: int
        """

        self._pmt_interval = pmt_interval

    @property
    def pmt_pid(self):
        """Gets the pmt_pid of this ContainerSettingsM3u8Settings.


        :return: The pmt_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._pmt_pid

    @pmt_pid.setter
    def pmt_pid(self, pmt_pid):
        """Sets the pmt_pid of this ContainerSettingsM3u8Settings.


        :param pmt_pid: The pmt_pid of this ContainerSettingsM3u8Settings.
        :type pmt_pid: int
        """

        self._pmt_pid = pmt_pid

    @property
    def private_metadata_pid(self):
        """Gets the private_metadata_pid of this ContainerSettingsM3u8Settings.


        :return: The private_metadata_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._private_metadata_pid

    @private_metadata_pid.setter
    def private_metadata_pid(self, private_metadata_pid):
        """Sets the private_metadata_pid of this ContainerSettingsM3u8Settings.


        :param private_metadata_pid: The private_metadata_pid of this ContainerSettingsM3u8Settings.
        :type private_metadata_pid: int
        """

        self._private_metadata_pid = private_metadata_pid

    @property
    def program_number(self):
        """Gets the program_number of this ContainerSettingsM3u8Settings.


        :return: The program_number of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._program_number

    @program_number.setter
    def program_number(self, program_number):
        """Sets the program_number of this ContainerSettingsM3u8Settings.


        :param program_number: The program_number of this ContainerSettingsM3u8Settings.
        :type program_number: int
        """

        self._program_number = program_number

    @property
    def scte35_pid(self):
        """Gets the scte35_pid of this ContainerSettingsM3u8Settings.


        :return: The scte35_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._scte35_pid

    @scte35_pid.setter
    def scte35_pid(self, scte35_pid):
        """Sets the scte35_pid of this ContainerSettingsM3u8Settings.


        :param scte35_pid: The scte35_pid of this ContainerSettingsM3u8Settings.
        :type scte35_pid: int
        """

        self._scte35_pid = scte35_pid

    @property
    def scte35_source(self):
        """Gets the scte35_source of this ContainerSettingsM3u8Settings.


        :return: The scte35_source of this ContainerSettingsM3u8Settings.
        :rtype: M3u8Scte35Source
        """
        return self._scte35_source

    @scte35_source.setter
    def scte35_source(self, scte35_source):
        """Sets the scte35_source of this ContainerSettingsM3u8Settings.


        :param scte35_source: The scte35_source of this ContainerSettingsM3u8Settings.
        :type scte35_source: M3u8Scte35Source
        """

        self._scte35_source = scte35_source

    @property
    def timed_metadata(self):
        """Gets the timed_metadata of this ContainerSettingsM3u8Settings.


        :return: The timed_metadata of this ContainerSettingsM3u8Settings.
        :rtype: TimedMetadata
        """
        return self._timed_metadata

    @timed_metadata.setter
    def timed_metadata(self, timed_metadata):
        """Sets the timed_metadata of this ContainerSettingsM3u8Settings.


        :param timed_metadata: The timed_metadata of this ContainerSettingsM3u8Settings.
        :type timed_metadata: TimedMetadata
        """

        self._timed_metadata = timed_metadata

    @property
    def timed_metadata_pid(self):
        """Gets the timed_metadata_pid of this ContainerSettingsM3u8Settings.


        :return: The timed_metadata_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._timed_metadata_pid

    @timed_metadata_pid.setter
    def timed_metadata_pid(self, timed_metadata_pid):
        """Sets the timed_metadata_pid of this ContainerSettingsM3u8Settings.


        :param timed_metadata_pid: The timed_metadata_pid of this ContainerSettingsM3u8Settings.
        :type timed_metadata_pid: int
        """

        self._timed_metadata_pid = timed_metadata_pid

    @property
    def transport_stream_id(self):
        """Gets the transport_stream_id of this ContainerSettingsM3u8Settings.


        :return: The transport_stream_id of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._transport_stream_id

    @transport_stream_id.setter
    def transport_stream_id(self, transport_stream_id):
        """Sets the transport_stream_id of this ContainerSettingsM3u8Settings.


        :param transport_stream_id: The transport_stream_id of this ContainerSettingsM3u8Settings.
        :type transport_stream_id: int
        """

        self._transport_stream_id = transport_stream_id

    @property
    def video_pid(self):
        """Gets the video_pid of this ContainerSettingsM3u8Settings.


        :return: The video_pid of this ContainerSettingsM3u8Settings.
        :rtype: int
        """
        return self._video_pid

    @video_pid.setter
    def video_pid(self, video_pid):
        """Sets the video_pid of this ContainerSettingsM3u8Settings.


        :param video_pid: The video_pid of this ContainerSettingsM3u8Settings.
        :type video_pid: int
        """

        self._video_pid = video_pid
