# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hls_audio_only_container import HlsAudioOnlyContainer
from openapi_server.models.hls_audio_track_type import HlsAudioTrackType
from openapi_server.models.hls_descriptive_video_service_flag import HlsDescriptiveVideoServiceFlag
from openapi_server.models.hls_i_frame_only_manifest import HlsIFrameOnlyManifest
from openapi_server import util


class HlsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_group_id: str=None, audio_only_container: HlsAudioOnlyContainer=None, audio_rendition_sets: str=None, audio_track_type: HlsAudioTrackType=None, descriptive_video_service_flag: HlsDescriptiveVideoServiceFlag=None, i_frame_only_manifest: HlsIFrameOnlyManifest=None, segment_modifier: str=None):
        """HlsSettings - a model defined in OpenAPI

        :param audio_group_id: The audio_group_id of this HlsSettings.
        :param audio_only_container: The audio_only_container of this HlsSettings.
        :param audio_rendition_sets: The audio_rendition_sets of this HlsSettings.
        :param audio_track_type: The audio_track_type of this HlsSettings.
        :param descriptive_video_service_flag: The descriptive_video_service_flag of this HlsSettings.
        :param i_frame_only_manifest: The i_frame_only_manifest of this HlsSettings.
        :param segment_modifier: The segment_modifier of this HlsSettings.
        """
        self.openapi_types = {
            'audio_group_id': str,
            'audio_only_container': HlsAudioOnlyContainer,
            'audio_rendition_sets': str,
            'audio_track_type': HlsAudioTrackType,
            'descriptive_video_service_flag': HlsDescriptiveVideoServiceFlag,
            'i_frame_only_manifest': HlsIFrameOnlyManifest,
            'segment_modifier': str
        }

        self.attribute_map = {
            'audio_group_id': 'AudioGroupId',
            'audio_only_container': 'AudioOnlyContainer',
            'audio_rendition_sets': 'AudioRenditionSets',
            'audio_track_type': 'AudioTrackType',
            'descriptive_video_service_flag': 'DescriptiveVideoServiceFlag',
            'i_frame_only_manifest': 'IFrameOnlyManifest',
            'segment_modifier': 'SegmentModifier'
        }

        self._audio_group_id = audio_group_id
        self._audio_only_container = audio_only_container
        self._audio_rendition_sets = audio_rendition_sets
        self._audio_track_type = audio_track_type
        self._descriptive_video_service_flag = descriptive_video_service_flag
        self._i_frame_only_manifest = i_frame_only_manifest
        self._segment_modifier = segment_modifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HlsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HlsSettings of this HlsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_group_id(self):
        """Gets the audio_group_id of this HlsSettings.


        :return: The audio_group_id of this HlsSettings.
        :rtype: str
        """
        return self._audio_group_id

    @audio_group_id.setter
    def audio_group_id(self, audio_group_id):
        """Sets the audio_group_id of this HlsSettings.


        :param audio_group_id: The audio_group_id of this HlsSettings.
        :type audio_group_id: str
        """

        self._audio_group_id = audio_group_id

    @property
    def audio_only_container(self):
        """Gets the audio_only_container of this HlsSettings.


        :return: The audio_only_container of this HlsSettings.
        :rtype: HlsAudioOnlyContainer
        """
        return self._audio_only_container

    @audio_only_container.setter
    def audio_only_container(self, audio_only_container):
        """Sets the audio_only_container of this HlsSettings.


        :param audio_only_container: The audio_only_container of this HlsSettings.
        :type audio_only_container: HlsAudioOnlyContainer
        """

        self._audio_only_container = audio_only_container

    @property
    def audio_rendition_sets(self):
        """Gets the audio_rendition_sets of this HlsSettings.


        :return: The audio_rendition_sets of this HlsSettings.
        :rtype: str
        """
        return self._audio_rendition_sets

    @audio_rendition_sets.setter
    def audio_rendition_sets(self, audio_rendition_sets):
        """Sets the audio_rendition_sets of this HlsSettings.


        :param audio_rendition_sets: The audio_rendition_sets of this HlsSettings.
        :type audio_rendition_sets: str
        """

        self._audio_rendition_sets = audio_rendition_sets

    @property
    def audio_track_type(self):
        """Gets the audio_track_type of this HlsSettings.


        :return: The audio_track_type of this HlsSettings.
        :rtype: HlsAudioTrackType
        """
        return self._audio_track_type

    @audio_track_type.setter
    def audio_track_type(self, audio_track_type):
        """Sets the audio_track_type of this HlsSettings.


        :param audio_track_type: The audio_track_type of this HlsSettings.
        :type audio_track_type: HlsAudioTrackType
        """

        self._audio_track_type = audio_track_type

    @property
    def descriptive_video_service_flag(self):
        """Gets the descriptive_video_service_flag of this HlsSettings.


        :return: The descriptive_video_service_flag of this HlsSettings.
        :rtype: HlsDescriptiveVideoServiceFlag
        """
        return self._descriptive_video_service_flag

    @descriptive_video_service_flag.setter
    def descriptive_video_service_flag(self, descriptive_video_service_flag):
        """Sets the descriptive_video_service_flag of this HlsSettings.


        :param descriptive_video_service_flag: The descriptive_video_service_flag of this HlsSettings.
        :type descriptive_video_service_flag: HlsDescriptiveVideoServiceFlag
        """

        self._descriptive_video_service_flag = descriptive_video_service_flag

    @property
    def i_frame_only_manifest(self):
        """Gets the i_frame_only_manifest of this HlsSettings.


        :return: The i_frame_only_manifest of this HlsSettings.
        :rtype: HlsIFrameOnlyManifest
        """
        return self._i_frame_only_manifest

    @i_frame_only_manifest.setter
    def i_frame_only_manifest(self, i_frame_only_manifest):
        """Sets the i_frame_only_manifest of this HlsSettings.


        :param i_frame_only_manifest: The i_frame_only_manifest of this HlsSettings.
        :type i_frame_only_manifest: HlsIFrameOnlyManifest
        """

        self._i_frame_only_manifest = i_frame_only_manifest

    @property
    def segment_modifier(self):
        """Gets the segment_modifier of this HlsSettings.


        :return: The segment_modifier of this HlsSettings.
        :rtype: str
        """
        return self._segment_modifier

    @segment_modifier.setter
    def segment_modifier(self, segment_modifier):
        """Sets the segment_modifier of this HlsSettings.


        :param segment_modifier: The segment_modifier of this HlsSettings.
        :type segment_modifier: str
        """

        self._segment_modifier = segment_modifier
