# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.decryption_mode import DecryptionMode
from openapi_server import util


class InputDecryptionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decryption_mode: DecryptionMode=None, encrypted_decryption_key: str=None, initialization_vector: str=None, kms_key_region: str=None):
        """InputDecryptionSettings - a model defined in OpenAPI

        :param decryption_mode: The decryption_mode of this InputDecryptionSettings.
        :param encrypted_decryption_key: The encrypted_decryption_key of this InputDecryptionSettings.
        :param initialization_vector: The initialization_vector of this InputDecryptionSettings.
        :param kms_key_region: The kms_key_region of this InputDecryptionSettings.
        """
        self.openapi_types = {
            'decryption_mode': DecryptionMode,
            'encrypted_decryption_key': str,
            'initialization_vector': str,
            'kms_key_region': str
        }

        self.attribute_map = {
            'decryption_mode': 'DecryptionMode',
            'encrypted_decryption_key': 'EncryptedDecryptionKey',
            'initialization_vector': 'InitializationVector',
            'kms_key_region': 'KmsKeyRegion'
        }

        self._decryption_mode = decryption_mode
        self._encrypted_decryption_key = encrypted_decryption_key
        self._initialization_vector = initialization_vector
        self._kms_key_region = kms_key_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputDecryptionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Input_DecryptionSettings of this InputDecryptionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decryption_mode(self):
        """Gets the decryption_mode of this InputDecryptionSettings.


        :return: The decryption_mode of this InputDecryptionSettings.
        :rtype: DecryptionMode
        """
        return self._decryption_mode

    @decryption_mode.setter
    def decryption_mode(self, decryption_mode):
        """Sets the decryption_mode of this InputDecryptionSettings.


        :param decryption_mode: The decryption_mode of this InputDecryptionSettings.
        :type decryption_mode: DecryptionMode
        """

        self._decryption_mode = decryption_mode

    @property
    def encrypted_decryption_key(self):
        """Gets the encrypted_decryption_key of this InputDecryptionSettings.


        :return: The encrypted_decryption_key of this InputDecryptionSettings.
        :rtype: str
        """
        return self._encrypted_decryption_key

    @encrypted_decryption_key.setter
    def encrypted_decryption_key(self, encrypted_decryption_key):
        """Sets the encrypted_decryption_key of this InputDecryptionSettings.


        :param encrypted_decryption_key: The encrypted_decryption_key of this InputDecryptionSettings.
        :type encrypted_decryption_key: str
        """

        self._encrypted_decryption_key = encrypted_decryption_key

    @property
    def initialization_vector(self):
        """Gets the initialization_vector of this InputDecryptionSettings.


        :return: The initialization_vector of this InputDecryptionSettings.
        :rtype: str
        """
        return self._initialization_vector

    @initialization_vector.setter
    def initialization_vector(self, initialization_vector):
        """Sets the initialization_vector of this InputDecryptionSettings.


        :param initialization_vector: The initialization_vector of this InputDecryptionSettings.
        :type initialization_vector: str
        """

        self._initialization_vector = initialization_vector

    @property
    def kms_key_region(self):
        """Gets the kms_key_region of this InputDecryptionSettings.


        :return: The kms_key_region of this InputDecryptionSettings.
        :rtype: str
        """
        return self._kms_key_region

    @kms_key_region.setter
    def kms_key_region(self, kms_key_region):
        """Sets the kms_key_region of this InputDecryptionSettings.


        :param kms_key_region: The kms_key_region of this InputDecryptionSettings.
        :type kms_key_region: str
        """

        self._kms_key_region = kms_key_region
