# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.noise_filter_post_temporal_sharpening import NoiseFilterPostTemporalSharpening
from openapi_server.models.noise_filter_post_temporal_sharpening_strength import NoiseFilterPostTemporalSharpeningStrength
from openapi_server import util


class NoiseReducerTemporalFilterSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aggressive_mode: int=None, post_temporal_sharpening: NoiseFilterPostTemporalSharpening=None, post_temporal_sharpening_strength: NoiseFilterPostTemporalSharpeningStrength=None, speed: int=None, strength: int=None):
        """NoiseReducerTemporalFilterSettings - a model defined in OpenAPI

        :param aggressive_mode: The aggressive_mode of this NoiseReducerTemporalFilterSettings.
        :param post_temporal_sharpening: The post_temporal_sharpening of this NoiseReducerTemporalFilterSettings.
        :param post_temporal_sharpening_strength: The post_temporal_sharpening_strength of this NoiseReducerTemporalFilterSettings.
        :param speed: The speed of this NoiseReducerTemporalFilterSettings.
        :param strength: The strength of this NoiseReducerTemporalFilterSettings.
        """
        self.openapi_types = {
            'aggressive_mode': int,
            'post_temporal_sharpening': NoiseFilterPostTemporalSharpening,
            'post_temporal_sharpening_strength': NoiseFilterPostTemporalSharpeningStrength,
            'speed': int,
            'strength': int
        }

        self.attribute_map = {
            'aggressive_mode': 'AggressiveMode',
            'post_temporal_sharpening': 'PostTemporalSharpening',
            'post_temporal_sharpening_strength': 'PostTemporalSharpeningStrength',
            'speed': 'Speed',
            'strength': 'Strength'
        }

        self._aggressive_mode = aggressive_mode
        self._post_temporal_sharpening = post_temporal_sharpening
        self._post_temporal_sharpening_strength = post_temporal_sharpening_strength
        self._speed = speed
        self._strength = strength

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NoiseReducerTemporalFilterSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NoiseReducer_TemporalFilterSettings of this NoiseReducerTemporalFilterSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aggressive_mode(self):
        """Gets the aggressive_mode of this NoiseReducerTemporalFilterSettings.


        :return: The aggressive_mode of this NoiseReducerTemporalFilterSettings.
        :rtype: int
        """
        return self._aggressive_mode

    @aggressive_mode.setter
    def aggressive_mode(self, aggressive_mode):
        """Sets the aggressive_mode of this NoiseReducerTemporalFilterSettings.


        :param aggressive_mode: The aggressive_mode of this NoiseReducerTemporalFilterSettings.
        :type aggressive_mode: int
        """

        self._aggressive_mode = aggressive_mode

    @property
    def post_temporal_sharpening(self):
        """Gets the post_temporal_sharpening of this NoiseReducerTemporalFilterSettings.


        :return: The post_temporal_sharpening of this NoiseReducerTemporalFilterSettings.
        :rtype: NoiseFilterPostTemporalSharpening
        """
        return self._post_temporal_sharpening

    @post_temporal_sharpening.setter
    def post_temporal_sharpening(self, post_temporal_sharpening):
        """Sets the post_temporal_sharpening of this NoiseReducerTemporalFilterSettings.


        :param post_temporal_sharpening: The post_temporal_sharpening of this NoiseReducerTemporalFilterSettings.
        :type post_temporal_sharpening: NoiseFilterPostTemporalSharpening
        """

        self._post_temporal_sharpening = post_temporal_sharpening

    @property
    def post_temporal_sharpening_strength(self):
        """Gets the post_temporal_sharpening_strength of this NoiseReducerTemporalFilterSettings.


        :return: The post_temporal_sharpening_strength of this NoiseReducerTemporalFilterSettings.
        :rtype: NoiseFilterPostTemporalSharpeningStrength
        """
        return self._post_temporal_sharpening_strength

    @post_temporal_sharpening_strength.setter
    def post_temporal_sharpening_strength(self, post_temporal_sharpening_strength):
        """Sets the post_temporal_sharpening_strength of this NoiseReducerTemporalFilterSettings.


        :param post_temporal_sharpening_strength: The post_temporal_sharpening_strength of this NoiseReducerTemporalFilterSettings.
        :type post_temporal_sharpening_strength: NoiseFilterPostTemporalSharpeningStrength
        """

        self._post_temporal_sharpening_strength = post_temporal_sharpening_strength

    @property
    def speed(self):
        """Gets the speed of this NoiseReducerTemporalFilterSettings.


        :return: The speed of this NoiseReducerTemporalFilterSettings.
        :rtype: int
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """Sets the speed of this NoiseReducerTemporalFilterSettings.


        :param speed: The speed of this NoiseReducerTemporalFilterSettings.
        :type speed: int
        """

        self._speed = speed

    @property
    def strength(self):
        """Gets the strength of this NoiseReducerTemporalFilterSettings.


        :return: The strength of this NoiseReducerTemporalFilterSettings.
        :rtype: int
        """
        return self._strength

    @strength.setter
    def strength(self, strength):
        """Sets the strength of this NoiseReducerTemporalFilterSettings.


        :param strength: The strength of this NoiseReducerTemporalFilterSettings.
        :type strength: int
        """

        self._strength = strength
