# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateJobRequestSettingsNielsenConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, breakout_code: int=None, distributor_id: str=None):
        """CreateJobRequestSettingsNielsenConfiguration - a model defined in OpenAPI

        :param breakout_code: The breakout_code of this CreateJobRequestSettingsNielsenConfiguration.
        :param distributor_id: The distributor_id of this CreateJobRequestSettingsNielsenConfiguration.
        """
        self.openapi_types = {
            'breakout_code': int,
            'distributor_id': str
        }

        self.attribute_map = {
            'breakout_code': 'BreakoutCode',
            'distributor_id': 'DistributorId'
        }

        self._breakout_code = breakout_code
        self._distributor_id = distributor_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateJobRequestSettingsNielsenConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateJob_request_settings_NielsenConfiguration of this CreateJobRequestSettingsNielsenConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def breakout_code(self):
        """Gets the breakout_code of this CreateJobRequestSettingsNielsenConfiguration.


        :return: The breakout_code of this CreateJobRequestSettingsNielsenConfiguration.
        :rtype: int
        """
        return self._breakout_code

    @breakout_code.setter
    def breakout_code(self, breakout_code):
        """Sets the breakout_code of this CreateJobRequestSettingsNielsenConfiguration.


        :param breakout_code: The breakout_code of this CreateJobRequestSettingsNielsenConfiguration.
        :type breakout_code: int
        """

        self._breakout_code = breakout_code

    @property
    def distributor_id(self):
        """Gets the distributor_id of this CreateJobRequestSettingsNielsenConfiguration.


        :return: The distributor_id of this CreateJobRequestSettingsNielsenConfiguration.
        :rtype: str
        """
        return self._distributor_id

    @distributor_id.setter
    def distributor_id(self, distributor_id):
        """Sets the distributor_id of this CreateJobRequestSettingsNielsenConfiguration.


        :param distributor_id: The distributor_id of this CreateJobRequestSettingsNielsenConfiguration.
        :type distributor_id: str
        """

        self._distributor_id = distributor_id
