# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cmfc_audio_duration import CmfcAudioDuration
from openapi_server.models.mp4_cslg_atom import Mp4CslgAtom
from openapi_server.models.mp4_free_space_box import Mp4FreeSpaceBox
from openapi_server.models.mp4_moov_placement import Mp4MoovPlacement
from openapi_server import util


class ContainerSettingsMp4Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_duration: CmfcAudioDuration=None, cslg_atom: Mp4CslgAtom=None, ctts_version: int=None, free_space_box: Mp4FreeSpaceBox=None, moov_placement: Mp4MoovPlacement=None, mp4_major_brand: str=None):
        """ContainerSettingsMp4Settings - a model defined in OpenAPI

        :param audio_duration: The audio_duration of this ContainerSettingsMp4Settings.
        :param cslg_atom: The cslg_atom of this ContainerSettingsMp4Settings.
        :param ctts_version: The ctts_version of this ContainerSettingsMp4Settings.
        :param free_space_box: The free_space_box of this ContainerSettingsMp4Settings.
        :param moov_placement: The moov_placement of this ContainerSettingsMp4Settings.
        :param mp4_major_brand: The mp4_major_brand of this ContainerSettingsMp4Settings.
        """
        self.openapi_types = {
            'audio_duration': CmfcAudioDuration,
            'cslg_atom': Mp4CslgAtom,
            'ctts_version': int,
            'free_space_box': Mp4FreeSpaceBox,
            'moov_placement': Mp4MoovPlacement,
            'mp4_major_brand': str
        }

        self.attribute_map = {
            'audio_duration': 'AudioDuration',
            'cslg_atom': 'CslgAtom',
            'ctts_version': 'CttsVersion',
            'free_space_box': 'FreeSpaceBox',
            'moov_placement': 'MoovPlacement',
            'mp4_major_brand': 'Mp4MajorBrand'
        }

        self._audio_duration = audio_duration
        self._cslg_atom = cslg_atom
        self._ctts_version = ctts_version
        self._free_space_box = free_space_box
        self._moov_placement = moov_placement
        self._mp4_major_brand = mp4_major_brand

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerSettingsMp4Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerSettings_Mp4Settings of this ContainerSettingsMp4Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_duration(self):
        """Gets the audio_duration of this ContainerSettingsMp4Settings.


        :return: The audio_duration of this ContainerSettingsMp4Settings.
        :rtype: CmfcAudioDuration
        """
        return self._audio_duration

    @audio_duration.setter
    def audio_duration(self, audio_duration):
        """Sets the audio_duration of this ContainerSettingsMp4Settings.


        :param audio_duration: The audio_duration of this ContainerSettingsMp4Settings.
        :type audio_duration: CmfcAudioDuration
        """

        self._audio_duration = audio_duration

    @property
    def cslg_atom(self):
        """Gets the cslg_atom of this ContainerSettingsMp4Settings.


        :return: The cslg_atom of this ContainerSettingsMp4Settings.
        :rtype: Mp4CslgAtom
        """
        return self._cslg_atom

    @cslg_atom.setter
    def cslg_atom(self, cslg_atom):
        """Sets the cslg_atom of this ContainerSettingsMp4Settings.


        :param cslg_atom: The cslg_atom of this ContainerSettingsMp4Settings.
        :type cslg_atom: Mp4CslgAtom
        """

        self._cslg_atom = cslg_atom

    @property
    def ctts_version(self):
        """Gets the ctts_version of this ContainerSettingsMp4Settings.


        :return: The ctts_version of this ContainerSettingsMp4Settings.
        :rtype: int
        """
        return self._ctts_version

    @ctts_version.setter
    def ctts_version(self, ctts_version):
        """Sets the ctts_version of this ContainerSettingsMp4Settings.


        :param ctts_version: The ctts_version of this ContainerSettingsMp4Settings.
        :type ctts_version: int
        """

        self._ctts_version = ctts_version

    @property
    def free_space_box(self):
        """Gets the free_space_box of this ContainerSettingsMp4Settings.


        :return: The free_space_box of this ContainerSettingsMp4Settings.
        :rtype: Mp4FreeSpaceBox
        """
        return self._free_space_box

    @free_space_box.setter
    def free_space_box(self, free_space_box):
        """Sets the free_space_box of this ContainerSettingsMp4Settings.


        :param free_space_box: The free_space_box of this ContainerSettingsMp4Settings.
        :type free_space_box: Mp4FreeSpaceBox
        """

        self._free_space_box = free_space_box

    @property
    def moov_placement(self):
        """Gets the moov_placement of this ContainerSettingsMp4Settings.


        :return: The moov_placement of this ContainerSettingsMp4Settings.
        :rtype: Mp4MoovPlacement
        """
        return self._moov_placement

    @moov_placement.setter
    def moov_placement(self, moov_placement):
        """Sets the moov_placement of this ContainerSettingsMp4Settings.


        :param moov_placement: The moov_placement of this ContainerSettingsMp4Settings.
        :type moov_placement: Mp4MoovPlacement
        """

        self._moov_placement = moov_placement

    @property
    def mp4_major_brand(self):
        """Gets the mp4_major_brand of this ContainerSettingsMp4Settings.


        :return: The mp4_major_brand of this ContainerSettingsMp4Settings.
        :rtype: str
        """
        return self._mp4_major_brand

    @mp4_major_brand.setter
    def mp4_major_brand(self, mp4_major_brand):
        """Sets the mp4_major_brand of this ContainerSettingsMp4Settings.


        :param mp4_major_brand: The mp4_major_brand of this ContainerSettingsMp4Settings.
        :type mp4_major_brand: str
        """

        self._mp4_major_brand = mp4_major_brand
