# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_preset_request_settings_container_settings import CreatePresetRequestSettingsContainerSettings
from openapi_server.models.create_preset_request_settings_video_description import CreatePresetRequestSettingsVideoDescription
from openapi_server.models.output_output_settings import OutputOutputSettings
from openapi_server import util


class Output(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_descriptions: List=None, caption_descriptions: List=None, container_settings: CreatePresetRequestSettingsContainerSettings=None, extension: str=None, name_modifier: str=None, output_settings: OutputOutputSettings=None, preset: str=None, video_description: CreatePresetRequestSettingsVideoDescription=None):
        """Output - a model defined in OpenAPI

        :param audio_descriptions: The audio_descriptions of this Output.
        :param caption_descriptions: The caption_descriptions of this Output.
        :param container_settings: The container_settings of this Output.
        :param extension: The extension of this Output.
        :param name_modifier: The name_modifier of this Output.
        :param output_settings: The output_settings of this Output.
        :param preset: The preset of this Output.
        :param video_description: The video_description of this Output.
        """
        self.openapi_types = {
            'audio_descriptions': List,
            'caption_descriptions': List,
            'container_settings': CreatePresetRequestSettingsContainerSettings,
            'extension': str,
            'name_modifier': str,
            'output_settings': OutputOutputSettings,
            'preset': str,
            'video_description': CreatePresetRequestSettingsVideoDescription
        }

        self.attribute_map = {
            'audio_descriptions': 'AudioDescriptions',
            'caption_descriptions': 'CaptionDescriptions',
            'container_settings': 'ContainerSettings',
            'extension': 'Extension',
            'name_modifier': 'NameModifier',
            'output_settings': 'OutputSettings',
            'preset': 'Preset',
            'video_description': 'VideoDescription'
        }

        self._audio_descriptions = audio_descriptions
        self._caption_descriptions = caption_descriptions
        self._container_settings = container_settings
        self._extension = extension
        self._name_modifier = name_modifier
        self._output_settings = output_settings
        self._preset = preset
        self._video_description = video_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Output':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Output of this Output.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_descriptions(self):
        """Gets the audio_descriptions of this Output.


        :return: The audio_descriptions of this Output.
        :rtype: List
        """
        return self._audio_descriptions

    @audio_descriptions.setter
    def audio_descriptions(self, audio_descriptions):
        """Sets the audio_descriptions of this Output.


        :param audio_descriptions: The audio_descriptions of this Output.
        :type audio_descriptions: List
        """

        self._audio_descriptions = audio_descriptions

    @property
    def caption_descriptions(self):
        """Gets the caption_descriptions of this Output.


        :return: The caption_descriptions of this Output.
        :rtype: List
        """
        return self._caption_descriptions

    @caption_descriptions.setter
    def caption_descriptions(self, caption_descriptions):
        """Sets the caption_descriptions of this Output.


        :param caption_descriptions: The caption_descriptions of this Output.
        :type caption_descriptions: List
        """

        self._caption_descriptions = caption_descriptions

    @property
    def container_settings(self):
        """Gets the container_settings of this Output.


        :return: The container_settings of this Output.
        :rtype: CreatePresetRequestSettingsContainerSettings
        """
        return self._container_settings

    @container_settings.setter
    def container_settings(self, container_settings):
        """Sets the container_settings of this Output.


        :param container_settings: The container_settings of this Output.
        :type container_settings: CreatePresetRequestSettingsContainerSettings
        """

        self._container_settings = container_settings

    @property
    def extension(self):
        """Gets the extension of this Output.


        :return: The extension of this Output.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this Output.


        :param extension: The extension of this Output.
        :type extension: str
        """

        self._extension = extension

    @property
    def name_modifier(self):
        """Gets the name_modifier of this Output.


        :return: The name_modifier of this Output.
        :rtype: str
        """
        return self._name_modifier

    @name_modifier.setter
    def name_modifier(self, name_modifier):
        """Sets the name_modifier of this Output.


        :param name_modifier: The name_modifier of this Output.
        :type name_modifier: str
        """

        self._name_modifier = name_modifier

    @property
    def output_settings(self):
        """Gets the output_settings of this Output.


        :return: The output_settings of this Output.
        :rtype: OutputOutputSettings
        """
        return self._output_settings

    @output_settings.setter
    def output_settings(self, output_settings):
        """Sets the output_settings of this Output.


        :param output_settings: The output_settings of this Output.
        :type output_settings: OutputOutputSettings
        """

        self._output_settings = output_settings

    @property
    def preset(self):
        """Gets the preset of this Output.


        :return: The preset of this Output.
        :rtype: str
        """
        return self._preset

    @preset.setter
    def preset(self, preset):
        """Sets the preset of this Output.


        :param preset: The preset of this Output.
        :type preset: str
        """

        self._preset = preset

    @property
    def video_description(self):
        """Gets the video_description of this Output.


        :return: The video_description of this Output.
        :rtype: CreatePresetRequestSettingsVideoDescription
        """
        return self._video_description

    @video_description.setter
    def video_description(self, video_description):
        """Sets the video_description of this Output.


        :param video_description: The video_description of this Output.
        :type video_description: CreatePresetRequestSettingsVideoDescription
        """

        self._video_description = video_description
