# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ColorCorrectorClipLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum_rgb_tolerance: int=None, maximum_yuv: int=None, minimum_rgb_tolerance: int=None, minimum_yuv: int=None):
        """ColorCorrectorClipLimits - a model defined in OpenAPI

        :param maximum_rgb_tolerance: The maximum_rgb_tolerance of this ColorCorrectorClipLimits.
        :param maximum_yuv: The maximum_yuv of this ColorCorrectorClipLimits.
        :param minimum_rgb_tolerance: The minimum_rgb_tolerance of this ColorCorrectorClipLimits.
        :param minimum_yuv: The minimum_yuv of this ColorCorrectorClipLimits.
        """
        self.openapi_types = {
            'maximum_rgb_tolerance': int,
            'maximum_yuv': int,
            'minimum_rgb_tolerance': int,
            'minimum_yuv': int
        }

        self.attribute_map = {
            'maximum_rgb_tolerance': 'MaximumRGBTolerance',
            'maximum_yuv': 'MaximumYUV',
            'minimum_rgb_tolerance': 'MinimumRGBTolerance',
            'minimum_yuv': 'MinimumYUV'
        }

        self._maximum_rgb_tolerance = maximum_rgb_tolerance
        self._maximum_yuv = maximum_yuv
        self._minimum_rgb_tolerance = minimum_rgb_tolerance
        self._minimum_yuv = minimum_yuv

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColorCorrectorClipLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColorCorrector_ClipLimits of this ColorCorrectorClipLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum_rgb_tolerance(self):
        """Gets the maximum_rgb_tolerance of this ColorCorrectorClipLimits.


        :return: The maximum_rgb_tolerance of this ColorCorrectorClipLimits.
        :rtype: int
        """
        return self._maximum_rgb_tolerance

    @maximum_rgb_tolerance.setter
    def maximum_rgb_tolerance(self, maximum_rgb_tolerance):
        """Sets the maximum_rgb_tolerance of this ColorCorrectorClipLimits.


        :param maximum_rgb_tolerance: The maximum_rgb_tolerance of this ColorCorrectorClipLimits.
        :type maximum_rgb_tolerance: int
        """

        self._maximum_rgb_tolerance = maximum_rgb_tolerance

    @property
    def maximum_yuv(self):
        """Gets the maximum_yuv of this ColorCorrectorClipLimits.


        :return: The maximum_yuv of this ColorCorrectorClipLimits.
        :rtype: int
        """
        return self._maximum_yuv

    @maximum_yuv.setter
    def maximum_yuv(self, maximum_yuv):
        """Sets the maximum_yuv of this ColorCorrectorClipLimits.


        :param maximum_yuv: The maximum_yuv of this ColorCorrectorClipLimits.
        :type maximum_yuv: int
        """

        self._maximum_yuv = maximum_yuv

    @property
    def minimum_rgb_tolerance(self):
        """Gets the minimum_rgb_tolerance of this ColorCorrectorClipLimits.


        :return: The minimum_rgb_tolerance of this ColorCorrectorClipLimits.
        :rtype: int
        """
        return self._minimum_rgb_tolerance

    @minimum_rgb_tolerance.setter
    def minimum_rgb_tolerance(self, minimum_rgb_tolerance):
        """Sets the minimum_rgb_tolerance of this ColorCorrectorClipLimits.


        :param minimum_rgb_tolerance: The minimum_rgb_tolerance of this ColorCorrectorClipLimits.
        :type minimum_rgb_tolerance: int
        """

        self._minimum_rgb_tolerance = minimum_rgb_tolerance

    @property
    def minimum_yuv(self):
        """Gets the minimum_yuv of this ColorCorrectorClipLimits.


        :return: The minimum_yuv of this ColorCorrectorClipLimits.
        :rtype: int
        """
        return self._minimum_yuv

    @minimum_yuv.setter
    def minimum_yuv(self, minimum_yuv):
        """Sets the minimum_yuv of this ColorCorrectorClipLimits.


        :param minimum_yuv: The minimum_yuv of this ColorCorrectorClipLimits.
        :type minimum_yuv: int
        """

        self._minimum_yuv = minimum_yuv
