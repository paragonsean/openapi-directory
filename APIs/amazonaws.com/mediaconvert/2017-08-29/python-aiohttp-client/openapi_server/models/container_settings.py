# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_settings_cmfc_settings import ContainerSettingsCmfcSettings
from openapi_server.models.container_settings_f4v_settings import ContainerSettingsF4vSettings
from openapi_server.models.container_settings_m2ts_settings import ContainerSettingsM2tsSettings
from openapi_server.models.container_settings_m3u8_settings import ContainerSettingsM3u8Settings
from openapi_server.models.container_settings_mov_settings import ContainerSettingsMovSettings
from openapi_server.models.container_settings_mp4_settings import ContainerSettingsMp4Settings
from openapi_server.models.container_settings_mpd_settings import ContainerSettingsMpdSettings
from openapi_server.models.container_settings_mxf_settings import ContainerSettingsMxfSettings
from openapi_server.models.container_type import ContainerType
from openapi_server import util


class ContainerSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cmfc_settings: ContainerSettingsCmfcSettings=None, container: ContainerType=None, f4v_settings: ContainerSettingsF4vSettings=None, m2ts_settings: ContainerSettingsM2tsSettings=None, m3u8_settings: ContainerSettingsM3u8Settings=None, mov_settings: ContainerSettingsMovSettings=None, mp4_settings: ContainerSettingsMp4Settings=None, mpd_settings: ContainerSettingsMpdSettings=None, mxf_settings: ContainerSettingsMxfSettings=None):
        """ContainerSettings - a model defined in OpenAPI

        :param cmfc_settings: The cmfc_settings of this ContainerSettings.
        :param container: The container of this ContainerSettings.
        :param f4v_settings: The f4v_settings of this ContainerSettings.
        :param m2ts_settings: The m2ts_settings of this ContainerSettings.
        :param m3u8_settings: The m3u8_settings of this ContainerSettings.
        :param mov_settings: The mov_settings of this ContainerSettings.
        :param mp4_settings: The mp4_settings of this ContainerSettings.
        :param mpd_settings: The mpd_settings of this ContainerSettings.
        :param mxf_settings: The mxf_settings of this ContainerSettings.
        """
        self.openapi_types = {
            'cmfc_settings': ContainerSettingsCmfcSettings,
            'container': ContainerType,
            'f4v_settings': ContainerSettingsF4vSettings,
            'm2ts_settings': ContainerSettingsM2tsSettings,
            'm3u8_settings': ContainerSettingsM3u8Settings,
            'mov_settings': ContainerSettingsMovSettings,
            'mp4_settings': ContainerSettingsMp4Settings,
            'mpd_settings': ContainerSettingsMpdSettings,
            'mxf_settings': ContainerSettingsMxfSettings
        }

        self.attribute_map = {
            'cmfc_settings': 'CmfcSettings',
            'container': 'Container',
            'f4v_settings': 'F4vSettings',
            'm2ts_settings': 'M2tsSettings',
            'm3u8_settings': 'M3u8Settings',
            'mov_settings': 'MovSettings',
            'mp4_settings': 'Mp4Settings',
            'mpd_settings': 'MpdSettings',
            'mxf_settings': 'MxfSettings'
        }

        self._cmfc_settings = cmfc_settings
        self._container = container
        self._f4v_settings = f4v_settings
        self._m2ts_settings = m2ts_settings
        self._m3u8_settings = m3u8_settings
        self._mov_settings = mov_settings
        self._mp4_settings = mp4_settings
        self._mpd_settings = mpd_settings
        self._mxf_settings = mxf_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainerSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainerSettings of this ContainerSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cmfc_settings(self):
        """Gets the cmfc_settings of this ContainerSettings.


        :return: The cmfc_settings of this ContainerSettings.
        :rtype: ContainerSettingsCmfcSettings
        """
        return self._cmfc_settings

    @cmfc_settings.setter
    def cmfc_settings(self, cmfc_settings):
        """Sets the cmfc_settings of this ContainerSettings.


        :param cmfc_settings: The cmfc_settings of this ContainerSettings.
        :type cmfc_settings: ContainerSettingsCmfcSettings
        """

        self._cmfc_settings = cmfc_settings

    @property
    def container(self):
        """Gets the container of this ContainerSettings.


        :return: The container of this ContainerSettings.
        :rtype: ContainerType
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this ContainerSettings.


        :param container: The container of this ContainerSettings.
        :type container: ContainerType
        """

        self._container = container

    @property
    def f4v_settings(self):
        """Gets the f4v_settings of this ContainerSettings.


        :return: The f4v_settings of this ContainerSettings.
        :rtype: ContainerSettingsF4vSettings
        """
        return self._f4v_settings

    @f4v_settings.setter
    def f4v_settings(self, f4v_settings):
        """Sets the f4v_settings of this ContainerSettings.


        :param f4v_settings: The f4v_settings of this ContainerSettings.
        :type f4v_settings: ContainerSettingsF4vSettings
        """

        self._f4v_settings = f4v_settings

    @property
    def m2ts_settings(self):
        """Gets the m2ts_settings of this ContainerSettings.


        :return: The m2ts_settings of this ContainerSettings.
        :rtype: ContainerSettingsM2tsSettings
        """
        return self._m2ts_settings

    @m2ts_settings.setter
    def m2ts_settings(self, m2ts_settings):
        """Sets the m2ts_settings of this ContainerSettings.


        :param m2ts_settings: The m2ts_settings of this ContainerSettings.
        :type m2ts_settings: ContainerSettingsM2tsSettings
        """

        self._m2ts_settings = m2ts_settings

    @property
    def m3u8_settings(self):
        """Gets the m3u8_settings of this ContainerSettings.


        :return: The m3u8_settings of this ContainerSettings.
        :rtype: ContainerSettingsM3u8Settings
        """
        return self._m3u8_settings

    @m3u8_settings.setter
    def m3u8_settings(self, m3u8_settings):
        """Sets the m3u8_settings of this ContainerSettings.


        :param m3u8_settings: The m3u8_settings of this ContainerSettings.
        :type m3u8_settings: ContainerSettingsM3u8Settings
        """

        self._m3u8_settings = m3u8_settings

    @property
    def mov_settings(self):
        """Gets the mov_settings of this ContainerSettings.


        :return: The mov_settings of this ContainerSettings.
        :rtype: ContainerSettingsMovSettings
        """
        return self._mov_settings

    @mov_settings.setter
    def mov_settings(self, mov_settings):
        """Sets the mov_settings of this ContainerSettings.


        :param mov_settings: The mov_settings of this ContainerSettings.
        :type mov_settings: ContainerSettingsMovSettings
        """

        self._mov_settings = mov_settings

    @property
    def mp4_settings(self):
        """Gets the mp4_settings of this ContainerSettings.


        :return: The mp4_settings of this ContainerSettings.
        :rtype: ContainerSettingsMp4Settings
        """
        return self._mp4_settings

    @mp4_settings.setter
    def mp4_settings(self, mp4_settings):
        """Sets the mp4_settings of this ContainerSettings.


        :param mp4_settings: The mp4_settings of this ContainerSettings.
        :type mp4_settings: ContainerSettingsMp4Settings
        """

        self._mp4_settings = mp4_settings

    @property
    def mpd_settings(self):
        """Gets the mpd_settings of this ContainerSettings.


        :return: The mpd_settings of this ContainerSettings.
        :rtype: ContainerSettingsMpdSettings
        """
        return self._mpd_settings

    @mpd_settings.setter
    def mpd_settings(self, mpd_settings):
        """Sets the mpd_settings of this ContainerSettings.


        :param mpd_settings: The mpd_settings of this ContainerSettings.
        :type mpd_settings: ContainerSettingsMpdSettings
        """

        self._mpd_settings = mpd_settings

    @property
    def mxf_settings(self):
        """Gets the mxf_settings of this ContainerSettings.


        :return: The mxf_settings of this ContainerSettings.
        :rtype: ContainerSettingsMxfSettings
        """
        return self._mxf_settings

    @mxf_settings.setter
    def mxf_settings(self, mxf_settings):
        """Sets the mxf_settings of this ContainerSettings.


        :param mxf_settings: The mxf_settings of this ContainerSettings.
        :type mxf_settings: ContainerSettingsMxfSettings
        """

        self._mxf_settings = mxf_settings
