# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mxf_xavc_duration_mode import MxfXavcDurationMode
from openapi_server import util


class MxfXavcProfileSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration_mode: MxfXavcDurationMode=None, max_anc_data_size: int=None):
        """MxfXavcProfileSettings - a model defined in OpenAPI

        :param duration_mode: The duration_mode of this MxfXavcProfileSettings.
        :param max_anc_data_size: The max_anc_data_size of this MxfXavcProfileSettings.
        """
        self.openapi_types = {
            'duration_mode': MxfXavcDurationMode,
            'max_anc_data_size': int
        }

        self.attribute_map = {
            'duration_mode': 'DurationMode',
            'max_anc_data_size': 'MaxAncDataSize'
        }

        self._duration_mode = duration_mode
        self._max_anc_data_size = max_anc_data_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MxfXavcProfileSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MxfXavcProfileSettings of this MxfXavcProfileSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration_mode(self):
        """Gets the duration_mode of this MxfXavcProfileSettings.


        :return: The duration_mode of this MxfXavcProfileSettings.
        :rtype: MxfXavcDurationMode
        """
        return self._duration_mode

    @duration_mode.setter
    def duration_mode(self, duration_mode):
        """Sets the duration_mode of this MxfXavcProfileSettings.


        :param duration_mode: The duration_mode of this MxfXavcProfileSettings.
        :type duration_mode: MxfXavcDurationMode
        """

        self._duration_mode = duration_mode

    @property
    def max_anc_data_size(self):
        """Gets the max_anc_data_size of this MxfXavcProfileSettings.


        :return: The max_anc_data_size of this MxfXavcProfileSettings.
        :rtype: int
        """
        return self._max_anc_data_size

    @max_anc_data_size.setter
    def max_anc_data_size(self, max_anc_data_size):
        """Sets the max_anc_data_size of this MxfXavcProfileSettings.


        :param max_anc_data_size: The max_anc_data_size of this MxfXavcProfileSettings.
        :type max_anc_data_size: int
        """

        self._max_anc_data_size = max_anc_data_size
