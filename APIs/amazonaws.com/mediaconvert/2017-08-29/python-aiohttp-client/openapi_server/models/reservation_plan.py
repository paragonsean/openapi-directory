# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.commitment import Commitment
from openapi_server.models.renewal_type import RenewalType
from openapi_server.models.reservation_plan_status import ReservationPlanStatus
from openapi_server import util


class ReservationPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commitment: Commitment=None, expires_at: datetime=None, purchased_at: datetime=None, renewal_type: RenewalType=None, reserved_slots: int=None, status: ReservationPlanStatus=None):
        """ReservationPlan - a model defined in OpenAPI

        :param commitment: The commitment of this ReservationPlan.
        :param expires_at: The expires_at of this ReservationPlan.
        :param purchased_at: The purchased_at of this ReservationPlan.
        :param renewal_type: The renewal_type of this ReservationPlan.
        :param reserved_slots: The reserved_slots of this ReservationPlan.
        :param status: The status of this ReservationPlan.
        """
        self.openapi_types = {
            'commitment': Commitment,
            'expires_at': datetime,
            'purchased_at': datetime,
            'renewal_type': RenewalType,
            'reserved_slots': int,
            'status': ReservationPlanStatus
        }

        self.attribute_map = {
            'commitment': 'Commitment',
            'expires_at': 'ExpiresAt',
            'purchased_at': 'PurchasedAt',
            'renewal_type': 'RenewalType',
            'reserved_slots': 'ReservedSlots',
            'status': 'Status'
        }

        self._commitment = commitment
        self._expires_at = expires_at
        self._purchased_at = purchased_at
        self._renewal_type = renewal_type
        self._reserved_slots = reserved_slots
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservationPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservationPlan of this ReservationPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commitment(self):
        """Gets the commitment of this ReservationPlan.


        :return: The commitment of this ReservationPlan.
        :rtype: Commitment
        """
        return self._commitment

    @commitment.setter
    def commitment(self, commitment):
        """Sets the commitment of this ReservationPlan.


        :param commitment: The commitment of this ReservationPlan.
        :type commitment: Commitment
        """

        self._commitment = commitment

    @property
    def expires_at(self):
        """Gets the expires_at of this ReservationPlan.


        :return: The expires_at of this ReservationPlan.
        :rtype: datetime
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this ReservationPlan.


        :param expires_at: The expires_at of this ReservationPlan.
        :type expires_at: datetime
        """

        self._expires_at = expires_at

    @property
    def purchased_at(self):
        """Gets the purchased_at of this ReservationPlan.


        :return: The purchased_at of this ReservationPlan.
        :rtype: datetime
        """
        return self._purchased_at

    @purchased_at.setter
    def purchased_at(self, purchased_at):
        """Sets the purchased_at of this ReservationPlan.


        :param purchased_at: The purchased_at of this ReservationPlan.
        :type purchased_at: datetime
        """

        self._purchased_at = purchased_at

    @property
    def renewal_type(self):
        """Gets the renewal_type of this ReservationPlan.


        :return: The renewal_type of this ReservationPlan.
        :rtype: RenewalType
        """
        return self._renewal_type

    @renewal_type.setter
    def renewal_type(self, renewal_type):
        """Sets the renewal_type of this ReservationPlan.


        :param renewal_type: The renewal_type of this ReservationPlan.
        :type renewal_type: RenewalType
        """

        self._renewal_type = renewal_type

    @property
    def reserved_slots(self):
        """Gets the reserved_slots of this ReservationPlan.


        :return: The reserved_slots of this ReservationPlan.
        :rtype: int
        """
        return self._reserved_slots

    @reserved_slots.setter
    def reserved_slots(self, reserved_slots):
        """Sets the reserved_slots of this ReservationPlan.


        :param reserved_slots: The reserved_slots of this ReservationPlan.
        :type reserved_slots: int
        """

        self._reserved_slots = reserved_slots

    @property
    def status(self):
        """Gets the status of this ReservationPlan.


        :return: The status of this ReservationPlan.
        :rtype: ReservationPlanStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ReservationPlan.


        :param status: The status of this ReservationPlan.
        :type status: ReservationPlanStatus
        """

        self._status = status
