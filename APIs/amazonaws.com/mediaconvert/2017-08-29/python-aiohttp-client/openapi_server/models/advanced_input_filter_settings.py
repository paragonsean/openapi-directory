# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advanced_input_filter_add_texture import AdvancedInputFilterAddTexture
from openapi_server.models.advanced_input_filter_sharpen import AdvancedInputFilterSharpen
from openapi_server import util


class AdvancedInputFilterSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_texture: AdvancedInputFilterAddTexture=None, sharpening: AdvancedInputFilterSharpen=None):
        """AdvancedInputFilterSettings - a model defined in OpenAPI

        :param add_texture: The add_texture of this AdvancedInputFilterSettings.
        :param sharpening: The sharpening of this AdvancedInputFilterSettings.
        """
        self.openapi_types = {
            'add_texture': AdvancedInputFilterAddTexture,
            'sharpening': AdvancedInputFilterSharpen
        }

        self.attribute_map = {
            'add_texture': 'AddTexture',
            'sharpening': 'Sharpening'
        }

        self._add_texture = add_texture
        self._sharpening = sharpening

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedInputFilterSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedInputFilterSettings of this AdvancedInputFilterSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_texture(self):
        """Gets the add_texture of this AdvancedInputFilterSettings.


        :return: The add_texture of this AdvancedInputFilterSettings.
        :rtype: AdvancedInputFilterAddTexture
        """
        return self._add_texture

    @add_texture.setter
    def add_texture(self, add_texture):
        """Sets the add_texture of this AdvancedInputFilterSettings.


        :param add_texture: The add_texture of this AdvancedInputFilterSettings.
        :type add_texture: AdvancedInputFilterAddTexture
        """

        self._add_texture = add_texture

    @property
    def sharpening(self):
        """Gets the sharpening of this AdvancedInputFilterSettings.


        :return: The sharpening of this AdvancedInputFilterSettings.
        :rtype: AdvancedInputFilterSharpen
        """
        return self._sharpening

    @sharpening.setter
    def sharpening(self, sharpening):
        """Sets the sharpening of this AdvancedInputFilterSettings.


        :param sharpening: The sharpening of this AdvancedInputFilterSettings.
        :type sharpening: AdvancedInputFilterSharpen
        """

        self._sharpening = sharpening
