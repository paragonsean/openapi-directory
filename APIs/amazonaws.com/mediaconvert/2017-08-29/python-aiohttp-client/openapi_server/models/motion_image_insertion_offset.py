# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MotionImageInsertionOffset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_x: int=None, image_y: int=None):
        """MotionImageInsertionOffset - a model defined in OpenAPI

        :param image_x: The image_x of this MotionImageInsertionOffset.
        :param image_y: The image_y of this MotionImageInsertionOffset.
        """
        self.openapi_types = {
            'image_x': int,
            'image_y': int
        }

        self.attribute_map = {
            'image_x': 'ImageX',
            'image_y': 'ImageY'
        }

        self._image_x = image_x
        self._image_y = image_y

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MotionImageInsertionOffset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MotionImageInsertionOffset of this MotionImageInsertionOffset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_x(self):
        """Gets the image_x of this MotionImageInsertionOffset.


        :return: The image_x of this MotionImageInsertionOffset.
        :rtype: int
        """
        return self._image_x

    @image_x.setter
    def image_x(self, image_x):
        """Sets the image_x of this MotionImageInsertionOffset.


        :param image_x: The image_x of this MotionImageInsertionOffset.
        :type image_x: int
        """

        self._image_x = image_x

    @property
    def image_y(self):
        """Gets the image_y of this MotionImageInsertionOffset.


        :return: The image_y of this MotionImageInsertionOffset.
        :rtype: int
        """
        return self._image_y

    @image_y.setter
    def image_y(self, image_y):
        """Sets the image_y of this MotionImageInsertionOffset.


        :param image_y: The image_y of this MotionImageInsertionOffset.
        :type image_y: int
        """

        self._image_y = image_y
