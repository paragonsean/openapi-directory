# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_object_canned_acl import S3ObjectCannedAcl
from openapi_server import util


class S3DestinationAccessControl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canned_acl: S3ObjectCannedAcl=None):
        """S3DestinationAccessControl - a model defined in OpenAPI

        :param canned_acl: The canned_acl of this S3DestinationAccessControl.
        """
        self.openapi_types = {
            'canned_acl': S3ObjectCannedAcl
        }

        self.attribute_map = {
            'canned_acl': 'CannedAcl'
        }

        self._canned_acl = canned_acl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3DestinationAccessControl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3DestinationAccessControl of this S3DestinationAccessControl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canned_acl(self):
        """Gets the canned_acl of this S3DestinationAccessControl.


        :return: The canned_acl of this S3DestinationAccessControl.
        :rtype: S3ObjectCannedAcl
        """
        return self._canned_acl

    @canned_acl.setter
    def canned_acl(self, canned_acl):
        """Sets the canned_acl of this S3DestinationAccessControl.


        :param canned_acl: The canned_acl of this S3DestinationAccessControl.
        :type canned_acl: S3ObjectCannedAcl
        """

        self._canned_acl = canned_acl
