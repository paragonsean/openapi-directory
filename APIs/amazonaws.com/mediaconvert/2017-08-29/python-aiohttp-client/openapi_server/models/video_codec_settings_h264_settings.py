# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.h264_adaptive_quantization import H264AdaptiveQuantization
from openapi_server.models.h264_codec_level import H264CodecLevel
from openapi_server.models.h264_codec_profile import H264CodecProfile
from openapi_server.models.h264_dynamic_sub_gop import H264DynamicSubGop
from openapi_server.models.h264_entropy_encoding import H264EntropyEncoding
from openapi_server.models.h264_field_encoding import H264FieldEncoding
from openapi_server.models.h264_flicker_adaptive_quantization import H264FlickerAdaptiveQuantization
from openapi_server.models.h264_framerate_control import H264FramerateControl
from openapi_server.models.h264_framerate_conversion_algorithm import H264FramerateConversionAlgorithm
from openapi_server.models.h264_gop_b_reference import H264GopBReference
from openapi_server.models.h264_gop_size_units import H264GopSizeUnits
from openapi_server.models.h264_interlace_mode import H264InterlaceMode
from openapi_server.models.h264_par_control import H264ParControl
from openapi_server.models.h264_quality_tuning_level import H264QualityTuningLevel
from openapi_server.models.h264_rate_control_mode import H264RateControlMode
from openapi_server.models.h264_repeat_pps import H264RepeatPps
from openapi_server.models.h264_scan_type_conversion_mode import H264ScanTypeConversionMode
from openapi_server.models.h264_scene_change_detect import H264SceneChangeDetect
from openapi_server.models.h264_settings_bandwidth_reduction_filter import H264SettingsBandwidthReductionFilter
from openapi_server.models.h264_settings_qvbr_settings import H264SettingsQvbrSettings
from openapi_server.models.h264_slow_pal import H264SlowPal
from openapi_server.models.h264_spatial_adaptive_quantization import H264SpatialAdaptiveQuantization
from openapi_server.models.h264_syntax import H264Syntax
from openapi_server.models.h264_telecine import H264Telecine
from openapi_server.models.h264_temporal_adaptive_quantization import H264TemporalAdaptiveQuantization
from openapi_server.models.h264_unregistered_sei_timecode import H264UnregisteredSeiTimecode
from openapi_server import util


class VideoCodecSettingsH264Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adaptive_quantization: H264AdaptiveQuantization=None, bandwidth_reduction_filter: H264SettingsBandwidthReductionFilter=None, bitrate: int=None, codec_level: H264CodecLevel=None, codec_profile: H264CodecProfile=None, dynamic_sub_gop: H264DynamicSubGop=None, entropy_encoding: H264EntropyEncoding=None, field_encoding: H264FieldEncoding=None, flicker_adaptive_quantization: H264FlickerAdaptiveQuantization=None, framerate_control: H264FramerateControl=None, framerate_conversion_algorithm: H264FramerateConversionAlgorithm=None, framerate_denominator: int=None, framerate_numerator: int=None, gop_b_reference: H264GopBReference=None, gop_closed_cadence: int=None, gop_size: float=None, gop_size_units: H264GopSizeUnits=None, hrd_buffer_final_fill_percentage: int=None, hrd_buffer_initial_fill_percentage: int=None, hrd_buffer_size: int=None, interlace_mode: H264InterlaceMode=None, max_bitrate: int=None, min_i_interval: int=None, number_b_frames_between_reference_frames: int=None, number_reference_frames: int=None, par_control: H264ParControl=None, par_denominator: int=None, par_numerator: int=None, quality_tuning_level: H264QualityTuningLevel=None, qvbr_settings: H264SettingsQvbrSettings=None, rate_control_mode: H264RateControlMode=None, repeat_pps: H264RepeatPps=None, scan_type_conversion_mode: H264ScanTypeConversionMode=None, scene_change_detect: H264SceneChangeDetect=None, slices: int=None, slow_pal: H264SlowPal=None, softness: int=None, spatial_adaptive_quantization: H264SpatialAdaptiveQuantization=None, syntax: H264Syntax=None, telecine: H264Telecine=None, temporal_adaptive_quantization: H264TemporalAdaptiveQuantization=None, unregistered_sei_timecode: H264UnregisteredSeiTimecode=None):
        """VideoCodecSettingsH264Settings - a model defined in OpenAPI

        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsH264Settings.
        :param bandwidth_reduction_filter: The bandwidth_reduction_filter of this VideoCodecSettingsH264Settings.
        :param bitrate: The bitrate of this VideoCodecSettingsH264Settings.
        :param codec_level: The codec_level of this VideoCodecSettingsH264Settings.
        :param codec_profile: The codec_profile of this VideoCodecSettingsH264Settings.
        :param dynamic_sub_gop: The dynamic_sub_gop of this VideoCodecSettingsH264Settings.
        :param entropy_encoding: The entropy_encoding of this VideoCodecSettingsH264Settings.
        :param field_encoding: The field_encoding of this VideoCodecSettingsH264Settings.
        :param flicker_adaptive_quantization: The flicker_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :param framerate_control: The framerate_control of this VideoCodecSettingsH264Settings.
        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsH264Settings.
        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsH264Settings.
        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsH264Settings.
        :param gop_b_reference: The gop_b_reference of this VideoCodecSettingsH264Settings.
        :param gop_closed_cadence: The gop_closed_cadence of this VideoCodecSettingsH264Settings.
        :param gop_size: The gop_size of this VideoCodecSettingsH264Settings.
        :param gop_size_units: The gop_size_units of this VideoCodecSettingsH264Settings.
        :param hrd_buffer_final_fill_percentage: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsH264Settings.
        :param hrd_buffer_initial_fill_percentage: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsH264Settings.
        :param hrd_buffer_size: The hrd_buffer_size of this VideoCodecSettingsH264Settings.
        :param interlace_mode: The interlace_mode of this VideoCodecSettingsH264Settings.
        :param max_bitrate: The max_bitrate of this VideoCodecSettingsH264Settings.
        :param min_i_interval: The min_i_interval of this VideoCodecSettingsH264Settings.
        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsH264Settings.
        :param number_reference_frames: The number_reference_frames of this VideoCodecSettingsH264Settings.
        :param par_control: The par_control of this VideoCodecSettingsH264Settings.
        :param par_denominator: The par_denominator of this VideoCodecSettingsH264Settings.
        :param par_numerator: The par_numerator of this VideoCodecSettingsH264Settings.
        :param quality_tuning_level: The quality_tuning_level of this VideoCodecSettingsH264Settings.
        :param qvbr_settings: The qvbr_settings of this VideoCodecSettingsH264Settings.
        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsH264Settings.
        :param repeat_pps: The repeat_pps of this VideoCodecSettingsH264Settings.
        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsH264Settings.
        :param scene_change_detect: The scene_change_detect of this VideoCodecSettingsH264Settings.
        :param slices: The slices of this VideoCodecSettingsH264Settings.
        :param slow_pal: The slow_pal of this VideoCodecSettingsH264Settings.
        :param softness: The softness of this VideoCodecSettingsH264Settings.
        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :param syntax: The syntax of this VideoCodecSettingsH264Settings.
        :param telecine: The telecine of this VideoCodecSettingsH264Settings.
        :param temporal_adaptive_quantization: The temporal_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :param unregistered_sei_timecode: The unregistered_sei_timecode of this VideoCodecSettingsH264Settings.
        """
        self.openapi_types = {
            'adaptive_quantization': H264AdaptiveQuantization,
            'bandwidth_reduction_filter': H264SettingsBandwidthReductionFilter,
            'bitrate': int,
            'codec_level': H264CodecLevel,
            'codec_profile': H264CodecProfile,
            'dynamic_sub_gop': H264DynamicSubGop,
            'entropy_encoding': H264EntropyEncoding,
            'field_encoding': H264FieldEncoding,
            'flicker_adaptive_quantization': H264FlickerAdaptiveQuantization,
            'framerate_control': H264FramerateControl,
            'framerate_conversion_algorithm': H264FramerateConversionAlgorithm,
            'framerate_denominator': int,
            'framerate_numerator': int,
            'gop_b_reference': H264GopBReference,
            'gop_closed_cadence': int,
            'gop_size': float,
            'gop_size_units': H264GopSizeUnits,
            'hrd_buffer_final_fill_percentage': int,
            'hrd_buffer_initial_fill_percentage': int,
            'hrd_buffer_size': int,
            'interlace_mode': H264InterlaceMode,
            'max_bitrate': int,
            'min_i_interval': int,
            'number_b_frames_between_reference_frames': int,
            'number_reference_frames': int,
            'par_control': H264ParControl,
            'par_denominator': int,
            'par_numerator': int,
            'quality_tuning_level': H264QualityTuningLevel,
            'qvbr_settings': H264SettingsQvbrSettings,
            'rate_control_mode': H264RateControlMode,
            'repeat_pps': H264RepeatPps,
            'scan_type_conversion_mode': H264ScanTypeConversionMode,
            'scene_change_detect': H264SceneChangeDetect,
            'slices': int,
            'slow_pal': H264SlowPal,
            'softness': int,
            'spatial_adaptive_quantization': H264SpatialAdaptiveQuantization,
            'syntax': H264Syntax,
            'telecine': H264Telecine,
            'temporal_adaptive_quantization': H264TemporalAdaptiveQuantization,
            'unregistered_sei_timecode': H264UnregisteredSeiTimecode
        }

        self.attribute_map = {
            'adaptive_quantization': 'AdaptiveQuantization',
            'bandwidth_reduction_filter': 'BandwidthReductionFilter',
            'bitrate': 'Bitrate',
            'codec_level': 'CodecLevel',
            'codec_profile': 'CodecProfile',
            'dynamic_sub_gop': 'DynamicSubGop',
            'entropy_encoding': 'EntropyEncoding',
            'field_encoding': 'FieldEncoding',
            'flicker_adaptive_quantization': 'FlickerAdaptiveQuantization',
            'framerate_control': 'FramerateControl',
            'framerate_conversion_algorithm': 'FramerateConversionAlgorithm',
            'framerate_denominator': 'FramerateDenominator',
            'framerate_numerator': 'FramerateNumerator',
            'gop_b_reference': 'GopBReference',
            'gop_closed_cadence': 'GopClosedCadence',
            'gop_size': 'GopSize',
            'gop_size_units': 'GopSizeUnits',
            'hrd_buffer_final_fill_percentage': 'HrdBufferFinalFillPercentage',
            'hrd_buffer_initial_fill_percentage': 'HrdBufferInitialFillPercentage',
            'hrd_buffer_size': 'HrdBufferSize',
            'interlace_mode': 'InterlaceMode',
            'max_bitrate': 'MaxBitrate',
            'min_i_interval': 'MinIInterval',
            'number_b_frames_between_reference_frames': 'NumberBFramesBetweenReferenceFrames',
            'number_reference_frames': 'NumberReferenceFrames',
            'par_control': 'ParControl',
            'par_denominator': 'ParDenominator',
            'par_numerator': 'ParNumerator',
            'quality_tuning_level': 'QualityTuningLevel',
            'qvbr_settings': 'QvbrSettings',
            'rate_control_mode': 'RateControlMode',
            'repeat_pps': 'RepeatPps',
            'scan_type_conversion_mode': 'ScanTypeConversionMode',
            'scene_change_detect': 'SceneChangeDetect',
            'slices': 'Slices',
            'slow_pal': 'SlowPal',
            'softness': 'Softness',
            'spatial_adaptive_quantization': 'SpatialAdaptiveQuantization',
            'syntax': 'Syntax',
            'telecine': 'Telecine',
            'temporal_adaptive_quantization': 'TemporalAdaptiveQuantization',
            'unregistered_sei_timecode': 'UnregisteredSeiTimecode'
        }

        self._adaptive_quantization = adaptive_quantization
        self._bandwidth_reduction_filter = bandwidth_reduction_filter
        self._bitrate = bitrate
        self._codec_level = codec_level
        self._codec_profile = codec_profile
        self._dynamic_sub_gop = dynamic_sub_gop
        self._entropy_encoding = entropy_encoding
        self._field_encoding = field_encoding
        self._flicker_adaptive_quantization = flicker_adaptive_quantization
        self._framerate_control = framerate_control
        self._framerate_conversion_algorithm = framerate_conversion_algorithm
        self._framerate_denominator = framerate_denominator
        self._framerate_numerator = framerate_numerator
        self._gop_b_reference = gop_b_reference
        self._gop_closed_cadence = gop_closed_cadence
        self._gop_size = gop_size
        self._gop_size_units = gop_size_units
        self._hrd_buffer_final_fill_percentage = hrd_buffer_final_fill_percentage
        self._hrd_buffer_initial_fill_percentage = hrd_buffer_initial_fill_percentage
        self._hrd_buffer_size = hrd_buffer_size
        self._interlace_mode = interlace_mode
        self._max_bitrate = max_bitrate
        self._min_i_interval = min_i_interval
        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames
        self._number_reference_frames = number_reference_frames
        self._par_control = par_control
        self._par_denominator = par_denominator
        self._par_numerator = par_numerator
        self._quality_tuning_level = quality_tuning_level
        self._qvbr_settings = qvbr_settings
        self._rate_control_mode = rate_control_mode
        self._repeat_pps = repeat_pps
        self._scan_type_conversion_mode = scan_type_conversion_mode
        self._scene_change_detect = scene_change_detect
        self._slices = slices
        self._slow_pal = slow_pal
        self._softness = softness
        self._spatial_adaptive_quantization = spatial_adaptive_quantization
        self._syntax = syntax
        self._telecine = telecine
        self._temporal_adaptive_quantization = temporal_adaptive_quantization
        self._unregistered_sei_timecode = unregistered_sei_timecode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettingsH264Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings_H264Settings of this VideoCodecSettingsH264Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adaptive_quantization(self):
        """Gets the adaptive_quantization of this VideoCodecSettingsH264Settings.


        :return: The adaptive_quantization of this VideoCodecSettingsH264Settings.
        :rtype: H264AdaptiveQuantization
        """
        return self._adaptive_quantization

    @adaptive_quantization.setter
    def adaptive_quantization(self, adaptive_quantization):
        """Sets the adaptive_quantization of this VideoCodecSettingsH264Settings.


        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsH264Settings.
        :type adaptive_quantization: H264AdaptiveQuantization
        """

        self._adaptive_quantization = adaptive_quantization

    @property
    def bandwidth_reduction_filter(self):
        """Gets the bandwidth_reduction_filter of this VideoCodecSettingsH264Settings.


        :return: The bandwidth_reduction_filter of this VideoCodecSettingsH264Settings.
        :rtype: H264SettingsBandwidthReductionFilter
        """
        return self._bandwidth_reduction_filter

    @bandwidth_reduction_filter.setter
    def bandwidth_reduction_filter(self, bandwidth_reduction_filter):
        """Sets the bandwidth_reduction_filter of this VideoCodecSettingsH264Settings.


        :param bandwidth_reduction_filter: The bandwidth_reduction_filter of this VideoCodecSettingsH264Settings.
        :type bandwidth_reduction_filter: H264SettingsBandwidthReductionFilter
        """

        self._bandwidth_reduction_filter = bandwidth_reduction_filter

    @property
    def bitrate(self):
        """Gets the bitrate of this VideoCodecSettingsH264Settings.


        :return: The bitrate of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this VideoCodecSettingsH264Settings.


        :param bitrate: The bitrate of this VideoCodecSettingsH264Settings.
        :type bitrate: int
        """

        self._bitrate = bitrate

    @property
    def codec_level(self):
        """Gets the codec_level of this VideoCodecSettingsH264Settings.


        :return: The codec_level of this VideoCodecSettingsH264Settings.
        :rtype: H264CodecLevel
        """
        return self._codec_level

    @codec_level.setter
    def codec_level(self, codec_level):
        """Sets the codec_level of this VideoCodecSettingsH264Settings.


        :param codec_level: The codec_level of this VideoCodecSettingsH264Settings.
        :type codec_level: H264CodecLevel
        """

        self._codec_level = codec_level

    @property
    def codec_profile(self):
        """Gets the codec_profile of this VideoCodecSettingsH264Settings.


        :return: The codec_profile of this VideoCodecSettingsH264Settings.
        :rtype: H264CodecProfile
        """
        return self._codec_profile

    @codec_profile.setter
    def codec_profile(self, codec_profile):
        """Sets the codec_profile of this VideoCodecSettingsH264Settings.


        :param codec_profile: The codec_profile of this VideoCodecSettingsH264Settings.
        :type codec_profile: H264CodecProfile
        """

        self._codec_profile = codec_profile

    @property
    def dynamic_sub_gop(self):
        """Gets the dynamic_sub_gop of this VideoCodecSettingsH264Settings.


        :return: The dynamic_sub_gop of this VideoCodecSettingsH264Settings.
        :rtype: H264DynamicSubGop
        """
        return self._dynamic_sub_gop

    @dynamic_sub_gop.setter
    def dynamic_sub_gop(self, dynamic_sub_gop):
        """Sets the dynamic_sub_gop of this VideoCodecSettingsH264Settings.


        :param dynamic_sub_gop: The dynamic_sub_gop of this VideoCodecSettingsH264Settings.
        :type dynamic_sub_gop: H264DynamicSubGop
        """

        self._dynamic_sub_gop = dynamic_sub_gop

    @property
    def entropy_encoding(self):
        """Gets the entropy_encoding of this VideoCodecSettingsH264Settings.


        :return: The entropy_encoding of this VideoCodecSettingsH264Settings.
        :rtype: H264EntropyEncoding
        """
        return self._entropy_encoding

    @entropy_encoding.setter
    def entropy_encoding(self, entropy_encoding):
        """Sets the entropy_encoding of this VideoCodecSettingsH264Settings.


        :param entropy_encoding: The entropy_encoding of this VideoCodecSettingsH264Settings.
        :type entropy_encoding: H264EntropyEncoding
        """

        self._entropy_encoding = entropy_encoding

    @property
    def field_encoding(self):
        """Gets the field_encoding of this VideoCodecSettingsH264Settings.


        :return: The field_encoding of this VideoCodecSettingsH264Settings.
        :rtype: H264FieldEncoding
        """
        return self._field_encoding

    @field_encoding.setter
    def field_encoding(self, field_encoding):
        """Sets the field_encoding of this VideoCodecSettingsH264Settings.


        :param field_encoding: The field_encoding of this VideoCodecSettingsH264Settings.
        :type field_encoding: H264FieldEncoding
        """

        self._field_encoding = field_encoding

    @property
    def flicker_adaptive_quantization(self):
        """Gets the flicker_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :return: The flicker_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :rtype: H264FlickerAdaptiveQuantization
        """
        return self._flicker_adaptive_quantization

    @flicker_adaptive_quantization.setter
    def flicker_adaptive_quantization(self, flicker_adaptive_quantization):
        """Sets the flicker_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :param flicker_adaptive_quantization: The flicker_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :type flicker_adaptive_quantization: H264FlickerAdaptiveQuantization
        """

        self._flicker_adaptive_quantization = flicker_adaptive_quantization

    @property
    def framerate_control(self):
        """Gets the framerate_control of this VideoCodecSettingsH264Settings.


        :return: The framerate_control of this VideoCodecSettingsH264Settings.
        :rtype: H264FramerateControl
        """
        return self._framerate_control

    @framerate_control.setter
    def framerate_control(self, framerate_control):
        """Sets the framerate_control of this VideoCodecSettingsH264Settings.


        :param framerate_control: The framerate_control of this VideoCodecSettingsH264Settings.
        :type framerate_control: H264FramerateControl
        """

        self._framerate_control = framerate_control

    @property
    def framerate_conversion_algorithm(self):
        """Gets the framerate_conversion_algorithm of this VideoCodecSettingsH264Settings.


        :return: The framerate_conversion_algorithm of this VideoCodecSettingsH264Settings.
        :rtype: H264FramerateConversionAlgorithm
        """
        return self._framerate_conversion_algorithm

    @framerate_conversion_algorithm.setter
    def framerate_conversion_algorithm(self, framerate_conversion_algorithm):
        """Sets the framerate_conversion_algorithm of this VideoCodecSettingsH264Settings.


        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsH264Settings.
        :type framerate_conversion_algorithm: H264FramerateConversionAlgorithm
        """

        self._framerate_conversion_algorithm = framerate_conversion_algorithm

    @property
    def framerate_denominator(self):
        """Gets the framerate_denominator of this VideoCodecSettingsH264Settings.


        :return: The framerate_denominator of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._framerate_denominator

    @framerate_denominator.setter
    def framerate_denominator(self, framerate_denominator):
        """Sets the framerate_denominator of this VideoCodecSettingsH264Settings.


        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsH264Settings.
        :type framerate_denominator: int
        """

        self._framerate_denominator = framerate_denominator

    @property
    def framerate_numerator(self):
        """Gets the framerate_numerator of this VideoCodecSettingsH264Settings.


        :return: The framerate_numerator of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._framerate_numerator

    @framerate_numerator.setter
    def framerate_numerator(self, framerate_numerator):
        """Sets the framerate_numerator of this VideoCodecSettingsH264Settings.


        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsH264Settings.
        :type framerate_numerator: int
        """

        self._framerate_numerator = framerate_numerator

    @property
    def gop_b_reference(self):
        """Gets the gop_b_reference of this VideoCodecSettingsH264Settings.


        :return: The gop_b_reference of this VideoCodecSettingsH264Settings.
        :rtype: H264GopBReference
        """
        return self._gop_b_reference

    @gop_b_reference.setter
    def gop_b_reference(self, gop_b_reference):
        """Sets the gop_b_reference of this VideoCodecSettingsH264Settings.


        :param gop_b_reference: The gop_b_reference of this VideoCodecSettingsH264Settings.
        :type gop_b_reference: H264GopBReference
        """

        self._gop_b_reference = gop_b_reference

    @property
    def gop_closed_cadence(self):
        """Gets the gop_closed_cadence of this VideoCodecSettingsH264Settings.


        :return: The gop_closed_cadence of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._gop_closed_cadence

    @gop_closed_cadence.setter
    def gop_closed_cadence(self, gop_closed_cadence):
        """Sets the gop_closed_cadence of this VideoCodecSettingsH264Settings.


        :param gop_closed_cadence: The gop_closed_cadence of this VideoCodecSettingsH264Settings.
        :type gop_closed_cadence: int
        """

        self._gop_closed_cadence = gop_closed_cadence

    @property
    def gop_size(self):
        """Gets the gop_size of this VideoCodecSettingsH264Settings.


        :return: The gop_size of this VideoCodecSettingsH264Settings.
        :rtype: float
        """
        return self._gop_size

    @gop_size.setter
    def gop_size(self, gop_size):
        """Sets the gop_size of this VideoCodecSettingsH264Settings.


        :param gop_size: The gop_size of this VideoCodecSettingsH264Settings.
        :type gop_size: float
        """

        self._gop_size = gop_size

    @property
    def gop_size_units(self):
        """Gets the gop_size_units of this VideoCodecSettingsH264Settings.


        :return: The gop_size_units of this VideoCodecSettingsH264Settings.
        :rtype: H264GopSizeUnits
        """
        return self._gop_size_units

    @gop_size_units.setter
    def gop_size_units(self, gop_size_units):
        """Sets the gop_size_units of this VideoCodecSettingsH264Settings.


        :param gop_size_units: The gop_size_units of this VideoCodecSettingsH264Settings.
        :type gop_size_units: H264GopSizeUnits
        """

        self._gop_size_units = gop_size_units

    @property
    def hrd_buffer_final_fill_percentage(self):
        """Gets the hrd_buffer_final_fill_percentage of this VideoCodecSettingsH264Settings.


        :return: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._hrd_buffer_final_fill_percentage

    @hrd_buffer_final_fill_percentage.setter
    def hrd_buffer_final_fill_percentage(self, hrd_buffer_final_fill_percentage):
        """Sets the hrd_buffer_final_fill_percentage of this VideoCodecSettingsH264Settings.


        :param hrd_buffer_final_fill_percentage: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsH264Settings.
        :type hrd_buffer_final_fill_percentage: int
        """

        self._hrd_buffer_final_fill_percentage = hrd_buffer_final_fill_percentage

    @property
    def hrd_buffer_initial_fill_percentage(self):
        """Gets the hrd_buffer_initial_fill_percentage of this VideoCodecSettingsH264Settings.


        :return: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._hrd_buffer_initial_fill_percentage

    @hrd_buffer_initial_fill_percentage.setter
    def hrd_buffer_initial_fill_percentage(self, hrd_buffer_initial_fill_percentage):
        """Sets the hrd_buffer_initial_fill_percentage of this VideoCodecSettingsH264Settings.


        :param hrd_buffer_initial_fill_percentage: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsH264Settings.
        :type hrd_buffer_initial_fill_percentage: int
        """

        self._hrd_buffer_initial_fill_percentage = hrd_buffer_initial_fill_percentage

    @property
    def hrd_buffer_size(self):
        """Gets the hrd_buffer_size of this VideoCodecSettingsH264Settings.


        :return: The hrd_buffer_size of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._hrd_buffer_size

    @hrd_buffer_size.setter
    def hrd_buffer_size(self, hrd_buffer_size):
        """Sets the hrd_buffer_size of this VideoCodecSettingsH264Settings.


        :param hrd_buffer_size: The hrd_buffer_size of this VideoCodecSettingsH264Settings.
        :type hrd_buffer_size: int
        """

        self._hrd_buffer_size = hrd_buffer_size

    @property
    def interlace_mode(self):
        """Gets the interlace_mode of this VideoCodecSettingsH264Settings.


        :return: The interlace_mode of this VideoCodecSettingsH264Settings.
        :rtype: H264InterlaceMode
        """
        return self._interlace_mode

    @interlace_mode.setter
    def interlace_mode(self, interlace_mode):
        """Sets the interlace_mode of this VideoCodecSettingsH264Settings.


        :param interlace_mode: The interlace_mode of this VideoCodecSettingsH264Settings.
        :type interlace_mode: H264InterlaceMode
        """

        self._interlace_mode = interlace_mode

    @property
    def max_bitrate(self):
        """Gets the max_bitrate of this VideoCodecSettingsH264Settings.


        :return: The max_bitrate of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._max_bitrate

    @max_bitrate.setter
    def max_bitrate(self, max_bitrate):
        """Sets the max_bitrate of this VideoCodecSettingsH264Settings.


        :param max_bitrate: The max_bitrate of this VideoCodecSettingsH264Settings.
        :type max_bitrate: int
        """

        self._max_bitrate = max_bitrate

    @property
    def min_i_interval(self):
        """Gets the min_i_interval of this VideoCodecSettingsH264Settings.


        :return: The min_i_interval of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._min_i_interval

    @min_i_interval.setter
    def min_i_interval(self, min_i_interval):
        """Sets the min_i_interval of this VideoCodecSettingsH264Settings.


        :param min_i_interval: The min_i_interval of this VideoCodecSettingsH264Settings.
        :type min_i_interval: int
        """

        self._min_i_interval = min_i_interval

    @property
    def number_b_frames_between_reference_frames(self):
        """Gets the number_b_frames_between_reference_frames of this VideoCodecSettingsH264Settings.


        :return: The number_b_frames_between_reference_frames of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._number_b_frames_between_reference_frames

    @number_b_frames_between_reference_frames.setter
    def number_b_frames_between_reference_frames(self, number_b_frames_between_reference_frames):
        """Sets the number_b_frames_between_reference_frames of this VideoCodecSettingsH264Settings.


        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsH264Settings.
        :type number_b_frames_between_reference_frames: int
        """

        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames

    @property
    def number_reference_frames(self):
        """Gets the number_reference_frames of this VideoCodecSettingsH264Settings.


        :return: The number_reference_frames of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._number_reference_frames

    @number_reference_frames.setter
    def number_reference_frames(self, number_reference_frames):
        """Sets the number_reference_frames of this VideoCodecSettingsH264Settings.


        :param number_reference_frames: The number_reference_frames of this VideoCodecSettingsH264Settings.
        :type number_reference_frames: int
        """

        self._number_reference_frames = number_reference_frames

    @property
    def par_control(self):
        """Gets the par_control of this VideoCodecSettingsH264Settings.


        :return: The par_control of this VideoCodecSettingsH264Settings.
        :rtype: H264ParControl
        """
        return self._par_control

    @par_control.setter
    def par_control(self, par_control):
        """Sets the par_control of this VideoCodecSettingsH264Settings.


        :param par_control: The par_control of this VideoCodecSettingsH264Settings.
        :type par_control: H264ParControl
        """

        self._par_control = par_control

    @property
    def par_denominator(self):
        """Gets the par_denominator of this VideoCodecSettingsH264Settings.


        :return: The par_denominator of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._par_denominator

    @par_denominator.setter
    def par_denominator(self, par_denominator):
        """Sets the par_denominator of this VideoCodecSettingsH264Settings.


        :param par_denominator: The par_denominator of this VideoCodecSettingsH264Settings.
        :type par_denominator: int
        """

        self._par_denominator = par_denominator

    @property
    def par_numerator(self):
        """Gets the par_numerator of this VideoCodecSettingsH264Settings.


        :return: The par_numerator of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._par_numerator

    @par_numerator.setter
    def par_numerator(self, par_numerator):
        """Sets the par_numerator of this VideoCodecSettingsH264Settings.


        :param par_numerator: The par_numerator of this VideoCodecSettingsH264Settings.
        :type par_numerator: int
        """

        self._par_numerator = par_numerator

    @property
    def quality_tuning_level(self):
        """Gets the quality_tuning_level of this VideoCodecSettingsH264Settings.


        :return: The quality_tuning_level of this VideoCodecSettingsH264Settings.
        :rtype: H264QualityTuningLevel
        """
        return self._quality_tuning_level

    @quality_tuning_level.setter
    def quality_tuning_level(self, quality_tuning_level):
        """Sets the quality_tuning_level of this VideoCodecSettingsH264Settings.


        :param quality_tuning_level: The quality_tuning_level of this VideoCodecSettingsH264Settings.
        :type quality_tuning_level: H264QualityTuningLevel
        """

        self._quality_tuning_level = quality_tuning_level

    @property
    def qvbr_settings(self):
        """Gets the qvbr_settings of this VideoCodecSettingsH264Settings.


        :return: The qvbr_settings of this VideoCodecSettingsH264Settings.
        :rtype: H264SettingsQvbrSettings
        """
        return self._qvbr_settings

    @qvbr_settings.setter
    def qvbr_settings(self, qvbr_settings):
        """Sets the qvbr_settings of this VideoCodecSettingsH264Settings.


        :param qvbr_settings: The qvbr_settings of this VideoCodecSettingsH264Settings.
        :type qvbr_settings: H264SettingsQvbrSettings
        """

        self._qvbr_settings = qvbr_settings

    @property
    def rate_control_mode(self):
        """Gets the rate_control_mode of this VideoCodecSettingsH264Settings.


        :return: The rate_control_mode of this VideoCodecSettingsH264Settings.
        :rtype: H264RateControlMode
        """
        return self._rate_control_mode

    @rate_control_mode.setter
    def rate_control_mode(self, rate_control_mode):
        """Sets the rate_control_mode of this VideoCodecSettingsH264Settings.


        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsH264Settings.
        :type rate_control_mode: H264RateControlMode
        """

        self._rate_control_mode = rate_control_mode

    @property
    def repeat_pps(self):
        """Gets the repeat_pps of this VideoCodecSettingsH264Settings.


        :return: The repeat_pps of this VideoCodecSettingsH264Settings.
        :rtype: H264RepeatPps
        """
        return self._repeat_pps

    @repeat_pps.setter
    def repeat_pps(self, repeat_pps):
        """Sets the repeat_pps of this VideoCodecSettingsH264Settings.


        :param repeat_pps: The repeat_pps of this VideoCodecSettingsH264Settings.
        :type repeat_pps: H264RepeatPps
        """

        self._repeat_pps = repeat_pps

    @property
    def scan_type_conversion_mode(self):
        """Gets the scan_type_conversion_mode of this VideoCodecSettingsH264Settings.


        :return: The scan_type_conversion_mode of this VideoCodecSettingsH264Settings.
        :rtype: H264ScanTypeConversionMode
        """
        return self._scan_type_conversion_mode

    @scan_type_conversion_mode.setter
    def scan_type_conversion_mode(self, scan_type_conversion_mode):
        """Sets the scan_type_conversion_mode of this VideoCodecSettingsH264Settings.


        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsH264Settings.
        :type scan_type_conversion_mode: H264ScanTypeConversionMode
        """

        self._scan_type_conversion_mode = scan_type_conversion_mode

    @property
    def scene_change_detect(self):
        """Gets the scene_change_detect of this VideoCodecSettingsH264Settings.


        :return: The scene_change_detect of this VideoCodecSettingsH264Settings.
        :rtype: H264SceneChangeDetect
        """
        return self._scene_change_detect

    @scene_change_detect.setter
    def scene_change_detect(self, scene_change_detect):
        """Sets the scene_change_detect of this VideoCodecSettingsH264Settings.


        :param scene_change_detect: The scene_change_detect of this VideoCodecSettingsH264Settings.
        :type scene_change_detect: H264SceneChangeDetect
        """

        self._scene_change_detect = scene_change_detect

    @property
    def slices(self):
        """Gets the slices of this VideoCodecSettingsH264Settings.


        :return: The slices of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._slices

    @slices.setter
    def slices(self, slices):
        """Sets the slices of this VideoCodecSettingsH264Settings.


        :param slices: The slices of this VideoCodecSettingsH264Settings.
        :type slices: int
        """

        self._slices = slices

    @property
    def slow_pal(self):
        """Gets the slow_pal of this VideoCodecSettingsH264Settings.


        :return: The slow_pal of this VideoCodecSettingsH264Settings.
        :rtype: H264SlowPal
        """
        return self._slow_pal

    @slow_pal.setter
    def slow_pal(self, slow_pal):
        """Sets the slow_pal of this VideoCodecSettingsH264Settings.


        :param slow_pal: The slow_pal of this VideoCodecSettingsH264Settings.
        :type slow_pal: H264SlowPal
        """

        self._slow_pal = slow_pal

    @property
    def softness(self):
        """Gets the softness of this VideoCodecSettingsH264Settings.


        :return: The softness of this VideoCodecSettingsH264Settings.
        :rtype: int
        """
        return self._softness

    @softness.setter
    def softness(self, softness):
        """Sets the softness of this VideoCodecSettingsH264Settings.


        :param softness: The softness of this VideoCodecSettingsH264Settings.
        :type softness: int
        """

        self._softness = softness

    @property
    def spatial_adaptive_quantization(self):
        """Gets the spatial_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :return: The spatial_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :rtype: H264SpatialAdaptiveQuantization
        """
        return self._spatial_adaptive_quantization

    @spatial_adaptive_quantization.setter
    def spatial_adaptive_quantization(self, spatial_adaptive_quantization):
        """Sets the spatial_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :type spatial_adaptive_quantization: H264SpatialAdaptiveQuantization
        """

        self._spatial_adaptive_quantization = spatial_adaptive_quantization

    @property
    def syntax(self):
        """Gets the syntax of this VideoCodecSettingsH264Settings.


        :return: The syntax of this VideoCodecSettingsH264Settings.
        :rtype: H264Syntax
        """
        return self._syntax

    @syntax.setter
    def syntax(self, syntax):
        """Sets the syntax of this VideoCodecSettingsH264Settings.


        :param syntax: The syntax of this VideoCodecSettingsH264Settings.
        :type syntax: H264Syntax
        """

        self._syntax = syntax

    @property
    def telecine(self):
        """Gets the telecine of this VideoCodecSettingsH264Settings.


        :return: The telecine of this VideoCodecSettingsH264Settings.
        :rtype: H264Telecine
        """
        return self._telecine

    @telecine.setter
    def telecine(self, telecine):
        """Sets the telecine of this VideoCodecSettingsH264Settings.


        :param telecine: The telecine of this VideoCodecSettingsH264Settings.
        :type telecine: H264Telecine
        """

        self._telecine = telecine

    @property
    def temporal_adaptive_quantization(self):
        """Gets the temporal_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :return: The temporal_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :rtype: H264TemporalAdaptiveQuantization
        """
        return self._temporal_adaptive_quantization

    @temporal_adaptive_quantization.setter
    def temporal_adaptive_quantization(self, temporal_adaptive_quantization):
        """Sets the temporal_adaptive_quantization of this VideoCodecSettingsH264Settings.


        :param temporal_adaptive_quantization: The temporal_adaptive_quantization of this VideoCodecSettingsH264Settings.
        :type temporal_adaptive_quantization: H264TemporalAdaptiveQuantization
        """

        self._temporal_adaptive_quantization = temporal_adaptive_quantization

    @property
    def unregistered_sei_timecode(self):
        """Gets the unregistered_sei_timecode of this VideoCodecSettingsH264Settings.


        :return: The unregistered_sei_timecode of this VideoCodecSettingsH264Settings.
        :rtype: H264UnregisteredSeiTimecode
        """
        return self._unregistered_sei_timecode

    @unregistered_sei_timecode.setter
    def unregistered_sei_timecode(self, unregistered_sei_timecode):
        """Sets the unregistered_sei_timecode of this VideoCodecSettingsH264Settings.


        :param unregistered_sei_timecode: The unregistered_sei_timecode of this VideoCodecSettingsH264Settings.
        :type unregistered_sei_timecode: H264UnregisteredSeiTimecode
        """

        self._unregistered_sei_timecode = unregistered_sei_timecode
