# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.av1_adaptive_quantization import Av1AdaptiveQuantization
from openapi_server.models.av1_bit_depth import Av1BitDepth
from openapi_server.models.av1_framerate_control import Av1FramerateControl
from openapi_server.models.av1_framerate_conversion_algorithm import Av1FramerateConversionAlgorithm
from openapi_server.models.av1_rate_control_mode import Av1RateControlMode
from openapi_server.models.av1_settings_qvbr_settings import Av1SettingsQvbrSettings
from openapi_server.models.av1_spatial_adaptive_quantization import Av1SpatialAdaptiveQuantization
from openapi_server import util


class VideoCodecSettingsAv1Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adaptive_quantization: Av1AdaptiveQuantization=None, bit_depth: Av1BitDepth=None, framerate_control: Av1FramerateControl=None, framerate_conversion_algorithm: Av1FramerateConversionAlgorithm=None, framerate_denominator: int=None, framerate_numerator: int=None, gop_size: float=None, max_bitrate: int=None, number_b_frames_between_reference_frames: int=None, qvbr_settings: Av1SettingsQvbrSettings=None, rate_control_mode: Av1RateControlMode=None, slices: int=None, spatial_adaptive_quantization: Av1SpatialAdaptiveQuantization=None):
        """VideoCodecSettingsAv1Settings - a model defined in OpenAPI

        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsAv1Settings.
        :param bit_depth: The bit_depth of this VideoCodecSettingsAv1Settings.
        :param framerate_control: The framerate_control of this VideoCodecSettingsAv1Settings.
        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsAv1Settings.
        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsAv1Settings.
        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsAv1Settings.
        :param gop_size: The gop_size of this VideoCodecSettingsAv1Settings.
        :param max_bitrate: The max_bitrate of this VideoCodecSettingsAv1Settings.
        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsAv1Settings.
        :param qvbr_settings: The qvbr_settings of this VideoCodecSettingsAv1Settings.
        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsAv1Settings.
        :param slices: The slices of this VideoCodecSettingsAv1Settings.
        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsAv1Settings.
        """
        self.openapi_types = {
            'adaptive_quantization': Av1AdaptiveQuantization,
            'bit_depth': Av1BitDepth,
            'framerate_control': Av1FramerateControl,
            'framerate_conversion_algorithm': Av1FramerateConversionAlgorithm,
            'framerate_denominator': int,
            'framerate_numerator': int,
            'gop_size': float,
            'max_bitrate': int,
            'number_b_frames_between_reference_frames': int,
            'qvbr_settings': Av1SettingsQvbrSettings,
            'rate_control_mode': Av1RateControlMode,
            'slices': int,
            'spatial_adaptive_quantization': Av1SpatialAdaptiveQuantization
        }

        self.attribute_map = {
            'adaptive_quantization': 'AdaptiveQuantization',
            'bit_depth': 'BitDepth',
            'framerate_control': 'FramerateControl',
            'framerate_conversion_algorithm': 'FramerateConversionAlgorithm',
            'framerate_denominator': 'FramerateDenominator',
            'framerate_numerator': 'FramerateNumerator',
            'gop_size': 'GopSize',
            'max_bitrate': 'MaxBitrate',
            'number_b_frames_between_reference_frames': 'NumberBFramesBetweenReferenceFrames',
            'qvbr_settings': 'QvbrSettings',
            'rate_control_mode': 'RateControlMode',
            'slices': 'Slices',
            'spatial_adaptive_quantization': 'SpatialAdaptiveQuantization'
        }

        self._adaptive_quantization = adaptive_quantization
        self._bit_depth = bit_depth
        self._framerate_control = framerate_control
        self._framerate_conversion_algorithm = framerate_conversion_algorithm
        self._framerate_denominator = framerate_denominator
        self._framerate_numerator = framerate_numerator
        self._gop_size = gop_size
        self._max_bitrate = max_bitrate
        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames
        self._qvbr_settings = qvbr_settings
        self._rate_control_mode = rate_control_mode
        self._slices = slices
        self._spatial_adaptive_quantization = spatial_adaptive_quantization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettingsAv1Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings_Av1Settings of this VideoCodecSettingsAv1Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adaptive_quantization(self):
        """Gets the adaptive_quantization of this VideoCodecSettingsAv1Settings.


        :return: The adaptive_quantization of this VideoCodecSettingsAv1Settings.
        :rtype: Av1AdaptiveQuantization
        """
        return self._adaptive_quantization

    @adaptive_quantization.setter
    def adaptive_quantization(self, adaptive_quantization):
        """Sets the adaptive_quantization of this VideoCodecSettingsAv1Settings.


        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsAv1Settings.
        :type adaptive_quantization: Av1AdaptiveQuantization
        """

        self._adaptive_quantization = adaptive_quantization

    @property
    def bit_depth(self):
        """Gets the bit_depth of this VideoCodecSettingsAv1Settings.


        :return: The bit_depth of this VideoCodecSettingsAv1Settings.
        :rtype: Av1BitDepth
        """
        return self._bit_depth

    @bit_depth.setter
    def bit_depth(self, bit_depth):
        """Sets the bit_depth of this VideoCodecSettingsAv1Settings.


        :param bit_depth: The bit_depth of this VideoCodecSettingsAv1Settings.
        :type bit_depth: Av1BitDepth
        """

        self._bit_depth = bit_depth

    @property
    def framerate_control(self):
        """Gets the framerate_control of this VideoCodecSettingsAv1Settings.


        :return: The framerate_control of this VideoCodecSettingsAv1Settings.
        :rtype: Av1FramerateControl
        """
        return self._framerate_control

    @framerate_control.setter
    def framerate_control(self, framerate_control):
        """Sets the framerate_control of this VideoCodecSettingsAv1Settings.


        :param framerate_control: The framerate_control of this VideoCodecSettingsAv1Settings.
        :type framerate_control: Av1FramerateControl
        """

        self._framerate_control = framerate_control

    @property
    def framerate_conversion_algorithm(self):
        """Gets the framerate_conversion_algorithm of this VideoCodecSettingsAv1Settings.


        :return: The framerate_conversion_algorithm of this VideoCodecSettingsAv1Settings.
        :rtype: Av1FramerateConversionAlgorithm
        """
        return self._framerate_conversion_algorithm

    @framerate_conversion_algorithm.setter
    def framerate_conversion_algorithm(self, framerate_conversion_algorithm):
        """Sets the framerate_conversion_algorithm of this VideoCodecSettingsAv1Settings.


        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsAv1Settings.
        :type framerate_conversion_algorithm: Av1FramerateConversionAlgorithm
        """

        self._framerate_conversion_algorithm = framerate_conversion_algorithm

    @property
    def framerate_denominator(self):
        """Gets the framerate_denominator of this VideoCodecSettingsAv1Settings.


        :return: The framerate_denominator of this VideoCodecSettingsAv1Settings.
        :rtype: int
        """
        return self._framerate_denominator

    @framerate_denominator.setter
    def framerate_denominator(self, framerate_denominator):
        """Sets the framerate_denominator of this VideoCodecSettingsAv1Settings.


        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsAv1Settings.
        :type framerate_denominator: int
        """

        self._framerate_denominator = framerate_denominator

    @property
    def framerate_numerator(self):
        """Gets the framerate_numerator of this VideoCodecSettingsAv1Settings.


        :return: The framerate_numerator of this VideoCodecSettingsAv1Settings.
        :rtype: int
        """
        return self._framerate_numerator

    @framerate_numerator.setter
    def framerate_numerator(self, framerate_numerator):
        """Sets the framerate_numerator of this VideoCodecSettingsAv1Settings.


        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsAv1Settings.
        :type framerate_numerator: int
        """

        self._framerate_numerator = framerate_numerator

    @property
    def gop_size(self):
        """Gets the gop_size of this VideoCodecSettingsAv1Settings.


        :return: The gop_size of this VideoCodecSettingsAv1Settings.
        :rtype: float
        """
        return self._gop_size

    @gop_size.setter
    def gop_size(self, gop_size):
        """Sets the gop_size of this VideoCodecSettingsAv1Settings.


        :param gop_size: The gop_size of this VideoCodecSettingsAv1Settings.
        :type gop_size: float
        """

        self._gop_size = gop_size

    @property
    def max_bitrate(self):
        """Gets the max_bitrate of this VideoCodecSettingsAv1Settings.


        :return: The max_bitrate of this VideoCodecSettingsAv1Settings.
        :rtype: int
        """
        return self._max_bitrate

    @max_bitrate.setter
    def max_bitrate(self, max_bitrate):
        """Sets the max_bitrate of this VideoCodecSettingsAv1Settings.


        :param max_bitrate: The max_bitrate of this VideoCodecSettingsAv1Settings.
        :type max_bitrate: int
        """

        self._max_bitrate = max_bitrate

    @property
    def number_b_frames_between_reference_frames(self):
        """Gets the number_b_frames_between_reference_frames of this VideoCodecSettingsAv1Settings.


        :return: The number_b_frames_between_reference_frames of this VideoCodecSettingsAv1Settings.
        :rtype: int
        """
        return self._number_b_frames_between_reference_frames

    @number_b_frames_between_reference_frames.setter
    def number_b_frames_between_reference_frames(self, number_b_frames_between_reference_frames):
        """Sets the number_b_frames_between_reference_frames of this VideoCodecSettingsAv1Settings.


        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsAv1Settings.
        :type number_b_frames_between_reference_frames: int
        """

        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames

    @property
    def qvbr_settings(self):
        """Gets the qvbr_settings of this VideoCodecSettingsAv1Settings.


        :return: The qvbr_settings of this VideoCodecSettingsAv1Settings.
        :rtype: Av1SettingsQvbrSettings
        """
        return self._qvbr_settings

    @qvbr_settings.setter
    def qvbr_settings(self, qvbr_settings):
        """Sets the qvbr_settings of this VideoCodecSettingsAv1Settings.


        :param qvbr_settings: The qvbr_settings of this VideoCodecSettingsAv1Settings.
        :type qvbr_settings: Av1SettingsQvbrSettings
        """

        self._qvbr_settings = qvbr_settings

    @property
    def rate_control_mode(self):
        """Gets the rate_control_mode of this VideoCodecSettingsAv1Settings.


        :return: The rate_control_mode of this VideoCodecSettingsAv1Settings.
        :rtype: Av1RateControlMode
        """
        return self._rate_control_mode

    @rate_control_mode.setter
    def rate_control_mode(self, rate_control_mode):
        """Sets the rate_control_mode of this VideoCodecSettingsAv1Settings.


        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsAv1Settings.
        :type rate_control_mode: Av1RateControlMode
        """

        self._rate_control_mode = rate_control_mode

    @property
    def slices(self):
        """Gets the slices of this VideoCodecSettingsAv1Settings.


        :return: The slices of this VideoCodecSettingsAv1Settings.
        :rtype: int
        """
        return self._slices

    @slices.setter
    def slices(self, slices):
        """Sets the slices of this VideoCodecSettingsAv1Settings.


        :param slices: The slices of this VideoCodecSettingsAv1Settings.
        :type slices: int
        """

        self._slices = slices

    @property
    def spatial_adaptive_quantization(self):
        """Gets the spatial_adaptive_quantization of this VideoCodecSettingsAv1Settings.


        :return: The spatial_adaptive_quantization of this VideoCodecSettingsAv1Settings.
        :rtype: Av1SpatialAdaptiveQuantization
        """
        return self._spatial_adaptive_quantization

    @spatial_adaptive_quantization.setter
    def spatial_adaptive_quantization(self, spatial_adaptive_quantization):
        """Sets the spatial_adaptive_quantization of this VideoCodecSettingsAv1Settings.


        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsAv1Settings.
        :type spatial_adaptive_quantization: Av1SpatialAdaptiveQuantization
        """

        self._spatial_adaptive_quantization = spatial_adaptive_quantization
