# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.motion_image_inserter_framerate import MotionImageInserterFramerate
from openapi_server.models.motion_image_inserter_offset import MotionImageInserterOffset
from openapi_server.models.motion_image_insertion_mode import MotionImageInsertionMode
from openapi_server.models.motion_image_playback import MotionImagePlayback
from openapi_server import util


class MotionImageInserter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, framerate: MotionImageInserterFramerate=None, input: str=None, insertion_mode: MotionImageInsertionMode=None, offset: MotionImageInserterOffset=None, playback: MotionImagePlayback=None, start_time: str=None):
        """MotionImageInserter - a model defined in OpenAPI

        :param framerate: The framerate of this MotionImageInserter.
        :param input: The input of this MotionImageInserter.
        :param insertion_mode: The insertion_mode of this MotionImageInserter.
        :param offset: The offset of this MotionImageInserter.
        :param playback: The playback of this MotionImageInserter.
        :param start_time: The start_time of this MotionImageInserter.
        """
        self.openapi_types = {
            'framerate': MotionImageInserterFramerate,
            'input': str,
            'insertion_mode': MotionImageInsertionMode,
            'offset': MotionImageInserterOffset,
            'playback': MotionImagePlayback,
            'start_time': str
        }

        self.attribute_map = {
            'framerate': 'Framerate',
            'input': 'Input',
            'insertion_mode': 'InsertionMode',
            'offset': 'Offset',
            'playback': 'Playback',
            'start_time': 'StartTime'
        }

        self._framerate = framerate
        self._input = input
        self._insertion_mode = insertion_mode
        self._offset = offset
        self._playback = playback
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MotionImageInserter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MotionImageInserter of this MotionImageInserter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def framerate(self):
        """Gets the framerate of this MotionImageInserter.


        :return: The framerate of this MotionImageInserter.
        :rtype: MotionImageInserterFramerate
        """
        return self._framerate

    @framerate.setter
    def framerate(self, framerate):
        """Sets the framerate of this MotionImageInserter.


        :param framerate: The framerate of this MotionImageInserter.
        :type framerate: MotionImageInserterFramerate
        """

        self._framerate = framerate

    @property
    def input(self):
        """Gets the input of this MotionImageInserter.


        :return: The input of this MotionImageInserter.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this MotionImageInserter.


        :param input: The input of this MotionImageInserter.
        :type input: str
        """

        self._input = input

    @property
    def insertion_mode(self):
        """Gets the insertion_mode of this MotionImageInserter.


        :return: The insertion_mode of this MotionImageInserter.
        :rtype: MotionImageInsertionMode
        """
        return self._insertion_mode

    @insertion_mode.setter
    def insertion_mode(self, insertion_mode):
        """Sets the insertion_mode of this MotionImageInserter.


        :param insertion_mode: The insertion_mode of this MotionImageInserter.
        :type insertion_mode: MotionImageInsertionMode
        """

        self._insertion_mode = insertion_mode

    @property
    def offset(self):
        """Gets the offset of this MotionImageInserter.


        :return: The offset of this MotionImageInserter.
        :rtype: MotionImageInserterOffset
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this MotionImageInserter.


        :param offset: The offset of this MotionImageInserter.
        :type offset: MotionImageInserterOffset
        """

        self._offset = offset

    @property
    def playback(self):
        """Gets the playback of this MotionImageInserter.


        :return: The playback of this MotionImageInserter.
        :rtype: MotionImagePlayback
        """
        return self._playback

    @playback.setter
    def playback(self, playback):
        """Sets the playback of this MotionImageInserter.


        :param playback: The playback of this MotionImageInserter.
        :type playback: MotionImagePlayback
        """

        self._playback = playback

    @property
    def start_time(self):
        """Gets the start_time of this MotionImageInserter.


        :return: The start_time of this MotionImageInserter.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this MotionImageInserter.


        :param start_time: The start_time of this MotionImageInserter.
        :type start_time: str
        """

        self._start_time = start_time
