# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.caption_description_destination_settings import CaptionDescriptionDestinationSettings
from openapi_server.models.language_code import LanguageCode
from openapi_server import util


class CaptionDescriptionPreset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_language_code: str=None, destination_settings: CaptionDescriptionDestinationSettings=None, language_code: LanguageCode=None, language_description: str=None):
        """CaptionDescriptionPreset - a model defined in OpenAPI

        :param custom_language_code: The custom_language_code of this CaptionDescriptionPreset.
        :param destination_settings: The destination_settings of this CaptionDescriptionPreset.
        :param language_code: The language_code of this CaptionDescriptionPreset.
        :param language_description: The language_description of this CaptionDescriptionPreset.
        """
        self.openapi_types = {
            'custom_language_code': str,
            'destination_settings': CaptionDescriptionDestinationSettings,
            'language_code': LanguageCode,
            'language_description': str
        }

        self.attribute_map = {
            'custom_language_code': 'CustomLanguageCode',
            'destination_settings': 'DestinationSettings',
            'language_code': 'LanguageCode',
            'language_description': 'LanguageDescription'
        }

        self._custom_language_code = custom_language_code
        self._destination_settings = destination_settings
        self._language_code = language_code
        self._language_description = language_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CaptionDescriptionPreset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CaptionDescriptionPreset of this CaptionDescriptionPreset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_language_code(self):
        """Gets the custom_language_code of this CaptionDescriptionPreset.


        :return: The custom_language_code of this CaptionDescriptionPreset.
        :rtype: str
        """
        return self._custom_language_code

    @custom_language_code.setter
    def custom_language_code(self, custom_language_code):
        """Sets the custom_language_code of this CaptionDescriptionPreset.


        :param custom_language_code: The custom_language_code of this CaptionDescriptionPreset.
        :type custom_language_code: str
        """

        self._custom_language_code = custom_language_code

    @property
    def destination_settings(self):
        """Gets the destination_settings of this CaptionDescriptionPreset.


        :return: The destination_settings of this CaptionDescriptionPreset.
        :rtype: CaptionDescriptionDestinationSettings
        """
        return self._destination_settings

    @destination_settings.setter
    def destination_settings(self, destination_settings):
        """Sets the destination_settings of this CaptionDescriptionPreset.


        :param destination_settings: The destination_settings of this CaptionDescriptionPreset.
        :type destination_settings: CaptionDescriptionDestinationSettings
        """

        self._destination_settings = destination_settings

    @property
    def language_code(self):
        """Gets the language_code of this CaptionDescriptionPreset.


        :return: The language_code of this CaptionDescriptionPreset.
        :rtype: LanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this CaptionDescriptionPreset.


        :param language_code: The language_code of this CaptionDescriptionPreset.
        :type language_code: LanguageCode
        """

        self._language_code = language_code

    @property
    def language_description(self):
        """Gets the language_description of this CaptionDescriptionPreset.


        :return: The language_description of this CaptionDescriptionPreset.
        :rtype: str
        """
        return self._language_description

    @language_description.setter
    def language_description(self, language_description):
        """Sets the language_description of this CaptionDescriptionPreset.


        :param language_description: The language_description of this CaptionDescriptionPreset.
        :type language_description: str
        """

        self._language_description = language_description
