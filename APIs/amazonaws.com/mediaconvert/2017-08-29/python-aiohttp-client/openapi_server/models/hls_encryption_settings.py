# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cmaf_encryption_settings_static_key_provider import CmafEncryptionSettingsStaticKeyProvider
from openapi_server.models.dash_iso_encryption_settings_speke_key_provider import DashIsoEncryptionSettingsSpekeKeyProvider
from openapi_server.models.hls_encryption_type import HlsEncryptionType
from openapi_server.models.hls_initialization_vector_in_manifest import HlsInitializationVectorInManifest
from openapi_server.models.hls_key_provider_type import HlsKeyProviderType
from openapi_server.models.hls_offline_encrypted import HlsOfflineEncrypted
from openapi_server import util


class HlsEncryptionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, constant_initialization_vector: str=None, encryption_method: HlsEncryptionType=None, initialization_vector_in_manifest: HlsInitializationVectorInManifest=None, offline_encrypted: HlsOfflineEncrypted=None, speke_key_provider: DashIsoEncryptionSettingsSpekeKeyProvider=None, static_key_provider: CmafEncryptionSettingsStaticKeyProvider=None, type: HlsKeyProviderType=None):
        """HlsEncryptionSettings - a model defined in OpenAPI

        :param constant_initialization_vector: The constant_initialization_vector of this HlsEncryptionSettings.
        :param encryption_method: The encryption_method of this HlsEncryptionSettings.
        :param initialization_vector_in_manifest: The initialization_vector_in_manifest of this HlsEncryptionSettings.
        :param offline_encrypted: The offline_encrypted of this HlsEncryptionSettings.
        :param speke_key_provider: The speke_key_provider of this HlsEncryptionSettings.
        :param static_key_provider: The static_key_provider of this HlsEncryptionSettings.
        :param type: The type of this HlsEncryptionSettings.
        """
        self.openapi_types = {
            'constant_initialization_vector': str,
            'encryption_method': HlsEncryptionType,
            'initialization_vector_in_manifest': HlsInitializationVectorInManifest,
            'offline_encrypted': HlsOfflineEncrypted,
            'speke_key_provider': DashIsoEncryptionSettingsSpekeKeyProvider,
            'static_key_provider': CmafEncryptionSettingsStaticKeyProvider,
            'type': HlsKeyProviderType
        }

        self.attribute_map = {
            'constant_initialization_vector': 'ConstantInitializationVector',
            'encryption_method': 'EncryptionMethod',
            'initialization_vector_in_manifest': 'InitializationVectorInManifest',
            'offline_encrypted': 'OfflineEncrypted',
            'speke_key_provider': 'SpekeKeyProvider',
            'static_key_provider': 'StaticKeyProvider',
            'type': 'Type'
        }

        self._constant_initialization_vector = constant_initialization_vector
        self._encryption_method = encryption_method
        self._initialization_vector_in_manifest = initialization_vector_in_manifest
        self._offline_encrypted = offline_encrypted
        self._speke_key_provider = speke_key_provider
        self._static_key_provider = static_key_provider
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HlsEncryptionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HlsEncryptionSettings of this HlsEncryptionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def constant_initialization_vector(self):
        """Gets the constant_initialization_vector of this HlsEncryptionSettings.


        :return: The constant_initialization_vector of this HlsEncryptionSettings.
        :rtype: str
        """
        return self._constant_initialization_vector

    @constant_initialization_vector.setter
    def constant_initialization_vector(self, constant_initialization_vector):
        """Sets the constant_initialization_vector of this HlsEncryptionSettings.


        :param constant_initialization_vector: The constant_initialization_vector of this HlsEncryptionSettings.
        :type constant_initialization_vector: str
        """

        self._constant_initialization_vector = constant_initialization_vector

    @property
    def encryption_method(self):
        """Gets the encryption_method of this HlsEncryptionSettings.


        :return: The encryption_method of this HlsEncryptionSettings.
        :rtype: HlsEncryptionType
        """
        return self._encryption_method

    @encryption_method.setter
    def encryption_method(self, encryption_method):
        """Sets the encryption_method of this HlsEncryptionSettings.


        :param encryption_method: The encryption_method of this HlsEncryptionSettings.
        :type encryption_method: HlsEncryptionType
        """

        self._encryption_method = encryption_method

    @property
    def initialization_vector_in_manifest(self):
        """Gets the initialization_vector_in_manifest of this HlsEncryptionSettings.


        :return: The initialization_vector_in_manifest of this HlsEncryptionSettings.
        :rtype: HlsInitializationVectorInManifest
        """
        return self._initialization_vector_in_manifest

    @initialization_vector_in_manifest.setter
    def initialization_vector_in_manifest(self, initialization_vector_in_manifest):
        """Sets the initialization_vector_in_manifest of this HlsEncryptionSettings.


        :param initialization_vector_in_manifest: The initialization_vector_in_manifest of this HlsEncryptionSettings.
        :type initialization_vector_in_manifest: HlsInitializationVectorInManifest
        """

        self._initialization_vector_in_manifest = initialization_vector_in_manifest

    @property
    def offline_encrypted(self):
        """Gets the offline_encrypted of this HlsEncryptionSettings.


        :return: The offline_encrypted of this HlsEncryptionSettings.
        :rtype: HlsOfflineEncrypted
        """
        return self._offline_encrypted

    @offline_encrypted.setter
    def offline_encrypted(self, offline_encrypted):
        """Sets the offline_encrypted of this HlsEncryptionSettings.


        :param offline_encrypted: The offline_encrypted of this HlsEncryptionSettings.
        :type offline_encrypted: HlsOfflineEncrypted
        """

        self._offline_encrypted = offline_encrypted

    @property
    def speke_key_provider(self):
        """Gets the speke_key_provider of this HlsEncryptionSettings.


        :return: The speke_key_provider of this HlsEncryptionSettings.
        :rtype: DashIsoEncryptionSettingsSpekeKeyProvider
        """
        return self._speke_key_provider

    @speke_key_provider.setter
    def speke_key_provider(self, speke_key_provider):
        """Sets the speke_key_provider of this HlsEncryptionSettings.


        :param speke_key_provider: The speke_key_provider of this HlsEncryptionSettings.
        :type speke_key_provider: DashIsoEncryptionSettingsSpekeKeyProvider
        """

        self._speke_key_provider = speke_key_provider

    @property
    def static_key_provider(self):
        """Gets the static_key_provider of this HlsEncryptionSettings.


        :return: The static_key_provider of this HlsEncryptionSettings.
        :rtype: CmafEncryptionSettingsStaticKeyProvider
        """
        return self._static_key_provider

    @static_key_provider.setter
    def static_key_provider(self, static_key_provider):
        """Sets the static_key_provider of this HlsEncryptionSettings.


        :param static_key_provider: The static_key_provider of this HlsEncryptionSettings.
        :type static_key_provider: CmafEncryptionSettingsStaticKeyProvider
        """

        self._static_key_provider = static_key_provider

    @property
    def type(self):
        """Gets the type of this HlsEncryptionSettings.


        :return: The type of this HlsEncryptionSettings.
        :rtype: HlsKeyProviderType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this HlsEncryptionSettings.


        :param type: The type of this HlsEncryptionSettings.
        :type type: HlsKeyProviderType
        """

        self._type = type
