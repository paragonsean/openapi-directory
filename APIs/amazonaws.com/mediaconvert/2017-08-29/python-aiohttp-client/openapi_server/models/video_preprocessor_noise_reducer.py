# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.noise_reducer_filter import NoiseReducerFilter
from openapi_server.models.noise_reducer_filter_settings import NoiseReducerFilterSettings
from openapi_server.models.noise_reducer_spatial_filter_settings import NoiseReducerSpatialFilterSettings
from openapi_server.models.noise_reducer_temporal_filter_settings import NoiseReducerTemporalFilterSettings
from openapi_server import util


class VideoPreprocessorNoiseReducer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: NoiseReducerFilter=None, filter_settings: NoiseReducerFilterSettings=None, spatial_filter_settings: NoiseReducerSpatialFilterSettings=None, temporal_filter_settings: NoiseReducerTemporalFilterSettings=None):
        """VideoPreprocessorNoiseReducer - a model defined in OpenAPI

        :param filter: The filter of this VideoPreprocessorNoiseReducer.
        :param filter_settings: The filter_settings of this VideoPreprocessorNoiseReducer.
        :param spatial_filter_settings: The spatial_filter_settings of this VideoPreprocessorNoiseReducer.
        :param temporal_filter_settings: The temporal_filter_settings of this VideoPreprocessorNoiseReducer.
        """
        self.openapi_types = {
            'filter': NoiseReducerFilter,
            'filter_settings': NoiseReducerFilterSettings,
            'spatial_filter_settings': NoiseReducerSpatialFilterSettings,
            'temporal_filter_settings': NoiseReducerTemporalFilterSettings
        }

        self.attribute_map = {
            'filter': 'Filter',
            'filter_settings': 'FilterSettings',
            'spatial_filter_settings': 'SpatialFilterSettings',
            'temporal_filter_settings': 'TemporalFilterSettings'
        }

        self._filter = filter
        self._filter_settings = filter_settings
        self._spatial_filter_settings = spatial_filter_settings
        self._temporal_filter_settings = temporal_filter_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoPreprocessorNoiseReducer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoPreprocessor_NoiseReducer of this VideoPreprocessorNoiseReducer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this VideoPreprocessorNoiseReducer.


        :return: The filter of this VideoPreprocessorNoiseReducer.
        :rtype: NoiseReducerFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this VideoPreprocessorNoiseReducer.


        :param filter: The filter of this VideoPreprocessorNoiseReducer.
        :type filter: NoiseReducerFilter
        """

        self._filter = filter

    @property
    def filter_settings(self):
        """Gets the filter_settings of this VideoPreprocessorNoiseReducer.


        :return: The filter_settings of this VideoPreprocessorNoiseReducer.
        :rtype: NoiseReducerFilterSettings
        """
        return self._filter_settings

    @filter_settings.setter
    def filter_settings(self, filter_settings):
        """Sets the filter_settings of this VideoPreprocessorNoiseReducer.


        :param filter_settings: The filter_settings of this VideoPreprocessorNoiseReducer.
        :type filter_settings: NoiseReducerFilterSettings
        """

        self._filter_settings = filter_settings

    @property
    def spatial_filter_settings(self):
        """Gets the spatial_filter_settings of this VideoPreprocessorNoiseReducer.


        :return: The spatial_filter_settings of this VideoPreprocessorNoiseReducer.
        :rtype: NoiseReducerSpatialFilterSettings
        """
        return self._spatial_filter_settings

    @spatial_filter_settings.setter
    def spatial_filter_settings(self, spatial_filter_settings):
        """Sets the spatial_filter_settings of this VideoPreprocessorNoiseReducer.


        :param spatial_filter_settings: The spatial_filter_settings of this VideoPreprocessorNoiseReducer.
        :type spatial_filter_settings: NoiseReducerSpatialFilterSettings
        """

        self._spatial_filter_settings = spatial_filter_settings

    @property
    def temporal_filter_settings(self):
        """Gets the temporal_filter_settings of this VideoPreprocessorNoiseReducer.


        :return: The temporal_filter_settings of this VideoPreprocessorNoiseReducer.
        :rtype: NoiseReducerTemporalFilterSettings
        """
        return self._temporal_filter_settings

    @temporal_filter_settings.setter
    def temporal_filter_settings(self, temporal_filter_settings):
        """Sets the temporal_filter_settings of this VideoPreprocessorNoiseReducer.


        :param temporal_filter_settings: The temporal_filter_settings of this VideoPreprocessorNoiseReducer.
        :type temporal_filter_settings: NoiseReducerTemporalFilterSettings
        """

        self._temporal_filter_settings = temporal_filter_settings
