# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.automated_abr_rule_min_bottom_rendition_size import AutomatedAbrRuleMinBottomRenditionSize
from openapi_server.models.automated_abr_rule_min_top_rendition_size import AutomatedAbrRuleMinTopRenditionSize
from openapi_server.models.rule_type import RuleType
from openapi_server import util


class AutomatedAbrRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_renditions: List=None, force_include_renditions: List=None, min_bottom_rendition_size: AutomatedAbrRuleMinBottomRenditionSize=None, min_top_rendition_size: AutomatedAbrRuleMinTopRenditionSize=None, type: RuleType=None):
        """AutomatedAbrRule - a model defined in OpenAPI

        :param allowed_renditions: The allowed_renditions of this AutomatedAbrRule.
        :param force_include_renditions: The force_include_renditions of this AutomatedAbrRule.
        :param min_bottom_rendition_size: The min_bottom_rendition_size of this AutomatedAbrRule.
        :param min_top_rendition_size: The min_top_rendition_size of this AutomatedAbrRule.
        :param type: The type of this AutomatedAbrRule.
        """
        self.openapi_types = {
            'allowed_renditions': List,
            'force_include_renditions': List,
            'min_bottom_rendition_size': AutomatedAbrRuleMinBottomRenditionSize,
            'min_top_rendition_size': AutomatedAbrRuleMinTopRenditionSize,
            'type': RuleType
        }

        self.attribute_map = {
            'allowed_renditions': 'AllowedRenditions',
            'force_include_renditions': 'ForceIncludeRenditions',
            'min_bottom_rendition_size': 'MinBottomRenditionSize',
            'min_top_rendition_size': 'MinTopRenditionSize',
            'type': 'Type'
        }

        self._allowed_renditions = allowed_renditions
        self._force_include_renditions = force_include_renditions
        self._min_bottom_rendition_size = min_bottom_rendition_size
        self._min_top_rendition_size = min_top_rendition_size
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutomatedAbrRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutomatedAbrRule of this AutomatedAbrRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_renditions(self):
        """Gets the allowed_renditions of this AutomatedAbrRule.


        :return: The allowed_renditions of this AutomatedAbrRule.
        :rtype: List
        """
        return self._allowed_renditions

    @allowed_renditions.setter
    def allowed_renditions(self, allowed_renditions):
        """Sets the allowed_renditions of this AutomatedAbrRule.


        :param allowed_renditions: The allowed_renditions of this AutomatedAbrRule.
        :type allowed_renditions: List
        """

        self._allowed_renditions = allowed_renditions

    @property
    def force_include_renditions(self):
        """Gets the force_include_renditions of this AutomatedAbrRule.


        :return: The force_include_renditions of this AutomatedAbrRule.
        :rtype: List
        """
        return self._force_include_renditions

    @force_include_renditions.setter
    def force_include_renditions(self, force_include_renditions):
        """Sets the force_include_renditions of this AutomatedAbrRule.


        :param force_include_renditions: The force_include_renditions of this AutomatedAbrRule.
        :type force_include_renditions: List
        """

        self._force_include_renditions = force_include_renditions

    @property
    def min_bottom_rendition_size(self):
        """Gets the min_bottom_rendition_size of this AutomatedAbrRule.


        :return: The min_bottom_rendition_size of this AutomatedAbrRule.
        :rtype: AutomatedAbrRuleMinBottomRenditionSize
        """
        return self._min_bottom_rendition_size

    @min_bottom_rendition_size.setter
    def min_bottom_rendition_size(self, min_bottom_rendition_size):
        """Sets the min_bottom_rendition_size of this AutomatedAbrRule.


        :param min_bottom_rendition_size: The min_bottom_rendition_size of this AutomatedAbrRule.
        :type min_bottom_rendition_size: AutomatedAbrRuleMinBottomRenditionSize
        """

        self._min_bottom_rendition_size = min_bottom_rendition_size

    @property
    def min_top_rendition_size(self):
        """Gets the min_top_rendition_size of this AutomatedAbrRule.


        :return: The min_top_rendition_size of this AutomatedAbrRule.
        :rtype: AutomatedAbrRuleMinTopRenditionSize
        """
        return self._min_top_rendition_size

    @min_top_rendition_size.setter
    def min_top_rendition_size(self, min_top_rendition_size):
        """Sets the min_top_rendition_size of this AutomatedAbrRule.


        :param min_top_rendition_size: The min_top_rendition_size of this AutomatedAbrRule.
        :type min_top_rendition_size: AutomatedAbrRuleMinTopRenditionSize
        """

        self._min_top_rendition_size = min_top_rendition_size

    @property
    def type(self):
        """Gets the type of this AutomatedAbrRule.


        :return: The type of this AutomatedAbrRule.
        :rtype: RuleType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AutomatedAbrRule.


        :param type: The type of this AutomatedAbrRule.
        :type type: RuleType
        """

        self._type = type
