# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.m2ts_audio_buffer_model import M2tsAudioBufferModel
from openapi_server.models.m2ts_audio_duration import M2tsAudioDuration
from openapi_server.models.m2ts_buffer_model import M2tsBufferModel
from openapi_server.models.m2ts_data_pts_control import M2tsDataPtsControl
from openapi_server.models.m2ts_ebp_audio_interval import M2tsEbpAudioInterval
from openapi_server.models.m2ts_ebp_placement import M2tsEbpPlacement
from openapi_server.models.m2ts_es_rate_in_pes import M2tsEsRateInPes
from openapi_server.models.m2ts_force_ts_video_ebp_order import M2tsForceTsVideoEbpOrder
from openapi_server.models.m2ts_klv_metadata import M2tsKlvMetadata
from openapi_server.models.m2ts_nielsen_id3 import M2tsNielsenId3
from openapi_server.models.m2ts_pcr_control import M2tsPcrControl
from openapi_server.models.m2ts_rate_mode import M2tsRateMode
from openapi_server.models.m2ts_scte35_source import M2tsScte35Source
from openapi_server.models.m2ts_segmentation_markers import M2tsSegmentationMarkers
from openapi_server.models.m2ts_segmentation_style import M2tsSegmentationStyle
from openapi_server.models.m2ts_settings_dvb_nit_settings import M2tsSettingsDvbNitSettings
from openapi_server.models.m2ts_settings_dvb_sdt_settings import M2tsSettingsDvbSdtSettings
from openapi_server.models.m2ts_settings_dvb_tdt_settings import M2tsSettingsDvbTdtSettings
from openapi_server.models.m2ts_settings_scte35_esam import M2tsSettingsScte35Esam
from openapi_server import util


class M2tsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_buffer_model: M2tsAudioBufferModel=None, audio_duration: M2tsAudioDuration=None, audio_frames_per_pes: int=None, audio_pids: List=None, bitrate: int=None, buffer_model: M2tsBufferModel=None, data_pts_control: M2tsDataPtsControl=None, dvb_nit_settings: M2tsSettingsDvbNitSettings=None, dvb_sdt_settings: M2tsSettingsDvbSdtSettings=None, dvb_sub_pids: List=None, dvb_tdt_settings: M2tsSettingsDvbTdtSettings=None, dvb_teletext_pid: int=None, ebp_audio_interval: M2tsEbpAudioInterval=None, ebp_placement: M2tsEbpPlacement=None, es_rate_in_pes: M2tsEsRateInPes=None, force_ts_video_ebp_order: M2tsForceTsVideoEbpOrder=None, fragment_time: float=None, klv_metadata: M2tsKlvMetadata=None, max_pcr_interval: int=None, min_ebp_interval: int=None, nielsen_id3: M2tsNielsenId3=None, null_packet_bitrate: float=None, pat_interval: int=None, pcr_control: M2tsPcrControl=None, pcr_pid: int=None, pmt_interval: int=None, pmt_pid: int=None, private_metadata_pid: int=None, program_number: int=None, rate_mode: M2tsRateMode=None, scte35_esam: M2tsSettingsScte35Esam=None, scte35_pid: int=None, scte35_source: M2tsScte35Source=None, segmentation_markers: M2tsSegmentationMarkers=None, segmentation_style: M2tsSegmentationStyle=None, segmentation_time: float=None, timed_metadata_pid: int=None, transport_stream_id: int=None, video_pid: int=None):
        """M2tsSettings - a model defined in OpenAPI

        :param audio_buffer_model: The audio_buffer_model of this M2tsSettings.
        :param audio_duration: The audio_duration of this M2tsSettings.
        :param audio_frames_per_pes: The audio_frames_per_pes of this M2tsSettings.
        :param audio_pids: The audio_pids of this M2tsSettings.
        :param bitrate: The bitrate of this M2tsSettings.
        :param buffer_model: The buffer_model of this M2tsSettings.
        :param data_pts_control: The data_pts_control of this M2tsSettings.
        :param dvb_nit_settings: The dvb_nit_settings of this M2tsSettings.
        :param dvb_sdt_settings: The dvb_sdt_settings of this M2tsSettings.
        :param dvb_sub_pids: The dvb_sub_pids of this M2tsSettings.
        :param dvb_tdt_settings: The dvb_tdt_settings of this M2tsSettings.
        :param dvb_teletext_pid: The dvb_teletext_pid of this M2tsSettings.
        :param ebp_audio_interval: The ebp_audio_interval of this M2tsSettings.
        :param ebp_placement: The ebp_placement of this M2tsSettings.
        :param es_rate_in_pes: The es_rate_in_pes of this M2tsSettings.
        :param force_ts_video_ebp_order: The force_ts_video_ebp_order of this M2tsSettings.
        :param fragment_time: The fragment_time of this M2tsSettings.
        :param klv_metadata: The klv_metadata of this M2tsSettings.
        :param max_pcr_interval: The max_pcr_interval of this M2tsSettings.
        :param min_ebp_interval: The min_ebp_interval of this M2tsSettings.
        :param nielsen_id3: The nielsen_id3 of this M2tsSettings.
        :param null_packet_bitrate: The null_packet_bitrate of this M2tsSettings.
        :param pat_interval: The pat_interval of this M2tsSettings.
        :param pcr_control: The pcr_control of this M2tsSettings.
        :param pcr_pid: The pcr_pid of this M2tsSettings.
        :param pmt_interval: The pmt_interval of this M2tsSettings.
        :param pmt_pid: The pmt_pid of this M2tsSettings.
        :param private_metadata_pid: The private_metadata_pid of this M2tsSettings.
        :param program_number: The program_number of this M2tsSettings.
        :param rate_mode: The rate_mode of this M2tsSettings.
        :param scte35_esam: The scte35_esam of this M2tsSettings.
        :param scte35_pid: The scte35_pid of this M2tsSettings.
        :param scte35_source: The scte35_source of this M2tsSettings.
        :param segmentation_markers: The segmentation_markers of this M2tsSettings.
        :param segmentation_style: The segmentation_style of this M2tsSettings.
        :param segmentation_time: The segmentation_time of this M2tsSettings.
        :param timed_metadata_pid: The timed_metadata_pid of this M2tsSettings.
        :param transport_stream_id: The transport_stream_id of this M2tsSettings.
        :param video_pid: The video_pid of this M2tsSettings.
        """
        self.openapi_types = {
            'audio_buffer_model': M2tsAudioBufferModel,
            'audio_duration': M2tsAudioDuration,
            'audio_frames_per_pes': int,
            'audio_pids': List,
            'bitrate': int,
            'buffer_model': M2tsBufferModel,
            'data_pts_control': M2tsDataPtsControl,
            'dvb_nit_settings': M2tsSettingsDvbNitSettings,
            'dvb_sdt_settings': M2tsSettingsDvbSdtSettings,
            'dvb_sub_pids': List,
            'dvb_tdt_settings': M2tsSettingsDvbTdtSettings,
            'dvb_teletext_pid': int,
            'ebp_audio_interval': M2tsEbpAudioInterval,
            'ebp_placement': M2tsEbpPlacement,
            'es_rate_in_pes': M2tsEsRateInPes,
            'force_ts_video_ebp_order': M2tsForceTsVideoEbpOrder,
            'fragment_time': float,
            'klv_metadata': M2tsKlvMetadata,
            'max_pcr_interval': int,
            'min_ebp_interval': int,
            'nielsen_id3': M2tsNielsenId3,
            'null_packet_bitrate': float,
            'pat_interval': int,
            'pcr_control': M2tsPcrControl,
            'pcr_pid': int,
            'pmt_interval': int,
            'pmt_pid': int,
            'private_metadata_pid': int,
            'program_number': int,
            'rate_mode': M2tsRateMode,
            'scte35_esam': M2tsSettingsScte35Esam,
            'scte35_pid': int,
            'scte35_source': M2tsScte35Source,
            'segmentation_markers': M2tsSegmentationMarkers,
            'segmentation_style': M2tsSegmentationStyle,
            'segmentation_time': float,
            'timed_metadata_pid': int,
            'transport_stream_id': int,
            'video_pid': int
        }

        self.attribute_map = {
            'audio_buffer_model': 'AudioBufferModel',
            'audio_duration': 'AudioDuration',
            'audio_frames_per_pes': 'AudioFramesPerPes',
            'audio_pids': 'AudioPids',
            'bitrate': 'Bitrate',
            'buffer_model': 'BufferModel',
            'data_pts_control': 'DataPTSControl',
            'dvb_nit_settings': 'DvbNitSettings',
            'dvb_sdt_settings': 'DvbSdtSettings',
            'dvb_sub_pids': 'DvbSubPids',
            'dvb_tdt_settings': 'DvbTdtSettings',
            'dvb_teletext_pid': 'DvbTeletextPid',
            'ebp_audio_interval': 'EbpAudioInterval',
            'ebp_placement': 'EbpPlacement',
            'es_rate_in_pes': 'EsRateInPes',
            'force_ts_video_ebp_order': 'ForceTsVideoEbpOrder',
            'fragment_time': 'FragmentTime',
            'klv_metadata': 'KlvMetadata',
            'max_pcr_interval': 'MaxPcrInterval',
            'min_ebp_interval': 'MinEbpInterval',
            'nielsen_id3': 'NielsenId3',
            'null_packet_bitrate': 'NullPacketBitrate',
            'pat_interval': 'PatInterval',
            'pcr_control': 'PcrControl',
            'pcr_pid': 'PcrPid',
            'pmt_interval': 'PmtInterval',
            'pmt_pid': 'PmtPid',
            'private_metadata_pid': 'PrivateMetadataPid',
            'program_number': 'ProgramNumber',
            'rate_mode': 'RateMode',
            'scte35_esam': 'Scte35Esam',
            'scte35_pid': 'Scte35Pid',
            'scte35_source': 'Scte35Source',
            'segmentation_markers': 'SegmentationMarkers',
            'segmentation_style': 'SegmentationStyle',
            'segmentation_time': 'SegmentationTime',
            'timed_metadata_pid': 'TimedMetadataPid',
            'transport_stream_id': 'TransportStreamId',
            'video_pid': 'VideoPid'
        }

        self._audio_buffer_model = audio_buffer_model
        self._audio_duration = audio_duration
        self._audio_frames_per_pes = audio_frames_per_pes
        self._audio_pids = audio_pids
        self._bitrate = bitrate
        self._buffer_model = buffer_model
        self._data_pts_control = data_pts_control
        self._dvb_nit_settings = dvb_nit_settings
        self._dvb_sdt_settings = dvb_sdt_settings
        self._dvb_sub_pids = dvb_sub_pids
        self._dvb_tdt_settings = dvb_tdt_settings
        self._dvb_teletext_pid = dvb_teletext_pid
        self._ebp_audio_interval = ebp_audio_interval
        self._ebp_placement = ebp_placement
        self._es_rate_in_pes = es_rate_in_pes
        self._force_ts_video_ebp_order = force_ts_video_ebp_order
        self._fragment_time = fragment_time
        self._klv_metadata = klv_metadata
        self._max_pcr_interval = max_pcr_interval
        self._min_ebp_interval = min_ebp_interval
        self._nielsen_id3 = nielsen_id3
        self._null_packet_bitrate = null_packet_bitrate
        self._pat_interval = pat_interval
        self._pcr_control = pcr_control
        self._pcr_pid = pcr_pid
        self._pmt_interval = pmt_interval
        self._pmt_pid = pmt_pid
        self._private_metadata_pid = private_metadata_pid
        self._program_number = program_number
        self._rate_mode = rate_mode
        self._scte35_esam = scte35_esam
        self._scte35_pid = scte35_pid
        self._scte35_source = scte35_source
        self._segmentation_markers = segmentation_markers
        self._segmentation_style = segmentation_style
        self._segmentation_time = segmentation_time
        self._timed_metadata_pid = timed_metadata_pid
        self._transport_stream_id = transport_stream_id
        self._video_pid = video_pid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'M2tsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The M2tsSettings of this M2tsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_buffer_model(self):
        """Gets the audio_buffer_model of this M2tsSettings.


        :return: The audio_buffer_model of this M2tsSettings.
        :rtype: M2tsAudioBufferModel
        """
        return self._audio_buffer_model

    @audio_buffer_model.setter
    def audio_buffer_model(self, audio_buffer_model):
        """Sets the audio_buffer_model of this M2tsSettings.


        :param audio_buffer_model: The audio_buffer_model of this M2tsSettings.
        :type audio_buffer_model: M2tsAudioBufferModel
        """

        self._audio_buffer_model = audio_buffer_model

    @property
    def audio_duration(self):
        """Gets the audio_duration of this M2tsSettings.


        :return: The audio_duration of this M2tsSettings.
        :rtype: M2tsAudioDuration
        """
        return self._audio_duration

    @audio_duration.setter
    def audio_duration(self, audio_duration):
        """Sets the audio_duration of this M2tsSettings.


        :param audio_duration: The audio_duration of this M2tsSettings.
        :type audio_duration: M2tsAudioDuration
        """

        self._audio_duration = audio_duration

    @property
    def audio_frames_per_pes(self):
        """Gets the audio_frames_per_pes of this M2tsSettings.


        :return: The audio_frames_per_pes of this M2tsSettings.
        :rtype: int
        """
        return self._audio_frames_per_pes

    @audio_frames_per_pes.setter
    def audio_frames_per_pes(self, audio_frames_per_pes):
        """Sets the audio_frames_per_pes of this M2tsSettings.


        :param audio_frames_per_pes: The audio_frames_per_pes of this M2tsSettings.
        :type audio_frames_per_pes: int
        """

        self._audio_frames_per_pes = audio_frames_per_pes

    @property
    def audio_pids(self):
        """Gets the audio_pids of this M2tsSettings.


        :return: The audio_pids of this M2tsSettings.
        :rtype: List
        """
        return self._audio_pids

    @audio_pids.setter
    def audio_pids(self, audio_pids):
        """Sets the audio_pids of this M2tsSettings.


        :param audio_pids: The audio_pids of this M2tsSettings.
        :type audio_pids: List
        """

        self._audio_pids = audio_pids

    @property
    def bitrate(self):
        """Gets the bitrate of this M2tsSettings.


        :return: The bitrate of this M2tsSettings.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this M2tsSettings.


        :param bitrate: The bitrate of this M2tsSettings.
        :type bitrate: int
        """

        self._bitrate = bitrate

    @property
    def buffer_model(self):
        """Gets the buffer_model of this M2tsSettings.


        :return: The buffer_model of this M2tsSettings.
        :rtype: M2tsBufferModel
        """
        return self._buffer_model

    @buffer_model.setter
    def buffer_model(self, buffer_model):
        """Sets the buffer_model of this M2tsSettings.


        :param buffer_model: The buffer_model of this M2tsSettings.
        :type buffer_model: M2tsBufferModel
        """

        self._buffer_model = buffer_model

    @property
    def data_pts_control(self):
        """Gets the data_pts_control of this M2tsSettings.


        :return: The data_pts_control of this M2tsSettings.
        :rtype: M2tsDataPtsControl
        """
        return self._data_pts_control

    @data_pts_control.setter
    def data_pts_control(self, data_pts_control):
        """Sets the data_pts_control of this M2tsSettings.


        :param data_pts_control: The data_pts_control of this M2tsSettings.
        :type data_pts_control: M2tsDataPtsControl
        """

        self._data_pts_control = data_pts_control

    @property
    def dvb_nit_settings(self):
        """Gets the dvb_nit_settings of this M2tsSettings.


        :return: The dvb_nit_settings of this M2tsSettings.
        :rtype: M2tsSettingsDvbNitSettings
        """
        return self._dvb_nit_settings

    @dvb_nit_settings.setter
    def dvb_nit_settings(self, dvb_nit_settings):
        """Sets the dvb_nit_settings of this M2tsSettings.


        :param dvb_nit_settings: The dvb_nit_settings of this M2tsSettings.
        :type dvb_nit_settings: M2tsSettingsDvbNitSettings
        """

        self._dvb_nit_settings = dvb_nit_settings

    @property
    def dvb_sdt_settings(self):
        """Gets the dvb_sdt_settings of this M2tsSettings.


        :return: The dvb_sdt_settings of this M2tsSettings.
        :rtype: M2tsSettingsDvbSdtSettings
        """
        return self._dvb_sdt_settings

    @dvb_sdt_settings.setter
    def dvb_sdt_settings(self, dvb_sdt_settings):
        """Sets the dvb_sdt_settings of this M2tsSettings.


        :param dvb_sdt_settings: The dvb_sdt_settings of this M2tsSettings.
        :type dvb_sdt_settings: M2tsSettingsDvbSdtSettings
        """

        self._dvb_sdt_settings = dvb_sdt_settings

    @property
    def dvb_sub_pids(self):
        """Gets the dvb_sub_pids of this M2tsSettings.


        :return: The dvb_sub_pids of this M2tsSettings.
        :rtype: List
        """
        return self._dvb_sub_pids

    @dvb_sub_pids.setter
    def dvb_sub_pids(self, dvb_sub_pids):
        """Sets the dvb_sub_pids of this M2tsSettings.


        :param dvb_sub_pids: The dvb_sub_pids of this M2tsSettings.
        :type dvb_sub_pids: List
        """

        self._dvb_sub_pids = dvb_sub_pids

    @property
    def dvb_tdt_settings(self):
        """Gets the dvb_tdt_settings of this M2tsSettings.


        :return: The dvb_tdt_settings of this M2tsSettings.
        :rtype: M2tsSettingsDvbTdtSettings
        """
        return self._dvb_tdt_settings

    @dvb_tdt_settings.setter
    def dvb_tdt_settings(self, dvb_tdt_settings):
        """Sets the dvb_tdt_settings of this M2tsSettings.


        :param dvb_tdt_settings: The dvb_tdt_settings of this M2tsSettings.
        :type dvb_tdt_settings: M2tsSettingsDvbTdtSettings
        """

        self._dvb_tdt_settings = dvb_tdt_settings

    @property
    def dvb_teletext_pid(self):
        """Gets the dvb_teletext_pid of this M2tsSettings.


        :return: The dvb_teletext_pid of this M2tsSettings.
        :rtype: int
        """
        return self._dvb_teletext_pid

    @dvb_teletext_pid.setter
    def dvb_teletext_pid(self, dvb_teletext_pid):
        """Sets the dvb_teletext_pid of this M2tsSettings.


        :param dvb_teletext_pid: The dvb_teletext_pid of this M2tsSettings.
        :type dvb_teletext_pid: int
        """

        self._dvb_teletext_pid = dvb_teletext_pid

    @property
    def ebp_audio_interval(self):
        """Gets the ebp_audio_interval of this M2tsSettings.


        :return: The ebp_audio_interval of this M2tsSettings.
        :rtype: M2tsEbpAudioInterval
        """
        return self._ebp_audio_interval

    @ebp_audio_interval.setter
    def ebp_audio_interval(self, ebp_audio_interval):
        """Sets the ebp_audio_interval of this M2tsSettings.


        :param ebp_audio_interval: The ebp_audio_interval of this M2tsSettings.
        :type ebp_audio_interval: M2tsEbpAudioInterval
        """

        self._ebp_audio_interval = ebp_audio_interval

    @property
    def ebp_placement(self):
        """Gets the ebp_placement of this M2tsSettings.


        :return: The ebp_placement of this M2tsSettings.
        :rtype: M2tsEbpPlacement
        """
        return self._ebp_placement

    @ebp_placement.setter
    def ebp_placement(self, ebp_placement):
        """Sets the ebp_placement of this M2tsSettings.


        :param ebp_placement: The ebp_placement of this M2tsSettings.
        :type ebp_placement: M2tsEbpPlacement
        """

        self._ebp_placement = ebp_placement

    @property
    def es_rate_in_pes(self):
        """Gets the es_rate_in_pes of this M2tsSettings.


        :return: The es_rate_in_pes of this M2tsSettings.
        :rtype: M2tsEsRateInPes
        """
        return self._es_rate_in_pes

    @es_rate_in_pes.setter
    def es_rate_in_pes(self, es_rate_in_pes):
        """Sets the es_rate_in_pes of this M2tsSettings.


        :param es_rate_in_pes: The es_rate_in_pes of this M2tsSettings.
        :type es_rate_in_pes: M2tsEsRateInPes
        """

        self._es_rate_in_pes = es_rate_in_pes

    @property
    def force_ts_video_ebp_order(self):
        """Gets the force_ts_video_ebp_order of this M2tsSettings.


        :return: The force_ts_video_ebp_order of this M2tsSettings.
        :rtype: M2tsForceTsVideoEbpOrder
        """
        return self._force_ts_video_ebp_order

    @force_ts_video_ebp_order.setter
    def force_ts_video_ebp_order(self, force_ts_video_ebp_order):
        """Sets the force_ts_video_ebp_order of this M2tsSettings.


        :param force_ts_video_ebp_order: The force_ts_video_ebp_order of this M2tsSettings.
        :type force_ts_video_ebp_order: M2tsForceTsVideoEbpOrder
        """

        self._force_ts_video_ebp_order = force_ts_video_ebp_order

    @property
    def fragment_time(self):
        """Gets the fragment_time of this M2tsSettings.


        :return: The fragment_time of this M2tsSettings.
        :rtype: float
        """
        return self._fragment_time

    @fragment_time.setter
    def fragment_time(self, fragment_time):
        """Sets the fragment_time of this M2tsSettings.


        :param fragment_time: The fragment_time of this M2tsSettings.
        :type fragment_time: float
        """

        self._fragment_time = fragment_time

    @property
    def klv_metadata(self):
        """Gets the klv_metadata of this M2tsSettings.


        :return: The klv_metadata of this M2tsSettings.
        :rtype: M2tsKlvMetadata
        """
        return self._klv_metadata

    @klv_metadata.setter
    def klv_metadata(self, klv_metadata):
        """Sets the klv_metadata of this M2tsSettings.


        :param klv_metadata: The klv_metadata of this M2tsSettings.
        :type klv_metadata: M2tsKlvMetadata
        """

        self._klv_metadata = klv_metadata

    @property
    def max_pcr_interval(self):
        """Gets the max_pcr_interval of this M2tsSettings.


        :return: The max_pcr_interval of this M2tsSettings.
        :rtype: int
        """
        return self._max_pcr_interval

    @max_pcr_interval.setter
    def max_pcr_interval(self, max_pcr_interval):
        """Sets the max_pcr_interval of this M2tsSettings.


        :param max_pcr_interval: The max_pcr_interval of this M2tsSettings.
        :type max_pcr_interval: int
        """

        self._max_pcr_interval = max_pcr_interval

    @property
    def min_ebp_interval(self):
        """Gets the min_ebp_interval of this M2tsSettings.


        :return: The min_ebp_interval of this M2tsSettings.
        :rtype: int
        """
        return self._min_ebp_interval

    @min_ebp_interval.setter
    def min_ebp_interval(self, min_ebp_interval):
        """Sets the min_ebp_interval of this M2tsSettings.


        :param min_ebp_interval: The min_ebp_interval of this M2tsSettings.
        :type min_ebp_interval: int
        """

        self._min_ebp_interval = min_ebp_interval

    @property
    def nielsen_id3(self):
        """Gets the nielsen_id3 of this M2tsSettings.


        :return: The nielsen_id3 of this M2tsSettings.
        :rtype: M2tsNielsenId3
        """
        return self._nielsen_id3

    @nielsen_id3.setter
    def nielsen_id3(self, nielsen_id3):
        """Sets the nielsen_id3 of this M2tsSettings.


        :param nielsen_id3: The nielsen_id3 of this M2tsSettings.
        :type nielsen_id3: M2tsNielsenId3
        """

        self._nielsen_id3 = nielsen_id3

    @property
    def null_packet_bitrate(self):
        """Gets the null_packet_bitrate of this M2tsSettings.


        :return: The null_packet_bitrate of this M2tsSettings.
        :rtype: float
        """
        return self._null_packet_bitrate

    @null_packet_bitrate.setter
    def null_packet_bitrate(self, null_packet_bitrate):
        """Sets the null_packet_bitrate of this M2tsSettings.


        :param null_packet_bitrate: The null_packet_bitrate of this M2tsSettings.
        :type null_packet_bitrate: float
        """

        self._null_packet_bitrate = null_packet_bitrate

    @property
    def pat_interval(self):
        """Gets the pat_interval of this M2tsSettings.


        :return: The pat_interval of this M2tsSettings.
        :rtype: int
        """
        return self._pat_interval

    @pat_interval.setter
    def pat_interval(self, pat_interval):
        """Sets the pat_interval of this M2tsSettings.


        :param pat_interval: The pat_interval of this M2tsSettings.
        :type pat_interval: int
        """

        self._pat_interval = pat_interval

    @property
    def pcr_control(self):
        """Gets the pcr_control of this M2tsSettings.


        :return: The pcr_control of this M2tsSettings.
        :rtype: M2tsPcrControl
        """
        return self._pcr_control

    @pcr_control.setter
    def pcr_control(self, pcr_control):
        """Sets the pcr_control of this M2tsSettings.


        :param pcr_control: The pcr_control of this M2tsSettings.
        :type pcr_control: M2tsPcrControl
        """

        self._pcr_control = pcr_control

    @property
    def pcr_pid(self):
        """Gets the pcr_pid of this M2tsSettings.


        :return: The pcr_pid of this M2tsSettings.
        :rtype: int
        """
        return self._pcr_pid

    @pcr_pid.setter
    def pcr_pid(self, pcr_pid):
        """Sets the pcr_pid of this M2tsSettings.


        :param pcr_pid: The pcr_pid of this M2tsSettings.
        :type pcr_pid: int
        """

        self._pcr_pid = pcr_pid

    @property
    def pmt_interval(self):
        """Gets the pmt_interval of this M2tsSettings.


        :return: The pmt_interval of this M2tsSettings.
        :rtype: int
        """
        return self._pmt_interval

    @pmt_interval.setter
    def pmt_interval(self, pmt_interval):
        """Sets the pmt_interval of this M2tsSettings.


        :param pmt_interval: The pmt_interval of this M2tsSettings.
        :type pmt_interval: int
        """

        self._pmt_interval = pmt_interval

    @property
    def pmt_pid(self):
        """Gets the pmt_pid of this M2tsSettings.


        :return: The pmt_pid of this M2tsSettings.
        :rtype: int
        """
        return self._pmt_pid

    @pmt_pid.setter
    def pmt_pid(self, pmt_pid):
        """Sets the pmt_pid of this M2tsSettings.


        :param pmt_pid: The pmt_pid of this M2tsSettings.
        :type pmt_pid: int
        """

        self._pmt_pid = pmt_pid

    @property
    def private_metadata_pid(self):
        """Gets the private_metadata_pid of this M2tsSettings.


        :return: The private_metadata_pid of this M2tsSettings.
        :rtype: int
        """
        return self._private_metadata_pid

    @private_metadata_pid.setter
    def private_metadata_pid(self, private_metadata_pid):
        """Sets the private_metadata_pid of this M2tsSettings.


        :param private_metadata_pid: The private_metadata_pid of this M2tsSettings.
        :type private_metadata_pid: int
        """

        self._private_metadata_pid = private_metadata_pid

    @property
    def program_number(self):
        """Gets the program_number of this M2tsSettings.


        :return: The program_number of this M2tsSettings.
        :rtype: int
        """
        return self._program_number

    @program_number.setter
    def program_number(self, program_number):
        """Sets the program_number of this M2tsSettings.


        :param program_number: The program_number of this M2tsSettings.
        :type program_number: int
        """

        self._program_number = program_number

    @property
    def rate_mode(self):
        """Gets the rate_mode of this M2tsSettings.


        :return: The rate_mode of this M2tsSettings.
        :rtype: M2tsRateMode
        """
        return self._rate_mode

    @rate_mode.setter
    def rate_mode(self, rate_mode):
        """Sets the rate_mode of this M2tsSettings.


        :param rate_mode: The rate_mode of this M2tsSettings.
        :type rate_mode: M2tsRateMode
        """

        self._rate_mode = rate_mode

    @property
    def scte35_esam(self):
        """Gets the scte35_esam of this M2tsSettings.


        :return: The scte35_esam of this M2tsSettings.
        :rtype: M2tsSettingsScte35Esam
        """
        return self._scte35_esam

    @scte35_esam.setter
    def scte35_esam(self, scte35_esam):
        """Sets the scte35_esam of this M2tsSettings.


        :param scte35_esam: The scte35_esam of this M2tsSettings.
        :type scte35_esam: M2tsSettingsScte35Esam
        """

        self._scte35_esam = scte35_esam

    @property
    def scte35_pid(self):
        """Gets the scte35_pid of this M2tsSettings.


        :return: The scte35_pid of this M2tsSettings.
        :rtype: int
        """
        return self._scte35_pid

    @scte35_pid.setter
    def scte35_pid(self, scte35_pid):
        """Sets the scte35_pid of this M2tsSettings.


        :param scte35_pid: The scte35_pid of this M2tsSettings.
        :type scte35_pid: int
        """

        self._scte35_pid = scte35_pid

    @property
    def scte35_source(self):
        """Gets the scte35_source of this M2tsSettings.


        :return: The scte35_source of this M2tsSettings.
        :rtype: M2tsScte35Source
        """
        return self._scte35_source

    @scte35_source.setter
    def scte35_source(self, scte35_source):
        """Sets the scte35_source of this M2tsSettings.


        :param scte35_source: The scte35_source of this M2tsSettings.
        :type scte35_source: M2tsScte35Source
        """

        self._scte35_source = scte35_source

    @property
    def segmentation_markers(self):
        """Gets the segmentation_markers of this M2tsSettings.


        :return: The segmentation_markers of this M2tsSettings.
        :rtype: M2tsSegmentationMarkers
        """
        return self._segmentation_markers

    @segmentation_markers.setter
    def segmentation_markers(self, segmentation_markers):
        """Sets the segmentation_markers of this M2tsSettings.


        :param segmentation_markers: The segmentation_markers of this M2tsSettings.
        :type segmentation_markers: M2tsSegmentationMarkers
        """

        self._segmentation_markers = segmentation_markers

    @property
    def segmentation_style(self):
        """Gets the segmentation_style of this M2tsSettings.


        :return: The segmentation_style of this M2tsSettings.
        :rtype: M2tsSegmentationStyle
        """
        return self._segmentation_style

    @segmentation_style.setter
    def segmentation_style(self, segmentation_style):
        """Sets the segmentation_style of this M2tsSettings.


        :param segmentation_style: The segmentation_style of this M2tsSettings.
        :type segmentation_style: M2tsSegmentationStyle
        """

        self._segmentation_style = segmentation_style

    @property
    def segmentation_time(self):
        """Gets the segmentation_time of this M2tsSettings.


        :return: The segmentation_time of this M2tsSettings.
        :rtype: float
        """
        return self._segmentation_time

    @segmentation_time.setter
    def segmentation_time(self, segmentation_time):
        """Sets the segmentation_time of this M2tsSettings.


        :param segmentation_time: The segmentation_time of this M2tsSettings.
        :type segmentation_time: float
        """

        self._segmentation_time = segmentation_time

    @property
    def timed_metadata_pid(self):
        """Gets the timed_metadata_pid of this M2tsSettings.


        :return: The timed_metadata_pid of this M2tsSettings.
        :rtype: int
        """
        return self._timed_metadata_pid

    @timed_metadata_pid.setter
    def timed_metadata_pid(self, timed_metadata_pid):
        """Sets the timed_metadata_pid of this M2tsSettings.


        :param timed_metadata_pid: The timed_metadata_pid of this M2tsSettings.
        :type timed_metadata_pid: int
        """

        self._timed_metadata_pid = timed_metadata_pid

    @property
    def transport_stream_id(self):
        """Gets the transport_stream_id of this M2tsSettings.


        :return: The transport_stream_id of this M2tsSettings.
        :rtype: int
        """
        return self._transport_stream_id

    @transport_stream_id.setter
    def transport_stream_id(self, transport_stream_id):
        """Sets the transport_stream_id of this M2tsSettings.


        :param transport_stream_id: The transport_stream_id of this M2tsSettings.
        :type transport_stream_id: int
        """

        self._transport_stream_id = transport_stream_id

    @property
    def video_pid(self):
        """Gets the video_pid of this M2tsSettings.


        :return: The video_pid of this M2tsSettings.
        :rtype: int
        """
        return self._video_pid

    @video_pid.setter
    def video_pid(self, video_pid):
        """Sets the video_pid of this M2tsSettings.


        :param video_pid: The video_pid of this M2tsSettings.
        :type video_pid: int
        """

        self._video_pid = video_pid
