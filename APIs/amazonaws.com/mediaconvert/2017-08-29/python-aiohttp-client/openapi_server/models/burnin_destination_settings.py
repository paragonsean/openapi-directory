# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.burn_in_subtitle_style_passthrough import BurnInSubtitleStylePassthrough
from openapi_server.models.burnin_subtitle_alignment import BurninSubtitleAlignment
from openapi_server.models.burnin_subtitle_apply_font_color import BurninSubtitleApplyFontColor
from openapi_server.models.burnin_subtitle_background_color import BurninSubtitleBackgroundColor
from openapi_server.models.burnin_subtitle_fallback_font import BurninSubtitleFallbackFont
from openapi_server.models.burnin_subtitle_font_color import BurninSubtitleFontColor
from openapi_server.models.burnin_subtitle_outline_color import BurninSubtitleOutlineColor
from openapi_server.models.burnin_subtitle_shadow_color import BurninSubtitleShadowColor
from openapi_server.models.burnin_subtitle_teletext_spacing import BurninSubtitleTeletextSpacing
from openapi_server.models.font_script import FontScript
from openapi_server import util


class BurninDestinationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alignment: BurninSubtitleAlignment=None, apply_font_color: BurninSubtitleApplyFontColor=None, background_color: BurninSubtitleBackgroundColor=None, background_opacity: int=None, fallback_font: BurninSubtitleFallbackFont=None, font_color: BurninSubtitleFontColor=None, font_opacity: int=None, font_resolution: int=None, font_script: FontScript=None, font_size: int=None, hex_font_color: str=None, outline_color: BurninSubtitleOutlineColor=None, outline_size: int=None, shadow_color: BurninSubtitleShadowColor=None, shadow_opacity: int=None, shadow_x_offset: int=None, shadow_y_offset: int=None, style_passthrough: BurnInSubtitleStylePassthrough=None, teletext_spacing: BurninSubtitleTeletextSpacing=None, x_position: int=None, y_position: int=None):
        """BurninDestinationSettings - a model defined in OpenAPI

        :param alignment: The alignment of this BurninDestinationSettings.
        :param apply_font_color: The apply_font_color of this BurninDestinationSettings.
        :param background_color: The background_color of this BurninDestinationSettings.
        :param background_opacity: The background_opacity of this BurninDestinationSettings.
        :param fallback_font: The fallback_font of this BurninDestinationSettings.
        :param font_color: The font_color of this BurninDestinationSettings.
        :param font_opacity: The font_opacity of this BurninDestinationSettings.
        :param font_resolution: The font_resolution of this BurninDestinationSettings.
        :param font_script: The font_script of this BurninDestinationSettings.
        :param font_size: The font_size of this BurninDestinationSettings.
        :param hex_font_color: The hex_font_color of this BurninDestinationSettings.
        :param outline_color: The outline_color of this BurninDestinationSettings.
        :param outline_size: The outline_size of this BurninDestinationSettings.
        :param shadow_color: The shadow_color of this BurninDestinationSettings.
        :param shadow_opacity: The shadow_opacity of this BurninDestinationSettings.
        :param shadow_x_offset: The shadow_x_offset of this BurninDestinationSettings.
        :param shadow_y_offset: The shadow_y_offset of this BurninDestinationSettings.
        :param style_passthrough: The style_passthrough of this BurninDestinationSettings.
        :param teletext_spacing: The teletext_spacing of this BurninDestinationSettings.
        :param x_position: The x_position of this BurninDestinationSettings.
        :param y_position: The y_position of this BurninDestinationSettings.
        """
        self.openapi_types = {
            'alignment': BurninSubtitleAlignment,
            'apply_font_color': BurninSubtitleApplyFontColor,
            'background_color': BurninSubtitleBackgroundColor,
            'background_opacity': int,
            'fallback_font': BurninSubtitleFallbackFont,
            'font_color': BurninSubtitleFontColor,
            'font_opacity': int,
            'font_resolution': int,
            'font_script': FontScript,
            'font_size': int,
            'hex_font_color': str,
            'outline_color': BurninSubtitleOutlineColor,
            'outline_size': int,
            'shadow_color': BurninSubtitleShadowColor,
            'shadow_opacity': int,
            'shadow_x_offset': int,
            'shadow_y_offset': int,
            'style_passthrough': BurnInSubtitleStylePassthrough,
            'teletext_spacing': BurninSubtitleTeletextSpacing,
            'x_position': int,
            'y_position': int
        }

        self.attribute_map = {
            'alignment': 'Alignment',
            'apply_font_color': 'ApplyFontColor',
            'background_color': 'BackgroundColor',
            'background_opacity': 'BackgroundOpacity',
            'fallback_font': 'FallbackFont',
            'font_color': 'FontColor',
            'font_opacity': 'FontOpacity',
            'font_resolution': 'FontResolution',
            'font_script': 'FontScript',
            'font_size': 'FontSize',
            'hex_font_color': 'HexFontColor',
            'outline_color': 'OutlineColor',
            'outline_size': 'OutlineSize',
            'shadow_color': 'ShadowColor',
            'shadow_opacity': 'ShadowOpacity',
            'shadow_x_offset': 'ShadowXOffset',
            'shadow_y_offset': 'ShadowYOffset',
            'style_passthrough': 'StylePassthrough',
            'teletext_spacing': 'TeletextSpacing',
            'x_position': 'XPosition',
            'y_position': 'YPosition'
        }

        self._alignment = alignment
        self._apply_font_color = apply_font_color
        self._background_color = background_color
        self._background_opacity = background_opacity
        self._fallback_font = fallback_font
        self._font_color = font_color
        self._font_opacity = font_opacity
        self._font_resolution = font_resolution
        self._font_script = font_script
        self._font_size = font_size
        self._hex_font_color = hex_font_color
        self._outline_color = outline_color
        self._outline_size = outline_size
        self._shadow_color = shadow_color
        self._shadow_opacity = shadow_opacity
        self._shadow_x_offset = shadow_x_offset
        self._shadow_y_offset = shadow_y_offset
        self._style_passthrough = style_passthrough
        self._teletext_spacing = teletext_spacing
        self._x_position = x_position
        self._y_position = y_position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BurninDestinationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BurninDestinationSettings of this BurninDestinationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alignment(self):
        """Gets the alignment of this BurninDestinationSettings.


        :return: The alignment of this BurninDestinationSettings.
        :rtype: BurninSubtitleAlignment
        """
        return self._alignment

    @alignment.setter
    def alignment(self, alignment):
        """Sets the alignment of this BurninDestinationSettings.


        :param alignment: The alignment of this BurninDestinationSettings.
        :type alignment: BurninSubtitleAlignment
        """

        self._alignment = alignment

    @property
    def apply_font_color(self):
        """Gets the apply_font_color of this BurninDestinationSettings.


        :return: The apply_font_color of this BurninDestinationSettings.
        :rtype: BurninSubtitleApplyFontColor
        """
        return self._apply_font_color

    @apply_font_color.setter
    def apply_font_color(self, apply_font_color):
        """Sets the apply_font_color of this BurninDestinationSettings.


        :param apply_font_color: The apply_font_color of this BurninDestinationSettings.
        :type apply_font_color: BurninSubtitleApplyFontColor
        """

        self._apply_font_color = apply_font_color

    @property
    def background_color(self):
        """Gets the background_color of this BurninDestinationSettings.


        :return: The background_color of this BurninDestinationSettings.
        :rtype: BurninSubtitleBackgroundColor
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this BurninDestinationSettings.


        :param background_color: The background_color of this BurninDestinationSettings.
        :type background_color: BurninSubtitleBackgroundColor
        """

        self._background_color = background_color

    @property
    def background_opacity(self):
        """Gets the background_opacity of this BurninDestinationSettings.


        :return: The background_opacity of this BurninDestinationSettings.
        :rtype: int
        """
        return self._background_opacity

    @background_opacity.setter
    def background_opacity(self, background_opacity):
        """Sets the background_opacity of this BurninDestinationSettings.


        :param background_opacity: The background_opacity of this BurninDestinationSettings.
        :type background_opacity: int
        """

        self._background_opacity = background_opacity

    @property
    def fallback_font(self):
        """Gets the fallback_font of this BurninDestinationSettings.


        :return: The fallback_font of this BurninDestinationSettings.
        :rtype: BurninSubtitleFallbackFont
        """
        return self._fallback_font

    @fallback_font.setter
    def fallback_font(self, fallback_font):
        """Sets the fallback_font of this BurninDestinationSettings.


        :param fallback_font: The fallback_font of this BurninDestinationSettings.
        :type fallback_font: BurninSubtitleFallbackFont
        """

        self._fallback_font = fallback_font

    @property
    def font_color(self):
        """Gets the font_color of this BurninDestinationSettings.


        :return: The font_color of this BurninDestinationSettings.
        :rtype: BurninSubtitleFontColor
        """
        return self._font_color

    @font_color.setter
    def font_color(self, font_color):
        """Sets the font_color of this BurninDestinationSettings.


        :param font_color: The font_color of this BurninDestinationSettings.
        :type font_color: BurninSubtitleFontColor
        """

        self._font_color = font_color

    @property
    def font_opacity(self):
        """Gets the font_opacity of this BurninDestinationSettings.


        :return: The font_opacity of this BurninDestinationSettings.
        :rtype: int
        """
        return self._font_opacity

    @font_opacity.setter
    def font_opacity(self, font_opacity):
        """Sets the font_opacity of this BurninDestinationSettings.


        :param font_opacity: The font_opacity of this BurninDestinationSettings.
        :type font_opacity: int
        """

        self._font_opacity = font_opacity

    @property
    def font_resolution(self):
        """Gets the font_resolution of this BurninDestinationSettings.


        :return: The font_resolution of this BurninDestinationSettings.
        :rtype: int
        """
        return self._font_resolution

    @font_resolution.setter
    def font_resolution(self, font_resolution):
        """Sets the font_resolution of this BurninDestinationSettings.


        :param font_resolution: The font_resolution of this BurninDestinationSettings.
        :type font_resolution: int
        """

        self._font_resolution = font_resolution

    @property
    def font_script(self):
        """Gets the font_script of this BurninDestinationSettings.


        :return: The font_script of this BurninDestinationSettings.
        :rtype: FontScript
        """
        return self._font_script

    @font_script.setter
    def font_script(self, font_script):
        """Sets the font_script of this BurninDestinationSettings.


        :param font_script: The font_script of this BurninDestinationSettings.
        :type font_script: FontScript
        """

        self._font_script = font_script

    @property
    def font_size(self):
        """Gets the font_size of this BurninDestinationSettings.


        :return: The font_size of this BurninDestinationSettings.
        :rtype: int
        """
        return self._font_size

    @font_size.setter
    def font_size(self, font_size):
        """Sets the font_size of this BurninDestinationSettings.


        :param font_size: The font_size of this BurninDestinationSettings.
        :type font_size: int
        """

        self._font_size = font_size

    @property
    def hex_font_color(self):
        """Gets the hex_font_color of this BurninDestinationSettings.


        :return: The hex_font_color of this BurninDestinationSettings.
        :rtype: str
        """
        return self._hex_font_color

    @hex_font_color.setter
    def hex_font_color(self, hex_font_color):
        """Sets the hex_font_color of this BurninDestinationSettings.


        :param hex_font_color: The hex_font_color of this BurninDestinationSettings.
        :type hex_font_color: str
        """

        self._hex_font_color = hex_font_color

    @property
    def outline_color(self):
        """Gets the outline_color of this BurninDestinationSettings.


        :return: The outline_color of this BurninDestinationSettings.
        :rtype: BurninSubtitleOutlineColor
        """
        return self._outline_color

    @outline_color.setter
    def outline_color(self, outline_color):
        """Sets the outline_color of this BurninDestinationSettings.


        :param outline_color: The outline_color of this BurninDestinationSettings.
        :type outline_color: BurninSubtitleOutlineColor
        """

        self._outline_color = outline_color

    @property
    def outline_size(self):
        """Gets the outline_size of this BurninDestinationSettings.


        :return: The outline_size of this BurninDestinationSettings.
        :rtype: int
        """
        return self._outline_size

    @outline_size.setter
    def outline_size(self, outline_size):
        """Sets the outline_size of this BurninDestinationSettings.


        :param outline_size: The outline_size of this BurninDestinationSettings.
        :type outline_size: int
        """

        self._outline_size = outline_size

    @property
    def shadow_color(self):
        """Gets the shadow_color of this BurninDestinationSettings.


        :return: The shadow_color of this BurninDestinationSettings.
        :rtype: BurninSubtitleShadowColor
        """
        return self._shadow_color

    @shadow_color.setter
    def shadow_color(self, shadow_color):
        """Sets the shadow_color of this BurninDestinationSettings.


        :param shadow_color: The shadow_color of this BurninDestinationSettings.
        :type shadow_color: BurninSubtitleShadowColor
        """

        self._shadow_color = shadow_color

    @property
    def shadow_opacity(self):
        """Gets the shadow_opacity of this BurninDestinationSettings.


        :return: The shadow_opacity of this BurninDestinationSettings.
        :rtype: int
        """
        return self._shadow_opacity

    @shadow_opacity.setter
    def shadow_opacity(self, shadow_opacity):
        """Sets the shadow_opacity of this BurninDestinationSettings.


        :param shadow_opacity: The shadow_opacity of this BurninDestinationSettings.
        :type shadow_opacity: int
        """

        self._shadow_opacity = shadow_opacity

    @property
    def shadow_x_offset(self):
        """Gets the shadow_x_offset of this BurninDestinationSettings.


        :return: The shadow_x_offset of this BurninDestinationSettings.
        :rtype: int
        """
        return self._shadow_x_offset

    @shadow_x_offset.setter
    def shadow_x_offset(self, shadow_x_offset):
        """Sets the shadow_x_offset of this BurninDestinationSettings.


        :param shadow_x_offset: The shadow_x_offset of this BurninDestinationSettings.
        :type shadow_x_offset: int
        """

        self._shadow_x_offset = shadow_x_offset

    @property
    def shadow_y_offset(self):
        """Gets the shadow_y_offset of this BurninDestinationSettings.


        :return: The shadow_y_offset of this BurninDestinationSettings.
        :rtype: int
        """
        return self._shadow_y_offset

    @shadow_y_offset.setter
    def shadow_y_offset(self, shadow_y_offset):
        """Sets the shadow_y_offset of this BurninDestinationSettings.


        :param shadow_y_offset: The shadow_y_offset of this BurninDestinationSettings.
        :type shadow_y_offset: int
        """

        self._shadow_y_offset = shadow_y_offset

    @property
    def style_passthrough(self):
        """Gets the style_passthrough of this BurninDestinationSettings.


        :return: The style_passthrough of this BurninDestinationSettings.
        :rtype: BurnInSubtitleStylePassthrough
        """
        return self._style_passthrough

    @style_passthrough.setter
    def style_passthrough(self, style_passthrough):
        """Sets the style_passthrough of this BurninDestinationSettings.


        :param style_passthrough: The style_passthrough of this BurninDestinationSettings.
        :type style_passthrough: BurnInSubtitleStylePassthrough
        """

        self._style_passthrough = style_passthrough

    @property
    def teletext_spacing(self):
        """Gets the teletext_spacing of this BurninDestinationSettings.


        :return: The teletext_spacing of this BurninDestinationSettings.
        :rtype: BurninSubtitleTeletextSpacing
        """
        return self._teletext_spacing

    @teletext_spacing.setter
    def teletext_spacing(self, teletext_spacing):
        """Sets the teletext_spacing of this BurninDestinationSettings.


        :param teletext_spacing: The teletext_spacing of this BurninDestinationSettings.
        :type teletext_spacing: BurninSubtitleTeletextSpacing
        """

        self._teletext_spacing = teletext_spacing

    @property
    def x_position(self):
        """Gets the x_position of this BurninDestinationSettings.


        :return: The x_position of this BurninDestinationSettings.
        :rtype: int
        """
        return self._x_position

    @x_position.setter
    def x_position(self, x_position):
        """Sets the x_position of this BurninDestinationSettings.


        :param x_position: The x_position of this BurninDestinationSettings.
        :type x_position: int
        """

        self._x_position = x_position

    @property
    def y_position(self):
        """Gets the y_position of this BurninDestinationSettings.


        :return: The y_position of this BurninDestinationSettings.
        :rtype: int
        """
        return self._y_position

    @y_position.setter
    def y_position(self, y_position):
        """Sets the y_position of this BurninDestinationSettings.


        :param y_position: The y_position of this BurninDestinationSettings.
        :type y_position: int
        """

        self._y_position = y_position
