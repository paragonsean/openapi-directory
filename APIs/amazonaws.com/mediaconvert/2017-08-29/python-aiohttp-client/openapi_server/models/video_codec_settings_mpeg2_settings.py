# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mpeg2_adaptive_quantization import Mpeg2AdaptiveQuantization
from openapi_server.models.mpeg2_codec_level import Mpeg2CodecLevel
from openapi_server.models.mpeg2_codec_profile import Mpeg2CodecProfile
from openapi_server.models.mpeg2_dynamic_sub_gop import Mpeg2DynamicSubGop
from openapi_server.models.mpeg2_framerate_control import Mpeg2FramerateControl
from openapi_server.models.mpeg2_framerate_conversion_algorithm import Mpeg2FramerateConversionAlgorithm
from openapi_server.models.mpeg2_gop_size_units import Mpeg2GopSizeUnits
from openapi_server.models.mpeg2_interlace_mode import Mpeg2InterlaceMode
from openapi_server.models.mpeg2_intra_dc_precision import Mpeg2IntraDcPrecision
from openapi_server.models.mpeg2_par_control import Mpeg2ParControl
from openapi_server.models.mpeg2_quality_tuning_level import Mpeg2QualityTuningLevel
from openapi_server.models.mpeg2_rate_control_mode import Mpeg2RateControlMode
from openapi_server.models.mpeg2_scan_type_conversion_mode import Mpeg2ScanTypeConversionMode
from openapi_server.models.mpeg2_scene_change_detect import Mpeg2SceneChangeDetect
from openapi_server.models.mpeg2_slow_pal import Mpeg2SlowPal
from openapi_server.models.mpeg2_spatial_adaptive_quantization import Mpeg2SpatialAdaptiveQuantization
from openapi_server.models.mpeg2_syntax import Mpeg2Syntax
from openapi_server.models.mpeg2_telecine import Mpeg2Telecine
from openapi_server.models.mpeg2_temporal_adaptive_quantization import Mpeg2TemporalAdaptiveQuantization
from openapi_server import util


class VideoCodecSettingsMpeg2Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adaptive_quantization: Mpeg2AdaptiveQuantization=None, bitrate: int=None, codec_level: Mpeg2CodecLevel=None, codec_profile: Mpeg2CodecProfile=None, dynamic_sub_gop: Mpeg2DynamicSubGop=None, framerate_control: Mpeg2FramerateControl=None, framerate_conversion_algorithm: Mpeg2FramerateConversionAlgorithm=None, framerate_denominator: int=None, framerate_numerator: int=None, gop_closed_cadence: int=None, gop_size: float=None, gop_size_units: Mpeg2GopSizeUnits=None, hrd_buffer_final_fill_percentage: int=None, hrd_buffer_initial_fill_percentage: int=None, hrd_buffer_size: int=None, interlace_mode: Mpeg2InterlaceMode=None, intra_dc_precision: Mpeg2IntraDcPrecision=None, max_bitrate: int=None, min_i_interval: int=None, number_b_frames_between_reference_frames: int=None, par_control: Mpeg2ParControl=None, par_denominator: int=None, par_numerator: int=None, quality_tuning_level: Mpeg2QualityTuningLevel=None, rate_control_mode: Mpeg2RateControlMode=None, scan_type_conversion_mode: Mpeg2ScanTypeConversionMode=None, scene_change_detect: Mpeg2SceneChangeDetect=None, slow_pal: Mpeg2SlowPal=None, softness: int=None, spatial_adaptive_quantization: Mpeg2SpatialAdaptiveQuantization=None, syntax: Mpeg2Syntax=None, telecine: Mpeg2Telecine=None, temporal_adaptive_quantization: Mpeg2TemporalAdaptiveQuantization=None):
        """VideoCodecSettingsMpeg2Settings - a model defined in OpenAPI

        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :param bitrate: The bitrate of this VideoCodecSettingsMpeg2Settings.
        :param codec_level: The codec_level of this VideoCodecSettingsMpeg2Settings.
        :param codec_profile: The codec_profile of this VideoCodecSettingsMpeg2Settings.
        :param dynamic_sub_gop: The dynamic_sub_gop of this VideoCodecSettingsMpeg2Settings.
        :param framerate_control: The framerate_control of this VideoCodecSettingsMpeg2Settings.
        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsMpeg2Settings.
        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsMpeg2Settings.
        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsMpeg2Settings.
        :param gop_closed_cadence: The gop_closed_cadence of this VideoCodecSettingsMpeg2Settings.
        :param gop_size: The gop_size of this VideoCodecSettingsMpeg2Settings.
        :param gop_size_units: The gop_size_units of this VideoCodecSettingsMpeg2Settings.
        :param hrd_buffer_final_fill_percentage: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :param hrd_buffer_initial_fill_percentage: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :param hrd_buffer_size: The hrd_buffer_size of this VideoCodecSettingsMpeg2Settings.
        :param interlace_mode: The interlace_mode of this VideoCodecSettingsMpeg2Settings.
        :param intra_dc_precision: The intra_dc_precision of this VideoCodecSettingsMpeg2Settings.
        :param max_bitrate: The max_bitrate of this VideoCodecSettingsMpeg2Settings.
        :param min_i_interval: The min_i_interval of this VideoCodecSettingsMpeg2Settings.
        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsMpeg2Settings.
        :param par_control: The par_control of this VideoCodecSettingsMpeg2Settings.
        :param par_denominator: The par_denominator of this VideoCodecSettingsMpeg2Settings.
        :param par_numerator: The par_numerator of this VideoCodecSettingsMpeg2Settings.
        :param quality_tuning_level: The quality_tuning_level of this VideoCodecSettingsMpeg2Settings.
        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsMpeg2Settings.
        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsMpeg2Settings.
        :param scene_change_detect: The scene_change_detect of this VideoCodecSettingsMpeg2Settings.
        :param slow_pal: The slow_pal of this VideoCodecSettingsMpeg2Settings.
        :param softness: The softness of this VideoCodecSettingsMpeg2Settings.
        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :param syntax: The syntax of this VideoCodecSettingsMpeg2Settings.
        :param telecine: The telecine of this VideoCodecSettingsMpeg2Settings.
        :param temporal_adaptive_quantization: The temporal_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        """
        self.openapi_types = {
            'adaptive_quantization': Mpeg2AdaptiveQuantization,
            'bitrate': int,
            'codec_level': Mpeg2CodecLevel,
            'codec_profile': Mpeg2CodecProfile,
            'dynamic_sub_gop': Mpeg2DynamicSubGop,
            'framerate_control': Mpeg2FramerateControl,
            'framerate_conversion_algorithm': Mpeg2FramerateConversionAlgorithm,
            'framerate_denominator': int,
            'framerate_numerator': int,
            'gop_closed_cadence': int,
            'gop_size': float,
            'gop_size_units': Mpeg2GopSizeUnits,
            'hrd_buffer_final_fill_percentage': int,
            'hrd_buffer_initial_fill_percentage': int,
            'hrd_buffer_size': int,
            'interlace_mode': Mpeg2InterlaceMode,
            'intra_dc_precision': Mpeg2IntraDcPrecision,
            'max_bitrate': int,
            'min_i_interval': int,
            'number_b_frames_between_reference_frames': int,
            'par_control': Mpeg2ParControl,
            'par_denominator': int,
            'par_numerator': int,
            'quality_tuning_level': Mpeg2QualityTuningLevel,
            'rate_control_mode': Mpeg2RateControlMode,
            'scan_type_conversion_mode': Mpeg2ScanTypeConversionMode,
            'scene_change_detect': Mpeg2SceneChangeDetect,
            'slow_pal': Mpeg2SlowPal,
            'softness': int,
            'spatial_adaptive_quantization': Mpeg2SpatialAdaptiveQuantization,
            'syntax': Mpeg2Syntax,
            'telecine': Mpeg2Telecine,
            'temporal_adaptive_quantization': Mpeg2TemporalAdaptiveQuantization
        }

        self.attribute_map = {
            'adaptive_quantization': 'AdaptiveQuantization',
            'bitrate': 'Bitrate',
            'codec_level': 'CodecLevel',
            'codec_profile': 'CodecProfile',
            'dynamic_sub_gop': 'DynamicSubGop',
            'framerate_control': 'FramerateControl',
            'framerate_conversion_algorithm': 'FramerateConversionAlgorithm',
            'framerate_denominator': 'FramerateDenominator',
            'framerate_numerator': 'FramerateNumerator',
            'gop_closed_cadence': 'GopClosedCadence',
            'gop_size': 'GopSize',
            'gop_size_units': 'GopSizeUnits',
            'hrd_buffer_final_fill_percentage': 'HrdBufferFinalFillPercentage',
            'hrd_buffer_initial_fill_percentage': 'HrdBufferInitialFillPercentage',
            'hrd_buffer_size': 'HrdBufferSize',
            'interlace_mode': 'InterlaceMode',
            'intra_dc_precision': 'IntraDcPrecision',
            'max_bitrate': 'MaxBitrate',
            'min_i_interval': 'MinIInterval',
            'number_b_frames_between_reference_frames': 'NumberBFramesBetweenReferenceFrames',
            'par_control': 'ParControl',
            'par_denominator': 'ParDenominator',
            'par_numerator': 'ParNumerator',
            'quality_tuning_level': 'QualityTuningLevel',
            'rate_control_mode': 'RateControlMode',
            'scan_type_conversion_mode': 'ScanTypeConversionMode',
            'scene_change_detect': 'SceneChangeDetect',
            'slow_pal': 'SlowPal',
            'softness': 'Softness',
            'spatial_adaptive_quantization': 'SpatialAdaptiveQuantization',
            'syntax': 'Syntax',
            'telecine': 'Telecine',
            'temporal_adaptive_quantization': 'TemporalAdaptiveQuantization'
        }

        self._adaptive_quantization = adaptive_quantization
        self._bitrate = bitrate
        self._codec_level = codec_level
        self._codec_profile = codec_profile
        self._dynamic_sub_gop = dynamic_sub_gop
        self._framerate_control = framerate_control
        self._framerate_conversion_algorithm = framerate_conversion_algorithm
        self._framerate_denominator = framerate_denominator
        self._framerate_numerator = framerate_numerator
        self._gop_closed_cadence = gop_closed_cadence
        self._gop_size = gop_size
        self._gop_size_units = gop_size_units
        self._hrd_buffer_final_fill_percentage = hrd_buffer_final_fill_percentage
        self._hrd_buffer_initial_fill_percentage = hrd_buffer_initial_fill_percentage
        self._hrd_buffer_size = hrd_buffer_size
        self._interlace_mode = interlace_mode
        self._intra_dc_precision = intra_dc_precision
        self._max_bitrate = max_bitrate
        self._min_i_interval = min_i_interval
        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames
        self._par_control = par_control
        self._par_denominator = par_denominator
        self._par_numerator = par_numerator
        self._quality_tuning_level = quality_tuning_level
        self._rate_control_mode = rate_control_mode
        self._scan_type_conversion_mode = scan_type_conversion_mode
        self._scene_change_detect = scene_change_detect
        self._slow_pal = slow_pal
        self._softness = softness
        self._spatial_adaptive_quantization = spatial_adaptive_quantization
        self._syntax = syntax
        self._telecine = telecine
        self._temporal_adaptive_quantization = temporal_adaptive_quantization

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettingsMpeg2Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings_Mpeg2Settings of this VideoCodecSettingsMpeg2Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adaptive_quantization(self):
        """Gets the adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :return: The adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2AdaptiveQuantization
        """
        return self._adaptive_quantization

    @adaptive_quantization.setter
    def adaptive_quantization(self, adaptive_quantization):
        """Sets the adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :param adaptive_quantization: The adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :type adaptive_quantization: Mpeg2AdaptiveQuantization
        """

        self._adaptive_quantization = adaptive_quantization

    @property
    def bitrate(self):
        """Gets the bitrate of this VideoCodecSettingsMpeg2Settings.


        :return: The bitrate of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._bitrate

    @bitrate.setter
    def bitrate(self, bitrate):
        """Sets the bitrate of this VideoCodecSettingsMpeg2Settings.


        :param bitrate: The bitrate of this VideoCodecSettingsMpeg2Settings.
        :type bitrate: int
        """

        self._bitrate = bitrate

    @property
    def codec_level(self):
        """Gets the codec_level of this VideoCodecSettingsMpeg2Settings.


        :return: The codec_level of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2CodecLevel
        """
        return self._codec_level

    @codec_level.setter
    def codec_level(self, codec_level):
        """Sets the codec_level of this VideoCodecSettingsMpeg2Settings.


        :param codec_level: The codec_level of this VideoCodecSettingsMpeg2Settings.
        :type codec_level: Mpeg2CodecLevel
        """

        self._codec_level = codec_level

    @property
    def codec_profile(self):
        """Gets the codec_profile of this VideoCodecSettingsMpeg2Settings.


        :return: The codec_profile of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2CodecProfile
        """
        return self._codec_profile

    @codec_profile.setter
    def codec_profile(self, codec_profile):
        """Sets the codec_profile of this VideoCodecSettingsMpeg2Settings.


        :param codec_profile: The codec_profile of this VideoCodecSettingsMpeg2Settings.
        :type codec_profile: Mpeg2CodecProfile
        """

        self._codec_profile = codec_profile

    @property
    def dynamic_sub_gop(self):
        """Gets the dynamic_sub_gop of this VideoCodecSettingsMpeg2Settings.


        :return: The dynamic_sub_gop of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2DynamicSubGop
        """
        return self._dynamic_sub_gop

    @dynamic_sub_gop.setter
    def dynamic_sub_gop(self, dynamic_sub_gop):
        """Sets the dynamic_sub_gop of this VideoCodecSettingsMpeg2Settings.


        :param dynamic_sub_gop: The dynamic_sub_gop of this VideoCodecSettingsMpeg2Settings.
        :type dynamic_sub_gop: Mpeg2DynamicSubGop
        """

        self._dynamic_sub_gop = dynamic_sub_gop

    @property
    def framerate_control(self):
        """Gets the framerate_control of this VideoCodecSettingsMpeg2Settings.


        :return: The framerate_control of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2FramerateControl
        """
        return self._framerate_control

    @framerate_control.setter
    def framerate_control(self, framerate_control):
        """Sets the framerate_control of this VideoCodecSettingsMpeg2Settings.


        :param framerate_control: The framerate_control of this VideoCodecSettingsMpeg2Settings.
        :type framerate_control: Mpeg2FramerateControl
        """

        self._framerate_control = framerate_control

    @property
    def framerate_conversion_algorithm(self):
        """Gets the framerate_conversion_algorithm of this VideoCodecSettingsMpeg2Settings.


        :return: The framerate_conversion_algorithm of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2FramerateConversionAlgorithm
        """
        return self._framerate_conversion_algorithm

    @framerate_conversion_algorithm.setter
    def framerate_conversion_algorithm(self, framerate_conversion_algorithm):
        """Sets the framerate_conversion_algorithm of this VideoCodecSettingsMpeg2Settings.


        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsMpeg2Settings.
        :type framerate_conversion_algorithm: Mpeg2FramerateConversionAlgorithm
        """

        self._framerate_conversion_algorithm = framerate_conversion_algorithm

    @property
    def framerate_denominator(self):
        """Gets the framerate_denominator of this VideoCodecSettingsMpeg2Settings.


        :return: The framerate_denominator of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._framerate_denominator

    @framerate_denominator.setter
    def framerate_denominator(self, framerate_denominator):
        """Sets the framerate_denominator of this VideoCodecSettingsMpeg2Settings.


        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsMpeg2Settings.
        :type framerate_denominator: int
        """

        self._framerate_denominator = framerate_denominator

    @property
    def framerate_numerator(self):
        """Gets the framerate_numerator of this VideoCodecSettingsMpeg2Settings.


        :return: The framerate_numerator of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._framerate_numerator

    @framerate_numerator.setter
    def framerate_numerator(self, framerate_numerator):
        """Sets the framerate_numerator of this VideoCodecSettingsMpeg2Settings.


        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsMpeg2Settings.
        :type framerate_numerator: int
        """

        self._framerate_numerator = framerate_numerator

    @property
    def gop_closed_cadence(self):
        """Gets the gop_closed_cadence of this VideoCodecSettingsMpeg2Settings.


        :return: The gop_closed_cadence of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._gop_closed_cadence

    @gop_closed_cadence.setter
    def gop_closed_cadence(self, gop_closed_cadence):
        """Sets the gop_closed_cadence of this VideoCodecSettingsMpeg2Settings.


        :param gop_closed_cadence: The gop_closed_cadence of this VideoCodecSettingsMpeg2Settings.
        :type gop_closed_cadence: int
        """

        self._gop_closed_cadence = gop_closed_cadence

    @property
    def gop_size(self):
        """Gets the gop_size of this VideoCodecSettingsMpeg2Settings.


        :return: The gop_size of this VideoCodecSettingsMpeg2Settings.
        :rtype: float
        """
        return self._gop_size

    @gop_size.setter
    def gop_size(self, gop_size):
        """Sets the gop_size of this VideoCodecSettingsMpeg2Settings.


        :param gop_size: The gop_size of this VideoCodecSettingsMpeg2Settings.
        :type gop_size: float
        """

        self._gop_size = gop_size

    @property
    def gop_size_units(self):
        """Gets the gop_size_units of this VideoCodecSettingsMpeg2Settings.


        :return: The gop_size_units of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2GopSizeUnits
        """
        return self._gop_size_units

    @gop_size_units.setter
    def gop_size_units(self, gop_size_units):
        """Sets the gop_size_units of this VideoCodecSettingsMpeg2Settings.


        :param gop_size_units: The gop_size_units of this VideoCodecSettingsMpeg2Settings.
        :type gop_size_units: Mpeg2GopSizeUnits
        """

        self._gop_size_units = gop_size_units

    @property
    def hrd_buffer_final_fill_percentage(self):
        """Gets the hrd_buffer_final_fill_percentage of this VideoCodecSettingsMpeg2Settings.


        :return: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._hrd_buffer_final_fill_percentage

    @hrd_buffer_final_fill_percentage.setter
    def hrd_buffer_final_fill_percentage(self, hrd_buffer_final_fill_percentage):
        """Sets the hrd_buffer_final_fill_percentage of this VideoCodecSettingsMpeg2Settings.


        :param hrd_buffer_final_fill_percentage: The hrd_buffer_final_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :type hrd_buffer_final_fill_percentage: int
        """

        self._hrd_buffer_final_fill_percentage = hrd_buffer_final_fill_percentage

    @property
    def hrd_buffer_initial_fill_percentage(self):
        """Gets the hrd_buffer_initial_fill_percentage of this VideoCodecSettingsMpeg2Settings.


        :return: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._hrd_buffer_initial_fill_percentage

    @hrd_buffer_initial_fill_percentage.setter
    def hrd_buffer_initial_fill_percentage(self, hrd_buffer_initial_fill_percentage):
        """Sets the hrd_buffer_initial_fill_percentage of this VideoCodecSettingsMpeg2Settings.


        :param hrd_buffer_initial_fill_percentage: The hrd_buffer_initial_fill_percentage of this VideoCodecSettingsMpeg2Settings.
        :type hrd_buffer_initial_fill_percentage: int
        """

        self._hrd_buffer_initial_fill_percentage = hrd_buffer_initial_fill_percentage

    @property
    def hrd_buffer_size(self):
        """Gets the hrd_buffer_size of this VideoCodecSettingsMpeg2Settings.


        :return: The hrd_buffer_size of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._hrd_buffer_size

    @hrd_buffer_size.setter
    def hrd_buffer_size(self, hrd_buffer_size):
        """Sets the hrd_buffer_size of this VideoCodecSettingsMpeg2Settings.


        :param hrd_buffer_size: The hrd_buffer_size of this VideoCodecSettingsMpeg2Settings.
        :type hrd_buffer_size: int
        """

        self._hrd_buffer_size = hrd_buffer_size

    @property
    def interlace_mode(self):
        """Gets the interlace_mode of this VideoCodecSettingsMpeg2Settings.


        :return: The interlace_mode of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2InterlaceMode
        """
        return self._interlace_mode

    @interlace_mode.setter
    def interlace_mode(self, interlace_mode):
        """Sets the interlace_mode of this VideoCodecSettingsMpeg2Settings.


        :param interlace_mode: The interlace_mode of this VideoCodecSettingsMpeg2Settings.
        :type interlace_mode: Mpeg2InterlaceMode
        """

        self._interlace_mode = interlace_mode

    @property
    def intra_dc_precision(self):
        """Gets the intra_dc_precision of this VideoCodecSettingsMpeg2Settings.


        :return: The intra_dc_precision of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2IntraDcPrecision
        """
        return self._intra_dc_precision

    @intra_dc_precision.setter
    def intra_dc_precision(self, intra_dc_precision):
        """Sets the intra_dc_precision of this VideoCodecSettingsMpeg2Settings.


        :param intra_dc_precision: The intra_dc_precision of this VideoCodecSettingsMpeg2Settings.
        :type intra_dc_precision: Mpeg2IntraDcPrecision
        """

        self._intra_dc_precision = intra_dc_precision

    @property
    def max_bitrate(self):
        """Gets the max_bitrate of this VideoCodecSettingsMpeg2Settings.


        :return: The max_bitrate of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._max_bitrate

    @max_bitrate.setter
    def max_bitrate(self, max_bitrate):
        """Sets the max_bitrate of this VideoCodecSettingsMpeg2Settings.


        :param max_bitrate: The max_bitrate of this VideoCodecSettingsMpeg2Settings.
        :type max_bitrate: int
        """

        self._max_bitrate = max_bitrate

    @property
    def min_i_interval(self):
        """Gets the min_i_interval of this VideoCodecSettingsMpeg2Settings.


        :return: The min_i_interval of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._min_i_interval

    @min_i_interval.setter
    def min_i_interval(self, min_i_interval):
        """Sets the min_i_interval of this VideoCodecSettingsMpeg2Settings.


        :param min_i_interval: The min_i_interval of this VideoCodecSettingsMpeg2Settings.
        :type min_i_interval: int
        """

        self._min_i_interval = min_i_interval

    @property
    def number_b_frames_between_reference_frames(self):
        """Gets the number_b_frames_between_reference_frames of this VideoCodecSettingsMpeg2Settings.


        :return: The number_b_frames_between_reference_frames of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._number_b_frames_between_reference_frames

    @number_b_frames_between_reference_frames.setter
    def number_b_frames_between_reference_frames(self, number_b_frames_between_reference_frames):
        """Sets the number_b_frames_between_reference_frames of this VideoCodecSettingsMpeg2Settings.


        :param number_b_frames_between_reference_frames: The number_b_frames_between_reference_frames of this VideoCodecSettingsMpeg2Settings.
        :type number_b_frames_between_reference_frames: int
        """

        self._number_b_frames_between_reference_frames = number_b_frames_between_reference_frames

    @property
    def par_control(self):
        """Gets the par_control of this VideoCodecSettingsMpeg2Settings.


        :return: The par_control of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2ParControl
        """
        return self._par_control

    @par_control.setter
    def par_control(self, par_control):
        """Sets the par_control of this VideoCodecSettingsMpeg2Settings.


        :param par_control: The par_control of this VideoCodecSettingsMpeg2Settings.
        :type par_control: Mpeg2ParControl
        """

        self._par_control = par_control

    @property
    def par_denominator(self):
        """Gets the par_denominator of this VideoCodecSettingsMpeg2Settings.


        :return: The par_denominator of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._par_denominator

    @par_denominator.setter
    def par_denominator(self, par_denominator):
        """Sets the par_denominator of this VideoCodecSettingsMpeg2Settings.


        :param par_denominator: The par_denominator of this VideoCodecSettingsMpeg2Settings.
        :type par_denominator: int
        """

        self._par_denominator = par_denominator

    @property
    def par_numerator(self):
        """Gets the par_numerator of this VideoCodecSettingsMpeg2Settings.


        :return: The par_numerator of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._par_numerator

    @par_numerator.setter
    def par_numerator(self, par_numerator):
        """Sets the par_numerator of this VideoCodecSettingsMpeg2Settings.


        :param par_numerator: The par_numerator of this VideoCodecSettingsMpeg2Settings.
        :type par_numerator: int
        """

        self._par_numerator = par_numerator

    @property
    def quality_tuning_level(self):
        """Gets the quality_tuning_level of this VideoCodecSettingsMpeg2Settings.


        :return: The quality_tuning_level of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2QualityTuningLevel
        """
        return self._quality_tuning_level

    @quality_tuning_level.setter
    def quality_tuning_level(self, quality_tuning_level):
        """Sets the quality_tuning_level of this VideoCodecSettingsMpeg2Settings.


        :param quality_tuning_level: The quality_tuning_level of this VideoCodecSettingsMpeg2Settings.
        :type quality_tuning_level: Mpeg2QualityTuningLevel
        """

        self._quality_tuning_level = quality_tuning_level

    @property
    def rate_control_mode(self):
        """Gets the rate_control_mode of this VideoCodecSettingsMpeg2Settings.


        :return: The rate_control_mode of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2RateControlMode
        """
        return self._rate_control_mode

    @rate_control_mode.setter
    def rate_control_mode(self, rate_control_mode):
        """Sets the rate_control_mode of this VideoCodecSettingsMpeg2Settings.


        :param rate_control_mode: The rate_control_mode of this VideoCodecSettingsMpeg2Settings.
        :type rate_control_mode: Mpeg2RateControlMode
        """

        self._rate_control_mode = rate_control_mode

    @property
    def scan_type_conversion_mode(self):
        """Gets the scan_type_conversion_mode of this VideoCodecSettingsMpeg2Settings.


        :return: The scan_type_conversion_mode of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2ScanTypeConversionMode
        """
        return self._scan_type_conversion_mode

    @scan_type_conversion_mode.setter
    def scan_type_conversion_mode(self, scan_type_conversion_mode):
        """Sets the scan_type_conversion_mode of this VideoCodecSettingsMpeg2Settings.


        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsMpeg2Settings.
        :type scan_type_conversion_mode: Mpeg2ScanTypeConversionMode
        """

        self._scan_type_conversion_mode = scan_type_conversion_mode

    @property
    def scene_change_detect(self):
        """Gets the scene_change_detect of this VideoCodecSettingsMpeg2Settings.


        :return: The scene_change_detect of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2SceneChangeDetect
        """
        return self._scene_change_detect

    @scene_change_detect.setter
    def scene_change_detect(self, scene_change_detect):
        """Sets the scene_change_detect of this VideoCodecSettingsMpeg2Settings.


        :param scene_change_detect: The scene_change_detect of this VideoCodecSettingsMpeg2Settings.
        :type scene_change_detect: Mpeg2SceneChangeDetect
        """

        self._scene_change_detect = scene_change_detect

    @property
    def slow_pal(self):
        """Gets the slow_pal of this VideoCodecSettingsMpeg2Settings.


        :return: The slow_pal of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2SlowPal
        """
        return self._slow_pal

    @slow_pal.setter
    def slow_pal(self, slow_pal):
        """Sets the slow_pal of this VideoCodecSettingsMpeg2Settings.


        :param slow_pal: The slow_pal of this VideoCodecSettingsMpeg2Settings.
        :type slow_pal: Mpeg2SlowPal
        """

        self._slow_pal = slow_pal

    @property
    def softness(self):
        """Gets the softness of this VideoCodecSettingsMpeg2Settings.


        :return: The softness of this VideoCodecSettingsMpeg2Settings.
        :rtype: int
        """
        return self._softness

    @softness.setter
    def softness(self, softness):
        """Sets the softness of this VideoCodecSettingsMpeg2Settings.


        :param softness: The softness of this VideoCodecSettingsMpeg2Settings.
        :type softness: int
        """

        self._softness = softness

    @property
    def spatial_adaptive_quantization(self):
        """Gets the spatial_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :return: The spatial_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2SpatialAdaptiveQuantization
        """
        return self._spatial_adaptive_quantization

    @spatial_adaptive_quantization.setter
    def spatial_adaptive_quantization(self, spatial_adaptive_quantization):
        """Sets the spatial_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :param spatial_adaptive_quantization: The spatial_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :type spatial_adaptive_quantization: Mpeg2SpatialAdaptiveQuantization
        """

        self._spatial_adaptive_quantization = spatial_adaptive_quantization

    @property
    def syntax(self):
        """Gets the syntax of this VideoCodecSettingsMpeg2Settings.


        :return: The syntax of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2Syntax
        """
        return self._syntax

    @syntax.setter
    def syntax(self, syntax):
        """Sets the syntax of this VideoCodecSettingsMpeg2Settings.


        :param syntax: The syntax of this VideoCodecSettingsMpeg2Settings.
        :type syntax: Mpeg2Syntax
        """

        self._syntax = syntax

    @property
    def telecine(self):
        """Gets the telecine of this VideoCodecSettingsMpeg2Settings.


        :return: The telecine of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2Telecine
        """
        return self._telecine

    @telecine.setter
    def telecine(self, telecine):
        """Sets the telecine of this VideoCodecSettingsMpeg2Settings.


        :param telecine: The telecine of this VideoCodecSettingsMpeg2Settings.
        :type telecine: Mpeg2Telecine
        """

        self._telecine = telecine

    @property
    def temporal_adaptive_quantization(self):
        """Gets the temporal_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :return: The temporal_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :rtype: Mpeg2TemporalAdaptiveQuantization
        """
        return self._temporal_adaptive_quantization

    @temporal_adaptive_quantization.setter
    def temporal_adaptive_quantization(self, temporal_adaptive_quantization):
        """Sets the temporal_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.


        :param temporal_adaptive_quantization: The temporal_adaptive_quantization of this VideoCodecSettingsMpeg2Settings.
        :type temporal_adaptive_quantization: Mpeg2TemporalAdaptiveQuantization
        """

        self._temporal_adaptive_quantization = temporal_adaptive_quantization
