# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_default_selection import AudioDefaultSelection
from openapi_server.models.audio_duration_correction import AudioDurationCorrection
from openapi_server.models.audio_selector_hls_rendition_group_settings import AudioSelectorHlsRenditionGroupSettings
from openapi_server.models.audio_selector_remix_settings import AudioSelectorRemixSettings
from openapi_server.models.audio_selector_type import AudioSelectorType
from openapi_server.models.language_code import LanguageCode
from openapi_server import util


class AudioSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_duration_correction: AudioDurationCorrection=None, custom_language_code: str=None, default_selection: AudioDefaultSelection=None, external_audio_file_input: str=None, hls_rendition_group_settings: AudioSelectorHlsRenditionGroupSettings=None, language_code: LanguageCode=None, offset: int=None, pids: List=None, program_selection: int=None, remix_settings: AudioSelectorRemixSettings=None, selector_type: AudioSelectorType=None, tracks: List=None):
        """AudioSelector - a model defined in OpenAPI

        :param audio_duration_correction: The audio_duration_correction of this AudioSelector.
        :param custom_language_code: The custom_language_code of this AudioSelector.
        :param default_selection: The default_selection of this AudioSelector.
        :param external_audio_file_input: The external_audio_file_input of this AudioSelector.
        :param hls_rendition_group_settings: The hls_rendition_group_settings of this AudioSelector.
        :param language_code: The language_code of this AudioSelector.
        :param offset: The offset of this AudioSelector.
        :param pids: The pids of this AudioSelector.
        :param program_selection: The program_selection of this AudioSelector.
        :param remix_settings: The remix_settings of this AudioSelector.
        :param selector_type: The selector_type of this AudioSelector.
        :param tracks: The tracks of this AudioSelector.
        """
        self.openapi_types = {
            'audio_duration_correction': AudioDurationCorrection,
            'custom_language_code': str,
            'default_selection': AudioDefaultSelection,
            'external_audio_file_input': str,
            'hls_rendition_group_settings': AudioSelectorHlsRenditionGroupSettings,
            'language_code': LanguageCode,
            'offset': int,
            'pids': List,
            'program_selection': int,
            'remix_settings': AudioSelectorRemixSettings,
            'selector_type': AudioSelectorType,
            'tracks': List
        }

        self.attribute_map = {
            'audio_duration_correction': 'AudioDurationCorrection',
            'custom_language_code': 'CustomLanguageCode',
            'default_selection': 'DefaultSelection',
            'external_audio_file_input': 'ExternalAudioFileInput',
            'hls_rendition_group_settings': 'HlsRenditionGroupSettings',
            'language_code': 'LanguageCode',
            'offset': 'Offset',
            'pids': 'Pids',
            'program_selection': 'ProgramSelection',
            'remix_settings': 'RemixSettings',
            'selector_type': 'SelectorType',
            'tracks': 'Tracks'
        }

        self._audio_duration_correction = audio_duration_correction
        self._custom_language_code = custom_language_code
        self._default_selection = default_selection
        self._external_audio_file_input = external_audio_file_input
        self._hls_rendition_group_settings = hls_rendition_group_settings
        self._language_code = language_code
        self._offset = offset
        self._pids = pids
        self._program_selection = program_selection
        self._remix_settings = remix_settings
        self._selector_type = selector_type
        self._tracks = tracks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioSelector of this AudioSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_duration_correction(self):
        """Gets the audio_duration_correction of this AudioSelector.


        :return: The audio_duration_correction of this AudioSelector.
        :rtype: AudioDurationCorrection
        """
        return self._audio_duration_correction

    @audio_duration_correction.setter
    def audio_duration_correction(self, audio_duration_correction):
        """Sets the audio_duration_correction of this AudioSelector.


        :param audio_duration_correction: The audio_duration_correction of this AudioSelector.
        :type audio_duration_correction: AudioDurationCorrection
        """

        self._audio_duration_correction = audio_duration_correction

    @property
    def custom_language_code(self):
        """Gets the custom_language_code of this AudioSelector.


        :return: The custom_language_code of this AudioSelector.
        :rtype: str
        """
        return self._custom_language_code

    @custom_language_code.setter
    def custom_language_code(self, custom_language_code):
        """Sets the custom_language_code of this AudioSelector.


        :param custom_language_code: The custom_language_code of this AudioSelector.
        :type custom_language_code: str
        """

        self._custom_language_code = custom_language_code

    @property
    def default_selection(self):
        """Gets the default_selection of this AudioSelector.


        :return: The default_selection of this AudioSelector.
        :rtype: AudioDefaultSelection
        """
        return self._default_selection

    @default_selection.setter
    def default_selection(self, default_selection):
        """Sets the default_selection of this AudioSelector.


        :param default_selection: The default_selection of this AudioSelector.
        :type default_selection: AudioDefaultSelection
        """

        self._default_selection = default_selection

    @property
    def external_audio_file_input(self):
        """Gets the external_audio_file_input of this AudioSelector.


        :return: The external_audio_file_input of this AudioSelector.
        :rtype: str
        """
        return self._external_audio_file_input

    @external_audio_file_input.setter
    def external_audio_file_input(self, external_audio_file_input):
        """Sets the external_audio_file_input of this AudioSelector.


        :param external_audio_file_input: The external_audio_file_input of this AudioSelector.
        :type external_audio_file_input: str
        """

        self._external_audio_file_input = external_audio_file_input

    @property
    def hls_rendition_group_settings(self):
        """Gets the hls_rendition_group_settings of this AudioSelector.


        :return: The hls_rendition_group_settings of this AudioSelector.
        :rtype: AudioSelectorHlsRenditionGroupSettings
        """
        return self._hls_rendition_group_settings

    @hls_rendition_group_settings.setter
    def hls_rendition_group_settings(self, hls_rendition_group_settings):
        """Sets the hls_rendition_group_settings of this AudioSelector.


        :param hls_rendition_group_settings: The hls_rendition_group_settings of this AudioSelector.
        :type hls_rendition_group_settings: AudioSelectorHlsRenditionGroupSettings
        """

        self._hls_rendition_group_settings = hls_rendition_group_settings

    @property
    def language_code(self):
        """Gets the language_code of this AudioSelector.


        :return: The language_code of this AudioSelector.
        :rtype: LanguageCode
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this AudioSelector.


        :param language_code: The language_code of this AudioSelector.
        :type language_code: LanguageCode
        """

        self._language_code = language_code

    @property
    def offset(self):
        """Gets the offset of this AudioSelector.


        :return: The offset of this AudioSelector.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this AudioSelector.


        :param offset: The offset of this AudioSelector.
        :type offset: int
        """

        self._offset = offset

    @property
    def pids(self):
        """Gets the pids of this AudioSelector.


        :return: The pids of this AudioSelector.
        :rtype: List
        """
        return self._pids

    @pids.setter
    def pids(self, pids):
        """Sets the pids of this AudioSelector.


        :param pids: The pids of this AudioSelector.
        :type pids: List
        """

        self._pids = pids

    @property
    def program_selection(self):
        """Gets the program_selection of this AudioSelector.


        :return: The program_selection of this AudioSelector.
        :rtype: int
        """
        return self._program_selection

    @program_selection.setter
    def program_selection(self, program_selection):
        """Sets the program_selection of this AudioSelector.


        :param program_selection: The program_selection of this AudioSelector.
        :type program_selection: int
        """

        self._program_selection = program_selection

    @property
    def remix_settings(self):
        """Gets the remix_settings of this AudioSelector.


        :return: The remix_settings of this AudioSelector.
        :rtype: AudioSelectorRemixSettings
        """
        return self._remix_settings

    @remix_settings.setter
    def remix_settings(self, remix_settings):
        """Sets the remix_settings of this AudioSelector.


        :param remix_settings: The remix_settings of this AudioSelector.
        :type remix_settings: AudioSelectorRemixSettings
        """

        self._remix_settings = remix_settings

    @property
    def selector_type(self):
        """Gets the selector_type of this AudioSelector.


        :return: The selector_type of this AudioSelector.
        :rtype: AudioSelectorType
        """
        return self._selector_type

    @selector_type.setter
    def selector_type(self, selector_type):
        """Sets the selector_type of this AudioSelector.


        :param selector_type: The selector_type of this AudioSelector.
        :type selector_type: AudioSelectorType
        """

        self._selector_type = selector_type

    @property
    def tracks(self):
        """Gets the tracks of this AudioSelector.


        :return: The tracks of this AudioSelector.
        :rtype: List
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks):
        """Sets the tracks of this AudioSelector.


        :param tracks: The tracks of this AudioSelector.
        :type tracks: List
        """

        self._tracks = tracks
