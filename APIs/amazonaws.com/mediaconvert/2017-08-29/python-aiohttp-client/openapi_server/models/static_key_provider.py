# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StaticKeyProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_format: str=None, key_format_versions: str=None, static_key_value: str=None, url: str=None):
        """StaticKeyProvider - a model defined in OpenAPI

        :param key_format: The key_format of this StaticKeyProvider.
        :param key_format_versions: The key_format_versions of this StaticKeyProvider.
        :param static_key_value: The static_key_value of this StaticKeyProvider.
        :param url: The url of this StaticKeyProvider.
        """
        self.openapi_types = {
            'key_format': str,
            'key_format_versions': str,
            'static_key_value': str,
            'url': str
        }

        self.attribute_map = {
            'key_format': 'KeyFormat',
            'key_format_versions': 'KeyFormatVersions',
            'static_key_value': 'StaticKeyValue',
            'url': 'Url'
        }

        self._key_format = key_format
        self._key_format_versions = key_format_versions
        self._static_key_value = static_key_value
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StaticKeyProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StaticKeyProvider of this StaticKeyProvider.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_format(self):
        """Gets the key_format of this StaticKeyProvider.


        :return: The key_format of this StaticKeyProvider.
        :rtype: str
        """
        return self._key_format

    @key_format.setter
    def key_format(self, key_format):
        """Sets the key_format of this StaticKeyProvider.


        :param key_format: The key_format of this StaticKeyProvider.
        :type key_format: str
        """

        self._key_format = key_format

    @property
    def key_format_versions(self):
        """Gets the key_format_versions of this StaticKeyProvider.


        :return: The key_format_versions of this StaticKeyProvider.
        :rtype: str
        """
        return self._key_format_versions

    @key_format_versions.setter
    def key_format_versions(self, key_format_versions):
        """Sets the key_format_versions of this StaticKeyProvider.


        :param key_format_versions: The key_format_versions of this StaticKeyProvider.
        :type key_format_versions: str
        """

        self._key_format_versions = key_format_versions

    @property
    def static_key_value(self):
        """Gets the static_key_value of this StaticKeyProvider.


        :return: The static_key_value of this StaticKeyProvider.
        :rtype: str
        """
        return self._static_key_value

    @static_key_value.setter
    def static_key_value(self, static_key_value):
        """Sets the static_key_value of this StaticKeyProvider.


        :param static_key_value: The static_key_value of this StaticKeyProvider.
        :type static_key_value: str
        """

        self._static_key_value = static_key_value

    @property
    def url(self):
        """Gets the url of this StaticKeyProvider.


        :return: The url of this StaticKeyProvider.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this StaticKeyProvider.


        :param url: The url of this StaticKeyProvider.
        :type url: str
        """

        self._url = url
