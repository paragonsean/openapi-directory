# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vc3_class import Vc3Class
from openapi_server.models.vc3_framerate_control import Vc3FramerateControl
from openapi_server.models.vc3_framerate_conversion_algorithm import Vc3FramerateConversionAlgorithm
from openapi_server.models.vc3_interlace_mode import Vc3InterlaceMode
from openapi_server.models.vc3_scan_type_conversion_mode import Vc3ScanTypeConversionMode
from openapi_server.models.vc3_slow_pal import Vc3SlowPal
from openapi_server.models.vc3_telecine import Vc3Telecine
from openapi_server import util


class VideoCodecSettingsVc3Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, framerate_control: Vc3FramerateControl=None, framerate_conversion_algorithm: Vc3FramerateConversionAlgorithm=None, framerate_denominator: int=None, framerate_numerator: int=None, interlace_mode: Vc3InterlaceMode=None, scan_type_conversion_mode: Vc3ScanTypeConversionMode=None, slow_pal: Vc3SlowPal=None, telecine: Vc3Telecine=None, vc3_class: Vc3Class=None):
        """VideoCodecSettingsVc3Settings - a model defined in OpenAPI

        :param framerate_control: The framerate_control of this VideoCodecSettingsVc3Settings.
        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsVc3Settings.
        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsVc3Settings.
        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsVc3Settings.
        :param interlace_mode: The interlace_mode of this VideoCodecSettingsVc3Settings.
        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsVc3Settings.
        :param slow_pal: The slow_pal of this VideoCodecSettingsVc3Settings.
        :param telecine: The telecine of this VideoCodecSettingsVc3Settings.
        :param vc3_class: The vc3_class of this VideoCodecSettingsVc3Settings.
        """
        self.openapi_types = {
            'framerate_control': Vc3FramerateControl,
            'framerate_conversion_algorithm': Vc3FramerateConversionAlgorithm,
            'framerate_denominator': int,
            'framerate_numerator': int,
            'interlace_mode': Vc3InterlaceMode,
            'scan_type_conversion_mode': Vc3ScanTypeConversionMode,
            'slow_pal': Vc3SlowPal,
            'telecine': Vc3Telecine,
            'vc3_class': Vc3Class
        }

        self.attribute_map = {
            'framerate_control': 'FramerateControl',
            'framerate_conversion_algorithm': 'FramerateConversionAlgorithm',
            'framerate_denominator': 'FramerateDenominator',
            'framerate_numerator': 'FramerateNumerator',
            'interlace_mode': 'InterlaceMode',
            'scan_type_conversion_mode': 'ScanTypeConversionMode',
            'slow_pal': 'SlowPal',
            'telecine': 'Telecine',
            'vc3_class': 'Vc3Class'
        }

        self._framerate_control = framerate_control
        self._framerate_conversion_algorithm = framerate_conversion_algorithm
        self._framerate_denominator = framerate_denominator
        self._framerate_numerator = framerate_numerator
        self._interlace_mode = interlace_mode
        self._scan_type_conversion_mode = scan_type_conversion_mode
        self._slow_pal = slow_pal
        self._telecine = telecine
        self._vc3_class = vc3_class

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettingsVc3Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings_Vc3Settings of this VideoCodecSettingsVc3Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def framerate_control(self):
        """Gets the framerate_control of this VideoCodecSettingsVc3Settings.


        :return: The framerate_control of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3FramerateControl
        """
        return self._framerate_control

    @framerate_control.setter
    def framerate_control(self, framerate_control):
        """Sets the framerate_control of this VideoCodecSettingsVc3Settings.


        :param framerate_control: The framerate_control of this VideoCodecSettingsVc3Settings.
        :type framerate_control: Vc3FramerateControl
        """

        self._framerate_control = framerate_control

    @property
    def framerate_conversion_algorithm(self):
        """Gets the framerate_conversion_algorithm of this VideoCodecSettingsVc3Settings.


        :return: The framerate_conversion_algorithm of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3FramerateConversionAlgorithm
        """
        return self._framerate_conversion_algorithm

    @framerate_conversion_algorithm.setter
    def framerate_conversion_algorithm(self, framerate_conversion_algorithm):
        """Sets the framerate_conversion_algorithm of this VideoCodecSettingsVc3Settings.


        :param framerate_conversion_algorithm: The framerate_conversion_algorithm of this VideoCodecSettingsVc3Settings.
        :type framerate_conversion_algorithm: Vc3FramerateConversionAlgorithm
        """

        self._framerate_conversion_algorithm = framerate_conversion_algorithm

    @property
    def framerate_denominator(self):
        """Gets the framerate_denominator of this VideoCodecSettingsVc3Settings.


        :return: The framerate_denominator of this VideoCodecSettingsVc3Settings.
        :rtype: int
        """
        return self._framerate_denominator

    @framerate_denominator.setter
    def framerate_denominator(self, framerate_denominator):
        """Sets the framerate_denominator of this VideoCodecSettingsVc3Settings.


        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsVc3Settings.
        :type framerate_denominator: int
        """

        self._framerate_denominator = framerate_denominator

    @property
    def framerate_numerator(self):
        """Gets the framerate_numerator of this VideoCodecSettingsVc3Settings.


        :return: The framerate_numerator of this VideoCodecSettingsVc3Settings.
        :rtype: int
        """
        return self._framerate_numerator

    @framerate_numerator.setter
    def framerate_numerator(self, framerate_numerator):
        """Sets the framerate_numerator of this VideoCodecSettingsVc3Settings.


        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsVc3Settings.
        :type framerate_numerator: int
        """

        self._framerate_numerator = framerate_numerator

    @property
    def interlace_mode(self):
        """Gets the interlace_mode of this VideoCodecSettingsVc3Settings.


        :return: The interlace_mode of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3InterlaceMode
        """
        return self._interlace_mode

    @interlace_mode.setter
    def interlace_mode(self, interlace_mode):
        """Sets the interlace_mode of this VideoCodecSettingsVc3Settings.


        :param interlace_mode: The interlace_mode of this VideoCodecSettingsVc3Settings.
        :type interlace_mode: Vc3InterlaceMode
        """

        self._interlace_mode = interlace_mode

    @property
    def scan_type_conversion_mode(self):
        """Gets the scan_type_conversion_mode of this VideoCodecSettingsVc3Settings.


        :return: The scan_type_conversion_mode of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3ScanTypeConversionMode
        """
        return self._scan_type_conversion_mode

    @scan_type_conversion_mode.setter
    def scan_type_conversion_mode(self, scan_type_conversion_mode):
        """Sets the scan_type_conversion_mode of this VideoCodecSettingsVc3Settings.


        :param scan_type_conversion_mode: The scan_type_conversion_mode of this VideoCodecSettingsVc3Settings.
        :type scan_type_conversion_mode: Vc3ScanTypeConversionMode
        """

        self._scan_type_conversion_mode = scan_type_conversion_mode

    @property
    def slow_pal(self):
        """Gets the slow_pal of this VideoCodecSettingsVc3Settings.


        :return: The slow_pal of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3SlowPal
        """
        return self._slow_pal

    @slow_pal.setter
    def slow_pal(self, slow_pal):
        """Sets the slow_pal of this VideoCodecSettingsVc3Settings.


        :param slow_pal: The slow_pal of this VideoCodecSettingsVc3Settings.
        :type slow_pal: Vc3SlowPal
        """

        self._slow_pal = slow_pal

    @property
    def telecine(self):
        """Gets the telecine of this VideoCodecSettingsVc3Settings.


        :return: The telecine of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3Telecine
        """
        return self._telecine

    @telecine.setter
    def telecine(self, telecine):
        """Sets the telecine of this VideoCodecSettingsVc3Settings.


        :param telecine: The telecine of this VideoCodecSettingsVc3Settings.
        :type telecine: Vc3Telecine
        """

        self._telecine = telecine

    @property
    def vc3_class(self):
        """Gets the vc3_class of this VideoCodecSettingsVc3Settings.


        :return: The vc3_class of this VideoCodecSettingsVc3Settings.
        :rtype: Vc3Class
        """
        return self._vc3_class

    @vc3_class.setter
    def vc3_class(self, vc3_class):
        """Sets the vc3_class of this VideoCodecSettingsVc3Settings.


        :param vc3_class: The vc3_class of this VideoCodecSettingsVc3Settings.
        :type vc3_class: Vc3Class
        """

        self._vc3_class = vc3_class
