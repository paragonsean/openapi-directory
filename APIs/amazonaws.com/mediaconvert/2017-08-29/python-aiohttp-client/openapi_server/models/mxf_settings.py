# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mxf_afd_signaling import MxfAfdSignaling
from openapi_server.models.mxf_profile import MxfProfile
from openapi_server.models.mxf_settings_xavc_profile_settings import MxfSettingsXavcProfileSettings
from openapi_server import util


class MxfSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, afd_signaling: MxfAfdSignaling=None, profile: MxfProfile=None, xavc_profile_settings: MxfSettingsXavcProfileSettings=None):
        """MxfSettings - a model defined in OpenAPI

        :param afd_signaling: The afd_signaling of this MxfSettings.
        :param profile: The profile of this MxfSettings.
        :param xavc_profile_settings: The xavc_profile_settings of this MxfSettings.
        """
        self.openapi_types = {
            'afd_signaling': MxfAfdSignaling,
            'profile': MxfProfile,
            'xavc_profile_settings': MxfSettingsXavcProfileSettings
        }

        self.attribute_map = {
            'afd_signaling': 'AfdSignaling',
            'profile': 'Profile',
            'xavc_profile_settings': 'XavcProfileSettings'
        }

        self._afd_signaling = afd_signaling
        self._profile = profile
        self._xavc_profile_settings = xavc_profile_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MxfSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MxfSettings of this MxfSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def afd_signaling(self):
        """Gets the afd_signaling of this MxfSettings.


        :return: The afd_signaling of this MxfSettings.
        :rtype: MxfAfdSignaling
        """
        return self._afd_signaling

    @afd_signaling.setter
    def afd_signaling(self, afd_signaling):
        """Sets the afd_signaling of this MxfSettings.


        :param afd_signaling: The afd_signaling of this MxfSettings.
        :type afd_signaling: MxfAfdSignaling
        """

        self._afd_signaling = afd_signaling

    @property
    def profile(self):
        """Gets the profile of this MxfSettings.


        :return: The profile of this MxfSettings.
        :rtype: MxfProfile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this MxfSettings.


        :param profile: The profile of this MxfSettings.
        :type profile: MxfProfile
        """

        self._profile = profile

    @property
    def xavc_profile_settings(self):
        """Gets the xavc_profile_settings of this MxfSettings.


        :return: The xavc_profile_settings of this MxfSettings.
        :rtype: MxfSettingsXavcProfileSettings
        """
        return self._xavc_profile_settings

    @xavc_profile_settings.setter
    def xavc_profile_settings(self, xavc_profile_settings):
        """Sets the xavc_profile_settings of this MxfSettings.


        :param xavc_profile_settings: The xavc_profile_settings of this MxfSettings.
        :type xavc_profile_settings: MxfSettingsXavcProfileSettings
        """

        self._xavc_profile_settings = xavc_profile_settings
