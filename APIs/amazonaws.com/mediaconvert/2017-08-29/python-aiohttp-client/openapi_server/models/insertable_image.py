# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InsertableImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: int=None, fade_in: int=None, fade_out: int=None, height: int=None, image_inserter_input: str=None, image_x: int=None, image_y: int=None, layer: int=None, opacity: int=None, start_time: str=None, width: int=None):
        """InsertableImage - a model defined in OpenAPI

        :param duration: The duration of this InsertableImage.
        :param fade_in: The fade_in of this InsertableImage.
        :param fade_out: The fade_out of this InsertableImage.
        :param height: The height of this InsertableImage.
        :param image_inserter_input: The image_inserter_input of this InsertableImage.
        :param image_x: The image_x of this InsertableImage.
        :param image_y: The image_y of this InsertableImage.
        :param layer: The layer of this InsertableImage.
        :param opacity: The opacity of this InsertableImage.
        :param start_time: The start_time of this InsertableImage.
        :param width: The width of this InsertableImage.
        """
        self.openapi_types = {
            'duration': int,
            'fade_in': int,
            'fade_out': int,
            'height': int,
            'image_inserter_input': str,
            'image_x': int,
            'image_y': int,
            'layer': int,
            'opacity': int,
            'start_time': str,
            'width': int
        }

        self.attribute_map = {
            'duration': 'Duration',
            'fade_in': 'FadeIn',
            'fade_out': 'FadeOut',
            'height': 'Height',
            'image_inserter_input': 'ImageInserterInput',
            'image_x': 'ImageX',
            'image_y': 'ImageY',
            'layer': 'Layer',
            'opacity': 'Opacity',
            'start_time': 'StartTime',
            'width': 'Width'
        }

        self._duration = duration
        self._fade_in = fade_in
        self._fade_out = fade_out
        self._height = height
        self._image_inserter_input = image_inserter_input
        self._image_x = image_x
        self._image_y = image_y
        self._layer = layer
        self._opacity = opacity
        self._start_time = start_time
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsertableImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InsertableImage of this InsertableImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this InsertableImage.


        :return: The duration of this InsertableImage.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this InsertableImage.


        :param duration: The duration of this InsertableImage.
        :type duration: int
        """

        self._duration = duration

    @property
    def fade_in(self):
        """Gets the fade_in of this InsertableImage.


        :return: The fade_in of this InsertableImage.
        :rtype: int
        """
        return self._fade_in

    @fade_in.setter
    def fade_in(self, fade_in):
        """Sets the fade_in of this InsertableImage.


        :param fade_in: The fade_in of this InsertableImage.
        :type fade_in: int
        """

        self._fade_in = fade_in

    @property
    def fade_out(self):
        """Gets the fade_out of this InsertableImage.


        :return: The fade_out of this InsertableImage.
        :rtype: int
        """
        return self._fade_out

    @fade_out.setter
    def fade_out(self, fade_out):
        """Sets the fade_out of this InsertableImage.


        :param fade_out: The fade_out of this InsertableImage.
        :type fade_out: int
        """

        self._fade_out = fade_out

    @property
    def height(self):
        """Gets the height of this InsertableImage.


        :return: The height of this InsertableImage.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this InsertableImage.


        :param height: The height of this InsertableImage.
        :type height: int
        """

        self._height = height

    @property
    def image_inserter_input(self):
        """Gets the image_inserter_input of this InsertableImage.


        :return: The image_inserter_input of this InsertableImage.
        :rtype: str
        """
        return self._image_inserter_input

    @image_inserter_input.setter
    def image_inserter_input(self, image_inserter_input):
        """Sets the image_inserter_input of this InsertableImage.


        :param image_inserter_input: The image_inserter_input of this InsertableImage.
        :type image_inserter_input: str
        """

        self._image_inserter_input = image_inserter_input

    @property
    def image_x(self):
        """Gets the image_x of this InsertableImage.


        :return: The image_x of this InsertableImage.
        :rtype: int
        """
        return self._image_x

    @image_x.setter
    def image_x(self, image_x):
        """Sets the image_x of this InsertableImage.


        :param image_x: The image_x of this InsertableImage.
        :type image_x: int
        """

        self._image_x = image_x

    @property
    def image_y(self):
        """Gets the image_y of this InsertableImage.


        :return: The image_y of this InsertableImage.
        :rtype: int
        """
        return self._image_y

    @image_y.setter
    def image_y(self, image_y):
        """Sets the image_y of this InsertableImage.


        :param image_y: The image_y of this InsertableImage.
        :type image_y: int
        """

        self._image_y = image_y

    @property
    def layer(self):
        """Gets the layer of this InsertableImage.


        :return: The layer of this InsertableImage.
        :rtype: int
        """
        return self._layer

    @layer.setter
    def layer(self, layer):
        """Sets the layer of this InsertableImage.


        :param layer: The layer of this InsertableImage.
        :type layer: int
        """

        self._layer = layer

    @property
    def opacity(self):
        """Gets the opacity of this InsertableImage.


        :return: The opacity of this InsertableImage.
        :rtype: int
        """
        return self._opacity

    @opacity.setter
    def opacity(self, opacity):
        """Sets the opacity of this InsertableImage.


        :param opacity: The opacity of this InsertableImage.
        :type opacity: int
        """

        self._opacity = opacity

    @property
    def start_time(self):
        """Gets the start_time of this InsertableImage.


        :return: The start_time of this InsertableImage.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this InsertableImage.


        :param start_time: The start_time of this InsertableImage.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def width(self):
        """Gets the width of this InsertableImage.


        :return: The width of this InsertableImage.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this InsertableImage.


        :param width: The width of this InsertableImage.
        :type width: int
        """

        self._width = width
