# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mov_clap_atom import MovClapAtom
from openapi_server.models.mov_cslg_atom import MovCslgAtom
from openapi_server.models.mov_mpeg2_four_cc_control import MovMpeg2FourCCControl
from openapi_server.models.mov_padding_control import MovPaddingControl
from openapi_server.models.mov_reference import MovReference
from openapi_server import util


class MovSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clap_atom: MovClapAtom=None, cslg_atom: MovCslgAtom=None, mpeg2_four_cc_control: MovMpeg2FourCCControl=None, padding_control: MovPaddingControl=None, reference: MovReference=None):
        """MovSettings - a model defined in OpenAPI

        :param clap_atom: The clap_atom of this MovSettings.
        :param cslg_atom: The cslg_atom of this MovSettings.
        :param mpeg2_four_cc_control: The mpeg2_four_cc_control of this MovSettings.
        :param padding_control: The padding_control of this MovSettings.
        :param reference: The reference of this MovSettings.
        """
        self.openapi_types = {
            'clap_atom': MovClapAtom,
            'cslg_atom': MovCslgAtom,
            'mpeg2_four_cc_control': MovMpeg2FourCCControl,
            'padding_control': MovPaddingControl,
            'reference': MovReference
        }

        self.attribute_map = {
            'clap_atom': 'ClapAtom',
            'cslg_atom': 'CslgAtom',
            'mpeg2_four_cc_control': 'Mpeg2FourCCControl',
            'padding_control': 'PaddingControl',
            'reference': 'Reference'
        }

        self._clap_atom = clap_atom
        self._cslg_atom = cslg_atom
        self._mpeg2_four_cc_control = mpeg2_four_cc_control
        self._padding_control = padding_control
        self._reference = reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MovSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MovSettings of this MovSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clap_atom(self):
        """Gets the clap_atom of this MovSettings.


        :return: The clap_atom of this MovSettings.
        :rtype: MovClapAtom
        """
        return self._clap_atom

    @clap_atom.setter
    def clap_atom(self, clap_atom):
        """Sets the clap_atom of this MovSettings.


        :param clap_atom: The clap_atom of this MovSettings.
        :type clap_atom: MovClapAtom
        """

        self._clap_atom = clap_atom

    @property
    def cslg_atom(self):
        """Gets the cslg_atom of this MovSettings.


        :return: The cslg_atom of this MovSettings.
        :rtype: MovCslgAtom
        """
        return self._cslg_atom

    @cslg_atom.setter
    def cslg_atom(self, cslg_atom):
        """Sets the cslg_atom of this MovSettings.


        :param cslg_atom: The cslg_atom of this MovSettings.
        :type cslg_atom: MovCslgAtom
        """

        self._cslg_atom = cslg_atom

    @property
    def mpeg2_four_cc_control(self):
        """Gets the mpeg2_four_cc_control of this MovSettings.


        :return: The mpeg2_four_cc_control of this MovSettings.
        :rtype: MovMpeg2FourCCControl
        """
        return self._mpeg2_four_cc_control

    @mpeg2_four_cc_control.setter
    def mpeg2_four_cc_control(self, mpeg2_four_cc_control):
        """Sets the mpeg2_four_cc_control of this MovSettings.


        :param mpeg2_four_cc_control: The mpeg2_four_cc_control of this MovSettings.
        :type mpeg2_four_cc_control: MovMpeg2FourCCControl
        """

        self._mpeg2_four_cc_control = mpeg2_four_cc_control

    @property
    def padding_control(self):
        """Gets the padding_control of this MovSettings.


        :return: The padding_control of this MovSettings.
        :rtype: MovPaddingControl
        """
        return self._padding_control

    @padding_control.setter
    def padding_control(self, padding_control):
        """Sets the padding_control of this MovSettings.


        :param padding_control: The padding_control of this MovSettings.
        :type padding_control: MovPaddingControl
        """

        self._padding_control = padding_control

    @property
    def reference(self):
        """Gets the reference of this MovSettings.


        :return: The reference of this MovSettings.
        :rtype: MovReference
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this MovSettings.


        :param reference: The reference of this MovSettings.
        :type reference: MovReference
        """

        self._reference = reference
