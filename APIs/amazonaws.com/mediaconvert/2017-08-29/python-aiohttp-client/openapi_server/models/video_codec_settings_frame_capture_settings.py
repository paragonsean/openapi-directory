# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoCodecSettingsFrameCaptureSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, framerate_denominator: int=None, framerate_numerator: int=None, max_captures: int=None, quality: int=None):
        """VideoCodecSettingsFrameCaptureSettings - a model defined in OpenAPI

        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsFrameCaptureSettings.
        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsFrameCaptureSettings.
        :param max_captures: The max_captures of this VideoCodecSettingsFrameCaptureSettings.
        :param quality: The quality of this VideoCodecSettingsFrameCaptureSettings.
        """
        self.openapi_types = {
            'framerate_denominator': int,
            'framerate_numerator': int,
            'max_captures': int,
            'quality': int
        }

        self.attribute_map = {
            'framerate_denominator': 'FramerateDenominator',
            'framerate_numerator': 'FramerateNumerator',
            'max_captures': 'MaxCaptures',
            'quality': 'Quality'
        }

        self._framerate_denominator = framerate_denominator
        self._framerate_numerator = framerate_numerator
        self._max_captures = max_captures
        self._quality = quality

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoCodecSettingsFrameCaptureSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoCodecSettings_FrameCaptureSettings of this VideoCodecSettingsFrameCaptureSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def framerate_denominator(self):
        """Gets the framerate_denominator of this VideoCodecSettingsFrameCaptureSettings.


        :return: The framerate_denominator of this VideoCodecSettingsFrameCaptureSettings.
        :rtype: int
        """
        return self._framerate_denominator

    @framerate_denominator.setter
    def framerate_denominator(self, framerate_denominator):
        """Sets the framerate_denominator of this VideoCodecSettingsFrameCaptureSettings.


        :param framerate_denominator: The framerate_denominator of this VideoCodecSettingsFrameCaptureSettings.
        :type framerate_denominator: int
        """

        self._framerate_denominator = framerate_denominator

    @property
    def framerate_numerator(self):
        """Gets the framerate_numerator of this VideoCodecSettingsFrameCaptureSettings.


        :return: The framerate_numerator of this VideoCodecSettingsFrameCaptureSettings.
        :rtype: int
        """
        return self._framerate_numerator

    @framerate_numerator.setter
    def framerate_numerator(self, framerate_numerator):
        """Sets the framerate_numerator of this VideoCodecSettingsFrameCaptureSettings.


        :param framerate_numerator: The framerate_numerator of this VideoCodecSettingsFrameCaptureSettings.
        :type framerate_numerator: int
        """

        self._framerate_numerator = framerate_numerator

    @property
    def max_captures(self):
        """Gets the max_captures of this VideoCodecSettingsFrameCaptureSettings.


        :return: The max_captures of this VideoCodecSettingsFrameCaptureSettings.
        :rtype: int
        """
        return self._max_captures

    @max_captures.setter
    def max_captures(self, max_captures):
        """Sets the max_captures of this VideoCodecSettingsFrameCaptureSettings.


        :param max_captures: The max_captures of this VideoCodecSettingsFrameCaptureSettings.
        :type max_captures: int
        """

        self._max_captures = max_captures

    @property
    def quality(self):
        """Gets the quality of this VideoCodecSettingsFrameCaptureSettings.


        :return: The quality of this VideoCodecSettingsFrameCaptureSettings.
        :rtype: int
        """
        return self._quality

    @quality.setter
    def quality(self, quality):
        """Sets the quality of this VideoCodecSettingsFrameCaptureSettings.


        :param quality: The quality of this VideoCodecSettingsFrameCaptureSettings.
        :type quality: int
        """

        self._quality = quality
