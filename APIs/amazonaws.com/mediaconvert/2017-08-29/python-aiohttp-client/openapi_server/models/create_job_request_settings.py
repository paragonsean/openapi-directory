# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_job_request_settings_avail_blanking import CreateJobRequestSettingsAvailBlanking
from openapi_server.models.create_job_request_settings_esam import CreateJobRequestSettingsEsam
from openapi_server.models.create_job_request_settings_extended_data_services import CreateJobRequestSettingsExtendedDataServices
from openapi_server.models.create_job_request_settings_kantar_watermark import CreateJobRequestSettingsKantarWatermark
from openapi_server.models.create_job_request_settings_motion_image_inserter import CreateJobRequestSettingsMotionImageInserter
from openapi_server.models.create_job_request_settings_nielsen_configuration import CreateJobRequestSettingsNielsenConfiguration
from openapi_server.models.create_job_request_settings_nielsen_non_linear_watermark import CreateJobRequestSettingsNielsenNonLinearWatermark
from openapi_server.models.create_job_request_settings_timecode_config import CreateJobRequestSettingsTimecodeConfig
from openapi_server.models.create_job_request_settings_timed_metadata_insertion import CreateJobRequestSettingsTimedMetadataInsertion
from openapi_server import util


class CreateJobRequestSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_avail_offset: int=None, avail_blanking: CreateJobRequestSettingsAvailBlanking=None, esam: CreateJobRequestSettingsEsam=None, extended_data_services: CreateJobRequestSettingsExtendedDataServices=None, inputs: List=None, kantar_watermark: CreateJobRequestSettingsKantarWatermark=None, motion_image_inserter: CreateJobRequestSettingsMotionImageInserter=None, nielsen_configuration: CreateJobRequestSettingsNielsenConfiguration=None, nielsen_non_linear_watermark: CreateJobRequestSettingsNielsenNonLinearWatermark=None, output_groups: List=None, timecode_config: CreateJobRequestSettingsTimecodeConfig=None, timed_metadata_insertion: CreateJobRequestSettingsTimedMetadataInsertion=None):
        """CreateJobRequestSettings - a model defined in OpenAPI

        :param ad_avail_offset: The ad_avail_offset of this CreateJobRequestSettings.
        :param avail_blanking: The avail_blanking of this CreateJobRequestSettings.
        :param esam: The esam of this CreateJobRequestSettings.
        :param extended_data_services: The extended_data_services of this CreateJobRequestSettings.
        :param inputs: The inputs of this CreateJobRequestSettings.
        :param kantar_watermark: The kantar_watermark of this CreateJobRequestSettings.
        :param motion_image_inserter: The motion_image_inserter of this CreateJobRequestSettings.
        :param nielsen_configuration: The nielsen_configuration of this CreateJobRequestSettings.
        :param nielsen_non_linear_watermark: The nielsen_non_linear_watermark of this CreateJobRequestSettings.
        :param output_groups: The output_groups of this CreateJobRequestSettings.
        :param timecode_config: The timecode_config of this CreateJobRequestSettings.
        :param timed_metadata_insertion: The timed_metadata_insertion of this CreateJobRequestSettings.
        """
        self.openapi_types = {
            'ad_avail_offset': int,
            'avail_blanking': CreateJobRequestSettingsAvailBlanking,
            'esam': CreateJobRequestSettingsEsam,
            'extended_data_services': CreateJobRequestSettingsExtendedDataServices,
            'inputs': List,
            'kantar_watermark': CreateJobRequestSettingsKantarWatermark,
            'motion_image_inserter': CreateJobRequestSettingsMotionImageInserter,
            'nielsen_configuration': CreateJobRequestSettingsNielsenConfiguration,
            'nielsen_non_linear_watermark': CreateJobRequestSettingsNielsenNonLinearWatermark,
            'output_groups': List,
            'timecode_config': CreateJobRequestSettingsTimecodeConfig,
            'timed_metadata_insertion': CreateJobRequestSettingsTimedMetadataInsertion
        }

        self.attribute_map = {
            'ad_avail_offset': 'AdAvailOffset',
            'avail_blanking': 'AvailBlanking',
            'esam': 'Esam',
            'extended_data_services': 'ExtendedDataServices',
            'inputs': 'Inputs',
            'kantar_watermark': 'KantarWatermark',
            'motion_image_inserter': 'MotionImageInserter',
            'nielsen_configuration': 'NielsenConfiguration',
            'nielsen_non_linear_watermark': 'NielsenNonLinearWatermark',
            'output_groups': 'OutputGroups',
            'timecode_config': 'TimecodeConfig',
            'timed_metadata_insertion': 'TimedMetadataInsertion'
        }

        self._ad_avail_offset = ad_avail_offset
        self._avail_blanking = avail_blanking
        self._esam = esam
        self._extended_data_services = extended_data_services
        self._inputs = inputs
        self._kantar_watermark = kantar_watermark
        self._motion_image_inserter = motion_image_inserter
        self._nielsen_configuration = nielsen_configuration
        self._nielsen_non_linear_watermark = nielsen_non_linear_watermark
        self._output_groups = output_groups
        self._timecode_config = timecode_config
        self._timed_metadata_insertion = timed_metadata_insertion

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateJobRequestSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateJobRequest_Settings of this CreateJobRequestSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_avail_offset(self):
        """Gets the ad_avail_offset of this CreateJobRequestSettings.


        :return: The ad_avail_offset of this CreateJobRequestSettings.
        :rtype: int
        """
        return self._ad_avail_offset

    @ad_avail_offset.setter
    def ad_avail_offset(self, ad_avail_offset):
        """Sets the ad_avail_offset of this CreateJobRequestSettings.


        :param ad_avail_offset: The ad_avail_offset of this CreateJobRequestSettings.
        :type ad_avail_offset: int
        """

        self._ad_avail_offset = ad_avail_offset

    @property
    def avail_blanking(self):
        """Gets the avail_blanking of this CreateJobRequestSettings.


        :return: The avail_blanking of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsAvailBlanking
        """
        return self._avail_blanking

    @avail_blanking.setter
    def avail_blanking(self, avail_blanking):
        """Sets the avail_blanking of this CreateJobRequestSettings.


        :param avail_blanking: The avail_blanking of this CreateJobRequestSettings.
        :type avail_blanking: CreateJobRequestSettingsAvailBlanking
        """

        self._avail_blanking = avail_blanking

    @property
    def esam(self):
        """Gets the esam of this CreateJobRequestSettings.


        :return: The esam of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsEsam
        """
        return self._esam

    @esam.setter
    def esam(self, esam):
        """Sets the esam of this CreateJobRequestSettings.


        :param esam: The esam of this CreateJobRequestSettings.
        :type esam: CreateJobRequestSettingsEsam
        """

        self._esam = esam

    @property
    def extended_data_services(self):
        """Gets the extended_data_services of this CreateJobRequestSettings.


        :return: The extended_data_services of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsExtendedDataServices
        """
        return self._extended_data_services

    @extended_data_services.setter
    def extended_data_services(self, extended_data_services):
        """Sets the extended_data_services of this CreateJobRequestSettings.


        :param extended_data_services: The extended_data_services of this CreateJobRequestSettings.
        :type extended_data_services: CreateJobRequestSettingsExtendedDataServices
        """

        self._extended_data_services = extended_data_services

    @property
    def inputs(self):
        """Gets the inputs of this CreateJobRequestSettings.


        :return: The inputs of this CreateJobRequestSettings.
        :rtype: List
        """
        return self._inputs

    @inputs.setter
    def inputs(self, inputs):
        """Sets the inputs of this CreateJobRequestSettings.


        :param inputs: The inputs of this CreateJobRequestSettings.
        :type inputs: List
        """

        self._inputs = inputs

    @property
    def kantar_watermark(self):
        """Gets the kantar_watermark of this CreateJobRequestSettings.


        :return: The kantar_watermark of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsKantarWatermark
        """
        return self._kantar_watermark

    @kantar_watermark.setter
    def kantar_watermark(self, kantar_watermark):
        """Sets the kantar_watermark of this CreateJobRequestSettings.


        :param kantar_watermark: The kantar_watermark of this CreateJobRequestSettings.
        :type kantar_watermark: CreateJobRequestSettingsKantarWatermark
        """

        self._kantar_watermark = kantar_watermark

    @property
    def motion_image_inserter(self):
        """Gets the motion_image_inserter of this CreateJobRequestSettings.


        :return: The motion_image_inserter of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsMotionImageInserter
        """
        return self._motion_image_inserter

    @motion_image_inserter.setter
    def motion_image_inserter(self, motion_image_inserter):
        """Sets the motion_image_inserter of this CreateJobRequestSettings.


        :param motion_image_inserter: The motion_image_inserter of this CreateJobRequestSettings.
        :type motion_image_inserter: CreateJobRequestSettingsMotionImageInserter
        """

        self._motion_image_inserter = motion_image_inserter

    @property
    def nielsen_configuration(self):
        """Gets the nielsen_configuration of this CreateJobRequestSettings.


        :return: The nielsen_configuration of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsNielsenConfiguration
        """
        return self._nielsen_configuration

    @nielsen_configuration.setter
    def nielsen_configuration(self, nielsen_configuration):
        """Sets the nielsen_configuration of this CreateJobRequestSettings.


        :param nielsen_configuration: The nielsen_configuration of this CreateJobRequestSettings.
        :type nielsen_configuration: CreateJobRequestSettingsNielsenConfiguration
        """

        self._nielsen_configuration = nielsen_configuration

    @property
    def nielsen_non_linear_watermark(self):
        """Gets the nielsen_non_linear_watermark of this CreateJobRequestSettings.


        :return: The nielsen_non_linear_watermark of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsNielsenNonLinearWatermark
        """
        return self._nielsen_non_linear_watermark

    @nielsen_non_linear_watermark.setter
    def nielsen_non_linear_watermark(self, nielsen_non_linear_watermark):
        """Sets the nielsen_non_linear_watermark of this CreateJobRequestSettings.


        :param nielsen_non_linear_watermark: The nielsen_non_linear_watermark of this CreateJobRequestSettings.
        :type nielsen_non_linear_watermark: CreateJobRequestSettingsNielsenNonLinearWatermark
        """

        self._nielsen_non_linear_watermark = nielsen_non_linear_watermark

    @property
    def output_groups(self):
        """Gets the output_groups of this CreateJobRequestSettings.


        :return: The output_groups of this CreateJobRequestSettings.
        :rtype: List
        """
        return self._output_groups

    @output_groups.setter
    def output_groups(self, output_groups):
        """Sets the output_groups of this CreateJobRequestSettings.


        :param output_groups: The output_groups of this CreateJobRequestSettings.
        :type output_groups: List
        """

        self._output_groups = output_groups

    @property
    def timecode_config(self):
        """Gets the timecode_config of this CreateJobRequestSettings.


        :return: The timecode_config of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsTimecodeConfig
        """
        return self._timecode_config

    @timecode_config.setter
    def timecode_config(self, timecode_config):
        """Sets the timecode_config of this CreateJobRequestSettings.


        :param timecode_config: The timecode_config of this CreateJobRequestSettings.
        :type timecode_config: CreateJobRequestSettingsTimecodeConfig
        """

        self._timecode_config = timecode_config

    @property
    def timed_metadata_insertion(self):
        """Gets the timed_metadata_insertion of this CreateJobRequestSettings.


        :return: The timed_metadata_insertion of this CreateJobRequestSettings.
        :rtype: CreateJobRequestSettingsTimedMetadataInsertion
        """
        return self._timed_metadata_insertion

    @timed_metadata_insertion.setter
    def timed_metadata_insertion(self, timed_metadata_insertion):
        """Sets the timed_metadata_insertion of this CreateJobRequestSettings.


        :param timed_metadata_insertion: The timed_metadata_insertion of this CreateJobRequestSettings.
        :type timed_metadata_insertion: CreateJobRequestSettingsTimedMetadataInsertion
        """

        self._timed_metadata_insertion = timed_metadata_insertion
