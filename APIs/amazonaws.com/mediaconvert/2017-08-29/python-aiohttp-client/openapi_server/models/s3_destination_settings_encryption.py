# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_server_side_encryption_type import S3ServerSideEncryptionType
from openapi_server import util


class S3DestinationSettingsEncryption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_type: S3ServerSideEncryptionType=None, kms_encryption_context: str=None, kms_key_arn: str=None):
        """S3DestinationSettingsEncryption - a model defined in OpenAPI

        :param encryption_type: The encryption_type of this S3DestinationSettingsEncryption.
        :param kms_encryption_context: The kms_encryption_context of this S3DestinationSettingsEncryption.
        :param kms_key_arn: The kms_key_arn of this S3DestinationSettingsEncryption.
        """
        self.openapi_types = {
            'encryption_type': S3ServerSideEncryptionType,
            'kms_encryption_context': str,
            'kms_key_arn': str
        }

        self.attribute_map = {
            'encryption_type': 'EncryptionType',
            'kms_encryption_context': 'KmsEncryptionContext',
            'kms_key_arn': 'KmsKeyArn'
        }

        self._encryption_type = encryption_type
        self._kms_encryption_context = kms_encryption_context
        self._kms_key_arn = kms_key_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3DestinationSettingsEncryption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3DestinationSettings_Encryption of this S3DestinationSettingsEncryption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_type(self):
        """Gets the encryption_type of this S3DestinationSettingsEncryption.


        :return: The encryption_type of this S3DestinationSettingsEncryption.
        :rtype: S3ServerSideEncryptionType
        """
        return self._encryption_type

    @encryption_type.setter
    def encryption_type(self, encryption_type):
        """Sets the encryption_type of this S3DestinationSettingsEncryption.


        :param encryption_type: The encryption_type of this S3DestinationSettingsEncryption.
        :type encryption_type: S3ServerSideEncryptionType
        """

        self._encryption_type = encryption_type

    @property
    def kms_encryption_context(self):
        """Gets the kms_encryption_context of this S3DestinationSettingsEncryption.


        :return: The kms_encryption_context of this S3DestinationSettingsEncryption.
        :rtype: str
        """
        return self._kms_encryption_context

    @kms_encryption_context.setter
    def kms_encryption_context(self, kms_encryption_context):
        """Sets the kms_encryption_context of this S3DestinationSettingsEncryption.


        :param kms_encryption_context: The kms_encryption_context of this S3DestinationSettingsEncryption.
        :type kms_encryption_context: str
        """

        self._kms_encryption_context = kms_encryption_context

    @property
    def kms_key_arn(self):
        """Gets the kms_key_arn of this S3DestinationSettingsEncryption.


        :return: The kms_key_arn of this S3DestinationSettingsEncryption.
        :rtype: str
        """
        return self._kms_key_arn

    @kms_key_arn.setter
    def kms_key_arn(self, kms_key_arn):
        """Sets the kms_key_arn of this S3DestinationSettingsEncryption.


        :param kms_key_arn: The kms_key_arn of this S3DestinationSettingsEncryption.
        :type kms_key_arn: str
        """

        self._kms_key_arn = kms_key_arn
