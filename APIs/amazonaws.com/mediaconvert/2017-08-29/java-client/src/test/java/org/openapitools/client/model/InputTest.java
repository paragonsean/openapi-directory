/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AdvancedInputFilter;
import org.openapitools.client.model.InputAdvancedInputFilterSettings;
import org.openapitools.client.model.InputCrop;
import org.openapitools.client.model.InputDeblockFilter;
import org.openapitools.client.model.InputDecryptionSettings;
import org.openapitools.client.model.InputDenoiseFilter;
import org.openapitools.client.model.InputFilterEnable;
import org.openapitools.client.model.InputImageInserter;
import org.openapitools.client.model.InputPosition;
import org.openapitools.client.model.InputPsiControl;
import org.openapitools.client.model.InputScanType;
import org.openapitools.client.model.InputTimecodeSource;
import org.openapitools.client.model.InputVideoGenerator;
import org.openapitools.client.model.InputVideoSelector;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Input
 */
public class InputTest {
    private final Input model = new Input();

    /**
     * Model tests for Input
     */
    @Test
    public void testInput() {
        // TODO: test Input
    }

    /**
     * Test the property 'advancedInputFilter'
     */
    @Test
    public void advancedInputFilterTest() {
        // TODO: test advancedInputFilter
    }

    /**
     * Test the property 'advancedInputFilterSettings'
     */
    @Test
    public void advancedInputFilterSettingsTest() {
        // TODO: test advancedInputFilterSettings
    }

    /**
     * Test the property 'audioSelectorGroups'
     */
    @Test
    public void audioSelectorGroupsTest() {
        // TODO: test audioSelectorGroups
    }

    /**
     * Test the property 'audioSelectors'
     */
    @Test
    public void audioSelectorsTest() {
        // TODO: test audioSelectors
    }

    /**
     * Test the property 'captionSelectors'
     */
    @Test
    public void captionSelectorsTest() {
        // TODO: test captionSelectors
    }

    /**
     * Test the property 'crop'
     */
    @Test
    public void cropTest() {
        // TODO: test crop
    }

    /**
     * Test the property 'deblockFilter'
     */
    @Test
    public void deblockFilterTest() {
        // TODO: test deblockFilter
    }

    /**
     * Test the property 'decryptionSettings'
     */
    @Test
    public void decryptionSettingsTest() {
        // TODO: test decryptionSettings
    }

    /**
     * Test the property 'denoiseFilter'
     */
    @Test
    public void denoiseFilterTest() {
        // TODO: test denoiseFilter
    }

    /**
     * Test the property 'dolbyVisionMetadataXml'
     */
    @Test
    public void dolbyVisionMetadataXmlTest() {
        // TODO: test dolbyVisionMetadataXml
    }

    /**
     * Test the property 'fileInput'
     */
    @Test
    public void fileInputTest() {
        // TODO: test fileInput
    }

    /**
     * Test the property 'filterEnable'
     */
    @Test
    public void filterEnableTest() {
        // TODO: test filterEnable
    }

    /**
     * Test the property 'filterStrength'
     */
    @Test
    public void filterStrengthTest() {
        // TODO: test filterStrength
    }

    /**
     * Test the property 'imageInserter'
     */
    @Test
    public void imageInserterTest() {
        // TODO: test imageInserter
    }

    /**
     * Test the property 'inputClippings'
     */
    @Test
    public void inputClippingsTest() {
        // TODO: test inputClippings
    }

    /**
     * Test the property 'inputScanType'
     */
    @Test
    public void inputScanTypeTest() {
        // TODO: test inputScanType
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'programNumber'
     */
    @Test
    public void programNumberTest() {
        // TODO: test programNumber
    }

    /**
     * Test the property 'psiControl'
     */
    @Test
    public void psiControlTest() {
        // TODO: test psiControl
    }

    /**
     * Test the property 'supplementalImps'
     */
    @Test
    public void supplementalImpsTest() {
        // TODO: test supplementalImps
    }

    /**
     * Test the property 'timecodeSource'
     */
    @Test
    public void timecodeSourceTest() {
        // TODO: test timecodeSource
    }

    /**
     * Test the property 'timecodeStart'
     */
    @Test
    public void timecodeStartTest() {
        // TODO: test timecodeStart
    }

    /**
     * Test the property 'videoGenerator'
     */
    @Test
    public void videoGeneratorTest() {
        // TODO: test videoGenerator
    }

    /**
     * Test the property 'videoSelector'
     */
    @Test
    public void videoSelectorTest() {
        // TODO: test videoSelector
    }

}
