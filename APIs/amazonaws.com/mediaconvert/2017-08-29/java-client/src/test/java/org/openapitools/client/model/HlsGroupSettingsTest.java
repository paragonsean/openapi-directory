/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CmafGroupSettingsDestinationSettings;
import org.openapitools.client.model.HlsAudioOnlyHeader;
import org.openapitools.client.model.HlsCaptionLanguageSetting;
import org.openapitools.client.model.HlsCaptionSegmentLengthControl;
import org.openapitools.client.model.HlsClientCache;
import org.openapitools.client.model.HlsCodecSpecification;
import org.openapitools.client.model.HlsDirectoryStructure;
import org.openapitools.client.model.HlsGroupSettingsEncryption;
import org.openapitools.client.model.HlsGroupSettingsImageBasedTrickPlaySettings;
import org.openapitools.client.model.HlsImageBasedTrickPlay;
import org.openapitools.client.model.HlsManifestCompression;
import org.openapitools.client.model.HlsManifestDurationFormat;
import org.openapitools.client.model.HlsOutputSelection;
import org.openapitools.client.model.HlsProgramDateTime;
import org.openapitools.client.model.HlsProgressiveWriteHlsManifest;
import org.openapitools.client.model.HlsSegmentControl;
import org.openapitools.client.model.HlsSegmentLengthControl;
import org.openapitools.client.model.HlsStreamInfResolution;
import org.openapitools.client.model.HlsTargetDurationCompatibilityMode;
import org.openapitools.client.model.HlsTimedMetadataId3Frame;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for HlsGroupSettings
 */
public class HlsGroupSettingsTest {
    private final HlsGroupSettings model = new HlsGroupSettings();

    /**
     * Model tests for HlsGroupSettings
     */
    @Test
    public void testHlsGroupSettings() {
        // TODO: test HlsGroupSettings
    }

    /**
     * Test the property 'adMarkers'
     */
    @Test
    public void adMarkersTest() {
        // TODO: test adMarkers
    }

    /**
     * Test the property 'additionalManifests'
     */
    @Test
    public void additionalManifestsTest() {
        // TODO: test additionalManifests
    }

    /**
     * Test the property 'audioOnlyHeader'
     */
    @Test
    public void audioOnlyHeaderTest() {
        // TODO: test audioOnlyHeader
    }

    /**
     * Test the property 'baseUrl'
     */
    @Test
    public void baseUrlTest() {
        // TODO: test baseUrl
    }

    /**
     * Test the property 'captionLanguageMappings'
     */
    @Test
    public void captionLanguageMappingsTest() {
        // TODO: test captionLanguageMappings
    }

    /**
     * Test the property 'captionLanguageSetting'
     */
    @Test
    public void captionLanguageSettingTest() {
        // TODO: test captionLanguageSetting
    }

    /**
     * Test the property 'captionSegmentLengthControl'
     */
    @Test
    public void captionSegmentLengthControlTest() {
        // TODO: test captionSegmentLengthControl
    }

    /**
     * Test the property 'clientCache'
     */
    @Test
    public void clientCacheTest() {
        // TODO: test clientCache
    }

    /**
     * Test the property 'codecSpecification'
     */
    @Test
    public void codecSpecificationTest() {
        // TODO: test codecSpecification
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'destinationSettings'
     */
    @Test
    public void destinationSettingsTest() {
        // TODO: test destinationSettings
    }

    /**
     * Test the property 'directoryStructure'
     */
    @Test
    public void directoryStructureTest() {
        // TODO: test directoryStructure
    }

    /**
     * Test the property 'encryption'
     */
    @Test
    public void encryptionTest() {
        // TODO: test encryption
    }

    /**
     * Test the property 'imageBasedTrickPlay'
     */
    @Test
    public void imageBasedTrickPlayTest() {
        // TODO: test imageBasedTrickPlay
    }

    /**
     * Test the property 'imageBasedTrickPlaySettings'
     */
    @Test
    public void imageBasedTrickPlaySettingsTest() {
        // TODO: test imageBasedTrickPlaySettings
    }

    /**
     * Test the property 'manifestCompression'
     */
    @Test
    public void manifestCompressionTest() {
        // TODO: test manifestCompression
    }

    /**
     * Test the property 'manifestDurationFormat'
     */
    @Test
    public void manifestDurationFormatTest() {
        // TODO: test manifestDurationFormat
    }

    /**
     * Test the property 'minFinalSegmentLength'
     */
    @Test
    public void minFinalSegmentLengthTest() {
        // TODO: test minFinalSegmentLength
    }

    /**
     * Test the property 'minSegmentLength'
     */
    @Test
    public void minSegmentLengthTest() {
        // TODO: test minSegmentLength
    }

    /**
     * Test the property 'outputSelection'
     */
    @Test
    public void outputSelectionTest() {
        // TODO: test outputSelection
    }

    /**
     * Test the property 'programDateTime'
     */
    @Test
    public void programDateTimeTest() {
        // TODO: test programDateTime
    }

    /**
     * Test the property 'programDateTimePeriod'
     */
    @Test
    public void programDateTimePeriodTest() {
        // TODO: test programDateTimePeriod
    }

    /**
     * Test the property 'progressiveWriteHlsManifest'
     */
    @Test
    public void progressiveWriteHlsManifestTest() {
        // TODO: test progressiveWriteHlsManifest
    }

    /**
     * Test the property 'segmentControl'
     */
    @Test
    public void segmentControlTest() {
        // TODO: test segmentControl
    }

    /**
     * Test the property 'segmentLength'
     */
    @Test
    public void segmentLengthTest() {
        // TODO: test segmentLength
    }

    /**
     * Test the property 'segmentLengthControl'
     */
    @Test
    public void segmentLengthControlTest() {
        // TODO: test segmentLengthControl
    }

    /**
     * Test the property 'segmentsPerSubdirectory'
     */
    @Test
    public void segmentsPerSubdirectoryTest() {
        // TODO: test segmentsPerSubdirectory
    }

    /**
     * Test the property 'streamInfResolution'
     */
    @Test
    public void streamInfResolutionTest() {
        // TODO: test streamInfResolution
    }

    /**
     * Test the property 'targetDurationCompatibilityMode'
     */
    @Test
    public void targetDurationCompatibilityModeTest() {
        // TODO: test targetDurationCompatibilityMode
    }

    /**
     * Test the property 'timedMetadataId3Frame'
     */
    @Test
    public void timedMetadataId3FrameTest() {
        // TODO: test timedMetadataId3Frame
    }

    /**
     * Test the property 'timedMetadataId3Period'
     */
    @Test
    public void timedMetadataId3PeriodTest() {
        // TODO: test timedMetadataId3Period
    }

    /**
     * Test the property 'timestampDeltaMilliseconds'
     */
    @Test
    public void timestampDeltaMillisecondsTest() {
        // TODO: test timestampDeltaMilliseconds
    }

}
