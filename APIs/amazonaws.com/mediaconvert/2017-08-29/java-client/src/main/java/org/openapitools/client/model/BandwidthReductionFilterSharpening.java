/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Optionally specify the level of sharpening to apply when you use the Bandwidth reduction filter. Sharpening adds contrast to the edges of your video content and can reduce softness. Keep the default value Off to apply no sharpening. Set Sharpening strength to Low to apply a minimal amount of sharpening, or High to apply a maximum amount of sharpening.
 */
@JsonAdapter(BandwidthReductionFilterSharpening.Adapter.class)
public enum BandwidthReductionFilterSharpening {
  
  LOW("LOW"),
  
  MEDIUM("MEDIUM"),
  
  HIGH("HIGH"),
  
  OFF("OFF");

  private String value;

  BandwidthReductionFilterSharpening(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BandwidthReductionFilterSharpening fromValue(String value) {
    for (BandwidthReductionFilterSharpening b : BandwidthReductionFilterSharpening.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BandwidthReductionFilterSharpening> {
    @Override
    public void write(final JsonWriter jsonWriter, final BandwidthReductionFilterSharpening enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BandwidthReductionFilterSharpening read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BandwidthReductionFilterSharpening.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BandwidthReductionFilterSharpening.fromValue(value);
  }
}

