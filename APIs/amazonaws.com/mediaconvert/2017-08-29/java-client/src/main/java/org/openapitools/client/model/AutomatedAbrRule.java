/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutomatedAbrRuleMinBottomRenditionSize;
import org.openapitools.client.model.AutomatedAbrRuleMinTopRenditionSize;
import org.openapitools.client.model.RuleType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specify one or more Automated ABR rule types. Note: Force include and Allowed renditions are mutually exclusive.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomatedAbrRule {
  public static final String SERIALIZED_NAME_ALLOWED_RENDITIONS = "AllowedRenditions";
  @SerializedName(SERIALIZED_NAME_ALLOWED_RENDITIONS)
  private List allowedRenditions;

  public static final String SERIALIZED_NAME_FORCE_INCLUDE_RENDITIONS = "ForceIncludeRenditions";
  @SerializedName(SERIALIZED_NAME_FORCE_INCLUDE_RENDITIONS)
  private List forceIncludeRenditions;

  public static final String SERIALIZED_NAME_MIN_BOTTOM_RENDITION_SIZE = "MinBottomRenditionSize";
  @SerializedName(SERIALIZED_NAME_MIN_BOTTOM_RENDITION_SIZE)
  private AutomatedAbrRuleMinBottomRenditionSize minBottomRenditionSize;

  public static final String SERIALIZED_NAME_MIN_TOP_RENDITION_SIZE = "MinTopRenditionSize";
  @SerializedName(SERIALIZED_NAME_MIN_TOP_RENDITION_SIZE)
  private AutomatedAbrRuleMinTopRenditionSize minTopRenditionSize;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private RuleType type;

  public AutomatedAbrRule() {
  }

  public AutomatedAbrRule allowedRenditions(List allowedRenditions) {
    this.allowedRenditions = allowedRenditions;
    return this;
  }

  /**
   * Get allowedRenditions
   * @return allowedRenditions
   */
  @javax.annotation.Nullable
  public List getAllowedRenditions() {
    return allowedRenditions;
  }

  public void setAllowedRenditions(List allowedRenditions) {
    this.allowedRenditions = allowedRenditions;
  }


  public AutomatedAbrRule forceIncludeRenditions(List forceIncludeRenditions) {
    this.forceIncludeRenditions = forceIncludeRenditions;
    return this;
  }

  /**
   * Get forceIncludeRenditions
   * @return forceIncludeRenditions
   */
  @javax.annotation.Nullable
  public List getForceIncludeRenditions() {
    return forceIncludeRenditions;
  }

  public void setForceIncludeRenditions(List forceIncludeRenditions) {
    this.forceIncludeRenditions = forceIncludeRenditions;
  }


  public AutomatedAbrRule minBottomRenditionSize(AutomatedAbrRuleMinBottomRenditionSize minBottomRenditionSize) {
    this.minBottomRenditionSize = minBottomRenditionSize;
    return this;
  }

  /**
   * Get minBottomRenditionSize
   * @return minBottomRenditionSize
   */
  @javax.annotation.Nullable
  public AutomatedAbrRuleMinBottomRenditionSize getMinBottomRenditionSize() {
    return minBottomRenditionSize;
  }

  public void setMinBottomRenditionSize(AutomatedAbrRuleMinBottomRenditionSize minBottomRenditionSize) {
    this.minBottomRenditionSize = minBottomRenditionSize;
  }


  public AutomatedAbrRule minTopRenditionSize(AutomatedAbrRuleMinTopRenditionSize minTopRenditionSize) {
    this.minTopRenditionSize = minTopRenditionSize;
    return this;
  }

  /**
   * Get minTopRenditionSize
   * @return minTopRenditionSize
   */
  @javax.annotation.Nullable
  public AutomatedAbrRuleMinTopRenditionSize getMinTopRenditionSize() {
    return minTopRenditionSize;
  }

  public void setMinTopRenditionSize(AutomatedAbrRuleMinTopRenditionSize minTopRenditionSize) {
    this.minTopRenditionSize = minTopRenditionSize;
  }


  public AutomatedAbrRule type(RuleType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public RuleType getType() {
    return type;
  }

  public void setType(RuleType type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomatedAbrRule automatedAbrRule = (AutomatedAbrRule) o;
    return Objects.equals(this.allowedRenditions, automatedAbrRule.allowedRenditions) &&
        Objects.equals(this.forceIncludeRenditions, automatedAbrRule.forceIncludeRenditions) &&
        Objects.equals(this.minBottomRenditionSize, automatedAbrRule.minBottomRenditionSize) &&
        Objects.equals(this.minTopRenditionSize, automatedAbrRule.minTopRenditionSize) &&
        Objects.equals(this.type, automatedAbrRule.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedRenditions, forceIncludeRenditions, minBottomRenditionSize, minTopRenditionSize, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomatedAbrRule {\n");
    sb.append("    allowedRenditions: ").append(toIndentedString(allowedRenditions)).append("\n");
    sb.append("    forceIncludeRenditions: ").append(toIndentedString(forceIncludeRenditions)).append("\n");
    sb.append("    minBottomRenditionSize: ").append(toIndentedString(minBottomRenditionSize)).append("\n");
    sb.append("    minTopRenditionSize: ").append(toIndentedString(minTopRenditionSize)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllowedRenditions");
    openapiFields.add("ForceIncludeRenditions");
    openapiFields.add("MinBottomRenditionSize");
    openapiFields.add("MinTopRenditionSize");
    openapiFields.add("Type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomatedAbrRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomatedAbrRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomatedAbrRule is not found in the empty JSON string", AutomatedAbrRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomatedAbrRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomatedAbrRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AllowedRenditions`
      if (jsonObj.get("AllowedRenditions") != null && !jsonObj.get("AllowedRenditions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AllowedRenditions"));
      }
      // validate the optional field `ForceIncludeRenditions`
      if (jsonObj.get("ForceIncludeRenditions") != null && !jsonObj.get("ForceIncludeRenditions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ForceIncludeRenditions"));
      }
      // validate the optional field `MinBottomRenditionSize`
      if (jsonObj.get("MinBottomRenditionSize") != null && !jsonObj.get("MinBottomRenditionSize").isJsonNull()) {
        AutomatedAbrRuleMinBottomRenditionSize.validateJsonElement(jsonObj.get("MinBottomRenditionSize"));
      }
      // validate the optional field `MinTopRenditionSize`
      if (jsonObj.get("MinTopRenditionSize") != null && !jsonObj.get("MinTopRenditionSize").isJsonNull()) {
        AutomatedAbrRuleMinTopRenditionSize.validateJsonElement(jsonObj.get("MinTopRenditionSize"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        RuleType.validateJsonElement(jsonObj.get("Type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomatedAbrRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomatedAbrRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomatedAbrRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomatedAbrRule.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomatedAbrRule>() {
           @Override
           public void write(JsonWriter out, AutomatedAbrRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomatedAbrRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomatedAbrRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomatedAbrRule
   * @throws IOException if the JSON string is invalid with respect to AutomatedAbrRule
   */
  public static AutomatedAbrRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomatedAbrRule.class);
  }

  /**
   * Convert an instance of AutomatedAbrRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

