/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Set Embedded timecode override to Use MDPM when your AVCHD input contains timecode tag data in the Modified Digital Video Pack Metadata. When you do, we recommend you also set Timecode source to Embedded. Leave Embedded timecode override blank, or set to None, when your input does not contain MDPM timecode.
 */
@JsonAdapter(EmbeddedTimecodeOverride.Adapter.class)
public enum EmbeddedTimecodeOverride {
  
  NONE("NONE"),
  
  USE_MDPM("USE_MDPM");

  private String value;

  EmbeddedTimecodeOverride(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EmbeddedTimecodeOverride fromValue(String value) {
    for (EmbeddedTimecodeOverride b : EmbeddedTimecodeOverride.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EmbeddedTimecodeOverride> {
    @Override
    public void write(final JsonWriter jsonWriter, final EmbeddedTimecodeOverride enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EmbeddedTimecodeOverride read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EmbeddedTimecodeOverride.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EmbeddedTimecodeOverride.fromValue(value);
  }
}

