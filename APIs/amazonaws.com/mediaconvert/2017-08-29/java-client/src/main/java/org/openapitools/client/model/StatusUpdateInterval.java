/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.
 */
@JsonAdapter(StatusUpdateInterval.Adapter.class)
public enum StatusUpdateInterval {
  
  _10("SECONDS_10"),
  
  _12("SECONDS_12"),
  
  _15("SECONDS_15"),
  
  _20("SECONDS_20"),
  
  _30("SECONDS_30"),
  
  _60("SECONDS_60"),
  
  _120("SECONDS_120"),
  
  _180("SECONDS_180"),
  
  _240("SECONDS_240"),
  
  _300("SECONDS_300"),
  
  _360("SECONDS_360"),
  
  _420("SECONDS_420"),
  
  _480("SECONDS_480"),
  
  _540("SECONDS_540"),
  
  _600("SECONDS_600");

  private String value;

  StatusUpdateInterval(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static StatusUpdateInterval fromValue(String value) {
    for (StatusUpdateInterval b : StatusUpdateInterval.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<StatusUpdateInterval> {
    @Override
    public void write(final JsonWriter jsonWriter, final StatusUpdateInterval enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public StatusUpdateInterval read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return StatusUpdateInterval.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    StatusUpdateInterval.fromValue(value);
  }
}

