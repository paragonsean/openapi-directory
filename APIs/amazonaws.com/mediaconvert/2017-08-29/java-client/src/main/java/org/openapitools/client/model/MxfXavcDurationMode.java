/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * To create an output that complies with the XAVC file format guidelines for interoperability, keep the default value, Drop frames for compliance. To include all frames from your input in this output, keep the default setting, Allow any duration. The number of frames that MediaConvert excludes when you set this to Drop frames for compliance depends on the output frame rate and duration.
 */
@JsonAdapter(MxfXavcDurationMode.Adapter.class)
public enum MxfXavcDurationMode {
  
  ALLOW_ANY_DURATION("ALLOW_ANY_DURATION"),
  
  DROP_FRAMES_FOR_COMPLIANCE("DROP_FRAMES_FOR_COMPLIANCE");

  private String value;

  MxfXavcDurationMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MxfXavcDurationMode fromValue(String value) {
    for (MxfXavcDurationMode b : MxfXavcDurationMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MxfXavcDurationMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final MxfXavcDurationMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MxfXavcDurationMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MxfXavcDurationMode.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    MxfXavcDurationMode.fromValue(value);
  }
}

