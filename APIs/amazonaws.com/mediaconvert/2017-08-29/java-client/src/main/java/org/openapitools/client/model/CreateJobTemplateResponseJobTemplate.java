/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateJobTemplateRequestSettings;
import org.openapitools.client.model.JobAccelerationSettings;
import org.openapitools.client.model.StatusUpdateInterval;
import org.openapitools.client.model.Type;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateJobTemplateResponseJobTemplate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateJobTemplateResponseJobTemplate {
  public static final String SERIALIZED_NAME_ACCELERATION_SETTINGS = "AccelerationSettings";
  @SerializedName(SERIALIZED_NAME_ACCELERATION_SETTINGS)
  private JobAccelerationSettings accelerationSettings;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CATEGORY = "Category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HOP_DESTINATIONS = "HopDestinations";
  @SerializedName(SERIALIZED_NAME_HOP_DESTINATIONS)
  private List hopDestinations;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_QUEUE = "Queue";
  @SerializedName(SERIALIZED_NAME_QUEUE)
  private String queue;

  public static final String SERIALIZED_NAME_SETTINGS = "Settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private CreateJobTemplateRequestSettings settings;

  public static final String SERIALIZED_NAME_STATUS_UPDATE_INTERVAL = "StatusUpdateInterval";
  @SerializedName(SERIALIZED_NAME_STATUS_UPDATE_INTERVAL)
  private StatusUpdateInterval statusUpdateInterval;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Type type;

  public CreateJobTemplateResponseJobTemplate() {
  }

  public CreateJobTemplateResponseJobTemplate accelerationSettings(JobAccelerationSettings accelerationSettings) {
    this.accelerationSettings = accelerationSettings;
    return this;
  }

  /**
   * Get accelerationSettings
   * @return accelerationSettings
   */
  @javax.annotation.Nullable
  public JobAccelerationSettings getAccelerationSettings() {
    return accelerationSettings;
  }

  public void setAccelerationSettings(JobAccelerationSettings accelerationSettings) {
    this.accelerationSettings = accelerationSettings;
  }


  public CreateJobTemplateResponseJobTemplate arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateJobTemplateResponseJobTemplate category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public CreateJobTemplateResponseJobTemplate createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CreateJobTemplateResponseJobTemplate description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateJobTemplateResponseJobTemplate hopDestinations(List hopDestinations) {
    this.hopDestinations = hopDestinations;
    return this;
  }

  /**
   * Get hopDestinations
   * @return hopDestinations
   */
  @javax.annotation.Nullable
  public List getHopDestinations() {
    return hopDestinations;
  }

  public void setHopDestinations(List hopDestinations) {
    this.hopDestinations = hopDestinations;
  }


  public CreateJobTemplateResponseJobTemplate lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public CreateJobTemplateResponseJobTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateJobTemplateResponseJobTemplate priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public CreateJobTemplateResponseJobTemplate queue(String queue) {
    this.queue = queue;
    return this;
  }

  /**
   * Get queue
   * @return queue
   */
  @javax.annotation.Nullable
  public String getQueue() {
    return queue;
  }

  public void setQueue(String queue) {
    this.queue = queue;
  }


  public CreateJobTemplateResponseJobTemplate settings(CreateJobTemplateRequestSettings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nonnull
  public CreateJobTemplateRequestSettings getSettings() {
    return settings;
  }

  public void setSettings(CreateJobTemplateRequestSettings settings) {
    this.settings = settings;
  }


  public CreateJobTemplateResponseJobTemplate statusUpdateInterval(StatusUpdateInterval statusUpdateInterval) {
    this.statusUpdateInterval = statusUpdateInterval;
    return this;
  }

  /**
   * Get statusUpdateInterval
   * @return statusUpdateInterval
   */
  @javax.annotation.Nullable
  public StatusUpdateInterval getStatusUpdateInterval() {
    return statusUpdateInterval;
  }

  public void setStatusUpdateInterval(StatusUpdateInterval statusUpdateInterval) {
    this.statusUpdateInterval = statusUpdateInterval;
  }


  public CreateJobTemplateResponseJobTemplate type(Type type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateJobTemplateResponseJobTemplate createJobTemplateResponseJobTemplate = (CreateJobTemplateResponseJobTemplate) o;
    return Objects.equals(this.accelerationSettings, createJobTemplateResponseJobTemplate.accelerationSettings) &&
        Objects.equals(this.arn, createJobTemplateResponseJobTemplate.arn) &&
        Objects.equals(this.category, createJobTemplateResponseJobTemplate.category) &&
        Objects.equals(this.createdAt, createJobTemplateResponseJobTemplate.createdAt) &&
        Objects.equals(this.description, createJobTemplateResponseJobTemplate.description) &&
        Objects.equals(this.hopDestinations, createJobTemplateResponseJobTemplate.hopDestinations) &&
        Objects.equals(this.lastUpdated, createJobTemplateResponseJobTemplate.lastUpdated) &&
        Objects.equals(this.name, createJobTemplateResponseJobTemplate.name) &&
        Objects.equals(this.priority, createJobTemplateResponseJobTemplate.priority) &&
        Objects.equals(this.queue, createJobTemplateResponseJobTemplate.queue) &&
        Objects.equals(this.settings, createJobTemplateResponseJobTemplate.settings) &&
        Objects.equals(this.statusUpdateInterval, createJobTemplateResponseJobTemplate.statusUpdateInterval) &&
        Objects.equals(this.type, createJobTemplateResponseJobTemplate.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerationSettings, arn, category, createdAt, description, hopDestinations, lastUpdated, name, priority, queue, settings, statusUpdateInterval, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateJobTemplateResponseJobTemplate {\n");
    sb.append("    accelerationSettings: ").append(toIndentedString(accelerationSettings)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hopDestinations: ").append(toIndentedString(hopDestinations)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    statusUpdateInterval: ").append(toIndentedString(statusUpdateInterval)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccelerationSettings");
    openapiFields.add("Arn");
    openapiFields.add("Category");
    openapiFields.add("CreatedAt");
    openapiFields.add("Description");
    openapiFields.add("HopDestinations");
    openapiFields.add("LastUpdated");
    openapiFields.add("Name");
    openapiFields.add("Priority");
    openapiFields.add("Queue");
    openapiFields.add("Settings");
    openapiFields.add("StatusUpdateInterval");
    openapiFields.add("Type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("Settings");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateJobTemplateResponseJobTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateJobTemplateResponseJobTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateJobTemplateResponseJobTemplate is not found in the empty JSON string", CreateJobTemplateResponseJobTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateJobTemplateResponseJobTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateJobTemplateResponseJobTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateJobTemplateResponseJobTemplate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccelerationSettings`
      if (jsonObj.get("AccelerationSettings") != null && !jsonObj.get("AccelerationSettings").isJsonNull()) {
        JobAccelerationSettings.validateJsonElement(jsonObj.get("AccelerationSettings"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `Category`
      if (jsonObj.get("Category") != null && !jsonObj.get("Category").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Category"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `HopDestinations`
      if (jsonObj.get("HopDestinations") != null && !jsonObj.get("HopDestinations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("HopDestinations"));
      }
      // validate the optional field `LastUpdated`
      if (jsonObj.get("LastUpdated") != null && !jsonObj.get("LastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdated"));
      }
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the optional field `Priority`
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Priority"));
      }
      // validate the optional field `Queue`
      if (jsonObj.get("Queue") != null && !jsonObj.get("Queue").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Queue"));
      }
      // validate the required field `Settings`
      CreateJobTemplateRequestSettings.validateJsonElement(jsonObj.get("Settings"));
      // validate the optional field `StatusUpdateInterval`
      if (jsonObj.get("StatusUpdateInterval") != null && !jsonObj.get("StatusUpdateInterval").isJsonNull()) {
        StatusUpdateInterval.validateJsonElement(jsonObj.get("StatusUpdateInterval"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        Type.validateJsonElement(jsonObj.get("Type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateJobTemplateResponseJobTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateJobTemplateResponseJobTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateJobTemplateResponseJobTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateJobTemplateResponseJobTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateJobTemplateResponseJobTemplate>() {
           @Override
           public void write(JsonWriter out, CreateJobTemplateResponseJobTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateJobTemplateResponseJobTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateJobTemplateResponseJobTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateJobTemplateResponseJobTemplate
   * @throws IOException if the JSON string is invalid with respect to CreateJobTemplateResponseJobTemplate
   */
  public static CreateJobTemplateResponseJobTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateJobTemplateResponseJobTemplate.class);
  }

  /**
   * Convert an instance of CreateJobTemplateResponseJobTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

