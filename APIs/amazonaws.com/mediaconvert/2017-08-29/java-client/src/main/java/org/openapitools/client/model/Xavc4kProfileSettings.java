/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Xavc4kProfileBitrateClass;
import org.openapitools.client.model.Xavc4kProfileCodecProfile;
import org.openapitools.client.model.Xavc4kProfileQualityTuningLevel;
import org.openapitools.client.model.XavcFlickerAdaptiveQuantization;
import org.openapitools.client.model.XavcGopBReference;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Required when you set Profile to the value XAVC_4K.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Xavc4kProfileSettings {
  public static final String SERIALIZED_NAME_BITRATE_CLASS = "BitrateClass";
  @SerializedName(SERIALIZED_NAME_BITRATE_CLASS)
  private Xavc4kProfileBitrateClass bitrateClass;

  public static final String SERIALIZED_NAME_CODEC_PROFILE = "CodecProfile";
  @SerializedName(SERIALIZED_NAME_CODEC_PROFILE)
  private Xavc4kProfileCodecProfile codecProfile;

  public static final String SERIALIZED_NAME_FLICKER_ADAPTIVE_QUANTIZATION = "FlickerAdaptiveQuantization";
  @SerializedName(SERIALIZED_NAME_FLICKER_ADAPTIVE_QUANTIZATION)
  private XavcFlickerAdaptiveQuantization flickerAdaptiveQuantization;

  public static final String SERIALIZED_NAME_GOP_B_REFERENCE = "GopBReference";
  @SerializedName(SERIALIZED_NAME_GOP_B_REFERENCE)
  private XavcGopBReference gopBReference;

  public static final String SERIALIZED_NAME_GOP_CLOSED_CADENCE = "GopClosedCadence";
  @SerializedName(SERIALIZED_NAME_GOP_CLOSED_CADENCE)
  private Integer gopClosedCadence;

  public static final String SERIALIZED_NAME_HRD_BUFFER_SIZE = "HrdBufferSize";
  @SerializedName(SERIALIZED_NAME_HRD_BUFFER_SIZE)
  private Integer hrdBufferSize;

  public static final String SERIALIZED_NAME_QUALITY_TUNING_LEVEL = "QualityTuningLevel";
  @SerializedName(SERIALIZED_NAME_QUALITY_TUNING_LEVEL)
  private Xavc4kProfileQualityTuningLevel qualityTuningLevel;

  public static final String SERIALIZED_NAME_SLICES = "Slices";
  @SerializedName(SERIALIZED_NAME_SLICES)
  private Integer slices;

  public Xavc4kProfileSettings() {
  }

  public Xavc4kProfileSettings bitrateClass(Xavc4kProfileBitrateClass bitrateClass) {
    this.bitrateClass = bitrateClass;
    return this;
  }

  /**
   * Get bitrateClass
   * @return bitrateClass
   */
  @javax.annotation.Nullable
  public Xavc4kProfileBitrateClass getBitrateClass() {
    return bitrateClass;
  }

  public void setBitrateClass(Xavc4kProfileBitrateClass bitrateClass) {
    this.bitrateClass = bitrateClass;
  }


  public Xavc4kProfileSettings codecProfile(Xavc4kProfileCodecProfile codecProfile) {
    this.codecProfile = codecProfile;
    return this;
  }

  /**
   * Get codecProfile
   * @return codecProfile
   */
  @javax.annotation.Nullable
  public Xavc4kProfileCodecProfile getCodecProfile() {
    return codecProfile;
  }

  public void setCodecProfile(Xavc4kProfileCodecProfile codecProfile) {
    this.codecProfile = codecProfile;
  }


  public Xavc4kProfileSettings flickerAdaptiveQuantization(XavcFlickerAdaptiveQuantization flickerAdaptiveQuantization) {
    this.flickerAdaptiveQuantization = flickerAdaptiveQuantization;
    return this;
  }

  /**
   * Get flickerAdaptiveQuantization
   * @return flickerAdaptiveQuantization
   */
  @javax.annotation.Nullable
  public XavcFlickerAdaptiveQuantization getFlickerAdaptiveQuantization() {
    return flickerAdaptiveQuantization;
  }

  public void setFlickerAdaptiveQuantization(XavcFlickerAdaptiveQuantization flickerAdaptiveQuantization) {
    this.flickerAdaptiveQuantization = flickerAdaptiveQuantization;
  }


  public Xavc4kProfileSettings gopBReference(XavcGopBReference gopBReference) {
    this.gopBReference = gopBReference;
    return this;
  }

  /**
   * Get gopBReference
   * @return gopBReference
   */
  @javax.annotation.Nullable
  public XavcGopBReference getGopBReference() {
    return gopBReference;
  }

  public void setGopBReference(XavcGopBReference gopBReference) {
    this.gopBReference = gopBReference;
  }


  public Xavc4kProfileSettings gopClosedCadence(Integer gopClosedCadence) {
    this.gopClosedCadence = gopClosedCadence;
    return this;
  }

  /**
   * Get gopClosedCadence
   * @return gopClosedCadence
   */
  @javax.annotation.Nullable
  public Integer getGopClosedCadence() {
    return gopClosedCadence;
  }

  public void setGopClosedCadence(Integer gopClosedCadence) {
    this.gopClosedCadence = gopClosedCadence;
  }


  public Xavc4kProfileSettings hrdBufferSize(Integer hrdBufferSize) {
    this.hrdBufferSize = hrdBufferSize;
    return this;
  }

  /**
   * Get hrdBufferSize
   * @return hrdBufferSize
   */
  @javax.annotation.Nullable
  public Integer getHrdBufferSize() {
    return hrdBufferSize;
  }

  public void setHrdBufferSize(Integer hrdBufferSize) {
    this.hrdBufferSize = hrdBufferSize;
  }


  public Xavc4kProfileSettings qualityTuningLevel(Xavc4kProfileQualityTuningLevel qualityTuningLevel) {
    this.qualityTuningLevel = qualityTuningLevel;
    return this;
  }

  /**
   * Get qualityTuningLevel
   * @return qualityTuningLevel
   */
  @javax.annotation.Nullable
  public Xavc4kProfileQualityTuningLevel getQualityTuningLevel() {
    return qualityTuningLevel;
  }

  public void setQualityTuningLevel(Xavc4kProfileQualityTuningLevel qualityTuningLevel) {
    this.qualityTuningLevel = qualityTuningLevel;
  }


  public Xavc4kProfileSettings slices(Integer slices) {
    this.slices = slices;
    return this;
  }

  /**
   * Get slices
   * @return slices
   */
  @javax.annotation.Nullable
  public Integer getSlices() {
    return slices;
  }

  public void setSlices(Integer slices) {
    this.slices = slices;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Xavc4kProfileSettings xavc4kProfileSettings = (Xavc4kProfileSettings) o;
    return Objects.equals(this.bitrateClass, xavc4kProfileSettings.bitrateClass) &&
        Objects.equals(this.codecProfile, xavc4kProfileSettings.codecProfile) &&
        Objects.equals(this.flickerAdaptiveQuantization, xavc4kProfileSettings.flickerAdaptiveQuantization) &&
        Objects.equals(this.gopBReference, xavc4kProfileSettings.gopBReference) &&
        Objects.equals(this.gopClosedCadence, xavc4kProfileSettings.gopClosedCadence) &&
        Objects.equals(this.hrdBufferSize, xavc4kProfileSettings.hrdBufferSize) &&
        Objects.equals(this.qualityTuningLevel, xavc4kProfileSettings.qualityTuningLevel) &&
        Objects.equals(this.slices, xavc4kProfileSettings.slices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrateClass, codecProfile, flickerAdaptiveQuantization, gopBReference, gopClosedCadence, hrdBufferSize, qualityTuningLevel, slices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Xavc4kProfileSettings {\n");
    sb.append("    bitrateClass: ").append(toIndentedString(bitrateClass)).append("\n");
    sb.append("    codecProfile: ").append(toIndentedString(codecProfile)).append("\n");
    sb.append("    flickerAdaptiveQuantization: ").append(toIndentedString(flickerAdaptiveQuantization)).append("\n");
    sb.append("    gopBReference: ").append(toIndentedString(gopBReference)).append("\n");
    sb.append("    gopClosedCadence: ").append(toIndentedString(gopClosedCadence)).append("\n");
    sb.append("    hrdBufferSize: ").append(toIndentedString(hrdBufferSize)).append("\n");
    sb.append("    qualityTuningLevel: ").append(toIndentedString(qualityTuningLevel)).append("\n");
    sb.append("    slices: ").append(toIndentedString(slices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BitrateClass");
    openapiFields.add("CodecProfile");
    openapiFields.add("FlickerAdaptiveQuantization");
    openapiFields.add("GopBReference");
    openapiFields.add("GopClosedCadence");
    openapiFields.add("HrdBufferSize");
    openapiFields.add("QualityTuningLevel");
    openapiFields.add("Slices");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Xavc4kProfileSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Xavc4kProfileSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Xavc4kProfileSettings is not found in the empty JSON string", Xavc4kProfileSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Xavc4kProfileSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Xavc4kProfileSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BitrateClass`
      if (jsonObj.get("BitrateClass") != null && !jsonObj.get("BitrateClass").isJsonNull()) {
        Xavc4kProfileBitrateClass.validateJsonElement(jsonObj.get("BitrateClass"));
      }
      // validate the optional field `CodecProfile`
      if (jsonObj.get("CodecProfile") != null && !jsonObj.get("CodecProfile").isJsonNull()) {
        Xavc4kProfileCodecProfile.validateJsonElement(jsonObj.get("CodecProfile"));
      }
      // validate the optional field `FlickerAdaptiveQuantization`
      if (jsonObj.get("FlickerAdaptiveQuantization") != null && !jsonObj.get("FlickerAdaptiveQuantization").isJsonNull()) {
        XavcFlickerAdaptiveQuantization.validateJsonElement(jsonObj.get("FlickerAdaptiveQuantization"));
      }
      // validate the optional field `GopBReference`
      if (jsonObj.get("GopBReference") != null && !jsonObj.get("GopBReference").isJsonNull()) {
        XavcGopBReference.validateJsonElement(jsonObj.get("GopBReference"));
      }
      // validate the optional field `GopClosedCadence`
      if (jsonObj.get("GopClosedCadence") != null && !jsonObj.get("GopClosedCadence").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("GopClosedCadence"));
      }
      // validate the optional field `HrdBufferSize`
      if (jsonObj.get("HrdBufferSize") != null && !jsonObj.get("HrdBufferSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("HrdBufferSize"));
      }
      // validate the optional field `QualityTuningLevel`
      if (jsonObj.get("QualityTuningLevel") != null && !jsonObj.get("QualityTuningLevel").isJsonNull()) {
        Xavc4kProfileQualityTuningLevel.validateJsonElement(jsonObj.get("QualityTuningLevel"));
      }
      // validate the optional field `Slices`
      if (jsonObj.get("Slices") != null && !jsonObj.get("Slices").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Slices"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Xavc4kProfileSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Xavc4kProfileSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Xavc4kProfileSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Xavc4kProfileSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<Xavc4kProfileSettings>() {
           @Override
           public void write(JsonWriter out, Xavc4kProfileSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Xavc4kProfileSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Xavc4kProfileSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Xavc4kProfileSettings
   * @throws IOException if the JSON string is invalid with respect to Xavc4kProfileSettings
   */
  public static Xavc4kProfileSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Xavc4kProfileSettings.class);
  }

  /**
   * Convert an instance of Xavc4kProfileSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

