/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify how the value for bandwidth is determined for each video Representation in your output MPD manifest. We recommend that you choose a MPD manifest bandwidth type that is compatible with your downstream player configuration. Max: Use the same value that you specify for Max bitrate in the video output, in bits per second. Average: Use the calculated average bitrate of the encoded video output, in bits per second.
 */
@JsonAdapter(DashIsoMpdManifestBandwidthType.Adapter.class)
public enum DashIsoMpdManifestBandwidthType {
  
  AVERAGE("AVERAGE"),
  
  MAX("MAX");

  private String value;

  DashIsoMpdManifestBandwidthType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DashIsoMpdManifestBandwidthType fromValue(String value) {
    for (DashIsoMpdManifestBandwidthType b : DashIsoMpdManifestBandwidthType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DashIsoMpdManifestBandwidthType> {
    @Override
    public void write(final JsonWriter jsonWriter, final DashIsoMpdManifestBandwidthType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DashIsoMpdManifestBandwidthType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DashIsoMpdManifestBandwidthType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    DashIsoMpdManifestBandwidthType.fromValue(value);
  }
}

