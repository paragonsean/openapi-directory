/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * When set to PCR_EVERY_PES_PACKET a Program Clock Reference value is inserted for every Packetized Elementary Stream (PES) header. This parameter is effective only when the PCR PID is the same as the video or audio elementary stream.
 */
@JsonAdapter(M3u8PcrControl.Adapter.class)
public enum M3u8PcrControl {
  
  PCR_EVERY_PES_PACKET("PCR_EVERY_PES_PACKET"),
  
  CONFIGURED_PCR_PERIOD("CONFIGURED_PCR_PERIOD");

  private String value;

  M3u8PcrControl(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static M3u8PcrControl fromValue(String value) {
    for (M3u8PcrControl b : M3u8PcrControl.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<M3u8PcrControl> {
    @Override
    public void write(final JsonWriter jsonWriter, final M3u8PcrControl enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public M3u8PcrControl read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return M3u8PcrControl.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    M3u8PcrControl.fromValue(value);
  }
}

