/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * If the location of parameter set NAL units doesn&#39;t matter in your workflow, ignore this setting. Use this setting only with CMAF or DASH outputs, or with standalone file outputs in an MPEG-4 container (MP4 outputs). Choose HVC1 to mark your output as HVC1. This makes your output compliant with the following specification: ISO IECJTC1 SC29 N13798 Text ISO/IEC FDIS 14496-15 3rd Edition. For these outputs, the service stores parameter set NAL units in the sample headers but not in the samples directly. For MP4 outputs, when you choose HVC1, your output video might not work properly with some downstream systems and video players. The service defaults to marking your output as HEV1. For these outputs, the service writes parameter set NAL units directly into the samples.
 */
@JsonAdapter(H265WriteMp4PackagingType.Adapter.class)
public enum H265WriteMp4PackagingType {
  
  HVC1("HVC1"),
  
  HEV1("HEV1");

  private String value;

  H265WriteMp4PackagingType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static H265WriteMp4PackagingType fromValue(String value) {
    for (H265WriteMp4PackagingType b : H265WriteMp4PackagingType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<H265WriteMp4PackagingType> {
    @Override
    public void write(final JsonWriter jsonWriter, final H265WriteMp4PackagingType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public H265WriteMp4PackagingType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return H265WriteMp4PackagingType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    H265WriteMp4PackagingType.fromValue(value);
  }
}

