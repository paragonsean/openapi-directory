/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify the AVC-Intra class of your output. The AVC-Intra class selection determines the output video bit rate depending on the frame rate of the output. Outputs with higher class values have higher bitrates and improved image quality. Note that for Class 4K/2K, MediaConvert supports only 4:2:2 chroma subsampling.
 */
@JsonAdapter(AvcIntraClass.Adapter.class)
public enum AvcIntraClass {
  
  _50("CLASS_50"),
  
  _100("CLASS_100"),
  
  _200("CLASS_200"),
  
  _4_K_2_K("CLASS_4K_2K");

  private String value;

  AvcIntraClass(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AvcIntraClass fromValue(String value) {
    for (AvcIntraClass b : AvcIntraClass.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AvcIntraClass> {
    @Override
    public void write(final JsonWriter jsonWriter, final AvcIntraClass enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AvcIntraClass read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AvcIntraClass.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AvcIntraClass.fromValue(value);
  }
}

