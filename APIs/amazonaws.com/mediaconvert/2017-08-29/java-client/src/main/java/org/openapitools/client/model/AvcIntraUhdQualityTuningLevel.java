/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Optional. Use Quality tuning level to choose how many transcoding passes MediaConvert does with your video. When you choose Multi-pass, your video quality is better and your output bitrate is more accurate. That is, the actual bitrate of your output is closer to the target bitrate defined in the specification. When you choose Single-pass, your encoding time is faster. The default behavior is Single-pass.
 */
@JsonAdapter(AvcIntraUhdQualityTuningLevel.Adapter.class)
public enum AvcIntraUhdQualityTuningLevel {
  
  SINGLE_PASS("SINGLE_PASS"),
  
  MULTI_PASS("MULTI_PASS");

  private String value;

  AvcIntraUhdQualityTuningLevel(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AvcIntraUhdQualityTuningLevel fromValue(String value) {
    for (AvcIntraUhdQualityTuningLevel b : AvcIntraUhdQualityTuningLevel.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AvcIntraUhdQualityTuningLevel> {
    @Override
    public void write(final JsonWriter jsonWriter, final AvcIntraUhdQualityTuningLevel enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AvcIntraUhdQualityTuningLevel read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AvcIntraUhdQualityTuningLevel.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AvcIntraUhdQualityTuningLevel.fromValue(value);
  }
}

