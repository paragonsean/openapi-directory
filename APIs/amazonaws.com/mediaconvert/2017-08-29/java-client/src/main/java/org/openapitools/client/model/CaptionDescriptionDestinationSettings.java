/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CaptionDestinationSettingsBurninDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsDvbSubDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsEmbeddedDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsImscDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsSccDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsSrtDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsTeletextDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsTtmlDestinationSettings;
import org.openapitools.client.model.CaptionDestinationSettingsWebvttDestinationSettings;
import org.openapitools.client.model.CaptionDestinationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CaptionDescriptionDestinationSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CaptionDescriptionDestinationSettings {
  public static final String SERIALIZED_NAME_BURNIN_DESTINATION_SETTINGS = "BurninDestinationSettings";
  @SerializedName(SERIALIZED_NAME_BURNIN_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsBurninDestinationSettings burninDestinationSettings;

  public static final String SERIALIZED_NAME_DESTINATION_TYPE = "DestinationType";
  @SerializedName(SERIALIZED_NAME_DESTINATION_TYPE)
  private CaptionDestinationType destinationType;

  public static final String SERIALIZED_NAME_DVB_SUB_DESTINATION_SETTINGS = "DvbSubDestinationSettings";
  @SerializedName(SERIALIZED_NAME_DVB_SUB_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsDvbSubDestinationSettings dvbSubDestinationSettings;

  public static final String SERIALIZED_NAME_EMBEDDED_DESTINATION_SETTINGS = "EmbeddedDestinationSettings";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsEmbeddedDestinationSettings embeddedDestinationSettings;

  public static final String SERIALIZED_NAME_IMSC_DESTINATION_SETTINGS = "ImscDestinationSettings";
  @SerializedName(SERIALIZED_NAME_IMSC_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsImscDestinationSettings imscDestinationSettings;

  public static final String SERIALIZED_NAME_SCC_DESTINATION_SETTINGS = "SccDestinationSettings";
  @SerializedName(SERIALIZED_NAME_SCC_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsSccDestinationSettings sccDestinationSettings;

  public static final String SERIALIZED_NAME_SRT_DESTINATION_SETTINGS = "SrtDestinationSettings";
  @SerializedName(SERIALIZED_NAME_SRT_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsSrtDestinationSettings srtDestinationSettings;

  public static final String SERIALIZED_NAME_TELETEXT_DESTINATION_SETTINGS = "TeletextDestinationSettings";
  @SerializedName(SERIALIZED_NAME_TELETEXT_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsTeletextDestinationSettings teletextDestinationSettings;

  public static final String SERIALIZED_NAME_TTML_DESTINATION_SETTINGS = "TtmlDestinationSettings";
  @SerializedName(SERIALIZED_NAME_TTML_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsTtmlDestinationSettings ttmlDestinationSettings;

  public static final String SERIALIZED_NAME_WEBVTT_DESTINATION_SETTINGS = "WebvttDestinationSettings";
  @SerializedName(SERIALIZED_NAME_WEBVTT_DESTINATION_SETTINGS)
  private CaptionDestinationSettingsWebvttDestinationSettings webvttDestinationSettings;

  public CaptionDescriptionDestinationSettings() {
  }

  public CaptionDescriptionDestinationSettings burninDestinationSettings(CaptionDestinationSettingsBurninDestinationSettings burninDestinationSettings) {
    this.burninDestinationSettings = burninDestinationSettings;
    return this;
  }

  /**
   * Get burninDestinationSettings
   * @return burninDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsBurninDestinationSettings getBurninDestinationSettings() {
    return burninDestinationSettings;
  }

  public void setBurninDestinationSettings(CaptionDestinationSettingsBurninDestinationSettings burninDestinationSettings) {
    this.burninDestinationSettings = burninDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings destinationType(CaptionDestinationType destinationType) {
    this.destinationType = destinationType;
    return this;
  }

  /**
   * Get destinationType
   * @return destinationType
   */
  @javax.annotation.Nullable
  public CaptionDestinationType getDestinationType() {
    return destinationType;
  }

  public void setDestinationType(CaptionDestinationType destinationType) {
    this.destinationType = destinationType;
  }


  public CaptionDescriptionDestinationSettings dvbSubDestinationSettings(CaptionDestinationSettingsDvbSubDestinationSettings dvbSubDestinationSettings) {
    this.dvbSubDestinationSettings = dvbSubDestinationSettings;
    return this;
  }

  /**
   * Get dvbSubDestinationSettings
   * @return dvbSubDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsDvbSubDestinationSettings getDvbSubDestinationSettings() {
    return dvbSubDestinationSettings;
  }

  public void setDvbSubDestinationSettings(CaptionDestinationSettingsDvbSubDestinationSettings dvbSubDestinationSettings) {
    this.dvbSubDestinationSettings = dvbSubDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings embeddedDestinationSettings(CaptionDestinationSettingsEmbeddedDestinationSettings embeddedDestinationSettings) {
    this.embeddedDestinationSettings = embeddedDestinationSettings;
    return this;
  }

  /**
   * Get embeddedDestinationSettings
   * @return embeddedDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsEmbeddedDestinationSettings getEmbeddedDestinationSettings() {
    return embeddedDestinationSettings;
  }

  public void setEmbeddedDestinationSettings(CaptionDestinationSettingsEmbeddedDestinationSettings embeddedDestinationSettings) {
    this.embeddedDestinationSettings = embeddedDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings imscDestinationSettings(CaptionDestinationSettingsImscDestinationSettings imscDestinationSettings) {
    this.imscDestinationSettings = imscDestinationSettings;
    return this;
  }

  /**
   * Get imscDestinationSettings
   * @return imscDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsImscDestinationSettings getImscDestinationSettings() {
    return imscDestinationSettings;
  }

  public void setImscDestinationSettings(CaptionDestinationSettingsImscDestinationSettings imscDestinationSettings) {
    this.imscDestinationSettings = imscDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings sccDestinationSettings(CaptionDestinationSettingsSccDestinationSettings sccDestinationSettings) {
    this.sccDestinationSettings = sccDestinationSettings;
    return this;
  }

  /**
   * Get sccDestinationSettings
   * @return sccDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsSccDestinationSettings getSccDestinationSettings() {
    return sccDestinationSettings;
  }

  public void setSccDestinationSettings(CaptionDestinationSettingsSccDestinationSettings sccDestinationSettings) {
    this.sccDestinationSettings = sccDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings srtDestinationSettings(CaptionDestinationSettingsSrtDestinationSettings srtDestinationSettings) {
    this.srtDestinationSettings = srtDestinationSettings;
    return this;
  }

  /**
   * Get srtDestinationSettings
   * @return srtDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsSrtDestinationSettings getSrtDestinationSettings() {
    return srtDestinationSettings;
  }

  public void setSrtDestinationSettings(CaptionDestinationSettingsSrtDestinationSettings srtDestinationSettings) {
    this.srtDestinationSettings = srtDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings teletextDestinationSettings(CaptionDestinationSettingsTeletextDestinationSettings teletextDestinationSettings) {
    this.teletextDestinationSettings = teletextDestinationSettings;
    return this;
  }

  /**
   * Get teletextDestinationSettings
   * @return teletextDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsTeletextDestinationSettings getTeletextDestinationSettings() {
    return teletextDestinationSettings;
  }

  public void setTeletextDestinationSettings(CaptionDestinationSettingsTeletextDestinationSettings teletextDestinationSettings) {
    this.teletextDestinationSettings = teletextDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings ttmlDestinationSettings(CaptionDestinationSettingsTtmlDestinationSettings ttmlDestinationSettings) {
    this.ttmlDestinationSettings = ttmlDestinationSettings;
    return this;
  }

  /**
   * Get ttmlDestinationSettings
   * @return ttmlDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsTtmlDestinationSettings getTtmlDestinationSettings() {
    return ttmlDestinationSettings;
  }

  public void setTtmlDestinationSettings(CaptionDestinationSettingsTtmlDestinationSettings ttmlDestinationSettings) {
    this.ttmlDestinationSettings = ttmlDestinationSettings;
  }


  public CaptionDescriptionDestinationSettings webvttDestinationSettings(CaptionDestinationSettingsWebvttDestinationSettings webvttDestinationSettings) {
    this.webvttDestinationSettings = webvttDestinationSettings;
    return this;
  }

  /**
   * Get webvttDestinationSettings
   * @return webvttDestinationSettings
   */
  @javax.annotation.Nullable
  public CaptionDestinationSettingsWebvttDestinationSettings getWebvttDestinationSettings() {
    return webvttDestinationSettings;
  }

  public void setWebvttDestinationSettings(CaptionDestinationSettingsWebvttDestinationSettings webvttDestinationSettings) {
    this.webvttDestinationSettings = webvttDestinationSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaptionDescriptionDestinationSettings captionDescriptionDestinationSettings = (CaptionDescriptionDestinationSettings) o;
    return Objects.equals(this.burninDestinationSettings, captionDescriptionDestinationSettings.burninDestinationSettings) &&
        Objects.equals(this.destinationType, captionDescriptionDestinationSettings.destinationType) &&
        Objects.equals(this.dvbSubDestinationSettings, captionDescriptionDestinationSettings.dvbSubDestinationSettings) &&
        Objects.equals(this.embeddedDestinationSettings, captionDescriptionDestinationSettings.embeddedDestinationSettings) &&
        Objects.equals(this.imscDestinationSettings, captionDescriptionDestinationSettings.imscDestinationSettings) &&
        Objects.equals(this.sccDestinationSettings, captionDescriptionDestinationSettings.sccDestinationSettings) &&
        Objects.equals(this.srtDestinationSettings, captionDescriptionDestinationSettings.srtDestinationSettings) &&
        Objects.equals(this.teletextDestinationSettings, captionDescriptionDestinationSettings.teletextDestinationSettings) &&
        Objects.equals(this.ttmlDestinationSettings, captionDescriptionDestinationSettings.ttmlDestinationSettings) &&
        Objects.equals(this.webvttDestinationSettings, captionDescriptionDestinationSettings.webvttDestinationSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(burninDestinationSettings, destinationType, dvbSubDestinationSettings, embeddedDestinationSettings, imscDestinationSettings, sccDestinationSettings, srtDestinationSettings, teletextDestinationSettings, ttmlDestinationSettings, webvttDestinationSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaptionDescriptionDestinationSettings {\n");
    sb.append("    burninDestinationSettings: ").append(toIndentedString(burninDestinationSettings)).append("\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    dvbSubDestinationSettings: ").append(toIndentedString(dvbSubDestinationSettings)).append("\n");
    sb.append("    embeddedDestinationSettings: ").append(toIndentedString(embeddedDestinationSettings)).append("\n");
    sb.append("    imscDestinationSettings: ").append(toIndentedString(imscDestinationSettings)).append("\n");
    sb.append("    sccDestinationSettings: ").append(toIndentedString(sccDestinationSettings)).append("\n");
    sb.append("    srtDestinationSettings: ").append(toIndentedString(srtDestinationSettings)).append("\n");
    sb.append("    teletextDestinationSettings: ").append(toIndentedString(teletextDestinationSettings)).append("\n");
    sb.append("    ttmlDestinationSettings: ").append(toIndentedString(ttmlDestinationSettings)).append("\n");
    sb.append("    webvttDestinationSettings: ").append(toIndentedString(webvttDestinationSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BurninDestinationSettings");
    openapiFields.add("DestinationType");
    openapiFields.add("DvbSubDestinationSettings");
    openapiFields.add("EmbeddedDestinationSettings");
    openapiFields.add("ImscDestinationSettings");
    openapiFields.add("SccDestinationSettings");
    openapiFields.add("SrtDestinationSettings");
    openapiFields.add("TeletextDestinationSettings");
    openapiFields.add("TtmlDestinationSettings");
    openapiFields.add("WebvttDestinationSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CaptionDescriptionDestinationSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CaptionDescriptionDestinationSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaptionDescriptionDestinationSettings is not found in the empty JSON string", CaptionDescriptionDestinationSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CaptionDescriptionDestinationSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaptionDescriptionDestinationSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BurninDestinationSettings`
      if (jsonObj.get("BurninDestinationSettings") != null && !jsonObj.get("BurninDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsBurninDestinationSettings.validateJsonElement(jsonObj.get("BurninDestinationSettings"));
      }
      // validate the optional field `DestinationType`
      if (jsonObj.get("DestinationType") != null && !jsonObj.get("DestinationType").isJsonNull()) {
        CaptionDestinationType.validateJsonElement(jsonObj.get("DestinationType"));
      }
      // validate the optional field `DvbSubDestinationSettings`
      if (jsonObj.get("DvbSubDestinationSettings") != null && !jsonObj.get("DvbSubDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsDvbSubDestinationSettings.validateJsonElement(jsonObj.get("DvbSubDestinationSettings"));
      }
      // validate the optional field `EmbeddedDestinationSettings`
      if (jsonObj.get("EmbeddedDestinationSettings") != null && !jsonObj.get("EmbeddedDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsEmbeddedDestinationSettings.validateJsonElement(jsonObj.get("EmbeddedDestinationSettings"));
      }
      // validate the optional field `ImscDestinationSettings`
      if (jsonObj.get("ImscDestinationSettings") != null && !jsonObj.get("ImscDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsImscDestinationSettings.validateJsonElement(jsonObj.get("ImscDestinationSettings"));
      }
      // validate the optional field `SccDestinationSettings`
      if (jsonObj.get("SccDestinationSettings") != null && !jsonObj.get("SccDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsSccDestinationSettings.validateJsonElement(jsonObj.get("SccDestinationSettings"));
      }
      // validate the optional field `SrtDestinationSettings`
      if (jsonObj.get("SrtDestinationSettings") != null && !jsonObj.get("SrtDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsSrtDestinationSettings.validateJsonElement(jsonObj.get("SrtDestinationSettings"));
      }
      // validate the optional field `TeletextDestinationSettings`
      if (jsonObj.get("TeletextDestinationSettings") != null && !jsonObj.get("TeletextDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsTeletextDestinationSettings.validateJsonElement(jsonObj.get("TeletextDestinationSettings"));
      }
      // validate the optional field `TtmlDestinationSettings`
      if (jsonObj.get("TtmlDestinationSettings") != null && !jsonObj.get("TtmlDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsTtmlDestinationSettings.validateJsonElement(jsonObj.get("TtmlDestinationSettings"));
      }
      // validate the optional field `WebvttDestinationSettings`
      if (jsonObj.get("WebvttDestinationSettings") != null && !jsonObj.get("WebvttDestinationSettings").isJsonNull()) {
        CaptionDestinationSettingsWebvttDestinationSettings.validateJsonElement(jsonObj.get("WebvttDestinationSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaptionDescriptionDestinationSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaptionDescriptionDestinationSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaptionDescriptionDestinationSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaptionDescriptionDestinationSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CaptionDescriptionDestinationSettings>() {
           @Override
           public void write(JsonWriter out, CaptionDescriptionDestinationSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaptionDescriptionDestinationSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CaptionDescriptionDestinationSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CaptionDescriptionDestinationSettings
   * @throws IOException if the JSON string is invalid with respect to CaptionDescriptionDestinationSettings
   */
  public static CaptionDescriptionDestinationSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaptionDescriptionDestinationSettings.class);
  }

  /**
   * Convert an instance of CaptionDescriptionDestinationSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

