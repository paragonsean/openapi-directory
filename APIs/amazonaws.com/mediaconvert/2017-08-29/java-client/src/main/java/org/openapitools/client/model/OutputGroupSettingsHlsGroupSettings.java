/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CmafGroupSettingsDestinationSettings;
import org.openapitools.client.model.HlsAudioOnlyHeader;
import org.openapitools.client.model.HlsCaptionLanguageSetting;
import org.openapitools.client.model.HlsCaptionSegmentLengthControl;
import org.openapitools.client.model.HlsClientCache;
import org.openapitools.client.model.HlsCodecSpecification;
import org.openapitools.client.model.HlsDirectoryStructure;
import org.openapitools.client.model.HlsGroupSettingsEncryption;
import org.openapitools.client.model.HlsGroupSettingsImageBasedTrickPlaySettings;
import org.openapitools.client.model.HlsImageBasedTrickPlay;
import org.openapitools.client.model.HlsManifestCompression;
import org.openapitools.client.model.HlsManifestDurationFormat;
import org.openapitools.client.model.HlsOutputSelection;
import org.openapitools.client.model.HlsProgramDateTime;
import org.openapitools.client.model.HlsProgressiveWriteHlsManifest;
import org.openapitools.client.model.HlsSegmentControl;
import org.openapitools.client.model.HlsSegmentLengthControl;
import org.openapitools.client.model.HlsStreamInfResolution;
import org.openapitools.client.model.HlsTargetDurationCompatibilityMode;
import org.openapitools.client.model.HlsTimedMetadataId3Frame;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OutputGroupSettingsHlsGroupSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OutputGroupSettingsHlsGroupSettings {
  public static final String SERIALIZED_NAME_AD_MARKERS = "AdMarkers";
  @SerializedName(SERIALIZED_NAME_AD_MARKERS)
  private List adMarkers;

  public static final String SERIALIZED_NAME_ADDITIONAL_MANIFESTS = "AdditionalManifests";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MANIFESTS)
  private List additionalManifests;

  public static final String SERIALIZED_NAME_AUDIO_ONLY_HEADER = "AudioOnlyHeader";
  @SerializedName(SERIALIZED_NAME_AUDIO_ONLY_HEADER)
  private HlsAudioOnlyHeader audioOnlyHeader;

  public static final String SERIALIZED_NAME_BASE_URL = "BaseUrl";
  @SerializedName(SERIALIZED_NAME_BASE_URL)
  private String baseUrl;

  public static final String SERIALIZED_NAME_CAPTION_LANGUAGE_MAPPINGS = "CaptionLanguageMappings";
  @SerializedName(SERIALIZED_NAME_CAPTION_LANGUAGE_MAPPINGS)
  private List captionLanguageMappings;

  public static final String SERIALIZED_NAME_CAPTION_LANGUAGE_SETTING = "CaptionLanguageSetting";
  @SerializedName(SERIALIZED_NAME_CAPTION_LANGUAGE_SETTING)
  private HlsCaptionLanguageSetting captionLanguageSetting;

  public static final String SERIALIZED_NAME_CAPTION_SEGMENT_LENGTH_CONTROL = "CaptionSegmentLengthControl";
  @SerializedName(SERIALIZED_NAME_CAPTION_SEGMENT_LENGTH_CONTROL)
  private HlsCaptionSegmentLengthControl captionSegmentLengthControl;

  public static final String SERIALIZED_NAME_CLIENT_CACHE = "ClientCache";
  @SerializedName(SERIALIZED_NAME_CLIENT_CACHE)
  private HlsClientCache clientCache;

  public static final String SERIALIZED_NAME_CODEC_SPECIFICATION = "CodecSpecification";
  @SerializedName(SERIALIZED_NAME_CODEC_SPECIFICATION)
  private HlsCodecSpecification codecSpecification;

  public static final String SERIALIZED_NAME_DESTINATION = "Destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DESTINATION_SETTINGS = "DestinationSettings";
  @SerializedName(SERIALIZED_NAME_DESTINATION_SETTINGS)
  private CmafGroupSettingsDestinationSettings destinationSettings;

  public static final String SERIALIZED_NAME_DIRECTORY_STRUCTURE = "DirectoryStructure";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_STRUCTURE)
  private HlsDirectoryStructure directoryStructure;

  public static final String SERIALIZED_NAME_ENCRYPTION = "Encryption";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION)
  private HlsGroupSettingsEncryption encryption;

  public static final String SERIALIZED_NAME_IMAGE_BASED_TRICK_PLAY = "ImageBasedTrickPlay";
  @SerializedName(SERIALIZED_NAME_IMAGE_BASED_TRICK_PLAY)
  private HlsImageBasedTrickPlay imageBasedTrickPlay;

  public static final String SERIALIZED_NAME_IMAGE_BASED_TRICK_PLAY_SETTINGS = "ImageBasedTrickPlaySettings";
  @SerializedName(SERIALIZED_NAME_IMAGE_BASED_TRICK_PLAY_SETTINGS)
  private HlsGroupSettingsImageBasedTrickPlaySettings imageBasedTrickPlaySettings;

  public static final String SERIALIZED_NAME_MANIFEST_COMPRESSION = "ManifestCompression";
  @SerializedName(SERIALIZED_NAME_MANIFEST_COMPRESSION)
  private HlsManifestCompression manifestCompression;

  public static final String SERIALIZED_NAME_MANIFEST_DURATION_FORMAT = "ManifestDurationFormat";
  @SerializedName(SERIALIZED_NAME_MANIFEST_DURATION_FORMAT)
  private HlsManifestDurationFormat manifestDurationFormat;

  public static final String SERIALIZED_NAME_MIN_FINAL_SEGMENT_LENGTH = "MinFinalSegmentLength";
  @SerializedName(SERIALIZED_NAME_MIN_FINAL_SEGMENT_LENGTH)
  private Double minFinalSegmentLength;

  public static final String SERIALIZED_NAME_MIN_SEGMENT_LENGTH = "MinSegmentLength";
  @SerializedName(SERIALIZED_NAME_MIN_SEGMENT_LENGTH)
  private Integer minSegmentLength;

  public static final String SERIALIZED_NAME_OUTPUT_SELECTION = "OutputSelection";
  @SerializedName(SERIALIZED_NAME_OUTPUT_SELECTION)
  private HlsOutputSelection outputSelection;

  public static final String SERIALIZED_NAME_PROGRAM_DATE_TIME = "ProgramDateTime";
  @SerializedName(SERIALIZED_NAME_PROGRAM_DATE_TIME)
  private HlsProgramDateTime programDateTime;

  public static final String SERIALIZED_NAME_PROGRAM_DATE_TIME_PERIOD = "ProgramDateTimePeriod";
  @SerializedName(SERIALIZED_NAME_PROGRAM_DATE_TIME_PERIOD)
  private Integer programDateTimePeriod;

  public static final String SERIALIZED_NAME_PROGRESSIVE_WRITE_HLS_MANIFEST = "ProgressiveWriteHlsManifest";
  @SerializedName(SERIALIZED_NAME_PROGRESSIVE_WRITE_HLS_MANIFEST)
  private HlsProgressiveWriteHlsManifest progressiveWriteHlsManifest;

  public static final String SERIALIZED_NAME_SEGMENT_CONTROL = "SegmentControl";
  @SerializedName(SERIALIZED_NAME_SEGMENT_CONTROL)
  private HlsSegmentControl segmentControl;

  public static final String SERIALIZED_NAME_SEGMENT_LENGTH = "SegmentLength";
  @SerializedName(SERIALIZED_NAME_SEGMENT_LENGTH)
  private Integer segmentLength;

  public static final String SERIALIZED_NAME_SEGMENT_LENGTH_CONTROL = "SegmentLengthControl";
  @SerializedName(SERIALIZED_NAME_SEGMENT_LENGTH_CONTROL)
  private HlsSegmentLengthControl segmentLengthControl;

  public static final String SERIALIZED_NAME_SEGMENTS_PER_SUBDIRECTORY = "SegmentsPerSubdirectory";
  @SerializedName(SERIALIZED_NAME_SEGMENTS_PER_SUBDIRECTORY)
  private Integer segmentsPerSubdirectory;

  public static final String SERIALIZED_NAME_STREAM_INF_RESOLUTION = "StreamInfResolution";
  @SerializedName(SERIALIZED_NAME_STREAM_INF_RESOLUTION)
  private HlsStreamInfResolution streamInfResolution;

  public static final String SERIALIZED_NAME_TARGET_DURATION_COMPATIBILITY_MODE = "TargetDurationCompatibilityMode";
  @SerializedName(SERIALIZED_NAME_TARGET_DURATION_COMPATIBILITY_MODE)
  private HlsTargetDurationCompatibilityMode targetDurationCompatibilityMode;

  public static final String SERIALIZED_NAME_TIMED_METADATA_ID3_FRAME = "TimedMetadataId3Frame";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_ID3_FRAME)
  private HlsTimedMetadataId3Frame timedMetadataId3Frame;

  public static final String SERIALIZED_NAME_TIMED_METADATA_ID3_PERIOD = "TimedMetadataId3Period";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_ID3_PERIOD)
  private Integer timedMetadataId3Period;

  public static final String SERIALIZED_NAME_TIMESTAMP_DELTA_MILLISECONDS = "TimestampDeltaMilliseconds";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_DELTA_MILLISECONDS)
  private Integer timestampDeltaMilliseconds;

  public OutputGroupSettingsHlsGroupSettings() {
  }

  public OutputGroupSettingsHlsGroupSettings adMarkers(List adMarkers) {
    this.adMarkers = adMarkers;
    return this;
  }

  /**
   * Get adMarkers
   * @return adMarkers
   */
  @javax.annotation.Nullable
  public List getAdMarkers() {
    return adMarkers;
  }

  public void setAdMarkers(List adMarkers) {
    this.adMarkers = adMarkers;
  }


  public OutputGroupSettingsHlsGroupSettings additionalManifests(List additionalManifests) {
    this.additionalManifests = additionalManifests;
    return this;
  }

  /**
   * Get additionalManifests
   * @return additionalManifests
   */
  @javax.annotation.Nullable
  public List getAdditionalManifests() {
    return additionalManifests;
  }

  public void setAdditionalManifests(List additionalManifests) {
    this.additionalManifests = additionalManifests;
  }


  public OutputGroupSettingsHlsGroupSettings audioOnlyHeader(HlsAudioOnlyHeader audioOnlyHeader) {
    this.audioOnlyHeader = audioOnlyHeader;
    return this;
  }

  /**
   * Get audioOnlyHeader
   * @return audioOnlyHeader
   */
  @javax.annotation.Nullable
  public HlsAudioOnlyHeader getAudioOnlyHeader() {
    return audioOnlyHeader;
  }

  public void setAudioOnlyHeader(HlsAudioOnlyHeader audioOnlyHeader) {
    this.audioOnlyHeader = audioOnlyHeader;
  }


  public OutputGroupSettingsHlsGroupSettings baseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

  /**
   * Get baseUrl
   * @return baseUrl
   */
  @javax.annotation.Nullable
  public String getBaseUrl() {
    return baseUrl;
  }

  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }


  public OutputGroupSettingsHlsGroupSettings captionLanguageMappings(List captionLanguageMappings) {
    this.captionLanguageMappings = captionLanguageMappings;
    return this;
  }

  /**
   * Get captionLanguageMappings
   * @return captionLanguageMappings
   */
  @javax.annotation.Nullable
  public List getCaptionLanguageMappings() {
    return captionLanguageMappings;
  }

  public void setCaptionLanguageMappings(List captionLanguageMappings) {
    this.captionLanguageMappings = captionLanguageMappings;
  }


  public OutputGroupSettingsHlsGroupSettings captionLanguageSetting(HlsCaptionLanguageSetting captionLanguageSetting) {
    this.captionLanguageSetting = captionLanguageSetting;
    return this;
  }

  /**
   * Get captionLanguageSetting
   * @return captionLanguageSetting
   */
  @javax.annotation.Nullable
  public HlsCaptionLanguageSetting getCaptionLanguageSetting() {
    return captionLanguageSetting;
  }

  public void setCaptionLanguageSetting(HlsCaptionLanguageSetting captionLanguageSetting) {
    this.captionLanguageSetting = captionLanguageSetting;
  }


  public OutputGroupSettingsHlsGroupSettings captionSegmentLengthControl(HlsCaptionSegmentLengthControl captionSegmentLengthControl) {
    this.captionSegmentLengthControl = captionSegmentLengthControl;
    return this;
  }

  /**
   * Get captionSegmentLengthControl
   * @return captionSegmentLengthControl
   */
  @javax.annotation.Nullable
  public HlsCaptionSegmentLengthControl getCaptionSegmentLengthControl() {
    return captionSegmentLengthControl;
  }

  public void setCaptionSegmentLengthControl(HlsCaptionSegmentLengthControl captionSegmentLengthControl) {
    this.captionSegmentLengthControl = captionSegmentLengthControl;
  }


  public OutputGroupSettingsHlsGroupSettings clientCache(HlsClientCache clientCache) {
    this.clientCache = clientCache;
    return this;
  }

  /**
   * Get clientCache
   * @return clientCache
   */
  @javax.annotation.Nullable
  public HlsClientCache getClientCache() {
    return clientCache;
  }

  public void setClientCache(HlsClientCache clientCache) {
    this.clientCache = clientCache;
  }


  public OutputGroupSettingsHlsGroupSettings codecSpecification(HlsCodecSpecification codecSpecification) {
    this.codecSpecification = codecSpecification;
    return this;
  }

  /**
   * Get codecSpecification
   * @return codecSpecification
   */
  @javax.annotation.Nullable
  public HlsCodecSpecification getCodecSpecification() {
    return codecSpecification;
  }

  public void setCodecSpecification(HlsCodecSpecification codecSpecification) {
    this.codecSpecification = codecSpecification;
  }


  public OutputGroupSettingsHlsGroupSettings destination(String destination) {
    this.destination = destination;
    return this;
  }

  /**
   * Get destination
   * @return destination
   */
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }


  public OutputGroupSettingsHlsGroupSettings destinationSettings(CmafGroupSettingsDestinationSettings destinationSettings) {
    this.destinationSettings = destinationSettings;
    return this;
  }

  /**
   * Get destinationSettings
   * @return destinationSettings
   */
  @javax.annotation.Nullable
  public CmafGroupSettingsDestinationSettings getDestinationSettings() {
    return destinationSettings;
  }

  public void setDestinationSettings(CmafGroupSettingsDestinationSettings destinationSettings) {
    this.destinationSettings = destinationSettings;
  }


  public OutputGroupSettingsHlsGroupSettings directoryStructure(HlsDirectoryStructure directoryStructure) {
    this.directoryStructure = directoryStructure;
    return this;
  }

  /**
   * Get directoryStructure
   * @return directoryStructure
   */
  @javax.annotation.Nullable
  public HlsDirectoryStructure getDirectoryStructure() {
    return directoryStructure;
  }

  public void setDirectoryStructure(HlsDirectoryStructure directoryStructure) {
    this.directoryStructure = directoryStructure;
  }


  public OutputGroupSettingsHlsGroupSettings encryption(HlsGroupSettingsEncryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * Get encryption
   * @return encryption
   */
  @javax.annotation.Nullable
  public HlsGroupSettingsEncryption getEncryption() {
    return encryption;
  }

  public void setEncryption(HlsGroupSettingsEncryption encryption) {
    this.encryption = encryption;
  }


  public OutputGroupSettingsHlsGroupSettings imageBasedTrickPlay(HlsImageBasedTrickPlay imageBasedTrickPlay) {
    this.imageBasedTrickPlay = imageBasedTrickPlay;
    return this;
  }

  /**
   * Get imageBasedTrickPlay
   * @return imageBasedTrickPlay
   */
  @javax.annotation.Nullable
  public HlsImageBasedTrickPlay getImageBasedTrickPlay() {
    return imageBasedTrickPlay;
  }

  public void setImageBasedTrickPlay(HlsImageBasedTrickPlay imageBasedTrickPlay) {
    this.imageBasedTrickPlay = imageBasedTrickPlay;
  }


  public OutputGroupSettingsHlsGroupSettings imageBasedTrickPlaySettings(HlsGroupSettingsImageBasedTrickPlaySettings imageBasedTrickPlaySettings) {
    this.imageBasedTrickPlaySettings = imageBasedTrickPlaySettings;
    return this;
  }

  /**
   * Get imageBasedTrickPlaySettings
   * @return imageBasedTrickPlaySettings
   */
  @javax.annotation.Nullable
  public HlsGroupSettingsImageBasedTrickPlaySettings getImageBasedTrickPlaySettings() {
    return imageBasedTrickPlaySettings;
  }

  public void setImageBasedTrickPlaySettings(HlsGroupSettingsImageBasedTrickPlaySettings imageBasedTrickPlaySettings) {
    this.imageBasedTrickPlaySettings = imageBasedTrickPlaySettings;
  }


  public OutputGroupSettingsHlsGroupSettings manifestCompression(HlsManifestCompression manifestCompression) {
    this.manifestCompression = manifestCompression;
    return this;
  }

  /**
   * Get manifestCompression
   * @return manifestCompression
   */
  @javax.annotation.Nullable
  public HlsManifestCompression getManifestCompression() {
    return manifestCompression;
  }

  public void setManifestCompression(HlsManifestCompression manifestCompression) {
    this.manifestCompression = manifestCompression;
  }


  public OutputGroupSettingsHlsGroupSettings manifestDurationFormat(HlsManifestDurationFormat manifestDurationFormat) {
    this.manifestDurationFormat = manifestDurationFormat;
    return this;
  }

  /**
   * Get manifestDurationFormat
   * @return manifestDurationFormat
   */
  @javax.annotation.Nullable
  public HlsManifestDurationFormat getManifestDurationFormat() {
    return manifestDurationFormat;
  }

  public void setManifestDurationFormat(HlsManifestDurationFormat manifestDurationFormat) {
    this.manifestDurationFormat = manifestDurationFormat;
  }


  public OutputGroupSettingsHlsGroupSettings minFinalSegmentLength(Double minFinalSegmentLength) {
    this.minFinalSegmentLength = minFinalSegmentLength;
    return this;
  }

  /**
   * Get minFinalSegmentLength
   * @return minFinalSegmentLength
   */
  @javax.annotation.Nullable
  public Double getMinFinalSegmentLength() {
    return minFinalSegmentLength;
  }

  public void setMinFinalSegmentLength(Double minFinalSegmentLength) {
    this.minFinalSegmentLength = minFinalSegmentLength;
  }


  public OutputGroupSettingsHlsGroupSettings minSegmentLength(Integer minSegmentLength) {
    this.minSegmentLength = minSegmentLength;
    return this;
  }

  /**
   * Get minSegmentLength
   * @return minSegmentLength
   */
  @javax.annotation.Nullable
  public Integer getMinSegmentLength() {
    return minSegmentLength;
  }

  public void setMinSegmentLength(Integer minSegmentLength) {
    this.minSegmentLength = minSegmentLength;
  }


  public OutputGroupSettingsHlsGroupSettings outputSelection(HlsOutputSelection outputSelection) {
    this.outputSelection = outputSelection;
    return this;
  }

  /**
   * Get outputSelection
   * @return outputSelection
   */
  @javax.annotation.Nullable
  public HlsOutputSelection getOutputSelection() {
    return outputSelection;
  }

  public void setOutputSelection(HlsOutputSelection outputSelection) {
    this.outputSelection = outputSelection;
  }


  public OutputGroupSettingsHlsGroupSettings programDateTime(HlsProgramDateTime programDateTime) {
    this.programDateTime = programDateTime;
    return this;
  }

  /**
   * Get programDateTime
   * @return programDateTime
   */
  @javax.annotation.Nullable
  public HlsProgramDateTime getProgramDateTime() {
    return programDateTime;
  }

  public void setProgramDateTime(HlsProgramDateTime programDateTime) {
    this.programDateTime = programDateTime;
  }


  public OutputGroupSettingsHlsGroupSettings programDateTimePeriod(Integer programDateTimePeriod) {
    this.programDateTimePeriod = programDateTimePeriod;
    return this;
  }

  /**
   * Get programDateTimePeriod
   * @return programDateTimePeriod
   */
  @javax.annotation.Nullable
  public Integer getProgramDateTimePeriod() {
    return programDateTimePeriod;
  }

  public void setProgramDateTimePeriod(Integer programDateTimePeriod) {
    this.programDateTimePeriod = programDateTimePeriod;
  }


  public OutputGroupSettingsHlsGroupSettings progressiveWriteHlsManifest(HlsProgressiveWriteHlsManifest progressiveWriteHlsManifest) {
    this.progressiveWriteHlsManifest = progressiveWriteHlsManifest;
    return this;
  }

  /**
   * Get progressiveWriteHlsManifest
   * @return progressiveWriteHlsManifest
   */
  @javax.annotation.Nullable
  public HlsProgressiveWriteHlsManifest getProgressiveWriteHlsManifest() {
    return progressiveWriteHlsManifest;
  }

  public void setProgressiveWriteHlsManifest(HlsProgressiveWriteHlsManifest progressiveWriteHlsManifest) {
    this.progressiveWriteHlsManifest = progressiveWriteHlsManifest;
  }


  public OutputGroupSettingsHlsGroupSettings segmentControl(HlsSegmentControl segmentControl) {
    this.segmentControl = segmentControl;
    return this;
  }

  /**
   * Get segmentControl
   * @return segmentControl
   */
  @javax.annotation.Nullable
  public HlsSegmentControl getSegmentControl() {
    return segmentControl;
  }

  public void setSegmentControl(HlsSegmentControl segmentControl) {
    this.segmentControl = segmentControl;
  }


  public OutputGroupSettingsHlsGroupSettings segmentLength(Integer segmentLength) {
    this.segmentLength = segmentLength;
    return this;
  }

  /**
   * Get segmentLength
   * @return segmentLength
   */
  @javax.annotation.Nullable
  public Integer getSegmentLength() {
    return segmentLength;
  }

  public void setSegmentLength(Integer segmentLength) {
    this.segmentLength = segmentLength;
  }


  public OutputGroupSettingsHlsGroupSettings segmentLengthControl(HlsSegmentLengthControl segmentLengthControl) {
    this.segmentLengthControl = segmentLengthControl;
    return this;
  }

  /**
   * Get segmentLengthControl
   * @return segmentLengthControl
   */
  @javax.annotation.Nullable
  public HlsSegmentLengthControl getSegmentLengthControl() {
    return segmentLengthControl;
  }

  public void setSegmentLengthControl(HlsSegmentLengthControl segmentLengthControl) {
    this.segmentLengthControl = segmentLengthControl;
  }


  public OutputGroupSettingsHlsGroupSettings segmentsPerSubdirectory(Integer segmentsPerSubdirectory) {
    this.segmentsPerSubdirectory = segmentsPerSubdirectory;
    return this;
  }

  /**
   * Get segmentsPerSubdirectory
   * @return segmentsPerSubdirectory
   */
  @javax.annotation.Nullable
  public Integer getSegmentsPerSubdirectory() {
    return segmentsPerSubdirectory;
  }

  public void setSegmentsPerSubdirectory(Integer segmentsPerSubdirectory) {
    this.segmentsPerSubdirectory = segmentsPerSubdirectory;
  }


  public OutputGroupSettingsHlsGroupSettings streamInfResolution(HlsStreamInfResolution streamInfResolution) {
    this.streamInfResolution = streamInfResolution;
    return this;
  }

  /**
   * Get streamInfResolution
   * @return streamInfResolution
   */
  @javax.annotation.Nullable
  public HlsStreamInfResolution getStreamInfResolution() {
    return streamInfResolution;
  }

  public void setStreamInfResolution(HlsStreamInfResolution streamInfResolution) {
    this.streamInfResolution = streamInfResolution;
  }


  public OutputGroupSettingsHlsGroupSettings targetDurationCompatibilityMode(HlsTargetDurationCompatibilityMode targetDurationCompatibilityMode) {
    this.targetDurationCompatibilityMode = targetDurationCompatibilityMode;
    return this;
  }

  /**
   * Get targetDurationCompatibilityMode
   * @return targetDurationCompatibilityMode
   */
  @javax.annotation.Nullable
  public HlsTargetDurationCompatibilityMode getTargetDurationCompatibilityMode() {
    return targetDurationCompatibilityMode;
  }

  public void setTargetDurationCompatibilityMode(HlsTargetDurationCompatibilityMode targetDurationCompatibilityMode) {
    this.targetDurationCompatibilityMode = targetDurationCompatibilityMode;
  }


  public OutputGroupSettingsHlsGroupSettings timedMetadataId3Frame(HlsTimedMetadataId3Frame timedMetadataId3Frame) {
    this.timedMetadataId3Frame = timedMetadataId3Frame;
    return this;
  }

  /**
   * Get timedMetadataId3Frame
   * @return timedMetadataId3Frame
   */
  @javax.annotation.Nullable
  public HlsTimedMetadataId3Frame getTimedMetadataId3Frame() {
    return timedMetadataId3Frame;
  }

  public void setTimedMetadataId3Frame(HlsTimedMetadataId3Frame timedMetadataId3Frame) {
    this.timedMetadataId3Frame = timedMetadataId3Frame;
  }


  public OutputGroupSettingsHlsGroupSettings timedMetadataId3Period(Integer timedMetadataId3Period) {
    this.timedMetadataId3Period = timedMetadataId3Period;
    return this;
  }

  /**
   * Get timedMetadataId3Period
   * @return timedMetadataId3Period
   */
  @javax.annotation.Nullable
  public Integer getTimedMetadataId3Period() {
    return timedMetadataId3Period;
  }

  public void setTimedMetadataId3Period(Integer timedMetadataId3Period) {
    this.timedMetadataId3Period = timedMetadataId3Period;
  }


  public OutputGroupSettingsHlsGroupSettings timestampDeltaMilliseconds(Integer timestampDeltaMilliseconds) {
    this.timestampDeltaMilliseconds = timestampDeltaMilliseconds;
    return this;
  }

  /**
   * Get timestampDeltaMilliseconds
   * @return timestampDeltaMilliseconds
   */
  @javax.annotation.Nullable
  public Integer getTimestampDeltaMilliseconds() {
    return timestampDeltaMilliseconds;
  }

  public void setTimestampDeltaMilliseconds(Integer timestampDeltaMilliseconds) {
    this.timestampDeltaMilliseconds = timestampDeltaMilliseconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputGroupSettingsHlsGroupSettings outputGroupSettingsHlsGroupSettings = (OutputGroupSettingsHlsGroupSettings) o;
    return Objects.equals(this.adMarkers, outputGroupSettingsHlsGroupSettings.adMarkers) &&
        Objects.equals(this.additionalManifests, outputGroupSettingsHlsGroupSettings.additionalManifests) &&
        Objects.equals(this.audioOnlyHeader, outputGroupSettingsHlsGroupSettings.audioOnlyHeader) &&
        Objects.equals(this.baseUrl, outputGroupSettingsHlsGroupSettings.baseUrl) &&
        Objects.equals(this.captionLanguageMappings, outputGroupSettingsHlsGroupSettings.captionLanguageMappings) &&
        Objects.equals(this.captionLanguageSetting, outputGroupSettingsHlsGroupSettings.captionLanguageSetting) &&
        Objects.equals(this.captionSegmentLengthControl, outputGroupSettingsHlsGroupSettings.captionSegmentLengthControl) &&
        Objects.equals(this.clientCache, outputGroupSettingsHlsGroupSettings.clientCache) &&
        Objects.equals(this.codecSpecification, outputGroupSettingsHlsGroupSettings.codecSpecification) &&
        Objects.equals(this.destination, outputGroupSettingsHlsGroupSettings.destination) &&
        Objects.equals(this.destinationSettings, outputGroupSettingsHlsGroupSettings.destinationSettings) &&
        Objects.equals(this.directoryStructure, outputGroupSettingsHlsGroupSettings.directoryStructure) &&
        Objects.equals(this.encryption, outputGroupSettingsHlsGroupSettings.encryption) &&
        Objects.equals(this.imageBasedTrickPlay, outputGroupSettingsHlsGroupSettings.imageBasedTrickPlay) &&
        Objects.equals(this.imageBasedTrickPlaySettings, outputGroupSettingsHlsGroupSettings.imageBasedTrickPlaySettings) &&
        Objects.equals(this.manifestCompression, outputGroupSettingsHlsGroupSettings.manifestCompression) &&
        Objects.equals(this.manifestDurationFormat, outputGroupSettingsHlsGroupSettings.manifestDurationFormat) &&
        Objects.equals(this.minFinalSegmentLength, outputGroupSettingsHlsGroupSettings.minFinalSegmentLength) &&
        Objects.equals(this.minSegmentLength, outputGroupSettingsHlsGroupSettings.minSegmentLength) &&
        Objects.equals(this.outputSelection, outputGroupSettingsHlsGroupSettings.outputSelection) &&
        Objects.equals(this.programDateTime, outputGroupSettingsHlsGroupSettings.programDateTime) &&
        Objects.equals(this.programDateTimePeriod, outputGroupSettingsHlsGroupSettings.programDateTimePeriod) &&
        Objects.equals(this.progressiveWriteHlsManifest, outputGroupSettingsHlsGroupSettings.progressiveWriteHlsManifest) &&
        Objects.equals(this.segmentControl, outputGroupSettingsHlsGroupSettings.segmentControl) &&
        Objects.equals(this.segmentLength, outputGroupSettingsHlsGroupSettings.segmentLength) &&
        Objects.equals(this.segmentLengthControl, outputGroupSettingsHlsGroupSettings.segmentLengthControl) &&
        Objects.equals(this.segmentsPerSubdirectory, outputGroupSettingsHlsGroupSettings.segmentsPerSubdirectory) &&
        Objects.equals(this.streamInfResolution, outputGroupSettingsHlsGroupSettings.streamInfResolution) &&
        Objects.equals(this.targetDurationCompatibilityMode, outputGroupSettingsHlsGroupSettings.targetDurationCompatibilityMode) &&
        Objects.equals(this.timedMetadataId3Frame, outputGroupSettingsHlsGroupSettings.timedMetadataId3Frame) &&
        Objects.equals(this.timedMetadataId3Period, outputGroupSettingsHlsGroupSettings.timedMetadataId3Period) &&
        Objects.equals(this.timestampDeltaMilliseconds, outputGroupSettingsHlsGroupSettings.timestampDeltaMilliseconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adMarkers, additionalManifests, audioOnlyHeader, baseUrl, captionLanguageMappings, captionLanguageSetting, captionSegmentLengthControl, clientCache, codecSpecification, destination, destinationSettings, directoryStructure, encryption, imageBasedTrickPlay, imageBasedTrickPlaySettings, manifestCompression, manifestDurationFormat, minFinalSegmentLength, minSegmentLength, outputSelection, programDateTime, programDateTimePeriod, progressiveWriteHlsManifest, segmentControl, segmentLength, segmentLengthControl, segmentsPerSubdirectory, streamInfResolution, targetDurationCompatibilityMode, timedMetadataId3Frame, timedMetadataId3Period, timestampDeltaMilliseconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputGroupSettingsHlsGroupSettings {\n");
    sb.append("    adMarkers: ").append(toIndentedString(adMarkers)).append("\n");
    sb.append("    additionalManifests: ").append(toIndentedString(additionalManifests)).append("\n");
    sb.append("    audioOnlyHeader: ").append(toIndentedString(audioOnlyHeader)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    captionLanguageMappings: ").append(toIndentedString(captionLanguageMappings)).append("\n");
    sb.append("    captionLanguageSetting: ").append(toIndentedString(captionLanguageSetting)).append("\n");
    sb.append("    captionSegmentLengthControl: ").append(toIndentedString(captionSegmentLengthControl)).append("\n");
    sb.append("    clientCache: ").append(toIndentedString(clientCache)).append("\n");
    sb.append("    codecSpecification: ").append(toIndentedString(codecSpecification)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    destinationSettings: ").append(toIndentedString(destinationSettings)).append("\n");
    sb.append("    directoryStructure: ").append(toIndentedString(directoryStructure)).append("\n");
    sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
    sb.append("    imageBasedTrickPlay: ").append(toIndentedString(imageBasedTrickPlay)).append("\n");
    sb.append("    imageBasedTrickPlaySettings: ").append(toIndentedString(imageBasedTrickPlaySettings)).append("\n");
    sb.append("    manifestCompression: ").append(toIndentedString(manifestCompression)).append("\n");
    sb.append("    manifestDurationFormat: ").append(toIndentedString(manifestDurationFormat)).append("\n");
    sb.append("    minFinalSegmentLength: ").append(toIndentedString(minFinalSegmentLength)).append("\n");
    sb.append("    minSegmentLength: ").append(toIndentedString(minSegmentLength)).append("\n");
    sb.append("    outputSelection: ").append(toIndentedString(outputSelection)).append("\n");
    sb.append("    programDateTime: ").append(toIndentedString(programDateTime)).append("\n");
    sb.append("    programDateTimePeriod: ").append(toIndentedString(programDateTimePeriod)).append("\n");
    sb.append("    progressiveWriteHlsManifest: ").append(toIndentedString(progressiveWriteHlsManifest)).append("\n");
    sb.append("    segmentControl: ").append(toIndentedString(segmentControl)).append("\n");
    sb.append("    segmentLength: ").append(toIndentedString(segmentLength)).append("\n");
    sb.append("    segmentLengthControl: ").append(toIndentedString(segmentLengthControl)).append("\n");
    sb.append("    segmentsPerSubdirectory: ").append(toIndentedString(segmentsPerSubdirectory)).append("\n");
    sb.append("    streamInfResolution: ").append(toIndentedString(streamInfResolution)).append("\n");
    sb.append("    targetDurationCompatibilityMode: ").append(toIndentedString(targetDurationCompatibilityMode)).append("\n");
    sb.append("    timedMetadataId3Frame: ").append(toIndentedString(timedMetadataId3Frame)).append("\n");
    sb.append("    timedMetadataId3Period: ").append(toIndentedString(timedMetadataId3Period)).append("\n");
    sb.append("    timestampDeltaMilliseconds: ").append(toIndentedString(timestampDeltaMilliseconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdMarkers");
    openapiFields.add("AdditionalManifests");
    openapiFields.add("AudioOnlyHeader");
    openapiFields.add("BaseUrl");
    openapiFields.add("CaptionLanguageMappings");
    openapiFields.add("CaptionLanguageSetting");
    openapiFields.add("CaptionSegmentLengthControl");
    openapiFields.add("ClientCache");
    openapiFields.add("CodecSpecification");
    openapiFields.add("Destination");
    openapiFields.add("DestinationSettings");
    openapiFields.add("DirectoryStructure");
    openapiFields.add("Encryption");
    openapiFields.add("ImageBasedTrickPlay");
    openapiFields.add("ImageBasedTrickPlaySettings");
    openapiFields.add("ManifestCompression");
    openapiFields.add("ManifestDurationFormat");
    openapiFields.add("MinFinalSegmentLength");
    openapiFields.add("MinSegmentLength");
    openapiFields.add("OutputSelection");
    openapiFields.add("ProgramDateTime");
    openapiFields.add("ProgramDateTimePeriod");
    openapiFields.add("ProgressiveWriteHlsManifest");
    openapiFields.add("SegmentControl");
    openapiFields.add("SegmentLength");
    openapiFields.add("SegmentLengthControl");
    openapiFields.add("SegmentsPerSubdirectory");
    openapiFields.add("StreamInfResolution");
    openapiFields.add("TargetDurationCompatibilityMode");
    openapiFields.add("TimedMetadataId3Frame");
    openapiFields.add("TimedMetadataId3Period");
    openapiFields.add("TimestampDeltaMilliseconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OutputGroupSettingsHlsGroupSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OutputGroupSettingsHlsGroupSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OutputGroupSettingsHlsGroupSettings is not found in the empty JSON string", OutputGroupSettingsHlsGroupSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OutputGroupSettingsHlsGroupSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OutputGroupSettingsHlsGroupSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AdMarkers`
      if (jsonObj.get("AdMarkers") != null && !jsonObj.get("AdMarkers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdMarkers"));
      }
      // validate the optional field `AdditionalManifests`
      if (jsonObj.get("AdditionalManifests") != null && !jsonObj.get("AdditionalManifests").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdditionalManifests"));
      }
      // validate the optional field `AudioOnlyHeader`
      if (jsonObj.get("AudioOnlyHeader") != null && !jsonObj.get("AudioOnlyHeader").isJsonNull()) {
        HlsAudioOnlyHeader.validateJsonElement(jsonObj.get("AudioOnlyHeader"));
      }
      // validate the optional field `BaseUrl`
      if (jsonObj.get("BaseUrl") != null && !jsonObj.get("BaseUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BaseUrl"));
      }
      // validate the optional field `CaptionLanguageMappings`
      if (jsonObj.get("CaptionLanguageMappings") != null && !jsonObj.get("CaptionLanguageMappings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CaptionLanguageMappings"));
      }
      // validate the optional field `CaptionLanguageSetting`
      if (jsonObj.get("CaptionLanguageSetting") != null && !jsonObj.get("CaptionLanguageSetting").isJsonNull()) {
        HlsCaptionLanguageSetting.validateJsonElement(jsonObj.get("CaptionLanguageSetting"));
      }
      // validate the optional field `CaptionSegmentLengthControl`
      if (jsonObj.get("CaptionSegmentLengthControl") != null && !jsonObj.get("CaptionSegmentLengthControl").isJsonNull()) {
        HlsCaptionSegmentLengthControl.validateJsonElement(jsonObj.get("CaptionSegmentLengthControl"));
      }
      // validate the optional field `ClientCache`
      if (jsonObj.get("ClientCache") != null && !jsonObj.get("ClientCache").isJsonNull()) {
        HlsClientCache.validateJsonElement(jsonObj.get("ClientCache"));
      }
      // validate the optional field `CodecSpecification`
      if (jsonObj.get("CodecSpecification") != null && !jsonObj.get("CodecSpecification").isJsonNull()) {
        HlsCodecSpecification.validateJsonElement(jsonObj.get("CodecSpecification"));
      }
      // validate the optional field `Destination`
      if (jsonObj.get("Destination") != null && !jsonObj.get("Destination").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Destination"));
      }
      // validate the optional field `DestinationSettings`
      if (jsonObj.get("DestinationSettings") != null && !jsonObj.get("DestinationSettings").isJsonNull()) {
        CmafGroupSettingsDestinationSettings.validateJsonElement(jsonObj.get("DestinationSettings"));
      }
      // validate the optional field `DirectoryStructure`
      if (jsonObj.get("DirectoryStructure") != null && !jsonObj.get("DirectoryStructure").isJsonNull()) {
        HlsDirectoryStructure.validateJsonElement(jsonObj.get("DirectoryStructure"));
      }
      // validate the optional field `Encryption`
      if (jsonObj.get("Encryption") != null && !jsonObj.get("Encryption").isJsonNull()) {
        HlsGroupSettingsEncryption.validateJsonElement(jsonObj.get("Encryption"));
      }
      // validate the optional field `ImageBasedTrickPlay`
      if (jsonObj.get("ImageBasedTrickPlay") != null && !jsonObj.get("ImageBasedTrickPlay").isJsonNull()) {
        HlsImageBasedTrickPlay.validateJsonElement(jsonObj.get("ImageBasedTrickPlay"));
      }
      // validate the optional field `ImageBasedTrickPlaySettings`
      if (jsonObj.get("ImageBasedTrickPlaySettings") != null && !jsonObj.get("ImageBasedTrickPlaySettings").isJsonNull()) {
        HlsGroupSettingsImageBasedTrickPlaySettings.validateJsonElement(jsonObj.get("ImageBasedTrickPlaySettings"));
      }
      // validate the optional field `ManifestCompression`
      if (jsonObj.get("ManifestCompression") != null && !jsonObj.get("ManifestCompression").isJsonNull()) {
        HlsManifestCompression.validateJsonElement(jsonObj.get("ManifestCompression"));
      }
      // validate the optional field `ManifestDurationFormat`
      if (jsonObj.get("ManifestDurationFormat") != null && !jsonObj.get("ManifestDurationFormat").isJsonNull()) {
        HlsManifestDurationFormat.validateJsonElement(jsonObj.get("ManifestDurationFormat"));
      }
      // validate the optional field `MinFinalSegmentLength`
      if (jsonObj.get("MinFinalSegmentLength") != null && !jsonObj.get("MinFinalSegmentLength").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("MinFinalSegmentLength"));
      }
      // validate the optional field `MinSegmentLength`
      if (jsonObj.get("MinSegmentLength") != null && !jsonObj.get("MinSegmentLength").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinSegmentLength"));
      }
      // validate the optional field `OutputSelection`
      if (jsonObj.get("OutputSelection") != null && !jsonObj.get("OutputSelection").isJsonNull()) {
        HlsOutputSelection.validateJsonElement(jsonObj.get("OutputSelection"));
      }
      // validate the optional field `ProgramDateTime`
      if (jsonObj.get("ProgramDateTime") != null && !jsonObj.get("ProgramDateTime").isJsonNull()) {
        HlsProgramDateTime.validateJsonElement(jsonObj.get("ProgramDateTime"));
      }
      // validate the optional field `ProgramDateTimePeriod`
      if (jsonObj.get("ProgramDateTimePeriod") != null && !jsonObj.get("ProgramDateTimePeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProgramDateTimePeriod"));
      }
      // validate the optional field `ProgressiveWriteHlsManifest`
      if (jsonObj.get("ProgressiveWriteHlsManifest") != null && !jsonObj.get("ProgressiveWriteHlsManifest").isJsonNull()) {
        HlsProgressiveWriteHlsManifest.validateJsonElement(jsonObj.get("ProgressiveWriteHlsManifest"));
      }
      // validate the optional field `SegmentControl`
      if (jsonObj.get("SegmentControl") != null && !jsonObj.get("SegmentControl").isJsonNull()) {
        HlsSegmentControl.validateJsonElement(jsonObj.get("SegmentControl"));
      }
      // validate the optional field `SegmentLength`
      if (jsonObj.get("SegmentLength") != null && !jsonObj.get("SegmentLength").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentLength"));
      }
      // validate the optional field `SegmentLengthControl`
      if (jsonObj.get("SegmentLengthControl") != null && !jsonObj.get("SegmentLengthControl").isJsonNull()) {
        HlsSegmentLengthControl.validateJsonElement(jsonObj.get("SegmentLengthControl"));
      }
      // validate the optional field `SegmentsPerSubdirectory`
      if (jsonObj.get("SegmentsPerSubdirectory") != null && !jsonObj.get("SegmentsPerSubdirectory").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentsPerSubdirectory"));
      }
      // validate the optional field `StreamInfResolution`
      if (jsonObj.get("StreamInfResolution") != null && !jsonObj.get("StreamInfResolution").isJsonNull()) {
        HlsStreamInfResolution.validateJsonElement(jsonObj.get("StreamInfResolution"));
      }
      // validate the optional field `TargetDurationCompatibilityMode`
      if (jsonObj.get("TargetDurationCompatibilityMode") != null && !jsonObj.get("TargetDurationCompatibilityMode").isJsonNull()) {
        HlsTargetDurationCompatibilityMode.validateJsonElement(jsonObj.get("TargetDurationCompatibilityMode"));
      }
      // validate the optional field `TimedMetadataId3Frame`
      if (jsonObj.get("TimedMetadataId3Frame") != null && !jsonObj.get("TimedMetadataId3Frame").isJsonNull()) {
        HlsTimedMetadataId3Frame.validateJsonElement(jsonObj.get("TimedMetadataId3Frame"));
      }
      // validate the optional field `TimedMetadataId3Period`
      if (jsonObj.get("TimedMetadataId3Period") != null && !jsonObj.get("TimedMetadataId3Period").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimedMetadataId3Period"));
      }
      // validate the optional field `TimestampDeltaMilliseconds`
      if (jsonObj.get("TimestampDeltaMilliseconds") != null && !jsonObj.get("TimestampDeltaMilliseconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimestampDeltaMilliseconds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OutputGroupSettingsHlsGroupSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OutputGroupSettingsHlsGroupSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OutputGroupSettingsHlsGroupSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OutputGroupSettingsHlsGroupSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<OutputGroupSettingsHlsGroupSettings>() {
           @Override
           public void write(JsonWriter out, OutputGroupSettingsHlsGroupSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OutputGroupSettingsHlsGroupSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OutputGroupSettingsHlsGroupSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OutputGroupSettingsHlsGroupSettings
   * @throws IOException if the JSON string is invalid with respect to OutputGroupSettingsHlsGroupSettings
   */
  public static OutputGroupSettingsHlsGroupSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OutputGroupSettingsHlsGroupSettings.class);
  }

  /**
   * Convert an instance of OutputGroupSettingsHlsGroupSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

