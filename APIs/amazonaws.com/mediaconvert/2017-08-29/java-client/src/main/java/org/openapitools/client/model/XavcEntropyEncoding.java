/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Optional. Choose a specific entropy encoding mode only when you want to override XAVC recommendations. If you choose the value auto, MediaConvert uses the mode that the XAVC file format specifies given this output&#39;s operating point.
 */
@JsonAdapter(XavcEntropyEncoding.Adapter.class)
public enum XavcEntropyEncoding {
  
  AUTO("AUTO"),
  
  CABAC("CABAC"),
  
  CAVLC("CAVLC");

  private String value;

  XavcEntropyEncoding(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static XavcEntropyEncoding fromValue(String value) {
    for (XavcEntropyEncoding b : XavcEntropyEncoding.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<XavcEntropyEncoding> {
    @Override
    public void write(final JsonWriter jsonWriter, final XavcEntropyEncoding enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public XavcEntropyEncoding read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return XavcEntropyEncoding.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    XavcEntropyEncoding.fromValue(value);
  }
}

