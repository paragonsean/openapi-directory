/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Set Framerate to make sure that the captions and the video are synchronized in the output. Specify a frame rate that matches the frame rate of the associated video. If the video frame rate is 29.97, choose 29.97 dropframe only if the video has video_insertion&#x3D;true and drop_frame_timecode&#x3D;true; otherwise, choose 29.97 non-dropframe.
 */
@JsonAdapter(SccDestinationFramerate.Adapter.class)
public enum SccDestinationFramerate {
  
  _23_97("FRAMERATE_23_97"),
  
  _24("FRAMERATE_24"),
  
  _25("FRAMERATE_25"),
  
  _29_97_DROPFRAME("FRAMERATE_29_97_DROPFRAME"),
  
  _29_97_NON_DROPFRAME("FRAMERATE_29_97_NON_DROPFRAME");

  private String value;

  SccDestinationFramerate(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SccDestinationFramerate fromValue(String value) {
    for (SccDestinationFramerate b : SccDestinationFramerate.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SccDestinationFramerate> {
    @Override
    public void write(final JsonWriter jsonWriter, final SccDestinationFramerate enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SccDestinationFramerate read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SccDestinationFramerate.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SccDestinationFramerate.fromValue(value);
  }
}

