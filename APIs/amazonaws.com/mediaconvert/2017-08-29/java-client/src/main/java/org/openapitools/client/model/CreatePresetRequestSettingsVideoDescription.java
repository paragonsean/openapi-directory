/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AfdSignaling;
import org.openapitools.client.model.AntiAlias;
import org.openapitools.client.model.ColorMetadata;
import org.openapitools.client.model.DropFrameTimecode;
import org.openapitools.client.model.RespondToAfd;
import org.openapitools.client.model.ScalingBehavior;
import org.openapitools.client.model.VideoDescriptionCodecSettings;
import org.openapitools.client.model.VideoDescriptionCrop;
import org.openapitools.client.model.VideoDescriptionPosition;
import org.openapitools.client.model.VideoDescriptionVideoPreprocessors;
import org.openapitools.client.model.VideoTimecodeInsertion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePresetRequestSettingsVideoDescription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePresetRequestSettingsVideoDescription {
  public static final String SERIALIZED_NAME_AFD_SIGNALING = "AfdSignaling";
  @SerializedName(SERIALIZED_NAME_AFD_SIGNALING)
  private AfdSignaling afdSignaling;

  public static final String SERIALIZED_NAME_ANTI_ALIAS = "AntiAlias";
  @SerializedName(SERIALIZED_NAME_ANTI_ALIAS)
  private AntiAlias antiAlias;

  public static final String SERIALIZED_NAME_CODEC_SETTINGS = "CodecSettings";
  @SerializedName(SERIALIZED_NAME_CODEC_SETTINGS)
  private VideoDescriptionCodecSettings codecSettings;

  public static final String SERIALIZED_NAME_COLOR_METADATA = "ColorMetadata";
  @SerializedName(SERIALIZED_NAME_COLOR_METADATA)
  private ColorMetadata colorMetadata;

  public static final String SERIALIZED_NAME_CROP = "Crop";
  @SerializedName(SERIALIZED_NAME_CROP)
  private VideoDescriptionCrop crop;

  public static final String SERIALIZED_NAME_DROP_FRAME_TIMECODE = "DropFrameTimecode";
  @SerializedName(SERIALIZED_NAME_DROP_FRAME_TIMECODE)
  private DropFrameTimecode dropFrameTimecode;

  public static final String SERIALIZED_NAME_FIXED_AFD = "FixedAfd";
  @SerializedName(SERIALIZED_NAME_FIXED_AFD)
  private Integer fixedAfd;

  public static final String SERIALIZED_NAME_HEIGHT = "Height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_POSITION = "Position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private VideoDescriptionPosition position;

  public static final String SERIALIZED_NAME_RESPOND_TO_AFD = "RespondToAfd";
  @SerializedName(SERIALIZED_NAME_RESPOND_TO_AFD)
  private RespondToAfd respondToAfd;

  public static final String SERIALIZED_NAME_SCALING_BEHAVIOR = "ScalingBehavior";
  @SerializedName(SERIALIZED_NAME_SCALING_BEHAVIOR)
  private ScalingBehavior scalingBehavior;

  public static final String SERIALIZED_NAME_SHARPNESS = "Sharpness";
  @SerializedName(SERIALIZED_NAME_SHARPNESS)
  private Integer sharpness;

  public static final String SERIALIZED_NAME_TIMECODE_INSERTION = "TimecodeInsertion";
  @SerializedName(SERIALIZED_NAME_TIMECODE_INSERTION)
  private VideoTimecodeInsertion timecodeInsertion;

  public static final String SERIALIZED_NAME_VIDEO_PREPROCESSORS = "VideoPreprocessors";
  @SerializedName(SERIALIZED_NAME_VIDEO_PREPROCESSORS)
  private VideoDescriptionVideoPreprocessors videoPreprocessors;

  public static final String SERIALIZED_NAME_WIDTH = "Width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Integer width;

  public CreatePresetRequestSettingsVideoDescription() {
  }

  public CreatePresetRequestSettingsVideoDescription afdSignaling(AfdSignaling afdSignaling) {
    this.afdSignaling = afdSignaling;
    return this;
  }

  /**
   * Get afdSignaling
   * @return afdSignaling
   */
  @javax.annotation.Nullable
  public AfdSignaling getAfdSignaling() {
    return afdSignaling;
  }

  public void setAfdSignaling(AfdSignaling afdSignaling) {
    this.afdSignaling = afdSignaling;
  }


  public CreatePresetRequestSettingsVideoDescription antiAlias(AntiAlias antiAlias) {
    this.antiAlias = antiAlias;
    return this;
  }

  /**
   * Get antiAlias
   * @return antiAlias
   */
  @javax.annotation.Nullable
  public AntiAlias getAntiAlias() {
    return antiAlias;
  }

  public void setAntiAlias(AntiAlias antiAlias) {
    this.antiAlias = antiAlias;
  }


  public CreatePresetRequestSettingsVideoDescription codecSettings(VideoDescriptionCodecSettings codecSettings) {
    this.codecSettings = codecSettings;
    return this;
  }

  /**
   * Get codecSettings
   * @return codecSettings
   */
  @javax.annotation.Nullable
  public VideoDescriptionCodecSettings getCodecSettings() {
    return codecSettings;
  }

  public void setCodecSettings(VideoDescriptionCodecSettings codecSettings) {
    this.codecSettings = codecSettings;
  }


  public CreatePresetRequestSettingsVideoDescription colorMetadata(ColorMetadata colorMetadata) {
    this.colorMetadata = colorMetadata;
    return this;
  }

  /**
   * Get colorMetadata
   * @return colorMetadata
   */
  @javax.annotation.Nullable
  public ColorMetadata getColorMetadata() {
    return colorMetadata;
  }

  public void setColorMetadata(ColorMetadata colorMetadata) {
    this.colorMetadata = colorMetadata;
  }


  public CreatePresetRequestSettingsVideoDescription crop(VideoDescriptionCrop crop) {
    this.crop = crop;
    return this;
  }

  /**
   * Get crop
   * @return crop
   */
  @javax.annotation.Nullable
  public VideoDescriptionCrop getCrop() {
    return crop;
  }

  public void setCrop(VideoDescriptionCrop crop) {
    this.crop = crop;
  }


  public CreatePresetRequestSettingsVideoDescription dropFrameTimecode(DropFrameTimecode dropFrameTimecode) {
    this.dropFrameTimecode = dropFrameTimecode;
    return this;
  }

  /**
   * Get dropFrameTimecode
   * @return dropFrameTimecode
   */
  @javax.annotation.Nullable
  public DropFrameTimecode getDropFrameTimecode() {
    return dropFrameTimecode;
  }

  public void setDropFrameTimecode(DropFrameTimecode dropFrameTimecode) {
    this.dropFrameTimecode = dropFrameTimecode;
  }


  public CreatePresetRequestSettingsVideoDescription fixedAfd(Integer fixedAfd) {
    this.fixedAfd = fixedAfd;
    return this;
  }

  /**
   * Get fixedAfd
   * @return fixedAfd
   */
  @javax.annotation.Nullable
  public Integer getFixedAfd() {
    return fixedAfd;
  }

  public void setFixedAfd(Integer fixedAfd) {
    this.fixedAfd = fixedAfd;
  }


  public CreatePresetRequestSettingsVideoDescription height(Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  public CreatePresetRequestSettingsVideoDescription position(VideoDescriptionPosition position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
   */
  @javax.annotation.Nullable
  public VideoDescriptionPosition getPosition() {
    return position;
  }

  public void setPosition(VideoDescriptionPosition position) {
    this.position = position;
  }


  public CreatePresetRequestSettingsVideoDescription respondToAfd(RespondToAfd respondToAfd) {
    this.respondToAfd = respondToAfd;
    return this;
  }

  /**
   * Get respondToAfd
   * @return respondToAfd
   */
  @javax.annotation.Nullable
  public RespondToAfd getRespondToAfd() {
    return respondToAfd;
  }

  public void setRespondToAfd(RespondToAfd respondToAfd) {
    this.respondToAfd = respondToAfd;
  }


  public CreatePresetRequestSettingsVideoDescription scalingBehavior(ScalingBehavior scalingBehavior) {
    this.scalingBehavior = scalingBehavior;
    return this;
  }

  /**
   * Get scalingBehavior
   * @return scalingBehavior
   */
  @javax.annotation.Nullable
  public ScalingBehavior getScalingBehavior() {
    return scalingBehavior;
  }

  public void setScalingBehavior(ScalingBehavior scalingBehavior) {
    this.scalingBehavior = scalingBehavior;
  }


  public CreatePresetRequestSettingsVideoDescription sharpness(Integer sharpness) {
    this.sharpness = sharpness;
    return this;
  }

  /**
   * Get sharpness
   * @return sharpness
   */
  @javax.annotation.Nullable
  public Integer getSharpness() {
    return sharpness;
  }

  public void setSharpness(Integer sharpness) {
    this.sharpness = sharpness;
  }


  public CreatePresetRequestSettingsVideoDescription timecodeInsertion(VideoTimecodeInsertion timecodeInsertion) {
    this.timecodeInsertion = timecodeInsertion;
    return this;
  }

  /**
   * Get timecodeInsertion
   * @return timecodeInsertion
   */
  @javax.annotation.Nullable
  public VideoTimecodeInsertion getTimecodeInsertion() {
    return timecodeInsertion;
  }

  public void setTimecodeInsertion(VideoTimecodeInsertion timecodeInsertion) {
    this.timecodeInsertion = timecodeInsertion;
  }


  public CreatePresetRequestSettingsVideoDescription videoPreprocessors(VideoDescriptionVideoPreprocessors videoPreprocessors) {
    this.videoPreprocessors = videoPreprocessors;
    return this;
  }

  /**
   * Get videoPreprocessors
   * @return videoPreprocessors
   */
  @javax.annotation.Nullable
  public VideoDescriptionVideoPreprocessors getVideoPreprocessors() {
    return videoPreprocessors;
  }

  public void setVideoPreprocessors(VideoDescriptionVideoPreprocessors videoPreprocessors) {
    this.videoPreprocessors = videoPreprocessors;
  }


  public CreatePresetRequestSettingsVideoDescription width(Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePresetRequestSettingsVideoDescription createPresetRequestSettingsVideoDescription = (CreatePresetRequestSettingsVideoDescription) o;
    return Objects.equals(this.afdSignaling, createPresetRequestSettingsVideoDescription.afdSignaling) &&
        Objects.equals(this.antiAlias, createPresetRequestSettingsVideoDescription.antiAlias) &&
        Objects.equals(this.codecSettings, createPresetRequestSettingsVideoDescription.codecSettings) &&
        Objects.equals(this.colorMetadata, createPresetRequestSettingsVideoDescription.colorMetadata) &&
        Objects.equals(this.crop, createPresetRequestSettingsVideoDescription.crop) &&
        Objects.equals(this.dropFrameTimecode, createPresetRequestSettingsVideoDescription.dropFrameTimecode) &&
        Objects.equals(this.fixedAfd, createPresetRequestSettingsVideoDescription.fixedAfd) &&
        Objects.equals(this.height, createPresetRequestSettingsVideoDescription.height) &&
        Objects.equals(this.position, createPresetRequestSettingsVideoDescription.position) &&
        Objects.equals(this.respondToAfd, createPresetRequestSettingsVideoDescription.respondToAfd) &&
        Objects.equals(this.scalingBehavior, createPresetRequestSettingsVideoDescription.scalingBehavior) &&
        Objects.equals(this.sharpness, createPresetRequestSettingsVideoDescription.sharpness) &&
        Objects.equals(this.timecodeInsertion, createPresetRequestSettingsVideoDescription.timecodeInsertion) &&
        Objects.equals(this.videoPreprocessors, createPresetRequestSettingsVideoDescription.videoPreprocessors) &&
        Objects.equals(this.width, createPresetRequestSettingsVideoDescription.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(afdSignaling, antiAlias, codecSettings, colorMetadata, crop, dropFrameTimecode, fixedAfd, height, position, respondToAfd, scalingBehavior, sharpness, timecodeInsertion, videoPreprocessors, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePresetRequestSettingsVideoDescription {\n");
    sb.append("    afdSignaling: ").append(toIndentedString(afdSignaling)).append("\n");
    sb.append("    antiAlias: ").append(toIndentedString(antiAlias)).append("\n");
    sb.append("    codecSettings: ").append(toIndentedString(codecSettings)).append("\n");
    sb.append("    colorMetadata: ").append(toIndentedString(colorMetadata)).append("\n");
    sb.append("    crop: ").append(toIndentedString(crop)).append("\n");
    sb.append("    dropFrameTimecode: ").append(toIndentedString(dropFrameTimecode)).append("\n");
    sb.append("    fixedAfd: ").append(toIndentedString(fixedAfd)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    respondToAfd: ").append(toIndentedString(respondToAfd)).append("\n");
    sb.append("    scalingBehavior: ").append(toIndentedString(scalingBehavior)).append("\n");
    sb.append("    sharpness: ").append(toIndentedString(sharpness)).append("\n");
    sb.append("    timecodeInsertion: ").append(toIndentedString(timecodeInsertion)).append("\n");
    sb.append("    videoPreprocessors: ").append(toIndentedString(videoPreprocessors)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AfdSignaling");
    openapiFields.add("AntiAlias");
    openapiFields.add("CodecSettings");
    openapiFields.add("ColorMetadata");
    openapiFields.add("Crop");
    openapiFields.add("DropFrameTimecode");
    openapiFields.add("FixedAfd");
    openapiFields.add("Height");
    openapiFields.add("Position");
    openapiFields.add("RespondToAfd");
    openapiFields.add("ScalingBehavior");
    openapiFields.add("Sharpness");
    openapiFields.add("TimecodeInsertion");
    openapiFields.add("VideoPreprocessors");
    openapiFields.add("Width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePresetRequestSettingsVideoDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePresetRequestSettingsVideoDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePresetRequestSettingsVideoDescription is not found in the empty JSON string", CreatePresetRequestSettingsVideoDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePresetRequestSettingsVideoDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePresetRequestSettingsVideoDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AfdSignaling`
      if (jsonObj.get("AfdSignaling") != null && !jsonObj.get("AfdSignaling").isJsonNull()) {
        AfdSignaling.validateJsonElement(jsonObj.get("AfdSignaling"));
      }
      // validate the optional field `AntiAlias`
      if (jsonObj.get("AntiAlias") != null && !jsonObj.get("AntiAlias").isJsonNull()) {
        AntiAlias.validateJsonElement(jsonObj.get("AntiAlias"));
      }
      // validate the optional field `CodecSettings`
      if (jsonObj.get("CodecSettings") != null && !jsonObj.get("CodecSettings").isJsonNull()) {
        VideoDescriptionCodecSettings.validateJsonElement(jsonObj.get("CodecSettings"));
      }
      // validate the optional field `ColorMetadata`
      if (jsonObj.get("ColorMetadata") != null && !jsonObj.get("ColorMetadata").isJsonNull()) {
        ColorMetadata.validateJsonElement(jsonObj.get("ColorMetadata"));
      }
      // validate the optional field `Crop`
      if (jsonObj.get("Crop") != null && !jsonObj.get("Crop").isJsonNull()) {
        VideoDescriptionCrop.validateJsonElement(jsonObj.get("Crop"));
      }
      // validate the optional field `DropFrameTimecode`
      if (jsonObj.get("DropFrameTimecode") != null && !jsonObj.get("DropFrameTimecode").isJsonNull()) {
        DropFrameTimecode.validateJsonElement(jsonObj.get("DropFrameTimecode"));
      }
      // validate the optional field `FixedAfd`
      if (jsonObj.get("FixedAfd") != null && !jsonObj.get("FixedAfd").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("FixedAfd"));
      }
      // validate the optional field `Height`
      if (jsonObj.get("Height") != null && !jsonObj.get("Height").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Height"));
      }
      // validate the optional field `Position`
      if (jsonObj.get("Position") != null && !jsonObj.get("Position").isJsonNull()) {
        VideoDescriptionPosition.validateJsonElement(jsonObj.get("Position"));
      }
      // validate the optional field `RespondToAfd`
      if (jsonObj.get("RespondToAfd") != null && !jsonObj.get("RespondToAfd").isJsonNull()) {
        RespondToAfd.validateJsonElement(jsonObj.get("RespondToAfd"));
      }
      // validate the optional field `ScalingBehavior`
      if (jsonObj.get("ScalingBehavior") != null && !jsonObj.get("ScalingBehavior").isJsonNull()) {
        ScalingBehavior.validateJsonElement(jsonObj.get("ScalingBehavior"));
      }
      // validate the optional field `Sharpness`
      if (jsonObj.get("Sharpness") != null && !jsonObj.get("Sharpness").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Sharpness"));
      }
      // validate the optional field `TimecodeInsertion`
      if (jsonObj.get("TimecodeInsertion") != null && !jsonObj.get("TimecodeInsertion").isJsonNull()) {
        VideoTimecodeInsertion.validateJsonElement(jsonObj.get("TimecodeInsertion"));
      }
      // validate the optional field `VideoPreprocessors`
      if (jsonObj.get("VideoPreprocessors") != null && !jsonObj.get("VideoPreprocessors").isJsonNull()) {
        VideoDescriptionVideoPreprocessors.validateJsonElement(jsonObj.get("VideoPreprocessors"));
      }
      // validate the optional field `Width`
      if (jsonObj.get("Width") != null && !jsonObj.get("Width").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Width"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePresetRequestSettingsVideoDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePresetRequestSettingsVideoDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePresetRequestSettingsVideoDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePresetRequestSettingsVideoDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePresetRequestSettingsVideoDescription>() {
           @Override
           public void write(JsonWriter out, CreatePresetRequestSettingsVideoDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePresetRequestSettingsVideoDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePresetRequestSettingsVideoDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePresetRequestSettingsVideoDescription
   * @throws IOException if the JSON string is invalid with respect to CreatePresetRequestSettingsVideoDescription
   */
  public static CreatePresetRequestSettingsVideoDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePresetRequestSettingsVideoDescription.class);
  }

  /**
   * Convert an instance of CreatePresetRequestSettingsVideoDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

