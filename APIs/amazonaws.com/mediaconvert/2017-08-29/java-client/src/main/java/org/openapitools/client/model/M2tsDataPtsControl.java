/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * If you select ALIGN_TO_VIDEO, MediaConvert writes captions and data packets with Presentation Timestamp (PTS) values greater than or equal to the first video packet PTS (MediaConvert drops captions and data packets with lesser PTS values). Keep the default value to allow all PTS values.
 */
@JsonAdapter(M2tsDataPtsControl.Adapter.class)
public enum M2tsDataPtsControl {
  
  AUTO("AUTO"),
  
  ALIGN_TO_VIDEO("ALIGN_TO_VIDEO");

  private String value;

  M2tsDataPtsControl(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static M2tsDataPtsControl fromValue(String value) {
    for (M2tsDataPtsControl b : M2tsDataPtsControl.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<M2tsDataPtsControl> {
    @Override
    public void write(final JsonWriter jsonWriter, final M2tsDataPtsControl enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public M2tsDataPtsControl read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return M2tsDataPtsControl.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    M2tsDataPtsControl.fromValue(value);
  }
}

