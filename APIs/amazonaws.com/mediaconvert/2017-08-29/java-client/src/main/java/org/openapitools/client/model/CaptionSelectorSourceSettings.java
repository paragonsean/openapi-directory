/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CaptionSourceSettingsAncillarySourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsDvbSubSourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsEmbeddedSourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsFileSourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsTeletextSourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsTrackSourceSettings;
import org.openapitools.client.model.CaptionSourceSettingsWebvttHlsSourceSettings;
import org.openapitools.client.model.CaptionSourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CaptionSelectorSourceSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CaptionSelectorSourceSettings {
  public static final String SERIALIZED_NAME_ANCILLARY_SOURCE_SETTINGS = "AncillarySourceSettings";
  @SerializedName(SERIALIZED_NAME_ANCILLARY_SOURCE_SETTINGS)
  private CaptionSourceSettingsAncillarySourceSettings ancillarySourceSettings;

  public static final String SERIALIZED_NAME_DVB_SUB_SOURCE_SETTINGS = "DvbSubSourceSettings";
  @SerializedName(SERIALIZED_NAME_DVB_SUB_SOURCE_SETTINGS)
  private CaptionSourceSettingsDvbSubSourceSettings dvbSubSourceSettings;

  public static final String SERIALIZED_NAME_EMBEDDED_SOURCE_SETTINGS = "EmbeddedSourceSettings";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_SOURCE_SETTINGS)
  private CaptionSourceSettingsEmbeddedSourceSettings embeddedSourceSettings;

  public static final String SERIALIZED_NAME_FILE_SOURCE_SETTINGS = "FileSourceSettings";
  @SerializedName(SERIALIZED_NAME_FILE_SOURCE_SETTINGS)
  private CaptionSourceSettingsFileSourceSettings fileSourceSettings;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private CaptionSourceType sourceType;

  public static final String SERIALIZED_NAME_TELETEXT_SOURCE_SETTINGS = "TeletextSourceSettings";
  @SerializedName(SERIALIZED_NAME_TELETEXT_SOURCE_SETTINGS)
  private CaptionSourceSettingsTeletextSourceSettings teletextSourceSettings;

  public static final String SERIALIZED_NAME_TRACK_SOURCE_SETTINGS = "TrackSourceSettings";
  @SerializedName(SERIALIZED_NAME_TRACK_SOURCE_SETTINGS)
  private CaptionSourceSettingsTrackSourceSettings trackSourceSettings;

  public static final String SERIALIZED_NAME_WEBVTT_HLS_SOURCE_SETTINGS = "WebvttHlsSourceSettings";
  @SerializedName(SERIALIZED_NAME_WEBVTT_HLS_SOURCE_SETTINGS)
  private CaptionSourceSettingsWebvttHlsSourceSettings webvttHlsSourceSettings;

  public CaptionSelectorSourceSettings() {
  }

  public CaptionSelectorSourceSettings ancillarySourceSettings(CaptionSourceSettingsAncillarySourceSettings ancillarySourceSettings) {
    this.ancillarySourceSettings = ancillarySourceSettings;
    return this;
  }

  /**
   * Get ancillarySourceSettings
   * @return ancillarySourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsAncillarySourceSettings getAncillarySourceSettings() {
    return ancillarySourceSettings;
  }

  public void setAncillarySourceSettings(CaptionSourceSettingsAncillarySourceSettings ancillarySourceSettings) {
    this.ancillarySourceSettings = ancillarySourceSettings;
  }


  public CaptionSelectorSourceSettings dvbSubSourceSettings(CaptionSourceSettingsDvbSubSourceSettings dvbSubSourceSettings) {
    this.dvbSubSourceSettings = dvbSubSourceSettings;
    return this;
  }

  /**
   * Get dvbSubSourceSettings
   * @return dvbSubSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsDvbSubSourceSettings getDvbSubSourceSettings() {
    return dvbSubSourceSettings;
  }

  public void setDvbSubSourceSettings(CaptionSourceSettingsDvbSubSourceSettings dvbSubSourceSettings) {
    this.dvbSubSourceSettings = dvbSubSourceSettings;
  }


  public CaptionSelectorSourceSettings embeddedSourceSettings(CaptionSourceSettingsEmbeddedSourceSettings embeddedSourceSettings) {
    this.embeddedSourceSettings = embeddedSourceSettings;
    return this;
  }

  /**
   * Get embeddedSourceSettings
   * @return embeddedSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsEmbeddedSourceSettings getEmbeddedSourceSettings() {
    return embeddedSourceSettings;
  }

  public void setEmbeddedSourceSettings(CaptionSourceSettingsEmbeddedSourceSettings embeddedSourceSettings) {
    this.embeddedSourceSettings = embeddedSourceSettings;
  }


  public CaptionSelectorSourceSettings fileSourceSettings(CaptionSourceSettingsFileSourceSettings fileSourceSettings) {
    this.fileSourceSettings = fileSourceSettings;
    return this;
  }

  /**
   * Get fileSourceSettings
   * @return fileSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsFileSourceSettings getFileSourceSettings() {
    return fileSourceSettings;
  }

  public void setFileSourceSettings(CaptionSourceSettingsFileSourceSettings fileSourceSettings) {
    this.fileSourceSettings = fileSourceSettings;
  }


  public CaptionSelectorSourceSettings sourceType(CaptionSourceType sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nullable
  public CaptionSourceType getSourceType() {
    return sourceType;
  }

  public void setSourceType(CaptionSourceType sourceType) {
    this.sourceType = sourceType;
  }


  public CaptionSelectorSourceSettings teletextSourceSettings(CaptionSourceSettingsTeletextSourceSettings teletextSourceSettings) {
    this.teletextSourceSettings = teletextSourceSettings;
    return this;
  }

  /**
   * Get teletextSourceSettings
   * @return teletextSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsTeletextSourceSettings getTeletextSourceSettings() {
    return teletextSourceSettings;
  }

  public void setTeletextSourceSettings(CaptionSourceSettingsTeletextSourceSettings teletextSourceSettings) {
    this.teletextSourceSettings = teletextSourceSettings;
  }


  public CaptionSelectorSourceSettings trackSourceSettings(CaptionSourceSettingsTrackSourceSettings trackSourceSettings) {
    this.trackSourceSettings = trackSourceSettings;
    return this;
  }

  /**
   * Get trackSourceSettings
   * @return trackSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsTrackSourceSettings getTrackSourceSettings() {
    return trackSourceSettings;
  }

  public void setTrackSourceSettings(CaptionSourceSettingsTrackSourceSettings trackSourceSettings) {
    this.trackSourceSettings = trackSourceSettings;
  }


  public CaptionSelectorSourceSettings webvttHlsSourceSettings(CaptionSourceSettingsWebvttHlsSourceSettings webvttHlsSourceSettings) {
    this.webvttHlsSourceSettings = webvttHlsSourceSettings;
    return this;
  }

  /**
   * Get webvttHlsSourceSettings
   * @return webvttHlsSourceSettings
   */
  @javax.annotation.Nullable
  public CaptionSourceSettingsWebvttHlsSourceSettings getWebvttHlsSourceSettings() {
    return webvttHlsSourceSettings;
  }

  public void setWebvttHlsSourceSettings(CaptionSourceSettingsWebvttHlsSourceSettings webvttHlsSourceSettings) {
    this.webvttHlsSourceSettings = webvttHlsSourceSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaptionSelectorSourceSettings captionSelectorSourceSettings = (CaptionSelectorSourceSettings) o;
    return Objects.equals(this.ancillarySourceSettings, captionSelectorSourceSettings.ancillarySourceSettings) &&
        Objects.equals(this.dvbSubSourceSettings, captionSelectorSourceSettings.dvbSubSourceSettings) &&
        Objects.equals(this.embeddedSourceSettings, captionSelectorSourceSettings.embeddedSourceSettings) &&
        Objects.equals(this.fileSourceSettings, captionSelectorSourceSettings.fileSourceSettings) &&
        Objects.equals(this.sourceType, captionSelectorSourceSettings.sourceType) &&
        Objects.equals(this.teletextSourceSettings, captionSelectorSourceSettings.teletextSourceSettings) &&
        Objects.equals(this.trackSourceSettings, captionSelectorSourceSettings.trackSourceSettings) &&
        Objects.equals(this.webvttHlsSourceSettings, captionSelectorSourceSettings.webvttHlsSourceSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ancillarySourceSettings, dvbSubSourceSettings, embeddedSourceSettings, fileSourceSettings, sourceType, teletextSourceSettings, trackSourceSettings, webvttHlsSourceSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaptionSelectorSourceSettings {\n");
    sb.append("    ancillarySourceSettings: ").append(toIndentedString(ancillarySourceSettings)).append("\n");
    sb.append("    dvbSubSourceSettings: ").append(toIndentedString(dvbSubSourceSettings)).append("\n");
    sb.append("    embeddedSourceSettings: ").append(toIndentedString(embeddedSourceSettings)).append("\n");
    sb.append("    fileSourceSettings: ").append(toIndentedString(fileSourceSettings)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    teletextSourceSettings: ").append(toIndentedString(teletextSourceSettings)).append("\n");
    sb.append("    trackSourceSettings: ").append(toIndentedString(trackSourceSettings)).append("\n");
    sb.append("    webvttHlsSourceSettings: ").append(toIndentedString(webvttHlsSourceSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AncillarySourceSettings");
    openapiFields.add("DvbSubSourceSettings");
    openapiFields.add("EmbeddedSourceSettings");
    openapiFields.add("FileSourceSettings");
    openapiFields.add("SourceType");
    openapiFields.add("TeletextSourceSettings");
    openapiFields.add("TrackSourceSettings");
    openapiFields.add("WebvttHlsSourceSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CaptionSelectorSourceSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CaptionSelectorSourceSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaptionSelectorSourceSettings is not found in the empty JSON string", CaptionSelectorSourceSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CaptionSelectorSourceSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaptionSelectorSourceSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AncillarySourceSettings`
      if (jsonObj.get("AncillarySourceSettings") != null && !jsonObj.get("AncillarySourceSettings").isJsonNull()) {
        CaptionSourceSettingsAncillarySourceSettings.validateJsonElement(jsonObj.get("AncillarySourceSettings"));
      }
      // validate the optional field `DvbSubSourceSettings`
      if (jsonObj.get("DvbSubSourceSettings") != null && !jsonObj.get("DvbSubSourceSettings").isJsonNull()) {
        CaptionSourceSettingsDvbSubSourceSettings.validateJsonElement(jsonObj.get("DvbSubSourceSettings"));
      }
      // validate the optional field `EmbeddedSourceSettings`
      if (jsonObj.get("EmbeddedSourceSettings") != null && !jsonObj.get("EmbeddedSourceSettings").isJsonNull()) {
        CaptionSourceSettingsEmbeddedSourceSettings.validateJsonElement(jsonObj.get("EmbeddedSourceSettings"));
      }
      // validate the optional field `FileSourceSettings`
      if (jsonObj.get("FileSourceSettings") != null && !jsonObj.get("FileSourceSettings").isJsonNull()) {
        CaptionSourceSettingsFileSourceSettings.validateJsonElement(jsonObj.get("FileSourceSettings"));
      }
      // validate the optional field `SourceType`
      if (jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) {
        CaptionSourceType.validateJsonElement(jsonObj.get("SourceType"));
      }
      // validate the optional field `TeletextSourceSettings`
      if (jsonObj.get("TeletextSourceSettings") != null && !jsonObj.get("TeletextSourceSettings").isJsonNull()) {
        CaptionSourceSettingsTeletextSourceSettings.validateJsonElement(jsonObj.get("TeletextSourceSettings"));
      }
      // validate the optional field `TrackSourceSettings`
      if (jsonObj.get("TrackSourceSettings") != null && !jsonObj.get("TrackSourceSettings").isJsonNull()) {
        CaptionSourceSettingsTrackSourceSettings.validateJsonElement(jsonObj.get("TrackSourceSettings"));
      }
      // validate the optional field `WebvttHlsSourceSettings`
      if (jsonObj.get("WebvttHlsSourceSettings") != null && !jsonObj.get("WebvttHlsSourceSettings").isJsonNull()) {
        CaptionSourceSettingsWebvttHlsSourceSettings.validateJsonElement(jsonObj.get("WebvttHlsSourceSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaptionSelectorSourceSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaptionSelectorSourceSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaptionSelectorSourceSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaptionSelectorSourceSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CaptionSelectorSourceSettings>() {
           @Override
           public void write(JsonWriter out, CaptionSelectorSourceSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaptionSelectorSourceSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CaptionSelectorSourceSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CaptionSelectorSourceSettings
   * @throws IOException if the JSON string is invalid with respect to CaptionSelectorSourceSettings
   */
  public static CaptionSelectorSourceSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaptionSelectorSourceSettings.class);
  }

  /**
   * Convert an instance of CaptionSelectorSourceSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

