/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify the font that you want the service to use for your burn in captions when your input captions specify a font that MediaConvert doesn&#39;t support. When you set Fallback font to best match, or leave blank, MediaConvert uses a supported font that most closely matches the font that your input captions specify. When there are multiple unsupported fonts in your input captions, MediaConvert matches each font with the supported font that matches best. When you explicitly choose a replacement font, MediaConvert uses that font to replace all unsupported fonts from your input.
 */
@JsonAdapter(DvbSubSubtitleFallbackFont.Adapter.class)
public enum DvbSubSubtitleFallbackFont {
  
  BEST_MATCH("BEST_MATCH"),
  
  MONOSPACED_SANSSERIF("MONOSPACED_SANSSERIF"),
  
  MONOSPACED_SERIF("MONOSPACED_SERIF"),
  
  PROPORTIONAL_SANSSERIF("PROPORTIONAL_SANSSERIF"),
  
  PROPORTIONAL_SERIF("PROPORTIONAL_SERIF");

  private String value;

  DvbSubSubtitleFallbackFont(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DvbSubSubtitleFallbackFont fromValue(String value) {
    for (DvbSubSubtitleFallbackFont b : DvbSubSubtitleFallbackFont.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DvbSubSubtitleFallbackFont> {
    @Override
    public void write(final JsonWriter jsonWriter, final DvbSubSubtitleFallbackFont enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DvbSubSubtitleFallbackFont read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DvbSubSubtitleFallbackFont.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    DvbSubSubtitleFallbackFont.fromValue(value);
  }
}

