/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify the strength of the Bandwidth reduction filter. For most workflows, we recommend that you choose Auto to reduce the bandwidth of your output with little to no perceptual decrease in video quality. For high quality and high bitrate outputs, choose Low. For the most bandwidth reduction, choose High. We recommend that you choose High for low bitrate outputs. Note that High may incur a slight increase in the softness of your output.
 */
@JsonAdapter(BandwidthReductionFilterStrength.Adapter.class)
public enum BandwidthReductionFilterStrength {
  
  LOW("LOW"),
  
  MEDIUM("MEDIUM"),
  
  HIGH("HIGH"),
  
  AUTO("AUTO"),
  
  OFF("OFF");

  private String value;

  BandwidthReductionFilterStrength(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BandwidthReductionFilterStrength fromValue(String value) {
    for (BandwidthReductionFilterStrength b : BandwidthReductionFilterStrength.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BandwidthReductionFilterStrength> {
    @Override
    public void write(final JsonWriter jsonWriter, final BandwidthReductionFilterStrength enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BandwidthReductionFilterStrength read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BandwidthReductionFilterStrength.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BandwidthReductionFilterStrength.fromValue(value);
  }
}

