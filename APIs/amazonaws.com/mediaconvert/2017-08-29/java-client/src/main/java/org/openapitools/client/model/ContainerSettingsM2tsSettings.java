/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.M2tsAudioBufferModel;
import org.openapitools.client.model.M2tsAudioDuration;
import org.openapitools.client.model.M2tsBufferModel;
import org.openapitools.client.model.M2tsDataPtsControl;
import org.openapitools.client.model.M2tsEbpAudioInterval;
import org.openapitools.client.model.M2tsEbpPlacement;
import org.openapitools.client.model.M2tsEsRateInPes;
import org.openapitools.client.model.M2tsForceTsVideoEbpOrder;
import org.openapitools.client.model.M2tsKlvMetadata;
import org.openapitools.client.model.M2tsNielsenId3;
import org.openapitools.client.model.M2tsPcrControl;
import org.openapitools.client.model.M2tsRateMode;
import org.openapitools.client.model.M2tsScte35Source;
import org.openapitools.client.model.M2tsSegmentationMarkers;
import org.openapitools.client.model.M2tsSegmentationStyle;
import org.openapitools.client.model.M2tsSettingsDvbNitSettings;
import org.openapitools.client.model.M2tsSettingsDvbSdtSettings;
import org.openapitools.client.model.M2tsSettingsDvbTdtSettings;
import org.openapitools.client.model.M2tsSettingsScte35Esam;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContainerSettingsM2tsSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContainerSettingsM2tsSettings {
  public static final String SERIALIZED_NAME_AUDIO_BUFFER_MODEL = "AudioBufferModel";
  @SerializedName(SERIALIZED_NAME_AUDIO_BUFFER_MODEL)
  private M2tsAudioBufferModel audioBufferModel;

  public static final String SERIALIZED_NAME_AUDIO_DURATION = "AudioDuration";
  @SerializedName(SERIALIZED_NAME_AUDIO_DURATION)
  private M2tsAudioDuration audioDuration;

  public static final String SERIALIZED_NAME_AUDIO_FRAMES_PER_PES = "AudioFramesPerPes";
  @SerializedName(SERIALIZED_NAME_AUDIO_FRAMES_PER_PES)
  private Integer audioFramesPerPes;

  public static final String SERIALIZED_NAME_AUDIO_PIDS = "AudioPids";
  @SerializedName(SERIALIZED_NAME_AUDIO_PIDS)
  private List audioPids;

  public static final String SERIALIZED_NAME_BITRATE = "Bitrate";
  @SerializedName(SERIALIZED_NAME_BITRATE)
  private Integer bitrate;

  public static final String SERIALIZED_NAME_BUFFER_MODEL = "BufferModel";
  @SerializedName(SERIALIZED_NAME_BUFFER_MODEL)
  private M2tsBufferModel bufferModel;

  public static final String SERIALIZED_NAME_DATA_P_T_S_CONTROL = "DataPTSControl";
  @SerializedName(SERIALIZED_NAME_DATA_P_T_S_CONTROL)
  private M2tsDataPtsControl dataPTSControl;

  public static final String SERIALIZED_NAME_DVB_NIT_SETTINGS = "DvbNitSettings";
  @SerializedName(SERIALIZED_NAME_DVB_NIT_SETTINGS)
  private M2tsSettingsDvbNitSettings dvbNitSettings;

  public static final String SERIALIZED_NAME_DVB_SDT_SETTINGS = "DvbSdtSettings";
  @SerializedName(SERIALIZED_NAME_DVB_SDT_SETTINGS)
  private M2tsSettingsDvbSdtSettings dvbSdtSettings;

  public static final String SERIALIZED_NAME_DVB_SUB_PIDS = "DvbSubPids";
  @SerializedName(SERIALIZED_NAME_DVB_SUB_PIDS)
  private List dvbSubPids;

  public static final String SERIALIZED_NAME_DVB_TDT_SETTINGS = "DvbTdtSettings";
  @SerializedName(SERIALIZED_NAME_DVB_TDT_SETTINGS)
  private M2tsSettingsDvbTdtSettings dvbTdtSettings;

  public static final String SERIALIZED_NAME_DVB_TELETEXT_PID = "DvbTeletextPid";
  @SerializedName(SERIALIZED_NAME_DVB_TELETEXT_PID)
  private Integer dvbTeletextPid;

  public static final String SERIALIZED_NAME_EBP_AUDIO_INTERVAL = "EbpAudioInterval";
  @SerializedName(SERIALIZED_NAME_EBP_AUDIO_INTERVAL)
  private M2tsEbpAudioInterval ebpAudioInterval;

  public static final String SERIALIZED_NAME_EBP_PLACEMENT = "EbpPlacement";
  @SerializedName(SERIALIZED_NAME_EBP_PLACEMENT)
  private M2tsEbpPlacement ebpPlacement;

  public static final String SERIALIZED_NAME_ES_RATE_IN_PES = "EsRateInPes";
  @SerializedName(SERIALIZED_NAME_ES_RATE_IN_PES)
  private M2tsEsRateInPes esRateInPes;

  public static final String SERIALIZED_NAME_FORCE_TS_VIDEO_EBP_ORDER = "ForceTsVideoEbpOrder";
  @SerializedName(SERIALIZED_NAME_FORCE_TS_VIDEO_EBP_ORDER)
  private M2tsForceTsVideoEbpOrder forceTsVideoEbpOrder;

  public static final String SERIALIZED_NAME_FRAGMENT_TIME = "FragmentTime";
  @SerializedName(SERIALIZED_NAME_FRAGMENT_TIME)
  private Double fragmentTime;

  public static final String SERIALIZED_NAME_KLV_METADATA = "KlvMetadata";
  @SerializedName(SERIALIZED_NAME_KLV_METADATA)
  private M2tsKlvMetadata klvMetadata;

  public static final String SERIALIZED_NAME_MAX_PCR_INTERVAL = "MaxPcrInterval";
  @SerializedName(SERIALIZED_NAME_MAX_PCR_INTERVAL)
  private Integer maxPcrInterval;

  public static final String SERIALIZED_NAME_MIN_EBP_INTERVAL = "MinEbpInterval";
  @SerializedName(SERIALIZED_NAME_MIN_EBP_INTERVAL)
  private Integer minEbpInterval;

  public static final String SERIALIZED_NAME_NIELSEN_ID3 = "NielsenId3";
  @SerializedName(SERIALIZED_NAME_NIELSEN_ID3)
  private M2tsNielsenId3 nielsenId3;

  public static final String SERIALIZED_NAME_NULL_PACKET_BITRATE = "NullPacketBitrate";
  @SerializedName(SERIALIZED_NAME_NULL_PACKET_BITRATE)
  private Double nullPacketBitrate;

  public static final String SERIALIZED_NAME_PAT_INTERVAL = "PatInterval";
  @SerializedName(SERIALIZED_NAME_PAT_INTERVAL)
  private Integer patInterval;

  public static final String SERIALIZED_NAME_PCR_CONTROL = "PcrControl";
  @SerializedName(SERIALIZED_NAME_PCR_CONTROL)
  private M2tsPcrControl pcrControl;

  public static final String SERIALIZED_NAME_PCR_PID = "PcrPid";
  @SerializedName(SERIALIZED_NAME_PCR_PID)
  private Integer pcrPid;

  public static final String SERIALIZED_NAME_PMT_INTERVAL = "PmtInterval";
  @SerializedName(SERIALIZED_NAME_PMT_INTERVAL)
  private Integer pmtInterval;

  public static final String SERIALIZED_NAME_PMT_PID = "PmtPid";
  @SerializedName(SERIALIZED_NAME_PMT_PID)
  private Integer pmtPid;

  public static final String SERIALIZED_NAME_PRIVATE_METADATA_PID = "PrivateMetadataPid";
  @SerializedName(SERIALIZED_NAME_PRIVATE_METADATA_PID)
  private Integer privateMetadataPid;

  public static final String SERIALIZED_NAME_PROGRAM_NUMBER = "ProgramNumber";
  @SerializedName(SERIALIZED_NAME_PROGRAM_NUMBER)
  private Integer programNumber;

  public static final String SERIALIZED_NAME_RATE_MODE = "RateMode";
  @SerializedName(SERIALIZED_NAME_RATE_MODE)
  private M2tsRateMode rateMode;

  public static final String SERIALIZED_NAME_SCTE35_ESAM = "Scte35Esam";
  @SerializedName(SERIALIZED_NAME_SCTE35_ESAM)
  private M2tsSettingsScte35Esam scte35Esam;

  public static final String SERIALIZED_NAME_SCTE35_PID = "Scte35Pid";
  @SerializedName(SERIALIZED_NAME_SCTE35_PID)
  private Integer scte35Pid;

  public static final String SERIALIZED_NAME_SCTE35_SOURCE = "Scte35Source";
  @SerializedName(SERIALIZED_NAME_SCTE35_SOURCE)
  private M2tsScte35Source scte35Source;

  public static final String SERIALIZED_NAME_SEGMENTATION_MARKERS = "SegmentationMarkers";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_MARKERS)
  private M2tsSegmentationMarkers segmentationMarkers;

  public static final String SERIALIZED_NAME_SEGMENTATION_STYLE = "SegmentationStyle";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_STYLE)
  private M2tsSegmentationStyle segmentationStyle;

  public static final String SERIALIZED_NAME_SEGMENTATION_TIME = "SegmentationTime";
  @SerializedName(SERIALIZED_NAME_SEGMENTATION_TIME)
  private Double segmentationTime;

  public static final String SERIALIZED_NAME_TIMED_METADATA_PID = "TimedMetadataPid";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_PID)
  private Integer timedMetadataPid;

  public static final String SERIALIZED_NAME_TRANSPORT_STREAM_ID = "TransportStreamId";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_STREAM_ID)
  private Integer transportStreamId;

  public static final String SERIALIZED_NAME_VIDEO_PID = "VideoPid";
  @SerializedName(SERIALIZED_NAME_VIDEO_PID)
  private Integer videoPid;

  public ContainerSettingsM2tsSettings() {
  }

  public ContainerSettingsM2tsSettings audioBufferModel(M2tsAudioBufferModel audioBufferModel) {
    this.audioBufferModel = audioBufferModel;
    return this;
  }

  /**
   * Get audioBufferModel
   * @return audioBufferModel
   */
  @javax.annotation.Nullable
  public M2tsAudioBufferModel getAudioBufferModel() {
    return audioBufferModel;
  }

  public void setAudioBufferModel(M2tsAudioBufferModel audioBufferModel) {
    this.audioBufferModel = audioBufferModel;
  }


  public ContainerSettingsM2tsSettings audioDuration(M2tsAudioDuration audioDuration) {
    this.audioDuration = audioDuration;
    return this;
  }

  /**
   * Get audioDuration
   * @return audioDuration
   */
  @javax.annotation.Nullable
  public M2tsAudioDuration getAudioDuration() {
    return audioDuration;
  }

  public void setAudioDuration(M2tsAudioDuration audioDuration) {
    this.audioDuration = audioDuration;
  }


  public ContainerSettingsM2tsSettings audioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
    return this;
  }

  /**
   * Get audioFramesPerPes
   * @return audioFramesPerPes
   */
  @javax.annotation.Nullable
  public Integer getAudioFramesPerPes() {
    return audioFramesPerPes;
  }

  public void setAudioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
  }


  public ContainerSettingsM2tsSettings audioPids(List audioPids) {
    this.audioPids = audioPids;
    return this;
  }

  /**
   * Get audioPids
   * @return audioPids
   */
  @javax.annotation.Nullable
  public List getAudioPids() {
    return audioPids;
  }

  public void setAudioPids(List audioPids) {
    this.audioPids = audioPids;
  }


  public ContainerSettingsM2tsSettings bitrate(Integer bitrate) {
    this.bitrate = bitrate;
    return this;
  }

  /**
   * Get bitrate
   * @return bitrate
   */
  @javax.annotation.Nullable
  public Integer getBitrate() {
    return bitrate;
  }

  public void setBitrate(Integer bitrate) {
    this.bitrate = bitrate;
  }


  public ContainerSettingsM2tsSettings bufferModel(M2tsBufferModel bufferModel) {
    this.bufferModel = bufferModel;
    return this;
  }

  /**
   * Get bufferModel
   * @return bufferModel
   */
  @javax.annotation.Nullable
  public M2tsBufferModel getBufferModel() {
    return bufferModel;
  }

  public void setBufferModel(M2tsBufferModel bufferModel) {
    this.bufferModel = bufferModel;
  }


  public ContainerSettingsM2tsSettings dataPTSControl(M2tsDataPtsControl dataPTSControl) {
    this.dataPTSControl = dataPTSControl;
    return this;
  }

  /**
   * Get dataPTSControl
   * @return dataPTSControl
   */
  @javax.annotation.Nullable
  public M2tsDataPtsControl getDataPTSControl() {
    return dataPTSControl;
  }

  public void setDataPTSControl(M2tsDataPtsControl dataPTSControl) {
    this.dataPTSControl = dataPTSControl;
  }


  public ContainerSettingsM2tsSettings dvbNitSettings(M2tsSettingsDvbNitSettings dvbNitSettings) {
    this.dvbNitSettings = dvbNitSettings;
    return this;
  }

  /**
   * Get dvbNitSettings
   * @return dvbNitSettings
   */
  @javax.annotation.Nullable
  public M2tsSettingsDvbNitSettings getDvbNitSettings() {
    return dvbNitSettings;
  }

  public void setDvbNitSettings(M2tsSettingsDvbNitSettings dvbNitSettings) {
    this.dvbNitSettings = dvbNitSettings;
  }


  public ContainerSettingsM2tsSettings dvbSdtSettings(M2tsSettingsDvbSdtSettings dvbSdtSettings) {
    this.dvbSdtSettings = dvbSdtSettings;
    return this;
  }

  /**
   * Get dvbSdtSettings
   * @return dvbSdtSettings
   */
  @javax.annotation.Nullable
  public M2tsSettingsDvbSdtSettings getDvbSdtSettings() {
    return dvbSdtSettings;
  }

  public void setDvbSdtSettings(M2tsSettingsDvbSdtSettings dvbSdtSettings) {
    this.dvbSdtSettings = dvbSdtSettings;
  }


  public ContainerSettingsM2tsSettings dvbSubPids(List dvbSubPids) {
    this.dvbSubPids = dvbSubPids;
    return this;
  }

  /**
   * Get dvbSubPids
   * @return dvbSubPids
   */
  @javax.annotation.Nullable
  public List getDvbSubPids() {
    return dvbSubPids;
  }

  public void setDvbSubPids(List dvbSubPids) {
    this.dvbSubPids = dvbSubPids;
  }


  public ContainerSettingsM2tsSettings dvbTdtSettings(M2tsSettingsDvbTdtSettings dvbTdtSettings) {
    this.dvbTdtSettings = dvbTdtSettings;
    return this;
  }

  /**
   * Get dvbTdtSettings
   * @return dvbTdtSettings
   */
  @javax.annotation.Nullable
  public M2tsSettingsDvbTdtSettings getDvbTdtSettings() {
    return dvbTdtSettings;
  }

  public void setDvbTdtSettings(M2tsSettingsDvbTdtSettings dvbTdtSettings) {
    this.dvbTdtSettings = dvbTdtSettings;
  }


  public ContainerSettingsM2tsSettings dvbTeletextPid(Integer dvbTeletextPid) {
    this.dvbTeletextPid = dvbTeletextPid;
    return this;
  }

  /**
   * Get dvbTeletextPid
   * @return dvbTeletextPid
   */
  @javax.annotation.Nullable
  public Integer getDvbTeletextPid() {
    return dvbTeletextPid;
  }

  public void setDvbTeletextPid(Integer dvbTeletextPid) {
    this.dvbTeletextPid = dvbTeletextPid;
  }


  public ContainerSettingsM2tsSettings ebpAudioInterval(M2tsEbpAudioInterval ebpAudioInterval) {
    this.ebpAudioInterval = ebpAudioInterval;
    return this;
  }

  /**
   * Get ebpAudioInterval
   * @return ebpAudioInterval
   */
  @javax.annotation.Nullable
  public M2tsEbpAudioInterval getEbpAudioInterval() {
    return ebpAudioInterval;
  }

  public void setEbpAudioInterval(M2tsEbpAudioInterval ebpAudioInterval) {
    this.ebpAudioInterval = ebpAudioInterval;
  }


  public ContainerSettingsM2tsSettings ebpPlacement(M2tsEbpPlacement ebpPlacement) {
    this.ebpPlacement = ebpPlacement;
    return this;
  }

  /**
   * Get ebpPlacement
   * @return ebpPlacement
   */
  @javax.annotation.Nullable
  public M2tsEbpPlacement getEbpPlacement() {
    return ebpPlacement;
  }

  public void setEbpPlacement(M2tsEbpPlacement ebpPlacement) {
    this.ebpPlacement = ebpPlacement;
  }


  public ContainerSettingsM2tsSettings esRateInPes(M2tsEsRateInPes esRateInPes) {
    this.esRateInPes = esRateInPes;
    return this;
  }

  /**
   * Get esRateInPes
   * @return esRateInPes
   */
  @javax.annotation.Nullable
  public M2tsEsRateInPes getEsRateInPes() {
    return esRateInPes;
  }

  public void setEsRateInPes(M2tsEsRateInPes esRateInPes) {
    this.esRateInPes = esRateInPes;
  }


  public ContainerSettingsM2tsSettings forceTsVideoEbpOrder(M2tsForceTsVideoEbpOrder forceTsVideoEbpOrder) {
    this.forceTsVideoEbpOrder = forceTsVideoEbpOrder;
    return this;
  }

  /**
   * Get forceTsVideoEbpOrder
   * @return forceTsVideoEbpOrder
   */
  @javax.annotation.Nullable
  public M2tsForceTsVideoEbpOrder getForceTsVideoEbpOrder() {
    return forceTsVideoEbpOrder;
  }

  public void setForceTsVideoEbpOrder(M2tsForceTsVideoEbpOrder forceTsVideoEbpOrder) {
    this.forceTsVideoEbpOrder = forceTsVideoEbpOrder;
  }


  public ContainerSettingsM2tsSettings fragmentTime(Double fragmentTime) {
    this.fragmentTime = fragmentTime;
    return this;
  }

  /**
   * Get fragmentTime
   * @return fragmentTime
   */
  @javax.annotation.Nullable
  public Double getFragmentTime() {
    return fragmentTime;
  }

  public void setFragmentTime(Double fragmentTime) {
    this.fragmentTime = fragmentTime;
  }


  public ContainerSettingsM2tsSettings klvMetadata(M2tsKlvMetadata klvMetadata) {
    this.klvMetadata = klvMetadata;
    return this;
  }

  /**
   * Get klvMetadata
   * @return klvMetadata
   */
  @javax.annotation.Nullable
  public M2tsKlvMetadata getKlvMetadata() {
    return klvMetadata;
  }

  public void setKlvMetadata(M2tsKlvMetadata klvMetadata) {
    this.klvMetadata = klvMetadata;
  }


  public ContainerSettingsM2tsSettings maxPcrInterval(Integer maxPcrInterval) {
    this.maxPcrInterval = maxPcrInterval;
    return this;
  }

  /**
   * Get maxPcrInterval
   * @return maxPcrInterval
   */
  @javax.annotation.Nullable
  public Integer getMaxPcrInterval() {
    return maxPcrInterval;
  }

  public void setMaxPcrInterval(Integer maxPcrInterval) {
    this.maxPcrInterval = maxPcrInterval;
  }


  public ContainerSettingsM2tsSettings minEbpInterval(Integer minEbpInterval) {
    this.minEbpInterval = minEbpInterval;
    return this;
  }

  /**
   * Get minEbpInterval
   * @return minEbpInterval
   */
  @javax.annotation.Nullable
  public Integer getMinEbpInterval() {
    return minEbpInterval;
  }

  public void setMinEbpInterval(Integer minEbpInterval) {
    this.minEbpInterval = minEbpInterval;
  }


  public ContainerSettingsM2tsSettings nielsenId3(M2tsNielsenId3 nielsenId3) {
    this.nielsenId3 = nielsenId3;
    return this;
  }

  /**
   * Get nielsenId3
   * @return nielsenId3
   */
  @javax.annotation.Nullable
  public M2tsNielsenId3 getNielsenId3() {
    return nielsenId3;
  }

  public void setNielsenId3(M2tsNielsenId3 nielsenId3) {
    this.nielsenId3 = nielsenId3;
  }


  public ContainerSettingsM2tsSettings nullPacketBitrate(Double nullPacketBitrate) {
    this.nullPacketBitrate = nullPacketBitrate;
    return this;
  }

  /**
   * Get nullPacketBitrate
   * @return nullPacketBitrate
   */
  @javax.annotation.Nullable
  public Double getNullPacketBitrate() {
    return nullPacketBitrate;
  }

  public void setNullPacketBitrate(Double nullPacketBitrate) {
    this.nullPacketBitrate = nullPacketBitrate;
  }


  public ContainerSettingsM2tsSettings patInterval(Integer patInterval) {
    this.patInterval = patInterval;
    return this;
  }

  /**
   * Get patInterval
   * @return patInterval
   */
  @javax.annotation.Nullable
  public Integer getPatInterval() {
    return patInterval;
  }

  public void setPatInterval(Integer patInterval) {
    this.patInterval = patInterval;
  }


  public ContainerSettingsM2tsSettings pcrControl(M2tsPcrControl pcrControl) {
    this.pcrControl = pcrControl;
    return this;
  }

  /**
   * Get pcrControl
   * @return pcrControl
   */
  @javax.annotation.Nullable
  public M2tsPcrControl getPcrControl() {
    return pcrControl;
  }

  public void setPcrControl(M2tsPcrControl pcrControl) {
    this.pcrControl = pcrControl;
  }


  public ContainerSettingsM2tsSettings pcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
    return this;
  }

  /**
   * Get pcrPid
   * @return pcrPid
   */
  @javax.annotation.Nullable
  public Integer getPcrPid() {
    return pcrPid;
  }

  public void setPcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
  }


  public ContainerSettingsM2tsSettings pmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
    return this;
  }

  /**
   * Get pmtInterval
   * @return pmtInterval
   */
  @javax.annotation.Nullable
  public Integer getPmtInterval() {
    return pmtInterval;
  }

  public void setPmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
  }


  public ContainerSettingsM2tsSettings pmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
    return this;
  }

  /**
   * Get pmtPid
   * @return pmtPid
   */
  @javax.annotation.Nullable
  public Integer getPmtPid() {
    return pmtPid;
  }

  public void setPmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
  }


  public ContainerSettingsM2tsSettings privateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
    return this;
  }

  /**
   * Get privateMetadataPid
   * @return privateMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getPrivateMetadataPid() {
    return privateMetadataPid;
  }

  public void setPrivateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
  }


  public ContainerSettingsM2tsSettings programNumber(Integer programNumber) {
    this.programNumber = programNumber;
    return this;
  }

  /**
   * Get programNumber
   * @return programNumber
   */
  @javax.annotation.Nullable
  public Integer getProgramNumber() {
    return programNumber;
  }

  public void setProgramNumber(Integer programNumber) {
    this.programNumber = programNumber;
  }


  public ContainerSettingsM2tsSettings rateMode(M2tsRateMode rateMode) {
    this.rateMode = rateMode;
    return this;
  }

  /**
   * Get rateMode
   * @return rateMode
   */
  @javax.annotation.Nullable
  public M2tsRateMode getRateMode() {
    return rateMode;
  }

  public void setRateMode(M2tsRateMode rateMode) {
    this.rateMode = rateMode;
  }


  public ContainerSettingsM2tsSettings scte35Esam(M2tsSettingsScte35Esam scte35Esam) {
    this.scte35Esam = scte35Esam;
    return this;
  }

  /**
   * Get scte35Esam
   * @return scte35Esam
   */
  @javax.annotation.Nullable
  public M2tsSettingsScte35Esam getScte35Esam() {
    return scte35Esam;
  }

  public void setScte35Esam(M2tsSettingsScte35Esam scte35Esam) {
    this.scte35Esam = scte35Esam;
  }


  public ContainerSettingsM2tsSettings scte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
    return this;
  }

  /**
   * Get scte35Pid
   * @return scte35Pid
   */
  @javax.annotation.Nullable
  public Integer getScte35Pid() {
    return scte35Pid;
  }

  public void setScte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
  }


  public ContainerSettingsM2tsSettings scte35Source(M2tsScte35Source scte35Source) {
    this.scte35Source = scte35Source;
    return this;
  }

  /**
   * Get scte35Source
   * @return scte35Source
   */
  @javax.annotation.Nullable
  public M2tsScte35Source getScte35Source() {
    return scte35Source;
  }

  public void setScte35Source(M2tsScte35Source scte35Source) {
    this.scte35Source = scte35Source;
  }


  public ContainerSettingsM2tsSettings segmentationMarkers(M2tsSegmentationMarkers segmentationMarkers) {
    this.segmentationMarkers = segmentationMarkers;
    return this;
  }

  /**
   * Get segmentationMarkers
   * @return segmentationMarkers
   */
  @javax.annotation.Nullable
  public M2tsSegmentationMarkers getSegmentationMarkers() {
    return segmentationMarkers;
  }

  public void setSegmentationMarkers(M2tsSegmentationMarkers segmentationMarkers) {
    this.segmentationMarkers = segmentationMarkers;
  }


  public ContainerSettingsM2tsSettings segmentationStyle(M2tsSegmentationStyle segmentationStyle) {
    this.segmentationStyle = segmentationStyle;
    return this;
  }

  /**
   * Get segmentationStyle
   * @return segmentationStyle
   */
  @javax.annotation.Nullable
  public M2tsSegmentationStyle getSegmentationStyle() {
    return segmentationStyle;
  }

  public void setSegmentationStyle(M2tsSegmentationStyle segmentationStyle) {
    this.segmentationStyle = segmentationStyle;
  }


  public ContainerSettingsM2tsSettings segmentationTime(Double segmentationTime) {
    this.segmentationTime = segmentationTime;
    return this;
  }

  /**
   * Get segmentationTime
   * @return segmentationTime
   */
  @javax.annotation.Nullable
  public Double getSegmentationTime() {
    return segmentationTime;
  }

  public void setSegmentationTime(Double segmentationTime) {
    this.segmentationTime = segmentationTime;
  }


  public ContainerSettingsM2tsSettings timedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
    return this;
  }

  /**
   * Get timedMetadataPid
   * @return timedMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getTimedMetadataPid() {
    return timedMetadataPid;
  }

  public void setTimedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
  }


  public ContainerSettingsM2tsSettings transportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
    return this;
  }

  /**
   * Get transportStreamId
   * @return transportStreamId
   */
  @javax.annotation.Nullable
  public Integer getTransportStreamId() {
    return transportStreamId;
  }

  public void setTransportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
  }


  public ContainerSettingsM2tsSettings videoPid(Integer videoPid) {
    this.videoPid = videoPid;
    return this;
  }

  /**
   * Get videoPid
   * @return videoPid
   */
  @javax.annotation.Nullable
  public Integer getVideoPid() {
    return videoPid;
  }

  public void setVideoPid(Integer videoPid) {
    this.videoPid = videoPid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerSettingsM2tsSettings containerSettingsM2tsSettings = (ContainerSettingsM2tsSettings) o;
    return Objects.equals(this.audioBufferModel, containerSettingsM2tsSettings.audioBufferModel) &&
        Objects.equals(this.audioDuration, containerSettingsM2tsSettings.audioDuration) &&
        Objects.equals(this.audioFramesPerPes, containerSettingsM2tsSettings.audioFramesPerPes) &&
        Objects.equals(this.audioPids, containerSettingsM2tsSettings.audioPids) &&
        Objects.equals(this.bitrate, containerSettingsM2tsSettings.bitrate) &&
        Objects.equals(this.bufferModel, containerSettingsM2tsSettings.bufferModel) &&
        Objects.equals(this.dataPTSControl, containerSettingsM2tsSettings.dataPTSControl) &&
        Objects.equals(this.dvbNitSettings, containerSettingsM2tsSettings.dvbNitSettings) &&
        Objects.equals(this.dvbSdtSettings, containerSettingsM2tsSettings.dvbSdtSettings) &&
        Objects.equals(this.dvbSubPids, containerSettingsM2tsSettings.dvbSubPids) &&
        Objects.equals(this.dvbTdtSettings, containerSettingsM2tsSettings.dvbTdtSettings) &&
        Objects.equals(this.dvbTeletextPid, containerSettingsM2tsSettings.dvbTeletextPid) &&
        Objects.equals(this.ebpAudioInterval, containerSettingsM2tsSettings.ebpAudioInterval) &&
        Objects.equals(this.ebpPlacement, containerSettingsM2tsSettings.ebpPlacement) &&
        Objects.equals(this.esRateInPes, containerSettingsM2tsSettings.esRateInPes) &&
        Objects.equals(this.forceTsVideoEbpOrder, containerSettingsM2tsSettings.forceTsVideoEbpOrder) &&
        Objects.equals(this.fragmentTime, containerSettingsM2tsSettings.fragmentTime) &&
        Objects.equals(this.klvMetadata, containerSettingsM2tsSettings.klvMetadata) &&
        Objects.equals(this.maxPcrInterval, containerSettingsM2tsSettings.maxPcrInterval) &&
        Objects.equals(this.minEbpInterval, containerSettingsM2tsSettings.minEbpInterval) &&
        Objects.equals(this.nielsenId3, containerSettingsM2tsSettings.nielsenId3) &&
        Objects.equals(this.nullPacketBitrate, containerSettingsM2tsSettings.nullPacketBitrate) &&
        Objects.equals(this.patInterval, containerSettingsM2tsSettings.patInterval) &&
        Objects.equals(this.pcrControl, containerSettingsM2tsSettings.pcrControl) &&
        Objects.equals(this.pcrPid, containerSettingsM2tsSettings.pcrPid) &&
        Objects.equals(this.pmtInterval, containerSettingsM2tsSettings.pmtInterval) &&
        Objects.equals(this.pmtPid, containerSettingsM2tsSettings.pmtPid) &&
        Objects.equals(this.privateMetadataPid, containerSettingsM2tsSettings.privateMetadataPid) &&
        Objects.equals(this.programNumber, containerSettingsM2tsSettings.programNumber) &&
        Objects.equals(this.rateMode, containerSettingsM2tsSettings.rateMode) &&
        Objects.equals(this.scte35Esam, containerSettingsM2tsSettings.scte35Esam) &&
        Objects.equals(this.scte35Pid, containerSettingsM2tsSettings.scte35Pid) &&
        Objects.equals(this.scte35Source, containerSettingsM2tsSettings.scte35Source) &&
        Objects.equals(this.segmentationMarkers, containerSettingsM2tsSettings.segmentationMarkers) &&
        Objects.equals(this.segmentationStyle, containerSettingsM2tsSettings.segmentationStyle) &&
        Objects.equals(this.segmentationTime, containerSettingsM2tsSettings.segmentationTime) &&
        Objects.equals(this.timedMetadataPid, containerSettingsM2tsSettings.timedMetadataPid) &&
        Objects.equals(this.transportStreamId, containerSettingsM2tsSettings.transportStreamId) &&
        Objects.equals(this.videoPid, containerSettingsM2tsSettings.videoPid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioBufferModel, audioDuration, audioFramesPerPes, audioPids, bitrate, bufferModel, dataPTSControl, dvbNitSettings, dvbSdtSettings, dvbSubPids, dvbTdtSettings, dvbTeletextPid, ebpAudioInterval, ebpPlacement, esRateInPes, forceTsVideoEbpOrder, fragmentTime, klvMetadata, maxPcrInterval, minEbpInterval, nielsenId3, nullPacketBitrate, patInterval, pcrControl, pcrPid, pmtInterval, pmtPid, privateMetadataPid, programNumber, rateMode, scte35Esam, scte35Pid, scte35Source, segmentationMarkers, segmentationStyle, segmentationTime, timedMetadataPid, transportStreamId, videoPid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerSettingsM2tsSettings {\n");
    sb.append("    audioBufferModel: ").append(toIndentedString(audioBufferModel)).append("\n");
    sb.append("    audioDuration: ").append(toIndentedString(audioDuration)).append("\n");
    sb.append("    audioFramesPerPes: ").append(toIndentedString(audioFramesPerPes)).append("\n");
    sb.append("    audioPids: ").append(toIndentedString(audioPids)).append("\n");
    sb.append("    bitrate: ").append(toIndentedString(bitrate)).append("\n");
    sb.append("    bufferModel: ").append(toIndentedString(bufferModel)).append("\n");
    sb.append("    dataPTSControl: ").append(toIndentedString(dataPTSControl)).append("\n");
    sb.append("    dvbNitSettings: ").append(toIndentedString(dvbNitSettings)).append("\n");
    sb.append("    dvbSdtSettings: ").append(toIndentedString(dvbSdtSettings)).append("\n");
    sb.append("    dvbSubPids: ").append(toIndentedString(dvbSubPids)).append("\n");
    sb.append("    dvbTdtSettings: ").append(toIndentedString(dvbTdtSettings)).append("\n");
    sb.append("    dvbTeletextPid: ").append(toIndentedString(dvbTeletextPid)).append("\n");
    sb.append("    ebpAudioInterval: ").append(toIndentedString(ebpAudioInterval)).append("\n");
    sb.append("    ebpPlacement: ").append(toIndentedString(ebpPlacement)).append("\n");
    sb.append("    esRateInPes: ").append(toIndentedString(esRateInPes)).append("\n");
    sb.append("    forceTsVideoEbpOrder: ").append(toIndentedString(forceTsVideoEbpOrder)).append("\n");
    sb.append("    fragmentTime: ").append(toIndentedString(fragmentTime)).append("\n");
    sb.append("    klvMetadata: ").append(toIndentedString(klvMetadata)).append("\n");
    sb.append("    maxPcrInterval: ").append(toIndentedString(maxPcrInterval)).append("\n");
    sb.append("    minEbpInterval: ").append(toIndentedString(minEbpInterval)).append("\n");
    sb.append("    nielsenId3: ").append(toIndentedString(nielsenId3)).append("\n");
    sb.append("    nullPacketBitrate: ").append(toIndentedString(nullPacketBitrate)).append("\n");
    sb.append("    patInterval: ").append(toIndentedString(patInterval)).append("\n");
    sb.append("    pcrControl: ").append(toIndentedString(pcrControl)).append("\n");
    sb.append("    pcrPid: ").append(toIndentedString(pcrPid)).append("\n");
    sb.append("    pmtInterval: ").append(toIndentedString(pmtInterval)).append("\n");
    sb.append("    pmtPid: ").append(toIndentedString(pmtPid)).append("\n");
    sb.append("    privateMetadataPid: ").append(toIndentedString(privateMetadataPid)).append("\n");
    sb.append("    programNumber: ").append(toIndentedString(programNumber)).append("\n");
    sb.append("    rateMode: ").append(toIndentedString(rateMode)).append("\n");
    sb.append("    scte35Esam: ").append(toIndentedString(scte35Esam)).append("\n");
    sb.append("    scte35Pid: ").append(toIndentedString(scte35Pid)).append("\n");
    sb.append("    scte35Source: ").append(toIndentedString(scte35Source)).append("\n");
    sb.append("    segmentationMarkers: ").append(toIndentedString(segmentationMarkers)).append("\n");
    sb.append("    segmentationStyle: ").append(toIndentedString(segmentationStyle)).append("\n");
    sb.append("    segmentationTime: ").append(toIndentedString(segmentationTime)).append("\n");
    sb.append("    timedMetadataPid: ").append(toIndentedString(timedMetadataPid)).append("\n");
    sb.append("    transportStreamId: ").append(toIndentedString(transportStreamId)).append("\n");
    sb.append("    videoPid: ").append(toIndentedString(videoPid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioBufferModel");
    openapiFields.add("AudioDuration");
    openapiFields.add("AudioFramesPerPes");
    openapiFields.add("AudioPids");
    openapiFields.add("Bitrate");
    openapiFields.add("BufferModel");
    openapiFields.add("DataPTSControl");
    openapiFields.add("DvbNitSettings");
    openapiFields.add("DvbSdtSettings");
    openapiFields.add("DvbSubPids");
    openapiFields.add("DvbTdtSettings");
    openapiFields.add("DvbTeletextPid");
    openapiFields.add("EbpAudioInterval");
    openapiFields.add("EbpPlacement");
    openapiFields.add("EsRateInPes");
    openapiFields.add("ForceTsVideoEbpOrder");
    openapiFields.add("FragmentTime");
    openapiFields.add("KlvMetadata");
    openapiFields.add("MaxPcrInterval");
    openapiFields.add("MinEbpInterval");
    openapiFields.add("NielsenId3");
    openapiFields.add("NullPacketBitrate");
    openapiFields.add("PatInterval");
    openapiFields.add("PcrControl");
    openapiFields.add("PcrPid");
    openapiFields.add("PmtInterval");
    openapiFields.add("PmtPid");
    openapiFields.add("PrivateMetadataPid");
    openapiFields.add("ProgramNumber");
    openapiFields.add("RateMode");
    openapiFields.add("Scte35Esam");
    openapiFields.add("Scte35Pid");
    openapiFields.add("Scte35Source");
    openapiFields.add("SegmentationMarkers");
    openapiFields.add("SegmentationStyle");
    openapiFields.add("SegmentationTime");
    openapiFields.add("TimedMetadataPid");
    openapiFields.add("TransportStreamId");
    openapiFields.add("VideoPid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContainerSettingsM2tsSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContainerSettingsM2tsSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContainerSettingsM2tsSettings is not found in the empty JSON string", ContainerSettingsM2tsSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContainerSettingsM2tsSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContainerSettingsM2tsSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioBufferModel`
      if (jsonObj.get("AudioBufferModel") != null && !jsonObj.get("AudioBufferModel").isJsonNull()) {
        M2tsAudioBufferModel.validateJsonElement(jsonObj.get("AudioBufferModel"));
      }
      // validate the optional field `AudioDuration`
      if (jsonObj.get("AudioDuration") != null && !jsonObj.get("AudioDuration").isJsonNull()) {
        M2tsAudioDuration.validateJsonElement(jsonObj.get("AudioDuration"));
      }
      // validate the optional field `AudioFramesPerPes`
      if (jsonObj.get("AudioFramesPerPes") != null && !jsonObj.get("AudioFramesPerPes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AudioFramesPerPes"));
      }
      // validate the optional field `AudioPids`
      if (jsonObj.get("AudioPids") != null && !jsonObj.get("AudioPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AudioPids"));
      }
      // validate the optional field `Bitrate`
      if (jsonObj.get("Bitrate") != null && !jsonObj.get("Bitrate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Bitrate"));
      }
      // validate the optional field `BufferModel`
      if (jsonObj.get("BufferModel") != null && !jsonObj.get("BufferModel").isJsonNull()) {
        M2tsBufferModel.validateJsonElement(jsonObj.get("BufferModel"));
      }
      // validate the optional field `DataPTSControl`
      if (jsonObj.get("DataPTSControl") != null && !jsonObj.get("DataPTSControl").isJsonNull()) {
        M2tsDataPtsControl.validateJsonElement(jsonObj.get("DataPTSControl"));
      }
      // validate the optional field `DvbNitSettings`
      if (jsonObj.get("DvbNitSettings") != null && !jsonObj.get("DvbNitSettings").isJsonNull()) {
        M2tsSettingsDvbNitSettings.validateJsonElement(jsonObj.get("DvbNitSettings"));
      }
      // validate the optional field `DvbSdtSettings`
      if (jsonObj.get("DvbSdtSettings") != null && !jsonObj.get("DvbSdtSettings").isJsonNull()) {
        M2tsSettingsDvbSdtSettings.validateJsonElement(jsonObj.get("DvbSdtSettings"));
      }
      // validate the optional field `DvbSubPids`
      if (jsonObj.get("DvbSubPids") != null && !jsonObj.get("DvbSubPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DvbSubPids"));
      }
      // validate the optional field `DvbTdtSettings`
      if (jsonObj.get("DvbTdtSettings") != null && !jsonObj.get("DvbTdtSettings").isJsonNull()) {
        M2tsSettingsDvbTdtSettings.validateJsonElement(jsonObj.get("DvbTdtSettings"));
      }
      // validate the optional field `DvbTeletextPid`
      if (jsonObj.get("DvbTeletextPid") != null && !jsonObj.get("DvbTeletextPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DvbTeletextPid"));
      }
      // validate the optional field `EbpAudioInterval`
      if (jsonObj.get("EbpAudioInterval") != null && !jsonObj.get("EbpAudioInterval").isJsonNull()) {
        M2tsEbpAudioInterval.validateJsonElement(jsonObj.get("EbpAudioInterval"));
      }
      // validate the optional field `EbpPlacement`
      if (jsonObj.get("EbpPlacement") != null && !jsonObj.get("EbpPlacement").isJsonNull()) {
        M2tsEbpPlacement.validateJsonElement(jsonObj.get("EbpPlacement"));
      }
      // validate the optional field `EsRateInPes`
      if (jsonObj.get("EsRateInPes") != null && !jsonObj.get("EsRateInPes").isJsonNull()) {
        M2tsEsRateInPes.validateJsonElement(jsonObj.get("EsRateInPes"));
      }
      // validate the optional field `ForceTsVideoEbpOrder`
      if (jsonObj.get("ForceTsVideoEbpOrder") != null && !jsonObj.get("ForceTsVideoEbpOrder").isJsonNull()) {
        M2tsForceTsVideoEbpOrder.validateJsonElement(jsonObj.get("ForceTsVideoEbpOrder"));
      }
      // validate the optional field `FragmentTime`
      if (jsonObj.get("FragmentTime") != null && !jsonObj.get("FragmentTime").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("FragmentTime"));
      }
      // validate the optional field `KlvMetadata`
      if (jsonObj.get("KlvMetadata") != null && !jsonObj.get("KlvMetadata").isJsonNull()) {
        M2tsKlvMetadata.validateJsonElement(jsonObj.get("KlvMetadata"));
      }
      // validate the optional field `MaxPcrInterval`
      if (jsonObj.get("MaxPcrInterval") != null && !jsonObj.get("MaxPcrInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxPcrInterval"));
      }
      // validate the optional field `MinEbpInterval`
      if (jsonObj.get("MinEbpInterval") != null && !jsonObj.get("MinEbpInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinEbpInterval"));
      }
      // validate the optional field `NielsenId3`
      if (jsonObj.get("NielsenId3") != null && !jsonObj.get("NielsenId3").isJsonNull()) {
        M2tsNielsenId3.validateJsonElement(jsonObj.get("NielsenId3"));
      }
      // validate the optional field `NullPacketBitrate`
      if (jsonObj.get("NullPacketBitrate") != null && !jsonObj.get("NullPacketBitrate").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("NullPacketBitrate"));
      }
      // validate the optional field `PatInterval`
      if (jsonObj.get("PatInterval") != null && !jsonObj.get("PatInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PatInterval"));
      }
      // validate the optional field `PcrControl`
      if (jsonObj.get("PcrControl") != null && !jsonObj.get("PcrControl").isJsonNull()) {
        M2tsPcrControl.validateJsonElement(jsonObj.get("PcrControl"));
      }
      // validate the optional field `PcrPid`
      if (jsonObj.get("PcrPid") != null && !jsonObj.get("PcrPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PcrPid"));
      }
      // validate the optional field `PmtInterval`
      if (jsonObj.get("PmtInterval") != null && !jsonObj.get("PmtInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtInterval"));
      }
      // validate the optional field `PmtPid`
      if (jsonObj.get("PmtPid") != null && !jsonObj.get("PmtPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtPid"));
      }
      // validate the optional field `PrivateMetadataPid`
      if (jsonObj.get("PrivateMetadataPid") != null && !jsonObj.get("PrivateMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PrivateMetadataPid"));
      }
      // validate the optional field `ProgramNumber`
      if (jsonObj.get("ProgramNumber") != null && !jsonObj.get("ProgramNumber").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProgramNumber"));
      }
      // validate the optional field `RateMode`
      if (jsonObj.get("RateMode") != null && !jsonObj.get("RateMode").isJsonNull()) {
        M2tsRateMode.validateJsonElement(jsonObj.get("RateMode"));
      }
      // validate the optional field `Scte35Esam`
      if (jsonObj.get("Scte35Esam") != null && !jsonObj.get("Scte35Esam").isJsonNull()) {
        M2tsSettingsScte35Esam.validateJsonElement(jsonObj.get("Scte35Esam"));
      }
      // validate the optional field `Scte35Pid`
      if (jsonObj.get("Scte35Pid") != null && !jsonObj.get("Scte35Pid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Scte35Pid"));
      }
      // validate the optional field `Scte35Source`
      if (jsonObj.get("Scte35Source") != null && !jsonObj.get("Scte35Source").isJsonNull()) {
        M2tsScte35Source.validateJsonElement(jsonObj.get("Scte35Source"));
      }
      // validate the optional field `SegmentationMarkers`
      if (jsonObj.get("SegmentationMarkers") != null && !jsonObj.get("SegmentationMarkers").isJsonNull()) {
        M2tsSegmentationMarkers.validateJsonElement(jsonObj.get("SegmentationMarkers"));
      }
      // validate the optional field `SegmentationStyle`
      if (jsonObj.get("SegmentationStyle") != null && !jsonObj.get("SegmentationStyle").isJsonNull()) {
        M2tsSegmentationStyle.validateJsonElement(jsonObj.get("SegmentationStyle"));
      }
      // validate the optional field `SegmentationTime`
      if (jsonObj.get("SegmentationTime") != null && !jsonObj.get("SegmentationTime").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("SegmentationTime"));
      }
      // validate the optional field `TimedMetadataPid`
      if (jsonObj.get("TimedMetadataPid") != null && !jsonObj.get("TimedMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimedMetadataPid"));
      }
      // validate the optional field `TransportStreamId`
      if (jsonObj.get("TransportStreamId") != null && !jsonObj.get("TransportStreamId").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TransportStreamId"));
      }
      // validate the optional field `VideoPid`
      if (jsonObj.get("VideoPid") != null && !jsonObj.get("VideoPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VideoPid"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContainerSettingsM2tsSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContainerSettingsM2tsSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContainerSettingsM2tsSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContainerSettingsM2tsSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<ContainerSettingsM2tsSettings>() {
           @Override
           public void write(JsonWriter out, ContainerSettingsM2tsSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContainerSettingsM2tsSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContainerSettingsM2tsSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContainerSettingsM2tsSettings
   * @throws IOException if the JSON string is invalid with respect to ContainerSettingsM2tsSettings
   */
  public static ContainerSettingsM2tsSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContainerSettingsM2tsSettings.class);
  }

  /**
   * Convert an instance of ContainerSettingsM2tsSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

