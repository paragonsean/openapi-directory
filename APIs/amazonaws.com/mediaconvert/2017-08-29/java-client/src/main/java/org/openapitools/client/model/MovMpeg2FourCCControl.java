/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * When set to XDCAM, writes MPEG2 video streams into the QuickTime file using XDCAM fourcc codes. This increases compatibility with Apple editors and players, but may decrease compatibility with other players. Only applicable when the video codec is MPEG2.
 */
@JsonAdapter(MovMpeg2FourCCControl.Adapter.class)
public enum MovMpeg2FourCCControl {
  
  XDCAM("XDCAM"),
  
  MPEG("MPEG");

  private String value;

  MovMpeg2FourCCControl(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MovMpeg2FourCCControl fromValue(String value) {
    for (MovMpeg2FourCCControl b : MovMpeg2FourCCControl.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MovMpeg2FourCCControl> {
    @Override
    public void write(final JsonWriter jsonWriter, final MovMpeg2FourCCControl enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MovMpeg2FourCCControl read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MovMpeg2FourCCControl.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    MovMpeg2FourCCControl.fromValue(value);
  }
}

