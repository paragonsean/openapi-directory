/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CmfcAudioDuration;
import org.openapitools.client.model.CmfcAudioTrackType;
import org.openapitools.client.model.CmfcDescriptiveVideoServiceFlag;
import org.openapitools.client.model.CmfcIFrameOnlyManifest;
import org.openapitools.client.model.CmfcKlvMetadata;
import org.openapitools.client.model.CmfcManifestMetadataSignaling;
import org.openapitools.client.model.CmfcScte35Esam;
import org.openapitools.client.model.CmfcScte35Source;
import org.openapitools.client.model.CmfcTimedMetadata;
import org.openapitools.client.model.CmfcTimedMetadataBoxVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * These settings relate to the fragmented MP4 container for the segments in your CMAF outputs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CmfcSettings {
  public static final String SERIALIZED_NAME_AUDIO_DURATION = "AudioDuration";
  @SerializedName(SERIALIZED_NAME_AUDIO_DURATION)
  private CmfcAudioDuration audioDuration;

  public static final String SERIALIZED_NAME_AUDIO_GROUP_ID = "AudioGroupId";
  @SerializedName(SERIALIZED_NAME_AUDIO_GROUP_ID)
  private String audioGroupId;

  public static final String SERIALIZED_NAME_AUDIO_RENDITION_SETS = "AudioRenditionSets";
  @SerializedName(SERIALIZED_NAME_AUDIO_RENDITION_SETS)
  private String audioRenditionSets;

  public static final String SERIALIZED_NAME_AUDIO_TRACK_TYPE = "AudioTrackType";
  @SerializedName(SERIALIZED_NAME_AUDIO_TRACK_TYPE)
  private CmfcAudioTrackType audioTrackType;

  public static final String SERIALIZED_NAME_DESCRIPTIVE_VIDEO_SERVICE_FLAG = "DescriptiveVideoServiceFlag";
  @SerializedName(SERIALIZED_NAME_DESCRIPTIVE_VIDEO_SERVICE_FLAG)
  private CmfcDescriptiveVideoServiceFlag descriptiveVideoServiceFlag;

  public static final String SERIALIZED_NAME_IFRAME_ONLY_MANIFEST = "IFrameOnlyManifest";
  @SerializedName(SERIALIZED_NAME_IFRAME_ONLY_MANIFEST)
  private CmfcIFrameOnlyManifest iframeOnlyManifest;

  public static final String SERIALIZED_NAME_KLV_METADATA = "KlvMetadata";
  @SerializedName(SERIALIZED_NAME_KLV_METADATA)
  private CmfcKlvMetadata klvMetadata;

  public static final String SERIALIZED_NAME_MANIFEST_METADATA_SIGNALING = "ManifestMetadataSignaling";
  @SerializedName(SERIALIZED_NAME_MANIFEST_METADATA_SIGNALING)
  private CmfcManifestMetadataSignaling manifestMetadataSignaling;

  public static final String SERIALIZED_NAME_SCTE35_ESAM = "Scte35Esam";
  @SerializedName(SERIALIZED_NAME_SCTE35_ESAM)
  private CmfcScte35Esam scte35Esam;

  public static final String SERIALIZED_NAME_SCTE35_SOURCE = "Scte35Source";
  @SerializedName(SERIALIZED_NAME_SCTE35_SOURCE)
  private CmfcScte35Source scte35Source;

  public static final String SERIALIZED_NAME_TIMED_METADATA = "TimedMetadata";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA)
  private CmfcTimedMetadata timedMetadata;

  public static final String SERIALIZED_NAME_TIMED_METADATA_BOX_VERSION = "TimedMetadataBoxVersion";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_BOX_VERSION)
  private CmfcTimedMetadataBoxVersion timedMetadataBoxVersion;

  public static final String SERIALIZED_NAME_TIMED_METADATA_SCHEME_ID_URI = "TimedMetadataSchemeIdUri";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_SCHEME_ID_URI)
  private String timedMetadataSchemeIdUri;

  public static final String SERIALIZED_NAME_TIMED_METADATA_VALUE = "TimedMetadataValue";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_VALUE)
  private String timedMetadataValue;

  public CmfcSettings() {
  }

  public CmfcSettings audioDuration(CmfcAudioDuration audioDuration) {
    this.audioDuration = audioDuration;
    return this;
  }

  /**
   * Get audioDuration
   * @return audioDuration
   */
  @javax.annotation.Nullable
  public CmfcAudioDuration getAudioDuration() {
    return audioDuration;
  }

  public void setAudioDuration(CmfcAudioDuration audioDuration) {
    this.audioDuration = audioDuration;
  }


  public CmfcSettings audioGroupId(String audioGroupId) {
    this.audioGroupId = audioGroupId;
    return this;
  }

  /**
   * Get audioGroupId
   * @return audioGroupId
   */
  @javax.annotation.Nullable
  public String getAudioGroupId() {
    return audioGroupId;
  }

  public void setAudioGroupId(String audioGroupId) {
    this.audioGroupId = audioGroupId;
  }


  public CmfcSettings audioRenditionSets(String audioRenditionSets) {
    this.audioRenditionSets = audioRenditionSets;
    return this;
  }

  /**
   * Get audioRenditionSets
   * @return audioRenditionSets
   */
  @javax.annotation.Nullable
  public String getAudioRenditionSets() {
    return audioRenditionSets;
  }

  public void setAudioRenditionSets(String audioRenditionSets) {
    this.audioRenditionSets = audioRenditionSets;
  }


  public CmfcSettings audioTrackType(CmfcAudioTrackType audioTrackType) {
    this.audioTrackType = audioTrackType;
    return this;
  }

  /**
   * Get audioTrackType
   * @return audioTrackType
   */
  @javax.annotation.Nullable
  public CmfcAudioTrackType getAudioTrackType() {
    return audioTrackType;
  }

  public void setAudioTrackType(CmfcAudioTrackType audioTrackType) {
    this.audioTrackType = audioTrackType;
  }


  public CmfcSettings descriptiveVideoServiceFlag(CmfcDescriptiveVideoServiceFlag descriptiveVideoServiceFlag) {
    this.descriptiveVideoServiceFlag = descriptiveVideoServiceFlag;
    return this;
  }

  /**
   * Get descriptiveVideoServiceFlag
   * @return descriptiveVideoServiceFlag
   */
  @javax.annotation.Nullable
  public CmfcDescriptiveVideoServiceFlag getDescriptiveVideoServiceFlag() {
    return descriptiveVideoServiceFlag;
  }

  public void setDescriptiveVideoServiceFlag(CmfcDescriptiveVideoServiceFlag descriptiveVideoServiceFlag) {
    this.descriptiveVideoServiceFlag = descriptiveVideoServiceFlag;
  }


  public CmfcSettings iframeOnlyManifest(CmfcIFrameOnlyManifest iframeOnlyManifest) {
    this.iframeOnlyManifest = iframeOnlyManifest;
    return this;
  }

  /**
   * Get iframeOnlyManifest
   * @return iframeOnlyManifest
   */
  @javax.annotation.Nullable
  public CmfcIFrameOnlyManifest getIframeOnlyManifest() {
    return iframeOnlyManifest;
  }

  public void setIframeOnlyManifest(CmfcIFrameOnlyManifest iframeOnlyManifest) {
    this.iframeOnlyManifest = iframeOnlyManifest;
  }


  public CmfcSettings klvMetadata(CmfcKlvMetadata klvMetadata) {
    this.klvMetadata = klvMetadata;
    return this;
  }

  /**
   * Get klvMetadata
   * @return klvMetadata
   */
  @javax.annotation.Nullable
  public CmfcKlvMetadata getKlvMetadata() {
    return klvMetadata;
  }

  public void setKlvMetadata(CmfcKlvMetadata klvMetadata) {
    this.klvMetadata = klvMetadata;
  }


  public CmfcSettings manifestMetadataSignaling(CmfcManifestMetadataSignaling manifestMetadataSignaling) {
    this.manifestMetadataSignaling = manifestMetadataSignaling;
    return this;
  }

  /**
   * Get manifestMetadataSignaling
   * @return manifestMetadataSignaling
   */
  @javax.annotation.Nullable
  public CmfcManifestMetadataSignaling getManifestMetadataSignaling() {
    return manifestMetadataSignaling;
  }

  public void setManifestMetadataSignaling(CmfcManifestMetadataSignaling manifestMetadataSignaling) {
    this.manifestMetadataSignaling = manifestMetadataSignaling;
  }


  public CmfcSettings scte35Esam(CmfcScte35Esam scte35Esam) {
    this.scte35Esam = scte35Esam;
    return this;
  }

  /**
   * Get scte35Esam
   * @return scte35Esam
   */
  @javax.annotation.Nullable
  public CmfcScte35Esam getScte35Esam() {
    return scte35Esam;
  }

  public void setScte35Esam(CmfcScte35Esam scte35Esam) {
    this.scte35Esam = scte35Esam;
  }


  public CmfcSettings scte35Source(CmfcScte35Source scte35Source) {
    this.scte35Source = scte35Source;
    return this;
  }

  /**
   * Get scte35Source
   * @return scte35Source
   */
  @javax.annotation.Nullable
  public CmfcScte35Source getScte35Source() {
    return scte35Source;
  }

  public void setScte35Source(CmfcScte35Source scte35Source) {
    this.scte35Source = scte35Source;
  }


  public CmfcSettings timedMetadata(CmfcTimedMetadata timedMetadata) {
    this.timedMetadata = timedMetadata;
    return this;
  }

  /**
   * Get timedMetadata
   * @return timedMetadata
   */
  @javax.annotation.Nullable
  public CmfcTimedMetadata getTimedMetadata() {
    return timedMetadata;
  }

  public void setTimedMetadata(CmfcTimedMetadata timedMetadata) {
    this.timedMetadata = timedMetadata;
  }


  public CmfcSettings timedMetadataBoxVersion(CmfcTimedMetadataBoxVersion timedMetadataBoxVersion) {
    this.timedMetadataBoxVersion = timedMetadataBoxVersion;
    return this;
  }

  /**
   * Get timedMetadataBoxVersion
   * @return timedMetadataBoxVersion
   */
  @javax.annotation.Nullable
  public CmfcTimedMetadataBoxVersion getTimedMetadataBoxVersion() {
    return timedMetadataBoxVersion;
  }

  public void setTimedMetadataBoxVersion(CmfcTimedMetadataBoxVersion timedMetadataBoxVersion) {
    this.timedMetadataBoxVersion = timedMetadataBoxVersion;
  }


  public CmfcSettings timedMetadataSchemeIdUri(String timedMetadataSchemeIdUri) {
    this.timedMetadataSchemeIdUri = timedMetadataSchemeIdUri;
    return this;
  }

  /**
   * Get timedMetadataSchemeIdUri
   * @return timedMetadataSchemeIdUri
   */
  @javax.annotation.Nullable
  public String getTimedMetadataSchemeIdUri() {
    return timedMetadataSchemeIdUri;
  }

  public void setTimedMetadataSchemeIdUri(String timedMetadataSchemeIdUri) {
    this.timedMetadataSchemeIdUri = timedMetadataSchemeIdUri;
  }


  public CmfcSettings timedMetadataValue(String timedMetadataValue) {
    this.timedMetadataValue = timedMetadataValue;
    return this;
  }

  /**
   * Get timedMetadataValue
   * @return timedMetadataValue
   */
  @javax.annotation.Nullable
  public String getTimedMetadataValue() {
    return timedMetadataValue;
  }

  public void setTimedMetadataValue(String timedMetadataValue) {
    this.timedMetadataValue = timedMetadataValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CmfcSettings cmfcSettings = (CmfcSettings) o;
    return Objects.equals(this.audioDuration, cmfcSettings.audioDuration) &&
        Objects.equals(this.audioGroupId, cmfcSettings.audioGroupId) &&
        Objects.equals(this.audioRenditionSets, cmfcSettings.audioRenditionSets) &&
        Objects.equals(this.audioTrackType, cmfcSettings.audioTrackType) &&
        Objects.equals(this.descriptiveVideoServiceFlag, cmfcSettings.descriptiveVideoServiceFlag) &&
        Objects.equals(this.iframeOnlyManifest, cmfcSettings.iframeOnlyManifest) &&
        Objects.equals(this.klvMetadata, cmfcSettings.klvMetadata) &&
        Objects.equals(this.manifestMetadataSignaling, cmfcSettings.manifestMetadataSignaling) &&
        Objects.equals(this.scte35Esam, cmfcSettings.scte35Esam) &&
        Objects.equals(this.scte35Source, cmfcSettings.scte35Source) &&
        Objects.equals(this.timedMetadata, cmfcSettings.timedMetadata) &&
        Objects.equals(this.timedMetadataBoxVersion, cmfcSettings.timedMetadataBoxVersion) &&
        Objects.equals(this.timedMetadataSchemeIdUri, cmfcSettings.timedMetadataSchemeIdUri) &&
        Objects.equals(this.timedMetadataValue, cmfcSettings.timedMetadataValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioDuration, audioGroupId, audioRenditionSets, audioTrackType, descriptiveVideoServiceFlag, iframeOnlyManifest, klvMetadata, manifestMetadataSignaling, scte35Esam, scte35Source, timedMetadata, timedMetadataBoxVersion, timedMetadataSchemeIdUri, timedMetadataValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CmfcSettings {\n");
    sb.append("    audioDuration: ").append(toIndentedString(audioDuration)).append("\n");
    sb.append("    audioGroupId: ").append(toIndentedString(audioGroupId)).append("\n");
    sb.append("    audioRenditionSets: ").append(toIndentedString(audioRenditionSets)).append("\n");
    sb.append("    audioTrackType: ").append(toIndentedString(audioTrackType)).append("\n");
    sb.append("    descriptiveVideoServiceFlag: ").append(toIndentedString(descriptiveVideoServiceFlag)).append("\n");
    sb.append("    iframeOnlyManifest: ").append(toIndentedString(iframeOnlyManifest)).append("\n");
    sb.append("    klvMetadata: ").append(toIndentedString(klvMetadata)).append("\n");
    sb.append("    manifestMetadataSignaling: ").append(toIndentedString(manifestMetadataSignaling)).append("\n");
    sb.append("    scte35Esam: ").append(toIndentedString(scte35Esam)).append("\n");
    sb.append("    scte35Source: ").append(toIndentedString(scte35Source)).append("\n");
    sb.append("    timedMetadata: ").append(toIndentedString(timedMetadata)).append("\n");
    sb.append("    timedMetadataBoxVersion: ").append(toIndentedString(timedMetadataBoxVersion)).append("\n");
    sb.append("    timedMetadataSchemeIdUri: ").append(toIndentedString(timedMetadataSchemeIdUri)).append("\n");
    sb.append("    timedMetadataValue: ").append(toIndentedString(timedMetadataValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioDuration");
    openapiFields.add("AudioGroupId");
    openapiFields.add("AudioRenditionSets");
    openapiFields.add("AudioTrackType");
    openapiFields.add("DescriptiveVideoServiceFlag");
    openapiFields.add("IFrameOnlyManifest");
    openapiFields.add("KlvMetadata");
    openapiFields.add("ManifestMetadataSignaling");
    openapiFields.add("Scte35Esam");
    openapiFields.add("Scte35Source");
    openapiFields.add("TimedMetadata");
    openapiFields.add("TimedMetadataBoxVersion");
    openapiFields.add("TimedMetadataSchemeIdUri");
    openapiFields.add("TimedMetadataValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CmfcSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CmfcSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CmfcSettings is not found in the empty JSON string", CmfcSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CmfcSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CmfcSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioDuration`
      if (jsonObj.get("AudioDuration") != null && !jsonObj.get("AudioDuration").isJsonNull()) {
        CmfcAudioDuration.validateJsonElement(jsonObj.get("AudioDuration"));
      }
      // validate the optional field `AudioGroupId`
      if (jsonObj.get("AudioGroupId") != null && !jsonObj.get("AudioGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AudioGroupId"));
      }
      // validate the optional field `AudioRenditionSets`
      if (jsonObj.get("AudioRenditionSets") != null && !jsonObj.get("AudioRenditionSets").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AudioRenditionSets"));
      }
      // validate the optional field `AudioTrackType`
      if (jsonObj.get("AudioTrackType") != null && !jsonObj.get("AudioTrackType").isJsonNull()) {
        CmfcAudioTrackType.validateJsonElement(jsonObj.get("AudioTrackType"));
      }
      // validate the optional field `DescriptiveVideoServiceFlag`
      if (jsonObj.get("DescriptiveVideoServiceFlag") != null && !jsonObj.get("DescriptiveVideoServiceFlag").isJsonNull()) {
        CmfcDescriptiveVideoServiceFlag.validateJsonElement(jsonObj.get("DescriptiveVideoServiceFlag"));
      }
      // validate the optional field `IFrameOnlyManifest`
      if (jsonObj.get("IFrameOnlyManifest") != null && !jsonObj.get("IFrameOnlyManifest").isJsonNull()) {
        CmfcIFrameOnlyManifest.validateJsonElement(jsonObj.get("IFrameOnlyManifest"));
      }
      // validate the optional field `KlvMetadata`
      if (jsonObj.get("KlvMetadata") != null && !jsonObj.get("KlvMetadata").isJsonNull()) {
        CmfcKlvMetadata.validateJsonElement(jsonObj.get("KlvMetadata"));
      }
      // validate the optional field `ManifestMetadataSignaling`
      if (jsonObj.get("ManifestMetadataSignaling") != null && !jsonObj.get("ManifestMetadataSignaling").isJsonNull()) {
        CmfcManifestMetadataSignaling.validateJsonElement(jsonObj.get("ManifestMetadataSignaling"));
      }
      // validate the optional field `Scte35Esam`
      if (jsonObj.get("Scte35Esam") != null && !jsonObj.get("Scte35Esam").isJsonNull()) {
        CmfcScte35Esam.validateJsonElement(jsonObj.get("Scte35Esam"));
      }
      // validate the optional field `Scte35Source`
      if (jsonObj.get("Scte35Source") != null && !jsonObj.get("Scte35Source").isJsonNull()) {
        CmfcScte35Source.validateJsonElement(jsonObj.get("Scte35Source"));
      }
      // validate the optional field `TimedMetadata`
      if (jsonObj.get("TimedMetadata") != null && !jsonObj.get("TimedMetadata").isJsonNull()) {
        CmfcTimedMetadata.validateJsonElement(jsonObj.get("TimedMetadata"));
      }
      // validate the optional field `TimedMetadataBoxVersion`
      if (jsonObj.get("TimedMetadataBoxVersion") != null && !jsonObj.get("TimedMetadataBoxVersion").isJsonNull()) {
        CmfcTimedMetadataBoxVersion.validateJsonElement(jsonObj.get("TimedMetadataBoxVersion"));
      }
      // validate the optional field `TimedMetadataSchemeIdUri`
      if (jsonObj.get("TimedMetadataSchemeIdUri") != null && !jsonObj.get("TimedMetadataSchemeIdUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TimedMetadataSchemeIdUri"));
      }
      // validate the optional field `TimedMetadataValue`
      if (jsonObj.get("TimedMetadataValue") != null && !jsonObj.get("TimedMetadataValue").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TimedMetadataValue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CmfcSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CmfcSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CmfcSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CmfcSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CmfcSettings>() {
           @Override
           public void write(JsonWriter out, CmfcSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CmfcSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CmfcSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CmfcSettings
   * @throws IOException if the JSON string is invalid with respect to CmfcSettings
   */
  public static CmfcSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CmfcSettings.class);
  }

  /**
   * Convert an instance of CmfcSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

