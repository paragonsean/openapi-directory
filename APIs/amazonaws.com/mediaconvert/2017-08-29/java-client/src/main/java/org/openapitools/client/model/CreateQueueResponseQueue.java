/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PricingPlan;
import org.openapitools.client.model.QueueReservationPlan;
import org.openapitools.client.model.QueueStatus;
import org.openapitools.client.model.Type;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateQueueResponseQueue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateQueueResponseQueue {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICING_PLAN = "PricingPlan";
  @SerializedName(SERIALIZED_NAME_PRICING_PLAN)
  private PricingPlan pricingPlan;

  public static final String SERIALIZED_NAME_PROGRESSING_JOBS_COUNT = "ProgressingJobsCount";
  @SerializedName(SERIALIZED_NAME_PROGRESSING_JOBS_COUNT)
  private Integer progressingJobsCount;

  public static final String SERIALIZED_NAME_RESERVATION_PLAN = "ReservationPlan";
  @SerializedName(SERIALIZED_NAME_RESERVATION_PLAN)
  private QueueReservationPlan reservationPlan;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private QueueStatus status;

  public static final String SERIALIZED_NAME_SUBMITTED_JOBS_COUNT = "SubmittedJobsCount";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_JOBS_COUNT)
  private Integer submittedJobsCount;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Type type;

  public CreateQueueResponseQueue() {
  }

  public CreateQueueResponseQueue arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateQueueResponseQueue createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CreateQueueResponseQueue description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateQueueResponseQueue lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public CreateQueueResponseQueue name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateQueueResponseQueue pricingPlan(PricingPlan pricingPlan) {
    this.pricingPlan = pricingPlan;
    return this;
  }

  /**
   * Get pricingPlan
   * @return pricingPlan
   */
  @javax.annotation.Nullable
  public PricingPlan getPricingPlan() {
    return pricingPlan;
  }

  public void setPricingPlan(PricingPlan pricingPlan) {
    this.pricingPlan = pricingPlan;
  }


  public CreateQueueResponseQueue progressingJobsCount(Integer progressingJobsCount) {
    this.progressingJobsCount = progressingJobsCount;
    return this;
  }

  /**
   * Get progressingJobsCount
   * @return progressingJobsCount
   */
  @javax.annotation.Nullable
  public Integer getProgressingJobsCount() {
    return progressingJobsCount;
  }

  public void setProgressingJobsCount(Integer progressingJobsCount) {
    this.progressingJobsCount = progressingJobsCount;
  }


  public CreateQueueResponseQueue reservationPlan(QueueReservationPlan reservationPlan) {
    this.reservationPlan = reservationPlan;
    return this;
  }

  /**
   * Get reservationPlan
   * @return reservationPlan
   */
  @javax.annotation.Nullable
  public QueueReservationPlan getReservationPlan() {
    return reservationPlan;
  }

  public void setReservationPlan(QueueReservationPlan reservationPlan) {
    this.reservationPlan = reservationPlan;
  }


  public CreateQueueResponseQueue status(QueueStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public QueueStatus getStatus() {
    return status;
  }

  public void setStatus(QueueStatus status) {
    this.status = status;
  }


  public CreateQueueResponseQueue submittedJobsCount(Integer submittedJobsCount) {
    this.submittedJobsCount = submittedJobsCount;
    return this;
  }

  /**
   * Get submittedJobsCount
   * @return submittedJobsCount
   */
  @javax.annotation.Nullable
  public Integer getSubmittedJobsCount() {
    return submittedJobsCount;
  }

  public void setSubmittedJobsCount(Integer submittedJobsCount) {
    this.submittedJobsCount = submittedJobsCount;
  }


  public CreateQueueResponseQueue type(Type type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateQueueResponseQueue createQueueResponseQueue = (CreateQueueResponseQueue) o;
    return Objects.equals(this.arn, createQueueResponseQueue.arn) &&
        Objects.equals(this.createdAt, createQueueResponseQueue.createdAt) &&
        Objects.equals(this.description, createQueueResponseQueue.description) &&
        Objects.equals(this.lastUpdated, createQueueResponseQueue.lastUpdated) &&
        Objects.equals(this.name, createQueueResponseQueue.name) &&
        Objects.equals(this.pricingPlan, createQueueResponseQueue.pricingPlan) &&
        Objects.equals(this.progressingJobsCount, createQueueResponseQueue.progressingJobsCount) &&
        Objects.equals(this.reservationPlan, createQueueResponseQueue.reservationPlan) &&
        Objects.equals(this.status, createQueueResponseQueue.status) &&
        Objects.equals(this.submittedJobsCount, createQueueResponseQueue.submittedJobsCount) &&
        Objects.equals(this.type, createQueueResponseQueue.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, createdAt, description, lastUpdated, name, pricingPlan, progressingJobsCount, reservationPlan, status, submittedJobsCount, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateQueueResponseQueue {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pricingPlan: ").append(toIndentedString(pricingPlan)).append("\n");
    sb.append("    progressingJobsCount: ").append(toIndentedString(progressingJobsCount)).append("\n");
    sb.append("    reservationPlan: ").append(toIndentedString(reservationPlan)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submittedJobsCount: ").append(toIndentedString(submittedJobsCount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("CreatedAt");
    openapiFields.add("Description");
    openapiFields.add("LastUpdated");
    openapiFields.add("Name");
    openapiFields.add("PricingPlan");
    openapiFields.add("ProgressingJobsCount");
    openapiFields.add("ReservationPlan");
    openapiFields.add("Status");
    openapiFields.add("SubmittedJobsCount");
    openapiFields.add("Type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateQueueResponseQueue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateQueueResponseQueue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateQueueResponseQueue is not found in the empty JSON string", CreateQueueResponseQueue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateQueueResponseQueue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateQueueResponseQueue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateQueueResponseQueue.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `LastUpdated`
      if (jsonObj.get("LastUpdated") != null && !jsonObj.get("LastUpdated").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdated"));
      }
      // validate the required field `Name`
      String.validateJsonElement(jsonObj.get("Name"));
      // validate the optional field `PricingPlan`
      if (jsonObj.get("PricingPlan") != null && !jsonObj.get("PricingPlan").isJsonNull()) {
        PricingPlan.validateJsonElement(jsonObj.get("PricingPlan"));
      }
      // validate the optional field `ProgressingJobsCount`
      if (jsonObj.get("ProgressingJobsCount") != null && !jsonObj.get("ProgressingJobsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProgressingJobsCount"));
      }
      // validate the optional field `ReservationPlan`
      if (jsonObj.get("ReservationPlan") != null && !jsonObj.get("ReservationPlan").isJsonNull()) {
        QueueReservationPlan.validateJsonElement(jsonObj.get("ReservationPlan"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        QueueStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SubmittedJobsCount`
      if (jsonObj.get("SubmittedJobsCount") != null && !jsonObj.get("SubmittedJobsCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SubmittedJobsCount"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        Type.validateJsonElement(jsonObj.get("Type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateQueueResponseQueue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateQueueResponseQueue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateQueueResponseQueue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateQueueResponseQueue.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateQueueResponseQueue>() {
           @Override
           public void write(JsonWriter out, CreateQueueResponseQueue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateQueueResponseQueue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateQueueResponseQueue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateQueueResponseQueue
   * @throws IOException if the JSON string is invalid with respect to CreateQueueResponseQueue
   */
  public static CreateQueueResponseQueue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateQueueResponseQueue.class);
  }

  /**
   * Convert an instance of CreateQueueResponseQueue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

