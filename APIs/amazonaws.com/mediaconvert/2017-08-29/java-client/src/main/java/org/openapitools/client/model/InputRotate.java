/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Use Rotate to specify how the service rotates your video. You can choose automatic rotation or specify a rotation. You can specify a clockwise rotation of 0, 90, 180, or 270 degrees. If your input video container is .mov or .mp4 and your input has rotation metadata, you can choose Automatic to have the service rotate your video according to the rotation specified in the metadata. The rotation must be within one degree of 90, 180, or 270 degrees. If the rotation metadata specifies any other rotation, the service will default to no rotation. By default, the service does no rotation, even if your input video has rotation metadata. The service doesn&#39;t pass through rotation metadata.
 */
@JsonAdapter(InputRotate.Adapter.class)
public enum InputRotate {
  
  DEGREE_0("DEGREE_0"),
  
  DEGREES_90("DEGREES_90"),
  
  DEGREES_180("DEGREES_180"),
  
  DEGREES_270("DEGREES_270"),
  
  AUTO("AUTO");

  private String value;

  InputRotate(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static InputRotate fromValue(String value) {
    for (InputRotate b : InputRotate.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<InputRotate> {
    @Override
    public void write(final JsonWriter jsonWriter, final InputRotate enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public InputRotate read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return InputRotate.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    InputRotate.fromValue(value);
  }
}

