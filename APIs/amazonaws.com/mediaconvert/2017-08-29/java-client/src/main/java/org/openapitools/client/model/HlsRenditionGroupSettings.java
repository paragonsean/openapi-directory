/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LanguageCode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings specific to audio sources in an HLS alternate rendition group. Specify the properties (renditionGroupId, renditionName or renditionLanguageCode) to identify the unique audio track among the alternative rendition groups present in the HLS manifest. If no unique track is found, or multiple tracks match the properties provided, the job fails. If no properties in hlsRenditionGroupSettings are specified, the default audio track within the video segment is chosen. If there is no audio within video segment, the alternative audio with DEFAULT&#x3D;YES is chosen instead.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HlsRenditionGroupSettings {
  public static final String SERIALIZED_NAME_RENDITION_GROUP_ID = "RenditionGroupId";
  @SerializedName(SERIALIZED_NAME_RENDITION_GROUP_ID)
  private String renditionGroupId;

  public static final String SERIALIZED_NAME_RENDITION_LANGUAGE_CODE = "RenditionLanguageCode";
  @SerializedName(SERIALIZED_NAME_RENDITION_LANGUAGE_CODE)
  private LanguageCode renditionLanguageCode;

  public static final String SERIALIZED_NAME_RENDITION_NAME = "RenditionName";
  @SerializedName(SERIALIZED_NAME_RENDITION_NAME)
  private String renditionName;

  public HlsRenditionGroupSettings() {
  }

  public HlsRenditionGroupSettings renditionGroupId(String renditionGroupId) {
    this.renditionGroupId = renditionGroupId;
    return this;
  }

  /**
   * Get renditionGroupId
   * @return renditionGroupId
   */
  @javax.annotation.Nullable
  public String getRenditionGroupId() {
    return renditionGroupId;
  }

  public void setRenditionGroupId(String renditionGroupId) {
    this.renditionGroupId = renditionGroupId;
  }


  public HlsRenditionGroupSettings renditionLanguageCode(LanguageCode renditionLanguageCode) {
    this.renditionLanguageCode = renditionLanguageCode;
    return this;
  }

  /**
   * Get renditionLanguageCode
   * @return renditionLanguageCode
   */
  @javax.annotation.Nullable
  public LanguageCode getRenditionLanguageCode() {
    return renditionLanguageCode;
  }

  public void setRenditionLanguageCode(LanguageCode renditionLanguageCode) {
    this.renditionLanguageCode = renditionLanguageCode;
  }


  public HlsRenditionGroupSettings renditionName(String renditionName) {
    this.renditionName = renditionName;
    return this;
  }

  /**
   * Get renditionName
   * @return renditionName
   */
  @javax.annotation.Nullable
  public String getRenditionName() {
    return renditionName;
  }

  public void setRenditionName(String renditionName) {
    this.renditionName = renditionName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HlsRenditionGroupSettings hlsRenditionGroupSettings = (HlsRenditionGroupSettings) o;
    return Objects.equals(this.renditionGroupId, hlsRenditionGroupSettings.renditionGroupId) &&
        Objects.equals(this.renditionLanguageCode, hlsRenditionGroupSettings.renditionLanguageCode) &&
        Objects.equals(this.renditionName, hlsRenditionGroupSettings.renditionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(renditionGroupId, renditionLanguageCode, renditionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HlsRenditionGroupSettings {\n");
    sb.append("    renditionGroupId: ").append(toIndentedString(renditionGroupId)).append("\n");
    sb.append("    renditionLanguageCode: ").append(toIndentedString(renditionLanguageCode)).append("\n");
    sb.append("    renditionName: ").append(toIndentedString(renditionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RenditionGroupId");
    openapiFields.add("RenditionLanguageCode");
    openapiFields.add("RenditionName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HlsRenditionGroupSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HlsRenditionGroupSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HlsRenditionGroupSettings is not found in the empty JSON string", HlsRenditionGroupSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HlsRenditionGroupSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HlsRenditionGroupSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RenditionGroupId`
      if (jsonObj.get("RenditionGroupId") != null && !jsonObj.get("RenditionGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RenditionGroupId"));
      }
      // validate the optional field `RenditionLanguageCode`
      if (jsonObj.get("RenditionLanguageCode") != null && !jsonObj.get("RenditionLanguageCode").isJsonNull()) {
        LanguageCode.validateJsonElement(jsonObj.get("RenditionLanguageCode"));
      }
      // validate the optional field `RenditionName`
      if (jsonObj.get("RenditionName") != null && !jsonObj.get("RenditionName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RenditionName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HlsRenditionGroupSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HlsRenditionGroupSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HlsRenditionGroupSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HlsRenditionGroupSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<HlsRenditionGroupSettings>() {
           @Override
           public void write(JsonWriter out, HlsRenditionGroupSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HlsRenditionGroupSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HlsRenditionGroupSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HlsRenditionGroupSettings
   * @throws IOException if the JSON string is invalid with respect to HlsRenditionGroupSettings
   */
  public static HlsRenditionGroupSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HlsRenditionGroupSettings.class);
  }

  /**
   * Convert an instance of HlsRenditionGroupSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

