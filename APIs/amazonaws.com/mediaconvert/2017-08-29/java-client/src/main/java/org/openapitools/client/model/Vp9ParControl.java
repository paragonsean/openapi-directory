/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Optional. Specify how the service determines the pixel aspect ratio (PAR) for this output. The default behavior, Follow source, uses the PAR from your input video for your output. To specify a different PAR in the console, choose any value other than Follow source. When you choose SPECIFIED for this setting, you must also specify values for the parNumerator and parDenominator settings.
 */
@JsonAdapter(Vp9ParControl.Adapter.class)
public enum Vp9ParControl {
  
  INITIALIZE_FROM_SOURCE("INITIALIZE_FROM_SOURCE"),
  
  SPECIFIED("SPECIFIED");

  private String value;

  Vp9ParControl(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Vp9ParControl fromValue(String value) {
    for (Vp9ParControl b : Vp9ParControl.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Vp9ParControl> {
    @Override
    public void write(final JsonWriter jsonWriter, final Vp9ParControl enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Vp9ParControl read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Vp9ParControl.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Vp9ParControl.fromValue(value);
  }
}

