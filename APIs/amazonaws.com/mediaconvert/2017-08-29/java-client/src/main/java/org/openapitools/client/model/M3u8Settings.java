/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.M3u8AudioDuration;
import org.openapitools.client.model.M3u8DataPtsControl;
import org.openapitools.client.model.M3u8NielsenId3;
import org.openapitools.client.model.M3u8PcrControl;
import org.openapitools.client.model.M3u8Scte35Source;
import org.openapitools.client.model.TimedMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * These settings relate to the MPEG-2 transport stream (MPEG2-TS) container for the MPEG2-TS segments in your HLS outputs.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class M3u8Settings {
  public static final String SERIALIZED_NAME_AUDIO_DURATION = "AudioDuration";
  @SerializedName(SERIALIZED_NAME_AUDIO_DURATION)
  private M3u8AudioDuration audioDuration;

  public static final String SERIALIZED_NAME_AUDIO_FRAMES_PER_PES = "AudioFramesPerPes";
  @SerializedName(SERIALIZED_NAME_AUDIO_FRAMES_PER_PES)
  private Integer audioFramesPerPes;

  public static final String SERIALIZED_NAME_AUDIO_PIDS = "AudioPids";
  @SerializedName(SERIALIZED_NAME_AUDIO_PIDS)
  private List audioPids;

  public static final String SERIALIZED_NAME_DATA_P_T_S_CONTROL = "DataPTSControl";
  @SerializedName(SERIALIZED_NAME_DATA_P_T_S_CONTROL)
  private M3u8DataPtsControl dataPTSControl;

  public static final String SERIALIZED_NAME_MAX_PCR_INTERVAL = "MaxPcrInterval";
  @SerializedName(SERIALIZED_NAME_MAX_PCR_INTERVAL)
  private Integer maxPcrInterval;

  public static final String SERIALIZED_NAME_NIELSEN_ID3 = "NielsenId3";
  @SerializedName(SERIALIZED_NAME_NIELSEN_ID3)
  private M3u8NielsenId3 nielsenId3;

  public static final String SERIALIZED_NAME_PAT_INTERVAL = "PatInterval";
  @SerializedName(SERIALIZED_NAME_PAT_INTERVAL)
  private Integer patInterval;

  public static final String SERIALIZED_NAME_PCR_CONTROL = "PcrControl";
  @SerializedName(SERIALIZED_NAME_PCR_CONTROL)
  private M3u8PcrControl pcrControl;

  public static final String SERIALIZED_NAME_PCR_PID = "PcrPid";
  @SerializedName(SERIALIZED_NAME_PCR_PID)
  private Integer pcrPid;

  public static final String SERIALIZED_NAME_PMT_INTERVAL = "PmtInterval";
  @SerializedName(SERIALIZED_NAME_PMT_INTERVAL)
  private Integer pmtInterval;

  public static final String SERIALIZED_NAME_PMT_PID = "PmtPid";
  @SerializedName(SERIALIZED_NAME_PMT_PID)
  private Integer pmtPid;

  public static final String SERIALIZED_NAME_PRIVATE_METADATA_PID = "PrivateMetadataPid";
  @SerializedName(SERIALIZED_NAME_PRIVATE_METADATA_PID)
  private Integer privateMetadataPid;

  public static final String SERIALIZED_NAME_PROGRAM_NUMBER = "ProgramNumber";
  @SerializedName(SERIALIZED_NAME_PROGRAM_NUMBER)
  private Integer programNumber;

  public static final String SERIALIZED_NAME_SCTE35_PID = "Scte35Pid";
  @SerializedName(SERIALIZED_NAME_SCTE35_PID)
  private Integer scte35Pid;

  public static final String SERIALIZED_NAME_SCTE35_SOURCE = "Scte35Source";
  @SerializedName(SERIALIZED_NAME_SCTE35_SOURCE)
  private M3u8Scte35Source scte35Source;

  public static final String SERIALIZED_NAME_TIMED_METADATA = "TimedMetadata";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA)
  private TimedMetadata timedMetadata;

  public static final String SERIALIZED_NAME_TIMED_METADATA_PID = "TimedMetadataPid";
  @SerializedName(SERIALIZED_NAME_TIMED_METADATA_PID)
  private Integer timedMetadataPid;

  public static final String SERIALIZED_NAME_TRANSPORT_STREAM_ID = "TransportStreamId";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_STREAM_ID)
  private Integer transportStreamId;

  public static final String SERIALIZED_NAME_VIDEO_PID = "VideoPid";
  @SerializedName(SERIALIZED_NAME_VIDEO_PID)
  private Integer videoPid;

  public M3u8Settings() {
  }

  public M3u8Settings audioDuration(M3u8AudioDuration audioDuration) {
    this.audioDuration = audioDuration;
    return this;
  }

  /**
   * Get audioDuration
   * @return audioDuration
   */
  @javax.annotation.Nullable
  public M3u8AudioDuration getAudioDuration() {
    return audioDuration;
  }

  public void setAudioDuration(M3u8AudioDuration audioDuration) {
    this.audioDuration = audioDuration;
  }


  public M3u8Settings audioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
    return this;
  }

  /**
   * Get audioFramesPerPes
   * @return audioFramesPerPes
   */
  @javax.annotation.Nullable
  public Integer getAudioFramesPerPes() {
    return audioFramesPerPes;
  }

  public void setAudioFramesPerPes(Integer audioFramesPerPes) {
    this.audioFramesPerPes = audioFramesPerPes;
  }


  public M3u8Settings audioPids(List audioPids) {
    this.audioPids = audioPids;
    return this;
  }

  /**
   * Get audioPids
   * @return audioPids
   */
  @javax.annotation.Nullable
  public List getAudioPids() {
    return audioPids;
  }

  public void setAudioPids(List audioPids) {
    this.audioPids = audioPids;
  }


  public M3u8Settings dataPTSControl(M3u8DataPtsControl dataPTSControl) {
    this.dataPTSControl = dataPTSControl;
    return this;
  }

  /**
   * Get dataPTSControl
   * @return dataPTSControl
   */
  @javax.annotation.Nullable
  public M3u8DataPtsControl getDataPTSControl() {
    return dataPTSControl;
  }

  public void setDataPTSControl(M3u8DataPtsControl dataPTSControl) {
    this.dataPTSControl = dataPTSControl;
  }


  public M3u8Settings maxPcrInterval(Integer maxPcrInterval) {
    this.maxPcrInterval = maxPcrInterval;
    return this;
  }

  /**
   * Get maxPcrInterval
   * @return maxPcrInterval
   */
  @javax.annotation.Nullable
  public Integer getMaxPcrInterval() {
    return maxPcrInterval;
  }

  public void setMaxPcrInterval(Integer maxPcrInterval) {
    this.maxPcrInterval = maxPcrInterval;
  }


  public M3u8Settings nielsenId3(M3u8NielsenId3 nielsenId3) {
    this.nielsenId3 = nielsenId3;
    return this;
  }

  /**
   * Get nielsenId3
   * @return nielsenId3
   */
  @javax.annotation.Nullable
  public M3u8NielsenId3 getNielsenId3() {
    return nielsenId3;
  }

  public void setNielsenId3(M3u8NielsenId3 nielsenId3) {
    this.nielsenId3 = nielsenId3;
  }


  public M3u8Settings patInterval(Integer patInterval) {
    this.patInterval = patInterval;
    return this;
  }

  /**
   * Get patInterval
   * @return patInterval
   */
  @javax.annotation.Nullable
  public Integer getPatInterval() {
    return patInterval;
  }

  public void setPatInterval(Integer patInterval) {
    this.patInterval = patInterval;
  }


  public M3u8Settings pcrControl(M3u8PcrControl pcrControl) {
    this.pcrControl = pcrControl;
    return this;
  }

  /**
   * Get pcrControl
   * @return pcrControl
   */
  @javax.annotation.Nullable
  public M3u8PcrControl getPcrControl() {
    return pcrControl;
  }

  public void setPcrControl(M3u8PcrControl pcrControl) {
    this.pcrControl = pcrControl;
  }


  public M3u8Settings pcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
    return this;
  }

  /**
   * Get pcrPid
   * @return pcrPid
   */
  @javax.annotation.Nullable
  public Integer getPcrPid() {
    return pcrPid;
  }

  public void setPcrPid(Integer pcrPid) {
    this.pcrPid = pcrPid;
  }


  public M3u8Settings pmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
    return this;
  }

  /**
   * Get pmtInterval
   * @return pmtInterval
   */
  @javax.annotation.Nullable
  public Integer getPmtInterval() {
    return pmtInterval;
  }

  public void setPmtInterval(Integer pmtInterval) {
    this.pmtInterval = pmtInterval;
  }


  public M3u8Settings pmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
    return this;
  }

  /**
   * Get pmtPid
   * @return pmtPid
   */
  @javax.annotation.Nullable
  public Integer getPmtPid() {
    return pmtPid;
  }

  public void setPmtPid(Integer pmtPid) {
    this.pmtPid = pmtPid;
  }


  public M3u8Settings privateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
    return this;
  }

  /**
   * Get privateMetadataPid
   * @return privateMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getPrivateMetadataPid() {
    return privateMetadataPid;
  }

  public void setPrivateMetadataPid(Integer privateMetadataPid) {
    this.privateMetadataPid = privateMetadataPid;
  }


  public M3u8Settings programNumber(Integer programNumber) {
    this.programNumber = programNumber;
    return this;
  }

  /**
   * Get programNumber
   * @return programNumber
   */
  @javax.annotation.Nullable
  public Integer getProgramNumber() {
    return programNumber;
  }

  public void setProgramNumber(Integer programNumber) {
    this.programNumber = programNumber;
  }


  public M3u8Settings scte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
    return this;
  }

  /**
   * Get scte35Pid
   * @return scte35Pid
   */
  @javax.annotation.Nullable
  public Integer getScte35Pid() {
    return scte35Pid;
  }

  public void setScte35Pid(Integer scte35Pid) {
    this.scte35Pid = scte35Pid;
  }


  public M3u8Settings scte35Source(M3u8Scte35Source scte35Source) {
    this.scte35Source = scte35Source;
    return this;
  }

  /**
   * Get scte35Source
   * @return scte35Source
   */
  @javax.annotation.Nullable
  public M3u8Scte35Source getScte35Source() {
    return scte35Source;
  }

  public void setScte35Source(M3u8Scte35Source scte35Source) {
    this.scte35Source = scte35Source;
  }


  public M3u8Settings timedMetadata(TimedMetadata timedMetadata) {
    this.timedMetadata = timedMetadata;
    return this;
  }

  /**
   * Get timedMetadata
   * @return timedMetadata
   */
  @javax.annotation.Nullable
  public TimedMetadata getTimedMetadata() {
    return timedMetadata;
  }

  public void setTimedMetadata(TimedMetadata timedMetadata) {
    this.timedMetadata = timedMetadata;
  }


  public M3u8Settings timedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
    return this;
  }

  /**
   * Get timedMetadataPid
   * @return timedMetadataPid
   */
  @javax.annotation.Nullable
  public Integer getTimedMetadataPid() {
    return timedMetadataPid;
  }

  public void setTimedMetadataPid(Integer timedMetadataPid) {
    this.timedMetadataPid = timedMetadataPid;
  }


  public M3u8Settings transportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
    return this;
  }

  /**
   * Get transportStreamId
   * @return transportStreamId
   */
  @javax.annotation.Nullable
  public Integer getTransportStreamId() {
    return transportStreamId;
  }

  public void setTransportStreamId(Integer transportStreamId) {
    this.transportStreamId = transportStreamId;
  }


  public M3u8Settings videoPid(Integer videoPid) {
    this.videoPid = videoPid;
    return this;
  }

  /**
   * Get videoPid
   * @return videoPid
   */
  @javax.annotation.Nullable
  public Integer getVideoPid() {
    return videoPid;
  }

  public void setVideoPid(Integer videoPid) {
    this.videoPid = videoPid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    M3u8Settings m3u8Settings = (M3u8Settings) o;
    return Objects.equals(this.audioDuration, m3u8Settings.audioDuration) &&
        Objects.equals(this.audioFramesPerPes, m3u8Settings.audioFramesPerPes) &&
        Objects.equals(this.audioPids, m3u8Settings.audioPids) &&
        Objects.equals(this.dataPTSControl, m3u8Settings.dataPTSControl) &&
        Objects.equals(this.maxPcrInterval, m3u8Settings.maxPcrInterval) &&
        Objects.equals(this.nielsenId3, m3u8Settings.nielsenId3) &&
        Objects.equals(this.patInterval, m3u8Settings.patInterval) &&
        Objects.equals(this.pcrControl, m3u8Settings.pcrControl) &&
        Objects.equals(this.pcrPid, m3u8Settings.pcrPid) &&
        Objects.equals(this.pmtInterval, m3u8Settings.pmtInterval) &&
        Objects.equals(this.pmtPid, m3u8Settings.pmtPid) &&
        Objects.equals(this.privateMetadataPid, m3u8Settings.privateMetadataPid) &&
        Objects.equals(this.programNumber, m3u8Settings.programNumber) &&
        Objects.equals(this.scte35Pid, m3u8Settings.scte35Pid) &&
        Objects.equals(this.scte35Source, m3u8Settings.scte35Source) &&
        Objects.equals(this.timedMetadata, m3u8Settings.timedMetadata) &&
        Objects.equals(this.timedMetadataPid, m3u8Settings.timedMetadataPid) &&
        Objects.equals(this.transportStreamId, m3u8Settings.transportStreamId) &&
        Objects.equals(this.videoPid, m3u8Settings.videoPid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioDuration, audioFramesPerPes, audioPids, dataPTSControl, maxPcrInterval, nielsenId3, patInterval, pcrControl, pcrPid, pmtInterval, pmtPid, privateMetadataPid, programNumber, scte35Pid, scte35Source, timedMetadata, timedMetadataPid, transportStreamId, videoPid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class M3u8Settings {\n");
    sb.append("    audioDuration: ").append(toIndentedString(audioDuration)).append("\n");
    sb.append("    audioFramesPerPes: ").append(toIndentedString(audioFramesPerPes)).append("\n");
    sb.append("    audioPids: ").append(toIndentedString(audioPids)).append("\n");
    sb.append("    dataPTSControl: ").append(toIndentedString(dataPTSControl)).append("\n");
    sb.append("    maxPcrInterval: ").append(toIndentedString(maxPcrInterval)).append("\n");
    sb.append("    nielsenId3: ").append(toIndentedString(nielsenId3)).append("\n");
    sb.append("    patInterval: ").append(toIndentedString(patInterval)).append("\n");
    sb.append("    pcrControl: ").append(toIndentedString(pcrControl)).append("\n");
    sb.append("    pcrPid: ").append(toIndentedString(pcrPid)).append("\n");
    sb.append("    pmtInterval: ").append(toIndentedString(pmtInterval)).append("\n");
    sb.append("    pmtPid: ").append(toIndentedString(pmtPid)).append("\n");
    sb.append("    privateMetadataPid: ").append(toIndentedString(privateMetadataPid)).append("\n");
    sb.append("    programNumber: ").append(toIndentedString(programNumber)).append("\n");
    sb.append("    scte35Pid: ").append(toIndentedString(scte35Pid)).append("\n");
    sb.append("    scte35Source: ").append(toIndentedString(scte35Source)).append("\n");
    sb.append("    timedMetadata: ").append(toIndentedString(timedMetadata)).append("\n");
    sb.append("    timedMetadataPid: ").append(toIndentedString(timedMetadataPid)).append("\n");
    sb.append("    transportStreamId: ").append(toIndentedString(transportStreamId)).append("\n");
    sb.append("    videoPid: ").append(toIndentedString(videoPid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioDuration");
    openapiFields.add("AudioFramesPerPes");
    openapiFields.add("AudioPids");
    openapiFields.add("DataPTSControl");
    openapiFields.add("MaxPcrInterval");
    openapiFields.add("NielsenId3");
    openapiFields.add("PatInterval");
    openapiFields.add("PcrControl");
    openapiFields.add("PcrPid");
    openapiFields.add("PmtInterval");
    openapiFields.add("PmtPid");
    openapiFields.add("PrivateMetadataPid");
    openapiFields.add("ProgramNumber");
    openapiFields.add("Scte35Pid");
    openapiFields.add("Scte35Source");
    openapiFields.add("TimedMetadata");
    openapiFields.add("TimedMetadataPid");
    openapiFields.add("TransportStreamId");
    openapiFields.add("VideoPid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to M3u8Settings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!M3u8Settings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in M3u8Settings is not found in the empty JSON string", M3u8Settings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!M3u8Settings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `M3u8Settings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioDuration`
      if (jsonObj.get("AudioDuration") != null && !jsonObj.get("AudioDuration").isJsonNull()) {
        M3u8AudioDuration.validateJsonElement(jsonObj.get("AudioDuration"));
      }
      // validate the optional field `AudioFramesPerPes`
      if (jsonObj.get("AudioFramesPerPes") != null && !jsonObj.get("AudioFramesPerPes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AudioFramesPerPes"));
      }
      // validate the optional field `AudioPids`
      if (jsonObj.get("AudioPids") != null && !jsonObj.get("AudioPids").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AudioPids"));
      }
      // validate the optional field `DataPTSControl`
      if (jsonObj.get("DataPTSControl") != null && !jsonObj.get("DataPTSControl").isJsonNull()) {
        M3u8DataPtsControl.validateJsonElement(jsonObj.get("DataPTSControl"));
      }
      // validate the optional field `MaxPcrInterval`
      if (jsonObj.get("MaxPcrInterval") != null && !jsonObj.get("MaxPcrInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxPcrInterval"));
      }
      // validate the optional field `NielsenId3`
      if (jsonObj.get("NielsenId3") != null && !jsonObj.get("NielsenId3").isJsonNull()) {
        M3u8NielsenId3.validateJsonElement(jsonObj.get("NielsenId3"));
      }
      // validate the optional field `PatInterval`
      if (jsonObj.get("PatInterval") != null && !jsonObj.get("PatInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PatInterval"));
      }
      // validate the optional field `PcrControl`
      if (jsonObj.get("PcrControl") != null && !jsonObj.get("PcrControl").isJsonNull()) {
        M3u8PcrControl.validateJsonElement(jsonObj.get("PcrControl"));
      }
      // validate the optional field `PcrPid`
      if (jsonObj.get("PcrPid") != null && !jsonObj.get("PcrPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PcrPid"));
      }
      // validate the optional field `PmtInterval`
      if (jsonObj.get("PmtInterval") != null && !jsonObj.get("PmtInterval").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtInterval"));
      }
      // validate the optional field `PmtPid`
      if (jsonObj.get("PmtPid") != null && !jsonObj.get("PmtPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PmtPid"));
      }
      // validate the optional field `PrivateMetadataPid`
      if (jsonObj.get("PrivateMetadataPid") != null && !jsonObj.get("PrivateMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PrivateMetadataPid"));
      }
      // validate the optional field `ProgramNumber`
      if (jsonObj.get("ProgramNumber") != null && !jsonObj.get("ProgramNumber").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProgramNumber"));
      }
      // validate the optional field `Scte35Pid`
      if (jsonObj.get("Scte35Pid") != null && !jsonObj.get("Scte35Pid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Scte35Pid"));
      }
      // validate the optional field `Scte35Source`
      if (jsonObj.get("Scte35Source") != null && !jsonObj.get("Scte35Source").isJsonNull()) {
        M3u8Scte35Source.validateJsonElement(jsonObj.get("Scte35Source"));
      }
      // validate the optional field `TimedMetadata`
      if (jsonObj.get("TimedMetadata") != null && !jsonObj.get("TimedMetadata").isJsonNull()) {
        TimedMetadata.validateJsonElement(jsonObj.get("TimedMetadata"));
      }
      // validate the optional field `TimedMetadataPid`
      if (jsonObj.get("TimedMetadataPid") != null && !jsonObj.get("TimedMetadataPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimedMetadataPid"));
      }
      // validate the optional field `TransportStreamId`
      if (jsonObj.get("TransportStreamId") != null && !jsonObj.get("TransportStreamId").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TransportStreamId"));
      }
      // validate the optional field `VideoPid`
      if (jsonObj.get("VideoPid") != null && !jsonObj.get("VideoPid").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("VideoPid"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!M3u8Settings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'M3u8Settings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<M3u8Settings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(M3u8Settings.class));

       return (TypeAdapter<T>) new TypeAdapter<M3u8Settings>() {
           @Override
           public void write(JsonWriter out, M3u8Settings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public M3u8Settings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of M3u8Settings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of M3u8Settings
   * @throws IOException if the JSON string is invalid with respect to M3u8Settings
   */
  public static M3u8Settings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, M3u8Settings.class);
  }

  /**
   * Convert an instance of M3u8Settings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

