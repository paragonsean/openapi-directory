/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * To use the available style, color, and position information from your input captions: Set Style passthrough to Enabled. MediaConvert uses default settings when style and position information is missing from your input captions. To recreate the input captions exactly: Set Style passthrough to Strict. MediaConvert automatically applies timing adjustments, including adjustments for frame rate conversion, ad avails, and input clipping. Your input captions format must be WebVTT. To ignore the style and position information from your input captions and use simplified output captions: Set Style passthrough to Disabled, or leave blank.
 */
@JsonAdapter(WebvttStylePassthrough.Adapter.class)
public enum WebvttStylePassthrough {
  
  ENABLED("ENABLED"),
  
  DISABLED("DISABLED"),
  
  STRICT("STRICT");

  private String value;

  WebvttStylePassthrough(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static WebvttStylePassthrough fromValue(String value) {
    for (WebvttStylePassthrough b : WebvttStylePassthrough.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<WebvttStylePassthrough> {
    @Override
    public void write(final JsonWriter jsonWriter, final WebvttStylePassthrough enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public WebvttStylePassthrough read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return WebvttStylePassthrough.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    WebvttStylePassthrough.fromValue(value);
  }
}

