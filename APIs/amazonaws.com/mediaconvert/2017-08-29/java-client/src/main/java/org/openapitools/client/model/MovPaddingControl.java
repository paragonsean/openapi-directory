/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Unless you need Omneon compatibility: Keep the default value, None. To make this output compatible with Omneon: Choose Omneon. When you do, MediaConvert increases the length of the &#39;elst&#39; edit list atom. Note that this might cause file rejections when a recipient of the output file doesn&#39;t expect this extra padding.
 */
@JsonAdapter(MovPaddingControl.Adapter.class)
public enum MovPaddingControl {
  
  OMNEON("OMNEON"),
  
  NONE("NONE");

  private String value;

  MovPaddingControl(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MovPaddingControl fromValue(String value) {
    for (MovPaddingControl b : MovPaddingControl.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MovPaddingControl> {
    @Override
    public void write(final JsonWriter jsonWriter, final MovPaddingControl enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MovPaddingControl read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MovPaddingControl.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    MovPaddingControl.fromValue(value);
  }
}

