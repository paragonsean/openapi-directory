/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePresetRequestSettingsContainerSettings;
import org.openapitools.client.model.CreatePresetRequestSettingsVideoDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePresetRequestSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePresetRequestSettings {
  public static final String SERIALIZED_NAME_AUDIO_DESCRIPTIONS = "AudioDescriptions";
  @SerializedName(SERIALIZED_NAME_AUDIO_DESCRIPTIONS)
  private List audioDescriptions;

  public static final String SERIALIZED_NAME_CAPTION_DESCRIPTIONS = "CaptionDescriptions";
  @SerializedName(SERIALIZED_NAME_CAPTION_DESCRIPTIONS)
  private List captionDescriptions;

  public static final String SERIALIZED_NAME_CONTAINER_SETTINGS = "ContainerSettings";
  @SerializedName(SERIALIZED_NAME_CONTAINER_SETTINGS)
  private CreatePresetRequestSettingsContainerSettings containerSettings;

  public static final String SERIALIZED_NAME_VIDEO_DESCRIPTION = "VideoDescription";
  @SerializedName(SERIALIZED_NAME_VIDEO_DESCRIPTION)
  private CreatePresetRequestSettingsVideoDescription videoDescription;

  public CreatePresetRequestSettings() {
  }

  public CreatePresetRequestSettings audioDescriptions(List audioDescriptions) {
    this.audioDescriptions = audioDescriptions;
    return this;
  }

  /**
   * Get audioDescriptions
   * @return audioDescriptions
   */
  @javax.annotation.Nullable
  public List getAudioDescriptions() {
    return audioDescriptions;
  }

  public void setAudioDescriptions(List audioDescriptions) {
    this.audioDescriptions = audioDescriptions;
  }


  public CreatePresetRequestSettings captionDescriptions(List captionDescriptions) {
    this.captionDescriptions = captionDescriptions;
    return this;
  }

  /**
   * Get captionDescriptions
   * @return captionDescriptions
   */
  @javax.annotation.Nullable
  public List getCaptionDescriptions() {
    return captionDescriptions;
  }

  public void setCaptionDescriptions(List captionDescriptions) {
    this.captionDescriptions = captionDescriptions;
  }


  public CreatePresetRequestSettings containerSettings(CreatePresetRequestSettingsContainerSettings containerSettings) {
    this.containerSettings = containerSettings;
    return this;
  }

  /**
   * Get containerSettings
   * @return containerSettings
   */
  @javax.annotation.Nullable
  public CreatePresetRequestSettingsContainerSettings getContainerSettings() {
    return containerSettings;
  }

  public void setContainerSettings(CreatePresetRequestSettingsContainerSettings containerSettings) {
    this.containerSettings = containerSettings;
  }


  public CreatePresetRequestSettings videoDescription(CreatePresetRequestSettingsVideoDescription videoDescription) {
    this.videoDescription = videoDescription;
    return this;
  }

  /**
   * Get videoDescription
   * @return videoDescription
   */
  @javax.annotation.Nullable
  public CreatePresetRequestSettingsVideoDescription getVideoDescription() {
    return videoDescription;
  }

  public void setVideoDescription(CreatePresetRequestSettingsVideoDescription videoDescription) {
    this.videoDescription = videoDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePresetRequestSettings createPresetRequestSettings = (CreatePresetRequestSettings) o;
    return Objects.equals(this.audioDescriptions, createPresetRequestSettings.audioDescriptions) &&
        Objects.equals(this.captionDescriptions, createPresetRequestSettings.captionDescriptions) &&
        Objects.equals(this.containerSettings, createPresetRequestSettings.containerSettings) &&
        Objects.equals(this.videoDescription, createPresetRequestSettings.videoDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioDescriptions, captionDescriptions, containerSettings, videoDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePresetRequestSettings {\n");
    sb.append("    audioDescriptions: ").append(toIndentedString(audioDescriptions)).append("\n");
    sb.append("    captionDescriptions: ").append(toIndentedString(captionDescriptions)).append("\n");
    sb.append("    containerSettings: ").append(toIndentedString(containerSettings)).append("\n");
    sb.append("    videoDescription: ").append(toIndentedString(videoDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioDescriptions");
    openapiFields.add("CaptionDescriptions");
    openapiFields.add("ContainerSettings");
    openapiFields.add("VideoDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePresetRequestSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePresetRequestSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePresetRequestSettings is not found in the empty JSON string", CreatePresetRequestSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePresetRequestSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePresetRequestSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioDescriptions`
      if (jsonObj.get("AudioDescriptions") != null && !jsonObj.get("AudioDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AudioDescriptions"));
      }
      // validate the optional field `CaptionDescriptions`
      if (jsonObj.get("CaptionDescriptions") != null && !jsonObj.get("CaptionDescriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CaptionDescriptions"));
      }
      // validate the optional field `ContainerSettings`
      if (jsonObj.get("ContainerSettings") != null && !jsonObj.get("ContainerSettings").isJsonNull()) {
        CreatePresetRequestSettingsContainerSettings.validateJsonElement(jsonObj.get("ContainerSettings"));
      }
      // validate the optional field `VideoDescription`
      if (jsonObj.get("VideoDescription") != null && !jsonObj.get("VideoDescription").isJsonNull()) {
        CreatePresetRequestSettingsVideoDescription.validateJsonElement(jsonObj.get("VideoDescription"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePresetRequestSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePresetRequestSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePresetRequestSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePresetRequestSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePresetRequestSettings>() {
           @Override
           public void write(JsonWriter out, CreatePresetRequestSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePresetRequestSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePresetRequestSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePresetRequestSettings
   * @throws IOException if the JSON string is invalid with respect to CreatePresetRequestSettings
   */
  public static CreatePresetRequestSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePresetRequestSettings.class);
  }

  /**
   * Convert an instance of CreatePresetRequestSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

