/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ContainerSettingsCmfcSettings;
import org.openapitools.client.model.ContainerSettingsF4vSettings;
import org.openapitools.client.model.ContainerSettingsM2tsSettings;
import org.openapitools.client.model.ContainerSettingsM3u8Settings;
import org.openapitools.client.model.ContainerSettingsMovSettings;
import org.openapitools.client.model.ContainerSettingsMp4Settings;
import org.openapitools.client.model.ContainerSettingsMpdSettings;
import org.openapitools.client.model.ContainerSettingsMxfSettings;
import org.openapitools.client.model.ContainerType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreatePresetRequestSettingsContainerSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePresetRequestSettingsContainerSettings {
  public static final String SERIALIZED_NAME_CMFC_SETTINGS = "CmfcSettings";
  @SerializedName(SERIALIZED_NAME_CMFC_SETTINGS)
  private ContainerSettingsCmfcSettings cmfcSettings;

  public static final String SERIALIZED_NAME_CONTAINER = "Container";
  @SerializedName(SERIALIZED_NAME_CONTAINER)
  private ContainerType container;

  public static final String SERIALIZED_NAME_F4V_SETTINGS = "F4vSettings";
  @SerializedName(SERIALIZED_NAME_F4V_SETTINGS)
  private ContainerSettingsF4vSettings f4vSettings;

  public static final String SERIALIZED_NAME_M2TS_SETTINGS = "M2tsSettings";
  @SerializedName(SERIALIZED_NAME_M2TS_SETTINGS)
  private ContainerSettingsM2tsSettings m2tsSettings;

  public static final String SERIALIZED_NAME_M3U8_SETTINGS = "M3u8Settings";
  @SerializedName(SERIALIZED_NAME_M3U8_SETTINGS)
  private ContainerSettingsM3u8Settings m3u8Settings;

  public static final String SERIALIZED_NAME_MOV_SETTINGS = "MovSettings";
  @SerializedName(SERIALIZED_NAME_MOV_SETTINGS)
  private ContainerSettingsMovSettings movSettings;

  public static final String SERIALIZED_NAME_MP4_SETTINGS = "Mp4Settings";
  @SerializedName(SERIALIZED_NAME_MP4_SETTINGS)
  private ContainerSettingsMp4Settings mp4Settings;

  public static final String SERIALIZED_NAME_MPD_SETTINGS = "MpdSettings";
  @SerializedName(SERIALIZED_NAME_MPD_SETTINGS)
  private ContainerSettingsMpdSettings mpdSettings;

  public static final String SERIALIZED_NAME_MXF_SETTINGS = "MxfSettings";
  @SerializedName(SERIALIZED_NAME_MXF_SETTINGS)
  private ContainerSettingsMxfSettings mxfSettings;

  public CreatePresetRequestSettingsContainerSettings() {
  }

  public CreatePresetRequestSettingsContainerSettings cmfcSettings(ContainerSettingsCmfcSettings cmfcSettings) {
    this.cmfcSettings = cmfcSettings;
    return this;
  }

  /**
   * Get cmfcSettings
   * @return cmfcSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsCmfcSettings getCmfcSettings() {
    return cmfcSettings;
  }

  public void setCmfcSettings(ContainerSettingsCmfcSettings cmfcSettings) {
    this.cmfcSettings = cmfcSettings;
  }


  public CreatePresetRequestSettingsContainerSettings container(ContainerType container) {
    this.container = container;
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  public ContainerType getContainer() {
    return container;
  }

  public void setContainer(ContainerType container) {
    this.container = container;
  }


  public CreatePresetRequestSettingsContainerSettings f4vSettings(ContainerSettingsF4vSettings f4vSettings) {
    this.f4vSettings = f4vSettings;
    return this;
  }

  /**
   * Get f4vSettings
   * @return f4vSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsF4vSettings getF4vSettings() {
    return f4vSettings;
  }

  public void setF4vSettings(ContainerSettingsF4vSettings f4vSettings) {
    this.f4vSettings = f4vSettings;
  }


  public CreatePresetRequestSettingsContainerSettings m2tsSettings(ContainerSettingsM2tsSettings m2tsSettings) {
    this.m2tsSettings = m2tsSettings;
    return this;
  }

  /**
   * Get m2tsSettings
   * @return m2tsSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsM2tsSettings getM2tsSettings() {
    return m2tsSettings;
  }

  public void setM2tsSettings(ContainerSettingsM2tsSettings m2tsSettings) {
    this.m2tsSettings = m2tsSettings;
  }


  public CreatePresetRequestSettingsContainerSettings m3u8Settings(ContainerSettingsM3u8Settings m3u8Settings) {
    this.m3u8Settings = m3u8Settings;
    return this;
  }

  /**
   * Get m3u8Settings
   * @return m3u8Settings
   */
  @javax.annotation.Nullable
  public ContainerSettingsM3u8Settings getM3u8Settings() {
    return m3u8Settings;
  }

  public void setM3u8Settings(ContainerSettingsM3u8Settings m3u8Settings) {
    this.m3u8Settings = m3u8Settings;
  }


  public CreatePresetRequestSettingsContainerSettings movSettings(ContainerSettingsMovSettings movSettings) {
    this.movSettings = movSettings;
    return this;
  }

  /**
   * Get movSettings
   * @return movSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsMovSettings getMovSettings() {
    return movSettings;
  }

  public void setMovSettings(ContainerSettingsMovSettings movSettings) {
    this.movSettings = movSettings;
  }


  public CreatePresetRequestSettingsContainerSettings mp4Settings(ContainerSettingsMp4Settings mp4Settings) {
    this.mp4Settings = mp4Settings;
    return this;
  }

  /**
   * Get mp4Settings
   * @return mp4Settings
   */
  @javax.annotation.Nullable
  public ContainerSettingsMp4Settings getMp4Settings() {
    return mp4Settings;
  }

  public void setMp4Settings(ContainerSettingsMp4Settings mp4Settings) {
    this.mp4Settings = mp4Settings;
  }


  public CreatePresetRequestSettingsContainerSettings mpdSettings(ContainerSettingsMpdSettings mpdSettings) {
    this.mpdSettings = mpdSettings;
    return this;
  }

  /**
   * Get mpdSettings
   * @return mpdSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsMpdSettings getMpdSettings() {
    return mpdSettings;
  }

  public void setMpdSettings(ContainerSettingsMpdSettings mpdSettings) {
    this.mpdSettings = mpdSettings;
  }


  public CreatePresetRequestSettingsContainerSettings mxfSettings(ContainerSettingsMxfSettings mxfSettings) {
    this.mxfSettings = mxfSettings;
    return this;
  }

  /**
   * Get mxfSettings
   * @return mxfSettings
   */
  @javax.annotation.Nullable
  public ContainerSettingsMxfSettings getMxfSettings() {
    return mxfSettings;
  }

  public void setMxfSettings(ContainerSettingsMxfSettings mxfSettings) {
    this.mxfSettings = mxfSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePresetRequestSettingsContainerSettings createPresetRequestSettingsContainerSettings = (CreatePresetRequestSettingsContainerSettings) o;
    return Objects.equals(this.cmfcSettings, createPresetRequestSettingsContainerSettings.cmfcSettings) &&
        Objects.equals(this.container, createPresetRequestSettingsContainerSettings.container) &&
        Objects.equals(this.f4vSettings, createPresetRequestSettingsContainerSettings.f4vSettings) &&
        Objects.equals(this.m2tsSettings, createPresetRequestSettingsContainerSettings.m2tsSettings) &&
        Objects.equals(this.m3u8Settings, createPresetRequestSettingsContainerSettings.m3u8Settings) &&
        Objects.equals(this.movSettings, createPresetRequestSettingsContainerSettings.movSettings) &&
        Objects.equals(this.mp4Settings, createPresetRequestSettingsContainerSettings.mp4Settings) &&
        Objects.equals(this.mpdSettings, createPresetRequestSettingsContainerSettings.mpdSettings) &&
        Objects.equals(this.mxfSettings, createPresetRequestSettingsContainerSettings.mxfSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cmfcSettings, container, f4vSettings, m2tsSettings, m3u8Settings, movSettings, mp4Settings, mpdSettings, mxfSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePresetRequestSettingsContainerSettings {\n");
    sb.append("    cmfcSettings: ").append(toIndentedString(cmfcSettings)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    f4vSettings: ").append(toIndentedString(f4vSettings)).append("\n");
    sb.append("    m2tsSettings: ").append(toIndentedString(m2tsSettings)).append("\n");
    sb.append("    m3u8Settings: ").append(toIndentedString(m3u8Settings)).append("\n");
    sb.append("    movSettings: ").append(toIndentedString(movSettings)).append("\n");
    sb.append("    mp4Settings: ").append(toIndentedString(mp4Settings)).append("\n");
    sb.append("    mpdSettings: ").append(toIndentedString(mpdSettings)).append("\n");
    sb.append("    mxfSettings: ").append(toIndentedString(mxfSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CmfcSettings");
    openapiFields.add("Container");
    openapiFields.add("F4vSettings");
    openapiFields.add("M2tsSettings");
    openapiFields.add("M3u8Settings");
    openapiFields.add("MovSettings");
    openapiFields.add("Mp4Settings");
    openapiFields.add("MpdSettings");
    openapiFields.add("MxfSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePresetRequestSettingsContainerSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePresetRequestSettingsContainerSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePresetRequestSettingsContainerSettings is not found in the empty JSON string", CreatePresetRequestSettingsContainerSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePresetRequestSettingsContainerSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePresetRequestSettingsContainerSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CmfcSettings`
      if (jsonObj.get("CmfcSettings") != null && !jsonObj.get("CmfcSettings").isJsonNull()) {
        ContainerSettingsCmfcSettings.validateJsonElement(jsonObj.get("CmfcSettings"));
      }
      // validate the optional field `Container`
      if (jsonObj.get("Container") != null && !jsonObj.get("Container").isJsonNull()) {
        ContainerType.validateJsonElement(jsonObj.get("Container"));
      }
      // validate the optional field `F4vSettings`
      if (jsonObj.get("F4vSettings") != null && !jsonObj.get("F4vSettings").isJsonNull()) {
        ContainerSettingsF4vSettings.validateJsonElement(jsonObj.get("F4vSettings"));
      }
      // validate the optional field `M2tsSettings`
      if (jsonObj.get("M2tsSettings") != null && !jsonObj.get("M2tsSettings").isJsonNull()) {
        ContainerSettingsM2tsSettings.validateJsonElement(jsonObj.get("M2tsSettings"));
      }
      // validate the optional field `M3u8Settings`
      if (jsonObj.get("M3u8Settings") != null && !jsonObj.get("M3u8Settings").isJsonNull()) {
        ContainerSettingsM3u8Settings.validateJsonElement(jsonObj.get("M3u8Settings"));
      }
      // validate the optional field `MovSettings`
      if (jsonObj.get("MovSettings") != null && !jsonObj.get("MovSettings").isJsonNull()) {
        ContainerSettingsMovSettings.validateJsonElement(jsonObj.get("MovSettings"));
      }
      // validate the optional field `Mp4Settings`
      if (jsonObj.get("Mp4Settings") != null && !jsonObj.get("Mp4Settings").isJsonNull()) {
        ContainerSettingsMp4Settings.validateJsonElement(jsonObj.get("Mp4Settings"));
      }
      // validate the optional field `MpdSettings`
      if (jsonObj.get("MpdSettings") != null && !jsonObj.get("MpdSettings").isJsonNull()) {
        ContainerSettingsMpdSettings.validateJsonElement(jsonObj.get("MpdSettings"));
      }
      // validate the optional field `MxfSettings`
      if (jsonObj.get("MxfSettings") != null && !jsonObj.get("MxfSettings").isJsonNull()) {
        ContainerSettingsMxfSettings.validateJsonElement(jsonObj.get("MxfSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePresetRequestSettingsContainerSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePresetRequestSettingsContainerSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePresetRequestSettingsContainerSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePresetRequestSettingsContainerSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePresetRequestSettingsContainerSettings>() {
           @Override
           public void write(JsonWriter out, CreatePresetRequestSettingsContainerSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePresetRequestSettingsContainerSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePresetRequestSettingsContainerSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePresetRequestSettingsContainerSettings
   * @throws IOException if the JSON string is invalid with respect to CreatePresetRequestSettingsContainerSettings
   */
  public static CreatePresetRequestSettingsContainerSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePresetRequestSettingsContainerSettings.class);
  }

  /**
   * Convert an instance of CreatePresetRequestSettingsContainerSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

