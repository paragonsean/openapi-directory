/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AccelerationStatus;
import org.openapitools.client.model.BillingTagsSource;
import org.openapitools.client.model.CreateJobRequestSettings;
import org.openapitools.client.model.JobAccelerationSettings;
import org.openapitools.client.model.JobMessages;
import org.openapitools.client.model.JobPhase;
import org.openapitools.client.model.JobStatus;
import org.openapitools.client.model.JobTiming;
import org.openapitools.client.model.SimulateReservedQueue;
import org.openapitools.client.model.StatusUpdateInterval;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Each job converts an input file into an output file or files. For more information, see the User Guide at https://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:13.098140-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Job {
  public static final String SERIALIZED_NAME_ACCELERATION_SETTINGS = "AccelerationSettings";
  @SerializedName(SERIALIZED_NAME_ACCELERATION_SETTINGS)
  private JobAccelerationSettings accelerationSettings;

  public static final String SERIALIZED_NAME_ACCELERATION_STATUS = "AccelerationStatus";
  @SerializedName(SERIALIZED_NAME_ACCELERATION_STATUS)
  private AccelerationStatus accelerationStatus;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_BILLING_TAGS_SOURCE = "BillingTagsSource";
  @SerializedName(SERIALIZED_NAME_BILLING_TAGS_SOURCE)
  private BillingTagsSource billingTagsSource;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CURRENT_PHASE = "CurrentPhase";
  @SerializedName(SERIALIZED_NAME_CURRENT_PHASE)
  private JobPhase currentPhase;

  public static final String SERIALIZED_NAME_ERROR_CODE = "ErrorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private Integer errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "ErrorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_HOP_DESTINATIONS = "HopDestinations";
  @SerializedName(SERIALIZED_NAME_HOP_DESTINATIONS)
  private List hopDestinations;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_JOB_PERCENT_COMPLETE = "JobPercentComplete";
  @SerializedName(SERIALIZED_NAME_JOB_PERCENT_COMPLETE)
  private Integer jobPercentComplete;

  public static final String SERIALIZED_NAME_JOB_TEMPLATE = "JobTemplate";
  @SerializedName(SERIALIZED_NAME_JOB_TEMPLATE)
  private String jobTemplate;

  public static final String SERIALIZED_NAME_MESSAGES = "Messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private JobMessages messages;

  public static final String SERIALIZED_NAME_OUTPUT_GROUP_DETAILS = "OutputGroupDetails";
  @SerializedName(SERIALIZED_NAME_OUTPUT_GROUP_DETAILS)
  private List outputGroupDetails;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_QUEUE = "Queue";
  @SerializedName(SERIALIZED_NAME_QUEUE)
  private String queue;

  public static final String SERIALIZED_NAME_QUEUE_TRANSITIONS = "QueueTransitions";
  @SerializedName(SERIALIZED_NAME_QUEUE_TRANSITIONS)
  private List queueTransitions;

  public static final String SERIALIZED_NAME_RETRY_COUNT = "RetryCount";
  @SerializedName(SERIALIZED_NAME_RETRY_COUNT)
  private Integer retryCount;

  public static final String SERIALIZED_NAME_ROLE = "Role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public static final String SERIALIZED_NAME_SETTINGS = "Settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private CreateJobRequestSettings settings;

  public static final String SERIALIZED_NAME_SIMULATE_RESERVED_QUEUE = "SimulateReservedQueue";
  @SerializedName(SERIALIZED_NAME_SIMULATE_RESERVED_QUEUE)
  private SimulateReservedQueue simulateReservedQueue;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private JobStatus status;

  public static final String SERIALIZED_NAME_STATUS_UPDATE_INTERVAL = "StatusUpdateInterval";
  @SerializedName(SERIALIZED_NAME_STATUS_UPDATE_INTERVAL)
  private StatusUpdateInterval statusUpdateInterval;

  public static final String SERIALIZED_NAME_TIMING = "Timing";
  @SerializedName(SERIALIZED_NAME_TIMING)
  private JobTiming timing;

  public static final String SERIALIZED_NAME_USER_METADATA = "UserMetadata";
  @SerializedName(SERIALIZED_NAME_USER_METADATA)
  private Map userMetadata;

  public static final String SERIALIZED_NAME_WARNINGS = "Warnings";
  @SerializedName(SERIALIZED_NAME_WARNINGS)
  private List warnings;

  public Job() {
  }

  public Job accelerationSettings(JobAccelerationSettings accelerationSettings) {
    this.accelerationSettings = accelerationSettings;
    return this;
  }

  /**
   * Get accelerationSettings
   * @return accelerationSettings
   */
  @javax.annotation.Nullable
  public JobAccelerationSettings getAccelerationSettings() {
    return accelerationSettings;
  }

  public void setAccelerationSettings(JobAccelerationSettings accelerationSettings) {
    this.accelerationSettings = accelerationSettings;
  }


  public Job accelerationStatus(AccelerationStatus accelerationStatus) {
    this.accelerationStatus = accelerationStatus;
    return this;
  }

  /**
   * Get accelerationStatus
   * @return accelerationStatus
   */
  @javax.annotation.Nullable
  public AccelerationStatus getAccelerationStatus() {
    return accelerationStatus;
  }

  public void setAccelerationStatus(AccelerationStatus accelerationStatus) {
    this.accelerationStatus = accelerationStatus;
  }


  public Job arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public Job billingTagsSource(BillingTagsSource billingTagsSource) {
    this.billingTagsSource = billingTagsSource;
    return this;
  }

  /**
   * Get billingTagsSource
   * @return billingTagsSource
   */
  @javax.annotation.Nullable
  public BillingTagsSource getBillingTagsSource() {
    return billingTagsSource;
  }

  public void setBillingTagsSource(BillingTagsSource billingTagsSource) {
    this.billingTagsSource = billingTagsSource;
  }


  public Job clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public Job createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Job currentPhase(JobPhase currentPhase) {
    this.currentPhase = currentPhase;
    return this;
  }

  /**
   * Get currentPhase
   * @return currentPhase
   */
  @javax.annotation.Nullable
  public JobPhase getCurrentPhase() {
    return currentPhase;
  }

  public void setCurrentPhase(JobPhase currentPhase) {
    this.currentPhase = currentPhase;
  }


  public Job errorCode(Integer errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  public Integer getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }


  public Job errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public Job hopDestinations(List hopDestinations) {
    this.hopDestinations = hopDestinations;
    return this;
  }

  /**
   * Get hopDestinations
   * @return hopDestinations
   */
  @javax.annotation.Nullable
  public List getHopDestinations() {
    return hopDestinations;
  }

  public void setHopDestinations(List hopDestinations) {
    this.hopDestinations = hopDestinations;
  }


  public Job id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Job jobPercentComplete(Integer jobPercentComplete) {
    this.jobPercentComplete = jobPercentComplete;
    return this;
  }

  /**
   * Get jobPercentComplete
   * @return jobPercentComplete
   */
  @javax.annotation.Nullable
  public Integer getJobPercentComplete() {
    return jobPercentComplete;
  }

  public void setJobPercentComplete(Integer jobPercentComplete) {
    this.jobPercentComplete = jobPercentComplete;
  }


  public Job jobTemplate(String jobTemplate) {
    this.jobTemplate = jobTemplate;
    return this;
  }

  /**
   * Get jobTemplate
   * @return jobTemplate
   */
  @javax.annotation.Nullable
  public String getJobTemplate() {
    return jobTemplate;
  }

  public void setJobTemplate(String jobTemplate) {
    this.jobTemplate = jobTemplate;
  }


  public Job messages(JobMessages messages) {
    this.messages = messages;
    return this;
  }

  /**
   * Get messages
   * @return messages
   */
  @javax.annotation.Nullable
  public JobMessages getMessages() {
    return messages;
  }

  public void setMessages(JobMessages messages) {
    this.messages = messages;
  }


  public Job outputGroupDetails(List outputGroupDetails) {
    this.outputGroupDetails = outputGroupDetails;
    return this;
  }

  /**
   * Get outputGroupDetails
   * @return outputGroupDetails
   */
  @javax.annotation.Nullable
  public List getOutputGroupDetails() {
    return outputGroupDetails;
  }

  public void setOutputGroupDetails(List outputGroupDetails) {
    this.outputGroupDetails = outputGroupDetails;
  }


  public Job priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public Job queue(String queue) {
    this.queue = queue;
    return this;
  }

  /**
   * Get queue
   * @return queue
   */
  @javax.annotation.Nullable
  public String getQueue() {
    return queue;
  }

  public void setQueue(String queue) {
    this.queue = queue;
  }


  public Job queueTransitions(List queueTransitions) {
    this.queueTransitions = queueTransitions;
    return this;
  }

  /**
   * Get queueTransitions
   * @return queueTransitions
   */
  @javax.annotation.Nullable
  public List getQueueTransitions() {
    return queueTransitions;
  }

  public void setQueueTransitions(List queueTransitions) {
    this.queueTransitions = queueTransitions;
  }


  public Job retryCount(Integer retryCount) {
    this.retryCount = retryCount;
    return this;
  }

  /**
   * Get retryCount
   * @return retryCount
   */
  @javax.annotation.Nullable
  public Integer getRetryCount() {
    return retryCount;
  }

  public void setRetryCount(Integer retryCount) {
    this.retryCount = retryCount;
  }


  public Job role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nonnull
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }


  public Job settings(CreateJobRequestSettings settings) {
    this.settings = settings;
    return this;
  }

  /**
   * Get settings
   * @return settings
   */
  @javax.annotation.Nonnull
  public CreateJobRequestSettings getSettings() {
    return settings;
  }

  public void setSettings(CreateJobRequestSettings settings) {
    this.settings = settings;
  }


  public Job simulateReservedQueue(SimulateReservedQueue simulateReservedQueue) {
    this.simulateReservedQueue = simulateReservedQueue;
    return this;
  }

  /**
   * Get simulateReservedQueue
   * @return simulateReservedQueue
   */
  @javax.annotation.Nullable
  public SimulateReservedQueue getSimulateReservedQueue() {
    return simulateReservedQueue;
  }

  public void setSimulateReservedQueue(SimulateReservedQueue simulateReservedQueue) {
    this.simulateReservedQueue = simulateReservedQueue;
  }


  public Job status(JobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public JobStatus getStatus() {
    return status;
  }

  public void setStatus(JobStatus status) {
    this.status = status;
  }


  public Job statusUpdateInterval(StatusUpdateInterval statusUpdateInterval) {
    this.statusUpdateInterval = statusUpdateInterval;
    return this;
  }

  /**
   * Get statusUpdateInterval
   * @return statusUpdateInterval
   */
  @javax.annotation.Nullable
  public StatusUpdateInterval getStatusUpdateInterval() {
    return statusUpdateInterval;
  }

  public void setStatusUpdateInterval(StatusUpdateInterval statusUpdateInterval) {
    this.statusUpdateInterval = statusUpdateInterval;
  }


  public Job timing(JobTiming timing) {
    this.timing = timing;
    return this;
  }

  /**
   * Get timing
   * @return timing
   */
  @javax.annotation.Nullable
  public JobTiming getTiming() {
    return timing;
  }

  public void setTiming(JobTiming timing) {
    this.timing = timing;
  }


  public Job userMetadata(Map userMetadata) {
    this.userMetadata = userMetadata;
    return this;
  }

  /**
   * Get userMetadata
   * @return userMetadata
   */
  @javax.annotation.Nullable
  public Map getUserMetadata() {
    return userMetadata;
  }

  public void setUserMetadata(Map userMetadata) {
    this.userMetadata = userMetadata;
  }


  public Job warnings(List warnings) {
    this.warnings = warnings;
    return this;
  }

  /**
   * Get warnings
   * @return warnings
   */
  @javax.annotation.Nullable
  public List getWarnings() {
    return warnings;
  }

  public void setWarnings(List warnings) {
    this.warnings = warnings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.accelerationSettings, job.accelerationSettings) &&
        Objects.equals(this.accelerationStatus, job.accelerationStatus) &&
        Objects.equals(this.arn, job.arn) &&
        Objects.equals(this.billingTagsSource, job.billingTagsSource) &&
        Objects.equals(this.clientRequestToken, job.clientRequestToken) &&
        Objects.equals(this.createdAt, job.createdAt) &&
        Objects.equals(this.currentPhase, job.currentPhase) &&
        Objects.equals(this.errorCode, job.errorCode) &&
        Objects.equals(this.errorMessage, job.errorMessage) &&
        Objects.equals(this.hopDestinations, job.hopDestinations) &&
        Objects.equals(this.id, job.id) &&
        Objects.equals(this.jobPercentComplete, job.jobPercentComplete) &&
        Objects.equals(this.jobTemplate, job.jobTemplate) &&
        Objects.equals(this.messages, job.messages) &&
        Objects.equals(this.outputGroupDetails, job.outputGroupDetails) &&
        Objects.equals(this.priority, job.priority) &&
        Objects.equals(this.queue, job.queue) &&
        Objects.equals(this.queueTransitions, job.queueTransitions) &&
        Objects.equals(this.retryCount, job.retryCount) &&
        Objects.equals(this.role, job.role) &&
        Objects.equals(this.settings, job.settings) &&
        Objects.equals(this.simulateReservedQueue, job.simulateReservedQueue) &&
        Objects.equals(this.status, job.status) &&
        Objects.equals(this.statusUpdateInterval, job.statusUpdateInterval) &&
        Objects.equals(this.timing, job.timing) &&
        Objects.equals(this.userMetadata, job.userMetadata) &&
        Objects.equals(this.warnings, job.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerationSettings, accelerationStatus, arn, billingTagsSource, clientRequestToken, createdAt, currentPhase, errorCode, errorMessage, hopDestinations, id, jobPercentComplete, jobTemplate, messages, outputGroupDetails, priority, queue, queueTransitions, retryCount, role, settings, simulateReservedQueue, status, statusUpdateInterval, timing, userMetadata, warnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    sb.append("    accelerationSettings: ").append(toIndentedString(accelerationSettings)).append("\n");
    sb.append("    accelerationStatus: ").append(toIndentedString(accelerationStatus)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    billingTagsSource: ").append(toIndentedString(billingTagsSource)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currentPhase: ").append(toIndentedString(currentPhase)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    hopDestinations: ").append(toIndentedString(hopDestinations)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jobPercentComplete: ").append(toIndentedString(jobPercentComplete)).append("\n");
    sb.append("    jobTemplate: ").append(toIndentedString(jobTemplate)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    outputGroupDetails: ").append(toIndentedString(outputGroupDetails)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("    queueTransitions: ").append(toIndentedString(queueTransitions)).append("\n");
    sb.append("    retryCount: ").append(toIndentedString(retryCount)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    simulateReservedQueue: ").append(toIndentedString(simulateReservedQueue)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusUpdateInterval: ").append(toIndentedString(statusUpdateInterval)).append("\n");
    sb.append("    timing: ").append(toIndentedString(timing)).append("\n");
    sb.append("    userMetadata: ").append(toIndentedString(userMetadata)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccelerationSettings");
    openapiFields.add("AccelerationStatus");
    openapiFields.add("Arn");
    openapiFields.add("BillingTagsSource");
    openapiFields.add("ClientRequestToken");
    openapiFields.add("CreatedAt");
    openapiFields.add("CurrentPhase");
    openapiFields.add("ErrorCode");
    openapiFields.add("ErrorMessage");
    openapiFields.add("HopDestinations");
    openapiFields.add("Id");
    openapiFields.add("JobPercentComplete");
    openapiFields.add("JobTemplate");
    openapiFields.add("Messages");
    openapiFields.add("OutputGroupDetails");
    openapiFields.add("Priority");
    openapiFields.add("Queue");
    openapiFields.add("QueueTransitions");
    openapiFields.add("RetryCount");
    openapiFields.add("Role");
    openapiFields.add("Settings");
    openapiFields.add("SimulateReservedQueue");
    openapiFields.add("Status");
    openapiFields.add("StatusUpdateInterval");
    openapiFields.add("Timing");
    openapiFields.add("UserMetadata");
    openapiFields.add("Warnings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Role");
    openapiRequiredFields.add("Settings");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Job
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Job.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Job is not found in the empty JSON string", Job.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Job.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Job` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Job.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccelerationSettings`
      if (jsonObj.get("AccelerationSettings") != null && !jsonObj.get("AccelerationSettings").isJsonNull()) {
        JobAccelerationSettings.validateJsonElement(jsonObj.get("AccelerationSettings"));
      }
      // validate the optional field `AccelerationStatus`
      if (jsonObj.get("AccelerationStatus") != null && !jsonObj.get("AccelerationStatus").isJsonNull()) {
        AccelerationStatus.validateJsonElement(jsonObj.get("AccelerationStatus"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `BillingTagsSource`
      if (jsonObj.get("BillingTagsSource") != null && !jsonObj.get("BillingTagsSource").isJsonNull()) {
        BillingTagsSource.validateJsonElement(jsonObj.get("BillingTagsSource"));
      }
      // validate the optional field `ClientRequestToken`
      if (jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClientRequestToken"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `CurrentPhase`
      if (jsonObj.get("CurrentPhase") != null && !jsonObj.get("CurrentPhase").isJsonNull()) {
        JobPhase.validateJsonElement(jsonObj.get("CurrentPhase"));
      }
      // validate the optional field `ErrorCode`
      if (jsonObj.get("ErrorCode") != null && !jsonObj.get("ErrorCode").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ErrorCode"));
      }
      // validate the optional field `ErrorMessage`
      if (jsonObj.get("ErrorMessage") != null && !jsonObj.get("ErrorMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorMessage"));
      }
      // validate the optional field `HopDestinations`
      if (jsonObj.get("HopDestinations") != null && !jsonObj.get("HopDestinations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("HopDestinations"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `JobPercentComplete`
      if (jsonObj.get("JobPercentComplete") != null && !jsonObj.get("JobPercentComplete").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("JobPercentComplete"));
      }
      // validate the optional field `JobTemplate`
      if (jsonObj.get("JobTemplate") != null && !jsonObj.get("JobTemplate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JobTemplate"));
      }
      // validate the optional field `Messages`
      if (jsonObj.get("Messages") != null && !jsonObj.get("Messages").isJsonNull()) {
        JobMessages.validateJsonElement(jsonObj.get("Messages"));
      }
      // validate the optional field `OutputGroupDetails`
      if (jsonObj.get("OutputGroupDetails") != null && !jsonObj.get("OutputGroupDetails").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("OutputGroupDetails"));
      }
      // validate the optional field `Priority`
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Priority"));
      }
      // validate the optional field `Queue`
      if (jsonObj.get("Queue") != null && !jsonObj.get("Queue").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Queue"));
      }
      // validate the optional field `QueueTransitions`
      if (jsonObj.get("QueueTransitions") != null && !jsonObj.get("QueueTransitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("QueueTransitions"));
      }
      // validate the optional field `RetryCount`
      if (jsonObj.get("RetryCount") != null && !jsonObj.get("RetryCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RetryCount"));
      }
      // validate the required field `Role`
      String.validateJsonElement(jsonObj.get("Role"));
      // validate the required field `Settings`
      CreateJobRequestSettings.validateJsonElement(jsonObj.get("Settings"));
      // validate the optional field `SimulateReservedQueue`
      if (jsonObj.get("SimulateReservedQueue") != null && !jsonObj.get("SimulateReservedQueue").isJsonNull()) {
        SimulateReservedQueue.validateJsonElement(jsonObj.get("SimulateReservedQueue"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        JobStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusUpdateInterval`
      if (jsonObj.get("StatusUpdateInterval") != null && !jsonObj.get("StatusUpdateInterval").isJsonNull()) {
        StatusUpdateInterval.validateJsonElement(jsonObj.get("StatusUpdateInterval"));
      }
      // validate the optional field `Timing`
      if (jsonObj.get("Timing") != null && !jsonObj.get("Timing").isJsonNull()) {
        JobTiming.validateJsonElement(jsonObj.get("Timing"));
      }
      // validate the optional field `UserMetadata`
      if (jsonObj.get("UserMetadata") != null && !jsonObj.get("UserMetadata").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("UserMetadata"));
      }
      // validate the optional field `Warnings`
      if (jsonObj.get("Warnings") != null && !jsonObj.get("Warnings").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Warnings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Job.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Job' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Job> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Job.class));

       return (TypeAdapter<T>) new TypeAdapter<Job>() {
           @Override
           public void write(JsonWriter out, Job value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Job read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Job given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Job
   * @throws IOException if the JSON string is invalid with respect to Job
   */
  public static Job fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Job.class);
  }

  /**
   * Convert an instance of Job to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

