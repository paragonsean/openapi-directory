/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * When you use the setting Time delta to adjust the sync between your sidecar captions and your video, use this setting to specify the units for the delta that you specify. When you don&#39;t specify a value for Time delta units, MediaConvert uses seconds by default.
 */
@JsonAdapter(FileSourceTimeDeltaUnits.Adapter.class)
public enum FileSourceTimeDeltaUnits {
  
  SECONDS("SECONDS"),
  
  MILLISECONDS("MILLISECONDS");

  private String value;

  FileSourceTimeDeltaUnits(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FileSourceTimeDeltaUnits fromValue(String value) {
    for (FileSourceTimeDeltaUnits b : FileSourceTimeDeltaUnits.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FileSourceTimeDeltaUnits> {
    @Override
    public void write(final JsonWriter jsonWriter, final FileSourceTimeDeltaUnits enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FileSourceTimeDeltaUnits read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FileSourceTimeDeltaUnits.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    FileSourceTimeDeltaUnits.fromValue(value);
  }
}

