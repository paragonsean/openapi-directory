/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest files. The value is calculated as follows: either the program date and time are initialized using the input timecode source, or the time is initialized using the input timecode source and the date is initialized using the timestamp_offset.
 */
@JsonAdapter(HlsProgramDateTime.Adapter.class)
public enum HlsProgramDateTime {
  
  INCLUDE("INCLUDE"),
  
  EXCLUDE("EXCLUDE");

  private String value;

  HlsProgramDateTime(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static HlsProgramDateTime fromValue(String value) {
    for (HlsProgramDateTime b : HlsProgramDateTime.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<HlsProgramDateTime> {
    @Override
    public void write(final JsonWriter jsonWriter, final HlsProgramDateTime enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public HlsProgramDateTime read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return HlsProgramDateTime.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    HlsProgramDateTime.fromValue(value);
  }
}

