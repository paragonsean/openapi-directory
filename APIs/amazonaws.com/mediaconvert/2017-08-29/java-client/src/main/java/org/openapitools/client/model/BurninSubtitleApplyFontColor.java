/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Ignore this setting unless Style passthrough is set to Enabled and Font color set to Black, Yellow, Red, Green, Blue, or Hex. Use Apply font color for additional font color controls. When you choose White text only, or leave blank, your font color setting only applies to white text in your input captions. For example, if your font color setting is Yellow, and your input captions have red and white text, your output captions will have red and yellow text. When you choose ALL_TEXT, your font color setting applies to all of your output captions text.
 */
@JsonAdapter(BurninSubtitleApplyFontColor.Adapter.class)
public enum BurninSubtitleApplyFontColor {
  
  WHITE_TEXT_ONLY("WHITE_TEXT_ONLY"),
  
  ALL_TEXT("ALL_TEXT");

  private String value;

  BurninSubtitleApplyFontColor(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BurninSubtitleApplyFontColor fromValue(String value) {
    for (BurninSubtitleApplyFontColor b : BurninSubtitleApplyFontColor.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BurninSubtitleApplyFontColor> {
    @Override
    public void write(final JsonWriter jsonWriter, final BurninSubtitleApplyFontColor enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BurninSubtitleApplyFontColor read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BurninSubtitleApplyFontColor.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BurninSubtitleApplyFontColor.fromValue(value);
  }
}

