/*
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specify whether the text spacing in your captions is set by the captions grid, or varies depending on letter width. Choose fixed grid to conform to the spacing specified in the captions file more accurately. Choose proportional to make the text easier to read for closed captions.
 */
@JsonAdapter(BurninSubtitleTeletextSpacing.Adapter.class)
public enum BurninSubtitleTeletextSpacing {
  
  FIXED_GRID("FIXED_GRID"),
  
  PROPORTIONAL("PROPORTIONAL"),
  
  AUTO("AUTO");

  private String value;

  BurninSubtitleTeletextSpacing(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BurninSubtitleTeletextSpacing fromValue(String value) {
    for (BurninSubtitleTeletextSpacing b : BurninSubtitleTeletextSpacing.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BurninSubtitleTeletextSpacing> {
    @Override
    public void write(final JsonWriter jsonWriter, final BurninSubtitleTeletextSpacing enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BurninSubtitleTeletextSpacing read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BurninSubtitleTeletextSpacing.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BurninSubtitleTeletextSpacing.fromValue(value);
  }
}

