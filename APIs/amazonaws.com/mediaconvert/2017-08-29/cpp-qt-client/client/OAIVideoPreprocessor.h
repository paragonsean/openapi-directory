/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoPreprocessor.h
 *
 * Find additional transcoding features under Preprocessors. Enable the features at each output individually. These features are disabled by default.
 */

#ifndef OAIVideoPreprocessor_H
#define OAIVideoPreprocessor_H

#include <QJsonObject>

#include "OAIVideoPreprocessor_ColorCorrector.h"
#include "OAIVideoPreprocessor_Deinterlacer.h"
#include "OAIVideoPreprocessor_DolbyVision.h"
#include "OAIVideoPreprocessor_Hdr10Plus.h"
#include "OAIVideoPreprocessor_ImageInserter.h"
#include "OAIVideoPreprocessor_NoiseReducer.h"
#include "OAIVideoPreprocessor_PartnerWatermarking.h"
#include "OAIVideoPreprocessor_TimecodeBurnin.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVideoPreprocessor_ColorCorrector;
class OAIVideoPreprocessor_Deinterlacer;
class OAIVideoPreprocessor_DolbyVision;
class OAIVideoPreprocessor_Hdr10Plus;
class OAIVideoPreprocessor_ImageInserter;
class OAIVideoPreprocessor_NoiseReducer;
class OAIVideoPreprocessor_PartnerWatermarking;
class OAIVideoPreprocessor_TimecodeBurnin;

class OAIVideoPreprocessor : public OAIObject {
public:
    OAIVideoPreprocessor();
    OAIVideoPreprocessor(QString json);
    ~OAIVideoPreprocessor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVideoPreprocessor_ColorCorrector getColorCorrector() const;
    void setColorCorrector(const OAIVideoPreprocessor_ColorCorrector &color_corrector);
    bool is_color_corrector_Set() const;
    bool is_color_corrector_Valid() const;

    OAIVideoPreprocessor_Deinterlacer getDeinterlacer() const;
    void setDeinterlacer(const OAIVideoPreprocessor_Deinterlacer &deinterlacer);
    bool is_deinterlacer_Set() const;
    bool is_deinterlacer_Valid() const;

    OAIVideoPreprocessor_DolbyVision getDolbyVision() const;
    void setDolbyVision(const OAIVideoPreprocessor_DolbyVision &dolby_vision);
    bool is_dolby_vision_Set() const;
    bool is_dolby_vision_Valid() const;

    OAIVideoPreprocessor_Hdr10Plus getHdr10Plus() const;
    void setHdr10Plus(const OAIVideoPreprocessor_Hdr10Plus &hdr10_plus);
    bool is_hdr10_plus_Set() const;
    bool is_hdr10_plus_Valid() const;

    OAIVideoPreprocessor_ImageInserter getImageInserter() const;
    void setImageInserter(const OAIVideoPreprocessor_ImageInserter &image_inserter);
    bool is_image_inserter_Set() const;
    bool is_image_inserter_Valid() const;

    OAIVideoPreprocessor_NoiseReducer getNoiseReducer() const;
    void setNoiseReducer(const OAIVideoPreprocessor_NoiseReducer &noise_reducer);
    bool is_noise_reducer_Set() const;
    bool is_noise_reducer_Valid() const;

    OAIVideoPreprocessor_PartnerWatermarking getPartnerWatermarking() const;
    void setPartnerWatermarking(const OAIVideoPreprocessor_PartnerWatermarking &partner_watermarking);
    bool is_partner_watermarking_Set() const;
    bool is_partner_watermarking_Valid() const;

    OAIVideoPreprocessor_TimecodeBurnin getTimecodeBurnin() const;
    void setTimecodeBurnin(const OAIVideoPreprocessor_TimecodeBurnin &timecode_burnin);
    bool is_timecode_burnin_Set() const;
    bool is_timecode_burnin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVideoPreprocessor_ColorCorrector m_color_corrector;
    bool m_color_corrector_isSet;
    bool m_color_corrector_isValid;

    OAIVideoPreprocessor_Deinterlacer m_deinterlacer;
    bool m_deinterlacer_isSet;
    bool m_deinterlacer_isValid;

    OAIVideoPreprocessor_DolbyVision m_dolby_vision;
    bool m_dolby_vision_isSet;
    bool m_dolby_vision_isValid;

    OAIVideoPreprocessor_Hdr10Plus m_hdr10_plus;
    bool m_hdr10_plus_isSet;
    bool m_hdr10_plus_isValid;

    OAIVideoPreprocessor_ImageInserter m_image_inserter;
    bool m_image_inserter_isSet;
    bool m_image_inserter_isValid;

    OAIVideoPreprocessor_NoiseReducer m_noise_reducer;
    bool m_noise_reducer_isSet;
    bool m_noise_reducer_isValid;

    OAIVideoPreprocessor_PartnerWatermarking m_partner_watermarking;
    bool m_partner_watermarking_isSet;
    bool m_partner_watermarking_isValid;

    OAIVideoPreprocessor_TimecodeBurnin m_timecode_burnin;
    bool m_timecode_burnin_isSet;
    bool m_timecode_burnin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoPreprocessor)

#endif // OAIVideoPreprocessor_H
