/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINoiseReducer_TemporalFilterSettings.h
 *
 * 
 */

#ifndef OAINoiseReducer_TemporalFilterSettings_H
#define OAINoiseReducer_TemporalFilterSettings_H

#include <QJsonObject>

#include "OAINoiseFilterPostTemporalSharpening.h"
#include "OAINoiseFilterPostTemporalSharpeningStrength.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINoiseReducer_TemporalFilterSettings : public OAIObject {
public:
    OAINoiseReducer_TemporalFilterSettings();
    OAINoiseReducer_TemporalFilterSettings(QString json);
    ~OAINoiseReducer_TemporalFilterSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAggressiveMode() const;
    void setAggressiveMode(const qint32 &aggressive_mode);
    bool is_aggressive_mode_Set() const;
    bool is_aggressive_mode_Valid() const;

    OAINoiseFilterPostTemporalSharpening getPostTemporalSharpening() const;
    void setPostTemporalSharpening(const OAINoiseFilterPostTemporalSharpening &post_temporal_sharpening);
    bool is_post_temporal_sharpening_Set() const;
    bool is_post_temporal_sharpening_Valid() const;

    OAINoiseFilterPostTemporalSharpeningStrength getPostTemporalSharpeningStrength() const;
    void setPostTemporalSharpeningStrength(const OAINoiseFilterPostTemporalSharpeningStrength &post_temporal_sharpening_strength);
    bool is_post_temporal_sharpening_strength_Set() const;
    bool is_post_temporal_sharpening_strength_Valid() const;

    qint32 getSpeed() const;
    void setSpeed(const qint32 &speed);
    bool is_speed_Set() const;
    bool is_speed_Valid() const;

    qint32 getStrength() const;
    void setStrength(const qint32 &strength);
    bool is_strength_Set() const;
    bool is_strength_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_aggressive_mode;
    bool m_aggressive_mode_isSet;
    bool m_aggressive_mode_isValid;

    OAINoiseFilterPostTemporalSharpening m_post_temporal_sharpening;
    bool m_post_temporal_sharpening_isSet;
    bool m_post_temporal_sharpening_isValid;

    OAINoiseFilterPostTemporalSharpeningStrength m_post_temporal_sharpening_strength;
    bool m_post_temporal_sharpening_strength_isSet;
    bool m_post_temporal_sharpening_strength_isValid;

    qint32 m_speed;
    bool m_speed_isSet;
    bool m_speed_isValid;

    qint32 m_strength;
    bool m_strength_isSet;
    bool m_strength_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINoiseReducer_TemporalFilterSettings)

#endif // OAINoiseReducer_TemporalFilterSettings_H
