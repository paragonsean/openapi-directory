/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMpdScte35Source.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMpdScte35Source::OAIMpdScte35Source(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMpdScte35Source::OAIMpdScte35Source() {
    this->initializeModel();
}

OAIMpdScte35Source::~OAIMpdScte35Source() {}

void OAIMpdScte35Source::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMpdScte35Source::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMpdScte35Source::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PASSTHROUGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMpdScte35Source::PASSTHROUGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMpdScte35Source::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMpdScte35Source::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMpdScte35Source::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMpdScte35Source::PASSTHROUGH:
            val = "PASSTHROUGH";
            break;
        case eOAIMpdScte35Source::NONE:
            val = "NONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMpdScte35Source::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMpdScte35Source::eOAIMpdScte35Source OAIMpdScte35Source::getValue() const {
    return m_value;
}

void OAIMpdScte35Source::setValue(const OAIMpdScte35Source::eOAIMpdScte35Source& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMpdScte35Source::isSet() const {
    
    return m_value_isSet;
}

bool OAIMpdScte35Source::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
