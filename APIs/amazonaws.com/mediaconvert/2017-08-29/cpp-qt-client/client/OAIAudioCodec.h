/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioCodec.h
 *
 * Choose the audio codec for this output. Note that the option Dolby Digital passthrough applies only to Dolby Digital and Dolby Digital Plus audio inputs. Make sure that you choose a codec that&#39;s supported with your output container: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#reference-codecs-containers-output-audio For audio-only outputs, make sure that both your input audio codec and your output audio codec are supported for audio-only workflows. For more information, see: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers-input.html#reference-codecs-containers-input-audio-only and https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#audio-only-output
 */

#ifndef OAIAudioCodec_H
#define OAIAudioCodec_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudioCodec : public OAIEnum {
public:
    OAIAudioCodec();
    OAIAudioCodec(QString json);
    ~OAIAudioCodec() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIAudioCodec {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        AAC, 
        MP2, 
        MP3, 
        WAV, 
        AIFF, 
        AC3, 
        EAC3, 
        EAC3_ATMOS, 
        VORBIS, 
        OPUS, 
        PASSTHROUGH
    };
    OAIAudioCodec::eOAIAudioCodec getValue() const;
    void setValue(const OAIAudioCodec::eOAIAudioCodec& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIAudioCodec m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioCodec)

#endif // OAIAudioCodec_H
