/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEac3AtmosDynamicRangeControl.h
 *
 * Specify whether MediaConvert should use any dynamic range control metadata from your input file. Keep the default value, Custom, to provide dynamic range control values in your job settings. Choose Follow source to use the metadata from your input. Related settings--Use these settings to specify your dynamic range control values: Dynamic range compression line and Dynamic range compression RF. When you keep the value Custom for Dynamic range control and you don&#39;t specify values for the related settings, MediaConvert uses default values for those settings.
 */

#ifndef OAIEac3AtmosDynamicRangeControl_H
#define OAIEac3AtmosDynamicRangeControl_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEac3AtmosDynamicRangeControl : public OAIEnum {
public:
    OAIEac3AtmosDynamicRangeControl();
    OAIEac3AtmosDynamicRangeControl(QString json);
    ~OAIEac3AtmosDynamicRangeControl() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIEac3AtmosDynamicRangeControl {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        SPECIFIED, 
        INITIALIZE_FROM_SOURCE
    };
    OAIEac3AtmosDynamicRangeControl::eOAIEac3AtmosDynamicRangeControl getValue() const;
    void setValue(const OAIEac3AtmosDynamicRangeControl::eOAIEac3AtmosDynamicRangeControl& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIEac3AtmosDynamicRangeControl m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEac3AtmosDynamicRangeControl)

#endif // OAIEac3AtmosDynamicRangeControl_H
