/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAc3Settings.h
 *
 * Required when you set Codec to the value AC3.
 */

#ifndef OAIAc3Settings_H
#define OAIAc3Settings_H

#include <QJsonObject>

#include "OAIAc3BitstreamMode.h"
#include "OAIAc3CodingMode.h"
#include "OAIAc3DynamicRangeCompressionLine.h"
#include "OAIAc3DynamicRangeCompressionProfile.h"
#include "OAIAc3DynamicRangeCompressionRf.h"
#include "OAIAc3LfeFilter.h"
#include "OAIAc3MetadataControl.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAc3Settings : public OAIObject {
public:
    OAIAc3Settings();
    OAIAc3Settings(QString json);
    ~OAIAc3Settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    OAIAc3BitstreamMode getBitstreamMode() const;
    void setBitstreamMode(const OAIAc3BitstreamMode &bitstream_mode);
    bool is_bitstream_mode_Set() const;
    bool is_bitstream_mode_Valid() const;

    OAIAc3CodingMode getCodingMode() const;
    void setCodingMode(const OAIAc3CodingMode &coding_mode);
    bool is_coding_mode_Set() const;
    bool is_coding_mode_Valid() const;

    qint32 getDialnorm() const;
    void setDialnorm(const qint32 &dialnorm);
    bool is_dialnorm_Set() const;
    bool is_dialnorm_Valid() const;

    OAIAc3DynamicRangeCompressionLine getDynamicRangeCompressionLine() const;
    void setDynamicRangeCompressionLine(const OAIAc3DynamicRangeCompressionLine &dynamic_range_compression_line);
    bool is_dynamic_range_compression_line_Set() const;
    bool is_dynamic_range_compression_line_Valid() const;

    OAIAc3DynamicRangeCompressionProfile getDynamicRangeCompressionProfile() const;
    void setDynamicRangeCompressionProfile(const OAIAc3DynamicRangeCompressionProfile &dynamic_range_compression_profile);
    bool is_dynamic_range_compression_profile_Set() const;
    bool is_dynamic_range_compression_profile_Valid() const;

    OAIAc3DynamicRangeCompressionRf getDynamicRangeCompressionRf() const;
    void setDynamicRangeCompressionRf(const OAIAc3DynamicRangeCompressionRf &dynamic_range_compression_rf);
    bool is_dynamic_range_compression_rf_Set() const;
    bool is_dynamic_range_compression_rf_Valid() const;

    OAIAc3LfeFilter getLfeFilter() const;
    void setLfeFilter(const OAIAc3LfeFilter &lfe_filter);
    bool is_lfe_filter_Set() const;
    bool is_lfe_filter_Valid() const;

    OAIAc3MetadataControl getMetadataControl() const;
    void setMetadataControl(const OAIAc3MetadataControl &metadata_control);
    bool is_metadata_control_Set() const;
    bool is_metadata_control_Valid() const;

    qint32 getSampleRate() const;
    void setSampleRate(const qint32 &sample_rate);
    bool is_sample_rate_Set() const;
    bool is_sample_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    OAIAc3BitstreamMode m_bitstream_mode;
    bool m_bitstream_mode_isSet;
    bool m_bitstream_mode_isValid;

    OAIAc3CodingMode m_coding_mode;
    bool m_coding_mode_isSet;
    bool m_coding_mode_isValid;

    qint32 m_dialnorm;
    bool m_dialnorm_isSet;
    bool m_dialnorm_isValid;

    OAIAc3DynamicRangeCompressionLine m_dynamic_range_compression_line;
    bool m_dynamic_range_compression_line_isSet;
    bool m_dynamic_range_compression_line_isValid;

    OAIAc3DynamicRangeCompressionProfile m_dynamic_range_compression_profile;
    bool m_dynamic_range_compression_profile_isSet;
    bool m_dynamic_range_compression_profile_isValid;

    OAIAc3DynamicRangeCompressionRf m_dynamic_range_compression_rf;
    bool m_dynamic_range_compression_rf_isSet;
    bool m_dynamic_range_compression_rf_isValid;

    OAIAc3LfeFilter m_lfe_filter;
    bool m_lfe_filter_isSet;
    bool m_lfe_filter_isValid;

    OAIAc3MetadataControl m_metadata_control;
    bool m_metadata_control_isSet;
    bool m_metadata_control_isValid;

    qint32 m_sample_rate;
    bool m_sample_rate_isSet;
    bool m_sample_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAc3Settings)

#endif // OAIAc3Settings_H
