/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILanguageCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILanguageCode::OAILanguageCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILanguageCode::OAILanguageCode() {
    this->initializeModel();
}

OAILanguageCode::~OAILanguageCode() {}

void OAILanguageCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILanguageCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILanguageCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ENG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ENG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SPA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FRA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FRA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::DEU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZHO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ZHO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ARA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JPN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::JPN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::RUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::POR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ITA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ITA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("URD", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::URD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VIE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::VIE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KOR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::PAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ABK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ABK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AFR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AKA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AKA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SQI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SQI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AMH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AMH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ARG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HYE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HYE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ASM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ASM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AVA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AVA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AYM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AYM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AZE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::AZE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BAK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::EUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BIH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BIH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BIS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BIS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BOS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BOS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BRE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BRE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BUL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MYA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MYA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KHM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KHM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CHA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CHE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NYA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NYA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CHU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CHV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::COR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::COS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CRE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CRE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HRV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HRV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CES", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::DAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DIV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::DIV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NLD", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NLD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DZO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::DZO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ENM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EPO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::EPO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EST", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::EST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EWE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::EWE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FAO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FIJ", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FIJ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FRM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FRM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FUL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GLA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GLA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GLG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GLG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LUG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LUG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ELL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ELL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GRN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GRN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GUJ", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GUJ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HAT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HAU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HAU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HEB", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HEB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HUN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::HUN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ISL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ISL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IDO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::IDO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IBO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::IBO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IND", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::IND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::INA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IKU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::IKU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IPK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::IPK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JAV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::JAV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAZ", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KAZ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KIK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KIK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KIR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KIR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KOM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KON", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KUA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KUA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KUR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::KUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LAO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LAV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LIM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LUB", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LUB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LTZ", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::LTZ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MKD", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MKD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MLG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MLG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MSA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MSA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MLT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MLT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GLV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::GLV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MRI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MRI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MAH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MON", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::MON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAU", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NAU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NAV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NDE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NDE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NBL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NBL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NDO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NDO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEP", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NEP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SME", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOB", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NOB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NNO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::NNO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OCI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::OCI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OJI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::OJI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ORI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ORM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OSS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::OSS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PLI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::PLI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FAS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::POL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PUS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::PUS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::QUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QAA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::QAA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RON", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::RON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ROH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ROH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::RUN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SMO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SMO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SAG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SRD", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SRD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SRB", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SRB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SNA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SNA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("III", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::III;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SND", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SLK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SLK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SLV", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SLV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SOM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SOT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SOT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SUN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SWA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SWA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SSW", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SSW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SWE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SWE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TGL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TGL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAH", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TAH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TGK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TGK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::THA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BOD", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::BOD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TIR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TIR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TON", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TSO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TSO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TSN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TSN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TUR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TUR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TUK", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TUK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TWI", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TWI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UIG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::UIG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UKR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::UKR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UZB", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::UZB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::VEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VOL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::VOL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WLN", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::WLN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CYM", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::CYM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FRY", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::FRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WOL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::WOL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XHO", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::XHO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YID", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::YID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YOR", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::YOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZHA", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ZHA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZUL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ZUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORJ", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::ORJ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QPC", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::QPC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TNG", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::TNG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SRP", Qt::CaseInsensitive) == 0) {
        m_value = eOAILanguageCode::SRP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILanguageCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILanguageCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILanguageCode::ENG:
            val = "ENG";
            break;
        case eOAILanguageCode::SPA:
            val = "SPA";
            break;
        case eOAILanguageCode::FRA:
            val = "FRA";
            break;
        case eOAILanguageCode::DEU:
            val = "DEU";
            break;
        case eOAILanguageCode::GER:
            val = "GER";
            break;
        case eOAILanguageCode::ZHO:
            val = "ZHO";
            break;
        case eOAILanguageCode::ARA:
            val = "ARA";
            break;
        case eOAILanguageCode::HIN:
            val = "HIN";
            break;
        case eOAILanguageCode::JPN:
            val = "JPN";
            break;
        case eOAILanguageCode::RUS:
            val = "RUS";
            break;
        case eOAILanguageCode::POR:
            val = "POR";
            break;
        case eOAILanguageCode::ITA:
            val = "ITA";
            break;
        case eOAILanguageCode::URD:
            val = "URD";
            break;
        case eOAILanguageCode::VIE:
            val = "VIE";
            break;
        case eOAILanguageCode::KOR:
            val = "KOR";
            break;
        case eOAILanguageCode::PAN:
            val = "PAN";
            break;
        case eOAILanguageCode::ABK:
            val = "ABK";
            break;
        case eOAILanguageCode::AAR:
            val = "AAR";
            break;
        case eOAILanguageCode::AFR:
            val = "AFR";
            break;
        case eOAILanguageCode::AKA:
            val = "AKA";
            break;
        case eOAILanguageCode::SQI:
            val = "SQI";
            break;
        case eOAILanguageCode::AMH:
            val = "AMH";
            break;
        case eOAILanguageCode::ARG:
            val = "ARG";
            break;
        case eOAILanguageCode::HYE:
            val = "HYE";
            break;
        case eOAILanguageCode::ASM:
            val = "ASM";
            break;
        case eOAILanguageCode::AVA:
            val = "AVA";
            break;
        case eOAILanguageCode::AVE:
            val = "AVE";
            break;
        case eOAILanguageCode::AYM:
            val = "AYM";
            break;
        case eOAILanguageCode::AZE:
            val = "AZE";
            break;
        case eOAILanguageCode::BAM:
            val = "BAM";
            break;
        case eOAILanguageCode::BAK:
            val = "BAK";
            break;
        case eOAILanguageCode::EUS:
            val = "EUS";
            break;
        case eOAILanguageCode::BEL:
            val = "BEL";
            break;
        case eOAILanguageCode::BEN:
            val = "BEN";
            break;
        case eOAILanguageCode::BIH:
            val = "BIH";
            break;
        case eOAILanguageCode::BIS:
            val = "BIS";
            break;
        case eOAILanguageCode::BOS:
            val = "BOS";
            break;
        case eOAILanguageCode::BRE:
            val = "BRE";
            break;
        case eOAILanguageCode::BUL:
            val = "BUL";
            break;
        case eOAILanguageCode::MYA:
            val = "MYA";
            break;
        case eOAILanguageCode::CAT:
            val = "CAT";
            break;
        case eOAILanguageCode::KHM:
            val = "KHM";
            break;
        case eOAILanguageCode::CHA:
            val = "CHA";
            break;
        case eOAILanguageCode::CHE:
            val = "CHE";
            break;
        case eOAILanguageCode::NYA:
            val = "NYA";
            break;
        case eOAILanguageCode::CHU:
            val = "CHU";
            break;
        case eOAILanguageCode::CHV:
            val = "CHV";
            break;
        case eOAILanguageCode::COR:
            val = "COR";
            break;
        case eOAILanguageCode::COS:
            val = "COS";
            break;
        case eOAILanguageCode::CRE:
            val = "CRE";
            break;
        case eOAILanguageCode::HRV:
            val = "HRV";
            break;
        case eOAILanguageCode::CES:
            val = "CES";
            break;
        case eOAILanguageCode::DAN:
            val = "DAN";
            break;
        case eOAILanguageCode::DIV:
            val = "DIV";
            break;
        case eOAILanguageCode::NLD:
            val = "NLD";
            break;
        case eOAILanguageCode::DZO:
            val = "DZO";
            break;
        case eOAILanguageCode::ENM:
            val = "ENM";
            break;
        case eOAILanguageCode::EPO:
            val = "EPO";
            break;
        case eOAILanguageCode::EST:
            val = "EST";
            break;
        case eOAILanguageCode::EWE:
            val = "EWE";
            break;
        case eOAILanguageCode::FAO:
            val = "FAO";
            break;
        case eOAILanguageCode::FIJ:
            val = "FIJ";
            break;
        case eOAILanguageCode::FIN:
            val = "FIN";
            break;
        case eOAILanguageCode::FRM:
            val = "FRM";
            break;
        case eOAILanguageCode::FUL:
            val = "FUL";
            break;
        case eOAILanguageCode::GLA:
            val = "GLA";
            break;
        case eOAILanguageCode::GLG:
            val = "GLG";
            break;
        case eOAILanguageCode::LUG:
            val = "LUG";
            break;
        case eOAILanguageCode::KAT:
            val = "KAT";
            break;
        case eOAILanguageCode::ELL:
            val = "ELL";
            break;
        case eOAILanguageCode::GRN:
            val = "GRN";
            break;
        case eOAILanguageCode::GUJ:
            val = "GUJ";
            break;
        case eOAILanguageCode::HAT:
            val = "HAT";
            break;
        case eOAILanguageCode::HAU:
            val = "HAU";
            break;
        case eOAILanguageCode::HEB:
            val = "HEB";
            break;
        case eOAILanguageCode::HER:
            val = "HER";
            break;
        case eOAILanguageCode::HMO:
            val = "HMO";
            break;
        case eOAILanguageCode::HUN:
            val = "HUN";
            break;
        case eOAILanguageCode::ISL:
            val = "ISL";
            break;
        case eOAILanguageCode::IDO:
            val = "IDO";
            break;
        case eOAILanguageCode::IBO:
            val = "IBO";
            break;
        case eOAILanguageCode::IND:
            val = "IND";
            break;
        case eOAILanguageCode::INA:
            val = "INA";
            break;
        case eOAILanguageCode::ILE:
            val = "ILE";
            break;
        case eOAILanguageCode::IKU:
            val = "IKU";
            break;
        case eOAILanguageCode::IPK:
            val = "IPK";
            break;
        case eOAILanguageCode::GLE:
            val = "GLE";
            break;
        case eOAILanguageCode::JAV:
            val = "JAV";
            break;
        case eOAILanguageCode::KAL:
            val = "KAL";
            break;
        case eOAILanguageCode::KAN:
            val = "KAN";
            break;
        case eOAILanguageCode::KAU:
            val = "KAU";
            break;
        case eOAILanguageCode::KAS:
            val = "KAS";
            break;
        case eOAILanguageCode::KAZ:
            val = "KAZ";
            break;
        case eOAILanguageCode::KIK:
            val = "KIK";
            break;
        case eOAILanguageCode::KIN:
            val = "KIN";
            break;
        case eOAILanguageCode::KIR:
            val = "KIR";
            break;
        case eOAILanguageCode::KOM:
            val = "KOM";
            break;
        case eOAILanguageCode::KON:
            val = "KON";
            break;
        case eOAILanguageCode::KUA:
            val = "KUA";
            break;
        case eOAILanguageCode::KUR:
            val = "KUR";
            break;
        case eOAILanguageCode::LAO:
            val = "LAO";
            break;
        case eOAILanguageCode::LAT:
            val = "LAT";
            break;
        case eOAILanguageCode::LAV:
            val = "LAV";
            break;
        case eOAILanguageCode::LIM:
            val = "LIM";
            break;
        case eOAILanguageCode::LIN:
            val = "LIN";
            break;
        case eOAILanguageCode::LIT:
            val = "LIT";
            break;
        case eOAILanguageCode::LUB:
            val = "LUB";
            break;
        case eOAILanguageCode::LTZ:
            val = "LTZ";
            break;
        case eOAILanguageCode::MKD:
            val = "MKD";
            break;
        case eOAILanguageCode::MLG:
            val = "MLG";
            break;
        case eOAILanguageCode::MSA:
            val = "MSA";
            break;
        case eOAILanguageCode::MAL:
            val = "MAL";
            break;
        case eOAILanguageCode::MLT:
            val = "MLT";
            break;
        case eOAILanguageCode::GLV:
            val = "GLV";
            break;
        case eOAILanguageCode::MRI:
            val = "MRI";
            break;
        case eOAILanguageCode::MAR:
            val = "MAR";
            break;
        case eOAILanguageCode::MAH:
            val = "MAH";
            break;
        case eOAILanguageCode::MON:
            val = "MON";
            break;
        case eOAILanguageCode::NAU:
            val = "NAU";
            break;
        case eOAILanguageCode::NAV:
            val = "NAV";
            break;
        case eOAILanguageCode::NDE:
            val = "NDE";
            break;
        case eOAILanguageCode::NBL:
            val = "NBL";
            break;
        case eOAILanguageCode::NDO:
            val = "NDO";
            break;
        case eOAILanguageCode::NEP:
            val = "NEP";
            break;
        case eOAILanguageCode::SME:
            val = "SME";
            break;
        case eOAILanguageCode::NOR:
            val = "NOR";
            break;
        case eOAILanguageCode::NOB:
            val = "NOB";
            break;
        case eOAILanguageCode::NNO:
            val = "NNO";
            break;
        case eOAILanguageCode::OCI:
            val = "OCI";
            break;
        case eOAILanguageCode::OJI:
            val = "OJI";
            break;
        case eOAILanguageCode::ORI:
            val = "ORI";
            break;
        case eOAILanguageCode::ORM:
            val = "ORM";
            break;
        case eOAILanguageCode::OSS:
            val = "OSS";
            break;
        case eOAILanguageCode::PLI:
            val = "PLI";
            break;
        case eOAILanguageCode::FAS:
            val = "FAS";
            break;
        case eOAILanguageCode::POL:
            val = "POL";
            break;
        case eOAILanguageCode::PUS:
            val = "PUS";
            break;
        case eOAILanguageCode::QUE:
            val = "QUE";
            break;
        case eOAILanguageCode::QAA:
            val = "QAA";
            break;
        case eOAILanguageCode::RON:
            val = "RON";
            break;
        case eOAILanguageCode::ROH:
            val = "ROH";
            break;
        case eOAILanguageCode::RUN:
            val = "RUN";
            break;
        case eOAILanguageCode::SMO:
            val = "SMO";
            break;
        case eOAILanguageCode::SAG:
            val = "SAG";
            break;
        case eOAILanguageCode::SAN:
            val = "SAN";
            break;
        case eOAILanguageCode::SRD:
            val = "SRD";
            break;
        case eOAILanguageCode::SRB:
            val = "SRB";
            break;
        case eOAILanguageCode::SNA:
            val = "SNA";
            break;
        case eOAILanguageCode::III:
            val = "III";
            break;
        case eOAILanguageCode::SND:
            val = "SND";
            break;
        case eOAILanguageCode::SIN:
            val = "SIN";
            break;
        case eOAILanguageCode::SLK:
            val = "SLK";
            break;
        case eOAILanguageCode::SLV:
            val = "SLV";
            break;
        case eOAILanguageCode::SOM:
            val = "SOM";
            break;
        case eOAILanguageCode::SOT:
            val = "SOT";
            break;
        case eOAILanguageCode::SUN:
            val = "SUN";
            break;
        case eOAILanguageCode::SWA:
            val = "SWA";
            break;
        case eOAILanguageCode::SSW:
            val = "SSW";
            break;
        case eOAILanguageCode::SWE:
            val = "SWE";
            break;
        case eOAILanguageCode::TGL:
            val = "TGL";
            break;
        case eOAILanguageCode::TAH:
            val = "TAH";
            break;
        case eOAILanguageCode::TGK:
            val = "TGK";
            break;
        case eOAILanguageCode::TAM:
            val = "TAM";
            break;
        case eOAILanguageCode::TAT:
            val = "TAT";
            break;
        case eOAILanguageCode::TEL:
            val = "TEL";
            break;
        case eOAILanguageCode::THA:
            val = "THA";
            break;
        case eOAILanguageCode::BOD:
            val = "BOD";
            break;
        case eOAILanguageCode::TIR:
            val = "TIR";
            break;
        case eOAILanguageCode::TON:
            val = "TON";
            break;
        case eOAILanguageCode::TSO:
            val = "TSO";
            break;
        case eOAILanguageCode::TSN:
            val = "TSN";
            break;
        case eOAILanguageCode::TUR:
            val = "TUR";
            break;
        case eOAILanguageCode::TUK:
            val = "TUK";
            break;
        case eOAILanguageCode::TWI:
            val = "TWI";
            break;
        case eOAILanguageCode::UIG:
            val = "UIG";
            break;
        case eOAILanguageCode::UKR:
            val = "UKR";
            break;
        case eOAILanguageCode::UZB:
            val = "UZB";
            break;
        case eOAILanguageCode::VEN:
            val = "VEN";
            break;
        case eOAILanguageCode::VOL:
            val = "VOL";
            break;
        case eOAILanguageCode::WLN:
            val = "WLN";
            break;
        case eOAILanguageCode::CYM:
            val = "CYM";
            break;
        case eOAILanguageCode::FRY:
            val = "FRY";
            break;
        case eOAILanguageCode::WOL:
            val = "WOL";
            break;
        case eOAILanguageCode::XHO:
            val = "XHO";
            break;
        case eOAILanguageCode::YID:
            val = "YID";
            break;
        case eOAILanguageCode::YOR:
            val = "YOR";
            break;
        case eOAILanguageCode::ZHA:
            val = "ZHA";
            break;
        case eOAILanguageCode::ZUL:
            val = "ZUL";
            break;
        case eOAILanguageCode::ORJ:
            val = "ORJ";
            break;
        case eOAILanguageCode::QPC:
            val = "QPC";
            break;
        case eOAILanguageCode::TNG:
            val = "TNG";
            break;
        case eOAILanguageCode::SRP:
            val = "SRP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILanguageCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILanguageCode::eOAILanguageCode OAILanguageCode::getValue() const {
    return m_value;
}

void OAILanguageCode::setValue(const OAILanguageCode::eOAILanguageCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILanguageCode::isSet() const {
    
    return m_value_isSet;
}

bool OAILanguageCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
