/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClipLimits.h
 *
 * Specify YUV limits and RGB tolerances when you set Sample range conversion to Limited range clip.
 */

#ifndef OAIClipLimits_H
#define OAIClipLimits_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClipLimits : public OAIObject {
public:
    OAIClipLimits();
    OAIClipLimits(QString json);
    ~OAIClipLimits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaximumRgbTolerance() const;
    void setMaximumRgbTolerance(const qint32 &maximum_rgb_tolerance);
    bool is_maximum_rgb_tolerance_Set() const;
    bool is_maximum_rgb_tolerance_Valid() const;

    qint32 getMaximumYuv() const;
    void setMaximumYuv(const qint32 &maximum_yuv);
    bool is_maximum_yuv_Set() const;
    bool is_maximum_yuv_Valid() const;

    qint32 getMinimumRgbTolerance() const;
    void setMinimumRgbTolerance(const qint32 &minimum_rgb_tolerance);
    bool is_minimum_rgb_tolerance_Set() const;
    bool is_minimum_rgb_tolerance_Valid() const;

    qint32 getMinimumYuv() const;
    void setMinimumYuv(const qint32 &minimum_yuv);
    bool is_minimum_yuv_Set() const;
    bool is_minimum_yuv_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_maximum_rgb_tolerance;
    bool m_maximum_rgb_tolerance_isSet;
    bool m_maximum_rgb_tolerance_isValid;

    qint32 m_maximum_yuv;
    bool m_maximum_yuv_isSet;
    bool m_maximum_yuv_isValid;

    qint32 m_minimum_rgb_tolerance;
    bool m_minimum_rgb_tolerance_isSet;
    bool m_minimum_rgb_tolerance_isValid;

    qint32 m_minimum_yuv;
    bool m_minimum_yuv_isSet;
    bool m_minimum_yuv_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClipLimits)

#endif // OAIClipLimits_H
