/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIH265TemporalIds.h
 *
 * Enables temporal layer identifiers in the encoded bitstream. Up to 3 layers are supported depending on GOP structure: I- and P-frames form one layer, reference B-frames can form a second layer and non-reference b-frames can form a third layer. Decoders can optionally decode only the lower temporal layers to generate a lower frame rate output. For example, given a bitstream with temporal IDs and with b-frames &#x3D; 1 (i.e. IbPbPb display order), a decoder could decode all the frames for full frame rate output or only the I and P frames (lowest temporal layer) for a half frame rate output.
 */

#ifndef OAIH265TemporalIds_H
#define OAIH265TemporalIds_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIH265TemporalIds : public OAIEnum {
public:
    OAIH265TemporalIds();
    OAIH265TemporalIds(QString json);
    ~OAIH265TemporalIds() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIH265TemporalIds {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DISABLED, 
        ENABLED
    };
    OAIH265TemporalIds::eOAIH265TemporalIds getValue() const;
    void setValue(const OAIH265TemporalIds::eOAIH265TemporalIds& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIH265TemporalIds m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIH265TemporalIds)

#endif // OAIH265TemporalIds_H
