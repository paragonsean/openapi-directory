/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaptionDestinationSettings_DvbSubDestinationSettings.h
 *
 * 
 */

#ifndef OAICaptionDestinationSettings_DvbSubDestinationSettings_H
#define OAICaptionDestinationSettings_DvbSubDestinationSettings_H

#include <QJsonObject>

#include "OAIDvbSubSubtitleFallbackFont.h"
#include "OAIDvbSubtitleAlignment.h"
#include "OAIDvbSubtitleApplyFontColor.h"
#include "OAIDvbSubtitleBackgroundColor.h"
#include "OAIDvbSubtitleFontColor.h"
#include "OAIDvbSubtitleOutlineColor.h"
#include "OAIDvbSubtitleShadowColor.h"
#include "OAIDvbSubtitleStylePassthrough.h"
#include "OAIDvbSubtitleTeletextSpacing.h"
#include "OAIDvbSubtitlingType.h"
#include "OAIDvbddsHandling.h"
#include "OAIFontScript.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICaptionDestinationSettings_DvbSubDestinationSettings : public OAIObject {
public:
    OAICaptionDestinationSettings_DvbSubDestinationSettings();
    OAICaptionDestinationSettings_DvbSubDestinationSettings(QString json);
    ~OAICaptionDestinationSettings_DvbSubDestinationSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDvbSubtitleAlignment getAlignment() const;
    void setAlignment(const OAIDvbSubtitleAlignment &alignment);
    bool is_alignment_Set() const;
    bool is_alignment_Valid() const;

    OAIDvbSubtitleApplyFontColor getApplyFontColor() const;
    void setApplyFontColor(const OAIDvbSubtitleApplyFontColor &apply_font_color);
    bool is_apply_font_color_Set() const;
    bool is_apply_font_color_Valid() const;

    OAIDvbSubtitleBackgroundColor getBackgroundColor() const;
    void setBackgroundColor(const OAIDvbSubtitleBackgroundColor &background_color);
    bool is_background_color_Set() const;
    bool is_background_color_Valid() const;

    qint32 getBackgroundOpacity() const;
    void setBackgroundOpacity(const qint32 &background_opacity);
    bool is_background_opacity_Set() const;
    bool is_background_opacity_Valid() const;

    OAIDvbddsHandling getDdsHandling() const;
    void setDdsHandling(const OAIDvbddsHandling &dds_handling);
    bool is_dds_handling_Set() const;
    bool is_dds_handling_Valid() const;

    qint32 getDdsXCoordinate() const;
    void setDdsXCoordinate(const qint32 &dds_x_coordinate);
    bool is_dds_x_coordinate_Set() const;
    bool is_dds_x_coordinate_Valid() const;

    qint32 getDdsYCoordinate() const;
    void setDdsYCoordinate(const qint32 &dds_y_coordinate);
    bool is_dds_y_coordinate_Set() const;
    bool is_dds_y_coordinate_Valid() const;

    OAIDvbSubSubtitleFallbackFont getFallbackFont() const;
    void setFallbackFont(const OAIDvbSubSubtitleFallbackFont &fallback_font);
    bool is_fallback_font_Set() const;
    bool is_fallback_font_Valid() const;

    OAIDvbSubtitleFontColor getFontColor() const;
    void setFontColor(const OAIDvbSubtitleFontColor &font_color);
    bool is_font_color_Set() const;
    bool is_font_color_Valid() const;

    qint32 getFontOpacity() const;
    void setFontOpacity(const qint32 &font_opacity);
    bool is_font_opacity_Set() const;
    bool is_font_opacity_Valid() const;

    qint32 getFontResolution() const;
    void setFontResolution(const qint32 &font_resolution);
    bool is_font_resolution_Set() const;
    bool is_font_resolution_Valid() const;

    OAIFontScript getFontScript() const;
    void setFontScript(const OAIFontScript &font_script);
    bool is_font_script_Set() const;
    bool is_font_script_Valid() const;

    qint32 getFontSize() const;
    void setFontSize(const qint32 &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHexFontColor() const;
    void setHexFontColor(const QString &hex_font_color);
    bool is_hex_font_color_Set() const;
    bool is_hex_font_color_Valid() const;

    OAIDvbSubtitleOutlineColor getOutlineColor() const;
    void setOutlineColor(const OAIDvbSubtitleOutlineColor &outline_color);
    bool is_outline_color_Set() const;
    bool is_outline_color_Valid() const;

    qint32 getOutlineSize() const;
    void setOutlineSize(const qint32 &outline_size);
    bool is_outline_size_Set() const;
    bool is_outline_size_Valid() const;

    OAIDvbSubtitleShadowColor getShadowColor() const;
    void setShadowColor(const OAIDvbSubtitleShadowColor &shadow_color);
    bool is_shadow_color_Set() const;
    bool is_shadow_color_Valid() const;

    qint32 getShadowOpacity() const;
    void setShadowOpacity(const qint32 &shadow_opacity);
    bool is_shadow_opacity_Set() const;
    bool is_shadow_opacity_Valid() const;

    qint32 getShadowXOffset() const;
    void setShadowXOffset(const qint32 &shadow_x_offset);
    bool is_shadow_x_offset_Set() const;
    bool is_shadow_x_offset_Valid() const;

    qint32 getShadowYOffset() const;
    void setShadowYOffset(const qint32 &shadow_y_offset);
    bool is_shadow_y_offset_Set() const;
    bool is_shadow_y_offset_Valid() const;

    OAIDvbSubtitleStylePassthrough getStylePassthrough() const;
    void setStylePassthrough(const OAIDvbSubtitleStylePassthrough &style_passthrough);
    bool is_style_passthrough_Set() const;
    bool is_style_passthrough_Valid() const;

    OAIDvbSubtitlingType getSubtitlingType() const;
    void setSubtitlingType(const OAIDvbSubtitlingType &subtitling_type);
    bool is_subtitling_type_Set() const;
    bool is_subtitling_type_Valid() const;

    OAIDvbSubtitleTeletextSpacing getTeletextSpacing() const;
    void setTeletextSpacing(const OAIDvbSubtitleTeletextSpacing &teletext_spacing);
    bool is_teletext_spacing_Set() const;
    bool is_teletext_spacing_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getXPosition() const;
    void setXPosition(const qint32 &x_position);
    bool is_x_position_Set() const;
    bool is_x_position_Valid() const;

    qint32 getYPosition() const;
    void setYPosition(const qint32 &y_position);
    bool is_y_position_Set() const;
    bool is_y_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDvbSubtitleAlignment m_alignment;
    bool m_alignment_isSet;
    bool m_alignment_isValid;

    OAIDvbSubtitleApplyFontColor m_apply_font_color;
    bool m_apply_font_color_isSet;
    bool m_apply_font_color_isValid;

    OAIDvbSubtitleBackgroundColor m_background_color;
    bool m_background_color_isSet;
    bool m_background_color_isValid;

    qint32 m_background_opacity;
    bool m_background_opacity_isSet;
    bool m_background_opacity_isValid;

    OAIDvbddsHandling m_dds_handling;
    bool m_dds_handling_isSet;
    bool m_dds_handling_isValid;

    qint32 m_dds_x_coordinate;
    bool m_dds_x_coordinate_isSet;
    bool m_dds_x_coordinate_isValid;

    qint32 m_dds_y_coordinate;
    bool m_dds_y_coordinate_isSet;
    bool m_dds_y_coordinate_isValid;

    OAIDvbSubSubtitleFallbackFont m_fallback_font;
    bool m_fallback_font_isSet;
    bool m_fallback_font_isValid;

    OAIDvbSubtitleFontColor m_font_color;
    bool m_font_color_isSet;
    bool m_font_color_isValid;

    qint32 m_font_opacity;
    bool m_font_opacity_isSet;
    bool m_font_opacity_isValid;

    qint32 m_font_resolution;
    bool m_font_resolution_isSet;
    bool m_font_resolution_isValid;

    OAIFontScript m_font_script;
    bool m_font_script_isSet;
    bool m_font_script_isValid;

    qint32 m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_hex_font_color;
    bool m_hex_font_color_isSet;
    bool m_hex_font_color_isValid;

    OAIDvbSubtitleOutlineColor m_outline_color;
    bool m_outline_color_isSet;
    bool m_outline_color_isValid;

    qint32 m_outline_size;
    bool m_outline_size_isSet;
    bool m_outline_size_isValid;

    OAIDvbSubtitleShadowColor m_shadow_color;
    bool m_shadow_color_isSet;
    bool m_shadow_color_isValid;

    qint32 m_shadow_opacity;
    bool m_shadow_opacity_isSet;
    bool m_shadow_opacity_isValid;

    qint32 m_shadow_x_offset;
    bool m_shadow_x_offset_isSet;
    bool m_shadow_x_offset_isValid;

    qint32 m_shadow_y_offset;
    bool m_shadow_y_offset_isSet;
    bool m_shadow_y_offset_isValid;

    OAIDvbSubtitleStylePassthrough m_style_passthrough;
    bool m_style_passthrough_isSet;
    bool m_style_passthrough_isValid;

    OAIDvbSubtitlingType m_subtitling_type;
    bool m_subtitling_type_isSet;
    bool m_subtitling_type_isValid;

    OAIDvbSubtitleTeletextSpacing m_teletext_spacing;
    bool m_teletext_spacing_isSet;
    bool m_teletext_spacing_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_x_position;
    bool m_x_position_isSet;
    bool m_x_position_isValid;

    qint32 m_y_position;
    bool m_y_position_isSet;
    bool m_y_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaptionDestinationSettings_DvbSubDestinationSettings)

#endif // OAICaptionDestinationSettings_DvbSubDestinationSettings_H
