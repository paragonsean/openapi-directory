/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashIsoGroupSettings.h
 *
 * Settings related to your DASH output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html.
 */

#ifndef OAIDashIsoGroupSettings_H
#define OAIDashIsoGroupSettings_H

#include <QJsonObject>

#include "OAICmafGroupSettings_DestinationSettings.h"
#include "OAIDashIsoGroupAudioChannelConfigSchemeIdUri.h"
#include "OAIDashIsoGroupSettings_Encryption.h"
#include "OAIDashIsoGroupSettings_ImageBasedTrickPlaySettings.h"
#include "OAIDashIsoHbbtvCompliance.h"
#include "OAIDashIsoImageBasedTrickPlay.h"
#include "OAIDashIsoMpdManifestBandwidthType.h"
#include "OAIDashIsoMpdProfile.h"
#include "OAIDashIsoPtsOffsetHandlingForBFrames.h"
#include "OAIDashIsoSegmentControl.h"
#include "OAIDashIsoSegmentLengthControl.h"
#include "OAIDashIsoVideoCompositionOffsets.h"
#include "OAIDashIsoWriteSegmentTimelineInRepresentation.h"
#include "OAIDashManifestStyle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICmafGroupSettings_DestinationSettings;
class OAIDashIsoGroupSettings_Encryption;
class OAIDashIsoGroupSettings_ImageBasedTrickPlaySettings;

class OAIDashIsoGroupSettings : public OAIObject {
public:
    OAIDashIsoGroupSettings();
    OAIDashIsoGroupSettings(QString json);
    ~OAIDashIsoGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdditionalManifests() const;
    void setAdditionalManifests(const QList &additional_manifests);
    bool is_additional_manifests_Set() const;
    bool is_additional_manifests_Valid() const;

    OAIDashIsoGroupAudioChannelConfigSchemeIdUri getAudioChannelConfigSchemeIdUri() const;
    void setAudioChannelConfigSchemeIdUri(const OAIDashIsoGroupAudioChannelConfigSchemeIdUri &audio_channel_config_scheme_id_uri);
    bool is_audio_channel_config_scheme_id_uri_Set() const;
    bool is_audio_channel_config_scheme_id_uri_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    OAIDashManifestStyle getDashManifestStyle() const;
    void setDashManifestStyle(const OAIDashManifestStyle &dash_manifest_style);
    bool is_dash_manifest_style_Set() const;
    bool is_dash_manifest_style_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAICmafGroupSettings_DestinationSettings getDestinationSettings() const;
    void setDestinationSettings(const OAICmafGroupSettings_DestinationSettings &destination_settings);
    bool is_destination_settings_Set() const;
    bool is_destination_settings_Valid() const;

    OAIDashIsoGroupSettings_Encryption getEncryption() const;
    void setEncryption(const OAIDashIsoGroupSettings_Encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    qint32 getFragmentLength() const;
    void setFragmentLength(const qint32 &fragment_length);
    bool is_fragment_length_Set() const;
    bool is_fragment_length_Valid() const;

    OAIDashIsoHbbtvCompliance getHbbtvCompliance() const;
    void setHbbtvCompliance(const OAIDashIsoHbbtvCompliance &hbbtv_compliance);
    bool is_hbbtv_compliance_Set() const;
    bool is_hbbtv_compliance_Valid() const;

    OAIDashIsoImageBasedTrickPlay getImageBasedTrickPlay() const;
    void setImageBasedTrickPlay(const OAIDashIsoImageBasedTrickPlay &image_based_trick_play);
    bool is_image_based_trick_play_Set() const;
    bool is_image_based_trick_play_Valid() const;

    OAIDashIsoGroupSettings_ImageBasedTrickPlaySettings getImageBasedTrickPlaySettings() const;
    void setImageBasedTrickPlaySettings(const OAIDashIsoGroupSettings_ImageBasedTrickPlaySettings &image_based_trick_play_settings);
    bool is_image_based_trick_play_settings_Set() const;
    bool is_image_based_trick_play_settings_Valid() const;

    qint32 getMinBufferTime() const;
    void setMinBufferTime(const qint32 &min_buffer_time);
    bool is_min_buffer_time_Set() const;
    bool is_min_buffer_time_Valid() const;

    double getMinFinalSegmentLength() const;
    void setMinFinalSegmentLength(const double &min_final_segment_length);
    bool is_min_final_segment_length_Set() const;
    bool is_min_final_segment_length_Valid() const;

    OAIDashIsoMpdManifestBandwidthType getMpdManifestBandwidthType() const;
    void setMpdManifestBandwidthType(const OAIDashIsoMpdManifestBandwidthType &mpd_manifest_bandwidth_type);
    bool is_mpd_manifest_bandwidth_type_Set() const;
    bool is_mpd_manifest_bandwidth_type_Valid() const;

    OAIDashIsoMpdProfile getMpdProfile() const;
    void setMpdProfile(const OAIDashIsoMpdProfile &mpd_profile);
    bool is_mpd_profile_Set() const;
    bool is_mpd_profile_Valid() const;

    OAIDashIsoPtsOffsetHandlingForBFrames getPtsOffsetHandlingForBFrames() const;
    void setPtsOffsetHandlingForBFrames(const OAIDashIsoPtsOffsetHandlingForBFrames &pts_offset_handling_for_b_frames);
    bool is_pts_offset_handling_for_b_frames_Set() const;
    bool is_pts_offset_handling_for_b_frames_Valid() const;

    OAIDashIsoSegmentControl getSegmentControl() const;
    void setSegmentControl(const OAIDashIsoSegmentControl &segment_control);
    bool is_segment_control_Set() const;
    bool is_segment_control_Valid() const;

    qint32 getSegmentLength() const;
    void setSegmentLength(const qint32 &segment_length);
    bool is_segment_length_Set() const;
    bool is_segment_length_Valid() const;

    OAIDashIsoSegmentLengthControl getSegmentLengthControl() const;
    void setSegmentLengthControl(const OAIDashIsoSegmentLengthControl &segment_length_control);
    bool is_segment_length_control_Set() const;
    bool is_segment_length_control_Valid() const;

    OAIDashIsoVideoCompositionOffsets getVideoCompositionOffsets() const;
    void setVideoCompositionOffsets(const OAIDashIsoVideoCompositionOffsets &video_composition_offsets);
    bool is_video_composition_offsets_Set() const;
    bool is_video_composition_offsets_Valid() const;

    OAIDashIsoWriteSegmentTimelineInRepresentation getWriteSegmentTimelineInRepresentation() const;
    void setWriteSegmentTimelineInRepresentation(const OAIDashIsoWriteSegmentTimelineInRepresentation &write_segment_timeline_in_representation);
    bool is_write_segment_timeline_in_representation_Set() const;
    bool is_write_segment_timeline_in_representation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_additional_manifests;
    bool m_additional_manifests_isSet;
    bool m_additional_manifests_isValid;

    OAIDashIsoGroupAudioChannelConfigSchemeIdUri m_audio_channel_config_scheme_id_uri;
    bool m_audio_channel_config_scheme_id_uri_isSet;
    bool m_audio_channel_config_scheme_id_uri_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    OAIDashManifestStyle m_dash_manifest_style;
    bool m_dash_manifest_style_isSet;
    bool m_dash_manifest_style_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAICmafGroupSettings_DestinationSettings m_destination_settings;
    bool m_destination_settings_isSet;
    bool m_destination_settings_isValid;

    OAIDashIsoGroupSettings_Encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    qint32 m_fragment_length;
    bool m_fragment_length_isSet;
    bool m_fragment_length_isValid;

    OAIDashIsoHbbtvCompliance m_hbbtv_compliance;
    bool m_hbbtv_compliance_isSet;
    bool m_hbbtv_compliance_isValid;

    OAIDashIsoImageBasedTrickPlay m_image_based_trick_play;
    bool m_image_based_trick_play_isSet;
    bool m_image_based_trick_play_isValid;

    OAIDashIsoGroupSettings_ImageBasedTrickPlaySettings m_image_based_trick_play_settings;
    bool m_image_based_trick_play_settings_isSet;
    bool m_image_based_trick_play_settings_isValid;

    qint32 m_min_buffer_time;
    bool m_min_buffer_time_isSet;
    bool m_min_buffer_time_isValid;

    double m_min_final_segment_length;
    bool m_min_final_segment_length_isSet;
    bool m_min_final_segment_length_isValid;

    OAIDashIsoMpdManifestBandwidthType m_mpd_manifest_bandwidth_type;
    bool m_mpd_manifest_bandwidth_type_isSet;
    bool m_mpd_manifest_bandwidth_type_isValid;

    OAIDashIsoMpdProfile m_mpd_profile;
    bool m_mpd_profile_isSet;
    bool m_mpd_profile_isValid;

    OAIDashIsoPtsOffsetHandlingForBFrames m_pts_offset_handling_for_b_frames;
    bool m_pts_offset_handling_for_b_frames_isSet;
    bool m_pts_offset_handling_for_b_frames_isValid;

    OAIDashIsoSegmentControl m_segment_control;
    bool m_segment_control_isSet;
    bool m_segment_control_isValid;

    qint32 m_segment_length;
    bool m_segment_length_isSet;
    bool m_segment_length_isValid;

    OAIDashIsoSegmentLengthControl m_segment_length_control;
    bool m_segment_length_control_isSet;
    bool m_segment_length_control_isValid;

    OAIDashIsoVideoCompositionOffsets m_video_composition_offsets;
    bool m_video_composition_offsets_isSet;
    bool m_video_composition_offsets_isValid;

    OAIDashIsoWriteSegmentTimelineInRepresentation m_write_segment_timeline_in_representation;
    bool m_write_segment_timeline_in_representation_isSet;
    bool m_write_segment_timeline_in_representation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashIsoGroupSettings)

#endif // OAIDashIsoGroupSettings_H
