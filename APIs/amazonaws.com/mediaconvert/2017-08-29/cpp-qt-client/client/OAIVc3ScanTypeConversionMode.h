/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVc3ScanTypeConversionMode.h
 *
 * Use this setting for interlaced outputs, when your output frame rate is half of your input frame rate. In this situation, choose Optimized interlacing to create a better quality interlaced output. In this case, each progressive frame from the input corresponds to an interlaced field in the output. Keep the default value, Basic interlacing, for all other output frame rates. With basic interlacing, MediaConvert performs any frame rate conversion first and then interlaces the frames. When you choose Optimized interlacing and you set your output frame rate to a value that isn&#39;t suitable for optimized interlacing, MediaConvert automatically falls back to basic interlacing. Required settings: To use optimized interlacing, you must set Telecine to None or Soft. You can&#39;t use optimized interlacing for hard telecine outputs. You must also set Interlace mode to a value other than Progressive.
 */

#ifndef OAIVc3ScanTypeConversionMode_H
#define OAIVc3ScanTypeConversionMode_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVc3ScanTypeConversionMode : public OAIEnum {
public:
    OAIVc3ScanTypeConversionMode();
    OAIVc3ScanTypeConversionMode(QString json);
    ~OAIVc3ScanTypeConversionMode() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIVc3ScanTypeConversionMode {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        INTERLACED, 
        INTERLACED_OPTIMIZE
    };
    OAIVc3ScanTypeConversionMode::eOAIVc3ScanTypeConversionMode getValue() const;
    void setValue(const OAIVc3ScanTypeConversionMode::eOAIVc3ScanTypeConversionMode& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIVc3ScanTypeConversionMode m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVc3ScanTypeConversionMode)

#endif // OAIVc3ScanTypeConversionMode_H
