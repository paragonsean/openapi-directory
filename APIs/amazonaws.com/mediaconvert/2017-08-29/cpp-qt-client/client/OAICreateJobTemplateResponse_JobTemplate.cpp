/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateJobTemplateResponse_JobTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateJobTemplateResponse_JobTemplate::OAICreateJobTemplateResponse_JobTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateJobTemplateResponse_JobTemplate::OAICreateJobTemplateResponse_JobTemplate() {
    this->initializeModel();
}

OAICreateJobTemplateResponse_JobTemplate::~OAICreateJobTemplateResponse_JobTemplate() {}

void OAICreateJobTemplateResponse_JobTemplate::initializeModel() {

    m_acceleration_settings_isSet = false;
    m_acceleration_settings_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_hop_destinations_isSet = false;
    m_hop_destinations_isValid = false;

    m_last_updated_isSet = false;
    m_last_updated_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_queue_isSet = false;
    m_queue_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_status_update_interval_isSet = false;
    m_status_update_interval_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreateJobTemplateResponse_JobTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateJobTemplateResponse_JobTemplate::fromJsonObject(QJsonObject json) {

    m_acceleration_settings_isValid = ::OpenAPI::fromJsonValue(m_acceleration_settings, json[QString("AccelerationSettings")]);
    m_acceleration_settings_isSet = !json[QString("AccelerationSettings")].isNull() && m_acceleration_settings_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("Category")]);
    m_category_isSet = !json[QString("Category")].isNull() && m_category_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_hop_destinations_isValid = ::OpenAPI::fromJsonValue(m_hop_destinations, json[QString("HopDestinations")]);
    m_hop_destinations_isSet = !json[QString("HopDestinations")].isNull() && m_hop_destinations_isValid;

    m_last_updated_isValid = ::OpenAPI::fromJsonValue(m_last_updated, json[QString("LastUpdated")]);
    m_last_updated_isSet = !json[QString("LastUpdated")].isNull() && m_last_updated_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("Priority")]);
    m_priority_isSet = !json[QString("Priority")].isNull() && m_priority_isValid;

    m_queue_isValid = ::OpenAPI::fromJsonValue(m_queue, json[QString("Queue")]);
    m_queue_isSet = !json[QString("Queue")].isNull() && m_queue_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("Settings")]);
    m_settings_isSet = !json[QString("Settings")].isNull() && m_settings_isValid;

    m_status_update_interval_isValid = ::OpenAPI::fromJsonValue(m_status_update_interval, json[QString("StatusUpdateInterval")]);
    m_status_update_interval_isSet = !json[QString("StatusUpdateInterval")].isNull() && m_status_update_interval_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateJobTemplateResponse_JobTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_acceleration_settings.isSet()) {
        obj.insert(QString("AccelerationSettings"), ::OpenAPI::toJsonValue(m_acceleration_settings));
    }
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_category_isSet) {
        obj.insert(QString("Category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_hop_destinations.isSet()) {
        obj.insert(QString("HopDestinations"), ::OpenAPI::toJsonValue(m_hop_destinations));
    }
    if (m_last_updated_isSet) {
        obj.insert(QString("LastUpdated"), ::OpenAPI::toJsonValue(m_last_updated));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_priority_isSet) {
        obj.insert(QString("Priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_queue_isSet) {
        obj.insert(QString("Queue"), ::OpenAPI::toJsonValue(m_queue));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("Settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_status_update_interval.isSet()) {
        obj.insert(QString("StatusUpdateInterval"), ::OpenAPI::toJsonValue(m_status_update_interval));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIJob_AccelerationSettings OAICreateJobTemplateResponse_JobTemplate::getAccelerationSettings() const {
    return m_acceleration_settings;
}
void OAICreateJobTemplateResponse_JobTemplate::setAccelerationSettings(const OAIJob_AccelerationSettings &acceleration_settings) {
    m_acceleration_settings = acceleration_settings;
    m_acceleration_settings_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_acceleration_settings_Set() const{
    return m_acceleration_settings_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_acceleration_settings_Valid() const{
    return m_acceleration_settings_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::getArn() const {
    return m_arn;
}
void OAICreateJobTemplateResponse_JobTemplate::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::getCategory() const {
    return m_category;
}
void OAICreateJobTemplateResponse_JobTemplate::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_category_Set() const{
    return m_category_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_category_Valid() const{
    return m_category_isValid;
}

QDateTime OAICreateJobTemplateResponse_JobTemplate::getCreatedAt() const {
    return m_created_at;
}
void OAICreateJobTemplateResponse_JobTemplate::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::getDescription() const {
    return m_description;
}
void OAICreateJobTemplateResponse_JobTemplate::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_description_Valid() const{
    return m_description_isValid;
}

QList OAICreateJobTemplateResponse_JobTemplate::getHopDestinations() const {
    return m_hop_destinations;
}
void OAICreateJobTemplateResponse_JobTemplate::setHopDestinations(const QList &hop_destinations) {
    m_hop_destinations = hop_destinations;
    m_hop_destinations_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_hop_destinations_Set() const{
    return m_hop_destinations_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_hop_destinations_Valid() const{
    return m_hop_destinations_isValid;
}

QDateTime OAICreateJobTemplateResponse_JobTemplate::getLastUpdated() const {
    return m_last_updated;
}
void OAICreateJobTemplateResponse_JobTemplate::setLastUpdated(const QDateTime &last_updated) {
    m_last_updated = last_updated;
    m_last_updated_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_last_updated_Set() const{
    return m_last_updated_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_last_updated_Valid() const{
    return m_last_updated_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::getName() const {
    return m_name;
}
void OAICreateJobTemplateResponse_JobTemplate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAICreateJobTemplateResponse_JobTemplate::getPriority() const {
    return m_priority;
}
void OAICreateJobTemplateResponse_JobTemplate::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAICreateJobTemplateResponse_JobTemplate::getQueue() const {
    return m_queue;
}
void OAICreateJobTemplateResponse_JobTemplate::setQueue(const QString &queue) {
    m_queue = queue;
    m_queue_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_queue_Set() const{
    return m_queue_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_queue_Valid() const{
    return m_queue_isValid;
}

OAICreateJobTemplateRequest_Settings OAICreateJobTemplateResponse_JobTemplate::getSettings() const {
    return m_settings;
}
void OAICreateJobTemplateResponse_JobTemplate::setSettings(const OAICreateJobTemplateRequest_Settings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_settings_Valid() const{
    return m_settings_isValid;
}

OAIStatusUpdateInterval OAICreateJobTemplateResponse_JobTemplate::getStatusUpdateInterval() const {
    return m_status_update_interval;
}
void OAICreateJobTemplateResponse_JobTemplate::setStatusUpdateInterval(const OAIStatusUpdateInterval &status_update_interval) {
    m_status_update_interval = status_update_interval;
    m_status_update_interval_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_status_update_interval_Set() const{
    return m_status_update_interval_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_status_update_interval_Valid() const{
    return m_status_update_interval_isValid;
}

OAIType OAICreateJobTemplateResponse_JobTemplate::getType() const {
    return m_type;
}
void OAICreateJobTemplateResponse_JobTemplate::setType(const OAIType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateJobTemplateResponse_JobTemplate::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreateJobTemplateResponse_JobTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acceleration_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hop_destinations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_update_interval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateJobTemplateResponse_JobTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_settings_isValid && true;
}

} // namespace OpenAPI
