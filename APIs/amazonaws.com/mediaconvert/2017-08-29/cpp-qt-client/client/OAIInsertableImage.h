/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsertableImage.h
 *
 * These settings apply to a specific graphic overlay. You can include multiple overlays in your job.
 */

#ifndef OAIInsertableImage_H
#define OAIInsertableImage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsertableImage : public OAIObject {
public:
    OAIInsertableImage();
    OAIInsertableImage(QString json);
    ~OAIInsertableImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    qint32 getFadeIn() const;
    void setFadeIn(const qint32 &fade_in);
    bool is_fade_in_Set() const;
    bool is_fade_in_Valid() const;

    qint32 getFadeOut() const;
    void setFadeOut(const qint32 &fade_out);
    bool is_fade_out_Set() const;
    bool is_fade_out_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getImageInserterInput() const;
    void setImageInserterInput(const QString &image_inserter_input);
    bool is_image_inserter_input_Set() const;
    bool is_image_inserter_input_Valid() const;

    qint32 getImageX() const;
    void setImageX(const qint32 &image_x);
    bool is_image_x_Set() const;
    bool is_image_x_Valid() const;

    qint32 getImageY() const;
    void setImageY(const qint32 &image_y);
    bool is_image_y_Set() const;
    bool is_image_y_Valid() const;

    qint32 getLayer() const;
    void setLayer(const qint32 &layer);
    bool is_layer_Set() const;
    bool is_layer_Valid() const;

    qint32 getOpacity() const;
    void setOpacity(const qint32 &opacity);
    bool is_opacity_Set() const;
    bool is_opacity_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    qint32 m_fade_in;
    bool m_fade_in_isSet;
    bool m_fade_in_isValid;

    qint32 m_fade_out;
    bool m_fade_out_isSet;
    bool m_fade_out_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_image_inserter_input;
    bool m_image_inserter_input_isSet;
    bool m_image_inserter_input_isValid;

    qint32 m_image_x;
    bool m_image_x_isSet;
    bool m_image_x_isValid;

    qint32 m_image_y;
    bool m_image_y_isSet;
    bool m_image_y_isValid;

    qint32 m_layer;
    bool m_layer_isSet;
    bool m_layer_isValid;

    qint32 m_opacity;
    bool m_opacity_isSet;
    bool m_opacity_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsertableImage)

#endif // OAIInsertableImage_H
