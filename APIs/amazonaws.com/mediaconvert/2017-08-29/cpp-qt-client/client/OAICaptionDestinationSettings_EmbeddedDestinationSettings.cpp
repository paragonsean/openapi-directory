/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptionDestinationSettings_EmbeddedDestinationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptionDestinationSettings_EmbeddedDestinationSettings::OAICaptionDestinationSettings_EmbeddedDestinationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptionDestinationSettings_EmbeddedDestinationSettings::OAICaptionDestinationSettings_EmbeddedDestinationSettings() {
    this->initializeModel();
}

OAICaptionDestinationSettings_EmbeddedDestinationSettings::~OAICaptionDestinationSettings_EmbeddedDestinationSettings() {}

void OAICaptionDestinationSettings_EmbeddedDestinationSettings::initializeModel() {

    m_destination608_channel_number_isSet = false;
    m_destination608_channel_number_isValid = false;

    m_destination708_service_number_isSet = false;
    m_destination708_service_number_isValid = false;
}

void OAICaptionDestinationSettings_EmbeddedDestinationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptionDestinationSettings_EmbeddedDestinationSettings::fromJsonObject(QJsonObject json) {

    m_destination608_channel_number_isValid = ::OpenAPI::fromJsonValue(m_destination608_channel_number, json[QString("Destination608ChannelNumber")]);
    m_destination608_channel_number_isSet = !json[QString("Destination608ChannelNumber")].isNull() && m_destination608_channel_number_isValid;

    m_destination708_service_number_isValid = ::OpenAPI::fromJsonValue(m_destination708_service_number, json[QString("Destination708ServiceNumber")]);
    m_destination708_service_number_isSet = !json[QString("Destination708ServiceNumber")].isNull() && m_destination708_service_number_isValid;
}

QString OAICaptionDestinationSettings_EmbeddedDestinationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptionDestinationSettings_EmbeddedDestinationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_destination608_channel_number_isSet) {
        obj.insert(QString("Destination608ChannelNumber"), ::OpenAPI::toJsonValue(m_destination608_channel_number));
    }
    if (m_destination708_service_number_isSet) {
        obj.insert(QString("Destination708ServiceNumber"), ::OpenAPI::toJsonValue(m_destination708_service_number));
    }
    return obj;
}

qint32 OAICaptionDestinationSettings_EmbeddedDestinationSettings::getDestination608ChannelNumber() const {
    return m_destination608_channel_number;
}
void OAICaptionDestinationSettings_EmbeddedDestinationSettings::setDestination608ChannelNumber(const qint32 &destination608_channel_number) {
    m_destination608_channel_number = destination608_channel_number;
    m_destination608_channel_number_isSet = true;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::is_destination608_channel_number_Set() const{
    return m_destination608_channel_number_isSet;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::is_destination608_channel_number_Valid() const{
    return m_destination608_channel_number_isValid;
}

qint32 OAICaptionDestinationSettings_EmbeddedDestinationSettings::getDestination708ServiceNumber() const {
    return m_destination708_service_number;
}
void OAICaptionDestinationSettings_EmbeddedDestinationSettings::setDestination708ServiceNumber(const qint32 &destination708_service_number) {
    m_destination708_service_number = destination708_service_number;
    m_destination708_service_number_isSet = true;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::is_destination708_service_number_Set() const{
    return m_destination708_service_number_isSet;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::is_destination708_service_number_Valid() const{
    return m_destination708_service_number_isValid;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination608_channel_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination708_service_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptionDestinationSettings_EmbeddedDestinationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
