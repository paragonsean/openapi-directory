/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioCodecSettings.h
 *
 * Settings related to audio encoding. The settings in this group vary depending on the value that you choose for your audio codec.
 */

#ifndef OAIAudioCodecSettings_H
#define OAIAudioCodecSettings_H

#include <QJsonObject>

#include "OAIAudioCodec.h"
#include "OAIAudioCodecSettings_AacSettings.h"
#include "OAIAudioCodecSettings_Ac3Settings.h"
#include "OAIAudioCodecSettings_AiffSettings.h"
#include "OAIAudioCodecSettings_Eac3AtmosSettings.h"
#include "OAIAudioCodecSettings_Eac3Settings.h"
#include "OAIAudioCodecSettings_Mp2Settings.h"
#include "OAIAudioCodecSettings_Mp3Settings.h"
#include "OAIAudioCodecSettings_OpusSettings.h"
#include "OAIAudioCodecSettings_VorbisSettings.h"
#include "OAIAudioCodecSettings_WavSettings.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAudioCodecSettings_AacSettings;
class OAIAudioCodecSettings_Ac3Settings;
class OAIAudioCodecSettings_AiffSettings;
class OAIAudioCodecSettings_Eac3AtmosSettings;
class OAIAudioCodecSettings_Eac3Settings;
class OAIAudioCodecSettings_Mp2Settings;
class OAIAudioCodecSettings_Mp3Settings;
class OAIAudioCodecSettings_OpusSettings;
class OAIAudioCodecSettings_VorbisSettings;
class OAIAudioCodecSettings_WavSettings;

class OAIAudioCodecSettings : public OAIObject {
public:
    OAIAudioCodecSettings();
    OAIAudioCodecSettings(QString json);
    ~OAIAudioCodecSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAudioCodecSettings_AacSettings getAacSettings() const;
    void setAacSettings(const OAIAudioCodecSettings_AacSettings &aac_settings);
    bool is_aac_settings_Set() const;
    bool is_aac_settings_Valid() const;

    OAIAudioCodecSettings_Ac3Settings getAc3Settings() const;
    void setAc3Settings(const OAIAudioCodecSettings_Ac3Settings &ac3_settings);
    bool is_ac3_settings_Set() const;
    bool is_ac3_settings_Valid() const;

    OAIAudioCodecSettings_AiffSettings getAiffSettings() const;
    void setAiffSettings(const OAIAudioCodecSettings_AiffSettings &aiff_settings);
    bool is_aiff_settings_Set() const;
    bool is_aiff_settings_Valid() const;

    OAIAudioCodec getCodec() const;
    void setCodec(const OAIAudioCodec &codec);
    bool is_codec_Set() const;
    bool is_codec_Valid() const;

    OAIAudioCodecSettings_Eac3AtmosSettings getEac3AtmosSettings() const;
    void setEac3AtmosSettings(const OAIAudioCodecSettings_Eac3AtmosSettings &eac3_atmos_settings);
    bool is_eac3_atmos_settings_Set() const;
    bool is_eac3_atmos_settings_Valid() const;

    OAIAudioCodecSettings_Eac3Settings getEac3Settings() const;
    void setEac3Settings(const OAIAudioCodecSettings_Eac3Settings &eac3_settings);
    bool is_eac3_settings_Set() const;
    bool is_eac3_settings_Valid() const;

    OAIAudioCodecSettings_Mp2Settings getMp2Settings() const;
    void setMp2Settings(const OAIAudioCodecSettings_Mp2Settings &mp2_settings);
    bool is_mp2_settings_Set() const;
    bool is_mp2_settings_Valid() const;

    OAIAudioCodecSettings_Mp3Settings getMp3Settings() const;
    void setMp3Settings(const OAIAudioCodecSettings_Mp3Settings &mp3_settings);
    bool is_mp3_settings_Set() const;
    bool is_mp3_settings_Valid() const;

    OAIAudioCodecSettings_OpusSettings getOpusSettings() const;
    void setOpusSettings(const OAIAudioCodecSettings_OpusSettings &opus_settings);
    bool is_opus_settings_Set() const;
    bool is_opus_settings_Valid() const;

    OAIAudioCodecSettings_VorbisSettings getVorbisSettings() const;
    void setVorbisSettings(const OAIAudioCodecSettings_VorbisSettings &vorbis_settings);
    bool is_vorbis_settings_Set() const;
    bool is_vorbis_settings_Valid() const;

    OAIAudioCodecSettings_WavSettings getWavSettings() const;
    void setWavSettings(const OAIAudioCodecSettings_WavSettings &wav_settings);
    bool is_wav_settings_Set() const;
    bool is_wav_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAudioCodecSettings_AacSettings m_aac_settings;
    bool m_aac_settings_isSet;
    bool m_aac_settings_isValid;

    OAIAudioCodecSettings_Ac3Settings m_ac3_settings;
    bool m_ac3_settings_isSet;
    bool m_ac3_settings_isValid;

    OAIAudioCodecSettings_AiffSettings m_aiff_settings;
    bool m_aiff_settings_isSet;
    bool m_aiff_settings_isValid;

    OAIAudioCodec m_codec;
    bool m_codec_isSet;
    bool m_codec_isValid;

    OAIAudioCodecSettings_Eac3AtmosSettings m_eac3_atmos_settings;
    bool m_eac3_atmos_settings_isSet;
    bool m_eac3_atmos_settings_isValid;

    OAIAudioCodecSettings_Eac3Settings m_eac3_settings;
    bool m_eac3_settings_isSet;
    bool m_eac3_settings_isValid;

    OAIAudioCodecSettings_Mp2Settings m_mp2_settings;
    bool m_mp2_settings_isSet;
    bool m_mp2_settings_isValid;

    OAIAudioCodecSettings_Mp3Settings m_mp3_settings;
    bool m_mp3_settings_isSet;
    bool m_mp3_settings_isValid;

    OAIAudioCodecSettings_OpusSettings m_opus_settings;
    bool m_opus_settings_isSet;
    bool m_opus_settings_isValid;

    OAIAudioCodecSettings_VorbisSettings m_vorbis_settings;
    bool m_vorbis_settings_isSet;
    bool m_vorbis_settings_isValid;

    OAIAudioCodecSettings_WavSettings m_wav_settings;
    bool m_wav_settings_isSet;
    bool m_wav_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioCodecSettings)

#endif // OAIAudioCodecSettings_H
