/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAllowedRenditionSize.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAllowedRenditionSize::OAIAllowedRenditionSize(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAllowedRenditionSize::OAIAllowedRenditionSize() {
    this->initializeModel();
}

OAIAllowedRenditionSize::~OAIAllowedRenditionSize() {}

void OAIAllowedRenditionSize::initializeModel() {

    m_height_isSet = false;
    m_height_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAIAllowedRenditionSize::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAllowedRenditionSize::fromJsonObject(QJsonObject json) {

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("Height")]);
    m_height_isSet = !json[QString("Height")].isNull() && m_height_isValid;

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("Required")]);
    m_required_isSet = !json[QString("Required")].isNull() && m_required_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("Width")]);
    m_width_isSet = !json[QString("Width")].isNull() && m_width_isValid;
}

QString OAIAllowedRenditionSize::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAllowedRenditionSize::asJsonObject() const {
    QJsonObject obj;
    if (m_height_isSet) {
        obj.insert(QString("Height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_required.isSet()) {
        obj.insert(QString("Required"), ::OpenAPI::toJsonValue(m_required));
    }
    if (m_width_isSet) {
        obj.insert(QString("Width"), ::OpenAPI::toJsonValue(m_width));
    }
    return obj;
}

qint32 OAIAllowedRenditionSize::getHeight() const {
    return m_height;
}
void OAIAllowedRenditionSize::setHeight(const qint32 &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAIAllowedRenditionSize::is_height_Set() const{
    return m_height_isSet;
}

bool OAIAllowedRenditionSize::is_height_Valid() const{
    return m_height_isValid;
}

OAIRequiredFlag OAIAllowedRenditionSize::getRequired() const {
    return m_required;
}
void OAIAllowedRenditionSize::setRequired(const OAIRequiredFlag &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIAllowedRenditionSize::is_required_Set() const{
    return m_required_isSet;
}

bool OAIAllowedRenditionSize::is_required_Valid() const{
    return m_required_isValid;
}

qint32 OAIAllowedRenditionSize::getWidth() const {
    return m_width;
}
void OAIAllowedRenditionSize::setWidth(const qint32 &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAIAllowedRenditionSize::is_width_Set() const{
    return m_width_isSet;
}

bool OAIAllowedRenditionSize::is_width_Valid() const{
    return m_width_isValid;
}

bool OAIAllowedRenditionSize::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAllowedRenditionSize::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
