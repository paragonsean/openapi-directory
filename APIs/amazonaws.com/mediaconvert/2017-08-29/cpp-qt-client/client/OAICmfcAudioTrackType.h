/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICmfcAudioTrackType.h
 *
 * Use this setting to control the values that MediaConvert puts in your HLS parent playlist to control how the client player selects which audio track to play. The other options for this setting determine the values that MediaConvert writes for the DEFAULT and AUTOSELECT attributes of the EXT-X-MEDIA entry for the audio variant. For more information about these attributes, see the Apple documentation article https://developer.apple.com/documentation/http_live_streaming/example_playlists_for_http_live_streaming/adding_alternate_media_to_a_playlist. Choose Alternate audio, auto select, default to set DEFAULT&#x3D;YES and AUTOSELECT&#x3D;YES. Choose this value for only one variant in your output group. Choose Alternate audio, auto select, not default to set DEFAULT&#x3D;NO and AUTOSELECT&#x3D;YES. Choose Alternate Audio, Not Auto Select to set DEFAULT&#x3D;NO and AUTOSELECT&#x3D;NO. When you don&#39;t specify a value for this setting, MediaConvert defaults to Alternate audio, auto select, default. When there is more than one variant in your output group, you must explicitly choose a value for this setting.
 */

#ifndef OAICmfcAudioTrackType_H
#define OAICmfcAudioTrackType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICmfcAudioTrackType : public OAIEnum {
public:
    OAICmfcAudioTrackType();
    OAICmfcAudioTrackType(QString json);
    ~OAICmfcAudioTrackType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAICmfcAudioTrackType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        AUTO_SELECT_DEFAULT, 
        AUTO_SELECT, 
        NOT_AUTO_SELECT
    };
    OAICmfcAudioTrackType::eOAICmfcAudioTrackType getValue() const;
    void setValue(const OAICmfcAudioTrackType::eOAICmfcAudioTrackType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAICmfcAudioTrackType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICmfcAudioTrackType)

#endif // OAICmfcAudioTrackType_H
