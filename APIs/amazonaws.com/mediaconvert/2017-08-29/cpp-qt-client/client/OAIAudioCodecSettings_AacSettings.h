/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioCodecSettings_AacSettings.h
 *
 * 
 */

#ifndef OAIAudioCodecSettings_AacSettings_H
#define OAIAudioCodecSettings_AacSettings_H

#include <QJsonObject>

#include "OAIAacAudioDescriptionBroadcasterMix.h"
#include "OAIAacCodecProfile.h"
#include "OAIAacCodingMode.h"
#include "OAIAacRateControlMode.h"
#include "OAIAacRawFormat.h"
#include "OAIAacSpecification.h"
#include "OAIAacVbrQuality.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudioCodecSettings_AacSettings : public OAIObject {
public:
    OAIAudioCodecSettings_AacSettings();
    OAIAudioCodecSettings_AacSettings(QString json);
    ~OAIAudioCodecSettings_AacSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAacAudioDescriptionBroadcasterMix getAudioDescriptionBroadcasterMix() const;
    void setAudioDescriptionBroadcasterMix(const OAIAacAudioDescriptionBroadcasterMix &audio_description_broadcaster_mix);
    bool is_audio_description_broadcaster_mix_Set() const;
    bool is_audio_description_broadcaster_mix_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    OAIAacCodecProfile getCodecProfile() const;
    void setCodecProfile(const OAIAacCodecProfile &codec_profile);
    bool is_codec_profile_Set() const;
    bool is_codec_profile_Valid() const;

    OAIAacCodingMode getCodingMode() const;
    void setCodingMode(const OAIAacCodingMode &coding_mode);
    bool is_coding_mode_Set() const;
    bool is_coding_mode_Valid() const;

    OAIAacRateControlMode getRateControlMode() const;
    void setRateControlMode(const OAIAacRateControlMode &rate_control_mode);
    bool is_rate_control_mode_Set() const;
    bool is_rate_control_mode_Valid() const;

    OAIAacRawFormat getRawFormat() const;
    void setRawFormat(const OAIAacRawFormat &raw_format);
    bool is_raw_format_Set() const;
    bool is_raw_format_Valid() const;

    qint32 getSampleRate() const;
    void setSampleRate(const qint32 &sample_rate);
    bool is_sample_rate_Set() const;
    bool is_sample_rate_Valid() const;

    OAIAacSpecification getSpecification() const;
    void setSpecification(const OAIAacSpecification &specification);
    bool is_specification_Set() const;
    bool is_specification_Valid() const;

    OAIAacVbrQuality getVbrQuality() const;
    void setVbrQuality(const OAIAacVbrQuality &vbr_quality);
    bool is_vbr_quality_Set() const;
    bool is_vbr_quality_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAacAudioDescriptionBroadcasterMix m_audio_description_broadcaster_mix;
    bool m_audio_description_broadcaster_mix_isSet;
    bool m_audio_description_broadcaster_mix_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    OAIAacCodecProfile m_codec_profile;
    bool m_codec_profile_isSet;
    bool m_codec_profile_isValid;

    OAIAacCodingMode m_coding_mode;
    bool m_coding_mode_isSet;
    bool m_coding_mode_isValid;

    OAIAacRateControlMode m_rate_control_mode;
    bool m_rate_control_mode_isSet;
    bool m_rate_control_mode_isValid;

    OAIAacRawFormat m_raw_format;
    bool m_raw_format_isSet;
    bool m_raw_format_isValid;

    qint32 m_sample_rate;
    bool m_sample_rate_isSet;
    bool m_sample_rate_isValid;

    OAIAacSpecification m_specification;
    bool m_specification_isSet;
    bool m_specification_isValid;

    OAIAacVbrQuality m_vbr_quality;
    bool m_vbr_quality_isSet;
    bool m_vbr_quality_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioCodecSettings_AacSettings)

#endif // OAIAudioCodecSettings_AacSettings_H
