/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProresCodecProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProresCodecProfile::OAIProresCodecProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProresCodecProfile::OAIProresCodecProfile() {
    this->initializeModel();
}

OAIProresCodecProfile::~OAIProresCodecProfile() {}

void OAIProresCodecProfile::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProresCodecProfile::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProresCodecProfile::fromJson(QString jsonString) {
    
    if ( jsonString.compare("APPLE_PRORES_422", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_422;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLE_PRORES_422_HQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_422_HQ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLE_PRORES_422_LT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_422_LT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLE_PRORES_422_PROXY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_422_PROXY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLE_PRORES_4444", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_4444;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLE_PRORES_4444_XQ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProresCodecProfile::_4444_XQ;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProresCodecProfile::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProresCodecProfile::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProresCodecProfile::_422:
            val = "APPLE_PRORES_422";
            break;
        case eOAIProresCodecProfile::_422_HQ:
            val = "APPLE_PRORES_422_HQ";
            break;
        case eOAIProresCodecProfile::_422_LT:
            val = "APPLE_PRORES_422_LT";
            break;
        case eOAIProresCodecProfile::_422_PROXY:
            val = "APPLE_PRORES_422_PROXY";
            break;
        case eOAIProresCodecProfile::_4444:
            val = "APPLE_PRORES_4444";
            break;
        case eOAIProresCodecProfile::_4444_XQ:
            val = "APPLE_PRORES_4444_XQ";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProresCodecProfile::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProresCodecProfile::eOAIProresCodecProfile OAIProresCodecProfile::getValue() const {
    return m_value;
}

void OAIProresCodecProfile::setValue(const OAIProresCodecProfile::eOAIProresCodecProfile& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProresCodecProfile::isSet() const {
    
    return m_value_isSet;
}

bool OAIProresCodecProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
