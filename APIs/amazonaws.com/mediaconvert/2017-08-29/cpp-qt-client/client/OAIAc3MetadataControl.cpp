/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAc3MetadataControl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAc3MetadataControl::OAIAc3MetadataControl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAc3MetadataControl::OAIAc3MetadataControl() {
    this->initializeModel();
}

OAIAc3MetadataControl::~OAIAc3MetadataControl() {}

void OAIAc3MetadataControl::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAc3MetadataControl::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAc3MetadataControl::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FOLLOW_INPUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3MetadataControl::FOLLOW_INPUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USE_CONFIGURED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAc3MetadataControl::USE_CONFIGURED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAc3MetadataControl::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAc3MetadataControl::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAc3MetadataControl::FOLLOW_INPUT:
            val = "FOLLOW_INPUT";
            break;
        case eOAIAc3MetadataControl::USE_CONFIGURED:
            val = "USE_CONFIGURED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAc3MetadataControl::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAc3MetadataControl::eOAIAc3MetadataControl OAIAc3MetadataControl::getValue() const {
    return m_value;
}

void OAIAc3MetadataControl::setValue(const OAIAc3MetadataControl::eOAIAc3MetadataControl& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAc3MetadataControl::isSet() const {
    
    return m_value_isSet;
}

bool OAIAc3MetadataControl::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
