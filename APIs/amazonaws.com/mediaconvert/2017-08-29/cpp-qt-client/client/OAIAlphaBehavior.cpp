/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlphaBehavior.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlphaBehavior::OAIAlphaBehavior(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlphaBehavior::OAIAlphaBehavior() {
    this->initializeModel();
}

OAIAlphaBehavior::~OAIAlphaBehavior() {}

void OAIAlphaBehavior::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlphaBehavior::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlphaBehavior::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DISCARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlphaBehavior::DISCARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REMAP_TO_LUMA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlphaBehavior::REMAP_TO_LUMA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlphaBehavior::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlphaBehavior::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlphaBehavior::DISCARD:
            val = "DISCARD";
            break;
        case eOAIAlphaBehavior::REMAP_TO_LUMA:
            val = "REMAP_TO_LUMA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlphaBehavior::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlphaBehavior::eOAIAlphaBehavior OAIAlphaBehavior::getValue() const {
    return m_value;
}

void OAIAlphaBehavior::setValue(const OAIAlphaBehavior::eOAIAlphaBehavior& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlphaBehavior::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlphaBehavior::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
