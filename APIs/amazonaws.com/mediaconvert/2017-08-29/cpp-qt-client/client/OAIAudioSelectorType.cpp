/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudioSelectorType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudioSelectorType::OAIAudioSelectorType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudioSelectorType::OAIAudioSelectorType() {
    this->initializeModel();
}

OAIAudioSelectorType::~OAIAudioSelectorType() {}

void OAIAudioSelectorType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAudioSelectorType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAudioSelectorType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioSelectorType::PID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRACK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioSelectorType::TRACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LANGUAGE_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioSelectorType::LANGUAGE_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HLS_RENDITION_GROUP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAudioSelectorType::HLS_RENDITION_GROUP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAudioSelectorType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAudioSelectorType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAudioSelectorType::PID:
            val = "PID";
            break;
        case eOAIAudioSelectorType::TRACK:
            val = "TRACK";
            break;
        case eOAIAudioSelectorType::LANGUAGE_CODE:
            val = "LANGUAGE_CODE";
            break;
        case eOAIAudioSelectorType::HLS_RENDITION_GROUP:
            val = "HLS_RENDITION_GROUP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAudioSelectorType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAudioSelectorType::eOAIAudioSelectorType OAIAudioSelectorType::getValue() const {
    return m_value;
}

void OAIAudioSelectorType::setValue(const OAIAudioSelectorType::eOAIAudioSelectorType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAudioSelectorType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAudioSelectorType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
