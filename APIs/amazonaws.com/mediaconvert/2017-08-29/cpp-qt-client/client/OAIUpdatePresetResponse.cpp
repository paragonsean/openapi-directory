/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePresetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePresetResponse::OAIUpdatePresetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePresetResponse::OAIUpdatePresetResponse() {
    this->initializeModel();
}

OAIUpdatePresetResponse::~OAIUpdatePresetResponse() {}

void OAIUpdatePresetResponse::initializeModel() {

    m_preset_isSet = false;
    m_preset_isValid = false;
}

void OAIUpdatePresetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePresetResponse::fromJsonObject(QJsonObject json) {

    m_preset_isValid = ::OpenAPI::fromJsonValue(m_preset, json[QString("Preset")]);
    m_preset_isSet = !json[QString("Preset")].isNull() && m_preset_isValid;
}

QString OAIUpdatePresetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePresetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_preset.isSet()) {
        obj.insert(QString("Preset"), ::OpenAPI::toJsonValue(m_preset));
    }
    return obj;
}

OAICreatePresetResponse_Preset OAIUpdatePresetResponse::getPreset() const {
    return m_preset;
}
void OAIUpdatePresetResponse::setPreset(const OAICreatePresetResponse_Preset &preset) {
    m_preset = preset;
    m_preset_isSet = true;
}

bool OAIUpdatePresetResponse::is_preset_Set() const{
    return m_preset_isSet;
}

bool OAIUpdatePresetResponse::is_preset_Valid() const{
    return m_preset_isValid;
}

bool OAIUpdatePresetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_preset.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePresetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
