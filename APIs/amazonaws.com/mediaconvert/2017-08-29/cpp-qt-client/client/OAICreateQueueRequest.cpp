/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateQueueRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateQueueRequest::OAICreateQueueRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateQueueRequest::OAICreateQueueRequest() {
    this->initializeModel();
}

OAICreateQueueRequest::~OAICreateQueueRequest() {}

void OAICreateQueueRequest::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pricing_plan_isSet = false;
    m_pricing_plan_isValid = false;

    m_reservation_plan_settings_isSet = false;
    m_reservation_plan_settings_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateQueueRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateQueueRequest::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_pricing_plan_isValid = ::OpenAPI::fromJsonValue(m_pricing_plan, json[QString("PricingPlan")]);
    m_pricing_plan_isSet = !json[QString("PricingPlan")].isNull() && m_pricing_plan_isValid;

    m_reservation_plan_settings_isValid = ::OpenAPI::fromJsonValue(m_reservation_plan_settings, json[QString("ReservationPlanSettings")]);
    m_reservation_plan_settings_isSet = !json[QString("ReservationPlanSettings")].isNull() && m_reservation_plan_settings_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateQueueRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateQueueRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pricing_plan.isSet()) {
        obj.insert(QString("PricingPlan"), ::OpenAPI::toJsonValue(m_pricing_plan));
    }
    if (m_reservation_plan_settings.isSet()) {
        obj.insert(QString("ReservationPlanSettings"), ::OpenAPI::toJsonValue(m_reservation_plan_settings));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateQueueRequest::getDescription() const {
    return m_description;
}
void OAICreateQueueRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateQueueRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateQueueRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateQueueRequest::getName() const {
    return m_name;
}
void OAICreateQueueRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateQueueRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateQueueRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAIPricingPlan OAICreateQueueRequest::getPricingPlan() const {
    return m_pricing_plan;
}
void OAICreateQueueRequest::setPricingPlan(const OAIPricingPlan &pricing_plan) {
    m_pricing_plan = pricing_plan;
    m_pricing_plan_isSet = true;
}

bool OAICreateQueueRequest::is_pricing_plan_Set() const{
    return m_pricing_plan_isSet;
}

bool OAICreateQueueRequest::is_pricing_plan_Valid() const{
    return m_pricing_plan_isValid;
}

OAICreateQueueRequest_ReservationPlanSettings OAICreateQueueRequest::getReservationPlanSettings() const {
    return m_reservation_plan_settings;
}
void OAICreateQueueRequest::setReservationPlanSettings(const OAICreateQueueRequest_ReservationPlanSettings &reservation_plan_settings) {
    m_reservation_plan_settings = reservation_plan_settings;
    m_reservation_plan_settings_isSet = true;
}

bool OAICreateQueueRequest::is_reservation_plan_settings_Set() const{
    return m_reservation_plan_settings_isSet;
}

bool OAICreateQueueRequest::is_reservation_plan_settings_Valid() const{
    return m_reservation_plan_settings_isValid;
}

OAIQueueStatus OAICreateQueueRequest::getStatus() const {
    return m_status;
}
void OAICreateQueueRequest::setStatus(const OAIQueueStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateQueueRequest::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateQueueRequest::is_status_Valid() const{
    return m_status_isValid;
}

QMap OAICreateQueueRequest::getTags() const {
    return m_tags;
}
void OAICreateQueueRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateQueueRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateQueueRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateQueueRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricing_plan.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_plan_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateQueueRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
