/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateJobTemplate_request_settings.h
 *
 * JobTemplateSettings contains all the transcode settings saved in the template that will be applied to jobs created from it.
 */

#ifndef OAICreateJobTemplate_request_settings_H
#define OAICreateJobTemplate_request_settings_H

#include <QJsonObject>

#include "OAICreateJob_request_settings_AvailBlanking.h"
#include "OAICreateJob_request_settings_Esam.h"
#include "OAICreateJob_request_settings_ExtendedDataServices.h"
#include "OAICreateJob_request_settings_KantarWatermark.h"
#include "OAICreateJob_request_settings_MotionImageInserter.h"
#include "OAICreateJob_request_settings_NielsenConfiguration.h"
#include "OAICreateJob_request_settings_NielsenNonLinearWatermark.h"
#include "OAICreateJob_request_settings_TimecodeConfig.h"
#include "OAICreateJob_request_settings_TimedMetadataInsertion.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateJob_request_settings_AvailBlanking;
class OAICreateJob_request_settings_Esam;
class OAICreateJob_request_settings_ExtendedDataServices;
class OAICreateJob_request_settings_KantarWatermark;
class OAICreateJob_request_settings_MotionImageInserter;
class OAICreateJob_request_settings_NielsenConfiguration;
class OAICreateJob_request_settings_NielsenNonLinearWatermark;
class OAICreateJob_request_settings_TimecodeConfig;
class OAICreateJob_request_settings_TimedMetadataInsertion;

class OAICreateJobTemplate_request_settings : public OAIObject {
public:
    OAICreateJobTemplate_request_settings();
    OAICreateJobTemplate_request_settings(QString json);
    ~OAICreateJobTemplate_request_settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdAvailOffset() const;
    void setAdAvailOffset(const qint32 &ad_avail_offset);
    bool is_ad_avail_offset_Set() const;
    bool is_ad_avail_offset_Valid() const;

    OAICreateJob_request_settings_AvailBlanking getAvailBlanking() const;
    void setAvailBlanking(const OAICreateJob_request_settings_AvailBlanking &avail_blanking);
    bool is_avail_blanking_Set() const;
    bool is_avail_blanking_Valid() const;

    OAICreateJob_request_settings_Esam getEsam() const;
    void setEsam(const OAICreateJob_request_settings_Esam &esam);
    bool is_esam_Set() const;
    bool is_esam_Valid() const;

    OAICreateJob_request_settings_ExtendedDataServices getExtendedDataServices() const;
    void setExtendedDataServices(const OAICreateJob_request_settings_ExtendedDataServices &extended_data_services);
    bool is_extended_data_services_Set() const;
    bool is_extended_data_services_Valid() const;

    QList getInputs() const;
    void setInputs(const QList &inputs);
    bool is_inputs_Set() const;
    bool is_inputs_Valid() const;

    OAICreateJob_request_settings_KantarWatermark getKantarWatermark() const;
    void setKantarWatermark(const OAICreateJob_request_settings_KantarWatermark &kantar_watermark);
    bool is_kantar_watermark_Set() const;
    bool is_kantar_watermark_Valid() const;

    OAICreateJob_request_settings_MotionImageInserter getMotionImageInserter() const;
    void setMotionImageInserter(const OAICreateJob_request_settings_MotionImageInserter &motion_image_inserter);
    bool is_motion_image_inserter_Set() const;
    bool is_motion_image_inserter_Valid() const;

    OAICreateJob_request_settings_NielsenConfiguration getNielsenConfiguration() const;
    void setNielsenConfiguration(const OAICreateJob_request_settings_NielsenConfiguration &nielsen_configuration);
    bool is_nielsen_configuration_Set() const;
    bool is_nielsen_configuration_Valid() const;

    OAICreateJob_request_settings_NielsenNonLinearWatermark getNielsenNonLinearWatermark() const;
    void setNielsenNonLinearWatermark(const OAICreateJob_request_settings_NielsenNonLinearWatermark &nielsen_non_linear_watermark);
    bool is_nielsen_non_linear_watermark_Set() const;
    bool is_nielsen_non_linear_watermark_Valid() const;

    QList getOutputGroups() const;
    void setOutputGroups(const QList &output_groups);
    bool is_output_groups_Set() const;
    bool is_output_groups_Valid() const;

    OAICreateJob_request_settings_TimecodeConfig getTimecodeConfig() const;
    void setTimecodeConfig(const OAICreateJob_request_settings_TimecodeConfig &timecode_config);
    bool is_timecode_config_Set() const;
    bool is_timecode_config_Valid() const;

    OAICreateJob_request_settings_TimedMetadataInsertion getTimedMetadataInsertion() const;
    void setTimedMetadataInsertion(const OAICreateJob_request_settings_TimedMetadataInsertion &timed_metadata_insertion);
    bool is_timed_metadata_insertion_Set() const;
    bool is_timed_metadata_insertion_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ad_avail_offset;
    bool m_ad_avail_offset_isSet;
    bool m_ad_avail_offset_isValid;

    OAICreateJob_request_settings_AvailBlanking m_avail_blanking;
    bool m_avail_blanking_isSet;
    bool m_avail_blanking_isValid;

    OAICreateJob_request_settings_Esam m_esam;
    bool m_esam_isSet;
    bool m_esam_isValid;

    OAICreateJob_request_settings_ExtendedDataServices m_extended_data_services;
    bool m_extended_data_services_isSet;
    bool m_extended_data_services_isValid;

    QList m_inputs;
    bool m_inputs_isSet;
    bool m_inputs_isValid;

    OAICreateJob_request_settings_KantarWatermark m_kantar_watermark;
    bool m_kantar_watermark_isSet;
    bool m_kantar_watermark_isValid;

    OAICreateJob_request_settings_MotionImageInserter m_motion_image_inserter;
    bool m_motion_image_inserter_isSet;
    bool m_motion_image_inserter_isValid;

    OAICreateJob_request_settings_NielsenConfiguration m_nielsen_configuration;
    bool m_nielsen_configuration_isSet;
    bool m_nielsen_configuration_isValid;

    OAICreateJob_request_settings_NielsenNonLinearWatermark m_nielsen_non_linear_watermark;
    bool m_nielsen_non_linear_watermark_isSet;
    bool m_nielsen_non_linear_watermark_isValid;

    QList m_output_groups;
    bool m_output_groups_isSet;
    bool m_output_groups_isValid;

    OAICreateJob_request_settings_TimecodeConfig m_timecode_config;
    bool m_timecode_config_isSet;
    bool m_timecode_config_isValid;

    OAICreateJob_request_settings_TimedMetadataInsertion m_timed_metadata_insertion;
    bool m_timed_metadata_insertion_isSet;
    bool m_timed_metadata_insertion_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateJobTemplate_request_settings)

#endif // OAICreateJobTemplate_request_settings_H
