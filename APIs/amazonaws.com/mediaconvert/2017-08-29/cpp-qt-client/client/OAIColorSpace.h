/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIColorSpace.h
 *
 * If your input video has accurate color space metadata, or if you don&#39;t know about color space: Keep the default value, Follow. MediaConvert will automatically detect your input color space. If your input video has metadata indicating the wrong color space, or has missing metadata: Specify the accurate color space here. If your input video is HDR 10 and the SMPTE ST 2086 Mastering Display Color Volume static metadata isn&#39;t present in your video stream, or if that metadata is present but not accurate: Choose Force HDR 10. Specify correct values in the input HDR 10 metadata settings. For more information about HDR jobs, see https://docs.aws.amazon.com/console/mediaconvert/hdr. When you specify an input color space, MediaConvert uses the following color space metadata, which includes color primaries, transfer characteristics, and matrix coefficients:  * HDR 10: BT.2020, PQ, BT.2020 non-constant  * HLG 2020: BT.2020, HLG, BT.2020 non-constant  * P3DCI (Theater): DCIP3, SMPTE 428M, BT.709  * P3D65 (SDR): Display P3, sRGB, BT.709  * P3D65 (HDR): Display P3, PQ, BT.709
 */

#ifndef OAIColorSpace_H
#define OAIColorSpace_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIColorSpace : public OAIEnum {
public:
    OAIColorSpace();
    OAIColorSpace(QString json);
    ~OAIColorSpace() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIColorSpace {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        FOLLOW, 
        REC_601, 
        REC_709, 
        HDR10, 
        HLG_2020, 
        P3DCI, 
        P3D65_SDR, 
        P3D65_HDR
    };
    OAIColorSpace::eOAIColorSpace getValue() const;
    void setValue(const OAIColorSpace::eOAIColorSpace& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIColorSpace m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIColorSpace)

#endif // OAIColorSpace_H
