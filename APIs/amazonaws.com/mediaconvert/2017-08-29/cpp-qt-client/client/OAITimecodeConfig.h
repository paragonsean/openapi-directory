/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimecodeConfig.h
 *
 * These settings control how the service handles timecodes throughout the job. These settings don&#39;t affect input clipping.
 */

#ifndef OAITimecodeConfig_H
#define OAITimecodeConfig_H

#include <QJsonObject>

#include "OAITimecodeSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimecodeConfig : public OAIObject {
public:
    OAITimecodeConfig();
    OAITimecodeConfig(QString json);
    ~OAITimecodeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnchor() const;
    void setAnchor(const QString &anchor);
    bool is_anchor_Set() const;
    bool is_anchor_Valid() const;

    OAITimecodeSource getSource() const;
    void setSource(const OAITimecodeSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getTimestampOffset() const;
    void setTimestampOffset(const QString &timestamp_offset);
    bool is_timestamp_offset_Set() const;
    bool is_timestamp_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_anchor;
    bool m_anchor_isSet;
    bool m_anchor_isValid;

    OAITimecodeSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_timestamp_offset;
    bool m_timestamp_offset_isSet;
    bool m_timestamp_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimecodeConfig)

#endif // OAITimecodeConfig_H
