/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMotionImageInserter.h
 *
 * Overlay motion graphics on top of your video. The motion graphics that you specify here appear on all outputs in all output groups. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/motion-graphic-overlay.html.
 */

#ifndef OAIMotionImageInserter_H
#define OAIMotionImageInserter_H

#include <QJsonObject>

#include "OAIMotionImageInserter_Framerate.h"
#include "OAIMotionImageInserter_Offset.h"
#include "OAIMotionImageInsertionMode.h"
#include "OAIMotionImagePlayback.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMotionImageInserter_Framerate;
class OAIMotionImageInserter_Offset;

class OAIMotionImageInserter : public OAIObject {
public:
    OAIMotionImageInserter();
    OAIMotionImageInserter(QString json);
    ~OAIMotionImageInserter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMotionImageInserter_Framerate getFramerate() const;
    void setFramerate(const OAIMotionImageInserter_Framerate &framerate);
    bool is_framerate_Set() const;
    bool is_framerate_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    OAIMotionImageInsertionMode getInsertionMode() const;
    void setInsertionMode(const OAIMotionImageInsertionMode &insertion_mode);
    bool is_insertion_mode_Set() const;
    bool is_insertion_mode_Valid() const;

    OAIMotionImageInserter_Offset getOffset() const;
    void setOffset(const OAIMotionImageInserter_Offset &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    OAIMotionImagePlayback getPlayback() const;
    void setPlayback(const OAIMotionImagePlayback &playback);
    bool is_playback_Set() const;
    bool is_playback_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMotionImageInserter_Framerate m_framerate;
    bool m_framerate_isSet;
    bool m_framerate_isValid;

    QString m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    OAIMotionImageInsertionMode m_insertion_mode;
    bool m_insertion_mode_isSet;
    bool m_insertion_mode_isValid;

    OAIMotionImageInserter_Offset m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    OAIMotionImagePlayback m_playback;
    bool m_playback_isSet;
    bool m_playback_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMotionImageInserter)

#endif // OAIMotionImageInserter_H
