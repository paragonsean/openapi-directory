/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaptionDestinationType.h
 *
 * Specify the format for this set of captions on this output. The default format is embedded without SCTE-20. Note that your choice of video output container constrains your choice of output captions format. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/captions-support-tables.html. If you are using SCTE-20 and you want to create an output that complies with the SCTE-43 spec, choose SCTE-20 plus embedded. To create a non-compliant output where the embedded captions come first, choose Embedded plus SCTE-20.
 */

#ifndef OAICaptionDestinationType_H
#define OAICaptionDestinationType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICaptionDestinationType : public OAIEnum {
public:
    OAICaptionDestinationType();
    OAICaptionDestinationType(QString json);
    ~OAICaptionDestinationType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAICaptionDestinationType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        BURN_IN, 
        DVB_SUB, 
        EMBEDDED, 
        EMBEDDED_PLUS_SCTE20, 
        IMSC, 
        SCTE20_PLUS_EMBEDDED, 
        SCC, 
        SRT, 
        SMI, 
        TELETEXT, 
        TTML, 
        WEBVTT
    };
    OAICaptionDestinationType::eOAICaptionDestinationType getValue() const;
    void setValue(const OAICaptionDestinationType::eOAICaptionDestinationType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAICaptionDestinationType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaptionDestinationType)

#endif // OAICaptionDestinationType_H
