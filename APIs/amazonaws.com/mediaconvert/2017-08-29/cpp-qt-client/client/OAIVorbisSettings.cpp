/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVorbisSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVorbisSettings::OAIVorbisSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVorbisSettings::OAIVorbisSettings() {
    this->initializeModel();
}

OAIVorbisSettings::~OAIVorbisSettings() {}

void OAIVorbisSettings::initializeModel() {

    m_channels_isSet = false;
    m_channels_isValid = false;

    m_sample_rate_isSet = false;
    m_sample_rate_isValid = false;

    m_vbr_quality_isSet = false;
    m_vbr_quality_isValid = false;
}

void OAIVorbisSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVorbisSettings::fromJsonObject(QJsonObject json) {

    m_channels_isValid = ::OpenAPI::fromJsonValue(m_channels, json[QString("Channels")]);
    m_channels_isSet = !json[QString("Channels")].isNull() && m_channels_isValid;

    m_sample_rate_isValid = ::OpenAPI::fromJsonValue(m_sample_rate, json[QString("SampleRate")]);
    m_sample_rate_isSet = !json[QString("SampleRate")].isNull() && m_sample_rate_isValid;

    m_vbr_quality_isValid = ::OpenAPI::fromJsonValue(m_vbr_quality, json[QString("VbrQuality")]);
    m_vbr_quality_isSet = !json[QString("VbrQuality")].isNull() && m_vbr_quality_isValid;
}

QString OAIVorbisSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVorbisSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_channels_isSet) {
        obj.insert(QString("Channels"), ::OpenAPI::toJsonValue(m_channels));
    }
    if (m_sample_rate_isSet) {
        obj.insert(QString("SampleRate"), ::OpenAPI::toJsonValue(m_sample_rate));
    }
    if (m_vbr_quality_isSet) {
        obj.insert(QString("VbrQuality"), ::OpenAPI::toJsonValue(m_vbr_quality));
    }
    return obj;
}

qint32 OAIVorbisSettings::getChannels() const {
    return m_channels;
}
void OAIVorbisSettings::setChannels(const qint32 &channels) {
    m_channels = channels;
    m_channels_isSet = true;
}

bool OAIVorbisSettings::is_channels_Set() const{
    return m_channels_isSet;
}

bool OAIVorbisSettings::is_channels_Valid() const{
    return m_channels_isValid;
}

qint32 OAIVorbisSettings::getSampleRate() const {
    return m_sample_rate;
}
void OAIVorbisSettings::setSampleRate(const qint32 &sample_rate) {
    m_sample_rate = sample_rate;
    m_sample_rate_isSet = true;
}

bool OAIVorbisSettings::is_sample_rate_Set() const{
    return m_sample_rate_isSet;
}

bool OAIVorbisSettings::is_sample_rate_Valid() const{
    return m_sample_rate_isValid;
}

qint32 OAIVorbisSettings::getVbrQuality() const {
    return m_vbr_quality;
}
void OAIVorbisSettings::setVbrQuality(const qint32 &vbr_quality) {
    m_vbr_quality = vbr_quality;
    m_vbr_quality_isSet = true;
}

bool OAIVorbisSettings::is_vbr_quality_Set() const{
    return m_vbr_quality_isSet;
}

bool OAIVorbisSettings::is_vbr_quality_Valid() const{
    return m_vbr_quality_isValid;
}

bool OAIVorbisSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sample_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vbr_quality_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVorbisSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
