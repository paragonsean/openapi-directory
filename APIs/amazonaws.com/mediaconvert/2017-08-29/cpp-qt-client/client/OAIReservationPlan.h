/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReservationPlan.h
 *
 * Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.
 */

#ifndef OAIReservationPlan_H
#define OAIReservationPlan_H

#include <QJsonObject>

#include "OAICommitment.h"
#include "OAIRenewalType.h"
#include "OAIReservationPlanStatus.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReservationPlan : public OAIObject {
public:
    OAIReservationPlan();
    OAIReservationPlan(QString json);
    ~OAIReservationPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommitment getCommitment() const;
    void setCommitment(const OAICommitment &commitment);
    bool is_commitment_Set() const;
    bool is_commitment_Valid() const;

    QDateTime getExpiresAt() const;
    void setExpiresAt(const QDateTime &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    QDateTime getPurchasedAt() const;
    void setPurchasedAt(const QDateTime &purchased_at);
    bool is_purchased_at_Set() const;
    bool is_purchased_at_Valid() const;

    OAIRenewalType getRenewalType() const;
    void setRenewalType(const OAIRenewalType &renewal_type);
    bool is_renewal_type_Set() const;
    bool is_renewal_type_Valid() const;

    qint32 getReservedSlots() const;
    void setReservedSlots(const qint32 &reserved_slots);
    bool is_reserved_slots_Set() const;
    bool is_reserved_slots_Valid() const;

    OAIReservationPlanStatus getStatus() const;
    void setStatus(const OAIReservationPlanStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommitment m_commitment;
    bool m_commitment_isSet;
    bool m_commitment_isValid;

    QDateTime m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    QDateTime m_purchased_at;
    bool m_purchased_at_isSet;
    bool m_purchased_at_isValid;

    OAIRenewalType m_renewal_type;
    bool m_renewal_type_isSet;
    bool m_renewal_type_isValid;

    qint32 m_reserved_slots;
    bool m_reserved_slots_isSet;
    bool m_reserved_slots_isValid;

    OAIReservationPlanStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReservationPlan)

#endif // OAIReservationPlan_H
