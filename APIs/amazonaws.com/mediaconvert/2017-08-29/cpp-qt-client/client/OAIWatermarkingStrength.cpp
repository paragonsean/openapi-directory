/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWatermarkingStrength.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWatermarkingStrength::OAIWatermarkingStrength(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWatermarkingStrength::OAIWatermarkingStrength() {
    this->initializeModel();
}

OAIWatermarkingStrength::~OAIWatermarkingStrength() {}

void OAIWatermarkingStrength::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWatermarkingStrength::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWatermarkingStrength::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LIGHTEST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWatermarkingStrength::LIGHTEST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIGHTER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWatermarkingStrength::LIGHTER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEFAULT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWatermarkingStrength::DEFAULT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STRONGER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWatermarkingStrength::STRONGER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STRONGEST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWatermarkingStrength::STRONGEST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWatermarkingStrength::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWatermarkingStrength::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWatermarkingStrength::LIGHTEST:
            val = "LIGHTEST";
            break;
        case eOAIWatermarkingStrength::LIGHTER:
            val = "LIGHTER";
            break;
        case eOAIWatermarkingStrength::DEFAULT:
            val = "DEFAULT";
            break;
        case eOAIWatermarkingStrength::STRONGER:
            val = "STRONGER";
            break;
        case eOAIWatermarkingStrength::STRONGEST:
            val = "STRONGEST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWatermarkingStrength::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWatermarkingStrength::eOAIWatermarkingStrength OAIWatermarkingStrength::getValue() const {
    return m_value;
}

void OAIWatermarkingStrength::setValue(const OAIWatermarkingStrength::eOAIWatermarkingStrength& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWatermarkingStrength::isSet() const {
    
    return m_value_isSet;
}

bool OAIWatermarkingStrength::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
