/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHDRToSDRToneMapper.h
 *
 * Specify how MediaConvert maps brightness and colors from your HDR input to your SDR output. The mode that you select represents a creative choice, with different tradeoffs in the details and tones of your output. To maintain details in bright or saturated areas of your output: Choose Preserve details. For some sources, your SDR output may look less bright and less saturated when compared to your HDR source. MediaConvert automatically applies this mode for HLG sources, regardless of your choice. For a bright and saturated output: Choose Vibrant. We recommend that you choose this mode when any of your source content is HDR10, and for the best results when it is mastered for 1000 nits. You may notice loss of details in bright or saturated areas of your output. HDR to SDR tone mapping has no effect when your input is SDR.
 */

#ifndef OAIHDRToSDRToneMapper_H
#define OAIHDRToSDRToneMapper_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHDRToSDRToneMapper : public OAIEnum {
public:
    OAIHDRToSDRToneMapper();
    OAIHDRToSDRToneMapper(QString json);
    ~OAIHDRToSDRToneMapper() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIHDRToSDRToneMapper {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        PRESERVE_DETAILS, 
        VIBRANT
    };
    OAIHDRToSDRToneMapper::eOAIHDRToSDRToneMapper getValue() const;
    void setValue(const OAIHDRToSDRToneMapper::eOAIHDRToSDRToneMapper& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIHDRToSDRToneMapper m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHDRToSDRToneMapper)

#endif // OAIHDRToSDRToneMapper_H
