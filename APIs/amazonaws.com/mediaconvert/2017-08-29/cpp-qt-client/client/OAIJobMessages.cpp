/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobMessages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobMessages::OAIJobMessages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobMessages::OAIJobMessages() {
    this->initializeModel();
}

OAIJobMessages::~OAIJobMessages() {}

void OAIJobMessages::initializeModel() {

    m_info_isSet = false;
    m_info_isValid = false;

    m_warning_isSet = false;
    m_warning_isValid = false;
}

void OAIJobMessages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobMessages::fromJsonObject(QJsonObject json) {

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("Info")]);
    m_info_isSet = !json[QString("Info")].isNull() && m_info_isValid;

    m_warning_isValid = ::OpenAPI::fromJsonValue(m_warning, json[QString("Warning")]);
    m_warning_isSet = !json[QString("Warning")].isNull() && m_warning_isValid;
}

QString OAIJobMessages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobMessages::asJsonObject() const {
    QJsonObject obj;
    if (m_info.isSet()) {
        obj.insert(QString("Info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_warning.isSet()) {
        obj.insert(QString("Warning"), ::OpenAPI::toJsonValue(m_warning));
    }
    return obj;
}

QList OAIJobMessages::getInfo() const {
    return m_info;
}
void OAIJobMessages::setInfo(const QList &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAIJobMessages::is_info_Set() const{
    return m_info_isSet;
}

bool OAIJobMessages::is_info_Valid() const{
    return m_info_isValid;
}

QList OAIJobMessages::getWarning() const {
    return m_warning;
}
void OAIJobMessages::setWarning(const QList &warning) {
    m_warning = warning;
    m_warning_isSet = true;
}

bool OAIJobMessages::is_warning_Set() const{
    return m_warning_isSet;
}

bool OAIJobMessages::is_warning_Valid() const{
    return m_warning_isValid;
}

bool OAIJobMessages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_warning.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobMessages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
