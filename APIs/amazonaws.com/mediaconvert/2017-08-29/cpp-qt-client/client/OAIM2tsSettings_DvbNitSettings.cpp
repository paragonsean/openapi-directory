/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIM2tsSettings_DvbNitSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIM2tsSettings_DvbNitSettings::OAIM2tsSettings_DvbNitSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIM2tsSettings_DvbNitSettings::OAIM2tsSettings_DvbNitSettings() {
    this->initializeModel();
}

OAIM2tsSettings_DvbNitSettings::~OAIM2tsSettings_DvbNitSettings() {}

void OAIM2tsSettings_DvbNitSettings::initializeModel() {

    m_network_id_isSet = false;
    m_network_id_isValid = false;

    m_network_name_isSet = false;
    m_network_name_isValid = false;

    m_nit_interval_isSet = false;
    m_nit_interval_isValid = false;
}

void OAIM2tsSettings_DvbNitSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIM2tsSettings_DvbNitSettings::fromJsonObject(QJsonObject json) {

    m_network_id_isValid = ::OpenAPI::fromJsonValue(m_network_id, json[QString("NetworkId")]);
    m_network_id_isSet = !json[QString("NetworkId")].isNull() && m_network_id_isValid;

    m_network_name_isValid = ::OpenAPI::fromJsonValue(m_network_name, json[QString("NetworkName")]);
    m_network_name_isSet = !json[QString("NetworkName")].isNull() && m_network_name_isValid;

    m_nit_interval_isValid = ::OpenAPI::fromJsonValue(m_nit_interval, json[QString("NitInterval")]);
    m_nit_interval_isSet = !json[QString("NitInterval")].isNull() && m_nit_interval_isValid;
}

QString OAIM2tsSettings_DvbNitSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIM2tsSettings_DvbNitSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_network_id_isSet) {
        obj.insert(QString("NetworkId"), ::OpenAPI::toJsonValue(m_network_id));
    }
    if (m_network_name_isSet) {
        obj.insert(QString("NetworkName"), ::OpenAPI::toJsonValue(m_network_name));
    }
    if (m_nit_interval_isSet) {
        obj.insert(QString("NitInterval"), ::OpenAPI::toJsonValue(m_nit_interval));
    }
    return obj;
}

qint32 OAIM2tsSettings_DvbNitSettings::getNetworkId() const {
    return m_network_id;
}
void OAIM2tsSettings_DvbNitSettings::setNetworkId(const qint32 &network_id) {
    m_network_id = network_id;
    m_network_id_isSet = true;
}

bool OAIM2tsSettings_DvbNitSettings::is_network_id_Set() const{
    return m_network_id_isSet;
}

bool OAIM2tsSettings_DvbNitSettings::is_network_id_Valid() const{
    return m_network_id_isValid;
}

QString OAIM2tsSettings_DvbNitSettings::getNetworkName() const {
    return m_network_name;
}
void OAIM2tsSettings_DvbNitSettings::setNetworkName(const QString &network_name) {
    m_network_name = network_name;
    m_network_name_isSet = true;
}

bool OAIM2tsSettings_DvbNitSettings::is_network_name_Set() const{
    return m_network_name_isSet;
}

bool OAIM2tsSettings_DvbNitSettings::is_network_name_Valid() const{
    return m_network_name_isValid;
}

qint32 OAIM2tsSettings_DvbNitSettings::getNitInterval() const {
    return m_nit_interval;
}
void OAIM2tsSettings_DvbNitSettings::setNitInterval(const qint32 &nit_interval) {
    m_nit_interval = nit_interval;
    m_nit_interval_isSet = true;
}

bool OAIM2tsSettings_DvbNitSettings::is_nit_interval_Set() const{
    return m_nit_interval_isSet;
}

bool OAIM2tsSettings_DvbNitSettings::is_nit_interval_Valid() const{
    return m_nit_interval_isValid;
}

bool OAIM2tsSettings_DvbNitSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nit_interval_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIM2tsSettings_DvbNitSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
