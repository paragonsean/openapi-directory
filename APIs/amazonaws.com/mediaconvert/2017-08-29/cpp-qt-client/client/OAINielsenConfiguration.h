/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINielsenConfiguration.h
 *
 * Settings for your Nielsen configuration. If you don&#39;t do Nielsen measurement and analytics, ignore these settings. When you enable Nielsen configuration, MediaConvert enables PCM to ID3 tagging for all outputs in the job.
 */

#ifndef OAINielsenConfiguration_H
#define OAINielsenConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINielsenConfiguration : public OAIObject {
public:
    OAINielsenConfiguration();
    OAINielsenConfiguration(QString json);
    ~OAINielsenConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBreakoutCode() const;
    void setBreakoutCode(const qint32 &breakout_code);
    bool is_breakout_code_Set() const;
    bool is_breakout_code_Valid() const;

    QString getDistributorId() const;
    void setDistributorId(const QString &distributor_id);
    bool is_distributor_id_Set() const;
    bool is_distributor_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_breakout_code;
    bool m_breakout_code_isSet;
    bool m_breakout_code_isValid;

    QString m_distributor_id;
    bool m_distributor_id_isSet;
    bool m_distributor_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINielsenConfiguration)

#endif // OAINielsenConfiguration_H
