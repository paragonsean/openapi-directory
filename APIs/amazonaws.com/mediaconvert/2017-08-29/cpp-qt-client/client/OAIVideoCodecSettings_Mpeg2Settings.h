/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoCodecSettings_Mpeg2Settings.h
 *
 * 
 */

#ifndef OAIVideoCodecSettings_Mpeg2Settings_H
#define OAIVideoCodecSettings_Mpeg2Settings_H

#include <QJsonObject>

#include "OAIMpeg2AdaptiveQuantization.h"
#include "OAIMpeg2CodecLevel.h"
#include "OAIMpeg2CodecProfile.h"
#include "OAIMpeg2DynamicSubGop.h"
#include "OAIMpeg2FramerateControl.h"
#include "OAIMpeg2FramerateConversionAlgorithm.h"
#include "OAIMpeg2GopSizeUnits.h"
#include "OAIMpeg2InterlaceMode.h"
#include "OAIMpeg2IntraDcPrecision.h"
#include "OAIMpeg2ParControl.h"
#include "OAIMpeg2QualityTuningLevel.h"
#include "OAIMpeg2RateControlMode.h"
#include "OAIMpeg2ScanTypeConversionMode.h"
#include "OAIMpeg2SceneChangeDetect.h"
#include "OAIMpeg2SlowPal.h"
#include "OAIMpeg2SpatialAdaptiveQuantization.h"
#include "OAIMpeg2Syntax.h"
#include "OAIMpeg2Telecine.h"
#include "OAIMpeg2TemporalAdaptiveQuantization.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideoCodecSettings_Mpeg2Settings : public OAIObject {
public:
    OAIVideoCodecSettings_Mpeg2Settings();
    OAIVideoCodecSettings_Mpeg2Settings(QString json);
    ~OAIVideoCodecSettings_Mpeg2Settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMpeg2AdaptiveQuantization getAdaptiveQuantization() const;
    void setAdaptiveQuantization(const OAIMpeg2AdaptiveQuantization &adaptive_quantization);
    bool is_adaptive_quantization_Set() const;
    bool is_adaptive_quantization_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    OAIMpeg2CodecLevel getCodecLevel() const;
    void setCodecLevel(const OAIMpeg2CodecLevel &codec_level);
    bool is_codec_level_Set() const;
    bool is_codec_level_Valid() const;

    OAIMpeg2CodecProfile getCodecProfile() const;
    void setCodecProfile(const OAIMpeg2CodecProfile &codec_profile);
    bool is_codec_profile_Set() const;
    bool is_codec_profile_Valid() const;

    OAIMpeg2DynamicSubGop getDynamicSubGop() const;
    void setDynamicSubGop(const OAIMpeg2DynamicSubGop &dynamic_sub_gop);
    bool is_dynamic_sub_gop_Set() const;
    bool is_dynamic_sub_gop_Valid() const;

    OAIMpeg2FramerateControl getFramerateControl() const;
    void setFramerateControl(const OAIMpeg2FramerateControl &framerate_control);
    bool is_framerate_control_Set() const;
    bool is_framerate_control_Valid() const;

    OAIMpeg2FramerateConversionAlgorithm getFramerateConversionAlgorithm() const;
    void setFramerateConversionAlgorithm(const OAIMpeg2FramerateConversionAlgorithm &framerate_conversion_algorithm);
    bool is_framerate_conversion_algorithm_Set() const;
    bool is_framerate_conversion_algorithm_Valid() const;

    qint32 getFramerateDenominator() const;
    void setFramerateDenominator(const qint32 &framerate_denominator);
    bool is_framerate_denominator_Set() const;
    bool is_framerate_denominator_Valid() const;

    qint32 getFramerateNumerator() const;
    void setFramerateNumerator(const qint32 &framerate_numerator);
    bool is_framerate_numerator_Set() const;
    bool is_framerate_numerator_Valid() const;

    qint32 getGopClosedCadence() const;
    void setGopClosedCadence(const qint32 &gop_closed_cadence);
    bool is_gop_closed_cadence_Set() const;
    bool is_gop_closed_cadence_Valid() const;

    double getGopSize() const;
    void setGopSize(const double &gop_size);
    bool is_gop_size_Set() const;
    bool is_gop_size_Valid() const;

    OAIMpeg2GopSizeUnits getGopSizeUnits() const;
    void setGopSizeUnits(const OAIMpeg2GopSizeUnits &gop_size_units);
    bool is_gop_size_units_Set() const;
    bool is_gop_size_units_Valid() const;

    qint32 getHrdBufferFinalFillPercentage() const;
    void setHrdBufferFinalFillPercentage(const qint32 &hrd_buffer_final_fill_percentage);
    bool is_hrd_buffer_final_fill_percentage_Set() const;
    bool is_hrd_buffer_final_fill_percentage_Valid() const;

    qint32 getHrdBufferInitialFillPercentage() const;
    void setHrdBufferInitialFillPercentage(const qint32 &hrd_buffer_initial_fill_percentage);
    bool is_hrd_buffer_initial_fill_percentage_Set() const;
    bool is_hrd_buffer_initial_fill_percentage_Valid() const;

    qint32 getHrdBufferSize() const;
    void setHrdBufferSize(const qint32 &hrd_buffer_size);
    bool is_hrd_buffer_size_Set() const;
    bool is_hrd_buffer_size_Valid() const;

    OAIMpeg2InterlaceMode getInterlaceMode() const;
    void setInterlaceMode(const OAIMpeg2InterlaceMode &interlace_mode);
    bool is_interlace_mode_Set() const;
    bool is_interlace_mode_Valid() const;

    OAIMpeg2IntraDcPrecision getIntraDcPrecision() const;
    void setIntraDcPrecision(const OAIMpeg2IntraDcPrecision &intra_dc_precision);
    bool is_intra_dc_precision_Set() const;
    bool is_intra_dc_precision_Valid() const;

    qint32 getMaxBitrate() const;
    void setMaxBitrate(const qint32 &max_bitrate);
    bool is_max_bitrate_Set() const;
    bool is_max_bitrate_Valid() const;

    qint32 getMinIInterval() const;
    void setMinIInterval(const qint32 &min_i_interval);
    bool is_min_i_interval_Set() const;
    bool is_min_i_interval_Valid() const;

    qint32 getNumberBFramesBetweenReferenceFrames() const;
    void setNumberBFramesBetweenReferenceFrames(const qint32 &number_b_frames_between_reference_frames);
    bool is_number_b_frames_between_reference_frames_Set() const;
    bool is_number_b_frames_between_reference_frames_Valid() const;

    OAIMpeg2ParControl getParControl() const;
    void setParControl(const OAIMpeg2ParControl &par_control);
    bool is_par_control_Set() const;
    bool is_par_control_Valid() const;

    qint32 getParDenominator() const;
    void setParDenominator(const qint32 &par_denominator);
    bool is_par_denominator_Set() const;
    bool is_par_denominator_Valid() const;

    qint32 getParNumerator() const;
    void setParNumerator(const qint32 &par_numerator);
    bool is_par_numerator_Set() const;
    bool is_par_numerator_Valid() const;

    OAIMpeg2QualityTuningLevel getQualityTuningLevel() const;
    void setQualityTuningLevel(const OAIMpeg2QualityTuningLevel &quality_tuning_level);
    bool is_quality_tuning_level_Set() const;
    bool is_quality_tuning_level_Valid() const;

    OAIMpeg2RateControlMode getRateControlMode() const;
    void setRateControlMode(const OAIMpeg2RateControlMode &rate_control_mode);
    bool is_rate_control_mode_Set() const;
    bool is_rate_control_mode_Valid() const;

    OAIMpeg2ScanTypeConversionMode getScanTypeConversionMode() const;
    void setScanTypeConversionMode(const OAIMpeg2ScanTypeConversionMode &scan_type_conversion_mode);
    bool is_scan_type_conversion_mode_Set() const;
    bool is_scan_type_conversion_mode_Valid() const;

    OAIMpeg2SceneChangeDetect getSceneChangeDetect() const;
    void setSceneChangeDetect(const OAIMpeg2SceneChangeDetect &scene_change_detect);
    bool is_scene_change_detect_Set() const;
    bool is_scene_change_detect_Valid() const;

    OAIMpeg2SlowPal getSlowPal() const;
    void setSlowPal(const OAIMpeg2SlowPal &slow_pal);
    bool is_slow_pal_Set() const;
    bool is_slow_pal_Valid() const;

    qint32 getSoftness() const;
    void setSoftness(const qint32 &softness);
    bool is_softness_Set() const;
    bool is_softness_Valid() const;

    OAIMpeg2SpatialAdaptiveQuantization getSpatialAdaptiveQuantization() const;
    void setSpatialAdaptiveQuantization(const OAIMpeg2SpatialAdaptiveQuantization &spatial_adaptive_quantization);
    bool is_spatial_adaptive_quantization_Set() const;
    bool is_spatial_adaptive_quantization_Valid() const;

    OAIMpeg2Syntax getSyntax() const;
    void setSyntax(const OAIMpeg2Syntax &syntax);
    bool is_syntax_Set() const;
    bool is_syntax_Valid() const;

    OAIMpeg2Telecine getTelecine() const;
    void setTelecine(const OAIMpeg2Telecine &telecine);
    bool is_telecine_Set() const;
    bool is_telecine_Valid() const;

    OAIMpeg2TemporalAdaptiveQuantization getTemporalAdaptiveQuantization() const;
    void setTemporalAdaptiveQuantization(const OAIMpeg2TemporalAdaptiveQuantization &temporal_adaptive_quantization);
    bool is_temporal_adaptive_quantization_Set() const;
    bool is_temporal_adaptive_quantization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMpeg2AdaptiveQuantization m_adaptive_quantization;
    bool m_adaptive_quantization_isSet;
    bool m_adaptive_quantization_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    OAIMpeg2CodecLevel m_codec_level;
    bool m_codec_level_isSet;
    bool m_codec_level_isValid;

    OAIMpeg2CodecProfile m_codec_profile;
    bool m_codec_profile_isSet;
    bool m_codec_profile_isValid;

    OAIMpeg2DynamicSubGop m_dynamic_sub_gop;
    bool m_dynamic_sub_gop_isSet;
    bool m_dynamic_sub_gop_isValid;

    OAIMpeg2FramerateControl m_framerate_control;
    bool m_framerate_control_isSet;
    bool m_framerate_control_isValid;

    OAIMpeg2FramerateConversionAlgorithm m_framerate_conversion_algorithm;
    bool m_framerate_conversion_algorithm_isSet;
    bool m_framerate_conversion_algorithm_isValid;

    qint32 m_framerate_denominator;
    bool m_framerate_denominator_isSet;
    bool m_framerate_denominator_isValid;

    qint32 m_framerate_numerator;
    bool m_framerate_numerator_isSet;
    bool m_framerate_numerator_isValid;

    qint32 m_gop_closed_cadence;
    bool m_gop_closed_cadence_isSet;
    bool m_gop_closed_cadence_isValid;

    double m_gop_size;
    bool m_gop_size_isSet;
    bool m_gop_size_isValid;

    OAIMpeg2GopSizeUnits m_gop_size_units;
    bool m_gop_size_units_isSet;
    bool m_gop_size_units_isValid;

    qint32 m_hrd_buffer_final_fill_percentage;
    bool m_hrd_buffer_final_fill_percentage_isSet;
    bool m_hrd_buffer_final_fill_percentage_isValid;

    qint32 m_hrd_buffer_initial_fill_percentage;
    bool m_hrd_buffer_initial_fill_percentage_isSet;
    bool m_hrd_buffer_initial_fill_percentage_isValid;

    qint32 m_hrd_buffer_size;
    bool m_hrd_buffer_size_isSet;
    bool m_hrd_buffer_size_isValid;

    OAIMpeg2InterlaceMode m_interlace_mode;
    bool m_interlace_mode_isSet;
    bool m_interlace_mode_isValid;

    OAIMpeg2IntraDcPrecision m_intra_dc_precision;
    bool m_intra_dc_precision_isSet;
    bool m_intra_dc_precision_isValid;

    qint32 m_max_bitrate;
    bool m_max_bitrate_isSet;
    bool m_max_bitrate_isValid;

    qint32 m_min_i_interval;
    bool m_min_i_interval_isSet;
    bool m_min_i_interval_isValid;

    qint32 m_number_b_frames_between_reference_frames;
    bool m_number_b_frames_between_reference_frames_isSet;
    bool m_number_b_frames_between_reference_frames_isValid;

    OAIMpeg2ParControl m_par_control;
    bool m_par_control_isSet;
    bool m_par_control_isValid;

    qint32 m_par_denominator;
    bool m_par_denominator_isSet;
    bool m_par_denominator_isValid;

    qint32 m_par_numerator;
    bool m_par_numerator_isSet;
    bool m_par_numerator_isValid;

    OAIMpeg2QualityTuningLevel m_quality_tuning_level;
    bool m_quality_tuning_level_isSet;
    bool m_quality_tuning_level_isValid;

    OAIMpeg2RateControlMode m_rate_control_mode;
    bool m_rate_control_mode_isSet;
    bool m_rate_control_mode_isValid;

    OAIMpeg2ScanTypeConversionMode m_scan_type_conversion_mode;
    bool m_scan_type_conversion_mode_isSet;
    bool m_scan_type_conversion_mode_isValid;

    OAIMpeg2SceneChangeDetect m_scene_change_detect;
    bool m_scene_change_detect_isSet;
    bool m_scene_change_detect_isValid;

    OAIMpeg2SlowPal m_slow_pal;
    bool m_slow_pal_isSet;
    bool m_slow_pal_isValid;

    qint32 m_softness;
    bool m_softness_isSet;
    bool m_softness_isValid;

    OAIMpeg2SpatialAdaptiveQuantization m_spatial_adaptive_quantization;
    bool m_spatial_adaptive_quantization_isSet;
    bool m_spatial_adaptive_quantization_isValid;

    OAIMpeg2Syntax m_syntax;
    bool m_syntax_isSet;
    bool m_syntax_isValid;

    OAIMpeg2Telecine m_telecine;
    bool m_telecine_isSet;
    bool m_telecine_isValid;

    OAIMpeg2TemporalAdaptiveQuantization m_temporal_adaptive_quantization;
    bool m_temporal_adaptive_quantization_isSet;
    bool m_temporal_adaptive_quantization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoCodecSettings_Mpeg2Settings)

#endif // OAIVideoCodecSettings_Mpeg2Settings_H
