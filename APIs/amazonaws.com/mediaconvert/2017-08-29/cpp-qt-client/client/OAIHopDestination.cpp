/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHopDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHopDestination::OAIHopDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHopDestination::OAIHopDestination() {
    this->initializeModel();
}

OAIHopDestination::~OAIHopDestination() {}

void OAIHopDestination::initializeModel() {

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_queue_isSet = false;
    m_queue_isValid = false;

    m_wait_minutes_isSet = false;
    m_wait_minutes_isValid = false;
}

void OAIHopDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHopDestination::fromJsonObject(QJsonObject json) {

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("Priority")]);
    m_priority_isSet = !json[QString("Priority")].isNull() && m_priority_isValid;

    m_queue_isValid = ::OpenAPI::fromJsonValue(m_queue, json[QString("Queue")]);
    m_queue_isSet = !json[QString("Queue")].isNull() && m_queue_isValid;

    m_wait_minutes_isValid = ::OpenAPI::fromJsonValue(m_wait_minutes, json[QString("WaitMinutes")]);
    m_wait_minutes_isSet = !json[QString("WaitMinutes")].isNull() && m_wait_minutes_isValid;
}

QString OAIHopDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHopDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_priority_isSet) {
        obj.insert(QString("Priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_queue_isSet) {
        obj.insert(QString("Queue"), ::OpenAPI::toJsonValue(m_queue));
    }
    if (m_wait_minutes_isSet) {
        obj.insert(QString("WaitMinutes"), ::OpenAPI::toJsonValue(m_wait_minutes));
    }
    return obj;
}

qint32 OAIHopDestination::getPriority() const {
    return m_priority;
}
void OAIHopDestination::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIHopDestination::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIHopDestination::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIHopDestination::getQueue() const {
    return m_queue;
}
void OAIHopDestination::setQueue(const QString &queue) {
    m_queue = queue;
    m_queue_isSet = true;
}

bool OAIHopDestination::is_queue_Set() const{
    return m_queue_isSet;
}

bool OAIHopDestination::is_queue_Valid() const{
    return m_queue_isValid;
}

qint32 OAIHopDestination::getWaitMinutes() const {
    return m_wait_minutes;
}
void OAIHopDestination::setWaitMinutes(const qint32 &wait_minutes) {
    m_wait_minutes = wait_minutes;
    m_wait_minutes_isSet = true;
}

bool OAIHopDestination::is_wait_minutes_Set() const{
    return m_wait_minutes_isSet;
}

bool OAIHopDestination::is_wait_minutes_Valid() const{
    return m_wait_minutes_isValid;
}

bool OAIHopDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHopDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
