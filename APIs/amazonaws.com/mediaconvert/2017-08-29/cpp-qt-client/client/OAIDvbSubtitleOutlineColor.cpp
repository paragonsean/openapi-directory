/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDvbSubtitleOutlineColor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDvbSubtitleOutlineColor::OAIDvbSubtitleOutlineColor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDvbSubtitleOutlineColor::OAIDvbSubtitleOutlineColor() {
    this->initializeModel();
}

OAIDvbSubtitleOutlineColor::~OAIDvbSubtitleOutlineColor() {}

void OAIDvbSubtitleOutlineColor::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDvbSubtitleOutlineColor::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDvbSubtitleOutlineColor::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BLACK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::BLACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WHITE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::WHITE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YELLOW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::YELLOW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::RED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GREEN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::GREEN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BLUE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::BLUE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDvbSubtitleOutlineColor::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDvbSubtitleOutlineColor::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDvbSubtitleOutlineColor::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDvbSubtitleOutlineColor::BLACK:
            val = "BLACK";
            break;
        case eOAIDvbSubtitleOutlineColor::WHITE:
            val = "WHITE";
            break;
        case eOAIDvbSubtitleOutlineColor::YELLOW:
            val = "YELLOW";
            break;
        case eOAIDvbSubtitleOutlineColor::RED:
            val = "RED";
            break;
        case eOAIDvbSubtitleOutlineColor::GREEN:
            val = "GREEN";
            break;
        case eOAIDvbSubtitleOutlineColor::BLUE:
            val = "BLUE";
            break;
        case eOAIDvbSubtitleOutlineColor::AUTO:
            val = "AUTO";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDvbSubtitleOutlineColor::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDvbSubtitleOutlineColor::eOAIDvbSubtitleOutlineColor OAIDvbSubtitleOutlineColor::getValue() const {
    return m_value;
}

void OAIDvbSubtitleOutlineColor::setValue(const OAIDvbSubtitleOutlineColor::eOAIDvbSubtitleOutlineColor& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDvbSubtitleOutlineColor::isSet() const {
    
    return m_value_isSet;
}

bool OAIDvbSubtitleOutlineColor::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
