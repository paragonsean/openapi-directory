/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProresFramerateConversionAlgorithm.h
 *
 * Choose the method that you want MediaConvert to use when increasing or decreasing the frame rate. For numerically simple conversions, such as 60 fps to 30 fps: We recommend that you keep the default value, Drop duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate. This results in a smooth picture, but might introduce undesirable video artifacts. For complex frame rate conversions, especially if your source video has already been converted from its original cadence: Choose FrameFormer to do motion-compensated interpolation. FrameFormer uses the best conversion method frame by frame. Note that using FrameFormer increases the transcoding time and incurs a significant add-on cost. When you choose FrameFormer, your input video resolution must be at least 128x96.
 */

#ifndef OAIProresFramerateConversionAlgorithm_H
#define OAIProresFramerateConversionAlgorithm_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProresFramerateConversionAlgorithm : public OAIEnum {
public:
    OAIProresFramerateConversionAlgorithm();
    OAIProresFramerateConversionAlgorithm(QString json);
    ~OAIProresFramerateConversionAlgorithm() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIProresFramerateConversionAlgorithm {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DUPLICATE_DROP, 
        INTERPOLATE, 
        FRAMEFORMER
    };
    OAIProresFramerateConversionAlgorithm::eOAIProresFramerateConversionAlgorithm getValue() const;
    void setValue(const OAIProresFramerateConversionAlgorithm::eOAIProresFramerateConversionAlgorithm& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIProresFramerateConversionAlgorithm m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProresFramerateConversionAlgorithm)

#endif // OAIProresFramerateConversionAlgorithm_H
