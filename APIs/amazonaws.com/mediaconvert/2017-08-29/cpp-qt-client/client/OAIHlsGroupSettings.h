/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsGroupSettings.h
 *
 * Settings related to your HLS output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html.
 */

#ifndef OAIHlsGroupSettings_H
#define OAIHlsGroupSettings_H

#include <QJsonObject>

#include "OAICmafGroupSettings_DestinationSettings.h"
#include "OAIHlsAudioOnlyHeader.h"
#include "OAIHlsCaptionLanguageSetting.h"
#include "OAIHlsCaptionSegmentLengthControl.h"
#include "OAIHlsClientCache.h"
#include "OAIHlsCodecSpecification.h"
#include "OAIHlsDirectoryStructure.h"
#include "OAIHlsGroupSettings_Encryption.h"
#include "OAIHlsGroupSettings_ImageBasedTrickPlaySettings.h"
#include "OAIHlsImageBasedTrickPlay.h"
#include "OAIHlsManifestCompression.h"
#include "OAIHlsManifestDurationFormat.h"
#include "OAIHlsOutputSelection.h"
#include "OAIHlsProgramDateTime.h"
#include "OAIHlsProgressiveWriteHlsManifest.h"
#include "OAIHlsSegmentControl.h"
#include "OAIHlsSegmentLengthControl.h"
#include "OAIHlsStreamInfResolution.h"
#include "OAIHlsTargetDurationCompatibilityMode.h"
#include "OAIHlsTimedMetadataId3Frame.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICmafGroupSettings_DestinationSettings;
class OAIHlsGroupSettings_Encryption;
class OAIHlsGroupSettings_ImageBasedTrickPlaySettings;

class OAIHlsGroupSettings : public OAIObject {
public:
    OAIHlsGroupSettings();
    OAIHlsGroupSettings(QString json);
    ~OAIHlsGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdMarkers() const;
    void setAdMarkers(const QList &ad_markers);
    bool is_ad_markers_Set() const;
    bool is_ad_markers_Valid() const;

    QList getAdditionalManifests() const;
    void setAdditionalManifests(const QList &additional_manifests);
    bool is_additional_manifests_Set() const;
    bool is_additional_manifests_Valid() const;

    OAIHlsAudioOnlyHeader getAudioOnlyHeader() const;
    void setAudioOnlyHeader(const OAIHlsAudioOnlyHeader &audio_only_header);
    bool is_audio_only_header_Set() const;
    bool is_audio_only_header_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QList getCaptionLanguageMappings() const;
    void setCaptionLanguageMappings(const QList &caption_language_mappings);
    bool is_caption_language_mappings_Set() const;
    bool is_caption_language_mappings_Valid() const;

    OAIHlsCaptionLanguageSetting getCaptionLanguageSetting() const;
    void setCaptionLanguageSetting(const OAIHlsCaptionLanguageSetting &caption_language_setting);
    bool is_caption_language_setting_Set() const;
    bool is_caption_language_setting_Valid() const;

    OAIHlsCaptionSegmentLengthControl getCaptionSegmentLengthControl() const;
    void setCaptionSegmentLengthControl(const OAIHlsCaptionSegmentLengthControl &caption_segment_length_control);
    bool is_caption_segment_length_control_Set() const;
    bool is_caption_segment_length_control_Valid() const;

    OAIHlsClientCache getClientCache() const;
    void setClientCache(const OAIHlsClientCache &client_cache);
    bool is_client_cache_Set() const;
    bool is_client_cache_Valid() const;

    OAIHlsCodecSpecification getCodecSpecification() const;
    void setCodecSpecification(const OAIHlsCodecSpecification &codec_specification);
    bool is_codec_specification_Set() const;
    bool is_codec_specification_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAICmafGroupSettings_DestinationSettings getDestinationSettings() const;
    void setDestinationSettings(const OAICmafGroupSettings_DestinationSettings &destination_settings);
    bool is_destination_settings_Set() const;
    bool is_destination_settings_Valid() const;

    OAIHlsDirectoryStructure getDirectoryStructure() const;
    void setDirectoryStructure(const OAIHlsDirectoryStructure &directory_structure);
    bool is_directory_structure_Set() const;
    bool is_directory_structure_Valid() const;

    OAIHlsGroupSettings_Encryption getEncryption() const;
    void setEncryption(const OAIHlsGroupSettings_Encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    OAIHlsImageBasedTrickPlay getImageBasedTrickPlay() const;
    void setImageBasedTrickPlay(const OAIHlsImageBasedTrickPlay &image_based_trick_play);
    bool is_image_based_trick_play_Set() const;
    bool is_image_based_trick_play_Valid() const;

    OAIHlsGroupSettings_ImageBasedTrickPlaySettings getImageBasedTrickPlaySettings() const;
    void setImageBasedTrickPlaySettings(const OAIHlsGroupSettings_ImageBasedTrickPlaySettings &image_based_trick_play_settings);
    bool is_image_based_trick_play_settings_Set() const;
    bool is_image_based_trick_play_settings_Valid() const;

    OAIHlsManifestCompression getManifestCompression() const;
    void setManifestCompression(const OAIHlsManifestCompression &manifest_compression);
    bool is_manifest_compression_Set() const;
    bool is_manifest_compression_Valid() const;

    OAIHlsManifestDurationFormat getManifestDurationFormat() const;
    void setManifestDurationFormat(const OAIHlsManifestDurationFormat &manifest_duration_format);
    bool is_manifest_duration_format_Set() const;
    bool is_manifest_duration_format_Valid() const;

    double getMinFinalSegmentLength() const;
    void setMinFinalSegmentLength(const double &min_final_segment_length);
    bool is_min_final_segment_length_Set() const;
    bool is_min_final_segment_length_Valid() const;

    qint32 getMinSegmentLength() const;
    void setMinSegmentLength(const qint32 &min_segment_length);
    bool is_min_segment_length_Set() const;
    bool is_min_segment_length_Valid() const;

    OAIHlsOutputSelection getOutputSelection() const;
    void setOutputSelection(const OAIHlsOutputSelection &output_selection);
    bool is_output_selection_Set() const;
    bool is_output_selection_Valid() const;

    OAIHlsProgramDateTime getProgramDateTime() const;
    void setProgramDateTime(const OAIHlsProgramDateTime &program_date_time);
    bool is_program_date_time_Set() const;
    bool is_program_date_time_Valid() const;

    qint32 getProgramDateTimePeriod() const;
    void setProgramDateTimePeriod(const qint32 &program_date_time_period);
    bool is_program_date_time_period_Set() const;
    bool is_program_date_time_period_Valid() const;

    OAIHlsProgressiveWriteHlsManifest getProgressiveWriteHlsManifest() const;
    void setProgressiveWriteHlsManifest(const OAIHlsProgressiveWriteHlsManifest &progressive_write_hls_manifest);
    bool is_progressive_write_hls_manifest_Set() const;
    bool is_progressive_write_hls_manifest_Valid() const;

    OAIHlsSegmentControl getSegmentControl() const;
    void setSegmentControl(const OAIHlsSegmentControl &segment_control);
    bool is_segment_control_Set() const;
    bool is_segment_control_Valid() const;

    qint32 getSegmentLength() const;
    void setSegmentLength(const qint32 &segment_length);
    bool is_segment_length_Set() const;
    bool is_segment_length_Valid() const;

    OAIHlsSegmentLengthControl getSegmentLengthControl() const;
    void setSegmentLengthControl(const OAIHlsSegmentLengthControl &segment_length_control);
    bool is_segment_length_control_Set() const;
    bool is_segment_length_control_Valid() const;

    qint32 getSegmentsPerSubdirectory() const;
    void setSegmentsPerSubdirectory(const qint32 &segments_per_subdirectory);
    bool is_segments_per_subdirectory_Set() const;
    bool is_segments_per_subdirectory_Valid() const;

    OAIHlsStreamInfResolution getStreamInfResolution() const;
    void setStreamInfResolution(const OAIHlsStreamInfResolution &stream_inf_resolution);
    bool is_stream_inf_resolution_Set() const;
    bool is_stream_inf_resolution_Valid() const;

    OAIHlsTargetDurationCompatibilityMode getTargetDurationCompatibilityMode() const;
    void setTargetDurationCompatibilityMode(const OAIHlsTargetDurationCompatibilityMode &target_duration_compatibility_mode);
    bool is_target_duration_compatibility_mode_Set() const;
    bool is_target_duration_compatibility_mode_Valid() const;

    OAIHlsTimedMetadataId3Frame getTimedMetadataId3Frame() const;
    void setTimedMetadataId3Frame(const OAIHlsTimedMetadataId3Frame &timed_metadata_id3_frame);
    bool is_timed_metadata_id3_frame_Set() const;
    bool is_timed_metadata_id3_frame_Valid() const;

    qint32 getTimedMetadataId3Period() const;
    void setTimedMetadataId3Period(const qint32 &timed_metadata_id3_period);
    bool is_timed_metadata_id3_period_Set() const;
    bool is_timed_metadata_id3_period_Valid() const;

    qint32 getTimestampDeltaMilliseconds() const;
    void setTimestampDeltaMilliseconds(const qint32 &timestamp_delta_milliseconds);
    bool is_timestamp_delta_milliseconds_Set() const;
    bool is_timestamp_delta_milliseconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_ad_markers;
    bool m_ad_markers_isSet;
    bool m_ad_markers_isValid;

    QList m_additional_manifests;
    bool m_additional_manifests_isSet;
    bool m_additional_manifests_isValid;

    OAIHlsAudioOnlyHeader m_audio_only_header;
    bool m_audio_only_header_isSet;
    bool m_audio_only_header_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QList m_caption_language_mappings;
    bool m_caption_language_mappings_isSet;
    bool m_caption_language_mappings_isValid;

    OAIHlsCaptionLanguageSetting m_caption_language_setting;
    bool m_caption_language_setting_isSet;
    bool m_caption_language_setting_isValid;

    OAIHlsCaptionSegmentLengthControl m_caption_segment_length_control;
    bool m_caption_segment_length_control_isSet;
    bool m_caption_segment_length_control_isValid;

    OAIHlsClientCache m_client_cache;
    bool m_client_cache_isSet;
    bool m_client_cache_isValid;

    OAIHlsCodecSpecification m_codec_specification;
    bool m_codec_specification_isSet;
    bool m_codec_specification_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAICmafGroupSettings_DestinationSettings m_destination_settings;
    bool m_destination_settings_isSet;
    bool m_destination_settings_isValid;

    OAIHlsDirectoryStructure m_directory_structure;
    bool m_directory_structure_isSet;
    bool m_directory_structure_isValid;

    OAIHlsGroupSettings_Encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    OAIHlsImageBasedTrickPlay m_image_based_trick_play;
    bool m_image_based_trick_play_isSet;
    bool m_image_based_trick_play_isValid;

    OAIHlsGroupSettings_ImageBasedTrickPlaySettings m_image_based_trick_play_settings;
    bool m_image_based_trick_play_settings_isSet;
    bool m_image_based_trick_play_settings_isValid;

    OAIHlsManifestCompression m_manifest_compression;
    bool m_manifest_compression_isSet;
    bool m_manifest_compression_isValid;

    OAIHlsManifestDurationFormat m_manifest_duration_format;
    bool m_manifest_duration_format_isSet;
    bool m_manifest_duration_format_isValid;

    double m_min_final_segment_length;
    bool m_min_final_segment_length_isSet;
    bool m_min_final_segment_length_isValid;

    qint32 m_min_segment_length;
    bool m_min_segment_length_isSet;
    bool m_min_segment_length_isValid;

    OAIHlsOutputSelection m_output_selection;
    bool m_output_selection_isSet;
    bool m_output_selection_isValid;

    OAIHlsProgramDateTime m_program_date_time;
    bool m_program_date_time_isSet;
    bool m_program_date_time_isValid;

    qint32 m_program_date_time_period;
    bool m_program_date_time_period_isSet;
    bool m_program_date_time_period_isValid;

    OAIHlsProgressiveWriteHlsManifest m_progressive_write_hls_manifest;
    bool m_progressive_write_hls_manifest_isSet;
    bool m_progressive_write_hls_manifest_isValid;

    OAIHlsSegmentControl m_segment_control;
    bool m_segment_control_isSet;
    bool m_segment_control_isValid;

    qint32 m_segment_length;
    bool m_segment_length_isSet;
    bool m_segment_length_isValid;

    OAIHlsSegmentLengthControl m_segment_length_control;
    bool m_segment_length_control_isSet;
    bool m_segment_length_control_isValid;

    qint32 m_segments_per_subdirectory;
    bool m_segments_per_subdirectory_isSet;
    bool m_segments_per_subdirectory_isValid;

    OAIHlsStreamInfResolution m_stream_inf_resolution;
    bool m_stream_inf_resolution_isSet;
    bool m_stream_inf_resolution_isValid;

    OAIHlsTargetDurationCompatibilityMode m_target_duration_compatibility_mode;
    bool m_target_duration_compatibility_mode_isSet;
    bool m_target_duration_compatibility_mode_isValid;

    OAIHlsTimedMetadataId3Frame m_timed_metadata_id3_frame;
    bool m_timed_metadata_id3_frame_isSet;
    bool m_timed_metadata_id3_frame_isValid;

    qint32 m_timed_metadata_id3_period;
    bool m_timed_metadata_id3_period_isSet;
    bool m_timed_metadata_id3_period_isValid;

    qint32 m_timestamp_delta_milliseconds;
    bool m_timestamp_delta_milliseconds_isSet;
    bool m_timestamp_delta_milliseconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsGroupSettings)

#endif // OAIHlsGroupSettings_H
