/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICmafAdditionalManifest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICmafAdditionalManifest::OAICmafAdditionalManifest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICmafAdditionalManifest::OAICmafAdditionalManifest() {
    this->initializeModel();
}

OAICmafAdditionalManifest::~OAICmafAdditionalManifest() {}

void OAICmafAdditionalManifest::initializeModel() {

    m_manifest_name_modifier_isSet = false;
    m_manifest_name_modifier_isValid = false;

    m_selected_outputs_isSet = false;
    m_selected_outputs_isValid = false;
}

void OAICmafAdditionalManifest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICmafAdditionalManifest::fromJsonObject(QJsonObject json) {

    m_manifest_name_modifier_isValid = ::OpenAPI::fromJsonValue(m_manifest_name_modifier, json[QString("ManifestNameModifier")]);
    m_manifest_name_modifier_isSet = !json[QString("ManifestNameModifier")].isNull() && m_manifest_name_modifier_isValid;

    m_selected_outputs_isValid = ::OpenAPI::fromJsonValue(m_selected_outputs, json[QString("SelectedOutputs")]);
    m_selected_outputs_isSet = !json[QString("SelectedOutputs")].isNull() && m_selected_outputs_isValid;
}

QString OAICmafAdditionalManifest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICmafAdditionalManifest::asJsonObject() const {
    QJsonObject obj;
    if (m_manifest_name_modifier_isSet) {
        obj.insert(QString("ManifestNameModifier"), ::OpenAPI::toJsonValue(m_manifest_name_modifier));
    }
    if (m_selected_outputs.isSet()) {
        obj.insert(QString("SelectedOutputs"), ::OpenAPI::toJsonValue(m_selected_outputs));
    }
    return obj;
}

QString OAICmafAdditionalManifest::getManifestNameModifier() const {
    return m_manifest_name_modifier;
}
void OAICmafAdditionalManifest::setManifestNameModifier(const QString &manifest_name_modifier) {
    m_manifest_name_modifier = manifest_name_modifier;
    m_manifest_name_modifier_isSet = true;
}

bool OAICmafAdditionalManifest::is_manifest_name_modifier_Set() const{
    return m_manifest_name_modifier_isSet;
}

bool OAICmafAdditionalManifest::is_manifest_name_modifier_Valid() const{
    return m_manifest_name_modifier_isValid;
}

QList OAICmafAdditionalManifest::getSelectedOutputs() const {
    return m_selected_outputs;
}
void OAICmafAdditionalManifest::setSelectedOutputs(const QList &selected_outputs) {
    m_selected_outputs = selected_outputs;
    m_selected_outputs_isSet = true;
}

bool OAICmafAdditionalManifest::is_selected_outputs_Set() const{
    return m_selected_outputs_isSet;
}

bool OAICmafAdditionalManifest::is_selected_outputs_Valid() const{
    return m_selected_outputs_isValid;
}

bool OAICmafAdditionalManifest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_manifest_name_modifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_outputs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICmafAdditionalManifest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
