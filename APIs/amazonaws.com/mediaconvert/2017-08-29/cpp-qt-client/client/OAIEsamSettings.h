/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEsamSettings.h
 *
 * Settings for Event Signaling And Messaging (ESAM). If you don&#39;t do ad insertion, you can ignore these settings.
 */

#ifndef OAIEsamSettings_H
#define OAIEsamSettings_H

#include <QJsonObject>

#include "OAIEsamSettings_ManifestConfirmConditionNotification.h"
#include "OAIEsamSettings_SignalProcessingNotification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEsamSettings_ManifestConfirmConditionNotification;
class OAIEsamSettings_SignalProcessingNotification;

class OAIEsamSettings : public OAIObject {
public:
    OAIEsamSettings();
    OAIEsamSettings(QString json);
    ~OAIEsamSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEsamSettings_ManifestConfirmConditionNotification getManifestConfirmConditionNotification() const;
    void setManifestConfirmConditionNotification(const OAIEsamSettings_ManifestConfirmConditionNotification &manifest_confirm_condition_notification);
    bool is_manifest_confirm_condition_notification_Set() const;
    bool is_manifest_confirm_condition_notification_Valid() const;

    qint32 getResponseSignalPreroll() const;
    void setResponseSignalPreroll(const qint32 &response_signal_preroll);
    bool is_response_signal_preroll_Set() const;
    bool is_response_signal_preroll_Valid() const;

    OAIEsamSettings_SignalProcessingNotification getSignalProcessingNotification() const;
    void setSignalProcessingNotification(const OAIEsamSettings_SignalProcessingNotification &signal_processing_notification);
    bool is_signal_processing_notification_Set() const;
    bool is_signal_processing_notification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEsamSettings_ManifestConfirmConditionNotification m_manifest_confirm_condition_notification;
    bool m_manifest_confirm_condition_notification_isSet;
    bool m_manifest_confirm_condition_notification_isValid;

    qint32 m_response_signal_preroll;
    bool m_response_signal_preroll_isSet;
    bool m_response_signal_preroll_isValid;

    OAIEsamSettings_SignalProcessingNotification m_signal_processing_notification;
    bool m_signal_processing_notification_isSet;
    bool m_signal_processing_notification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEsamSettings)

#endif // OAIEsamSettings_H
