/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMxfSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMxfSettings::OAIMxfSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMxfSettings::OAIMxfSettings() {
    this->initializeModel();
}

OAIMxfSettings::~OAIMxfSettings() {}

void OAIMxfSettings::initializeModel() {

    m_afd_signaling_isSet = false;
    m_afd_signaling_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_xavc_profile_settings_isSet = false;
    m_xavc_profile_settings_isValid = false;
}

void OAIMxfSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMxfSettings::fromJsonObject(QJsonObject json) {

    m_afd_signaling_isValid = ::OpenAPI::fromJsonValue(m_afd_signaling, json[QString("AfdSignaling")]);
    m_afd_signaling_isSet = !json[QString("AfdSignaling")].isNull() && m_afd_signaling_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("Profile")]);
    m_profile_isSet = !json[QString("Profile")].isNull() && m_profile_isValid;

    m_xavc_profile_settings_isValid = ::OpenAPI::fromJsonValue(m_xavc_profile_settings, json[QString("XavcProfileSettings")]);
    m_xavc_profile_settings_isSet = !json[QString("XavcProfileSettings")].isNull() && m_xavc_profile_settings_isValid;
}

QString OAIMxfSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMxfSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_afd_signaling.isSet()) {
        obj.insert(QString("AfdSignaling"), ::OpenAPI::toJsonValue(m_afd_signaling));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("Profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_xavc_profile_settings.isSet()) {
        obj.insert(QString("XavcProfileSettings"), ::OpenAPI::toJsonValue(m_xavc_profile_settings));
    }
    return obj;
}

OAIMxfAfdSignaling OAIMxfSettings::getAfdSignaling() const {
    return m_afd_signaling;
}
void OAIMxfSettings::setAfdSignaling(const OAIMxfAfdSignaling &afd_signaling) {
    m_afd_signaling = afd_signaling;
    m_afd_signaling_isSet = true;
}

bool OAIMxfSettings::is_afd_signaling_Set() const{
    return m_afd_signaling_isSet;
}

bool OAIMxfSettings::is_afd_signaling_Valid() const{
    return m_afd_signaling_isValid;
}

OAIMxfProfile OAIMxfSettings::getProfile() const {
    return m_profile;
}
void OAIMxfSettings::setProfile(const OAIMxfProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIMxfSettings::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIMxfSettings::is_profile_Valid() const{
    return m_profile_isValid;
}

OAIMxfSettings_XavcProfileSettings OAIMxfSettings::getXavcProfileSettings() const {
    return m_xavc_profile_settings;
}
void OAIMxfSettings::setXavcProfileSettings(const OAIMxfSettings_XavcProfileSettings &xavc_profile_settings) {
    m_xavc_profile_settings = xavc_profile_settings;
    m_xavc_profile_settings_isSet = true;
}

bool OAIMxfSettings::is_xavc_profile_settings_Set() const{
    return m_xavc_profile_settings_isSet;
}

bool OAIMxfSettings::is_xavc_profile_settings_Valid() const{
    return m_xavc_profile_settings_isValid;
}

bool OAIMxfSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_afd_signaling.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_xavc_profile_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMxfSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
