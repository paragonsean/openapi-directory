/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAv1FramerateControl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAv1FramerateControl::OAIAv1FramerateControl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAv1FramerateControl::OAIAv1FramerateControl() {
    this->initializeModel();
}

OAIAv1FramerateControl::~OAIAv1FramerateControl() {}

void OAIAv1FramerateControl::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAv1FramerateControl::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAv1FramerateControl::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INITIALIZE_FROM_SOURCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAv1FramerateControl::INITIALIZE_FROM_SOURCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPECIFIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAv1FramerateControl::SPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAv1FramerateControl::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAv1FramerateControl::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAv1FramerateControl::INITIALIZE_FROM_SOURCE:
            val = "INITIALIZE_FROM_SOURCE";
            break;
        case eOAIAv1FramerateControl::SPECIFIED:
            val = "SPECIFIED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAv1FramerateControl::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAv1FramerateControl::eOAIAv1FramerateControl OAIAv1FramerateControl::getValue() const {
    return m_value;
}

void OAIAv1FramerateControl::setValue(const OAIAv1FramerateControl::eOAIAv1FramerateControl& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAv1FramerateControl::isSet() const {
    
    return m_value_isSet;
}

bool OAIAv1FramerateControl::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
