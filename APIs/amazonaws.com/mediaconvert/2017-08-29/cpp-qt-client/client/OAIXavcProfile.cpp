/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIXavcProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIXavcProfile::OAIXavcProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIXavcProfile::OAIXavcProfile() {
    this->initializeModel();
}

OAIXavcProfile::~OAIXavcProfile() {}

void OAIXavcProfile::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIXavcProfile::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIXavcProfile::fromJson(QString jsonString) {
    
    if ( jsonString.compare("XAVC_HD_INTRA_CBG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXavcProfile::HD_INTRA_CBG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XAVC_4K_INTRA_CBG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXavcProfile::_4K_INTRA_CBG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XAVC_4K_INTRA_VBR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXavcProfile::_4K_INTRA_VBR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XAVC_HD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXavcProfile::HD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("XAVC_4K", Qt::CaseInsensitive) == 0) {
        m_value = eOAIXavcProfile::_4K;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIXavcProfile::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIXavcProfile::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIXavcProfile::HD_INTRA_CBG:
            val = "XAVC_HD_INTRA_CBG";
            break;
        case eOAIXavcProfile::_4K_INTRA_CBG:
            val = "XAVC_4K_INTRA_CBG";
            break;
        case eOAIXavcProfile::_4K_INTRA_VBR:
            val = "XAVC_4K_INTRA_VBR";
            break;
        case eOAIXavcProfile::HD:
            val = "XAVC_HD";
            break;
        case eOAIXavcProfile::_4K:
            val = "XAVC_4K";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIXavcProfile::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIXavcProfile::eOAIXavcProfile OAIXavcProfile::getValue() const {
    return m_value;
}

void OAIXavcProfile::setValue(const OAIXavcProfile::eOAIXavcProfile& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIXavcProfile::isSet() const {
    
    return m_value_isSet;
}

bool OAIXavcProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
