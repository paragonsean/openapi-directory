/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateQueueRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateQueueRequest::OAIUpdateQueueRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateQueueRequest::OAIUpdateQueueRequest() {
    this->initializeModel();
}

OAIUpdateQueueRequest::~OAIUpdateQueueRequest() {}

void OAIUpdateQueueRequest::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_reservation_plan_settings_isSet = false;
    m_reservation_plan_settings_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdateQueueRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateQueueRequest::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_reservation_plan_settings_isValid = ::OpenAPI::fromJsonValue(m_reservation_plan_settings, json[QString("ReservationPlanSettings")]);
    m_reservation_plan_settings_isSet = !json[QString("ReservationPlanSettings")].isNull() && m_reservation_plan_settings_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIUpdateQueueRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateQueueRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_reservation_plan_settings.isSet()) {
        obj.insert(QString("ReservationPlanSettings"), ::OpenAPI::toJsonValue(m_reservation_plan_settings));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIUpdateQueueRequest::getDescription() const {
    return m_description;
}
void OAIUpdateQueueRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateQueueRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateQueueRequest::is_description_Valid() const{
    return m_description_isValid;
}

OAIUpdateQueueRequest_ReservationPlanSettings OAIUpdateQueueRequest::getReservationPlanSettings() const {
    return m_reservation_plan_settings;
}
void OAIUpdateQueueRequest::setReservationPlanSettings(const OAIUpdateQueueRequest_ReservationPlanSettings &reservation_plan_settings) {
    m_reservation_plan_settings = reservation_plan_settings;
    m_reservation_plan_settings_isSet = true;
}

bool OAIUpdateQueueRequest::is_reservation_plan_settings_Set() const{
    return m_reservation_plan_settings_isSet;
}

bool OAIUpdateQueueRequest::is_reservation_plan_settings_Valid() const{
    return m_reservation_plan_settings_isValid;
}

OAIQueueStatus OAIUpdateQueueRequest::getStatus() const {
    return m_status;
}
void OAIUpdateQueueRequest::setStatus(const OAIQueueStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateQueueRequest::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateQueueRequest::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateQueueRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_plan_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateQueueRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
