/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvcIntraSettings.h
 *
 * Required when you choose AVC-Intra for your output video codec. For more information about the AVC-Intra settings, see the relevant specification. For detailed information about SD and HD in AVC-Intra, see https://ieeexplore.ieee.org/document/7290936. For information about 4K/2K in AVC-Intra, see https://pro-av.panasonic.net/en/avc-ultra/AVC-ULTRAoverview.pdf.
 */

#ifndef OAIAvcIntraSettings_H
#define OAIAvcIntraSettings_H

#include <QJsonObject>

#include "OAIAvcIntraClass.h"
#include "OAIAvcIntraFramerateControl.h"
#include "OAIAvcIntraFramerateConversionAlgorithm.h"
#include "OAIAvcIntraInterlaceMode.h"
#include "OAIAvcIntraScanTypeConversionMode.h"
#include "OAIAvcIntraSettings_AvcIntraUhdSettings.h"
#include "OAIAvcIntraSlowPal.h"
#include "OAIAvcIntraTelecine.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvcIntraSettings_AvcIntraUhdSettings;

class OAIAvcIntraSettings : public OAIObject {
public:
    OAIAvcIntraSettings();
    OAIAvcIntraSettings(QString json);
    ~OAIAvcIntraSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAvcIntraClass getAvcIntraClass() const;
    void setAvcIntraClass(const OAIAvcIntraClass &avc_intra_class);
    bool is_avc_intra_class_Set() const;
    bool is_avc_intra_class_Valid() const;

    OAIAvcIntraSettings_AvcIntraUhdSettings getAvcIntraUhdSettings() const;
    void setAvcIntraUhdSettings(const OAIAvcIntraSettings_AvcIntraUhdSettings &avc_intra_uhd_settings);
    bool is_avc_intra_uhd_settings_Set() const;
    bool is_avc_intra_uhd_settings_Valid() const;

    OAIAvcIntraFramerateControl getFramerateControl() const;
    void setFramerateControl(const OAIAvcIntraFramerateControl &framerate_control);
    bool is_framerate_control_Set() const;
    bool is_framerate_control_Valid() const;

    OAIAvcIntraFramerateConversionAlgorithm getFramerateConversionAlgorithm() const;
    void setFramerateConversionAlgorithm(const OAIAvcIntraFramerateConversionAlgorithm &framerate_conversion_algorithm);
    bool is_framerate_conversion_algorithm_Set() const;
    bool is_framerate_conversion_algorithm_Valid() const;

    qint32 getFramerateDenominator() const;
    void setFramerateDenominator(const qint32 &framerate_denominator);
    bool is_framerate_denominator_Set() const;
    bool is_framerate_denominator_Valid() const;

    qint32 getFramerateNumerator() const;
    void setFramerateNumerator(const qint32 &framerate_numerator);
    bool is_framerate_numerator_Set() const;
    bool is_framerate_numerator_Valid() const;

    OAIAvcIntraInterlaceMode getInterlaceMode() const;
    void setInterlaceMode(const OAIAvcIntraInterlaceMode &interlace_mode);
    bool is_interlace_mode_Set() const;
    bool is_interlace_mode_Valid() const;

    OAIAvcIntraScanTypeConversionMode getScanTypeConversionMode() const;
    void setScanTypeConversionMode(const OAIAvcIntraScanTypeConversionMode &scan_type_conversion_mode);
    bool is_scan_type_conversion_mode_Set() const;
    bool is_scan_type_conversion_mode_Valid() const;

    OAIAvcIntraSlowPal getSlowPal() const;
    void setSlowPal(const OAIAvcIntraSlowPal &slow_pal);
    bool is_slow_pal_Set() const;
    bool is_slow_pal_Valid() const;

    OAIAvcIntraTelecine getTelecine() const;
    void setTelecine(const OAIAvcIntraTelecine &telecine);
    bool is_telecine_Set() const;
    bool is_telecine_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAvcIntraClass m_avc_intra_class;
    bool m_avc_intra_class_isSet;
    bool m_avc_intra_class_isValid;

    OAIAvcIntraSettings_AvcIntraUhdSettings m_avc_intra_uhd_settings;
    bool m_avc_intra_uhd_settings_isSet;
    bool m_avc_intra_uhd_settings_isValid;

    OAIAvcIntraFramerateControl m_framerate_control;
    bool m_framerate_control_isSet;
    bool m_framerate_control_isValid;

    OAIAvcIntraFramerateConversionAlgorithm m_framerate_conversion_algorithm;
    bool m_framerate_conversion_algorithm_isSet;
    bool m_framerate_conversion_algorithm_isValid;

    qint32 m_framerate_denominator;
    bool m_framerate_denominator_isSet;
    bool m_framerate_denominator_isValid;

    qint32 m_framerate_numerator;
    bool m_framerate_numerator_isSet;
    bool m_framerate_numerator_isValid;

    OAIAvcIntraInterlaceMode m_interlace_mode;
    bool m_interlace_mode_isSet;
    bool m_interlace_mode_isValid;

    OAIAvcIntraScanTypeConversionMode m_scan_type_conversion_mode;
    bool m_scan_type_conversion_mode_isSet;
    bool m_scan_type_conversion_mode_isValid;

    OAIAvcIntraSlowPal m_slow_pal;
    bool m_slow_pal_isSet;
    bool m_slow_pal_isValid;

    OAIAvcIntraTelecine m_telecine;
    bool m_telecine_isSet;
    bool m_telecine_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvcIntraSettings)

#endif // OAIAvcIntraSettings_H
