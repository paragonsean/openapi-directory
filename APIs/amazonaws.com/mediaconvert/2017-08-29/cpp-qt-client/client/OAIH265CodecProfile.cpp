/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIH265CodecProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIH265CodecProfile::OAIH265CodecProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIH265CodecProfile::OAIH265CodecProfile() {
    this->initializeModel();
}

OAIH265CodecProfile::~OAIH265CodecProfile() {}

void OAIH265CodecProfile::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIH265CodecProfile::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIH265CodecProfile::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MAIN_MAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_MAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN_HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN10_MAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN10_MAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN10_HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN10_HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN_422_8BIT_MAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_422_8BIT_MAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN_422_8BIT_HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_422_8BIT_HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN_422_10BIT_MAIN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_422_10BIT_MAIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAIN_422_10BIT_HIGH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265CodecProfile::MAIN_422_10BIT_HIGH;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIH265CodecProfile::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIH265CodecProfile::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIH265CodecProfile::MAIN_MAIN:
            val = "MAIN_MAIN";
            break;
        case eOAIH265CodecProfile::MAIN_HIGH:
            val = "MAIN_HIGH";
            break;
        case eOAIH265CodecProfile::MAIN10_MAIN:
            val = "MAIN10_MAIN";
            break;
        case eOAIH265CodecProfile::MAIN10_HIGH:
            val = "MAIN10_HIGH";
            break;
        case eOAIH265CodecProfile::MAIN_422_8BIT_MAIN:
            val = "MAIN_422_8BIT_MAIN";
            break;
        case eOAIH265CodecProfile::MAIN_422_8BIT_HIGH:
            val = "MAIN_422_8BIT_HIGH";
            break;
        case eOAIH265CodecProfile::MAIN_422_10BIT_MAIN:
            val = "MAIN_422_10BIT_MAIN";
            break;
        case eOAIH265CodecProfile::MAIN_422_10BIT_HIGH:
            val = "MAIN_422_10BIT_HIGH";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIH265CodecProfile::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIH265CodecProfile::eOAIH265CodecProfile OAIH265CodecProfile::getValue() const {
    return m_value;
}

void OAIH265CodecProfile::setValue(const OAIH265CodecProfile::eOAIH265CodecProfile& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIH265CodecProfile::isSet() const {
    
    return m_value_isSet;
}

bool OAIH265CodecProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
