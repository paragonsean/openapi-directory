/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColorSpaceConversion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColorSpaceConversion::OAIColorSpaceConversion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColorSpaceConversion::OAIColorSpaceConversion() {
    this->initializeModel();
}

OAIColorSpaceConversion::~OAIColorSpaceConversion() {}

void OAIColorSpaceConversion::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIColorSpaceConversion::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIColorSpaceConversion::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_601", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_601;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_709", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_709;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_HDR10", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_HDR10;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_HLG_2020", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_HLG_2020;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_P3DCI", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_P3DCI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_P3D65_SDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_P3D65_SDR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORCE_P3D65_HDR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceConversion::FORCE_P3D65_HDR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIColorSpaceConversion::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIColorSpaceConversion::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIColorSpaceConversion::NONE:
            val = "NONE";
            break;
        case eOAIColorSpaceConversion::FORCE_601:
            val = "FORCE_601";
            break;
        case eOAIColorSpaceConversion::FORCE_709:
            val = "FORCE_709";
            break;
        case eOAIColorSpaceConversion::FORCE_HDR10:
            val = "FORCE_HDR10";
            break;
        case eOAIColorSpaceConversion::FORCE_HLG_2020:
            val = "FORCE_HLG_2020";
            break;
        case eOAIColorSpaceConversion::FORCE_P3DCI:
            val = "FORCE_P3DCI";
            break;
        case eOAIColorSpaceConversion::FORCE_P3D65_SDR:
            val = "FORCE_P3D65_SDR";
            break;
        case eOAIColorSpaceConversion::FORCE_P3D65_HDR:
            val = "FORCE_P3D65_HDR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIColorSpaceConversion::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIColorSpaceConversion::eOAIColorSpaceConversion OAIColorSpaceConversion::getValue() const {
    return m_value;
}

void OAIColorSpaceConversion::setValue(const OAIColorSpaceConversion::eOAIColorSpaceConversion& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIColorSpaceConversion::isSet() const {
    
    return m_value_isSet;
}

bool OAIColorSpaceConversion::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
