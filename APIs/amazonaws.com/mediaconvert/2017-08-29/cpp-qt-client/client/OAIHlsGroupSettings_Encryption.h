/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsGroupSettings_Encryption.h
 *
 * 
 */

#ifndef OAIHlsGroupSettings_Encryption_H
#define OAIHlsGroupSettings_Encryption_H

#include <QJsonObject>

#include "OAICmafEncryptionSettings_StaticKeyProvider.h"
#include "OAIDashIsoEncryptionSettings_SpekeKeyProvider.h"
#include "OAIHlsEncryptionType.h"
#include "OAIHlsInitializationVectorInManifest.h"
#include "OAIHlsKeyProviderType.h"
#include "OAIHlsOfflineEncrypted.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashIsoEncryptionSettings_SpekeKeyProvider;
class OAICmafEncryptionSettings_StaticKeyProvider;

class OAIHlsGroupSettings_Encryption : public OAIObject {
public:
    OAIHlsGroupSettings_Encryption();
    OAIHlsGroupSettings_Encryption(QString json);
    ~OAIHlsGroupSettings_Encryption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConstantInitializationVector() const;
    void setConstantInitializationVector(const QString &constant_initialization_vector);
    bool is_constant_initialization_vector_Set() const;
    bool is_constant_initialization_vector_Valid() const;

    OAIHlsEncryptionType getEncryptionMethod() const;
    void setEncryptionMethod(const OAIHlsEncryptionType &encryption_method);
    bool is_encryption_method_Set() const;
    bool is_encryption_method_Valid() const;

    OAIHlsInitializationVectorInManifest getInitializationVectorInManifest() const;
    void setInitializationVectorInManifest(const OAIHlsInitializationVectorInManifest &initialization_vector_in_manifest);
    bool is_initialization_vector_in_manifest_Set() const;
    bool is_initialization_vector_in_manifest_Valid() const;

    OAIHlsOfflineEncrypted getOfflineEncrypted() const;
    void setOfflineEncrypted(const OAIHlsOfflineEncrypted &offline_encrypted);
    bool is_offline_encrypted_Set() const;
    bool is_offline_encrypted_Valid() const;

    OAIDashIsoEncryptionSettings_SpekeKeyProvider getSpekeKeyProvider() const;
    void setSpekeKeyProvider(const OAIDashIsoEncryptionSettings_SpekeKeyProvider &speke_key_provider);
    bool is_speke_key_provider_Set() const;
    bool is_speke_key_provider_Valid() const;

    OAICmafEncryptionSettings_StaticKeyProvider getStaticKeyProvider() const;
    void setStaticKeyProvider(const OAICmafEncryptionSettings_StaticKeyProvider &static_key_provider);
    bool is_static_key_provider_Set() const;
    bool is_static_key_provider_Valid() const;

    OAIHlsKeyProviderType getType() const;
    void setType(const OAIHlsKeyProviderType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_constant_initialization_vector;
    bool m_constant_initialization_vector_isSet;
    bool m_constant_initialization_vector_isValid;

    OAIHlsEncryptionType m_encryption_method;
    bool m_encryption_method_isSet;
    bool m_encryption_method_isValid;

    OAIHlsInitializationVectorInManifest m_initialization_vector_in_manifest;
    bool m_initialization_vector_in_manifest_isSet;
    bool m_initialization_vector_in_manifest_isValid;

    OAIHlsOfflineEncrypted m_offline_encrypted;
    bool m_offline_encrypted_isSet;
    bool m_offline_encrypted_isValid;

    OAIDashIsoEncryptionSettings_SpekeKeyProvider m_speke_key_provider;
    bool m_speke_key_provider_isSet;
    bool m_speke_key_provider_isValid;

    OAICmafEncryptionSettings_StaticKeyProvider m_static_key_provider;
    bool m_static_key_provider_isSet;
    bool m_static_key_provider_isValid;

    OAIHlsKeyProviderType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsGroupSettings_Encryption)

#endif // OAIHlsGroupSettings_Encryption_H
