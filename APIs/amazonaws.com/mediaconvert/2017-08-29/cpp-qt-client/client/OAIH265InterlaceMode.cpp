/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIH265InterlaceMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIH265InterlaceMode::OAIH265InterlaceMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIH265InterlaceMode::OAIH265InterlaceMode() {
    this->initializeModel();
}

OAIH265InterlaceMode::~OAIH265InterlaceMode() {}

void OAIH265InterlaceMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIH265InterlaceMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIH265InterlaceMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PROGRESSIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265InterlaceMode::PROGRESSIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TOP_FIELD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265InterlaceMode::TOP_FIELD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BOTTOM_FIELD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265InterlaceMode::BOTTOM_FIELD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FOLLOW_TOP_FIELD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265InterlaceMode::FOLLOW_TOP_FIELD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FOLLOW_BOTTOM_FIELD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIH265InterlaceMode::FOLLOW_BOTTOM_FIELD;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIH265InterlaceMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIH265InterlaceMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIH265InterlaceMode::PROGRESSIVE:
            val = "PROGRESSIVE";
            break;
        case eOAIH265InterlaceMode::TOP_FIELD:
            val = "TOP_FIELD";
            break;
        case eOAIH265InterlaceMode::BOTTOM_FIELD:
            val = "BOTTOM_FIELD";
            break;
        case eOAIH265InterlaceMode::FOLLOW_TOP_FIELD:
            val = "FOLLOW_TOP_FIELD";
            break;
        case eOAIH265InterlaceMode::FOLLOW_BOTTOM_FIELD:
            val = "FOLLOW_BOTTOM_FIELD";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIH265InterlaceMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIH265InterlaceMode::eOAIH265InterlaceMode OAIH265InterlaceMode::getValue() const {
    return m_value;
}

void OAIH265InterlaceMode::setValue(const OAIH265InterlaceMode::eOAIH265InterlaceMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIH265InterlaceMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIH265InterlaceMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
