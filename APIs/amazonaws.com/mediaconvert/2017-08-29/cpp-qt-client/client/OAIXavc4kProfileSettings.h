/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIXavc4kProfileSettings.h
 *
 * Required when you set Profile to the value XAVC_4K.
 */

#ifndef OAIXavc4kProfileSettings_H
#define OAIXavc4kProfileSettings_H

#include <QJsonObject>

#include "OAIXavc4kProfileBitrateClass.h"
#include "OAIXavc4kProfileCodecProfile.h"
#include "OAIXavc4kProfileQualityTuningLevel.h"
#include "OAIXavcFlickerAdaptiveQuantization.h"
#include "OAIXavcGopBReference.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIXavc4kProfileSettings : public OAIObject {
public:
    OAIXavc4kProfileSettings();
    OAIXavc4kProfileSettings(QString json);
    ~OAIXavc4kProfileSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIXavc4kProfileBitrateClass getBitrateClass() const;
    void setBitrateClass(const OAIXavc4kProfileBitrateClass &bitrate_class);
    bool is_bitrate_class_Set() const;
    bool is_bitrate_class_Valid() const;

    OAIXavc4kProfileCodecProfile getCodecProfile() const;
    void setCodecProfile(const OAIXavc4kProfileCodecProfile &codec_profile);
    bool is_codec_profile_Set() const;
    bool is_codec_profile_Valid() const;

    OAIXavcFlickerAdaptiveQuantization getFlickerAdaptiveQuantization() const;
    void setFlickerAdaptiveQuantization(const OAIXavcFlickerAdaptiveQuantization &flicker_adaptive_quantization);
    bool is_flicker_adaptive_quantization_Set() const;
    bool is_flicker_adaptive_quantization_Valid() const;

    OAIXavcGopBReference getGopBReference() const;
    void setGopBReference(const OAIXavcGopBReference &gop_b_reference);
    bool is_gop_b_reference_Set() const;
    bool is_gop_b_reference_Valid() const;

    qint32 getGopClosedCadence() const;
    void setGopClosedCadence(const qint32 &gop_closed_cadence);
    bool is_gop_closed_cadence_Set() const;
    bool is_gop_closed_cadence_Valid() const;

    qint32 getHrdBufferSize() const;
    void setHrdBufferSize(const qint32 &hrd_buffer_size);
    bool is_hrd_buffer_size_Set() const;
    bool is_hrd_buffer_size_Valid() const;

    OAIXavc4kProfileQualityTuningLevel getQualityTuningLevel() const;
    void setQualityTuningLevel(const OAIXavc4kProfileQualityTuningLevel &quality_tuning_level);
    bool is_quality_tuning_level_Set() const;
    bool is_quality_tuning_level_Valid() const;

    qint32 getSlices() const;
    void setSlices(const qint32 &slices);
    bool is_slices_Set() const;
    bool is_slices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIXavc4kProfileBitrateClass m_bitrate_class;
    bool m_bitrate_class_isSet;
    bool m_bitrate_class_isValid;

    OAIXavc4kProfileCodecProfile m_codec_profile;
    bool m_codec_profile_isSet;
    bool m_codec_profile_isValid;

    OAIXavcFlickerAdaptiveQuantization m_flicker_adaptive_quantization;
    bool m_flicker_adaptive_quantization_isSet;
    bool m_flicker_adaptive_quantization_isValid;

    OAIXavcGopBReference m_gop_b_reference;
    bool m_gop_b_reference_isSet;
    bool m_gop_b_reference_isValid;

    qint32 m_gop_closed_cadence;
    bool m_gop_closed_cadence_isSet;
    bool m_gop_closed_cadence_isValid;

    qint32 m_hrd_buffer_size;
    bool m_hrd_buffer_size_isSet;
    bool m_hrd_buffer_size_isValid;

    OAIXavc4kProfileQualityTuningLevel m_quality_tuning_level;
    bool m_quality_tuning_level_isSet;
    bool m_quality_tuning_level_isValid;

    qint32 m_slices;
    bool m_slices_isSet;
    bool m_slices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIXavc4kProfileSettings)

#endif // OAIXavc4kProfileSettings_H
