/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerSettings.h
 *
 * Container specific settings.
 */

#ifndef OAIContainerSettings_H
#define OAIContainerSettings_H

#include <QJsonObject>

#include "OAIContainerSettings_CmfcSettings.h"
#include "OAIContainerSettings_F4vSettings.h"
#include "OAIContainerSettings_M2tsSettings.h"
#include "OAIContainerSettings_M3u8Settings.h"
#include "OAIContainerSettings_MovSettings.h"
#include "OAIContainerSettings_Mp4Settings.h"
#include "OAIContainerSettings_MpdSettings.h"
#include "OAIContainerSettings_MxfSettings.h"
#include "OAIContainerType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContainerSettings_CmfcSettings;
class OAIContainerSettings_F4vSettings;
class OAIContainerSettings_M2tsSettings;
class OAIContainerSettings_M3u8Settings;
class OAIContainerSettings_MovSettings;
class OAIContainerSettings_Mp4Settings;
class OAIContainerSettings_MpdSettings;
class OAIContainerSettings_MxfSettings;

class OAIContainerSettings : public OAIObject {
public:
    OAIContainerSettings();
    OAIContainerSettings(QString json);
    ~OAIContainerSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerSettings_CmfcSettings getCmfcSettings() const;
    void setCmfcSettings(const OAIContainerSettings_CmfcSettings &cmfc_settings);
    bool is_cmfc_settings_Set() const;
    bool is_cmfc_settings_Valid() const;

    OAIContainerType getContainer() const;
    void setContainer(const OAIContainerType &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    OAIContainerSettings_F4vSettings getF4vSettings() const;
    void setF4vSettings(const OAIContainerSettings_F4vSettings &f4v_settings);
    bool is_f4v_settings_Set() const;
    bool is_f4v_settings_Valid() const;

    OAIContainerSettings_M2tsSettings getM2tsSettings() const;
    void setM2tsSettings(const OAIContainerSettings_M2tsSettings &m2ts_settings);
    bool is_m2ts_settings_Set() const;
    bool is_m2ts_settings_Valid() const;

    OAIContainerSettings_M3u8Settings getM3u8Settings() const;
    void setM3u8Settings(const OAIContainerSettings_M3u8Settings &m3u8_settings);
    bool is_m3u8_settings_Set() const;
    bool is_m3u8_settings_Valid() const;

    OAIContainerSettings_MovSettings getMovSettings() const;
    void setMovSettings(const OAIContainerSettings_MovSettings &mov_settings);
    bool is_mov_settings_Set() const;
    bool is_mov_settings_Valid() const;

    OAIContainerSettings_Mp4Settings getMp4Settings() const;
    void setMp4Settings(const OAIContainerSettings_Mp4Settings &mp4_settings);
    bool is_mp4_settings_Set() const;
    bool is_mp4_settings_Valid() const;

    OAIContainerSettings_MpdSettings getMpdSettings() const;
    void setMpdSettings(const OAIContainerSettings_MpdSettings &mpd_settings);
    bool is_mpd_settings_Set() const;
    bool is_mpd_settings_Valid() const;

    OAIContainerSettings_MxfSettings getMxfSettings() const;
    void setMxfSettings(const OAIContainerSettings_MxfSettings &mxf_settings);
    bool is_mxf_settings_Set() const;
    bool is_mxf_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerSettings_CmfcSettings m_cmfc_settings;
    bool m_cmfc_settings_isSet;
    bool m_cmfc_settings_isValid;

    OAIContainerType m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    OAIContainerSettings_F4vSettings m_f4v_settings;
    bool m_f4v_settings_isSet;
    bool m_f4v_settings_isValid;

    OAIContainerSettings_M2tsSettings m_m2ts_settings;
    bool m_m2ts_settings_isSet;
    bool m_m2ts_settings_isValid;

    OAIContainerSettings_M3u8Settings m_m3u8_settings;
    bool m_m3u8_settings_isSet;
    bool m_m3u8_settings_isValid;

    OAIContainerSettings_MovSettings m_mov_settings;
    bool m_mov_settings_isSet;
    bool m_mov_settings_isValid;

    OAIContainerSettings_Mp4Settings m_mp4_settings;
    bool m_mp4_settings_isSet;
    bool m_mp4_settings_isValid;

    OAIContainerSettings_MpdSettings m_mpd_settings;
    bool m_mpd_settings_isSet;
    bool m_mpd_settings_isValid;

    OAIContainerSettings_MxfSettings m_mxf_settings;
    bool m_mxf_settings_isSet;
    bool m_mxf_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerSettings)

#endif // OAIContainerSettings_H
