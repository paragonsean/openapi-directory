/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileGroupSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileGroupSettings::OAIFileGroupSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileGroupSettings::OAIFileGroupSettings() {
    this->initializeModel();
}

OAIFileGroupSettings::~OAIFileGroupSettings() {}

void OAIFileGroupSettings::initializeModel() {

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_destination_settings_isSet = false;
    m_destination_settings_isValid = false;
}

void OAIFileGroupSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileGroupSettings::fromJsonObject(QJsonObject json) {

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_destination_settings, json[QString("DestinationSettings")]);
    m_destination_settings_isSet = !json[QString("DestinationSettings")].isNull() && m_destination_settings_isValid;
}

QString OAIFileGroupSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileGroupSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_isSet) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_destination_settings.isSet()) {
        obj.insert(QString("DestinationSettings"), ::OpenAPI::toJsonValue(m_destination_settings));
    }
    return obj;
}

QString OAIFileGroupSettings::getDestination() const {
    return m_destination;
}
void OAIFileGroupSettings::setDestination(const QString &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIFileGroupSettings::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIFileGroupSettings::is_destination_Valid() const{
    return m_destination_isValid;
}

OAICmafGroupSettings_DestinationSettings OAIFileGroupSettings::getDestinationSettings() const {
    return m_destination_settings;
}
void OAIFileGroupSettings::setDestinationSettings(const OAICmafGroupSettings_DestinationSettings &destination_settings) {
    m_destination_settings = destination_settings;
    m_destination_settings_isSet = true;
}

bool OAIFileGroupSettings::is_destination_settings_Set() const{
    return m_destination_settings_isSet;
}

bool OAIFileGroupSettings::is_destination_settings_Valid() const{
    return m_destination_settings_isValid;
}

bool OAIFileGroupSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileGroupSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
