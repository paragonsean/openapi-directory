/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateJob_request_settings_Esam.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateJob_request_settings_Esam::OAICreateJob_request_settings_Esam(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateJob_request_settings_Esam::OAICreateJob_request_settings_Esam() {
    this->initializeModel();
}

OAICreateJob_request_settings_Esam::~OAICreateJob_request_settings_Esam() {}

void OAICreateJob_request_settings_Esam::initializeModel() {

    m_manifest_confirm_condition_notification_isSet = false;
    m_manifest_confirm_condition_notification_isValid = false;

    m_response_signal_preroll_isSet = false;
    m_response_signal_preroll_isValid = false;

    m_signal_processing_notification_isSet = false;
    m_signal_processing_notification_isValid = false;
}

void OAICreateJob_request_settings_Esam::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateJob_request_settings_Esam::fromJsonObject(QJsonObject json) {

    m_manifest_confirm_condition_notification_isValid = ::OpenAPI::fromJsonValue(m_manifest_confirm_condition_notification, json[QString("ManifestConfirmConditionNotification")]);
    m_manifest_confirm_condition_notification_isSet = !json[QString("ManifestConfirmConditionNotification")].isNull() && m_manifest_confirm_condition_notification_isValid;

    m_response_signal_preroll_isValid = ::OpenAPI::fromJsonValue(m_response_signal_preroll, json[QString("ResponseSignalPreroll")]);
    m_response_signal_preroll_isSet = !json[QString("ResponseSignalPreroll")].isNull() && m_response_signal_preroll_isValid;

    m_signal_processing_notification_isValid = ::OpenAPI::fromJsonValue(m_signal_processing_notification, json[QString("SignalProcessingNotification")]);
    m_signal_processing_notification_isSet = !json[QString("SignalProcessingNotification")].isNull() && m_signal_processing_notification_isValid;
}

QString OAICreateJob_request_settings_Esam::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateJob_request_settings_Esam::asJsonObject() const {
    QJsonObject obj;
    if (m_manifest_confirm_condition_notification.isSet()) {
        obj.insert(QString("ManifestConfirmConditionNotification"), ::OpenAPI::toJsonValue(m_manifest_confirm_condition_notification));
    }
    if (m_response_signal_preroll_isSet) {
        obj.insert(QString("ResponseSignalPreroll"), ::OpenAPI::toJsonValue(m_response_signal_preroll));
    }
    if (m_signal_processing_notification.isSet()) {
        obj.insert(QString("SignalProcessingNotification"), ::OpenAPI::toJsonValue(m_signal_processing_notification));
    }
    return obj;
}

OAIEsamSettings_ManifestConfirmConditionNotification OAICreateJob_request_settings_Esam::getManifestConfirmConditionNotification() const {
    return m_manifest_confirm_condition_notification;
}
void OAICreateJob_request_settings_Esam::setManifestConfirmConditionNotification(const OAIEsamSettings_ManifestConfirmConditionNotification &manifest_confirm_condition_notification) {
    m_manifest_confirm_condition_notification = manifest_confirm_condition_notification;
    m_manifest_confirm_condition_notification_isSet = true;
}

bool OAICreateJob_request_settings_Esam::is_manifest_confirm_condition_notification_Set() const{
    return m_manifest_confirm_condition_notification_isSet;
}

bool OAICreateJob_request_settings_Esam::is_manifest_confirm_condition_notification_Valid() const{
    return m_manifest_confirm_condition_notification_isValid;
}

qint32 OAICreateJob_request_settings_Esam::getResponseSignalPreroll() const {
    return m_response_signal_preroll;
}
void OAICreateJob_request_settings_Esam::setResponseSignalPreroll(const qint32 &response_signal_preroll) {
    m_response_signal_preroll = response_signal_preroll;
    m_response_signal_preroll_isSet = true;
}

bool OAICreateJob_request_settings_Esam::is_response_signal_preroll_Set() const{
    return m_response_signal_preroll_isSet;
}

bool OAICreateJob_request_settings_Esam::is_response_signal_preroll_Valid() const{
    return m_response_signal_preroll_isValid;
}

OAIEsamSettings_SignalProcessingNotification OAICreateJob_request_settings_Esam::getSignalProcessingNotification() const {
    return m_signal_processing_notification;
}
void OAICreateJob_request_settings_Esam::setSignalProcessingNotification(const OAIEsamSettings_SignalProcessingNotification &signal_processing_notification) {
    m_signal_processing_notification = signal_processing_notification;
    m_signal_processing_notification_isSet = true;
}

bool OAICreateJob_request_settings_Esam::is_signal_processing_notification_Set() const{
    return m_signal_processing_notification_isSet;
}

bool OAICreateJob_request_settings_Esam::is_signal_processing_notification_Valid() const{
    return m_signal_processing_notification_isValid;
}

bool OAICreateJob_request_settings_Esam::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_manifest_confirm_condition_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_signal_preroll_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signal_processing_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateJob_request_settings_Esam::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
