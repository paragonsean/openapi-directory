/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColorSpaceUsage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColorSpaceUsage::OAIColorSpaceUsage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColorSpaceUsage::OAIColorSpaceUsage() {
    this->initializeModel();
}

OAIColorSpaceUsage::~OAIColorSpaceUsage() {}

void OAIColorSpaceUsage::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIColorSpaceUsage::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIColorSpaceUsage::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FORCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceUsage::FORCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FALLBACK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIColorSpaceUsage::FALLBACK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIColorSpaceUsage::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIColorSpaceUsage::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIColorSpaceUsage::FORCE:
            val = "FORCE";
            break;
        case eOAIColorSpaceUsage::FALLBACK:
            val = "FALLBACK";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIColorSpaceUsage::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIColorSpaceUsage::eOAIColorSpaceUsage OAIColorSpaceUsage::getValue() const {
    return m_value;
}

void OAIColorSpaceUsage::setValue(const OAIColorSpaceUsage::eOAIColorSpaceUsage& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIColorSpaceUsage::isSet() const {
    
    return m_value_isSet;
}

bool OAIColorSpaceUsage::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
