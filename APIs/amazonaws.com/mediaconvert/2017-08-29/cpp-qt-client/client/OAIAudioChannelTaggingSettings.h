/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioChannelTaggingSettings.h
 *
 * When you mimic a multi-channel audio layout with multiple mono-channel tracks, you can tag each channel layout manually. For example, you would tag the tracks that contain your left, right, and center audio with Left (L), Right (R), and Center (C), respectively. When you don&#39;t specify a value, MediaConvert labels your track as Center (C) by default. To use audio layout tagging, your output must be in a QuickTime (.mov) container; your audio codec must be AAC, WAV, or AIFF; and you must set up your audio track to have only one channel.
 */

#ifndef OAIAudioChannelTaggingSettings_H
#define OAIAudioChannelTaggingSettings_H

#include <QJsonObject>

#include "OAIAudioChannelTag.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudioChannelTaggingSettings : public OAIObject {
public:
    OAIAudioChannelTaggingSettings();
    OAIAudioChannelTaggingSettings(QString json);
    ~OAIAudioChannelTaggingSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAudioChannelTag getChannelTag() const;
    void setChannelTag(const OAIAudioChannelTag &channel_tag);
    bool is_channel_tag_Set() const;
    bool is_channel_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAudioChannelTag m_channel_tag;
    bool m_channel_tag_isSet;
    bool m_channel_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioChannelTaggingSettings)

#endif // OAIAudioChannelTaggingSettings_H
