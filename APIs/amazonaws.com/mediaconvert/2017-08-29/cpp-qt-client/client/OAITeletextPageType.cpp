/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeletextPageType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeletextPageType::OAITeletextPageType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeletextPageType::OAITeletextPageType() {
    this->initializeModel();
}

OAITeletextPageType::~OAITeletextPageType() {}

void OAITeletextPageType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITeletextPageType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITeletextPageType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PAGE_TYPE_INITIAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeletextPageType::INITIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAGE_TYPE_SUBTITLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeletextPageType::SUBTITLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAGE_TYPE_ADDL_INFO", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeletextPageType::ADDL_INFO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAGE_TYPE_PROGRAM_SCHEDULE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeletextPageType::PROGRAM_SCHEDULE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeletextPageType::HEARING_IMPAIRED_SUBTITLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITeletextPageType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITeletextPageType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITeletextPageType::INITIAL:
            val = "PAGE_TYPE_INITIAL";
            break;
        case eOAITeletextPageType::SUBTITLE:
            val = "PAGE_TYPE_SUBTITLE";
            break;
        case eOAITeletextPageType::ADDL_INFO:
            val = "PAGE_TYPE_ADDL_INFO";
            break;
        case eOAITeletextPageType::PROGRAM_SCHEDULE:
            val = "PAGE_TYPE_PROGRAM_SCHEDULE";
            break;
        case eOAITeletextPageType::HEARING_IMPAIRED_SUBTITLE:
            val = "PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITeletextPageType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITeletextPageType::eOAITeletextPageType OAITeletextPageType::getValue() const {
    return m_value;
}

void OAITeletextPageType::setValue(const OAITeletextPageType::eOAITeletextPageType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITeletextPageType::isSet() const {
    
    return m_value_isSet;
}

bool OAITeletextPageType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
