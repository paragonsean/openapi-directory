/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINielsenSourceWatermarkStatusType.h
 *
 * Required. Specify whether your source content already contains Nielsen non-linear watermarks. When you set this value to Watermarked, the service fails the job. Nielsen requires that you add non-linear watermarking to only clean content that doesn&#39;t already have non-linear Nielsen watermarks.
 */

#ifndef OAINielsenSourceWatermarkStatusType_H
#define OAINielsenSourceWatermarkStatusType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINielsenSourceWatermarkStatusType : public OAIEnum {
public:
    OAINielsenSourceWatermarkStatusType();
    OAINielsenSourceWatermarkStatusType(QString json);
    ~OAINielsenSourceWatermarkStatusType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAINielsenSourceWatermarkStatusType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        CLEAN, 
        WATERMARKED
    };
    OAINielsenSourceWatermarkStatusType::eOAINielsenSourceWatermarkStatusType getValue() const;
    void setValue(const OAINielsenSourceWatermarkStatusType::eOAINielsenSourceWatermarkStatusType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAINielsenSourceWatermarkStatusType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINielsenSourceWatermarkStatusType)

#endif // OAINielsenSourceWatermarkStatusType_H
