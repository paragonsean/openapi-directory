/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputClipping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputClipping::OAIInputClipping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputClipping::OAIInputClipping() {
    this->initializeModel();
}

OAIInputClipping::~OAIInputClipping() {}

void OAIInputClipping::initializeModel() {

    m_end_timecode_isSet = false;
    m_end_timecode_isValid = false;

    m_start_timecode_isSet = false;
    m_start_timecode_isValid = false;
}

void OAIInputClipping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputClipping::fromJsonObject(QJsonObject json) {

    m_end_timecode_isValid = ::OpenAPI::fromJsonValue(m_end_timecode, json[QString("EndTimecode")]);
    m_end_timecode_isSet = !json[QString("EndTimecode")].isNull() && m_end_timecode_isValid;

    m_start_timecode_isValid = ::OpenAPI::fromJsonValue(m_start_timecode, json[QString("StartTimecode")]);
    m_start_timecode_isSet = !json[QString("StartTimecode")].isNull() && m_start_timecode_isValid;
}

QString OAIInputClipping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputClipping::asJsonObject() const {
    QJsonObject obj;
    if (m_end_timecode_isSet) {
        obj.insert(QString("EndTimecode"), ::OpenAPI::toJsonValue(m_end_timecode));
    }
    if (m_start_timecode_isSet) {
        obj.insert(QString("StartTimecode"), ::OpenAPI::toJsonValue(m_start_timecode));
    }
    return obj;
}

QString OAIInputClipping::getEndTimecode() const {
    return m_end_timecode;
}
void OAIInputClipping::setEndTimecode(const QString &end_timecode) {
    m_end_timecode = end_timecode;
    m_end_timecode_isSet = true;
}

bool OAIInputClipping::is_end_timecode_Set() const{
    return m_end_timecode_isSet;
}

bool OAIInputClipping::is_end_timecode_Valid() const{
    return m_end_timecode_isValid;
}

QString OAIInputClipping::getStartTimecode() const {
    return m_start_timecode;
}
void OAIInputClipping::setStartTimecode(const QString &start_timecode) {
    m_start_timecode = start_timecode;
    m_start_timecode_isSet = true;
}

bool OAIInputClipping::is_start_timecode_Set() const{
    return m_start_timecode_isSet;
}

bool OAIInputClipping::is_start_timecode_Valid() const{
    return m_start_timecode_isValid;
}

bool OAIInputClipping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_timecode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_timecode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputClipping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
