/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudioSelectorGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudioSelectorGroup::OAIAudioSelectorGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudioSelectorGroup::OAIAudioSelectorGroup() {
    this->initializeModel();
}

OAIAudioSelectorGroup::~OAIAudioSelectorGroup() {}

void OAIAudioSelectorGroup::initializeModel() {

    m_audio_selector_names_isSet = false;
    m_audio_selector_names_isValid = false;
}

void OAIAudioSelectorGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAudioSelectorGroup::fromJsonObject(QJsonObject json) {

    m_audio_selector_names_isValid = ::OpenAPI::fromJsonValue(m_audio_selector_names, json[QString("AudioSelectorNames")]);
    m_audio_selector_names_isSet = !json[QString("AudioSelectorNames")].isNull() && m_audio_selector_names_isValid;
}

QString OAIAudioSelectorGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAudioSelectorGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_selector_names.isSet()) {
        obj.insert(QString("AudioSelectorNames"), ::OpenAPI::toJsonValue(m_audio_selector_names));
    }
    return obj;
}

QList OAIAudioSelectorGroup::getAudioSelectorNames() const {
    return m_audio_selector_names;
}
void OAIAudioSelectorGroup::setAudioSelectorNames(const QList &audio_selector_names) {
    m_audio_selector_names = audio_selector_names;
    m_audio_selector_names_isSet = true;
}

bool OAIAudioSelectorGroup::is_audio_selector_names_Set() const{
    return m_audio_selector_names_isSet;
}

bool OAIAudioSelectorGroup::is_audio_selector_names_Valid() const{
    return m_audio_selector_names_isValid;
}

bool OAIAudioSelectorGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_selector_names.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAudioSelectorGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
