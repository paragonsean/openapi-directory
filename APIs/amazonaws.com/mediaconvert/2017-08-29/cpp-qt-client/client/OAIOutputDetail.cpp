/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputDetail::OAIOutputDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputDetail::OAIOutputDetail() {
    this->initializeModel();
}

OAIOutputDetail::~OAIOutputDetail() {}

void OAIOutputDetail::initializeModel() {

    m_duration_in_ms_isSet = false;
    m_duration_in_ms_isValid = false;

    m_video_details_isSet = false;
    m_video_details_isValid = false;
}

void OAIOutputDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputDetail::fromJsonObject(QJsonObject json) {

    m_duration_in_ms_isValid = ::OpenAPI::fromJsonValue(m_duration_in_ms, json[QString("DurationInMs")]);
    m_duration_in_ms_isSet = !json[QString("DurationInMs")].isNull() && m_duration_in_ms_isValid;

    m_video_details_isValid = ::OpenAPI::fromJsonValue(m_video_details, json[QString("VideoDetails")]);
    m_video_details_isSet = !json[QString("VideoDetails")].isNull() && m_video_details_isValid;
}

QString OAIOutputDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_in_ms_isSet) {
        obj.insert(QString("DurationInMs"), ::OpenAPI::toJsonValue(m_duration_in_ms));
    }
    if (m_video_details.isSet()) {
        obj.insert(QString("VideoDetails"), ::OpenAPI::toJsonValue(m_video_details));
    }
    return obj;
}

qint32 OAIOutputDetail::getDurationInMs() const {
    return m_duration_in_ms;
}
void OAIOutputDetail::setDurationInMs(const qint32 &duration_in_ms) {
    m_duration_in_ms = duration_in_ms;
    m_duration_in_ms_isSet = true;
}

bool OAIOutputDetail::is_duration_in_ms_Set() const{
    return m_duration_in_ms_isSet;
}

bool OAIOutputDetail::is_duration_in_ms_Valid() const{
    return m_duration_in_ms_isValid;
}

OAIOutputDetail_VideoDetails OAIOutputDetail::getVideoDetails() const {
    return m_video_details;
}
void OAIOutputDetail::setVideoDetails(const OAIOutputDetail_VideoDetails &video_details) {
    m_video_details = video_details;
    m_video_details_isSet = true;
}

bool OAIOutputDetail::is_video_details_Set() const{
    return m_video_details_isSet;
}

bool OAIOutputDetail::is_video_details_Valid() const{
    return m_video_details_isValid;
}

bool OAIOutputDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_in_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
