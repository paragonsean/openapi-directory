/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputGroup::OAIOutputGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputGroup::OAIOutputGroup() {
    this->initializeModel();
}

OAIOutputGroup::~OAIOutputGroup() {}

void OAIOutputGroup::initializeModel() {

    m_automated_encoding_settings_isSet = false;
    m_automated_encoding_settings_isValid = false;

    m_custom_name_isSet = false;
    m_custom_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_output_group_settings_isSet = false;
    m_output_group_settings_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;
}

void OAIOutputGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputGroup::fromJsonObject(QJsonObject json) {

    m_automated_encoding_settings_isValid = ::OpenAPI::fromJsonValue(m_automated_encoding_settings, json[QString("AutomatedEncodingSettings")]);
    m_automated_encoding_settings_isSet = !json[QString("AutomatedEncodingSettings")].isNull() && m_automated_encoding_settings_isValid;

    m_custom_name_isValid = ::OpenAPI::fromJsonValue(m_custom_name, json[QString("CustomName")]);
    m_custom_name_isSet = !json[QString("CustomName")].isNull() && m_custom_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_output_group_settings_isValid = ::OpenAPI::fromJsonValue(m_output_group_settings, json[QString("OutputGroupSettings")]);
    m_output_group_settings_isSet = !json[QString("OutputGroupSettings")].isNull() && m_output_group_settings_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("Outputs")]);
    m_outputs_isSet = !json[QString("Outputs")].isNull() && m_outputs_isValid;
}

QString OAIOutputGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_automated_encoding_settings.isSet()) {
        obj.insert(QString("AutomatedEncodingSettings"), ::OpenAPI::toJsonValue(m_automated_encoding_settings));
    }
    if (m_custom_name_isSet) {
        obj.insert(QString("CustomName"), ::OpenAPI::toJsonValue(m_custom_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_output_group_settings.isSet()) {
        obj.insert(QString("OutputGroupSettings"), ::OpenAPI::toJsonValue(m_output_group_settings));
    }
    if (m_outputs.isSet()) {
        obj.insert(QString("Outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    return obj;
}

OAIOutputGroup_AutomatedEncodingSettings OAIOutputGroup::getAutomatedEncodingSettings() const {
    return m_automated_encoding_settings;
}
void OAIOutputGroup::setAutomatedEncodingSettings(const OAIOutputGroup_AutomatedEncodingSettings &automated_encoding_settings) {
    m_automated_encoding_settings = automated_encoding_settings;
    m_automated_encoding_settings_isSet = true;
}

bool OAIOutputGroup::is_automated_encoding_settings_Set() const{
    return m_automated_encoding_settings_isSet;
}

bool OAIOutputGroup::is_automated_encoding_settings_Valid() const{
    return m_automated_encoding_settings_isValid;
}

QString OAIOutputGroup::getCustomName() const {
    return m_custom_name;
}
void OAIOutputGroup::setCustomName(const QString &custom_name) {
    m_custom_name = custom_name;
    m_custom_name_isSet = true;
}

bool OAIOutputGroup::is_custom_name_Set() const{
    return m_custom_name_isSet;
}

bool OAIOutputGroup::is_custom_name_Valid() const{
    return m_custom_name_isValid;
}

QString OAIOutputGroup::getName() const {
    return m_name;
}
void OAIOutputGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIOutputGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIOutputGroup::is_name_Valid() const{
    return m_name_isValid;
}

OAIOutputGroup_OutputGroupSettings OAIOutputGroup::getOutputGroupSettings() const {
    return m_output_group_settings;
}
void OAIOutputGroup::setOutputGroupSettings(const OAIOutputGroup_OutputGroupSettings &output_group_settings) {
    m_output_group_settings = output_group_settings;
    m_output_group_settings_isSet = true;
}

bool OAIOutputGroup::is_output_group_settings_Set() const{
    return m_output_group_settings_isSet;
}

bool OAIOutputGroup::is_output_group_settings_Valid() const{
    return m_output_group_settings_isValid;
}

QList OAIOutputGroup::getOutputs() const {
    return m_outputs;
}
void OAIOutputGroup::setOutputs(const QList &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAIOutputGroup::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAIOutputGroup::is_outputs_Valid() const{
    return m_outputs_isValid;
}

bool OAIOutputGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automated_encoding_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_group_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
