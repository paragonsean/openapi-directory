/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMsSmoothGroupSettings.h
 *
 * Settings related to your Microsoft Smooth Streaming output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html.
 */

#ifndef OAIMsSmoothGroupSettings_H
#define OAIMsSmoothGroupSettings_H

#include <QJsonObject>

#include "OAICmafGroupSettings_DestinationSettings.h"
#include "OAIMsSmoothAudioDeduplication.h"
#include "OAIMsSmoothFragmentLengthControl.h"
#include "OAIMsSmoothGroupSettings_Encryption.h"
#include "OAIMsSmoothManifestEncoding.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICmafGroupSettings_DestinationSettings;
class OAIMsSmoothGroupSettings_Encryption;

class OAIMsSmoothGroupSettings : public OAIObject {
public:
    OAIMsSmoothGroupSettings();
    OAIMsSmoothGroupSettings(QString json);
    ~OAIMsSmoothGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdditionalManifests() const;
    void setAdditionalManifests(const QList &additional_manifests);
    bool is_additional_manifests_Set() const;
    bool is_additional_manifests_Valid() const;

    OAIMsSmoothAudioDeduplication getAudioDeduplication() const;
    void setAudioDeduplication(const OAIMsSmoothAudioDeduplication &audio_deduplication);
    bool is_audio_deduplication_Set() const;
    bool is_audio_deduplication_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAICmafGroupSettings_DestinationSettings getDestinationSettings() const;
    void setDestinationSettings(const OAICmafGroupSettings_DestinationSettings &destination_settings);
    bool is_destination_settings_Set() const;
    bool is_destination_settings_Valid() const;

    OAIMsSmoothGroupSettings_Encryption getEncryption() const;
    void setEncryption(const OAIMsSmoothGroupSettings_Encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    qint32 getFragmentLength() const;
    void setFragmentLength(const qint32 &fragment_length);
    bool is_fragment_length_Set() const;
    bool is_fragment_length_Valid() const;

    OAIMsSmoothFragmentLengthControl getFragmentLengthControl() const;
    void setFragmentLengthControl(const OAIMsSmoothFragmentLengthControl &fragment_length_control);
    bool is_fragment_length_control_Set() const;
    bool is_fragment_length_control_Valid() const;

    OAIMsSmoothManifestEncoding getManifestEncoding() const;
    void setManifestEncoding(const OAIMsSmoothManifestEncoding &manifest_encoding);
    bool is_manifest_encoding_Set() const;
    bool is_manifest_encoding_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_additional_manifests;
    bool m_additional_manifests_isSet;
    bool m_additional_manifests_isValid;

    OAIMsSmoothAudioDeduplication m_audio_deduplication;
    bool m_audio_deduplication_isSet;
    bool m_audio_deduplication_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAICmafGroupSettings_DestinationSettings m_destination_settings;
    bool m_destination_settings_isSet;
    bool m_destination_settings_isValid;

    OAIMsSmoothGroupSettings_Encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    qint32 m_fragment_length;
    bool m_fragment_length_isSet;
    bool m_fragment_length_isValid;

    OAIMsSmoothFragmentLengthControl m_fragment_length_control;
    bool m_fragment_length_control_isSet;
    bool m_fragment_length_control_isValid;

    OAIMsSmoothManifestEncoding m_manifest_encoding;
    bool m_manifest_encoding_isSet;
    bool m_manifest_encoding_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMsSmoothGroupSettings)

#endif // OAIMsSmoothGroupSettings_H
