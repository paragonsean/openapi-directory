/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICmafGroupSettings.h
 *
 * Settings related to your CMAF output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html.
 */

#ifndef OAICmafGroupSettings_H
#define OAICmafGroupSettings_H

#include <QJsonObject>

#include "OAICmafClientCache.h"
#include "OAICmafCodecSpecification.h"
#include "OAICmafGroupSettings_DestinationSettings.h"
#include "OAICmafGroupSettings_Encryption.h"
#include "OAICmafGroupSettings_ImageBasedTrickPlaySettings.h"
#include "OAICmafImageBasedTrickPlay.h"
#include "OAICmafManifestCompression.h"
#include "OAICmafManifestDurationFormat.h"
#include "OAICmafMpdManifestBandwidthType.h"
#include "OAICmafMpdProfile.h"
#include "OAICmafPtsOffsetHandlingForBFrames.h"
#include "OAICmafSegmentControl.h"
#include "OAICmafSegmentLengthControl.h"
#include "OAICmafStreamInfResolution.h"
#include "OAICmafTargetDurationCompatibilityMode.h"
#include "OAICmafVideoCompositionOffsets.h"
#include "OAICmafWriteDASHManifest.h"
#include "OAICmafWriteHLSManifest.h"
#include "OAICmafWriteSegmentTimelineInRepresentation.h"
#include "OAIDashManifestStyle.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICmafGroupSettings_DestinationSettings;
class OAICmafGroupSettings_Encryption;
class OAICmafGroupSettings_ImageBasedTrickPlaySettings;

class OAICmafGroupSettings : public OAIObject {
public:
    OAICmafGroupSettings();
    OAICmafGroupSettings(QString json);
    ~OAICmafGroupSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdditionalManifests() const;
    void setAdditionalManifests(const QList &additional_manifests);
    bool is_additional_manifests_Set() const;
    bool is_additional_manifests_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    OAICmafClientCache getClientCache() const;
    void setClientCache(const OAICmafClientCache &client_cache);
    bool is_client_cache_Set() const;
    bool is_client_cache_Valid() const;

    OAICmafCodecSpecification getCodecSpecification() const;
    void setCodecSpecification(const OAICmafCodecSpecification &codec_specification);
    bool is_codec_specification_Set() const;
    bool is_codec_specification_Valid() const;

    OAIDashManifestStyle getDashManifestStyle() const;
    void setDashManifestStyle(const OAIDashManifestStyle &dash_manifest_style);
    bool is_dash_manifest_style_Set() const;
    bool is_dash_manifest_style_Valid() const;

    QString getDestination() const;
    void setDestination(const QString &destination);
    bool is_destination_Set() const;
    bool is_destination_Valid() const;

    OAICmafGroupSettings_DestinationSettings getDestinationSettings() const;
    void setDestinationSettings(const OAICmafGroupSettings_DestinationSettings &destination_settings);
    bool is_destination_settings_Set() const;
    bool is_destination_settings_Valid() const;

    OAICmafGroupSettings_Encryption getEncryption() const;
    void setEncryption(const OAICmafGroupSettings_Encryption &encryption);
    bool is_encryption_Set() const;
    bool is_encryption_Valid() const;

    qint32 getFragmentLength() const;
    void setFragmentLength(const qint32 &fragment_length);
    bool is_fragment_length_Set() const;
    bool is_fragment_length_Valid() const;

    OAICmafImageBasedTrickPlay getImageBasedTrickPlay() const;
    void setImageBasedTrickPlay(const OAICmafImageBasedTrickPlay &image_based_trick_play);
    bool is_image_based_trick_play_Set() const;
    bool is_image_based_trick_play_Valid() const;

    OAICmafGroupSettings_ImageBasedTrickPlaySettings getImageBasedTrickPlaySettings() const;
    void setImageBasedTrickPlaySettings(const OAICmafGroupSettings_ImageBasedTrickPlaySettings &image_based_trick_play_settings);
    bool is_image_based_trick_play_settings_Set() const;
    bool is_image_based_trick_play_settings_Valid() const;

    OAICmafManifestCompression getManifestCompression() const;
    void setManifestCompression(const OAICmafManifestCompression &manifest_compression);
    bool is_manifest_compression_Set() const;
    bool is_manifest_compression_Valid() const;

    OAICmafManifestDurationFormat getManifestDurationFormat() const;
    void setManifestDurationFormat(const OAICmafManifestDurationFormat &manifest_duration_format);
    bool is_manifest_duration_format_Set() const;
    bool is_manifest_duration_format_Valid() const;

    qint32 getMinBufferTime() const;
    void setMinBufferTime(const qint32 &min_buffer_time);
    bool is_min_buffer_time_Set() const;
    bool is_min_buffer_time_Valid() const;

    double getMinFinalSegmentLength() const;
    void setMinFinalSegmentLength(const double &min_final_segment_length);
    bool is_min_final_segment_length_Set() const;
    bool is_min_final_segment_length_Valid() const;

    OAICmafMpdManifestBandwidthType getMpdManifestBandwidthType() const;
    void setMpdManifestBandwidthType(const OAICmafMpdManifestBandwidthType &mpd_manifest_bandwidth_type);
    bool is_mpd_manifest_bandwidth_type_Set() const;
    bool is_mpd_manifest_bandwidth_type_Valid() const;

    OAICmafMpdProfile getMpdProfile() const;
    void setMpdProfile(const OAICmafMpdProfile &mpd_profile);
    bool is_mpd_profile_Set() const;
    bool is_mpd_profile_Valid() const;

    OAICmafPtsOffsetHandlingForBFrames getPtsOffsetHandlingForBFrames() const;
    void setPtsOffsetHandlingForBFrames(const OAICmafPtsOffsetHandlingForBFrames &pts_offset_handling_for_b_frames);
    bool is_pts_offset_handling_for_b_frames_Set() const;
    bool is_pts_offset_handling_for_b_frames_Valid() const;

    OAICmafSegmentControl getSegmentControl() const;
    void setSegmentControl(const OAICmafSegmentControl &segment_control);
    bool is_segment_control_Set() const;
    bool is_segment_control_Valid() const;

    qint32 getSegmentLength() const;
    void setSegmentLength(const qint32 &segment_length);
    bool is_segment_length_Set() const;
    bool is_segment_length_Valid() const;

    OAICmafSegmentLengthControl getSegmentLengthControl() const;
    void setSegmentLengthControl(const OAICmafSegmentLengthControl &segment_length_control);
    bool is_segment_length_control_Set() const;
    bool is_segment_length_control_Valid() const;

    OAICmafStreamInfResolution getStreamInfResolution() const;
    void setStreamInfResolution(const OAICmafStreamInfResolution &stream_inf_resolution);
    bool is_stream_inf_resolution_Set() const;
    bool is_stream_inf_resolution_Valid() const;

    OAICmafTargetDurationCompatibilityMode getTargetDurationCompatibilityMode() const;
    void setTargetDurationCompatibilityMode(const OAICmafTargetDurationCompatibilityMode &target_duration_compatibility_mode);
    bool is_target_duration_compatibility_mode_Set() const;
    bool is_target_duration_compatibility_mode_Valid() const;

    OAICmafVideoCompositionOffsets getVideoCompositionOffsets() const;
    void setVideoCompositionOffsets(const OAICmafVideoCompositionOffsets &video_composition_offsets);
    bool is_video_composition_offsets_Set() const;
    bool is_video_composition_offsets_Valid() const;

    OAICmafWriteDASHManifest getWriteDashManifest() const;
    void setWriteDashManifest(const OAICmafWriteDASHManifest &write_dash_manifest);
    bool is_write_dash_manifest_Set() const;
    bool is_write_dash_manifest_Valid() const;

    OAICmafWriteHLSManifest getWriteHlsManifest() const;
    void setWriteHlsManifest(const OAICmafWriteHLSManifest &write_hls_manifest);
    bool is_write_hls_manifest_Set() const;
    bool is_write_hls_manifest_Valid() const;

    OAICmafWriteSegmentTimelineInRepresentation getWriteSegmentTimelineInRepresentation() const;
    void setWriteSegmentTimelineInRepresentation(const OAICmafWriteSegmentTimelineInRepresentation &write_segment_timeline_in_representation);
    bool is_write_segment_timeline_in_representation_Set() const;
    bool is_write_segment_timeline_in_representation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_additional_manifests;
    bool m_additional_manifests_isSet;
    bool m_additional_manifests_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    OAICmafClientCache m_client_cache;
    bool m_client_cache_isSet;
    bool m_client_cache_isValid;

    OAICmafCodecSpecification m_codec_specification;
    bool m_codec_specification_isSet;
    bool m_codec_specification_isValid;

    OAIDashManifestStyle m_dash_manifest_style;
    bool m_dash_manifest_style_isSet;
    bool m_dash_manifest_style_isValid;

    QString m_destination;
    bool m_destination_isSet;
    bool m_destination_isValid;

    OAICmafGroupSettings_DestinationSettings m_destination_settings;
    bool m_destination_settings_isSet;
    bool m_destination_settings_isValid;

    OAICmafGroupSettings_Encryption m_encryption;
    bool m_encryption_isSet;
    bool m_encryption_isValid;

    qint32 m_fragment_length;
    bool m_fragment_length_isSet;
    bool m_fragment_length_isValid;

    OAICmafImageBasedTrickPlay m_image_based_trick_play;
    bool m_image_based_trick_play_isSet;
    bool m_image_based_trick_play_isValid;

    OAICmafGroupSettings_ImageBasedTrickPlaySettings m_image_based_trick_play_settings;
    bool m_image_based_trick_play_settings_isSet;
    bool m_image_based_trick_play_settings_isValid;

    OAICmafManifestCompression m_manifest_compression;
    bool m_manifest_compression_isSet;
    bool m_manifest_compression_isValid;

    OAICmafManifestDurationFormat m_manifest_duration_format;
    bool m_manifest_duration_format_isSet;
    bool m_manifest_duration_format_isValid;

    qint32 m_min_buffer_time;
    bool m_min_buffer_time_isSet;
    bool m_min_buffer_time_isValid;

    double m_min_final_segment_length;
    bool m_min_final_segment_length_isSet;
    bool m_min_final_segment_length_isValid;

    OAICmafMpdManifestBandwidthType m_mpd_manifest_bandwidth_type;
    bool m_mpd_manifest_bandwidth_type_isSet;
    bool m_mpd_manifest_bandwidth_type_isValid;

    OAICmafMpdProfile m_mpd_profile;
    bool m_mpd_profile_isSet;
    bool m_mpd_profile_isValid;

    OAICmafPtsOffsetHandlingForBFrames m_pts_offset_handling_for_b_frames;
    bool m_pts_offset_handling_for_b_frames_isSet;
    bool m_pts_offset_handling_for_b_frames_isValid;

    OAICmafSegmentControl m_segment_control;
    bool m_segment_control_isSet;
    bool m_segment_control_isValid;

    qint32 m_segment_length;
    bool m_segment_length_isSet;
    bool m_segment_length_isValid;

    OAICmafSegmentLengthControl m_segment_length_control;
    bool m_segment_length_control_isSet;
    bool m_segment_length_control_isValid;

    OAICmafStreamInfResolution m_stream_inf_resolution;
    bool m_stream_inf_resolution_isSet;
    bool m_stream_inf_resolution_isValid;

    OAICmafTargetDurationCompatibilityMode m_target_duration_compatibility_mode;
    bool m_target_duration_compatibility_mode_isSet;
    bool m_target_duration_compatibility_mode_isValid;

    OAICmafVideoCompositionOffsets m_video_composition_offsets;
    bool m_video_composition_offsets_isSet;
    bool m_video_composition_offsets_isValid;

    OAICmafWriteDASHManifest m_write_dash_manifest;
    bool m_write_dash_manifest_isSet;
    bool m_write_dash_manifest_isValid;

    OAICmafWriteHLSManifest m_write_hls_manifest;
    bool m_write_hls_manifest_isSet;
    bool m_write_hls_manifest_isValid;

    OAICmafWriteSegmentTimelineInRepresentation m_write_segment_timeline_in_representation;
    bool m_write_segment_timeline_in_representation_isSet;
    bool m_write_segment_timeline_in_representation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICmafGroupSettings)

#endif // OAICmafGroupSettings_H
