/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobTemplate.h
 *
 * A job template is a pre-made set of encoding instructions that you can use to quickly create a job.
 */

#ifndef OAIJobTemplate_H
#define OAIJobTemplate_H

#include <QJsonObject>

#include "OAICreateJobTemplateRequest_Settings.h"
#include "OAIJob_AccelerationSettings.h"
#include "OAIStatusUpdateInterval.h"
#include "OAIType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJob_AccelerationSettings;
class OAICreateJobTemplateRequest_Settings;

class OAIJobTemplate : public OAIObject {
public:
    OAIJobTemplate();
    OAIJobTemplate(QString json);
    ~OAIJobTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIJob_AccelerationSettings getAccelerationSettings() const;
    void setAccelerationSettings(const OAIJob_AccelerationSettings &acceleration_settings);
    bool is_acceleration_settings_Set() const;
    bool is_acceleration_settings_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getHopDestinations() const;
    void setHopDestinations(const QList &hop_destinations);
    bool is_hop_destinations_Set() const;
    bool is_hop_destinations_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getQueue() const;
    void setQueue(const QString &queue);
    bool is_queue_Set() const;
    bool is_queue_Valid() const;

    OAICreateJobTemplateRequest_Settings getSettings() const;
    void setSettings(const OAICreateJobTemplateRequest_Settings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    OAIStatusUpdateInterval getStatusUpdateInterval() const;
    void setStatusUpdateInterval(const OAIStatusUpdateInterval &status_update_interval);
    bool is_status_update_interval_Set() const;
    bool is_status_update_interval_Valid() const;

    OAIType getType() const;
    void setType(const OAIType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIJob_AccelerationSettings m_acceleration_settings;
    bool m_acceleration_settings_isSet;
    bool m_acceleration_settings_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_hop_destinations;
    bool m_hop_destinations_isSet;
    bool m_hop_destinations_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_queue;
    bool m_queue_isSet;
    bool m_queue_isValid;

    OAICreateJobTemplateRequest_Settings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    OAIStatusUpdateInterval m_status_update_interval;
    bool m_status_update_interval_isSet;
    bool m_status_update_interval_isValid;

    OAIType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobTemplate)

#endif // OAIJobTemplate_H
