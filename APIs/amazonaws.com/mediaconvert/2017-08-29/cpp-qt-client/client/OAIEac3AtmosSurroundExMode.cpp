/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEac3AtmosSurroundExMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEac3AtmosSurroundExMode::OAIEac3AtmosSurroundExMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEac3AtmosSurroundExMode::OAIEac3AtmosSurroundExMode() {
    this->initializeModel();
}

OAIEac3AtmosSurroundExMode::~OAIEac3AtmosSurroundExMode() {}

void OAIEac3AtmosSurroundExMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEac3AtmosSurroundExMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEac3AtmosSurroundExMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NOT_INDICATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3AtmosSurroundExMode::NOT_INDICATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ENABLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3AtmosSurroundExMode::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISABLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEac3AtmosSurroundExMode::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEac3AtmosSurroundExMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEac3AtmosSurroundExMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEac3AtmosSurroundExMode::NOT_INDICATED:
            val = "NOT_INDICATED";
            break;
        case eOAIEac3AtmosSurroundExMode::ENABLED:
            val = "ENABLED";
            break;
        case eOAIEac3AtmosSurroundExMode::DISABLED:
            val = "DISABLED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEac3AtmosSurroundExMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEac3AtmosSurroundExMode::eOAIEac3AtmosSurroundExMode OAIEac3AtmosSurroundExMode::getValue() const {
    return m_value;
}

void OAIEac3AtmosSurroundExMode::setValue(const OAIEac3AtmosSurroundExMode::eOAIEac3AtmosSurroundExMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEac3AtmosSurroundExMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIEac3AtmosSurroundExMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
