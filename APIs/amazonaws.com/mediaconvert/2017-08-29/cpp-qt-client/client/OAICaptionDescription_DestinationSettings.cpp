/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICaptionDescription_DestinationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICaptionDescription_DestinationSettings::OAICaptionDescription_DestinationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICaptionDescription_DestinationSettings::OAICaptionDescription_DestinationSettings() {
    this->initializeModel();
}

OAICaptionDescription_DestinationSettings::~OAICaptionDescription_DestinationSettings() {}

void OAICaptionDescription_DestinationSettings::initializeModel() {

    m_burnin_destination_settings_isSet = false;
    m_burnin_destination_settings_isValid = false;

    m_destination_type_isSet = false;
    m_destination_type_isValid = false;

    m_dvb_sub_destination_settings_isSet = false;
    m_dvb_sub_destination_settings_isValid = false;

    m_embedded_destination_settings_isSet = false;
    m_embedded_destination_settings_isValid = false;

    m_imsc_destination_settings_isSet = false;
    m_imsc_destination_settings_isValid = false;

    m_scc_destination_settings_isSet = false;
    m_scc_destination_settings_isValid = false;

    m_srt_destination_settings_isSet = false;
    m_srt_destination_settings_isValid = false;

    m_teletext_destination_settings_isSet = false;
    m_teletext_destination_settings_isValid = false;

    m_ttml_destination_settings_isSet = false;
    m_ttml_destination_settings_isValid = false;

    m_webvtt_destination_settings_isSet = false;
    m_webvtt_destination_settings_isValid = false;
}

void OAICaptionDescription_DestinationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICaptionDescription_DestinationSettings::fromJsonObject(QJsonObject json) {

    m_burnin_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_burnin_destination_settings, json[QString("BurninDestinationSettings")]);
    m_burnin_destination_settings_isSet = !json[QString("BurninDestinationSettings")].isNull() && m_burnin_destination_settings_isValid;

    m_destination_type_isValid = ::OpenAPI::fromJsonValue(m_destination_type, json[QString("DestinationType")]);
    m_destination_type_isSet = !json[QString("DestinationType")].isNull() && m_destination_type_isValid;

    m_dvb_sub_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_dvb_sub_destination_settings, json[QString("DvbSubDestinationSettings")]);
    m_dvb_sub_destination_settings_isSet = !json[QString("DvbSubDestinationSettings")].isNull() && m_dvb_sub_destination_settings_isValid;

    m_embedded_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_embedded_destination_settings, json[QString("EmbeddedDestinationSettings")]);
    m_embedded_destination_settings_isSet = !json[QString("EmbeddedDestinationSettings")].isNull() && m_embedded_destination_settings_isValid;

    m_imsc_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_imsc_destination_settings, json[QString("ImscDestinationSettings")]);
    m_imsc_destination_settings_isSet = !json[QString("ImscDestinationSettings")].isNull() && m_imsc_destination_settings_isValid;

    m_scc_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_scc_destination_settings, json[QString("SccDestinationSettings")]);
    m_scc_destination_settings_isSet = !json[QString("SccDestinationSettings")].isNull() && m_scc_destination_settings_isValid;

    m_srt_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_srt_destination_settings, json[QString("SrtDestinationSettings")]);
    m_srt_destination_settings_isSet = !json[QString("SrtDestinationSettings")].isNull() && m_srt_destination_settings_isValid;

    m_teletext_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_teletext_destination_settings, json[QString("TeletextDestinationSettings")]);
    m_teletext_destination_settings_isSet = !json[QString("TeletextDestinationSettings")].isNull() && m_teletext_destination_settings_isValid;

    m_ttml_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_ttml_destination_settings, json[QString("TtmlDestinationSettings")]);
    m_ttml_destination_settings_isSet = !json[QString("TtmlDestinationSettings")].isNull() && m_ttml_destination_settings_isValid;

    m_webvtt_destination_settings_isValid = ::OpenAPI::fromJsonValue(m_webvtt_destination_settings, json[QString("WebvttDestinationSettings")]);
    m_webvtt_destination_settings_isSet = !json[QString("WebvttDestinationSettings")].isNull() && m_webvtt_destination_settings_isValid;
}

QString OAICaptionDescription_DestinationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICaptionDescription_DestinationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_burnin_destination_settings.isSet()) {
        obj.insert(QString("BurninDestinationSettings"), ::OpenAPI::toJsonValue(m_burnin_destination_settings));
    }
    if (m_destination_type.isSet()) {
        obj.insert(QString("DestinationType"), ::OpenAPI::toJsonValue(m_destination_type));
    }
    if (m_dvb_sub_destination_settings.isSet()) {
        obj.insert(QString("DvbSubDestinationSettings"), ::OpenAPI::toJsonValue(m_dvb_sub_destination_settings));
    }
    if (m_embedded_destination_settings.isSet()) {
        obj.insert(QString("EmbeddedDestinationSettings"), ::OpenAPI::toJsonValue(m_embedded_destination_settings));
    }
    if (m_imsc_destination_settings.isSet()) {
        obj.insert(QString("ImscDestinationSettings"), ::OpenAPI::toJsonValue(m_imsc_destination_settings));
    }
    if (m_scc_destination_settings.isSet()) {
        obj.insert(QString("SccDestinationSettings"), ::OpenAPI::toJsonValue(m_scc_destination_settings));
    }
    if (m_srt_destination_settings.isSet()) {
        obj.insert(QString("SrtDestinationSettings"), ::OpenAPI::toJsonValue(m_srt_destination_settings));
    }
    if (m_teletext_destination_settings.isSet()) {
        obj.insert(QString("TeletextDestinationSettings"), ::OpenAPI::toJsonValue(m_teletext_destination_settings));
    }
    if (m_ttml_destination_settings.isSet()) {
        obj.insert(QString("TtmlDestinationSettings"), ::OpenAPI::toJsonValue(m_ttml_destination_settings));
    }
    if (m_webvtt_destination_settings.isSet()) {
        obj.insert(QString("WebvttDestinationSettings"), ::OpenAPI::toJsonValue(m_webvtt_destination_settings));
    }
    return obj;
}

OAICaptionDestinationSettings_BurninDestinationSettings OAICaptionDescription_DestinationSettings::getBurninDestinationSettings() const {
    return m_burnin_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setBurninDestinationSettings(const OAICaptionDestinationSettings_BurninDestinationSettings &burnin_destination_settings) {
    m_burnin_destination_settings = burnin_destination_settings;
    m_burnin_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_burnin_destination_settings_Set() const{
    return m_burnin_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_burnin_destination_settings_Valid() const{
    return m_burnin_destination_settings_isValid;
}

OAICaptionDestinationType OAICaptionDescription_DestinationSettings::getDestinationType() const {
    return m_destination_type;
}
void OAICaptionDescription_DestinationSettings::setDestinationType(const OAICaptionDestinationType &destination_type) {
    m_destination_type = destination_type;
    m_destination_type_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_destination_type_Set() const{
    return m_destination_type_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_destination_type_Valid() const{
    return m_destination_type_isValid;
}

OAICaptionDestinationSettings_DvbSubDestinationSettings OAICaptionDescription_DestinationSettings::getDvbSubDestinationSettings() const {
    return m_dvb_sub_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setDvbSubDestinationSettings(const OAICaptionDestinationSettings_DvbSubDestinationSettings &dvb_sub_destination_settings) {
    m_dvb_sub_destination_settings = dvb_sub_destination_settings;
    m_dvb_sub_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_dvb_sub_destination_settings_Set() const{
    return m_dvb_sub_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_dvb_sub_destination_settings_Valid() const{
    return m_dvb_sub_destination_settings_isValid;
}

OAICaptionDestinationSettings_EmbeddedDestinationSettings OAICaptionDescription_DestinationSettings::getEmbeddedDestinationSettings() const {
    return m_embedded_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setEmbeddedDestinationSettings(const OAICaptionDestinationSettings_EmbeddedDestinationSettings &embedded_destination_settings) {
    m_embedded_destination_settings = embedded_destination_settings;
    m_embedded_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_destination_settings_Set() const{
    return m_embedded_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_embedded_destination_settings_Valid() const{
    return m_embedded_destination_settings_isValid;
}

OAICaptionDestinationSettings_ImscDestinationSettings OAICaptionDescription_DestinationSettings::getImscDestinationSettings() const {
    return m_imsc_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setImscDestinationSettings(const OAICaptionDestinationSettings_ImscDestinationSettings &imsc_destination_settings) {
    m_imsc_destination_settings = imsc_destination_settings;
    m_imsc_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_imsc_destination_settings_Set() const{
    return m_imsc_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_imsc_destination_settings_Valid() const{
    return m_imsc_destination_settings_isValid;
}

OAICaptionDestinationSettings_SccDestinationSettings OAICaptionDescription_DestinationSettings::getSccDestinationSettings() const {
    return m_scc_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setSccDestinationSettings(const OAICaptionDestinationSettings_SccDestinationSettings &scc_destination_settings) {
    m_scc_destination_settings = scc_destination_settings;
    m_scc_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_scc_destination_settings_Set() const{
    return m_scc_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_scc_destination_settings_Valid() const{
    return m_scc_destination_settings_isValid;
}

OAICaptionDestinationSettings_SrtDestinationSettings OAICaptionDescription_DestinationSettings::getSrtDestinationSettings() const {
    return m_srt_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setSrtDestinationSettings(const OAICaptionDestinationSettings_SrtDestinationSettings &srt_destination_settings) {
    m_srt_destination_settings = srt_destination_settings;
    m_srt_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_srt_destination_settings_Set() const{
    return m_srt_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_srt_destination_settings_Valid() const{
    return m_srt_destination_settings_isValid;
}

OAICaptionDestinationSettings_TeletextDestinationSettings OAICaptionDescription_DestinationSettings::getTeletextDestinationSettings() const {
    return m_teletext_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setTeletextDestinationSettings(const OAICaptionDestinationSettings_TeletextDestinationSettings &teletext_destination_settings) {
    m_teletext_destination_settings = teletext_destination_settings;
    m_teletext_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_teletext_destination_settings_Set() const{
    return m_teletext_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_teletext_destination_settings_Valid() const{
    return m_teletext_destination_settings_isValid;
}

OAICaptionDestinationSettings_TtmlDestinationSettings OAICaptionDescription_DestinationSettings::getTtmlDestinationSettings() const {
    return m_ttml_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setTtmlDestinationSettings(const OAICaptionDestinationSettings_TtmlDestinationSettings &ttml_destination_settings) {
    m_ttml_destination_settings = ttml_destination_settings;
    m_ttml_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_ttml_destination_settings_Set() const{
    return m_ttml_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_ttml_destination_settings_Valid() const{
    return m_ttml_destination_settings_isValid;
}

OAICaptionDestinationSettings_WebvttDestinationSettings OAICaptionDescription_DestinationSettings::getWebvttDestinationSettings() const {
    return m_webvtt_destination_settings;
}
void OAICaptionDescription_DestinationSettings::setWebvttDestinationSettings(const OAICaptionDestinationSettings_WebvttDestinationSettings &webvtt_destination_settings) {
    m_webvtt_destination_settings = webvtt_destination_settings;
    m_webvtt_destination_settings_isSet = true;
}

bool OAICaptionDescription_DestinationSettings::is_webvtt_destination_settings_Set() const{
    return m_webvtt_destination_settings_isSet;
}

bool OAICaptionDescription_DestinationSettings::is_webvtt_destination_settings_Valid() const{
    return m_webvtt_destination_settings_isValid;
}

bool OAICaptionDescription_DestinationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_burnin_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dvb_sub_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedded_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_imsc_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scc_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_srt_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_teletext_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttml_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webvtt_destination_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICaptionDescription_DestinationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
