/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutput.h
 *
 * Each output in your job is a collection of settings that describes how you want MediaConvert to encode a single output file or stream. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/create-outputs.html.
 */

#ifndef OAIOutput_H
#define OAIOutput_H

#include <QJsonObject>

#include "OAICreatePreset_request_settings_ContainerSettings.h"
#include "OAICreatePreset_request_settings_VideoDescription.h"
#include "OAIOutput_OutputSettings.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreatePreset_request_settings_ContainerSettings;
class OAIOutput_OutputSettings;
class OAICreatePreset_request_settings_VideoDescription;

class OAIOutput : public OAIObject {
public:
    OAIOutput();
    OAIOutput(QString json);
    ~OAIOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAudioDescriptions() const;
    void setAudioDescriptions(const QList &audio_descriptions);
    bool is_audio_descriptions_Set() const;
    bool is_audio_descriptions_Valid() const;

    QList getCaptionDescriptions() const;
    void setCaptionDescriptions(const QList &caption_descriptions);
    bool is_caption_descriptions_Set() const;
    bool is_caption_descriptions_Valid() const;

    OAICreatePreset_request_settings_ContainerSettings getContainerSettings() const;
    void setContainerSettings(const OAICreatePreset_request_settings_ContainerSettings &container_settings);
    bool is_container_settings_Set() const;
    bool is_container_settings_Valid() const;

    QString getExtension() const;
    void setExtension(const QString &extension);
    bool is_extension_Set() const;
    bool is_extension_Valid() const;

    QString getNameModifier() const;
    void setNameModifier(const QString &name_modifier);
    bool is_name_modifier_Set() const;
    bool is_name_modifier_Valid() const;

    OAIOutput_OutputSettings getOutputSettings() const;
    void setOutputSettings(const OAIOutput_OutputSettings &output_settings);
    bool is_output_settings_Set() const;
    bool is_output_settings_Valid() const;

    QString getPreset() const;
    void setPreset(const QString &preset);
    bool is_preset_Set() const;
    bool is_preset_Valid() const;

    OAICreatePreset_request_settings_VideoDescription getVideoDescription() const;
    void setVideoDescription(const OAICreatePreset_request_settings_VideoDescription &video_description);
    bool is_video_description_Set() const;
    bool is_video_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_audio_descriptions;
    bool m_audio_descriptions_isSet;
    bool m_audio_descriptions_isValid;

    QList m_caption_descriptions;
    bool m_caption_descriptions_isSet;
    bool m_caption_descriptions_isValid;

    OAICreatePreset_request_settings_ContainerSettings m_container_settings;
    bool m_container_settings_isSet;
    bool m_container_settings_isValid;

    QString m_extension;
    bool m_extension_isSet;
    bool m_extension_isValid;

    QString m_name_modifier;
    bool m_name_modifier_isSet;
    bool m_name_modifier_isValid;

    OAIOutput_OutputSettings m_output_settings;
    bool m_output_settings_isSet;
    bool m_output_settings_isValid;

    QString m_preset;
    bool m_preset_isSet;
    bool m_preset_isValid;

    OAICreatePreset_request_settings_VideoDescription m_video_description;
    bool m_video_description_isSet;
    bool m_video_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutput)

#endif // OAIOutput_H
