/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContainerSettings_M2tsSettings.h
 *
 * 
 */

#ifndef OAIContainerSettings_M2tsSettings_H
#define OAIContainerSettings_M2tsSettings_H

#include <QJsonObject>

#include "OAIM2tsAudioBufferModel.h"
#include "OAIM2tsAudioDuration.h"
#include "OAIM2tsBufferModel.h"
#include "OAIM2tsDataPtsControl.h"
#include "OAIM2tsEbpAudioInterval.h"
#include "OAIM2tsEbpPlacement.h"
#include "OAIM2tsEsRateInPes.h"
#include "OAIM2tsForceTsVideoEbpOrder.h"
#include "OAIM2tsKlvMetadata.h"
#include "OAIM2tsNielsenId3.h"
#include "OAIM2tsPcrControl.h"
#include "OAIM2tsRateMode.h"
#include "OAIM2tsScte35Source.h"
#include "OAIM2tsSegmentationMarkers.h"
#include "OAIM2tsSegmentationStyle.h"
#include "OAIM2tsSettings_DvbNitSettings.h"
#include "OAIM2tsSettings_DvbSdtSettings.h"
#include "OAIM2tsSettings_DvbTdtSettings.h"
#include "OAIM2tsSettings_Scte35Esam.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIM2tsSettings_DvbNitSettings;
class OAIM2tsSettings_DvbSdtSettings;
class OAIM2tsSettings_DvbTdtSettings;
class OAIM2tsSettings_Scte35Esam;

class OAIContainerSettings_M2tsSettings : public OAIObject {
public:
    OAIContainerSettings_M2tsSettings();
    OAIContainerSettings_M2tsSettings(QString json);
    ~OAIContainerSettings_M2tsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIM2tsAudioBufferModel getAudioBufferModel() const;
    void setAudioBufferModel(const OAIM2tsAudioBufferModel &audio_buffer_model);
    bool is_audio_buffer_model_Set() const;
    bool is_audio_buffer_model_Valid() const;

    OAIM2tsAudioDuration getAudioDuration() const;
    void setAudioDuration(const OAIM2tsAudioDuration &audio_duration);
    bool is_audio_duration_Set() const;
    bool is_audio_duration_Valid() const;

    qint32 getAudioFramesPerPes() const;
    void setAudioFramesPerPes(const qint32 &audio_frames_per_pes);
    bool is_audio_frames_per_pes_Set() const;
    bool is_audio_frames_per_pes_Valid() const;

    QList getAudioPids() const;
    void setAudioPids(const QList &audio_pids);
    bool is_audio_pids_Set() const;
    bool is_audio_pids_Valid() const;

    qint32 getBitrate() const;
    void setBitrate(const qint32 &bitrate);
    bool is_bitrate_Set() const;
    bool is_bitrate_Valid() const;

    OAIM2tsBufferModel getBufferModel() const;
    void setBufferModel(const OAIM2tsBufferModel &buffer_model);
    bool is_buffer_model_Set() const;
    bool is_buffer_model_Valid() const;

    OAIM2tsDataPtsControl getDataPtsControl() const;
    void setDataPtsControl(const OAIM2tsDataPtsControl &data_pts_control);
    bool is_data_pts_control_Set() const;
    bool is_data_pts_control_Valid() const;

    OAIM2tsSettings_DvbNitSettings getDvbNitSettings() const;
    void setDvbNitSettings(const OAIM2tsSettings_DvbNitSettings &dvb_nit_settings);
    bool is_dvb_nit_settings_Set() const;
    bool is_dvb_nit_settings_Valid() const;

    OAIM2tsSettings_DvbSdtSettings getDvbSdtSettings() const;
    void setDvbSdtSettings(const OAIM2tsSettings_DvbSdtSettings &dvb_sdt_settings);
    bool is_dvb_sdt_settings_Set() const;
    bool is_dvb_sdt_settings_Valid() const;

    QList getDvbSubPids() const;
    void setDvbSubPids(const QList &dvb_sub_pids);
    bool is_dvb_sub_pids_Set() const;
    bool is_dvb_sub_pids_Valid() const;

    OAIM2tsSettings_DvbTdtSettings getDvbTdtSettings() const;
    void setDvbTdtSettings(const OAIM2tsSettings_DvbTdtSettings &dvb_tdt_settings);
    bool is_dvb_tdt_settings_Set() const;
    bool is_dvb_tdt_settings_Valid() const;

    qint32 getDvbTeletextPid() const;
    void setDvbTeletextPid(const qint32 &dvb_teletext_pid);
    bool is_dvb_teletext_pid_Set() const;
    bool is_dvb_teletext_pid_Valid() const;

    OAIM2tsEbpAudioInterval getEbpAudioInterval() const;
    void setEbpAudioInterval(const OAIM2tsEbpAudioInterval &ebp_audio_interval);
    bool is_ebp_audio_interval_Set() const;
    bool is_ebp_audio_interval_Valid() const;

    OAIM2tsEbpPlacement getEbpPlacement() const;
    void setEbpPlacement(const OAIM2tsEbpPlacement &ebp_placement);
    bool is_ebp_placement_Set() const;
    bool is_ebp_placement_Valid() const;

    OAIM2tsEsRateInPes getEsRateInPes() const;
    void setEsRateInPes(const OAIM2tsEsRateInPes &es_rate_in_pes);
    bool is_es_rate_in_pes_Set() const;
    bool is_es_rate_in_pes_Valid() const;

    OAIM2tsForceTsVideoEbpOrder getForceTsVideoEbpOrder() const;
    void setForceTsVideoEbpOrder(const OAIM2tsForceTsVideoEbpOrder &force_ts_video_ebp_order);
    bool is_force_ts_video_ebp_order_Set() const;
    bool is_force_ts_video_ebp_order_Valid() const;

    double getFragmentTime() const;
    void setFragmentTime(const double &fragment_time);
    bool is_fragment_time_Set() const;
    bool is_fragment_time_Valid() const;

    OAIM2tsKlvMetadata getKlvMetadata() const;
    void setKlvMetadata(const OAIM2tsKlvMetadata &klv_metadata);
    bool is_klv_metadata_Set() const;
    bool is_klv_metadata_Valid() const;

    qint32 getMaxPcrInterval() const;
    void setMaxPcrInterval(const qint32 &max_pcr_interval);
    bool is_max_pcr_interval_Set() const;
    bool is_max_pcr_interval_Valid() const;

    qint32 getMinEbpInterval() const;
    void setMinEbpInterval(const qint32 &min_ebp_interval);
    bool is_min_ebp_interval_Set() const;
    bool is_min_ebp_interval_Valid() const;

    OAIM2tsNielsenId3 getNielsenId3() const;
    void setNielsenId3(const OAIM2tsNielsenId3 &nielsen_id3);
    bool is_nielsen_id3_Set() const;
    bool is_nielsen_id3_Valid() const;

    double getNullPacketBitrate() const;
    void setNullPacketBitrate(const double &null_packet_bitrate);
    bool is_null_packet_bitrate_Set() const;
    bool is_null_packet_bitrate_Valid() const;

    qint32 getPatInterval() const;
    void setPatInterval(const qint32 &pat_interval);
    bool is_pat_interval_Set() const;
    bool is_pat_interval_Valid() const;

    OAIM2tsPcrControl getPcrControl() const;
    void setPcrControl(const OAIM2tsPcrControl &pcr_control);
    bool is_pcr_control_Set() const;
    bool is_pcr_control_Valid() const;

    qint32 getPcrPid() const;
    void setPcrPid(const qint32 &pcr_pid);
    bool is_pcr_pid_Set() const;
    bool is_pcr_pid_Valid() const;

    qint32 getPmtInterval() const;
    void setPmtInterval(const qint32 &pmt_interval);
    bool is_pmt_interval_Set() const;
    bool is_pmt_interval_Valid() const;

    qint32 getPmtPid() const;
    void setPmtPid(const qint32 &pmt_pid);
    bool is_pmt_pid_Set() const;
    bool is_pmt_pid_Valid() const;

    qint32 getPrivateMetadataPid() const;
    void setPrivateMetadataPid(const qint32 &private_metadata_pid);
    bool is_private_metadata_pid_Set() const;
    bool is_private_metadata_pid_Valid() const;

    qint32 getProgramNumber() const;
    void setProgramNumber(const qint32 &program_number);
    bool is_program_number_Set() const;
    bool is_program_number_Valid() const;

    OAIM2tsRateMode getRateMode() const;
    void setRateMode(const OAIM2tsRateMode &rate_mode);
    bool is_rate_mode_Set() const;
    bool is_rate_mode_Valid() const;

    OAIM2tsSettings_Scte35Esam getScte35Esam() const;
    void setScte35Esam(const OAIM2tsSettings_Scte35Esam &scte35_esam);
    bool is_scte35_esam_Set() const;
    bool is_scte35_esam_Valid() const;

    qint32 getScte35Pid() const;
    void setScte35Pid(const qint32 &scte35_pid);
    bool is_scte35_pid_Set() const;
    bool is_scte35_pid_Valid() const;

    OAIM2tsScte35Source getScte35Source() const;
    void setScte35Source(const OAIM2tsScte35Source &scte35_source);
    bool is_scte35_source_Set() const;
    bool is_scte35_source_Valid() const;

    OAIM2tsSegmentationMarkers getSegmentationMarkers() const;
    void setSegmentationMarkers(const OAIM2tsSegmentationMarkers &segmentation_markers);
    bool is_segmentation_markers_Set() const;
    bool is_segmentation_markers_Valid() const;

    OAIM2tsSegmentationStyle getSegmentationStyle() const;
    void setSegmentationStyle(const OAIM2tsSegmentationStyle &segmentation_style);
    bool is_segmentation_style_Set() const;
    bool is_segmentation_style_Valid() const;

    double getSegmentationTime() const;
    void setSegmentationTime(const double &segmentation_time);
    bool is_segmentation_time_Set() const;
    bool is_segmentation_time_Valid() const;

    qint32 getTimedMetadataPid() const;
    void setTimedMetadataPid(const qint32 &timed_metadata_pid);
    bool is_timed_metadata_pid_Set() const;
    bool is_timed_metadata_pid_Valid() const;

    qint32 getTransportStreamId() const;
    void setTransportStreamId(const qint32 &transport_stream_id);
    bool is_transport_stream_id_Set() const;
    bool is_transport_stream_id_Valid() const;

    qint32 getVideoPid() const;
    void setVideoPid(const qint32 &video_pid);
    bool is_video_pid_Set() const;
    bool is_video_pid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIM2tsAudioBufferModel m_audio_buffer_model;
    bool m_audio_buffer_model_isSet;
    bool m_audio_buffer_model_isValid;

    OAIM2tsAudioDuration m_audio_duration;
    bool m_audio_duration_isSet;
    bool m_audio_duration_isValid;

    qint32 m_audio_frames_per_pes;
    bool m_audio_frames_per_pes_isSet;
    bool m_audio_frames_per_pes_isValid;

    QList m_audio_pids;
    bool m_audio_pids_isSet;
    bool m_audio_pids_isValid;

    qint32 m_bitrate;
    bool m_bitrate_isSet;
    bool m_bitrate_isValid;

    OAIM2tsBufferModel m_buffer_model;
    bool m_buffer_model_isSet;
    bool m_buffer_model_isValid;

    OAIM2tsDataPtsControl m_data_pts_control;
    bool m_data_pts_control_isSet;
    bool m_data_pts_control_isValid;

    OAIM2tsSettings_DvbNitSettings m_dvb_nit_settings;
    bool m_dvb_nit_settings_isSet;
    bool m_dvb_nit_settings_isValid;

    OAIM2tsSettings_DvbSdtSettings m_dvb_sdt_settings;
    bool m_dvb_sdt_settings_isSet;
    bool m_dvb_sdt_settings_isValid;

    QList m_dvb_sub_pids;
    bool m_dvb_sub_pids_isSet;
    bool m_dvb_sub_pids_isValid;

    OAIM2tsSettings_DvbTdtSettings m_dvb_tdt_settings;
    bool m_dvb_tdt_settings_isSet;
    bool m_dvb_tdt_settings_isValid;

    qint32 m_dvb_teletext_pid;
    bool m_dvb_teletext_pid_isSet;
    bool m_dvb_teletext_pid_isValid;

    OAIM2tsEbpAudioInterval m_ebp_audio_interval;
    bool m_ebp_audio_interval_isSet;
    bool m_ebp_audio_interval_isValid;

    OAIM2tsEbpPlacement m_ebp_placement;
    bool m_ebp_placement_isSet;
    bool m_ebp_placement_isValid;

    OAIM2tsEsRateInPes m_es_rate_in_pes;
    bool m_es_rate_in_pes_isSet;
    bool m_es_rate_in_pes_isValid;

    OAIM2tsForceTsVideoEbpOrder m_force_ts_video_ebp_order;
    bool m_force_ts_video_ebp_order_isSet;
    bool m_force_ts_video_ebp_order_isValid;

    double m_fragment_time;
    bool m_fragment_time_isSet;
    bool m_fragment_time_isValid;

    OAIM2tsKlvMetadata m_klv_metadata;
    bool m_klv_metadata_isSet;
    bool m_klv_metadata_isValid;

    qint32 m_max_pcr_interval;
    bool m_max_pcr_interval_isSet;
    bool m_max_pcr_interval_isValid;

    qint32 m_min_ebp_interval;
    bool m_min_ebp_interval_isSet;
    bool m_min_ebp_interval_isValid;

    OAIM2tsNielsenId3 m_nielsen_id3;
    bool m_nielsen_id3_isSet;
    bool m_nielsen_id3_isValid;

    double m_null_packet_bitrate;
    bool m_null_packet_bitrate_isSet;
    bool m_null_packet_bitrate_isValid;

    qint32 m_pat_interval;
    bool m_pat_interval_isSet;
    bool m_pat_interval_isValid;

    OAIM2tsPcrControl m_pcr_control;
    bool m_pcr_control_isSet;
    bool m_pcr_control_isValid;

    qint32 m_pcr_pid;
    bool m_pcr_pid_isSet;
    bool m_pcr_pid_isValid;

    qint32 m_pmt_interval;
    bool m_pmt_interval_isSet;
    bool m_pmt_interval_isValid;

    qint32 m_pmt_pid;
    bool m_pmt_pid_isSet;
    bool m_pmt_pid_isValid;

    qint32 m_private_metadata_pid;
    bool m_private_metadata_pid_isSet;
    bool m_private_metadata_pid_isValid;

    qint32 m_program_number;
    bool m_program_number_isSet;
    bool m_program_number_isValid;

    OAIM2tsRateMode m_rate_mode;
    bool m_rate_mode_isSet;
    bool m_rate_mode_isValid;

    OAIM2tsSettings_Scte35Esam m_scte35_esam;
    bool m_scte35_esam_isSet;
    bool m_scte35_esam_isValid;

    qint32 m_scte35_pid;
    bool m_scte35_pid_isSet;
    bool m_scte35_pid_isValid;

    OAIM2tsScte35Source m_scte35_source;
    bool m_scte35_source_isSet;
    bool m_scte35_source_isValid;

    OAIM2tsSegmentationMarkers m_segmentation_markers;
    bool m_segmentation_markers_isSet;
    bool m_segmentation_markers_isValid;

    OAIM2tsSegmentationStyle m_segmentation_style;
    bool m_segmentation_style_isSet;
    bool m_segmentation_style_isValid;

    double m_segmentation_time;
    bool m_segmentation_time_isSet;
    bool m_segmentation_time_isValid;

    qint32 m_timed_metadata_pid;
    bool m_timed_metadata_pid_isSet;
    bool m_timed_metadata_pid_isValid;

    qint32 m_transport_stream_id;
    bool m_transport_stream_id_isSet;
    bool m_transport_stream_id_isValid;

    qint32 m_video_pid;
    bool m_video_pid_isSet;
    bool m_video_pid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContainerSettings_M2tsSettings)

#endif // OAIContainerSettings_M2tsSettings_H
