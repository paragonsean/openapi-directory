/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIXavcFlickerAdaptiveQuantization.h
 *
 * The best way to set up adaptive quantization is to keep the default value, Auto, for the setting Adaptive quantization. When you do so, MediaConvert automatically applies the best types of quantization for your video content. Include this setting in your JSON job specification only when you choose to change the default value for Adaptive quantization. Enable this setting to have the encoder reduce I-frame pop. I-frame pop appears as a visual flicker that can arise when the encoder saves bits by copying some macroblocks many times from frame to frame, and then refreshes them at the I-frame. When you enable this setting, the encoder updates these macroblocks slightly more often to smooth out the flicker. This setting is disabled by default. Related setting: In addition to enabling this setting, you must also set Adaptive quantization to a value other than Off or Auto. Use Adaptive quantization to adjust the degree of smoothing that Flicker adaptive quantization provides.
 */

#ifndef OAIXavcFlickerAdaptiveQuantization_H
#define OAIXavcFlickerAdaptiveQuantization_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIXavcFlickerAdaptiveQuantization : public OAIEnum {
public:
    OAIXavcFlickerAdaptiveQuantization();
    OAIXavcFlickerAdaptiveQuantization(QString json);
    ~OAIXavcFlickerAdaptiveQuantization() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIXavcFlickerAdaptiveQuantization {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DISABLED, 
        ENABLED
    };
    OAIXavcFlickerAdaptiveQuantization::eOAIXavcFlickerAdaptiveQuantization getValue() const;
    void setValue(const OAIXavcFlickerAdaptiveQuantization::eOAIXavcFlickerAdaptiveQuantization& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIXavcFlickerAdaptiveQuantization m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIXavcFlickerAdaptiveQuantization)

#endif // OAIXavcFlickerAdaptiveQuantization_H
