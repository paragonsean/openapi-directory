/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerSettings_F4vSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerSettings_F4vSettings::OAIContainerSettings_F4vSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerSettings_F4vSettings::OAIContainerSettings_F4vSettings() {
    this->initializeModel();
}

OAIContainerSettings_F4vSettings::~OAIContainerSettings_F4vSettings() {}

void OAIContainerSettings_F4vSettings::initializeModel() {

    m_moov_placement_isSet = false;
    m_moov_placement_isValid = false;
}

void OAIContainerSettings_F4vSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerSettings_F4vSettings::fromJsonObject(QJsonObject json) {

    m_moov_placement_isValid = ::OpenAPI::fromJsonValue(m_moov_placement, json[QString("MoovPlacement")]);
    m_moov_placement_isSet = !json[QString("MoovPlacement")].isNull() && m_moov_placement_isValid;
}

QString OAIContainerSettings_F4vSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerSettings_F4vSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_moov_placement.isSet()) {
        obj.insert(QString("MoovPlacement"), ::OpenAPI::toJsonValue(m_moov_placement));
    }
    return obj;
}

OAIF4vMoovPlacement OAIContainerSettings_F4vSettings::getMoovPlacement() const {
    return m_moov_placement;
}
void OAIContainerSettings_F4vSettings::setMoovPlacement(const OAIF4vMoovPlacement &moov_placement) {
    m_moov_placement = moov_placement;
    m_moov_placement_isSet = true;
}

bool OAIContainerSettings_F4vSettings::is_moov_placement_Set() const{
    return m_moov_placement_isSet;
}

bool OAIContainerSettings_F4vSettings::is_moov_placement_Valid() const{
    return m_moov_placement_isValid;
}

bool OAIContainerSettings_F4vSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_moov_placement.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerSettings_F4vSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
