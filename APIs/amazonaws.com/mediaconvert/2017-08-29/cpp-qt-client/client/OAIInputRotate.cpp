/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputRotate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputRotate::OAIInputRotate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputRotate::OAIInputRotate() {
    this->initializeModel();
}

OAIInputRotate::~OAIInputRotate() {}

void OAIInputRotate::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInputRotate::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInputRotate::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DEGREE_0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInputRotate::DEGREE_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEGREES_90", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInputRotate::DEGREES_90;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEGREES_180", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInputRotate::DEGREES_180;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEGREES_270", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInputRotate::DEGREES_270;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUTO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInputRotate::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInputRotate::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInputRotate::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInputRotate::DEGREE_0:
            val = "DEGREE_0";
            break;
        case eOAIInputRotate::DEGREES_90:
            val = "DEGREES_90";
            break;
        case eOAIInputRotate::DEGREES_180:
            val = "DEGREES_180";
            break;
        case eOAIInputRotate::DEGREES_270:
            val = "DEGREES_270";
            break;
        case eOAIInputRotate::AUTO:
            val = "AUTO";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInputRotate::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInputRotate::eOAIInputRotate OAIInputRotate::getValue() const {
    return m_value;
}

void OAIInputRotate::setValue(const OAIInputRotate::eOAIInputRotate& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInputRotate::isSet() const {
    
    return m_value_isSet;
}

bool OAIInputRotate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
