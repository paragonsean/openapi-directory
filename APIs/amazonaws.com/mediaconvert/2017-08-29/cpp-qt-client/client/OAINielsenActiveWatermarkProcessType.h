/**
 * AWS Elemental MediaConvert
 * AWS Elemental MediaConvert
 *
 * The version of the OpenAPI document: 2017-08-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINielsenActiveWatermarkProcessType.h
 *
 * Choose the type of Nielsen watermarks that you want in your outputs. When you choose NAES 2 and NW, you must provide a value for the setting SID. When you choose CBET, you must provide a value for the setting CSID. When you choose NAES 2, NW, and CBET, you must provide values for both of these settings.
 */

#ifndef OAINielsenActiveWatermarkProcessType_H
#define OAINielsenActiveWatermarkProcessType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINielsenActiveWatermarkProcessType : public OAIEnum {
public:
    OAINielsenActiveWatermarkProcessType();
    OAINielsenActiveWatermarkProcessType(QString json);
    ~OAINielsenActiveWatermarkProcessType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAINielsenActiveWatermarkProcessType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        NAES2_AND_NW, 
        CBET, 
        NAES2_AND_NW_AND_CBET
    };
    OAINielsenActiveWatermarkProcessType::eOAINielsenActiveWatermarkProcessType getValue() const;
    void setValue(const OAINielsenActiveWatermarkProcessType::eOAINielsenActiveWatermarkProcessType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAINielsenActiveWatermarkProcessType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINielsenActiveWatermarkProcessType)

#endif // OAINielsenActiveWatermarkProcessType_H
