/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateBudgetActionRequest from '../model/CreateBudgetActionRequest';
import CreateBudgetActionResponse from '../model/CreateBudgetActionResponse';
import CreateBudgetRequest from '../model/CreateBudgetRequest';
import CreateNotificationRequest from '../model/CreateNotificationRequest';
import CreateSubscriberRequest from '../model/CreateSubscriberRequest';
import DeleteBudgetActionRequest from '../model/DeleteBudgetActionRequest';
import DeleteBudgetActionResponse from '../model/DeleteBudgetActionResponse';
import DeleteBudgetRequest from '../model/DeleteBudgetRequest';
import DeleteNotificationRequest from '../model/DeleteNotificationRequest';
import DeleteSubscriberRequest from '../model/DeleteSubscriberRequest';
import DescribeBudgetActionHistoriesRequest from '../model/DescribeBudgetActionHistoriesRequest';
import DescribeBudgetActionHistoriesResponse from '../model/DescribeBudgetActionHistoriesResponse';
import DescribeBudgetActionRequest from '../model/DescribeBudgetActionRequest';
import DescribeBudgetActionResponse from '../model/DescribeBudgetActionResponse';
import DescribeBudgetActionsForAccountRequest from '../model/DescribeBudgetActionsForAccountRequest';
import DescribeBudgetActionsForAccountResponse from '../model/DescribeBudgetActionsForAccountResponse';
import DescribeBudgetActionsForBudgetRequest from '../model/DescribeBudgetActionsForBudgetRequest';
import DescribeBudgetActionsForBudgetResponse from '../model/DescribeBudgetActionsForBudgetResponse';
import DescribeBudgetNotificationsForAccountRequest from '../model/DescribeBudgetNotificationsForAccountRequest';
import DescribeBudgetNotificationsForAccountResponse from '../model/DescribeBudgetNotificationsForAccountResponse';
import DescribeBudgetPerformanceHistoryRequest from '../model/DescribeBudgetPerformanceHistoryRequest';
import DescribeBudgetPerformanceHistoryResponse from '../model/DescribeBudgetPerformanceHistoryResponse';
import DescribeBudgetRequest from '../model/DescribeBudgetRequest';
import DescribeBudgetResponse from '../model/DescribeBudgetResponse';
import DescribeBudgetsRequest from '../model/DescribeBudgetsRequest';
import DescribeBudgetsResponse from '../model/DescribeBudgetsResponse';
import DescribeNotificationsForBudgetRequest from '../model/DescribeNotificationsForBudgetRequest';
import DescribeNotificationsForBudgetResponse from '../model/DescribeNotificationsForBudgetResponse';
import DescribeSubscribersForNotificationRequest from '../model/DescribeSubscribersForNotificationRequest';
import DescribeSubscribersForNotificationResponse from '../model/DescribeSubscribersForNotificationResponse';
import ExecuteBudgetActionRequest from '../model/ExecuteBudgetActionRequest';
import ExecuteBudgetActionResponse from '../model/ExecuteBudgetActionResponse';
import UpdateBudgetActionRequest from '../model/UpdateBudgetActionRequest';
import UpdateBudgetActionResponse from '../model/UpdateBudgetActionResponse';
import UpdateBudgetRequest from '../model/UpdateBudgetRequest';
import UpdateNotificationRequest from '../model/UpdateNotificationRequest';
import UpdateSubscriberRequest from '../model/UpdateSubscriberRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 2016-10-20
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createBudget operation.
     * @callback module:api/DefaultApi~createBudgetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a budget and, if included, notifications and subscribers. </p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples\">Examples</a> section. </p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateBudgetRequest} createBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createBudget(xAmzTarget, createBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = createBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createBudget");
      }
      // verify the required parameter 'createBudgetRequest' is set
      if (createBudgetRequest === undefined || createBudgetRequest === null) {
        throw new Error("Missing the required parameter 'createBudgetRequest' when calling createBudget");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.CreateBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createBudgetAction operation.
     * @callback module:api/DefaultApi~createBudgetActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateBudgetActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Creates a budget action. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateBudgetActionRequest} createBudgetActionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createBudgetActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateBudgetActionResponse}
     */
    createBudgetAction(xAmzTarget, createBudgetActionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createBudgetActionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createBudgetAction");
      }
      // verify the required parameter 'createBudgetActionRequest' is set
      if (createBudgetActionRequest === undefined || createBudgetActionRequest === null) {
        throw new Error("Missing the required parameter 'createBudgetActionRequest' when calling createBudgetAction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateBudgetActionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.CreateBudgetAction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createNotification operation.
     * @callback module:api/DefaultApi~createNotificationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a notification. You must create the budget before you create the associated notification.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateNotificationRequest} createNotificationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createNotificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createNotification(xAmzTarget, createNotificationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createNotificationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createNotification");
      }
      // verify the required parameter 'createNotificationRequest' is set
      if (createNotificationRequest === undefined || createNotificationRequest === null) {
        throw new Error("Missing the required parameter 'createNotificationRequest' when calling createNotification");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.CreateNotification', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSubscriber operation.
     * @callback module:api/DefaultApi~createSubscriberCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a subscriber. You must create the associated budget and notification before you create the subscriber.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/CreateSubscriberRequest} createSubscriberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSubscriberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    createSubscriber(xAmzTarget, createSubscriberRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSubscriberRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling createSubscriber");
      }
      // verify the required parameter 'createSubscriberRequest' is set
      if (createSubscriberRequest === undefined || createSubscriberRequest === null) {
        throw new Error("Missing the required parameter 'createSubscriberRequest' when calling createSubscriber");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBudget operation.
     * @callback module:api/DefaultApi~deleteBudgetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a budget. You can delete your budget at any time.</p> <important> <p>Deleting a budget also deletes the notifications and subscribers that are associated with that budget.</p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteBudgetRequest} deleteBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteBudget(xAmzTarget, deleteBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteBudget");
      }
      // verify the required parameter 'deleteBudgetRequest' is set
      if (deleteBudgetRequest === undefined || deleteBudgetRequest === null) {
        throw new Error("Missing the required parameter 'deleteBudgetRequest' when calling deleteBudget");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBudgetAction operation.
     * @callback module:api/DefaultApi~deleteBudgetActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteBudgetActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Deletes a budget action. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteBudgetActionRequest} deleteBudgetActionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteBudgetActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteBudgetActionResponse}
     */
    deleteBudgetAction(xAmzTarget, deleteBudgetActionRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteBudgetActionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteBudgetAction");
      }
      // verify the required parameter 'deleteBudgetActionRequest' is set
      if (deleteBudgetActionRequest === undefined || deleteBudgetActionRequest === null) {
        throw new Error("Missing the required parameter 'deleteBudgetActionRequest' when calling deleteBudgetAction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DeleteBudgetActionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudgetAction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNotification operation.
     * @callback module:api/DefaultApi~deleteNotificationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a notification.</p> <important> <p>Deleting a notification also deletes the subscribers that are associated with the notification.</p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteNotificationRequest} deleteNotificationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteNotificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteNotification(xAmzTarget, deleteNotificationRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteNotificationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteNotification");
      }
      // verify the required parameter 'deleteNotificationRequest' is set
      if (deleteNotificationRequest === undefined || deleteNotificationRequest === null) {
        throw new Error("Missing the required parameter 'deleteNotificationRequest' when calling deleteNotification");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSubscriber operation.
     * @callback module:api/DefaultApi~deleteSubscriberCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a subscriber.</p> <important> <p>Deleting the last subscriber to a notification also deletes the notification.</p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DeleteSubscriberRequest} deleteSubscriberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteSubscriberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteSubscriber(xAmzTarget, deleteSubscriberRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteSubscriberRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling deleteSubscriber");
      }
      // verify the required parameter 'deleteSubscriberRequest' is set
      if (deleteSubscriberRequest === undefined || deleteSubscriberRequest === null) {
        throw new Error("Missing the required parameter 'deleteSubscriberRequest' when calling deleteSubscriber");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudget operation.
     * @callback module:api/DefaultApi~describeBudgetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Describes a budget.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples\">Examples</a> section. </p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetRequest} describeBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetResponse}
     */
    describeBudget(xAmzTarget, describeBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudget");
      }
      // verify the required parameter 'describeBudgetRequest' is set
      if (describeBudgetRequest === undefined || describeBudgetRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetRequest' when calling describeBudget");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetAction operation.
     * @callback module:api/DefaultApi~describeBudgetActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Describes a budget action detail. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetActionRequest} describeBudgetActionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeBudgetActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetActionResponse}
     */
    describeBudgetAction(xAmzTarget, describeBudgetActionRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetActionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetAction");
      }
      // verify the required parameter 'describeBudgetActionRequest' is set
      if (describeBudgetActionRequest === undefined || describeBudgetActionRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetActionRequest' when calling describeBudgetAction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetActionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetAction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetActionHistories operation.
     * @callback module:api/DefaultApi~describeBudgetActionHistoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetActionHistoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Describes a budget action history detail. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetActionHistoriesRequest} describeBudgetActionHistoriesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetActionHistoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetActionHistoriesResponse}
     */
    describeBudgetActionHistories(xAmzTarget, describeBudgetActionHistoriesRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetActionHistoriesRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetActionHistories");
      }
      // verify the required parameter 'describeBudgetActionHistoriesRequest' is set
      if (describeBudgetActionHistoriesRequest === undefined || describeBudgetActionHistoriesRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetActionHistoriesRequest' when calling describeBudgetActionHistories");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetActionHistoriesResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionHistories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetActionsForAccount operation.
     * @callback module:api/DefaultApi~describeBudgetActionsForAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetActionsForAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Describes all of the budget actions for an account. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetActionsForAccountRequest} describeBudgetActionsForAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetActionsForAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetActionsForAccountResponse}
     */
    describeBudgetActionsForAccount(xAmzTarget, describeBudgetActionsForAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetActionsForAccountRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetActionsForAccount");
      }
      // verify the required parameter 'describeBudgetActionsForAccountRequest' is set
      if (describeBudgetActionsForAccountRequest === undefined || describeBudgetActionsForAccountRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetActionsForAccountRequest' when calling describeBudgetActionsForAccount");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetActionsForAccountResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForAccount', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetActionsForBudget operation.
     * @callback module:api/DefaultApi~describeBudgetActionsForBudgetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetActionsForBudgetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Describes all of the budget actions for a budget. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetActionsForBudgetRequest} describeBudgetActionsForBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetActionsForBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetActionsForBudgetResponse}
     */
    describeBudgetActionsForBudget(xAmzTarget, describeBudgetActionsForBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetActionsForBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetActionsForBudget");
      }
      // verify the required parameter 'describeBudgetActionsForBudgetRequest' is set
      if (describeBudgetActionsForBudgetRequest === undefined || describeBudgetActionsForBudgetRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetActionsForBudgetRequest' when calling describeBudgetActionsForBudget");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetActionsForBudgetResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetNotificationsForAccount operation.
     * @callback module:api/DefaultApi~describeBudgetNotificationsForAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetNotificationsForAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Lists the budget names and notifications that are associated with an account. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetNotificationsForAccountRequest} describeBudgetNotificationsForAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetNotificationsForAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetNotificationsForAccountResponse}
     */
    describeBudgetNotificationsForAccount(xAmzTarget, describeBudgetNotificationsForAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetNotificationsForAccountRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetNotificationsForAccount");
      }
      // verify the required parameter 'describeBudgetNotificationsForAccountRequest' is set
      if (describeBudgetNotificationsForAccountRequest === undefined || describeBudgetNotificationsForAccountRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetNotificationsForAccountRequest' when calling describeBudgetNotificationsForAccount");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetNotificationsForAccountResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgetPerformanceHistory operation.
     * @callback module:api/DefaultApi~describeBudgetPerformanceHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetPerformanceHistoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Describes the history for <code>DAILY</code>, <code>MONTHLY</code>, and <code>QUARTERLY</code> budgets. Budget history isn't available for <code>ANNUAL</code> budgets.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetPerformanceHistoryRequest} describeBudgetPerformanceHistoryRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetPerformanceHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetPerformanceHistoryResponse}
     */
    describeBudgetPerformanceHistory(xAmzTarget, describeBudgetPerformanceHistoryRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetPerformanceHistoryRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgetPerformanceHistory");
      }
      // verify the required parameter 'describeBudgetPerformanceHistoryRequest' is set
      if (describeBudgetPerformanceHistoryRequest === undefined || describeBudgetPerformanceHistoryRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetPerformanceHistoryRequest' when calling describeBudgetPerformanceHistory");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetPerformanceHistoryResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeBudgets operation.
     * @callback module:api/DefaultApi~describeBudgetsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeBudgetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the budgets that are associated with an account.</p> <important> <p>The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples\">Examples</a> section. </p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeBudgetsRequest} describeBudgetsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeBudgetsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeBudgetsResponse}
     */
    describeBudgets(xAmzTarget, describeBudgetsRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeBudgetsRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeBudgets");
      }
      // verify the required parameter 'describeBudgetsRequest' is set
      if (describeBudgetsRequest === undefined || describeBudgetsRequest === null) {
        throw new Error("Missing the required parameter 'describeBudgetsRequest' when calling describeBudgets");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeBudgetsResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeNotificationsForBudget operation.
     * @callback module:api/DefaultApi~describeNotificationsForBudgetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeNotificationsForBudgetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the notifications that are associated with a budget.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeNotificationsForBudgetRequest} describeNotificationsForBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeNotificationsForBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeNotificationsForBudgetResponse}
     */
    describeNotificationsForBudget(xAmzTarget, describeNotificationsForBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeNotificationsForBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeNotificationsForBudget");
      }
      // verify the required parameter 'describeNotificationsForBudgetRequest' is set
      if (describeNotificationsForBudgetRequest === undefined || describeNotificationsForBudgetRequest === null) {
        throw new Error("Missing the required parameter 'describeNotificationsForBudgetRequest' when calling describeNotificationsForBudget");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeNotificationsForBudgetResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeSubscribersForNotification operation.
     * @callback module:api/DefaultApi~describeSubscribersForNotificationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeSubscribersForNotificationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the subscribers that are associated with a notification.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/DescribeSubscribersForNotificationRequest} describeSubscribersForNotificationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [maxResults] Pagination limit
     * @param {String} [nextToken] Pagination token
     * @param {module:api/DefaultApi~describeSubscribersForNotificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeSubscribersForNotificationResponse}
     */
    describeSubscribersForNotification(xAmzTarget, describeSubscribersForNotificationRequest, opts, callback) {
      opts = opts || {};
      let postBody = describeSubscribersForNotificationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling describeSubscribersForNotification");
      }
      // verify the required parameter 'describeSubscribersForNotificationRequest' is set
      if (describeSubscribersForNotificationRequest === undefined || describeSubscribersForNotificationRequest === null) {
        throw new Error("Missing the required parameter 'describeSubscribersForNotificationRequest' when calling describeSubscribersForNotification");
      }

      let pathParams = {
      };
      let queryParams = {
        'MaxResults': opts['maxResults'],
        'NextToken': opts['nextToken']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DescribeSubscribersForNotificationResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the executeBudgetAction operation.
     * @callback module:api/DefaultApi~executeBudgetActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExecuteBudgetActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Executes a budget action. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/ExecuteBudgetActionRequest} executeBudgetActionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~executeBudgetActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExecuteBudgetActionResponse}
     */
    executeBudgetAction(xAmzTarget, executeBudgetActionRequest, opts, callback) {
      opts = opts || {};
      let postBody = executeBudgetActionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling executeBudgetAction");
      }
      // verify the required parameter 'executeBudgetActionRequest' is set
      if (executeBudgetActionRequest === undefined || executeBudgetActionRequest === null) {
        throw new Error("Missing the required parameter 'executeBudgetActionRequest' when calling executeBudgetAction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExecuteBudgetActionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.ExecuteBudgetAction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBudget operation.
     * @callback module:api/DefaultApi~updateBudgetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates a budget. You can change every part of a budget except for the <code>budgetName</code> and the <code>calculatedSpend</code>. When you modify a budget, the <code>calculatedSpend</code> drops to zero until Amazon Web Services has new usage data to use for forecasting.</p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code> can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples\">Examples</a> section. </p> </important>
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateBudgetRequest} updateBudgetRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateBudgetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateBudget(xAmzTarget, updateBudgetRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateBudgetRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateBudget");
      }
      // verify the required parameter 'updateBudgetRequest' is set
      if (updateBudgetRequest === undefined || updateBudgetRequest === null) {
        throw new Error("Missing the required parameter 'updateBudgetRequest' when calling updateBudget");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBudgetAction operation.
     * @callback module:api/DefaultApi~updateBudgetActionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateBudgetActionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Updates a budget action. 
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateBudgetActionRequest} updateBudgetActionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateBudgetActionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateBudgetActionResponse}
     */
    updateBudgetAction(xAmzTarget, updateBudgetActionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateBudgetActionRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateBudgetAction");
      }
      // verify the required parameter 'updateBudgetActionRequest' is set
      if (updateBudgetActionRequest === undefined || updateBudgetActionRequest === null) {
        throw new Error("Missing the required parameter 'updateBudgetActionRequest' when calling updateBudgetAction");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateBudgetActionResponse;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNotification operation.
     * @callback module:api/DefaultApi~updateNotificationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a notification.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateNotificationRequest} updateNotificationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateNotificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateNotification(xAmzTarget, updateNotificationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateNotificationRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateNotification");
      }
      // verify the required parameter 'updateNotificationRequest' is set
      if (updateNotificationRequest === undefined || updateNotificationRequest === null) {
        throw new Error("Missing the required parameter 'updateNotificationRequest' when calling updateNotification");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSubscriber operation.
     * @callback module:api/DefaultApi~updateSubscriberCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a subscriber.
     * @param {module:model/String} xAmzTarget 
     * @param {module:model/UpdateSubscriberRequest} updateSubscriberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSubscriberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateSubscriber(xAmzTarget, updateSubscriberRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSubscriberRequest;
      // verify the required parameter 'xAmzTarget' is set
      if (xAmzTarget === undefined || xAmzTarget === null) {
        throw new Error("Missing the required parameter 'xAmzTarget' when calling updateSubscriber");
      }
      // verify the required parameter 'updateSubscriberRequest' is set
      if (updateSubscriberRequest === undefined || updateSubscriberRequest === null) {
        throw new Error("Missing the required parameter 'updateSubscriberRequest' when calling updateSubscriber");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'X-Amz-Target': xAmzTarget
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/#X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
