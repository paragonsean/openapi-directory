/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsBudgets);
  }
}(this, function(expect, AwsBudgets) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsBudgets.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createBudget', function() {
      it('should call createBudget successfully', function(done) {
        //uncomment below and update the code to test createBudget
        //instance.createBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBudgetAction', function() {
      it('should call createBudgetAction successfully', function(done) {
        //uncomment below and update the code to test createBudgetAction
        //instance.createBudgetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotification', function() {
      it('should call createNotification successfully', function(done) {
        //uncomment below and update the code to test createNotification
        //instance.createNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSubscriber', function() {
      it('should call createSubscriber successfully', function(done) {
        //uncomment below and update the code to test createSubscriber
        //instance.createSubscriber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBudget', function() {
      it('should call deleteBudget successfully', function(done) {
        //uncomment below and update the code to test deleteBudget
        //instance.deleteBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBudgetAction', function() {
      it('should call deleteBudgetAction successfully', function(done) {
        //uncomment below and update the code to test deleteBudgetAction
        //instance.deleteBudgetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotification', function() {
      it('should call deleteNotification successfully', function(done) {
        //uncomment below and update the code to test deleteNotification
        //instance.deleteNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSubscriber', function() {
      it('should call deleteSubscriber successfully', function(done) {
        //uncomment below and update the code to test deleteSubscriber
        //instance.deleteSubscriber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudget', function() {
      it('should call describeBudget successfully', function(done) {
        //uncomment below and update the code to test describeBudget
        //instance.describeBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetAction', function() {
      it('should call describeBudgetAction successfully', function(done) {
        //uncomment below and update the code to test describeBudgetAction
        //instance.describeBudgetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetActionHistories', function() {
      it('should call describeBudgetActionHistories successfully', function(done) {
        //uncomment below and update the code to test describeBudgetActionHistories
        //instance.describeBudgetActionHistories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetActionsForAccount', function() {
      it('should call describeBudgetActionsForAccount successfully', function(done) {
        //uncomment below and update the code to test describeBudgetActionsForAccount
        //instance.describeBudgetActionsForAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetActionsForBudget', function() {
      it('should call describeBudgetActionsForBudget successfully', function(done) {
        //uncomment below and update the code to test describeBudgetActionsForBudget
        //instance.describeBudgetActionsForBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetNotificationsForAccount', function() {
      it('should call describeBudgetNotificationsForAccount successfully', function(done) {
        //uncomment below and update the code to test describeBudgetNotificationsForAccount
        //instance.describeBudgetNotificationsForAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgetPerformanceHistory', function() {
      it('should call describeBudgetPerformanceHistory successfully', function(done) {
        //uncomment below and update the code to test describeBudgetPerformanceHistory
        //instance.describeBudgetPerformanceHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBudgets', function() {
      it('should call describeBudgets successfully', function(done) {
        //uncomment below and update the code to test describeBudgets
        //instance.describeBudgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeNotificationsForBudget', function() {
      it('should call describeNotificationsForBudget successfully', function(done) {
        //uncomment below and update the code to test describeNotificationsForBudget
        //instance.describeNotificationsForBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSubscribersForNotification', function() {
      it('should call describeSubscribersForNotification successfully', function(done) {
        //uncomment below and update the code to test describeSubscribersForNotification
        //instance.describeSubscribersForNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeBudgetAction', function() {
      it('should call executeBudgetAction successfully', function(done) {
        //uncomment below and update the code to test executeBudgetAction
        //instance.executeBudgetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBudget', function() {
      it('should call updateBudget successfully', function(done) {
        //uncomment below and update the code to test updateBudget
        //instance.updateBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBudgetAction', function() {
      it('should call updateBudgetAction successfully', function(done) {
        //uncomment below and update the code to test updateBudgetAction
        //instance.updateBudgetAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotification', function() {
      it('should call updateNotification successfully', function(done) {
        //uncomment below and update the code to test updateNotification
        //instance.updateNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSubscriber', function() {
      it('should call updateSubscriber successfully', function(done) {
        //uncomment below and update the code to test updateSubscriber
        //instance.updateSubscriber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
