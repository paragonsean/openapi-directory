# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.budgeted_and_actual_amounts_actual_amount import BudgetedAndActualAmountsActualAmount
from openapi_server.models.budgeted_and_actual_amounts_budgeted_amount import BudgetedAndActualAmountsBudgetedAmount
from openapi_server.models.budgeted_and_actual_amounts_time_period import BudgetedAndActualAmountsTimePeriod
from openapi_server import util


class BudgetedAndActualAmounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budgeted_amount: BudgetedAndActualAmountsBudgetedAmount=None, actual_amount: BudgetedAndActualAmountsActualAmount=None, time_period: BudgetedAndActualAmountsTimePeriod=None):
        """BudgetedAndActualAmounts - a model defined in OpenAPI

        :param budgeted_amount: The budgeted_amount of this BudgetedAndActualAmounts.
        :param actual_amount: The actual_amount of this BudgetedAndActualAmounts.
        :param time_period: The time_period of this BudgetedAndActualAmounts.
        """
        self.openapi_types = {
            'budgeted_amount': BudgetedAndActualAmountsBudgetedAmount,
            'actual_amount': BudgetedAndActualAmountsActualAmount,
            'time_period': BudgetedAndActualAmountsTimePeriod
        }

        self.attribute_map = {
            'budgeted_amount': 'BudgetedAmount',
            'actual_amount': 'ActualAmount',
            'time_period': 'TimePeriod'
        }

        self._budgeted_amount = budgeted_amount
        self._actual_amount = actual_amount
        self._time_period = time_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BudgetedAndActualAmounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BudgetedAndActualAmounts of this BudgetedAndActualAmounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budgeted_amount(self):
        """Gets the budgeted_amount of this BudgetedAndActualAmounts.


        :return: The budgeted_amount of this BudgetedAndActualAmounts.
        :rtype: BudgetedAndActualAmountsBudgetedAmount
        """
        return self._budgeted_amount

    @budgeted_amount.setter
    def budgeted_amount(self, budgeted_amount):
        """Sets the budgeted_amount of this BudgetedAndActualAmounts.


        :param budgeted_amount: The budgeted_amount of this BudgetedAndActualAmounts.
        :type budgeted_amount: BudgetedAndActualAmountsBudgetedAmount
        """

        self._budgeted_amount = budgeted_amount

    @property
    def actual_amount(self):
        """Gets the actual_amount of this BudgetedAndActualAmounts.


        :return: The actual_amount of this BudgetedAndActualAmounts.
        :rtype: BudgetedAndActualAmountsActualAmount
        """
        return self._actual_amount

    @actual_amount.setter
    def actual_amount(self, actual_amount):
        """Sets the actual_amount of this BudgetedAndActualAmounts.


        :param actual_amount: The actual_amount of this BudgetedAndActualAmounts.
        :type actual_amount: BudgetedAndActualAmountsActualAmount
        """

        self._actual_amount = actual_amount

    @property
    def time_period(self):
        """Gets the time_period of this BudgetedAndActualAmounts.


        :return: The time_period of this BudgetedAndActualAmounts.
        :rtype: BudgetedAndActualAmountsTimePeriod
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this BudgetedAndActualAmounts.


        :param time_period: The time_period of this BudgetedAndActualAmounts.
        :type time_period: BudgetedAndActualAmountsTimePeriod
        """

        self._time_period = time_period
