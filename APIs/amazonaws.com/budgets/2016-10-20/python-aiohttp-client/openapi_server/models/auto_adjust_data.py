# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_adjust_data_historical_options import AutoAdjustDataHistoricalOptions
from openapi_server.models.auto_adjust_type import AutoAdjustType
from openapi_server import util


class AutoAdjustData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_adjust_type: AutoAdjustType=None, historical_options: AutoAdjustDataHistoricalOptions=None, last_auto_adjust_time: datetime=None):
        """AutoAdjustData - a model defined in OpenAPI

        :param auto_adjust_type: The auto_adjust_type of this AutoAdjustData.
        :param historical_options: The historical_options of this AutoAdjustData.
        :param last_auto_adjust_time: The last_auto_adjust_time of this AutoAdjustData.
        """
        self.openapi_types = {
            'auto_adjust_type': AutoAdjustType,
            'historical_options': AutoAdjustDataHistoricalOptions,
            'last_auto_adjust_time': datetime
        }

        self.attribute_map = {
            'auto_adjust_type': 'AutoAdjustType',
            'historical_options': 'HistoricalOptions',
            'last_auto_adjust_time': 'LastAutoAdjustTime'
        }

        self._auto_adjust_type = auto_adjust_type
        self._historical_options = historical_options
        self._last_auto_adjust_time = last_auto_adjust_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoAdjustData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoAdjustData of this AutoAdjustData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_adjust_type(self):
        """Gets the auto_adjust_type of this AutoAdjustData.


        :return: The auto_adjust_type of this AutoAdjustData.
        :rtype: AutoAdjustType
        """
        return self._auto_adjust_type

    @auto_adjust_type.setter
    def auto_adjust_type(self, auto_adjust_type):
        """Sets the auto_adjust_type of this AutoAdjustData.


        :param auto_adjust_type: The auto_adjust_type of this AutoAdjustData.
        :type auto_adjust_type: AutoAdjustType
        """
        if auto_adjust_type is None:
            raise ValueError("Invalid value for `auto_adjust_type`, must not be `None`")

        self._auto_adjust_type = auto_adjust_type

    @property
    def historical_options(self):
        """Gets the historical_options of this AutoAdjustData.


        :return: The historical_options of this AutoAdjustData.
        :rtype: AutoAdjustDataHistoricalOptions
        """
        return self._historical_options

    @historical_options.setter
    def historical_options(self, historical_options):
        """Sets the historical_options of this AutoAdjustData.


        :param historical_options: The historical_options of this AutoAdjustData.
        :type historical_options: AutoAdjustDataHistoricalOptions
        """

        self._historical_options = historical_options

    @property
    def last_auto_adjust_time(self):
        """Gets the last_auto_adjust_time of this AutoAdjustData.


        :return: The last_auto_adjust_time of this AutoAdjustData.
        :rtype: datetime
        """
        return self._last_auto_adjust_time

    @last_auto_adjust_time.setter
    def last_auto_adjust_time(self, last_auto_adjust_time):
        """Sets the last_auto_adjust_time of this AutoAdjustData.


        :param last_auto_adjust_time: The last_auto_adjust_time of this AutoAdjustData.
        :type last_auto_adjust_time: datetime
        """

        self._last_auto_adjust_time = last_auto_adjust_time
