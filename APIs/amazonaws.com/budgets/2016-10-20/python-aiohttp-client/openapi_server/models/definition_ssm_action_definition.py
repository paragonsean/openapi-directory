# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_sub_type import ActionSubType
from openapi_server import util


class DefinitionSsmActionDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_sub_type: ActionSubType=None, region: str=None, instance_ids: List=None):
        """DefinitionSsmActionDefinition - a model defined in OpenAPI

        :param action_sub_type: The action_sub_type of this DefinitionSsmActionDefinition.
        :param region: The region of this DefinitionSsmActionDefinition.
        :param instance_ids: The instance_ids of this DefinitionSsmActionDefinition.
        """
        self.openapi_types = {
            'action_sub_type': ActionSubType,
            'region': str,
            'instance_ids': List
        }

        self.attribute_map = {
            'action_sub_type': 'ActionSubType',
            'region': 'Region',
            'instance_ids': 'InstanceIds'
        }

        self._action_sub_type = action_sub_type
        self._region = region
        self._instance_ids = instance_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefinitionSsmActionDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Definition_SsmActionDefinition of this DefinitionSsmActionDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_sub_type(self):
        """Gets the action_sub_type of this DefinitionSsmActionDefinition.


        :return: The action_sub_type of this DefinitionSsmActionDefinition.
        :rtype: ActionSubType
        """
        return self._action_sub_type

    @action_sub_type.setter
    def action_sub_type(self, action_sub_type):
        """Sets the action_sub_type of this DefinitionSsmActionDefinition.


        :param action_sub_type: The action_sub_type of this DefinitionSsmActionDefinition.
        :type action_sub_type: ActionSubType
        """
        if action_sub_type is None:
            raise ValueError("Invalid value for `action_sub_type`, must not be `None`")

        self._action_sub_type = action_sub_type

    @property
    def region(self):
        """Gets the region of this DefinitionSsmActionDefinition.


        :return: The region of this DefinitionSsmActionDefinition.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this DefinitionSsmActionDefinition.


        :param region: The region of this DefinitionSsmActionDefinition.
        :type region: str
        """
        if region is None:
            raise ValueError("Invalid value for `region`, must not be `None`")

        self._region = region

    @property
    def instance_ids(self):
        """Gets the instance_ids of this DefinitionSsmActionDefinition.


        :return: The instance_ids of this DefinitionSsmActionDefinition.
        :rtype: List
        """
        return self._instance_ids

    @instance_ids.setter
    def instance_ids(self, instance_ids):
        """Sets the instance_ids of this DefinitionSsmActionDefinition.


        :param instance_ids: The instance_ids of this DefinitionSsmActionDefinition.
        :type instance_ids: List
        """
        if instance_ids is None:
            raise ValueError("Invalid value for `instance_ids`, must not be `None`")

        self._instance_ids = instance_ids
