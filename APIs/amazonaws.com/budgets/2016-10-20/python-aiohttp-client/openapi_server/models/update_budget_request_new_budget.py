# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.budget_auto_adjust_data import BudgetAutoAdjustData
from openapi_server.models.budget_budget_limit import BudgetBudgetLimit
from openapi_server.models.budget_calculated_spend import BudgetCalculatedSpend
from openapi_server.models.budget_cost_types import BudgetCostTypes
from openapi_server.models.budget_time_period import BudgetTimePeriod
from openapi_server.models.budget_type import BudgetType
from openapi_server.models.time_unit import TimeUnit
from openapi_server import util


class UpdateBudgetRequestNewBudget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budget_name: str=None, budget_limit: BudgetBudgetLimit=None, planned_budget_limits: Dict=None, cost_filters: Dict=None, cost_types: BudgetCostTypes=None, time_unit: TimeUnit=None, time_period: BudgetTimePeriod=None, calculated_spend: BudgetCalculatedSpend=None, budget_type: BudgetType=None, last_updated_time: datetime=None, auto_adjust_data: BudgetAutoAdjustData=None):
        """UpdateBudgetRequestNewBudget - a model defined in OpenAPI

        :param budget_name: The budget_name of this UpdateBudgetRequestNewBudget.
        :param budget_limit: The budget_limit of this UpdateBudgetRequestNewBudget.
        :param planned_budget_limits: The planned_budget_limits of this UpdateBudgetRequestNewBudget.
        :param cost_filters: The cost_filters of this UpdateBudgetRequestNewBudget.
        :param cost_types: The cost_types of this UpdateBudgetRequestNewBudget.
        :param time_unit: The time_unit of this UpdateBudgetRequestNewBudget.
        :param time_period: The time_period of this UpdateBudgetRequestNewBudget.
        :param calculated_spend: The calculated_spend of this UpdateBudgetRequestNewBudget.
        :param budget_type: The budget_type of this UpdateBudgetRequestNewBudget.
        :param last_updated_time: The last_updated_time of this UpdateBudgetRequestNewBudget.
        :param auto_adjust_data: The auto_adjust_data of this UpdateBudgetRequestNewBudget.
        """
        self.openapi_types = {
            'budget_name': str,
            'budget_limit': BudgetBudgetLimit,
            'planned_budget_limits': Dict,
            'cost_filters': Dict,
            'cost_types': BudgetCostTypes,
            'time_unit': TimeUnit,
            'time_period': BudgetTimePeriod,
            'calculated_spend': BudgetCalculatedSpend,
            'budget_type': BudgetType,
            'last_updated_time': datetime,
            'auto_adjust_data': BudgetAutoAdjustData
        }

        self.attribute_map = {
            'budget_name': 'BudgetName',
            'budget_limit': 'BudgetLimit',
            'planned_budget_limits': 'PlannedBudgetLimits',
            'cost_filters': 'CostFilters',
            'cost_types': 'CostTypes',
            'time_unit': 'TimeUnit',
            'time_period': 'TimePeriod',
            'calculated_spend': 'CalculatedSpend',
            'budget_type': 'BudgetType',
            'last_updated_time': 'LastUpdatedTime',
            'auto_adjust_data': 'AutoAdjustData'
        }

        self._budget_name = budget_name
        self._budget_limit = budget_limit
        self._planned_budget_limits = planned_budget_limits
        self._cost_filters = cost_filters
        self._cost_types = cost_types
        self._time_unit = time_unit
        self._time_period = time_period
        self._calculated_spend = calculated_spend
        self._budget_type = budget_type
        self._last_updated_time = last_updated_time
        self._auto_adjust_data = auto_adjust_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBudgetRequestNewBudget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBudgetRequest_NewBudget of this UpdateBudgetRequestNewBudget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budget_name(self):
        """Gets the budget_name of this UpdateBudgetRequestNewBudget.


        :return: The budget_name of this UpdateBudgetRequestNewBudget.
        :rtype: str
        """
        return self._budget_name

    @budget_name.setter
    def budget_name(self, budget_name):
        """Sets the budget_name of this UpdateBudgetRequestNewBudget.


        :param budget_name: The budget_name of this UpdateBudgetRequestNewBudget.
        :type budget_name: str
        """
        if budget_name is None:
            raise ValueError("Invalid value for `budget_name`, must not be `None`")

        self._budget_name = budget_name

    @property
    def budget_limit(self):
        """Gets the budget_limit of this UpdateBudgetRequestNewBudget.


        :return: The budget_limit of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetBudgetLimit
        """
        return self._budget_limit

    @budget_limit.setter
    def budget_limit(self, budget_limit):
        """Sets the budget_limit of this UpdateBudgetRequestNewBudget.


        :param budget_limit: The budget_limit of this UpdateBudgetRequestNewBudget.
        :type budget_limit: BudgetBudgetLimit
        """

        self._budget_limit = budget_limit

    @property
    def planned_budget_limits(self):
        """Gets the planned_budget_limits of this UpdateBudgetRequestNewBudget.


        :return: The planned_budget_limits of this UpdateBudgetRequestNewBudget.
        :rtype: Dict
        """
        return self._planned_budget_limits

    @planned_budget_limits.setter
    def planned_budget_limits(self, planned_budget_limits):
        """Sets the planned_budget_limits of this UpdateBudgetRequestNewBudget.


        :param planned_budget_limits: The planned_budget_limits of this UpdateBudgetRequestNewBudget.
        :type planned_budget_limits: Dict
        """

        self._planned_budget_limits = planned_budget_limits

    @property
    def cost_filters(self):
        """Gets the cost_filters of this UpdateBudgetRequestNewBudget.


        :return: The cost_filters of this UpdateBudgetRequestNewBudget.
        :rtype: Dict
        """
        return self._cost_filters

    @cost_filters.setter
    def cost_filters(self, cost_filters):
        """Sets the cost_filters of this UpdateBudgetRequestNewBudget.


        :param cost_filters: The cost_filters of this UpdateBudgetRequestNewBudget.
        :type cost_filters: Dict
        """

        self._cost_filters = cost_filters

    @property
    def cost_types(self):
        """Gets the cost_types of this UpdateBudgetRequestNewBudget.


        :return: The cost_types of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetCostTypes
        """
        return self._cost_types

    @cost_types.setter
    def cost_types(self, cost_types):
        """Sets the cost_types of this UpdateBudgetRequestNewBudget.


        :param cost_types: The cost_types of this UpdateBudgetRequestNewBudget.
        :type cost_types: BudgetCostTypes
        """

        self._cost_types = cost_types

    @property
    def time_unit(self):
        """Gets the time_unit of this UpdateBudgetRequestNewBudget.


        :return: The time_unit of this UpdateBudgetRequestNewBudget.
        :rtype: TimeUnit
        """
        return self._time_unit

    @time_unit.setter
    def time_unit(self, time_unit):
        """Sets the time_unit of this UpdateBudgetRequestNewBudget.


        :param time_unit: The time_unit of this UpdateBudgetRequestNewBudget.
        :type time_unit: TimeUnit
        """
        if time_unit is None:
            raise ValueError("Invalid value for `time_unit`, must not be `None`")

        self._time_unit = time_unit

    @property
    def time_period(self):
        """Gets the time_period of this UpdateBudgetRequestNewBudget.


        :return: The time_period of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetTimePeriod
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this UpdateBudgetRequestNewBudget.


        :param time_period: The time_period of this UpdateBudgetRequestNewBudget.
        :type time_period: BudgetTimePeriod
        """

        self._time_period = time_period

    @property
    def calculated_spend(self):
        """Gets the calculated_spend of this UpdateBudgetRequestNewBudget.


        :return: The calculated_spend of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetCalculatedSpend
        """
        return self._calculated_spend

    @calculated_spend.setter
    def calculated_spend(self, calculated_spend):
        """Sets the calculated_spend of this UpdateBudgetRequestNewBudget.


        :param calculated_spend: The calculated_spend of this UpdateBudgetRequestNewBudget.
        :type calculated_spend: BudgetCalculatedSpend
        """

        self._calculated_spend = calculated_spend

    @property
    def budget_type(self):
        """Gets the budget_type of this UpdateBudgetRequestNewBudget.


        :return: The budget_type of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetType
        """
        return self._budget_type

    @budget_type.setter
    def budget_type(self, budget_type):
        """Sets the budget_type of this UpdateBudgetRequestNewBudget.


        :param budget_type: The budget_type of this UpdateBudgetRequestNewBudget.
        :type budget_type: BudgetType
        """
        if budget_type is None:
            raise ValueError("Invalid value for `budget_type`, must not be `None`")

        self._budget_type = budget_type

    @property
    def last_updated_time(self):
        """Gets the last_updated_time of this UpdateBudgetRequestNewBudget.


        :return: The last_updated_time of this UpdateBudgetRequestNewBudget.
        :rtype: datetime
        """
        return self._last_updated_time

    @last_updated_time.setter
    def last_updated_time(self, last_updated_time):
        """Sets the last_updated_time of this UpdateBudgetRequestNewBudget.


        :param last_updated_time: The last_updated_time of this UpdateBudgetRequestNewBudget.
        :type last_updated_time: datetime
        """

        self._last_updated_time = last_updated_time

    @property
    def auto_adjust_data(self):
        """Gets the auto_adjust_data of this UpdateBudgetRequestNewBudget.


        :return: The auto_adjust_data of this UpdateBudgetRequestNewBudget.
        :rtype: BudgetAutoAdjustData
        """
        return self._auto_adjust_data

    @auto_adjust_data.setter
    def auto_adjust_data(self, auto_adjust_data):
        """Sets the auto_adjust_data of this UpdateBudgetRequestNewBudget.


        :param auto_adjust_data: The auto_adjust_data of this UpdateBudgetRequestNewBudget.
        :type auto_adjust_data: BudgetAutoAdjustData
        """

        self._auto_adjust_data = auto_adjust_data
