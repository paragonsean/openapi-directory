# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DefinitionScpActionDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_id: str=None, target_ids: List=None):
        """DefinitionScpActionDefinition - a model defined in OpenAPI

        :param policy_id: The policy_id of this DefinitionScpActionDefinition.
        :param target_ids: The target_ids of this DefinitionScpActionDefinition.
        """
        self.openapi_types = {
            'policy_id': str,
            'target_ids': List
        }

        self.attribute_map = {
            'policy_id': 'PolicyId',
            'target_ids': 'TargetIds'
        }

        self._policy_id = policy_id
        self._target_ids = target_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefinitionScpActionDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Definition_ScpActionDefinition of this DefinitionScpActionDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_id(self):
        """Gets the policy_id of this DefinitionScpActionDefinition.


        :return: The policy_id of this DefinitionScpActionDefinition.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this DefinitionScpActionDefinition.


        :param policy_id: The policy_id of this DefinitionScpActionDefinition.
        :type policy_id: str
        """
        if policy_id is None:
            raise ValueError("Invalid value for `policy_id`, must not be `None`")

        self._policy_id = policy_id

    @property
    def target_ids(self):
        """Gets the target_ids of this DefinitionScpActionDefinition.


        :return: The target_ids of this DefinitionScpActionDefinition.
        :rtype: List
        """
        return self._target_ids

    @target_ids.setter
    def target_ids(self, target_ids):
        """Sets the target_ids of this DefinitionScpActionDefinition.


        :param target_ids: The target_ids of this DefinitionScpActionDefinition.
        :type target_ids: List
        """
        if target_ids is None:
            raise ValueError("Invalid value for `target_ids`, must not be `None`")

        self._target_ids = target_ids
