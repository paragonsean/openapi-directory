/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory.h
 *
 * 
 */

#ifndef OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory_H
#define OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory_H

#include <QJsonObject>

#include "OAIBudgetPerformanceHistory_CostTypes.h"
#include "OAIBudgetType.h"
#include "OAITimeUnit.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBudgetPerformanceHistory_CostTypes;

class OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory : public OAIObject {
public:
    OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory();
    OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory(QString json);
    ~OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBudgetName() const;
    void setBudgetName(const QString &budget_name);
    bool is_budget_name_Set() const;
    bool is_budget_name_Valid() const;

    OAIBudgetType getBudgetType() const;
    void setBudgetType(const OAIBudgetType &budget_type);
    bool is_budget_type_Set() const;
    bool is_budget_type_Valid() const;

    QMap getCostFilters() const;
    void setCostFilters(const QMap &cost_filters);
    bool is_cost_filters_Set() const;
    bool is_cost_filters_Valid() const;

    OAIBudgetPerformanceHistory_CostTypes getCostTypes() const;
    void setCostTypes(const OAIBudgetPerformanceHistory_CostTypes &cost_types);
    bool is_cost_types_Set() const;
    bool is_cost_types_Valid() const;

    OAITimeUnit getTimeUnit() const;
    void setTimeUnit(const OAITimeUnit &time_unit);
    bool is_time_unit_Set() const;
    bool is_time_unit_Valid() const;

    QList getBudgetedAndActualAmountsList() const;
    void setBudgetedAndActualAmountsList(const QList &budgeted_and_actual_amounts_list);
    bool is_budgeted_and_actual_amounts_list_Set() const;
    bool is_budgeted_and_actual_amounts_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_budget_name;
    bool m_budget_name_isSet;
    bool m_budget_name_isValid;

    OAIBudgetType m_budget_type;
    bool m_budget_type_isSet;
    bool m_budget_type_isValid;

    QMap m_cost_filters;
    bool m_cost_filters_isSet;
    bool m_cost_filters_isValid;

    OAIBudgetPerformanceHistory_CostTypes m_cost_types;
    bool m_cost_types_isSet;
    bool m_cost_types_isValid;

    OAITimeUnit m_time_unit;
    bool m_time_unit_isSet;
    bool m_time_unit_isValid;

    QList m_budgeted_and_actual_amounts_list;
    bool m_budgeted_and_actual_amounts_list_isSet;
    bool m_budgeted_and_actual_amounts_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory)

#endif // OAIDescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory_H
