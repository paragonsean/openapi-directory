/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSubscriberRequest.h
 *
 *  Request of UpdateSubscriber 
 */

#ifndef OAIUpdateSubscriberRequest_H
#define OAIUpdateSubscriberRequest_H

#include <QJsonObject>

#include "OAIUpdateSubscriberRequest_NewSubscriber.h"
#include "OAIUpdateSubscriberRequest_Notification.h"
#include "OAIUpdateSubscriberRequest_OldSubscriber.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateSubscriberRequest_Notification;
class OAIUpdateSubscriberRequest_OldSubscriber;
class OAIUpdateSubscriberRequest_NewSubscriber;

class OAIUpdateSubscriberRequest : public OAIObject {
public:
    OAIUpdateSubscriberRequest();
    OAIUpdateSubscriberRequest(QString json);
    ~OAIUpdateSubscriberRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getBudgetName() const;
    void setBudgetName(const QString &budget_name);
    bool is_budget_name_Set() const;
    bool is_budget_name_Valid() const;

    OAIUpdateSubscriberRequest_Notification getNotification() const;
    void setNotification(const OAIUpdateSubscriberRequest_Notification &notification);
    bool is_notification_Set() const;
    bool is_notification_Valid() const;

    OAIUpdateSubscriberRequest_OldSubscriber getOldSubscriber() const;
    void setOldSubscriber(const OAIUpdateSubscriberRequest_OldSubscriber &old_subscriber);
    bool is_old_subscriber_Set() const;
    bool is_old_subscriber_Valid() const;

    OAIUpdateSubscriberRequest_NewSubscriber getNewSubscriber() const;
    void setNewSubscriber(const OAIUpdateSubscriberRequest_NewSubscriber &new_subscriber);
    bool is_new_subscriber_Set() const;
    bool is_new_subscriber_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_budget_name;
    bool m_budget_name_isSet;
    bool m_budget_name_isValid;

    OAIUpdateSubscriberRequest_Notification m_notification;
    bool m_notification_isSet;
    bool m_notification_isValid;

    OAIUpdateSubscriberRequest_OldSubscriber m_old_subscriber;
    bool m_old_subscriber_isSet;
    bool m_old_subscriber_isValid;

    OAIUpdateSubscriberRequest_NewSubscriber m_new_subscriber;
    bool m_new_subscriber_isSet;
    bool m_new_subscriber_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSubscriberRequest)

#endif // OAIUpdateSubscriberRequest_H
