/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBudgetActionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBudgetActionRequest::OAICreateBudgetActionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBudgetActionRequest::OAICreateBudgetActionRequest() {
    this->initializeModel();
}

OAICreateBudgetActionRequest::~OAICreateBudgetActionRequest() {}

void OAICreateBudgetActionRequest::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_budget_name_isSet = false;
    m_budget_name_isValid = false;

    m_notification_type_isSet = false;
    m_notification_type_isValid = false;

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_action_threshold_isSet = false;
    m_action_threshold_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_execution_role_arn_isSet = false;
    m_execution_role_arn_isValid = false;

    m_approval_model_isSet = false;
    m_approval_model_isValid = false;

    m_subscribers_isSet = false;
    m_subscribers_isValid = false;
}

void OAICreateBudgetActionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBudgetActionRequest::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("AccountId")]);
    m_account_id_isSet = !json[QString("AccountId")].isNull() && m_account_id_isValid;

    m_budget_name_isValid = ::OpenAPI::fromJsonValue(m_budget_name, json[QString("BudgetName")]);
    m_budget_name_isSet = !json[QString("BudgetName")].isNull() && m_budget_name_isValid;

    m_notification_type_isValid = ::OpenAPI::fromJsonValue(m_notification_type, json[QString("NotificationType")]);
    m_notification_type_isSet = !json[QString("NotificationType")].isNull() && m_notification_type_isValid;

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("ActionType")]);
    m_action_type_isSet = !json[QString("ActionType")].isNull() && m_action_type_isValid;

    m_action_threshold_isValid = ::OpenAPI::fromJsonValue(m_action_threshold, json[QString("ActionThreshold")]);
    m_action_threshold_isSet = !json[QString("ActionThreshold")].isNull() && m_action_threshold_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("Definition")]);
    m_definition_isSet = !json[QString("Definition")].isNull() && m_definition_isValid;

    m_execution_role_arn_isValid = ::OpenAPI::fromJsonValue(m_execution_role_arn, json[QString("ExecutionRoleArn")]);
    m_execution_role_arn_isSet = !json[QString("ExecutionRoleArn")].isNull() && m_execution_role_arn_isValid;

    m_approval_model_isValid = ::OpenAPI::fromJsonValue(m_approval_model, json[QString("ApprovalModel")]);
    m_approval_model_isSet = !json[QString("ApprovalModel")].isNull() && m_approval_model_isValid;

    m_subscribers_isValid = ::OpenAPI::fromJsonValue(m_subscribers, json[QString("Subscribers")]);
    m_subscribers_isSet = !json[QString("Subscribers")].isNull() && m_subscribers_isValid;
}

QString OAICreateBudgetActionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBudgetActionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("AccountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_budget_name_isSet) {
        obj.insert(QString("BudgetName"), ::OpenAPI::toJsonValue(m_budget_name));
    }
    if (m_notification_type.isSet()) {
        obj.insert(QString("NotificationType"), ::OpenAPI::toJsonValue(m_notification_type));
    }
    if (m_action_type.isSet()) {
        obj.insert(QString("ActionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_action_threshold.isSet()) {
        obj.insert(QString("ActionThreshold"), ::OpenAPI::toJsonValue(m_action_threshold));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("Definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_execution_role_arn_isSet) {
        obj.insert(QString("ExecutionRoleArn"), ::OpenAPI::toJsonValue(m_execution_role_arn));
    }
    if (m_approval_model.isSet()) {
        obj.insert(QString("ApprovalModel"), ::OpenAPI::toJsonValue(m_approval_model));
    }
    if (m_subscribers.size() > 0) {
        obj.insert(QString("Subscribers"), ::OpenAPI::toJsonValue(m_subscribers));
    }
    return obj;
}

QString OAICreateBudgetActionRequest::getAccountId() const {
    return m_account_id;
}
void OAICreateBudgetActionRequest::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreateBudgetActionRequest::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreateBudgetActionRequest::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreateBudgetActionRequest::getBudgetName() const {
    return m_budget_name;
}
void OAICreateBudgetActionRequest::setBudgetName(const QString &budget_name) {
    m_budget_name = budget_name;
    m_budget_name_isSet = true;
}

bool OAICreateBudgetActionRequest::is_budget_name_Set() const{
    return m_budget_name_isSet;
}

bool OAICreateBudgetActionRequest::is_budget_name_Valid() const{
    return m_budget_name_isValid;
}

OAINotificationType OAICreateBudgetActionRequest::getNotificationType() const {
    return m_notification_type;
}
void OAICreateBudgetActionRequest::setNotificationType(const OAINotificationType &notification_type) {
    m_notification_type = notification_type;
    m_notification_type_isSet = true;
}

bool OAICreateBudgetActionRequest::is_notification_type_Set() const{
    return m_notification_type_isSet;
}

bool OAICreateBudgetActionRequest::is_notification_type_Valid() const{
    return m_notification_type_isValid;
}

OAIActionType OAICreateBudgetActionRequest::getActionType() const {
    return m_action_type;
}
void OAICreateBudgetActionRequest::setActionType(const OAIActionType &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAICreateBudgetActionRequest::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAICreateBudgetActionRequest::is_action_type_Valid() const{
    return m_action_type_isValid;
}

OAIActionThreshold OAICreateBudgetActionRequest::getActionThreshold() const {
    return m_action_threshold;
}
void OAICreateBudgetActionRequest::setActionThreshold(const OAIActionThreshold &action_threshold) {
    m_action_threshold = action_threshold;
    m_action_threshold_isSet = true;
}

bool OAICreateBudgetActionRequest::is_action_threshold_Set() const{
    return m_action_threshold_isSet;
}

bool OAICreateBudgetActionRequest::is_action_threshold_Valid() const{
    return m_action_threshold_isValid;
}

OAIDefinition OAICreateBudgetActionRequest::getDefinition() const {
    return m_definition;
}
void OAICreateBudgetActionRequest::setDefinition(const OAIDefinition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAICreateBudgetActionRequest::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAICreateBudgetActionRequest::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAICreateBudgetActionRequest::getExecutionRoleArn() const {
    return m_execution_role_arn;
}
void OAICreateBudgetActionRequest::setExecutionRoleArn(const QString &execution_role_arn) {
    m_execution_role_arn = execution_role_arn;
    m_execution_role_arn_isSet = true;
}

bool OAICreateBudgetActionRequest::is_execution_role_arn_Set() const{
    return m_execution_role_arn_isSet;
}

bool OAICreateBudgetActionRequest::is_execution_role_arn_Valid() const{
    return m_execution_role_arn_isValid;
}

OAIApprovalModel OAICreateBudgetActionRequest::getApprovalModel() const {
    return m_approval_model;
}
void OAICreateBudgetActionRequest::setApprovalModel(const OAIApprovalModel &approval_model) {
    m_approval_model = approval_model;
    m_approval_model_isSet = true;
}

bool OAICreateBudgetActionRequest::is_approval_model_Set() const{
    return m_approval_model_isSet;
}

bool OAICreateBudgetActionRequest::is_approval_model_Valid() const{
    return m_approval_model_isValid;
}

QList<OAISubscriber> OAICreateBudgetActionRequest::getSubscribers() const {
    return m_subscribers;
}
void OAICreateBudgetActionRequest::setSubscribers(const QList<OAISubscriber> &subscribers) {
    m_subscribers = subscribers;
    m_subscribers_isSet = true;
}

bool OAICreateBudgetActionRequest::is_subscribers_Set() const{
    return m_subscribers_isSet;
}

bool OAICreateBudgetActionRequest::is_subscribers_Valid() const{
    return m_subscribers_isValid;
}

bool OAICreateBudgetActionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_threshold.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscribers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBudgetActionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_budget_name_isValid && m_notification_type_isValid && m_action_type_isValid && m_action_threshold_isValid && m_definition_isValid && m_execution_role_arn_isValid && m_approval_model_isValid && m_subscribers_isValid && true;
}

} // namespace OpenAPI
