/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBudgetPerformanceHistory_CostTypes.h
 *
 * 
 */

#ifndef OAIBudgetPerformanceHistory_CostTypes_H
#define OAIBudgetPerformanceHistory_CostTypes_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBudgetPerformanceHistory_CostTypes : public OAIObject {
public:
    OAIBudgetPerformanceHistory_CostTypes();
    OAIBudgetPerformanceHistory_CostTypes(QString json);
    ~OAIBudgetPerformanceHistory_CostTypes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getIncludeTax() const;
    void setIncludeTax(const bool &include_tax);
    bool is_include_tax_Set() const;
    bool is_include_tax_Valid() const;

    bool getIncludeSubscription() const;
    void setIncludeSubscription(const bool &include_subscription);
    bool is_include_subscription_Set() const;
    bool is_include_subscription_Valid() const;

    bool getUseBlended() const;
    void setUseBlended(const bool &use_blended);
    bool is_use_blended_Set() const;
    bool is_use_blended_Valid() const;

    bool getIncludeRefund() const;
    void setIncludeRefund(const bool &include_refund);
    bool is_include_refund_Set() const;
    bool is_include_refund_Valid() const;

    bool getIncludeCredit() const;
    void setIncludeCredit(const bool &include_credit);
    bool is_include_credit_Set() const;
    bool is_include_credit_Valid() const;

    bool getIncludeUpfront() const;
    void setIncludeUpfront(const bool &include_upfront);
    bool is_include_upfront_Set() const;
    bool is_include_upfront_Valid() const;

    bool getIncludeRecurring() const;
    void setIncludeRecurring(const bool &include_recurring);
    bool is_include_recurring_Set() const;
    bool is_include_recurring_Valid() const;

    bool getIncludeOtherSubscription() const;
    void setIncludeOtherSubscription(const bool &include_other_subscription);
    bool is_include_other_subscription_Set() const;
    bool is_include_other_subscription_Valid() const;

    bool getIncludeSupport() const;
    void setIncludeSupport(const bool &include_support);
    bool is_include_support_Set() const;
    bool is_include_support_Valid() const;

    bool getIncludeDiscount() const;
    void setIncludeDiscount(const bool &include_discount);
    bool is_include_discount_Set() const;
    bool is_include_discount_Valid() const;

    bool getUseAmortized() const;
    void setUseAmortized(const bool &use_amortized);
    bool is_use_amortized_Set() const;
    bool is_use_amortized_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_include_tax;
    bool m_include_tax_isSet;
    bool m_include_tax_isValid;

    bool m_include_subscription;
    bool m_include_subscription_isSet;
    bool m_include_subscription_isValid;

    bool m_use_blended;
    bool m_use_blended_isSet;
    bool m_use_blended_isValid;

    bool m_include_refund;
    bool m_include_refund_isSet;
    bool m_include_refund_isValid;

    bool m_include_credit;
    bool m_include_credit_isSet;
    bool m_include_credit_isValid;

    bool m_include_upfront;
    bool m_include_upfront_isSet;
    bool m_include_upfront_isValid;

    bool m_include_recurring;
    bool m_include_recurring_isSet;
    bool m_include_recurring_isValid;

    bool m_include_other_subscription;
    bool m_include_other_subscription_isSet;
    bool m_include_other_subscription_isValid;

    bool m_include_support;
    bool m_include_support_isSet;
    bool m_include_support_isValid;

    bool m_include_discount;
    bool m_include_discount_isSet;
    bool m_include_discount_isValid;

    bool m_use_amortized;
    bool m_use_amortized_isSet;
    bool m_use_amortized_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBudgetPerformanceHistory_CostTypes)

#endif // OAIBudgetPerformanceHistory_CostTypes_H
