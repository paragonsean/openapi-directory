/**
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecuteBudgetActionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecuteBudgetActionResponse::OAIExecuteBudgetActionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecuteBudgetActionResponse::OAIExecuteBudgetActionResponse() {
    this->initializeModel();
}

OAIExecuteBudgetActionResponse::~OAIExecuteBudgetActionResponse() {}

void OAIExecuteBudgetActionResponse::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_budget_name_isSet = false;
    m_budget_name_isValid = false;

    m_action_id_isSet = false;
    m_action_id_isValid = false;

    m_execution_type_isSet = false;
    m_execution_type_isValid = false;
}

void OAIExecuteBudgetActionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecuteBudgetActionResponse::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("AccountId")]);
    m_account_id_isSet = !json[QString("AccountId")].isNull() && m_account_id_isValid;

    m_budget_name_isValid = ::OpenAPI::fromJsonValue(m_budget_name, json[QString("BudgetName")]);
    m_budget_name_isSet = !json[QString("BudgetName")].isNull() && m_budget_name_isValid;

    m_action_id_isValid = ::OpenAPI::fromJsonValue(m_action_id, json[QString("ActionId")]);
    m_action_id_isSet = !json[QString("ActionId")].isNull() && m_action_id_isValid;

    m_execution_type_isValid = ::OpenAPI::fromJsonValue(m_execution_type, json[QString("ExecutionType")]);
    m_execution_type_isSet = !json[QString("ExecutionType")].isNull() && m_execution_type_isValid;
}

QString OAIExecuteBudgetActionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecuteBudgetActionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("AccountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_budget_name_isSet) {
        obj.insert(QString("BudgetName"), ::OpenAPI::toJsonValue(m_budget_name));
    }
    if (m_action_id_isSet) {
        obj.insert(QString("ActionId"), ::OpenAPI::toJsonValue(m_action_id));
    }
    if (m_execution_type.isSet()) {
        obj.insert(QString("ExecutionType"), ::OpenAPI::toJsonValue(m_execution_type));
    }
    return obj;
}

QString OAIExecuteBudgetActionResponse::getAccountId() const {
    return m_account_id;
}
void OAIExecuteBudgetActionResponse::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIExecuteBudgetActionResponse::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIExecuteBudgetActionResponse::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIExecuteBudgetActionResponse::getBudgetName() const {
    return m_budget_name;
}
void OAIExecuteBudgetActionResponse::setBudgetName(const QString &budget_name) {
    m_budget_name = budget_name;
    m_budget_name_isSet = true;
}

bool OAIExecuteBudgetActionResponse::is_budget_name_Set() const{
    return m_budget_name_isSet;
}

bool OAIExecuteBudgetActionResponse::is_budget_name_Valid() const{
    return m_budget_name_isValid;
}

QString OAIExecuteBudgetActionResponse::getActionId() const {
    return m_action_id;
}
void OAIExecuteBudgetActionResponse::setActionId(const QString &action_id) {
    m_action_id = action_id;
    m_action_id_isSet = true;
}

bool OAIExecuteBudgetActionResponse::is_action_id_Set() const{
    return m_action_id_isSet;
}

bool OAIExecuteBudgetActionResponse::is_action_id_Valid() const{
    return m_action_id_isValid;
}

OAIExecutionType OAIExecuteBudgetActionResponse::getExecutionType() const {
    return m_execution_type;
}
void OAIExecuteBudgetActionResponse::setExecutionType(const OAIExecutionType &execution_type) {
    m_execution_type = execution_type;
    m_execution_type_isSet = true;
}

bool OAIExecuteBudgetActionResponse::is_execution_type_Set() const{
    return m_execution_type_isSet;
}

bool OAIExecuteBudgetActionResponse::is_execution_type_Valid() const{
    return m_execution_type_isValid;
}

bool OAIExecuteBudgetActionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecuteBudgetActionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_budget_name_isValid && m_action_id_isValid && m_execution_type_isValid && true;
}

} // namespace OpenAPI
