/*
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateBudgetActionRequest;
import org.openapitools.client.model.CreateBudgetActionResponse;
import org.openapitools.client.model.CreateBudgetRequest;
import org.openapitools.client.model.CreateNotificationRequest;
import org.openapitools.client.model.CreateSubscriberRequest;
import org.openapitools.client.model.DeleteBudgetActionRequest;
import org.openapitools.client.model.DeleteBudgetActionResponse;
import org.openapitools.client.model.DeleteBudgetRequest;
import org.openapitools.client.model.DeleteNotificationRequest;
import org.openapitools.client.model.DeleteSubscriberRequest;
import org.openapitools.client.model.DescribeBudgetActionHistoriesRequest;
import org.openapitools.client.model.DescribeBudgetActionHistoriesResponse;
import org.openapitools.client.model.DescribeBudgetActionRequest;
import org.openapitools.client.model.DescribeBudgetActionResponse;
import org.openapitools.client.model.DescribeBudgetActionsForAccountRequest;
import org.openapitools.client.model.DescribeBudgetActionsForAccountResponse;
import org.openapitools.client.model.DescribeBudgetActionsForBudgetRequest;
import org.openapitools.client.model.DescribeBudgetActionsForBudgetResponse;
import org.openapitools.client.model.DescribeBudgetNotificationsForAccountRequest;
import org.openapitools.client.model.DescribeBudgetNotificationsForAccountResponse;
import org.openapitools.client.model.DescribeBudgetPerformanceHistoryRequest;
import org.openapitools.client.model.DescribeBudgetPerformanceHistoryResponse;
import org.openapitools.client.model.DescribeBudgetRequest;
import org.openapitools.client.model.DescribeBudgetResponse;
import org.openapitools.client.model.DescribeBudgetsRequest;
import org.openapitools.client.model.DescribeBudgetsResponse;
import org.openapitools.client.model.DescribeNotificationsForBudgetRequest;
import org.openapitools.client.model.DescribeNotificationsForBudgetResponse;
import org.openapitools.client.model.DescribeSubscribersForNotificationRequest;
import org.openapitools.client.model.DescribeSubscribersForNotificationResponse;
import org.openapitools.client.model.ExecuteBudgetActionRequest;
import org.openapitools.client.model.ExecuteBudgetActionResponse;
import org.openapitools.client.model.UpdateBudgetActionRequest;
import org.openapitools.client.model.UpdateBudgetActionResponse;
import org.openapitools.client.model.UpdateBudgetRequest;
import org.openapitools.client.model.UpdateNotificationRequest;
import org.openapitools.client.model.UpdateSubscriberRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates a budget and, if included, notifications and subscribers. &lt;/p&gt; &lt;important&gt; &lt;p&gt;Only one of &lt;code&gt;BudgetLimit&lt;/code&gt; or &lt;code&gt;PlannedBudgetLimits&lt;/code&gt; can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the &lt;code&gt;BudgetLimit&lt;/code&gt; syntax. For &lt;code&gt;PlannedBudgetLimits&lt;/code&gt;, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples\&quot;&gt;Examples&lt;/a&gt; section. &lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBudgetTest() throws ApiException {
        String xAmzTarget = null;
        CreateBudgetRequest createBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createBudget(xAmzTarget, createBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a budget action. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBudgetActionTest() throws ApiException {
        String xAmzTarget = null;
        CreateBudgetActionRequest createBudgetActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBudgetActionResponse response = api.createBudgetAction(xAmzTarget, createBudgetActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a notification. You must create the budget before you create the associated notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNotificationTest() throws ApiException {
        String xAmzTarget = null;
        CreateNotificationRequest createNotificationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createNotification(xAmzTarget, createNotificationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a subscriber. You must create the associated budget and notification before you create the subscriber.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSubscriberTest() throws ApiException {
        String xAmzTarget = null;
        CreateSubscriberRequest createSubscriberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createSubscriber(xAmzTarget, createSubscriberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a budget. You can delete your budget at any time.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Deleting a budget also deletes the notifications and subscribers that are associated with that budget.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBudgetTest() throws ApiException {
        String xAmzTarget = null;
        DeleteBudgetRequest deleteBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteBudget(xAmzTarget, deleteBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a budget action. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBudgetActionTest() throws ApiException {
        String xAmzTarget = null;
        DeleteBudgetActionRequest deleteBudgetActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteBudgetActionResponse response = api.deleteBudgetAction(xAmzTarget, deleteBudgetActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a notification.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Deleting a notification also deletes the subscribers that are associated with the notification.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNotificationTest() throws ApiException {
        String xAmzTarget = null;
        DeleteNotificationRequest deleteNotificationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteNotification(xAmzTarget, deleteNotificationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a subscriber.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Deleting the last subscriber to a notification also deletes the notification.&lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSubscriberTest() throws ApiException {
        String xAmzTarget = null;
        DeleteSubscriberRequest deleteSubscriberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSubscriber(xAmzTarget, deleteSubscriberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a budget.&lt;/p&gt; &lt;important&gt; &lt;p&gt;The Request Syntax section shows the &lt;code&gt;BudgetLimit&lt;/code&gt; syntax. For &lt;code&gt;PlannedBudgetLimits&lt;/code&gt;, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples\&quot;&gt;Examples&lt;/a&gt; section. &lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetRequest describeBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeBudgetResponse response = api.describeBudget(xAmzTarget, describeBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Describes a budget action detail. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetActionTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetActionRequest describeBudgetActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeBudgetActionResponse response = api.describeBudgetAction(xAmzTarget, describeBudgetActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Describes a budget action history detail. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetActionHistoriesTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetActionHistoriesRequest describeBudgetActionHistoriesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetActionHistoriesResponse response = api.describeBudgetActionHistories(xAmzTarget, describeBudgetActionHistoriesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Describes all of the budget actions for an account. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetActionsForAccountTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetActionsForAccountRequest describeBudgetActionsForAccountRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetActionsForAccountResponse response = api.describeBudgetActionsForAccount(xAmzTarget, describeBudgetActionsForAccountRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Describes all of the budget actions for a budget. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetActionsForBudgetTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetActionsForBudgetRequest describeBudgetActionsForBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetActionsForBudgetResponse response = api.describeBudgetActionsForBudget(xAmzTarget, describeBudgetActionsForBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Lists the budget names and notifications that are associated with an account. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetNotificationsForAccountTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetNotificationsForAccountRequest describeBudgetNotificationsForAccountRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetNotificationsForAccountResponse response = api.describeBudgetNotificationsForAccount(xAmzTarget, describeBudgetNotificationsForAccountRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Describes the history for &lt;code&gt;DAILY&lt;/code&gt;, &lt;code&gt;MONTHLY&lt;/code&gt;, and &lt;code&gt;QUARTERLY&lt;/code&gt; budgets. Budget history isn&#39;t available for &lt;code&gt;ANNUAL&lt;/code&gt; budgets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetPerformanceHistoryTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetPerformanceHistoryRequest describeBudgetPerformanceHistoryRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetPerformanceHistoryResponse response = api.describeBudgetPerformanceHistory(xAmzTarget, describeBudgetPerformanceHistoryRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists the budgets that are associated with an account.&lt;/p&gt; &lt;important&gt; &lt;p&gt;The Request Syntax section shows the &lt;code&gt;BudgetLimit&lt;/code&gt; syntax. For &lt;code&gt;PlannedBudgetLimits&lt;/code&gt;, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples\&quot;&gt;Examples&lt;/a&gt; section. &lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeBudgetsTest() throws ApiException {
        String xAmzTarget = null;
        DescribeBudgetsRequest describeBudgetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeBudgetsResponse response = api.describeBudgets(xAmzTarget, describeBudgetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the notifications that are associated with a budget.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeNotificationsForBudgetTest() throws ApiException {
        String xAmzTarget = null;
        DescribeNotificationsForBudgetRequest describeNotificationsForBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeNotificationsForBudgetResponse response = api.describeNotificationsForBudget(xAmzTarget, describeNotificationsForBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the subscribers that are associated with a notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeSubscribersForNotificationTest() throws ApiException {
        String xAmzTarget = null;
        DescribeSubscribersForNotificationRequest describeSubscribersForNotificationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeSubscribersForNotificationResponse response = api.describeSubscribersForNotification(xAmzTarget, describeSubscribersForNotificationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     *  Executes a budget action. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeBudgetActionTest() throws ApiException {
        String xAmzTarget = null;
        ExecuteBudgetActionRequest executeBudgetActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ExecuteBudgetActionResponse response = api.executeBudgetAction(xAmzTarget, executeBudgetActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates a budget. You can change every part of a budget except for the &lt;code&gt;budgetName&lt;/code&gt; and the &lt;code&gt;calculatedSpend&lt;/code&gt;. When you modify a budget, the &lt;code&gt;calculatedSpend&lt;/code&gt; drops to zero until Amazon Web Services has new usage data to use for forecasting.&lt;/p&gt; &lt;important&gt; &lt;p&gt;Only one of &lt;code&gt;BudgetLimit&lt;/code&gt; or &lt;code&gt;PlannedBudgetLimits&lt;/code&gt; can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the &lt;code&gt;BudgetLimit&lt;/code&gt; syntax. For &lt;code&gt;PlannedBudgetLimits&lt;/code&gt;, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples\&quot;&gt;Examples&lt;/a&gt; section. &lt;/p&gt; &lt;/important&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBudgetTest() throws ApiException {
        String xAmzTarget = null;
        UpdateBudgetRequest updateBudgetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateBudget(xAmzTarget, updateBudgetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Updates a budget action. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBudgetActionTest() throws ApiException {
        String xAmzTarget = null;
        UpdateBudgetActionRequest updateBudgetActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateBudgetActionResponse response = api.updateBudgetAction(xAmzTarget, updateBudgetActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a notification.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotificationTest() throws ApiException {
        String xAmzTarget = null;
        UpdateNotificationRequest updateNotificationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateNotification(xAmzTarget, updateNotificationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a subscriber.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscriberTest() throws ApiException {
        String xAmzTarget = null;
        UpdateSubscriberRequest updateSubscriberRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.updateSubscriber(xAmzTarget, updateSubscriberRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
