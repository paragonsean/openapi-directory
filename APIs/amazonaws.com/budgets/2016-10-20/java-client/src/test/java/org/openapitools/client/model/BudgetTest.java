/*
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.BudgetAutoAdjustData;
import org.openapitools.client.model.BudgetBudgetLimit;
import org.openapitools.client.model.BudgetCalculatedSpend;
import org.openapitools.client.model.BudgetCostTypes;
import org.openapitools.client.model.BudgetTimePeriod;
import org.openapitools.client.model.BudgetType;
import org.openapitools.client.model.TimeUnit;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Budget
 */
public class BudgetTest {
    private final Budget model = new Budget();

    /**
     * Model tests for Budget
     */
    @Test
    public void testBudget() {
        // TODO: test Budget
    }

    /**
     * Test the property 'budgetName'
     */
    @Test
    public void budgetNameTest() {
        // TODO: test budgetName
    }

    /**
     * Test the property 'budgetLimit'
     */
    @Test
    public void budgetLimitTest() {
        // TODO: test budgetLimit
    }

    /**
     * Test the property 'plannedBudgetLimits'
     */
    @Test
    public void plannedBudgetLimitsTest() {
        // TODO: test plannedBudgetLimits
    }

    /**
     * Test the property 'costFilters'
     */
    @Test
    public void costFiltersTest() {
        // TODO: test costFilters
    }

    /**
     * Test the property 'costTypes'
     */
    @Test
    public void costTypesTest() {
        // TODO: test costTypes
    }

    /**
     * Test the property 'timeUnit'
     */
    @Test
    public void timeUnitTest() {
        // TODO: test timeUnit
    }

    /**
     * Test the property 'timePeriod'
     */
    @Test
    public void timePeriodTest() {
        // TODO: test timePeriod
    }

    /**
     * Test the property 'calculatedSpend'
     */
    @Test
    public void calculatedSpendTest() {
        // TODO: test calculatedSpend
    }

    /**
     * Test the property 'budgetType'
     */
    @Test
    public void budgetTypeTest() {
        // TODO: test budgetType
    }

    /**
     * Test the property 'lastUpdatedTime'
     */
    @Test
    public void lastUpdatedTimeTest() {
        // TODO: test lastUpdatedTime
    }

    /**
     * Test the property 'autoAdjustData'
     */
    @Test
    public void autoAdjustDataTest() {
        // TODO: test autoAdjustData
    }

}
