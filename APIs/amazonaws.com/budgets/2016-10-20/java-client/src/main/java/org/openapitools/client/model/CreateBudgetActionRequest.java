/*
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActionThreshold;
import org.openapitools.client.model.ActionType;
import org.openapitools.client.model.ApprovalModel;
import org.openapitools.client.model.Definition;
import org.openapitools.client.model.NotificationType;
import org.openapitools.client.model.Subscriber;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateBudgetActionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:20.507190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateBudgetActionRequest {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_BUDGET_NAME = "BudgetName";
  @SerializedName(SERIALIZED_NAME_BUDGET_NAME)
  private String budgetName;

  public static final String SERIALIZED_NAME_NOTIFICATION_TYPE = "NotificationType";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TYPE)
  private NotificationType notificationType;

  public static final String SERIALIZED_NAME_ACTION_TYPE = "ActionType";
  @SerializedName(SERIALIZED_NAME_ACTION_TYPE)
  private ActionType actionType;

  public static final String SERIALIZED_NAME_ACTION_THRESHOLD = "ActionThreshold";
  @SerializedName(SERIALIZED_NAME_ACTION_THRESHOLD)
  private ActionThreshold actionThreshold;

  public static final String SERIALIZED_NAME_DEFINITION = "Definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private Definition definition;

  public static final String SERIALIZED_NAME_EXECUTION_ROLE_ARN = "ExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ROLE_ARN)
  private String executionRoleArn;

  public static final String SERIALIZED_NAME_APPROVAL_MODEL = "ApprovalModel";
  @SerializedName(SERIALIZED_NAME_APPROVAL_MODEL)
  private ApprovalModel approvalModel;

  public static final String SERIALIZED_NAME_SUBSCRIBERS = "Subscribers";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBERS)
  private List<Subscriber> subscribers = new ArrayList<>();

  public CreateBudgetActionRequest() {
  }

  public CreateBudgetActionRequest accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * The account ID of the user. It&#39;s a 12-digit number.
   * @return accountId
   */
  @javax.annotation.Nonnull
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public CreateBudgetActionRequest budgetName(String budgetName) {
    this.budgetName = budgetName;
    return this;
  }

  /**
   *  A string that represents the budget name. The \&quot;:\&quot; and \&quot;\\\&quot; characters, and the \&quot;/action/\&quot; substring, aren&#39;t allowed.
   * @return budgetName
   */
  @javax.annotation.Nonnull
  public String getBudgetName() {
    return budgetName;
  }

  public void setBudgetName(String budgetName) {
    this.budgetName = budgetName;
  }


  public CreateBudgetActionRequest notificationType(NotificationType notificationType) {
    this.notificationType = notificationType;
    return this;
  }

  /**
   * Get notificationType
   * @return notificationType
   */
  @javax.annotation.Nonnull
  public NotificationType getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(NotificationType notificationType) {
    this.notificationType = notificationType;
  }


  public CreateBudgetActionRequest actionType(ActionType actionType) {
    this.actionType = actionType;
    return this;
  }

  /**
   * Get actionType
   * @return actionType
   */
  @javax.annotation.Nonnull
  public ActionType getActionType() {
    return actionType;
  }

  public void setActionType(ActionType actionType) {
    this.actionType = actionType;
  }


  public CreateBudgetActionRequest actionThreshold(ActionThreshold actionThreshold) {
    this.actionThreshold = actionThreshold;
    return this;
  }

  /**
   * Get actionThreshold
   * @return actionThreshold
   */
  @javax.annotation.Nonnull
  public ActionThreshold getActionThreshold() {
    return actionThreshold;
  }

  public void setActionThreshold(ActionThreshold actionThreshold) {
    this.actionThreshold = actionThreshold;
  }


  public CreateBudgetActionRequest definition(Definition definition) {
    this.definition = definition;
    return this;
  }

  /**
   * Get definition
   * @return definition
   */
  @javax.annotation.Nonnull
  public Definition getDefinition() {
    return definition;
  }

  public void setDefinition(Definition definition) {
    this.definition = definition;
  }


  public CreateBudgetActionRequest executionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
    return this;
  }

  /**
   * Get executionRoleArn
   * @return executionRoleArn
   */
  @javax.annotation.Nonnull
  public String getExecutionRoleArn() {
    return executionRoleArn;
  }

  public void setExecutionRoleArn(String executionRoleArn) {
    this.executionRoleArn = executionRoleArn;
  }


  public CreateBudgetActionRequest approvalModel(ApprovalModel approvalModel) {
    this.approvalModel = approvalModel;
    return this;
  }

  /**
   * Get approvalModel
   * @return approvalModel
   */
  @javax.annotation.Nonnull
  public ApprovalModel getApprovalModel() {
    return approvalModel;
  }

  public void setApprovalModel(ApprovalModel approvalModel) {
    this.approvalModel = approvalModel;
  }


  public CreateBudgetActionRequest subscribers(List<Subscriber> subscribers) {
    this.subscribers = subscribers;
    return this;
  }

  public CreateBudgetActionRequest addSubscribersItem(Subscriber subscribersItem) {
    if (this.subscribers == null) {
      this.subscribers = new ArrayList<>();
    }
    this.subscribers.add(subscribersItem);
    return this;
  }

  /**
   *  A list of subscribers.
   * @return subscribers
   */
  @javax.annotation.Nonnull
  public List<Subscriber> getSubscribers() {
    return subscribers;
  }

  public void setSubscribers(List<Subscriber> subscribers) {
    this.subscribers = subscribers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBudgetActionRequest createBudgetActionRequest = (CreateBudgetActionRequest) o;
    return Objects.equals(this.accountId, createBudgetActionRequest.accountId) &&
        Objects.equals(this.budgetName, createBudgetActionRequest.budgetName) &&
        Objects.equals(this.notificationType, createBudgetActionRequest.notificationType) &&
        Objects.equals(this.actionType, createBudgetActionRequest.actionType) &&
        Objects.equals(this.actionThreshold, createBudgetActionRequest.actionThreshold) &&
        Objects.equals(this.definition, createBudgetActionRequest.definition) &&
        Objects.equals(this.executionRoleArn, createBudgetActionRequest.executionRoleArn) &&
        Objects.equals(this.approvalModel, createBudgetActionRequest.approvalModel) &&
        Objects.equals(this.subscribers, createBudgetActionRequest.subscribers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, budgetName, notificationType, actionType, actionThreshold, definition, executionRoleArn, approvalModel, subscribers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBudgetActionRequest {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    budgetName: ").append(toIndentedString(budgetName)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("    actionThreshold: ").append(toIndentedString(actionThreshold)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    executionRoleArn: ").append(toIndentedString(executionRoleArn)).append("\n");
    sb.append("    approvalModel: ").append(toIndentedString(approvalModel)).append("\n");
    sb.append("    subscribers: ").append(toIndentedString(subscribers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountId");
    openapiFields.add("BudgetName");
    openapiFields.add("NotificationType");
    openapiFields.add("ActionType");
    openapiFields.add("ActionThreshold");
    openapiFields.add("Definition");
    openapiFields.add("ExecutionRoleArn");
    openapiFields.add("ApprovalModel");
    openapiFields.add("Subscribers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AccountId");
    openapiRequiredFields.add("BudgetName");
    openapiRequiredFields.add("NotificationType");
    openapiRequiredFields.add("ActionType");
    openapiRequiredFields.add("ActionThreshold");
    openapiRequiredFields.add("Definition");
    openapiRequiredFields.add("ExecutionRoleArn");
    openapiRequiredFields.add("ApprovalModel");
    openapiRequiredFields.add("Subscribers");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateBudgetActionRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateBudgetActionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateBudgetActionRequest is not found in the empty JSON string", CreateBudgetActionRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateBudgetActionRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateBudgetActionRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateBudgetActionRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("AccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccountId").toString()));
      }
      if (!jsonObj.get("BudgetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BudgetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BudgetName").toString()));
      }
      // validate the required field `NotificationType`
      NotificationType.validateJsonElement(jsonObj.get("NotificationType"));
      // validate the required field `ActionType`
      ActionType.validateJsonElement(jsonObj.get("ActionType"));
      // validate the required field `ActionThreshold`
      ActionThreshold.validateJsonElement(jsonObj.get("ActionThreshold"));
      // validate the required field `Definition`
      Definition.validateJsonElement(jsonObj.get("Definition"));
      // validate the required field `ExecutionRoleArn`
      String.validateJsonElement(jsonObj.get("ExecutionRoleArn"));
      // validate the required field `ApprovalModel`
      ApprovalModel.validateJsonElement(jsonObj.get("ApprovalModel"));
      // ensure the json data is an array
      if (!jsonObj.get("Subscribers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subscribers` to be an array in the JSON string but got `%s`", jsonObj.get("Subscribers").toString()));
      }

      JsonArray jsonArraysubscribers = jsonObj.getAsJsonArray("Subscribers");
      // validate the required field `Subscribers` (array)
      for (int i = 0; i < jsonArraysubscribers.size(); i++) {
        Subscriber.validateJsonElement(jsonArraysubscribers.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateBudgetActionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateBudgetActionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateBudgetActionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateBudgetActionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateBudgetActionRequest>() {
           @Override
           public void write(JsonWriter out, CreateBudgetActionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateBudgetActionRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateBudgetActionRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateBudgetActionRequest
   * @throws IOException if the JSON string is invalid with respect to CreateBudgetActionRequest
   */
  public static CreateBudgetActionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateBudgetActionRequest.class);
  }

  /**
   * Convert an instance of CreateBudgetActionRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

