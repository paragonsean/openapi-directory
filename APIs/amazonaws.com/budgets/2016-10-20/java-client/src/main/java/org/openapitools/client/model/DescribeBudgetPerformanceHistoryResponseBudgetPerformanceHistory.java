/*
 * AWS Budgets
 * <p>Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. </p> <p>Budgets provide you with a way to see the following information:</p> <ul> <li> <p>How close your plan is to your budgeted amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month</p> </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs that are associated with the Amazon Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">Amazon Web Services Cost Management Pricing</a>.</p>
 *
 * The version of the OpenAPI document: 2016-10-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.BudgetPerformanceHistoryCostTypes;
import org.openapitools.client.model.BudgetType;
import org.openapitools.client.model.TimeUnit;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:20.507190-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory {
  public static final String SERIALIZED_NAME_BUDGET_NAME = "BudgetName";
  @SerializedName(SERIALIZED_NAME_BUDGET_NAME)
  private String budgetName;

  public static final String SERIALIZED_NAME_BUDGET_TYPE = "BudgetType";
  @SerializedName(SERIALIZED_NAME_BUDGET_TYPE)
  private BudgetType budgetType;

  public static final String SERIALIZED_NAME_COST_FILTERS = "CostFilters";
  @SerializedName(SERIALIZED_NAME_COST_FILTERS)
  private Map costFilters;

  public static final String SERIALIZED_NAME_COST_TYPES = "CostTypes";
  @SerializedName(SERIALIZED_NAME_COST_TYPES)
  private BudgetPerformanceHistoryCostTypes costTypes;

  public static final String SERIALIZED_NAME_TIME_UNIT = "TimeUnit";
  @SerializedName(SERIALIZED_NAME_TIME_UNIT)
  private TimeUnit timeUnit;

  public static final String SERIALIZED_NAME_BUDGETED_AND_ACTUAL_AMOUNTS_LIST = "BudgetedAndActualAmountsList";
  @SerializedName(SERIALIZED_NAME_BUDGETED_AND_ACTUAL_AMOUNTS_LIST)
  private List budgetedAndActualAmountsList;

  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory() {
  }

  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory budgetName(String budgetName) {
    this.budgetName = budgetName;
    return this;
  }

  /**
   *  A string that represents the budget name. The \&quot;:\&quot; and \&quot;\\\&quot; characters, and the \&quot;/action/\&quot; substring, aren&#39;t allowed.
   * @return budgetName
   */
  @javax.annotation.Nullable
  public String getBudgetName() {
    return budgetName;
  }

  public void setBudgetName(String budgetName) {
    this.budgetName = budgetName;
  }


  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory budgetType(BudgetType budgetType) {
    this.budgetType = budgetType;
    return this;
  }

  /**
   * Get budgetType
   * @return budgetType
   */
  @javax.annotation.Nullable
  public BudgetType getBudgetType() {
    return budgetType;
  }

  public void setBudgetType(BudgetType budgetType) {
    this.budgetType = budgetType;
  }


  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory costFilters(Map costFilters) {
    this.costFilters = costFilters;
    return this;
  }

  /**
   * Get costFilters
   * @return costFilters
   */
  @javax.annotation.Nullable
  public Map getCostFilters() {
    return costFilters;
  }

  public void setCostFilters(Map costFilters) {
    this.costFilters = costFilters;
  }


  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory costTypes(BudgetPerformanceHistoryCostTypes costTypes) {
    this.costTypes = costTypes;
    return this;
  }

  /**
   * Get costTypes
   * @return costTypes
   */
  @javax.annotation.Nullable
  public BudgetPerformanceHistoryCostTypes getCostTypes() {
    return costTypes;
  }

  public void setCostTypes(BudgetPerformanceHistoryCostTypes costTypes) {
    this.costTypes = costTypes;
  }


  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory timeUnit(TimeUnit timeUnit) {
    this.timeUnit = timeUnit;
    return this;
  }

  /**
   * Get timeUnit
   * @return timeUnit
   */
  @javax.annotation.Nullable
  public TimeUnit getTimeUnit() {
    return timeUnit;
  }

  public void setTimeUnit(TimeUnit timeUnit) {
    this.timeUnit = timeUnit;
  }


  public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory budgetedAndActualAmountsList(List budgetedAndActualAmountsList) {
    this.budgetedAndActualAmountsList = budgetedAndActualAmountsList;
    return this;
  }

  /**
   * Get budgetedAndActualAmountsList
   * @return budgetedAndActualAmountsList
   */
  @javax.annotation.Nullable
  public List getBudgetedAndActualAmountsList() {
    return budgetedAndActualAmountsList;
  }

  public void setBudgetedAndActualAmountsList(List budgetedAndActualAmountsList) {
    this.budgetedAndActualAmountsList = budgetedAndActualAmountsList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory = (DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory) o;
    return Objects.equals(this.budgetName, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.budgetName) &&
        Objects.equals(this.budgetType, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.budgetType) &&
        Objects.equals(this.costFilters, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.costFilters) &&
        Objects.equals(this.costTypes, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.costTypes) &&
        Objects.equals(this.timeUnit, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.timeUnit) &&
        Objects.equals(this.budgetedAndActualAmountsList, describeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.budgetedAndActualAmountsList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(budgetName, budgetType, costFilters, costTypes, timeUnit, budgetedAndActualAmountsList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory {\n");
    sb.append("    budgetName: ").append(toIndentedString(budgetName)).append("\n");
    sb.append("    budgetType: ").append(toIndentedString(budgetType)).append("\n");
    sb.append("    costFilters: ").append(toIndentedString(costFilters)).append("\n");
    sb.append("    costTypes: ").append(toIndentedString(costTypes)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    budgetedAndActualAmountsList: ").append(toIndentedString(budgetedAndActualAmountsList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BudgetName");
    openapiFields.add("BudgetType");
    openapiFields.add("CostFilters");
    openapiFields.add("CostTypes");
    openapiFields.add("TimeUnit");
    openapiFields.add("BudgetedAndActualAmountsList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory is not found in the empty JSON string", DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BudgetName") != null && !jsonObj.get("BudgetName").isJsonNull()) && !jsonObj.get("BudgetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BudgetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BudgetName").toString()));
      }
      // validate the optional field `BudgetType`
      if (jsonObj.get("BudgetType") != null && !jsonObj.get("BudgetType").isJsonNull()) {
        BudgetType.validateJsonElement(jsonObj.get("BudgetType"));
      }
      // validate the optional field `CostFilters`
      if (jsonObj.get("CostFilters") != null && !jsonObj.get("CostFilters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("CostFilters"));
      }
      // validate the optional field `CostTypes`
      if (jsonObj.get("CostTypes") != null && !jsonObj.get("CostTypes").isJsonNull()) {
        BudgetPerformanceHistoryCostTypes.validateJsonElement(jsonObj.get("CostTypes"));
      }
      // validate the optional field `TimeUnit`
      if (jsonObj.get("TimeUnit") != null && !jsonObj.get("TimeUnit").isJsonNull()) {
        TimeUnit.validateJsonElement(jsonObj.get("TimeUnit"));
      }
      // validate the optional field `BudgetedAndActualAmountsList`
      if (jsonObj.get("BudgetedAndActualAmountsList") != null && !jsonObj.get("BudgetedAndActualAmountsList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BudgetedAndActualAmountsList"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory>() {
           @Override
           public void write(JsonWriter out, DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory
   * @throws IOException if the JSON string is invalid with respect to DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory
   */
  public static DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory.class);
  }

  /**
   * Convert an instance of DescribeBudgetPerformanceHistoryResponseBudgetPerformanceHistory to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

