openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Use the Amazon Web Services Budgets API to plan your service usage,\
    \ service costs, and instance reservations. This API reference provides descriptions,\
    \ syntax, and usage examples for each of the actions and data types for the Amazon\
    \ Web Services Budgets feature. </p> <p>Budgets provide you with a way to see\
    \ the following information:</p> <ul> <li> <p>How close your plan is to your budgeted\
    \ amount or to the free tier limits</p> </li> <li> <p>Your usage-to-date, including\
    \ how much you've used of your Reserved Instances (RIs)</p> </li> <li> <p>Your\
    \ current estimated charges from Amazon Web Services, and how much your predicted\
    \ usage will accrue in charges by the end of the month</p> </li> <li> <p>How much\
    \ of your budget has been used</p> </li> </ul> <p>Amazon Web Services updates\
    \ your budget status several times a day. Budgets track your unblended costs,\
    \ subscriptions, refunds, and RIs. You can create the following types of budgets:</p>\
    \ <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want to spend on a service.</p>\
    \ </li> <li> <p> <b>Usage budgets</b> - Plan how much you want to use one or more\
    \ services.</p> </li> <li> <p> <b>RI utilization budgets</b> - Define a utilization\
    \ threshold, and receive alerts when your RI usage falls below that threshold.\
    \ This lets you see if your RIs are unused or under-utilized.</p> </li> <li> <p>\
    \ <b>RI coverage budgets</b> - Define a coverage threshold, and receive alerts\
    \ when the number of your instance hours that are covered by RIs fall below that\
    \ threshold. This lets you see how much of your instance usage is covered by a\
    \ reservation.</p> </li> </ul> <p>Service Endpoint</p> <p>The Amazon Web Services\
    \ Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p>\
    \ </li> </ul> <p>For information about costs that are associated with the Amazon\
    \ Web Services Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\"\
    >Amazon Web Services Cost Management Pricing</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Budgets
  version: 2016-10-20
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: budgets
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/budgets/
servers:
- description: The general AWSBudgets multi-region endpoint
  url: https://budgets.amazonaws.com
- description: The AWSBudgets endpoint for China (Beijing) and China (Ningxia)
  url: "http://budgets.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWSBudgets endpoint for China (Beijing) and China (Ningxia)
  url: "https://budgets.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateBudget:
    post:
      description: "<p>Creates a budget and, if included, notifications and subscribers.\
        \ </p> <important> <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code>\
        \ can be present in the syntax at one time. Use the syntax that matches your\
        \ case. The Request Syntax section shows the <code>BudgetLimit</code> syntax.\
        \ For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples\"\
        >Examples</a> section. </p> </important>"
      operationId: CreateBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.CreateBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationLimitExceededException'
          description: CreationLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateBudgetAction:
    post:
      description: ' Creates a budget action. '
      operationId: CreateBudgetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.CreateBudgetAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBudgetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationLimitExceededException'
          description: CreationLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateNotification:
    post:
      description: Creates a notification. You must create the budget before you create
        the associated notification.
      operationId: CreateNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.CreateNotification
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationLimitExceededException'
          description: CreationLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber:
    post:
      description: Creates a subscriber. You must create the associated budget and
        notification before you create the subscriber.
      operationId: CreateSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.CreateSubscriber
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationLimitExceededException'
          description: CreationLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget:
    post:
      description: <p>Deletes a budget. You can delete your budget at any time.</p>
        <important> <p>Deleting a budget also deletes the notifications and subscribers
        that are associated with that budget.</p> </important>
      operationId: DeleteBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DeleteBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudgetAction:
    post:
      description: ' Deletes a budget action. '
      operationId: DeleteBudgetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DeleteBudgetAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBudgetActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBudgetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLockedException'
          description: ResourceLockedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification:
    post:
      description: <p>Deletes a notification.</p> <important> <p>Deleting a notification
        also deletes the subscribers that are associated with the notification.</p>
        </important>
      operationId: DeleteNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DeleteNotification
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber:
    post:
      description: <p>Deletes a subscriber.</p> <important> <p>Deleting the last subscriber
        to a notification also deletes the notification.</p> </important>
      operationId: DeleteSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DeleteSubscriber
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget:
    post:
      description: "<p>Describes a budget.</p> <important> <p>The Request Syntax section\
        \ shows the <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>,\
        \ see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples\"\
        >Examples</a> section. </p> </important>"
      operationId: DescribeBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetAction:
    post:
      description: ' Describes a budget action detail. '
      operationId: DescribeBudgetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionHistories:
    post:
      description: ' Describes a budget action history detail. '
      operationId: DescribeBudgetActionHistories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetActionHistories
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetActionHistoriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetActionHistoriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForAccount:
    post:
      description: ' Describes all of the budget actions for an account. '
      operationId: DescribeBudgetActionsForAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetActionsForAccount
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetActionsForAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetActionsForAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetActionsForBudget:
    post:
      description: ' Describes all of the budget actions for a budget. '
      operationId: DescribeBudgetActionsForBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetActionsForBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetActionsForBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetActionsForBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount:
    post:
      description: ' Lists the budget names and notifications that are associated
        with an account. '
      operationId: DescribeBudgetNotificationsForAccount
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetNotificationsForAccount
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetNotificationsForAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetNotificationsForAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
          description: ExpiredNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory:
    post:
      description: "Describes the history for <code>DAILY</code>, <code>MONTHLY</code>,\
        \ and <code>QUARTERLY</code> budgets. Budget history isn't available for <code>ANNUAL</code>\
        \ budgets."
      operationId: DescribeBudgetPerformanceHistory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetPerformanceHistoryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetPerformanceHistoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
          description: ExpiredNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets:
    post:
      description: "<p>Lists the budgets that are associated with an account.</p>\
        \ <important> <p>The Request Syntax section shows the <code>BudgetLimit</code>\
        \ syntax. For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples\"\
        >Examples</a> section. </p> </important>"
      operationId: DescribeBudgets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeBudgets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeBudgetsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBudgetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
          description: ExpiredNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget:
    post:
      description: Lists the notifications that are associated with a budget.
      operationId: DescribeNotificationsForBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeNotificationsForBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotificationsForBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotificationsForBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
          description: ExpiredNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification:
    post:
      description: Lists the subscribers that are associated with a notification.
      operationId: DescribeSubscribersForNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.DescribeSubscribersForNotification
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSubscribersForNotificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSubscribersForNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredNextTokenException'
          description: ExpiredNextTokenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.ExecuteBudgetAction:
    post:
      description: ' Executes a budget action. '
      operationId: ExecuteBudgetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.ExecuteBudgetAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteBudgetActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteBudgetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLockedException'
          description: ResourceLockedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget:
    post:
      description: "<p>Updates a budget. You can change every part of a budget except\
        \ for the <code>budgetName</code> and the <code>calculatedSpend</code>. When\
        \ you modify a budget, the <code>calculatedSpend</code> drops to zero until\
        \ Amazon Web Services has new usage data to use for forecasting.</p> <important>\
        \ <p>Only one of <code>BudgetLimit</code> or <code>PlannedBudgetLimits</code>\
        \ can be present in the syntax at one time. Use the syntax that matches your\
        \ case. The Request Syntax section shows the <code>BudgetLimit</code> syntax.\
        \ For <code>PlannedBudgetLimits</code>, see the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples\"\
        >Examples</a> section. </p> </important>"
      operationId: UpdateBudget
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.UpdateBudget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBudgetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBudgetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudgetAction:
    post:
      description: ' Updates a budget action. '
      operationId: UpdateBudgetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.UpdateBudgetAction
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBudgetActionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBudgetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLockedException'
          description: ResourceLockedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification:
    post:
      description: Updates a notification.
      operationId: UpdateNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.UpdateNotification
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber:
    post:
      description: Updates a subscriber.
      operationId: UpdateSubscriber
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSBudgetServiceGateway.UpdateSubscriber
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriberResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
          description: InternalErrorException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRecordException'
          description: DuplicateRecordException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateBudgetResponse:
      description: ' Response of CreateBudget '
      properties: {}
      type: object
    CreateBudgetRequest:
      description: ' Request of CreateBudget '
      example:
        AccountId: ""
        NotificationsWithSubscribers: ""
        Budget:
          BudgetLimit:
            Amount: ""
            Unit: ""
          TimePeriod:
            Start: ""
            End: ""
          CalculatedSpend:
            ActualSpend:
              Amount: ""
              Unit: ""
            ForecastedSpend:
              Amount: ""
              Unit: ""
          TimeUnit: ""
          LastUpdatedTime: ""
          AutoAdjustData:
            AutoAdjustType: ""
            HistoricalOptions:
              BudgetAdjustmentPeriod: ""
              LookBackAvailablePeriods: ""
            LastAutoAdjustTime: ""
          PlannedBudgetLimits: ""
          CostFilters: ""
          BudgetName: ""
          CostTypes:
            IncludeSupport: ""
            IncludeOtherSubscription: ""
            IncludeTax: ""
            IncludeSubscription: ""
            UseBlended: ""
            IncludeUpfront: ""
            IncludeDiscount: ""
            IncludeCredit: ""
            IncludeRecurring: ""
            UseAmortized: ""
            IncludeRefund: ""
          BudgetType: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget.
        Budget:
          $ref: '#/components/schemas/CreateBudgetRequest_Budget'
        NotificationsWithSubscribers:
          allOf:
          - $ref: '#/components/schemas/NotificationWithSubscribersList'
          - description: "A notification that you want to associate with a budget.\
              \ A budget can have up to five notifications, and each notification\
              \ can have one SNS subscriber and up to 10 email subscribers. If you\
              \ include notifications and subscribers in your <code>CreateBudget</code>\
              \ call, Amazon Web Services creates the notifications and subscribers\
              \ for you."
      required:
      - AccountId
      - Budget
      title: CreateBudgetRequest
      type: object
    InvalidParameterException: {}
    InternalErrorException: {}
    CreationLimitExceededException: {}
    DuplicateRecordException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    CreateBudgetActionResponse:
      example:
        ActionId: ""
        AccountId: AccountId
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
      required:
      - AccountId
      - ActionId
      - BudgetName
      type: object
    CreateBudgetActionRequest:
      example:
        ExecutionRoleArn: ""
        AccountId: AccountId
        ActionType: ""
        NotificationType: ACTUAL
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        NotificationType:
          $ref: '#/components/schemas/NotificationType'
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          - description: ' The type of action. This defines the type of tasks that
              can be carried out by this action. This field also determines the format
              for definition. '
        ActionThreshold:
          $ref: '#/components/schemas/ActionThreshold'
        Definition:
          $ref: '#/components/schemas/Definition'
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: ' The role passed for action execution and reversion. Roles
              and actions must be in the same account. '
        ApprovalModel:
          allOf:
          - $ref: '#/components/schemas/ApprovalModel'
          - description: ' This specifies if the action needs manual or automatic
              approval. '
        Subscribers:
          description: ' A list of subscribers.'
          items:
            $ref: '#/components/schemas/Subscriber'
          maxItems: 11
          minItems: 1
          type: array
      required:
      - AccountId
      - ActionThreshold
      - ActionType
      - ApprovalModel
      - BudgetName
      - Definition
      - ExecutionRoleArn
      - NotificationType
      - Subscribers
      title: CreateBudgetActionRequest
      type: object
    NotFoundException: {}
    CreateNotificationResponse:
      description: ' Response of CreateNotification '
      properties: {}
      type: object
    CreateNotificationRequest:
      description: ' Request of CreateNotification '
      example:
        AccountId: ""
        Subscribers: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              that you want to create a notification for.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget that you want Amazon Web Services
              to notify you about. Budget names must be unique within an account.
        Notification:
          $ref: '#/components/schemas/CreateNotificationRequest_Notification'
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: A list of subscribers that you want to associate with the
              notification. Each notification can have one SNS subscriber and up to
              10 email subscribers.
      required:
      - AccountId
      - BudgetName
      - Notification
      - Subscribers
      title: CreateNotificationRequest
      type: object
    CreateSubscriberResponse:
      description: ' Response of CreateSubscriber '
      properties: {}
      type: object
    CreateSubscriberRequest:
      description: ' Request of CreateSubscriber '
      example:
        AccountId: ""
        Subscriber:
          SubscriptionType: ""
          Address: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              that you want to create a subscriber for.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget that you want to subscribe to. Budget
              names must be unique within an account.
        Notification:
          $ref: '#/components/schemas/CreateSubscriberRequest_Notification'
        Subscriber:
          $ref: '#/components/schemas/CreateSubscriberRequest_Subscriber'
      required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
      title: CreateSubscriberRequest
      type: object
    DeleteBudgetResponse:
      description: ' Response of DeleteBudget '
      properties: {}
      type: object
    DeleteBudgetRequest:
      description: ' Request of DeleteBudget '
      example:
        AccountId: ""
        BudgetName: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              that you want to delete.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget that you want to delete.
      required:
      - AccountId
      - BudgetName
      title: DeleteBudgetRequest
      type: object
    DeleteBudgetActionResponse:
      example:
        Action:
          Status: ""
          ExecutionRoleArn: ""
          ActionId: ""
          ActionType: ""
          NotificationType: ACTUAL
          ActionThreshold:
            ActionThresholdValue: 1201242285691.5173
            ActionThresholdType: PERCENTAGE
          Definition:
            SsmActionDefinition:
              Region: ""
              ActionSubType: ""
              InstanceIds: ""
            IamActionDefinition:
              PolicyArn: ""
              Groups: ""
              Roles: ""
              Users: ""
            ScpActionDefinition:
              TargetIds: ""
              PolicyId: ""
          ApprovalModel: ""
          Subscribers:
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          BudgetName: BudgetName
        AccountId: AccountId
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        Action:
          $ref: '#/components/schemas/Action'
      required:
      - AccountId
      - Action
      - BudgetName
      type: object
    DeleteBudgetActionRequest:
      example:
        ActionId: ""
        AccountId: AccountId
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
      required:
      - AccountId
      - ActionId
      - BudgetName
      title: DeleteBudgetActionRequest
      type: object
    ResourceLockedException: {}
    DeleteNotificationResponse:
      description: ' Response of DeleteNotification '
      properties: {}
      type: object
    DeleteNotificationRequest:
      description: ' Request of DeleteNotification '
      example:
        AccountId: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose notification you want to delete.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose notification you want to delete.
        Notification:
          $ref: '#/components/schemas/DeleteNotificationRequest_Notification'
      required:
      - AccountId
      - BudgetName
      - Notification
      title: DeleteNotificationRequest
      type: object
    DeleteSubscriberResponse:
      description: ' Response of DeleteSubscriber '
      properties: {}
      type: object
    DeleteSubscriberRequest:
      description: ' Request of DeleteSubscriber '
      example:
        AccountId: ""
        Subscriber:
          SubscriptionType: ""
          Address: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose subscriber you want to delete.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose subscriber you want to delete.
        Notification:
          $ref: '#/components/schemas/DeleteSubscriberRequest_Notification'
        Subscriber:
          $ref: '#/components/schemas/DeleteSubscriberRequest_Subscriber'
      required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
      title: DeleteSubscriberRequest
      type: object
    DescribeBudgetResponse:
      description: ' Response of DescribeBudget '
      example:
        Budget:
          BudgetLimit:
            Amount: ""
            Unit: ""
          TimePeriod:
            Start: ""
            End: ""
          CalculatedSpend:
            ActualSpend:
              Amount: ""
              Unit: ""
            ForecastedSpend:
              Amount: ""
              Unit: ""
          TimeUnit: ""
          LastUpdatedTime: ""
          AutoAdjustData:
            AutoAdjustType: ""
            HistoricalOptions:
              BudgetAdjustmentPeriod: ""
              LookBackAvailablePeriods: ""
            LastAutoAdjustTime: ""
          PlannedBudgetLimits: ""
          CostFilters: ""
          BudgetName: ""
          CostTypes:
            IncludeSupport: ""
            IncludeOtherSubscription: ""
            IncludeTax: ""
            IncludeSubscription: ""
            UseBlended: ""
            IncludeUpfront: ""
            IncludeDiscount: ""
            IncludeCredit: ""
            IncludeRecurring: ""
            UseAmortized: ""
            IncludeRefund: ""
          BudgetType: ""
      properties:
        Budget:
          $ref: '#/components/schemas/DescribeBudgetResponse_Budget'
      type: object
    DescribeBudgetRequest:
      description: ' Request of DescribeBudget '
      example:
        AccountId: ""
        BudgetName: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              that you want a description of.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget that you want a description of.
      required:
      - AccountId
      - BudgetName
      title: DescribeBudgetRequest
      type: object
    DescribeBudgetActionResponse:
      example:
        Action:
          Status: ""
          ExecutionRoleArn: ""
          ActionId: ""
          ActionType: ""
          NotificationType: ACTUAL
          ActionThreshold:
            ActionThresholdValue: 1201242285691.5173
            ActionThresholdType: PERCENTAGE
          Definition:
            SsmActionDefinition:
              Region: ""
              ActionSubType: ""
              InstanceIds: ""
            IamActionDefinition:
              PolicyArn: ""
              Groups: ""
              Roles: ""
              Users: ""
            ScpActionDefinition:
              TargetIds: ""
              PolicyId: ""
          ApprovalModel: ""
          Subscribers:
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          BudgetName: BudgetName
        AccountId: AccountId
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        Action:
          $ref: '#/components/schemas/DescribeBudgetActionResponse_Action'
      required:
      - AccountId
      - Action
      - BudgetName
      type: object
    DescribeBudgetActionRequest:
      example:
        ActionId: ""
        AccountId: AccountId
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
      required:
      - AccountId
      - ActionId
      - BudgetName
      title: DescribeBudgetActionRequest
      type: object
    DescribeBudgetActionHistoriesResponse:
      example:
        NextToken: NextToken
        ActionHistories: ""
      properties:
        ActionHistories:
          allOf:
          - $ref: '#/components/schemas/ActionHistories'
          - description: ' The historical record of the budget action resource. '
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - ActionHistories
      type: object
    DescribeBudgetActionHistoriesRequest:
      example:
        ActionId: ""
        AccountId: AccountId
        NextToken: NextToken
        TimePeriod:
          Start: ""
          End: ""
        MaxResults: 8
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
        TimePeriod:
          $ref: '#/components/schemas/TimePeriod'
        MaxResults:
          description: ' An integer that represents how many entries a paginated response
            contains. The maximum is 100.'
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - AccountId
      - ActionId
      - BudgetName
      title: DescribeBudgetActionHistoriesRequest
      type: object
    InvalidNextTokenException: {}
    DescribeBudgetActionsForAccountResponse:
      example:
        NextToken: NextToken
        Actions: ""
      properties:
        Actions:
          allOf:
          - $ref: '#/components/schemas/Actions'
          - description: ' A list of the budget action resources information. '
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - Actions
      type: object
    DescribeBudgetActionsForAccountRequest:
      example:
        AccountId: AccountId
        NextToken: NextToken
        MaxResults: 8
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        MaxResults:
          description: ' An integer that represents how many entries a paginated response
            contains. The maximum is 100.'
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - AccountId
      title: DescribeBudgetActionsForAccountRequest
      type: object
    DescribeBudgetActionsForBudgetResponse:
      example:
        NextToken: NextToken
        Actions: ""
      properties:
        Actions:
          allOf:
          - $ref: '#/components/schemas/Actions'
          - description: ' A list of the budget action resources information. '
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - Actions
      type: object
    DescribeBudgetActionsForBudgetRequest:
      example:
        AccountId: AccountId
        NextToken: NextToken
        MaxResults: 8
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        MaxResults:
          description: ' An integer that represents how many entries a paginated response
            contains. The maximum is 100.'
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - AccountId
      - BudgetName
      title: DescribeBudgetActionsForBudgetRequest
      type: object
    DescribeBudgetNotificationsForAccountResponse:
      example:
        NextToken: NextToken
        BudgetNotificationsForAccount: ""
      properties:
        BudgetNotificationsForAccount:
          allOf:
          - $ref: '#/components/schemas/BudgetNotificationsForAccountList'
          - description: ' A list of budget names and associated notifications for
              an account. '
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      type: object
    DescribeBudgetNotificationsForAccountRequest:
      example:
        AccountId: AccountId
        NextToken: NextToken
        MaxResults: ""
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsBudgetNotifications'
          - description: ' An integer that shows how many budget name entries a paginated
              response contains. '
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - AccountId
      title: DescribeBudgetNotificationsForAccountRequest
      type: object
    ExpiredNextTokenException: {}
    DescribeBudgetPerformanceHistoryResponse:
      example:
        NextToken: NextToken
        BudgetPerformanceHistory:
          TimeUnit: DAILY
          CostFilters: ""
          BudgetName: BudgetName
          BudgetType: USAGE
          CostTypes:
            IncludeSupport: ""
            IncludeOtherSubscription: ""
            IncludeTax: ""
            IncludeSubscription: ""
            UseBlended: ""
            IncludeUpfront: ""
            IncludeDiscount: ""
            IncludeCredit: ""
            IncludeRecurring: ""
            UseAmortized: ""
            IncludeRefund: ""
          BudgetedAndActualAmountsList: ""
      properties:
        BudgetPerformanceHistory:
          $ref: '#/components/schemas/DescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory'
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      type: object
    DescribeBudgetPerformanceHistoryRequest:
      example:
        AccountId: AccountId
        NextToken: NextToken
        TimePeriod:
          Start: ""
          End: ""
        MaxResults: 8
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        TimePeriod:
          $ref: '#/components/schemas/DescribeBudgetPerformanceHistoryRequest_TimePeriod'
        MaxResults:
          description: ' An integer that represents how many entries a paginated response
            contains. The maximum is 100.'
          maximum: 100
          minimum: 1
          type: integer
        NextToken:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
      required:
      - AccountId
      - BudgetName
      title: DescribeBudgetPerformanceHistoryRequest
      type: object
    DescribeBudgetsResponse:
      description: ' Response of DescribeBudgets '
      example:
        NextToken: ""
        Budgets: ""
      properties:
        Budgets:
          allOf:
          - $ref: '#/components/schemas/Budgets'
          - description: A list of budgets.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token in the service response that indicates
              the next set of results that you can retrieve.
      type: object
    DescribeBudgetsRequest:
      description: ' Request of DescribeBudgets '
      example:
        AccountId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budgets
              that you want descriptions of.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: An optional integer that represents how many entries a paginated
              response contains. The maximum is 100.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token that you include in your request to
              indicate the next set of results that you want to retrieve.
      required:
      - AccountId
      title: DescribeBudgetsRequest
      type: object
    DescribeNotificationsForBudgetResponse:
      description: ' Response of GetNotificationsForBudget '
      example:
        NextToken: ""
        Notifications: ""
      properties:
        Notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          - description: A list of notifications that are associated with a budget.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token in the service response that indicates
              the next set of results that you can retrieve.
      type: object
    DescribeNotificationsForBudgetRequest:
      description: ' Request of DescribeNotificationsForBudget '
      example:
        AccountId: ""
        NextToken: ""
        MaxResults: ""
        BudgetName: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose notifications you want descriptions of.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose notifications you want descriptions
              of.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: An optional integer that represents how many entries a paginated
              response contains. The maximum is 100.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token that you include in your request to
              indicate the next set of results that you want to retrieve.
      required:
      - AccountId
      - BudgetName
      title: DescribeNotificationsForBudgetRequest
      type: object
    DescribeSubscribersForNotificationResponse:
      description: ' Response of DescribeSubscribersForNotification '
      example:
        NextToken: ""
        Subscribers: ""
      properties:
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: A list of subscribers that are associated with a notification.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token in the service response that indicates
              the next set of results that you can retrieve.
      type: object
    DescribeSubscribersForNotificationRequest:
      description: ' Request of DescribeSubscribersForNotification '
      example:
        AccountId: ""
        NextToken: ""
        MaxResults: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose subscribers you want descriptions of.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose subscribers you want descriptions
              of.
        Notification:
          $ref: '#/components/schemas/DescribeSubscribersForNotificationRequest_Notification'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: An optional integer that represents how many entries a paginated
              response contains. The maximum is 100.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          - description: The pagination token that you include in your request to
              indicate the next set of results that you want to retrieve.
      required:
      - AccountId
      - BudgetName
      - Notification
      title: DescribeSubscribersForNotificationRequest
      type: object
    ExecuteBudgetActionResponse:
      example:
        ActionId: ""
        AccountId: AccountId
        ExecutionType: ""
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
        ExecutionType:
          allOf:
          - $ref: '#/components/schemas/ExecutionType'
          - description: ' The type of execution. '
      required:
      - AccountId
      - ActionId
      - BudgetName
      - ExecutionType
      type: object
    ExecuteBudgetActionRequest:
      example:
        ActionId: ""
        AccountId: AccountId
        ExecutionType: ""
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
        ExecutionType:
          allOf:
          - $ref: '#/components/schemas/ExecutionType'
          - description: ' The type of execution. '
      required:
      - AccountId
      - ActionId
      - BudgetName
      - ExecutionType
      title: ExecuteBudgetActionRequest
      type: object
    UpdateBudgetResponse:
      description: ' Response of UpdateBudget '
      properties: {}
      type: object
    UpdateBudgetRequest:
      description: ' Request of UpdateBudget '
      example:
        NewBudget:
          BudgetLimit:
            Amount: ""
            Unit: ""
          TimePeriod:
            Start: ""
            End: ""
          CalculatedSpend:
            ActualSpend:
              Amount: ""
              Unit: ""
            ForecastedSpend:
              Amount: ""
              Unit: ""
          TimeUnit: ""
          LastUpdatedTime: ""
          AutoAdjustData:
            AutoAdjustType: ""
            HistoricalOptions:
              BudgetAdjustmentPeriod: ""
              LookBackAvailablePeriods: ""
            LastAutoAdjustTime: ""
          PlannedBudgetLimits: ""
          CostFilters: ""
          BudgetName: ""
          CostTypes:
            IncludeSupport: ""
            IncludeOtherSubscription: ""
            IncludeTax: ""
            IncludeSubscription: ""
            UseBlended: ""
            IncludeUpfront: ""
            IncludeDiscount: ""
            IncludeCredit: ""
            IncludeRecurring: ""
            UseAmortized: ""
            IncludeRefund: ""
          BudgetType: ""
        AccountId: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              that you want to update.
        NewBudget:
          $ref: '#/components/schemas/UpdateBudgetRequest_NewBudget'
      required:
      - AccountId
      - NewBudget
      title: UpdateBudgetRequest
      type: object
    UpdateBudgetActionResponse:
      example:
        AccountId: AccountId
        NewAction:
          Status: ""
          ExecutionRoleArn: ""
          ActionId: ""
          ActionType: ""
          NotificationType: null
          ActionThreshold:
            ActionThresholdValue: 1201242285691.5173
            ActionThresholdType: PERCENTAGE
          Definition:
            SsmActionDefinition:
              Region: ""
              ActionSubType: ""
              InstanceIds: ""
            IamActionDefinition:
              PolicyArn: ""
              Groups: ""
              Roles: ""
              Users: ""
            ScpActionDefinition:
              TargetIds: ""
              PolicyId: ""
          ApprovalModel: ""
          Subscribers:
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          BudgetName: BudgetName
        OldAction:
          Status: ""
          ExecutionRoleArn: ""
          ActionId: ""
          ActionType: ""
          NotificationType: ACTUAL
          ActionThreshold:
            ActionThresholdValue: 1201242285691.5173
            ActionThresholdType: PERCENTAGE
          Definition:
            SsmActionDefinition:
              Region: ""
              ActionSubType: ""
              InstanceIds: ""
            IamActionDefinition:
              PolicyArn: ""
              Groups: ""
              Roles: ""
              Users: ""
            ScpActionDefinition:
              TargetIds: ""
              PolicyId: ""
          ApprovalModel: ""
          Subscribers:
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          - SubscriptionType: ""
            Address: ""
          BudgetName: BudgetName
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        OldAction:
          $ref: '#/components/schemas/UpdateBudgetActionResponse_OldAction'
        NewAction:
          $ref: '#/components/schemas/UpdateBudgetActionResponse_NewAction'
      required:
      - AccountId
      - BudgetName
      - NewAction
      - OldAction
      type: object
    UpdateBudgetActionRequest:
      example:
        ExecutionRoleArn: ""
        ActionId: ""
        AccountId: AccountId
        NotificationType: ACTUAL
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
      properties:
        AccountId:
          description: The account ID of the user. It's a 12-digit number.
          maxLength: 12
          minLength: 12
          pattern: "\\d{12}"
          type: string
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: ' A system-generated universally unique identifier (UUID)
              for the action. '
        NotificationType:
          $ref: '#/components/schemas/NotificationType'
        ActionThreshold:
          $ref: '#/components/schemas/ActionThreshold'
        Definition:
          $ref: '#/components/schemas/Definition'
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: ' The role passed for action execution and reversion. Roles
              and actions must be in the same account. '
        ApprovalModel:
          allOf:
          - $ref: '#/components/schemas/ApprovalModel'
          - description: ' This specifies if the action needs manual or automatic
              approval. '
        Subscribers:
          description: ' A list of subscribers.'
          items:
            $ref: '#/components/schemas/Subscriber'
          maxItems: 11
          minItems: 1
          type: array
      required:
      - AccountId
      - ActionId
      - BudgetName
      title: UpdateBudgetActionRequest
      type: object
    UpdateNotificationResponse:
      description: ' Response of UpdateNotification '
      properties: {}
      type: object
    UpdateNotificationRequest:
      description: ' Request of UpdateNotification '
      example:
        AccountId: ""
        NewNotification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
        OldNotification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
        BudgetName: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose notification you want to update.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose notification you want to update.
        OldNotification:
          $ref: '#/components/schemas/UpdateNotificationRequest_OldNotification'
        NewNotification:
          $ref: '#/components/schemas/UpdateNotificationRequest_NewNotification'
      required:
      - AccountId
      - BudgetName
      - NewNotification
      - OldNotification
      title: UpdateNotificationRequest
      type: object
    UpdateSubscriberResponse:
      description: ' Response of UpdateSubscriber '
      properties: {}
      type: object
    UpdateSubscriberRequest:
      description: ' Request of UpdateSubscriber '
      example:
        AccountId: ""
        NewSubscriber:
          SubscriptionType: ""
          Address: ""
        OldSubscriber:
          SubscriptionType: ""
          Address: ""
        BudgetName: ""
        Notification:
          ComparisonOperator: ""
          NotificationType: ""
          Threshold: ""
          ThresholdType: ""
          NotificationState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The <code>accountId</code> that is associated with the budget
              whose subscriber you want to update.
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: The name of the budget whose subscriber you want to update.
        Notification:
          $ref: '#/components/schemas/UpdateSubscriberRequest_Notification'
        OldSubscriber:
          $ref: '#/components/schemas/UpdateSubscriberRequest_OldSubscriber'
        NewSubscriber:
          $ref: '#/components/schemas/UpdateSubscriberRequest_NewSubscriber'
      required:
      - AccountId
      - BudgetName
      - NewSubscriber
      - Notification
      - OldSubscriber
      title: UpdateSubscriberRequest
      type: object
    AccountId:
      description: The account ID of the user. It's a 12-digit number.
      maxLength: 12
      minLength: 12
      pattern: "\\d{12}"
      type: string
    ActionId:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    BudgetName:
      description: " A string that represents the budget name. The \":\" and \"\\\"\
        \ characters, and the \"/action/\" substring, aren't allowed."
      maxLength: 100
      minLength: 1
      pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
      type: string
    NotificationType:
      description: ' The type of a notification. It must be ACTUAL or FORECASTED.'
      enum:
      - ACTUAL
      - FORECASTED
      type: string
    ActionType:
      enum:
      - APPLY_IAM_POLICY
      - APPLY_SCP_POLICY
      - RUN_SSM_DOCUMENTS
      type: string
    ActionThreshold:
      description: 'The trigger threshold of the action. '
      example:
        ActionThresholdValue: 1201242285691.5173
        ActionThresholdType: PERCENTAGE
      properties:
        ActionThresholdValue:
          description: ' The threshold of a notification.'
          format: double
          maximum: 15000000000000
          minimum: 0
          type: number
        ActionThresholdType:
          $ref: '#/components/schemas/ThresholdType'
      required:
      - ActionThresholdType
      - ActionThresholdValue
      type: object
    Definition:
      description: 'Specifies all of the type-specific parameters. '
      example:
        SsmActionDefinition:
          Region: ""
          ActionSubType: ""
          InstanceIds: ""
        IamActionDefinition:
          PolicyArn: ""
          Groups: ""
          Roles: ""
          Users: ""
        ScpActionDefinition:
          TargetIds: ""
          PolicyId: ""
      properties:
        IamActionDefinition:
          $ref: '#/components/schemas/Definition_IamActionDefinition'
        ScpActionDefinition:
          $ref: '#/components/schemas/Definition_ScpActionDefinition'
        SsmActionDefinition:
          $ref: '#/components/schemas/Definition_SsmActionDefinition'
      type: object
    RoleArn:
      maxLength: 618
      minLength: 32
      pattern: "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::\\\
        d{12}:role(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$"
      type: string
    ApprovalModel:
      enum:
      - AUTOMATIC
      - MANUAL
      type: string
    ActionStatus:
      enum:
      - STANDBY
      - PENDING
      - EXECUTION_IN_PROGRESS
      - EXECUTION_SUCCESS
      - EXECUTION_FAILURE
      - REVERSE_IN_PROGRESS
      - REVERSE_SUCCESS
      - REVERSE_FAILURE
      - RESET_IN_PROGRESS
      - RESET_FAILURE
      type: string
    Subscribers:
      description: ' A list of subscribers.'
      items:
        $ref: '#/components/schemas/Subscriber'
      maxItems: 11
      minItems: 1
      type: array
    Action:
      description: 'A budget action resource. '
      example:
        Status: ""
        ExecutionRoleArn: ""
        ActionId: ""
        ActionType: ""
        NotificationType: ACTUAL
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
      properties:
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: 'A system-generated universally unique identifier (UUID)
              for the action. '
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        NotificationType:
          $ref: '#/components/schemas/NotificationType'
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          - description: 'The type of action. This defines the type of tasks that
              can be carried out by this action. This field also determines the format
              for definition. '
        ActionThreshold:
          $ref: '#/components/schemas/Action_ActionThreshold'
        Definition:
          $ref: '#/components/schemas/Action_Definition'
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'The role passed for action execution and reversion. Roles
              and actions must be in the same account. '
        ApprovalModel:
          allOf:
          - $ref: '#/components/schemas/ApprovalModel'
          - description: 'This specifies if the action needs manual or automatic approval. '
        Status:
          allOf:
          - $ref: '#/components/schemas/ActionStatus'
          - description: 'The status of the action. '
        Subscribers:
          description: ' A list of subscribers.'
          items:
            $ref: '#/components/schemas/Subscriber'
          maxItems: 11
          minItems: 1
          type: array
      required:
      - ActionId
      - ActionThreshold
      - ActionType
      - ApprovalModel
      - BudgetName
      - Definition
      - ExecutionRoleArn
      - NotificationType
      - Status
      - Subscribers
      type: object
    ActionHistory:
      description: 'The historical records for a budget action. '
      properties:
        Timestamp:
          description: " A generic time stamp. In Java, it's transformed to a <code>Date</code>\
            \ object."
          format: date-time
          type: string
        Status:
          allOf:
          - $ref: '#/components/schemas/ActionStatus'
          - description: 'The status of action at the time of the event. '
        EventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: 'This distinguishes between whether the events are triggered
              by the user or are generated by the system. '
        ActionHistoryDetails:
          $ref: '#/components/schemas/ActionHistory_ActionHistoryDetails'
      required:
      - ActionHistoryDetails
      - EventType
      - Status
      - Timestamp
      type: object
    ActionHistories:
      items:
        $ref: '#/components/schemas/ActionHistory'
      maxItems: 100
      minItems: 0
      type: array
    GenericTimestamp:
      description: " A generic time stamp. In Java, it's transformed to a <code>Date</code>\
        \ object."
      format: date-time
      type: string
    EventType:
      enum:
      - SYSTEM
      - CREATE_ACTION
      - DELETE_ACTION
      - UPDATE_ACTION
      - EXECUTE_ACTION
      type: string
    ActionHistoryDetails:
      description: 'The description of the details for the event. '
      properties:
        Message:
          description: ' A generic string.'
          maxLength: 2147483647
          minLength: 0
          pattern: .*
          type: string
        Action:
          $ref: '#/components/schemas/ActionHistoryDetails_Action'
      required:
      - Action
      - Message
      type: object
    GenericString:
      description: ' A generic string.'
      maxLength: 2147483647
      minLength: 0
      pattern: .*
      type: string
    ActionSubType:
      enum:
      - STOP_EC2_INSTANCES
      - STOP_RDS_INSTANCES
      type: string
    NotificationThreshold:
      description: ' The threshold of a notification.'
      format: double
      maximum: 15000000000000
      minimum: 0
      type: number
    ThresholdType:
      description: ' The type of threshold for a notification.'
      enum:
      - PERCENTAGE
      - ABSOLUTE_VALUE
      type: string
    Actions:
      items:
        $ref: '#/components/schemas/Action'
      maxItems: 100
      minItems: 0
      type: array
    AdjustmentPeriod:
      maximum: 60
      minimum: 1
      type: integer
    AutoAdjustType:
      enum:
      - HISTORICAL
      - FORECAST
      type: string
    HistoricalOptions:
      description: The parameters that define or describe the historical data that
        your auto-adjusting budget is based on.
      properties:
        BudgetAdjustmentPeriod:
          allOf:
          - $ref: '#/components/schemas/AdjustmentPeriod'
          - description: "<p>The number of budget periods included in the moving-average\
              \ calculation that determines your auto-adjusted budget amount. The\
              \ maximum value depends on the <code>TimeUnit</code> granularity of\
              \ the budget:</p> <ul> <li> <p>For the <code>DAILY</code> granularity,\
              \ the maximum value is <code>60</code>.</p> </li> <li> <p>For the <code>MONTHLY</code>\
              \ granularity, the maximum value is <code>12</code>.</p> </li> <li>\
              \ <p>For the <code>QUARTERLY</code> granularity, the maximum value is\
              \ <code>4</code>.</p> </li> <li> <p>For the <code>ANNUALLY</code> granularity,\
              \ the maximum value is <code>1</code>.</p> </li> </ul>"
        LookBackAvailablePeriods:
          allOf:
          - $ref: '#/components/schemas/AdjustmentPeriod'
          - description: "<p>The integer that describes how many budget periods in\
              \ your <code>BudgetAdjustmentPeriod</code> are included in the calculation\
              \ of your current <code>BudgetLimit</code>. If the first budget period\
              \ in your <code>BudgetAdjustmentPeriod</code> has no cost data, then\
              \ that budget period isn’t included in the average that determines your\
              \ budget limit. </p> <p>For example, if you set <code>BudgetAdjustmentPeriod</code>\
              \ as <code>4</code> quarters, but your account had no cost data in the\
              \ first quarter, then only the last three quarters are included in the\
              \ calculation. In this scenario, <code>LookBackAvailablePeriods</code>\
              \ returns <code>3</code>. </p> <p>You can’t set your own <code>LookBackAvailablePeriods</code>.\
              \ The value is automatically calculated from the <code>BudgetAdjustmentPeriod</code>\
              \ and your historical cost data.</p>"
      required:
      - BudgetAdjustmentPeriod
      type: object
    AutoAdjustData:
      description: The parameters that determine the budget amount for an auto-adjusting
        budget.
      properties:
        AutoAdjustType:
          allOf:
          - $ref: '#/components/schemas/AutoAdjustType'
          - description: The string that defines whether your budget auto-adjusts
              based on historical or forecasted data.
        HistoricalOptions:
          $ref: '#/components/schemas/AutoAdjustData_HistoricalOptions'
        LastAutoAdjustTime:
          allOf:
          - $ref: '#/components/schemas/GenericTimestamp'
          - description: The last time that your budget was auto-adjusted.
      required:
      - AutoAdjustType
      type: object
    Spend:
      description: "<p>The amount of cost or usage that's measured for a budget.</p>\
        \ <p>For example, a <code>Spend</code> for <code>3 GB</code> of S3 usage has\
        \ the following parameters:</p> <ul> <li> <p>An <code>Amount</code> of <code>3</code>\
        \ </p> </li> <li> <p>A <code>unit</code> of <code>GB</code> </p> </li> </ul>"
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/NumericValue'
          - description: "The cost or usage amount that's associated with a budget\
              \ forecast, actual spend, or budget threshold."
        Unit:
          allOf:
          - $ref: '#/components/schemas/UnitValue'
          - description: "The unit of measurement that's used for the budget forecast,\
              \ actual spend, or budget threshold, such as USD or GBP."
      required:
      - Amount
      - Unit
      type: object
    PlannedBudgetLimits:
      additionalProperties:
        $ref: '#/components/schemas/Spend'
      type: object
    CostFilters:
      additionalProperties:
        $ref: '#/components/schemas/DimensionValues'
      description: ' A map that represents the cost filters that are applied to the
        budget.'
      type: object
    CostTypes:
      description: "<p>The types of cost that are included in a <code>COST</code>\
        \ budget, such as tax and subscriptions.</p> <p> <code>USAGE</code>, <code>RI_UTILIZATION</code>,\
        \ <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, and <code>SAVINGS_PLANS_COVERAGE</code>\
        \ budgets don't have <code>CostTypes</code>.</p>"
      properties:
        IncludeTax:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes taxes.</p> <p>The
              default value is <code>true</code>.</p>
        IncludeSubscription:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes subscriptions.</p>
              <p>The default value is <code>true</code>.</p>
        UseBlended:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget uses a blended rate.</p> <p>The
              default value is <code>false</code>.</p>
        IncludeRefund:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes refunds.</p> <p>The
              default value is <code>true</code>.</p>
        IncludeCredit:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes credits.</p> <p>The
              default value is <code>true</code>.</p>
        IncludeUpfront:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes upfront RI costs.</p>
              <p>The default value is <code>true</code>.</p>
        IncludeRecurring:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes recurring fees such
              as monthly RI fees.</p> <p>The default value is <code>true</code>.</p>
        IncludeOtherSubscription:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes non-RI subscription
              costs.</p> <p>The default value is <code>true</code>.</p>
        IncludeSupport:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes support subscription
              fees.</p> <p>The default value is <code>true</code>.</p>
        IncludeDiscount:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget includes discounts.</p> <p>The
              default value is <code>true</code>.</p>
        UseAmortized:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: <p>Specifies whether a budget uses the amortized rate.</p>
              <p>The default value is <code>false</code>.</p>
      type: object
    TimeUnit:
      description: " The time unit of the budget, such as MONTHLY or QUARTERLY."
      enum:
      - DAILY
      - MONTHLY
      - QUARTERLY
      - ANNUALLY
      type: string
    TimePeriod:
      description: 'The period of time that''s covered by a budget. The period has
        a start date and an end date. The start date must come before the end date.
        There are no restrictions on the end date. '
      example:
        Start: ""
        End: ""
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/GenericTimestamp'
          - description: "<p>The start date for a budget. If you created your budget\
              \ and didn't specify a start date, Amazon Web Services defaults to the\
              \ start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY).\
              \ For example, if you created your budget on January 24, 2018, chose\
              \ <code>DAILY</code>, and didn't set a start date, Amazon Web Services\
              \ set your start date to <code>01/24/18 00:00 UTC</code>. If you chose\
              \ <code>MONTHLY</code>, Amazon Web Services set your start date to <code>01/01/18\
              \ 00:00 UTC</code>. The defaults are the same for the Billing and Cost\
              \ Management console and the API.</p> <p>You can change your start date\
              \ with the <code>UpdateBudget</code> operation.</p>"
        End:
          allOf:
          - $ref: '#/components/schemas/GenericTimestamp'
          - description: "<p>The end date for a budget. If you didn't specify an end\
              \ date, Amazon Web Services set your end date to <code>06/15/87 00:00\
              \ UTC</code>. The defaults are the same for the Billing and Cost Management\
              \ console and the API.</p> <p>After the end date, Amazon Web Services\
              \ deletes the budget and all the associated notifications and subscribers.\
              \ You can change your end date with the <code>UpdateBudget</code> operation.</p>"
      type: object
    CalculatedSpend:
      description: "<p>The spend objects that are associated with this budget. The\
        \ <code>actualSpend</code> tracks how much you've used, cost, usage, RI units,\
        \ or Savings Plans units and the <code>forecastedSpend</code> tracks how much\
        \ that you're predicted to spend based on your historical usage profile.</p>\
        \ <p>For example, if it's the 20th of the month and you have spent <code>50</code>\
        \ dollars on Amazon EC2, your <code>actualSpend</code> is <code>50 USD</code>,\
        \ and your <code>forecastedSpend</code> is <code>75 USD</code>.</p>"
      properties:
        ActualSpend:
          $ref: '#/components/schemas/CalculatedSpend_ActualSpend'
        ForecastedSpend:
          $ref: '#/components/schemas/CalculatedSpend_ForecastedSpend'
      required:
      - ActualSpend
      type: object
    BudgetType:
      description: "<p> The type of a budget. It must be one of the following types:\
        \ </p> <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>,\
        \ <code>RI_COVERAGE</code>, <code>SAVINGS_PLANS_UTILIZATION</code>, or <code>SAVINGS_PLANS_COVERAGE</code>.</p>"
      enum:
      - USAGE
      - COST
      - RI_UTILIZATION
      - RI_COVERAGE
      - SAVINGS_PLANS_UTILIZATION
      - SAVINGS_PLANS_COVERAGE
      type: string
    Budget:
      description: "<p>Represents the output of the <code>CreateBudget</code> operation.\
        \ The content consists of the detailed metadata and data file information,\
        \ and the current status of the <code>budget</code> object.</p> <p>This is\
        \ the Amazon Resource Name (ARN) pattern for a budget: </p> <p> <code>arn:aws:budgets::AccountId:budget/budgetName</code>\
        \ </p>"
      properties:
        BudgetName:
          allOf:
          - $ref: '#/components/schemas/BudgetName'
          - description: "The name of a budget. The name must be unique within an\
              \ account. The <code>:</code> and <code>\\</code> characters, and the\
              \ \"/action/\" substring, aren't allowed in <code>BudgetName</code>."
        BudgetLimit:
          $ref: '#/components/schemas/Budget_BudgetLimit'
        PlannedBudgetLimits:
          allOf:
          - $ref: '#/components/schemas/PlannedBudgetLimits'
          - description: "<p>A map containing multiple <code>BudgetLimit</code>, including\
              \ current or future limits.</p> <p> <code>PlannedBudgetLimits</code>\
              \ is available for cost or usage budget and supports both monthly and\
              \ quarterly <code>TimeUnit</code>. </p> <p>For monthly budgets, provide\
              \ 12 months of <code>PlannedBudgetLimits</code> values. This must start\
              \ from the current month and include the next 11 months. The <code>key</code>\
              \ is the start of the month, <code>UTC</code> in epoch seconds. </p>\
              \ <p>For quarterly budgets, provide four quarters of <code>PlannedBudgetLimits</code>\
              \ value entries in standard calendar quarter increments. This must start\
              \ from the current quarter and include the next three quarters. The\
              \ <code>key</code> is the start of the quarter, <code>UTC</code> in\
              \ epoch seconds. </p> <p>If the planned budget expires before 12 months\
              \ for monthly or four quarters for quarterly, provide the <code>PlannedBudgetLimits</code>\
              \ values only for the remaining periods.</p> <p>If the budget begins\
              \ at a date in the future, provide <code>PlannedBudgetLimits</code>\
              \ values from the start date of the budget. </p> <p>After all of the\
              \ <code>BudgetLimit</code> values in <code>PlannedBudgetLimits</code>\
              \ are used, the budget continues to use the last limit as the <code>BudgetLimit</code>.\
              \ At that point, the planned budget provides the same experience as\
              \ a fixed budget. </p> <p> <code>DescribeBudget</code> and <code>DescribeBudgets</code>\
              \ response along with <code>PlannedBudgetLimits</code> also contain\
              \ <code>BudgetLimit</code> representing the current month or quarter\
              \ limit present in <code>PlannedBudgetLimits</code>. This only applies\
              \ to budgets that are created with <code>PlannedBudgetLimits</code>.\
              \ Budgets that are created without <code>PlannedBudgetLimits</code>\
              \ only contain <code>BudgetLimit</code>. They don't contain <code>PlannedBudgetLimits</code>.</p>"
        CostFilters:
          allOf:
          - $ref: '#/components/schemas/CostFilters'
          - description: "<p>The cost filters, such as <code>Region</code>, <code>Service</code>,\
              \ <code>member account</code>, <code>Tag</code>, or <code>Cost Category</code>,\
              \ that are applied to a budget.</p> <p>Amazon Web Services Budgets supports\
              \ the following services as a <code>Service</code> filter for RI budgets:</p>\
              \ <ul> <li> <p>Amazon EC2</p> </li> <li> <p>Amazon Redshift</p> </li>\
              \ <li> <p>Amazon Relational Database Service</p> </li> <li> <p>Amazon\
              \ ElastiCache</p> </li> <li> <p>Amazon OpenSearch Service</p> </li>\
              \ </ul>"
        CostTypes:
          $ref: '#/components/schemas/Budget_CostTypes'
        TimeUnit:
          allOf:
          - $ref: '#/components/schemas/TimeUnit'
          - description: The length of time until a budget resets the actual and forecasted
              spend.
        TimePeriod:
          $ref: '#/components/schemas/Budget_TimePeriod'
        CalculatedSpend:
          $ref: '#/components/schemas/Budget_CalculatedSpend'
        BudgetType:
          allOf:
          - $ref: '#/components/schemas/BudgetType'
          - description: "Specifies whether this budget tracks costs, usage, RI utilization,\
              \ RI coverage, Savings Plans utilization, or Savings Plans coverage."
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/GenericTimestamp'
          - description: The last time that you updated this budget.
        AutoAdjustData:
          $ref: '#/components/schemas/Budget_AutoAdjustData'
      required:
      - BudgetName
      - BudgetType
      - TimeUnit
      type: object
    Notifications:
      description: ' A list of notifications.'
      items:
        $ref: '#/components/schemas/Notification'
      type: array
    BudgetNotificationsForAccount:
      description: ' The budget name and associated notifications for an account. '
      properties:
        Notifications:
          description: ' A list of notifications.'
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
      type: object
    BudgetNotificationsForAccountList:
      items:
        $ref: '#/components/schemas/BudgetNotificationsForAccount'
      maxItems: 50
      type: array
    BudgetedAndActualAmountsList:
      items:
        $ref: '#/components/schemas/BudgetedAndActualAmounts'
      type: array
    BudgetPerformanceHistory:
      description: A history of the state of a budget at the end of the budget's specified
        time period.
      properties:
        BudgetName:
          description: " A string that represents the budget name. The \":\" and \"\
            \\\" characters, and the \"/action/\" substring, aren't allowed."
          maxLength: 100
          minLength: 1
          pattern: "^(?![^:\\\\]*/action/)[^:\\\\]+$"
          type: string
        BudgetType:
          $ref: '#/components/schemas/BudgetType'
        CostFilters:
          allOf:
          - $ref: '#/components/schemas/CostFilters'
          - description: The history of the cost filters for a budget during the specified
              time period.
        CostTypes:
          $ref: '#/components/schemas/BudgetPerformanceHistory_CostTypes'
        TimeUnit:
          $ref: '#/components/schemas/TimeUnit'
        BudgetedAndActualAmountsList:
          allOf:
          - $ref: '#/components/schemas/BudgetedAndActualAmountsList'
          - description: "A list of amounts of cost or usage that you created budgets\
              \ for, which are compared to your actual costs or usage."
      type: object
    BudgetedAndActualAmounts:
      description: "The amount of cost or usage that you created the budget for, compared\
        \ to your actual costs or usage."
      properties:
        BudgetedAmount:
          $ref: '#/components/schemas/BudgetedAndActualAmounts_BudgetedAmount'
        ActualAmount:
          $ref: '#/components/schemas/BudgetedAndActualAmounts_ActualAmount'
        TimePeriod:
          $ref: '#/components/schemas/BudgetedAndActualAmounts_TimePeriod'
      type: object
    Budgets:
      description: ' A list of budgets.'
      items:
        $ref: '#/components/schemas/Budget'
      type: array
    ComparisonOperator:
      description: "<p> The comparison operator of a notification. Currently, the\
        \ service supports the following operators:</p> <p> <code>GREATER_THAN</code>,\
        \ <code>LESS_THAN</code>, <code>EQUAL_TO</code> </p>"
      enum:
      - GREATER_THAN
      - LESS_THAN
      - EQUAL_TO
      type: string
    DimensionValues:
      items:
        $ref: '#/components/schemas/DimensionValue'
      type: array
    NullableBoolean:
      type: boolean
    NotificationWithSubscribersList:
      description: " A list of notifications, each with a list of subscribers."
      items:
        $ref: '#/components/schemas/NotificationWithSubscribers'
      maxItems: 10
      type: array
    Notification:
      description: "<p>A notification that's associated with a budget. A budget can\
        \ have up to ten notifications. </p> <p>Each notification must have at least\
        \ one subscriber. A notification can have one SNS subscriber and up to 10\
        \ email subscribers, for a total of 11 subscribers.</p> <p>For example, if\
        \ you have a budget for 200 dollars and you want to be notified when you go\
        \ over 160 dollars, create a notification with the following parameters:</p>\
        \ <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A\
        \ <code>thresholdType</code> of <code>PERCENTAGE</code> </p> </li> <li> <p>A\
        \ <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li>\
        \ <li> <p>A notification <code>threshold</code> of <code>80</code> </p> </li>\
        \ </ul>"
      properties:
        NotificationType:
          allOf:
          - $ref: '#/components/schemas/NotificationType'
          - description: Specifies whether the notification is for how much you have
              spent (<code>ACTUAL</code>) or for how much that you're forecasted to
              spend (<code>FORECASTED</code>).
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: The comparison that's used for this notification.
        Threshold:
          allOf:
          - $ref: '#/components/schemas/NotificationThreshold'
          - description: "The threshold that's associated with a notification. Thresholds\
              \ are always a percentage, and many customers find value being alerted\
              \ between 50% - 200% of the budgeted amount. The maximum limit for your\
              \ threshold is 1,000,000% above the budgeted amount."
        ThresholdType:
          allOf:
          - $ref: '#/components/schemas/ThresholdType'
          - description: "The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code>\
              \ thresholds, Amazon Web Services notifies you when you go over or are\
              \ forecasted to go over your total cost threshold. For <code>PERCENTAGE</code>\
              \ thresholds, Amazon Web Services notifies you when you go over or are\
              \ forecasted to go over a certain percentage of your forecasted spend.\
              \ For example, if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code>\
              \ threshold of 80%, Amazon Web Services notifies you when you go over\
              \ 160 dollars."
        NotificationState:
          allOf:
          - $ref: '#/components/schemas/NotificationState'
          - description: "Specifies whether this notification is in alarm. If a budget\
              \ notification is in the <code>ALARM</code> state, you passed the set\
              \ threshold for the budget."
      required:
      - ComparisonOperator
      - NotificationType
      - Threshold
      type: object
    Subscriber:
      description: "<p>The subscriber to a budget notification. The subscriber consists\
        \ of a subscription type and either an Amazon SNS topic or an email address.</p>\
        \ <p>For example, an email subscriber has the following parameters:</p> <ul>\
        \ <li> <p>A <code>subscriptionType</code> of <code>EMAIL</code> </p> </li>\
        \ <li> <p>An <code>address</code> of <code>example@example.com</code> </p>\
        \ </li> </ul>"
      example:
        SubscriptionType: ""
        Address: ""
      properties:
        SubscriptionType:
          allOf:
          - $ref: '#/components/schemas/SubscriptionType'
          - description: The type of notification that Amazon Web Services sends to
              a subscriber.
        Address:
          allOf:
          - $ref: '#/components/schemas/SubscriberAddress'
          - description: "<p>The address that Amazon Web Services sends budget notifications\
              \ to, either an SNS topic or an email.</p> <p>When you create a subscriber,\
              \ the value of <code>Address</code> can't contain line breaks.</p>"
      required:
      - Address
      - SubscriptionType
      type: object
    IamActionDefinition:
      description: 'The Identity and Access Management (IAM) action definition details. '
      properties:
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          - description: 'The Amazon Resource Name (ARN) of the policy to be attached. '
        Roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          - description: 'A list of roles to be attached. There must be at least one
              role. '
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          - description: 'A list of groups to be attached. There must be at least
              one group. '
        Users:
          allOf:
          - $ref: '#/components/schemas/Users'
          - description: 'A list of users to be attached. There must be at least one
              user. '
      required:
      - PolicyArn
      type: object
    ScpActionDefinition:
      description: 'The service control policies (SCP) action definition details. '
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: 'The policy ID attached. '
        TargetIds:
          allOf:
          - $ref: '#/components/schemas/TargetIds'
          - description: 'A list of target IDs. '
      required:
      - PolicyId
      - TargetIds
      type: object
    SsmActionDefinition:
      description: 'The Amazon Web Services Systems Manager (SSM) action definition
        details. '
      properties:
        ActionSubType:
          allOf:
          - $ref: '#/components/schemas/ActionSubType'
          - description: 'The action subType. '
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: 'The Region to run the SSM document. '
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIds'
          - description: 'The EC2 and RDS instance IDs. '
      required:
      - ActionSubType
      - InstanceIds
      - Region
      type: object
    MaxResults:
      description: ' An integer that represents how many entries a paginated response
        contains. The maximum is 100.'
      maximum: 100
      minimum: 1
      type: integer
    MaxResultsBudgetNotifications:
      maximum: 50
      minimum: 1
      type: integer
    DimensionValue:
      maxLength: 2147483647
      minLength: 0
      pattern: "[\\S\\s]*"
      type: string
    ExecutionType:
      enum:
      - APPROVE_BUDGET_ACTION
      - RETRY_BUDGET_ACTION
      - REVERSE_BUDGET_ACTION
      - RESET_BUDGET_ACTION
      type: string
    Group:
      maxLength: 640
      minLength: 1
      pattern: "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$"
      type: string
    Groups:
      items:
        $ref: '#/components/schemas/Group'
      maxItems: 100
      minItems: 1
      type: array
    PolicyArn:
      maxLength: 684
      minLength: 25
      pattern: "^arn:(aws|aws-cn|aws-us-gov|us-iso-east-1|us-isob-east-1):iam::(\\\
        d{12}|aws):policy(\\u002F[\\u0021-\\u007F]+\\u002F|\\u002F)[\\w+=,.@-]+$"
      type: string
    Roles:
      items:
        $ref: '#/components/schemas/Role'
      maxItems: 100
      minItems: 1
      type: array
    Users:
      items:
        $ref: '#/components/schemas/User'
      maxItems: 100
      minItems: 1
      type: array
    InstanceId:
      maxLength: 63
      minLength: 1
      pattern: "^i-(\\w{8}|\\w{17})$|^[a-zA-Z]([\\w-]{0,61}\\w)?$"
      type: string
    InstanceIds:
      items:
        $ref: '#/components/schemas/InstanceId'
      maxItems: 100
      minItems: 1
      type: array
    NotificationState:
      enum:
      - OK
      - ALARM
      type: string
    NotificationWithSubscribers:
      description: "A notification with subscribers. A notification can have one SNS\
        \ subscriber and up to 10 email subscribers, for a total of 11 subscribers."
      properties:
        Notification:
          $ref: '#/components/schemas/NotificationWithSubscribers_Notification'
        Subscribers:
          allOf:
          - $ref: '#/components/schemas/Subscribers'
          - description: A list of subscribers who are subscribed to this notification.
      required:
      - Notification
      - Subscribers
      type: object
    NumericValue:
      description: ' A string that represents a numeric value.'
      maxLength: 2147483647
      minLength: 1
      pattern: "([0-9]*\\.)?[0-9]+"
      type: string
    PolicyId:
      maxLength: 130
      minLength: 10
      pattern: "^p-[0-9a-zA-Z_]{8,128}$"
      type: string
    Region:
      maxLength: 20
      minLength: 9
      pattern: "^\\w{2}-\\w+(-\\w+)?-\\d$"
      type: string
    Role:
      maxLength: 576
      minLength: 1
      pattern: "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$"
      type: string
    TargetIds:
      items:
        $ref: '#/components/schemas/TargetId'
      maxItems: 100
      minItems: 1
      type: array
    UnitValue:
      description: ' A string that represents the spend unit of a budget. It can''t
        be null or empty.'
      maxLength: 2147483647
      minLength: 1
      pattern: .*
      type: string
    SubscriptionType:
      description: ' The subscription type of the subscriber. It can be SMS or EMAIL.'
      enum:
      - SNS
      - EMAIL
      type: string
    SubscriberAddress:
      description: ' A string that contains an email address or SNS topic for the
        subscriber''s address.'
      format: password
      maxLength: 2147483647
      minLength: 1
      pattern: "(.*[\\n\\r\\t\\f\\ ]?)*"
      type: string
    TargetId:
      maxLength: 68
      minLength: 12
      pattern: "^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$)|(\\d{12})"
      type: string
    User:
      maxLength: 576
      minLength: 1
      pattern: "^([\\u0021-\\u007F]+\\u002F)?[\\w+=,.@-]+$"
      type: string
    CreateBudgetRequest_Budget:
      allOf:
      - $ref: '#/components/schemas/Budget'
      - description: The budget object that you want to create.
      example:
        BudgetLimit:
          Amount: ""
          Unit: ""
        TimePeriod:
          Start: ""
          End: ""
        CalculatedSpend:
          ActualSpend:
            Amount: ""
            Unit: ""
          ForecastedSpend:
            Amount: ""
            Unit: ""
        TimeUnit: ""
        LastUpdatedTime: ""
        AutoAdjustData:
          AutoAdjustType: ""
          HistoricalOptions:
            BudgetAdjustmentPeriod: ""
            LookBackAvailablePeriods: ""
          LastAutoAdjustTime: ""
        PlannedBudgetLimits: ""
        CostFilters: ""
        BudgetName: ""
        CostTypes:
          IncludeSupport: ""
          IncludeOtherSubscription: ""
          IncludeTax: ""
          IncludeSubscription: ""
          UseBlended: ""
          IncludeUpfront: ""
          IncludeDiscount: ""
          IncludeCredit: ""
          IncludeRecurring: ""
          UseAmortized: ""
          IncludeRefund: ""
        BudgetType: ""
    CreateNotificationRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification that you want to create.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    CreateSubscriberRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification that you want to create a subscriber for.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    CreateSubscriberRequest_Subscriber:
      allOf:
      - $ref: '#/components/schemas/Subscriber'
      - description: The subscriber that you want to associate with a budget notification.
      example:
        SubscriptionType: ""
        Address: ""
    DeleteNotificationRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification that you want to delete.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    DeleteSubscriberRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification whose subscriber you want to delete.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    DeleteSubscriberRequest_Subscriber:
      allOf:
      - $ref: '#/components/schemas/Subscriber'
      - description: The subscriber that you want to delete.
      example:
        SubscriptionType: ""
        Address: ""
    DescribeBudgetResponse_Budget:
      allOf:
      - $ref: '#/components/schemas/Budget'
      - description: The description of the budget.
      example:
        BudgetLimit:
          Amount: ""
          Unit: ""
        TimePeriod:
          Start: ""
          End: ""
        CalculatedSpend:
          ActualSpend:
            Amount: ""
            Unit: ""
          ForecastedSpend:
            Amount: ""
            Unit: ""
        TimeUnit: ""
        LastUpdatedTime: ""
        AutoAdjustData:
          AutoAdjustType: ""
          HistoricalOptions:
            BudgetAdjustmentPeriod: ""
            LookBackAvailablePeriods: ""
          LastAutoAdjustTime: ""
        PlannedBudgetLimits: ""
        CostFilters: ""
        BudgetName: ""
        CostTypes:
          IncludeSupport: ""
          IncludeOtherSubscription: ""
          IncludeTax: ""
          IncludeSubscription: ""
          UseBlended: ""
          IncludeUpfront: ""
          IncludeDiscount: ""
          IncludeCredit: ""
          IncludeRecurring: ""
          UseAmortized: ""
          IncludeRefund: ""
        BudgetType: ""
    DescribeBudgetActionResponse_Action:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: ' A budget action resource. '
      example:
        Status: ""
        ExecutionRoleArn: ""
        ActionId: ""
        ActionType: ""
        NotificationType: ACTUAL
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
    DescribeBudgetPerformanceHistoryResponse_BudgetPerformanceHistory:
      allOf:
      - $ref: '#/components/schemas/BudgetPerformanceHistory'
      - description: "<p>The history of how often the budget has gone into an <code>ALARM</code>\
          \ state.</p> <p>For <code>DAILY</code> budgets, the history saves the state\
          \ of the budget for the last 60 days. For <code>MONTHLY</code> budgets,\
          \ the history saves the state of the budget for the current month plus the\
          \ last 12 months. For <code>QUARTERLY</code> budgets, the history saves\
          \ the state of the budget for the last four quarters.</p>"
      example:
        TimeUnit: DAILY
        CostFilters: ""
        BudgetName: BudgetName
        BudgetType: USAGE
        CostTypes:
          IncludeSupport: ""
          IncludeOtherSubscription: ""
          IncludeTax: ""
          IncludeSubscription: ""
          UseBlended: ""
          IncludeUpfront: ""
          IncludeDiscount: ""
          IncludeCredit: ""
          IncludeRecurring: ""
          UseAmortized: ""
          IncludeRefund: ""
        BudgetedAndActualAmountsList: ""
    DescribeBudgetPerformanceHistoryRequest_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/TimePeriod'
      - description: Retrieves how often the budget went into an <code>ALARM</code>
          state for the specified time period.
      example:
        Start: ""
        End: ""
    DescribeSubscribersForNotificationRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification whose subscribers you want to list.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    UpdateBudgetRequest_NewBudget:
      allOf:
      - $ref: '#/components/schemas/Budget'
      - description: The budget that you want to update your budget to.
      example:
        BudgetLimit:
          Amount: ""
          Unit: ""
        TimePeriod:
          Start: ""
          End: ""
        CalculatedSpend:
          ActualSpend:
            Amount: ""
            Unit: ""
          ForecastedSpend:
            Amount: ""
            Unit: ""
        TimeUnit: ""
        LastUpdatedTime: ""
        AutoAdjustData:
          AutoAdjustType: ""
          HistoricalOptions:
            BudgetAdjustmentPeriod: ""
            LookBackAvailablePeriods: ""
          LastAutoAdjustTime: ""
        PlannedBudgetLimits: ""
        CostFilters: ""
        BudgetName: ""
        CostTypes:
          IncludeSupport: ""
          IncludeOtherSubscription: ""
          IncludeTax: ""
          IncludeSubscription: ""
          UseBlended: ""
          IncludeUpfront: ""
          IncludeDiscount: ""
          IncludeCredit: ""
          IncludeRecurring: ""
          UseAmortized: ""
          IncludeRefund: ""
        BudgetType: ""
    UpdateBudgetActionResponse_OldAction:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: ' The previous action resource information. '
      example:
        Status: ""
        ExecutionRoleArn: ""
        ActionId: ""
        ActionType: ""
        NotificationType: ACTUAL
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
    UpdateBudgetActionResponse_NewAction:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: ' The updated action resource information. '
      example:
        Status: ""
        ExecutionRoleArn: ""
        ActionId: ""
        ActionType: ""
        NotificationType: null
        ActionThreshold:
          ActionThresholdValue: 1201242285691.5173
          ActionThresholdType: PERCENTAGE
        Definition:
          SsmActionDefinition:
            Region: ""
            ActionSubType: ""
            InstanceIds: ""
          IamActionDefinition:
            PolicyArn: ""
            Groups: ""
            Roles: ""
            Users: ""
          ScpActionDefinition:
            TargetIds: ""
            PolicyId: ""
        ApprovalModel: ""
        Subscribers:
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        - SubscriptionType: ""
          Address: ""
        BudgetName: BudgetName
    UpdateNotificationRequest_OldNotification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The previous notification that is associated with a budget.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    UpdateNotificationRequest_NewNotification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The updated notification to be associated with a budget.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    UpdateSubscriberRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification whose subscriber you want to update.
      example:
        ComparisonOperator: ""
        NotificationType: ""
        Threshold: ""
        ThresholdType: ""
        NotificationState: ""
    UpdateSubscriberRequest_OldSubscriber:
      allOf:
      - $ref: '#/components/schemas/Subscriber'
      - description: The previous subscriber that is associated with a budget notification.
      example:
        SubscriptionType: ""
        Address: ""
    UpdateSubscriberRequest_NewSubscriber:
      allOf:
      - $ref: '#/components/schemas/Subscriber'
      - description: The updated subscriber that is associated with a budget notification.
      example:
        SubscriptionType: ""
        Address: ""
    Definition_IamActionDefinition:
      allOf:
      - $ref: '#/components/schemas/IamActionDefinition'
      - description: 'The Identity and Access Management (IAM) action definition details. '
      example:
        PolicyArn: ""
        Groups: ""
        Roles: ""
        Users: ""
    Definition_ScpActionDefinition:
      allOf:
      - $ref: '#/components/schemas/ScpActionDefinition'
      - description: 'The service control policies (SCPs) action definition details. '
      example:
        TargetIds: ""
        PolicyId: ""
    Definition_SsmActionDefinition:
      allOf:
      - $ref: '#/components/schemas/SsmActionDefinition'
      - description: 'The Amazon Web Services Systems Manager (SSM) action definition
          details. '
      example:
        Region: ""
        ActionSubType: ""
        InstanceIds: ""
    Action_ActionThreshold:
      allOf:
      - $ref: '#/components/schemas/ActionThreshold'
      - description: 'The trigger threshold of the action. '
      example:
        ActionThresholdValue: 1201242285691.5173
        ActionThresholdType: PERCENTAGE
    Action_Definition:
      allOf:
      - $ref: '#/components/schemas/Definition'
      - description: 'Where you specify all of the type-specific parameters. '
      example:
        SsmActionDefinition:
          Region: ""
          ActionSubType: ""
          InstanceIds: ""
        IamActionDefinition:
          PolicyArn: ""
          Groups: ""
          Roles: ""
          Users: ""
        ScpActionDefinition:
          TargetIds: ""
          PolicyId: ""
    ActionHistory_ActionHistoryDetails:
      allOf:
      - $ref: '#/components/schemas/ActionHistoryDetails'
      - description: 'The description of the details for the event. '
    ActionHistoryDetails_Action:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: 'The budget action resource. '
    AutoAdjustData_HistoricalOptions:
      allOf:
      - $ref: '#/components/schemas/HistoricalOptions'
      - description: The parameters that define or describe the historical data that
          your auto-adjusting budget is based on.
      example:
        BudgetAdjustmentPeriod: ""
        LookBackAvailablePeriods: ""
    CalculatedSpend_ActualSpend:
      allOf:
      - $ref: '#/components/schemas/Spend'
      - description: "The amount of cost, usage, RI units, or Savings Plans units\
          \ that you used."
      example:
        Amount: ""
        Unit: ""
    CalculatedSpend_ForecastedSpend:
      allOf:
      - $ref: '#/components/schemas/Spend'
      - description: "The amount of cost, usage, RI units, or Savings Plans units\
          \ that you're forecasted to use."
      example:
        Amount: ""
        Unit: ""
    Budget_BudgetLimit:
      allOf:
      - $ref: '#/components/schemas/Spend'
      - description: "<p>The total amount of cost, usage, RI utilization, RI coverage,\
          \ Savings Plans utilization, or Savings Plans coverage that you want to\
          \ track with your budget.</p> <p> <code>BudgetLimit</code> is required for\
          \ cost or usage budgets, but optional for RI or Savings Plans utilization\
          \ or coverage budgets. RI and Savings Plans utilization or coverage budgets\
          \ default to <code>100</code>. This is the only valid value for RI or Savings\
          \ Plans utilization or coverage budgets. You can't use <code>BudgetLimit</code>\
          \ with <code>PlannedBudgetLimits</code> for <code>CreateBudget</code> and\
          \ <code>UpdateBudget</code> actions. </p>"
      example:
        Amount: ""
        Unit: ""
    Budget_CostTypes:
      allOf:
      - $ref: '#/components/schemas/CostTypes'
      - description: "<p>The types of costs that are included in this <code>COST</code>\
          \ budget.</p> <p> <code>USAGE</code>, <code>RI_UTILIZATION</code>, <code>RI_COVERAGE</code>,\
          \ <code>SAVINGS_PLANS_UTILIZATION</code>, and <code>SAVINGS_PLANS_COVERAGE</code>\
          \ budgets do not have <code>CostTypes</code>.</p>"
      example:
        IncludeSupport: ""
        IncludeOtherSubscription: ""
        IncludeTax: ""
        IncludeSubscription: ""
        UseBlended: ""
        IncludeUpfront: ""
        IncludeDiscount: ""
        IncludeCredit: ""
        IncludeRecurring: ""
        UseAmortized: ""
        IncludeRefund: ""
    Budget_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/TimePeriod'
      - description: "<p>The period of time that's covered by a budget. You setthe\
          \ start date and end date. The start date must come before the end date.\
          \ The end date must come before <code>06/15/87 00:00 UTC</code>. </p> <p>If\
          \ you create your budget and don't specify a start date, Amazon Web Services\
          \ defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY,\
          \ or ANNUALLY). For example, if you created your budget on January 24, 2018,\
          \ chose <code>DAILY</code>, and didn't set a start date, Amazon Web Services\
          \ set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>,\
          \ Amazon Web Services set your start date to <code>01/01/18 00:00 UTC</code>.\
          \ If you didn't specify an end date, Amazon Web Services set your end date\
          \ to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\
          \ Billing and Cost Management console and the API. </p> <p>You can change\
          \ either date with the <code>UpdateBudget</code> operation.</p> <p>After\
          \ the end date, Amazon Web Services deletes the budget and all the associated\
          \ notifications and subscribers.</p>"
      example:
        Start: ""
        End: ""
    Budget_CalculatedSpend:
      allOf:
      - $ref: '#/components/schemas/CalculatedSpend'
      - description: The actual and forecasted cost or usage that the budget tracks.
      example:
        ActualSpend:
          Amount: ""
          Unit: ""
        ForecastedSpend:
          Amount: ""
          Unit: ""
    Budget_AutoAdjustData:
      allOf:
      - $ref: '#/components/schemas/AutoAdjustData'
      - description: The parameters that determine the budget amount for an auto-adjusting
          budget.
      example:
        AutoAdjustType: ""
        HistoricalOptions:
          BudgetAdjustmentPeriod: ""
          LookBackAvailablePeriods: ""
        LastAutoAdjustTime: ""
    BudgetPerformanceHistory_CostTypes:
      allOf:
      - $ref: '#/components/schemas/CostTypes'
      - description: The history of the cost types for a budget during the specified
          time period.
      example:
        IncludeSupport: ""
        IncludeOtherSubscription: ""
        IncludeTax: ""
        IncludeSubscription: ""
        UseBlended: ""
        IncludeUpfront: ""
        IncludeDiscount: ""
        IncludeCredit: ""
        IncludeRecurring: ""
        UseAmortized: ""
        IncludeRefund: ""
    BudgetedAndActualAmounts_BudgetedAmount:
      allOf:
      - $ref: '#/components/schemas/Spend'
      - description: The amount of cost or usage that you created the budget for.
    BudgetedAndActualAmounts_ActualAmount:
      allOf:
      - $ref: '#/components/schemas/Spend'
      - description: Your actual costs or usage for a budget period.
    BudgetedAndActualAmounts_TimePeriod:
      allOf:
      - $ref: '#/components/schemas/TimePeriod'
      - description: The time period that's covered by this budget comparison.
    NotificationWithSubscribers_Notification:
      allOf:
      - $ref: '#/components/schemas/Notification'
      - description: The notification that's associated with a budget.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

