openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Catalog API actions allow you to manage your entities through list,\
    \ describe, and update capabilities. An entity can be a product or an offer on\
    \ AWS Marketplace. </p> <p>You can automate your entity update process by integrating\
    \ the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment\
    \ pipelines. You can also create your own applications on top of the Catalog API\
    \ to manage your products on AWS Marketplace.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Marketplace Catalog Service
  version: 2018-09-17
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: marketplace-catalog
  x-aws-signingName: aws-marketplace
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/marketplace-catalog-2018-09-17.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/marketplace/
servers:
- description: The AWS Marketplace Catalog multi-region endpoint
  url: "http://catalog.marketplace.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Marketplace Catalog multi-region endpoint
  url: "https://catalog.marketplace.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Marketplace Catalog endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://catalog.marketplace.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Marketplace Catalog endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://catalog.marketplace.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /CancelChangeSet#catalog&changeSetId:
    patch:
      description: "Used to cancel an open change request. Must be sent before the\
        \ status of the request changes to <code>APPLYING</code>, the final stage\
        \ of completing your change request. You can describe a change during the\
        \ 60-day request history retention period for API calls."
      operationId: cancel_change_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code>."
        explode: true
        in: query
        name: catalog
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          type: string
        style: form
      - description: Required. The unique identifier of the <code>StartChangeSet</code>
          request that you want to cancel.
        explode: true
        in: query
        name: changeSetId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w\\-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelChangeSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /DeleteResourcePolicy#resourceArn:
    delete:
      description: Deletes a resource-based policy on an Entity that is identified
        by its resource ARN.
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the Entity resource that is
          associated with the resource policy.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /DescribeChangeSet#catalog&changeSetId:
    get:
      description: Provides information about a given change set.
      operationId: describe_change_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
        explode: true
        in: query
        name: catalog
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          type: string
        style: form
      - description: Required. The unique identifier for the <code>StartChangeSet</code>
          request that you want to describe the details for.
        explode: true
        in: query
        name: changeSetId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w\\-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChangeSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /DescribeEntity#catalog&entityId:
    get:
      description: Returns the metadata and content of the entity.
      operationId: describe_entity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Required. The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
        explode: true
        in: query
        name: catalog
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          type: string
        style: form
      - description: Required. The unique ID of the entity to describe.
        explode: true
        in: query
        name: entityId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w\\-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotSupportedException'
          description: ResourceNotSupportedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /GetResourcePolicy#resourceArn:
    get:
      description: Gets a resource-based policy of an Entity that is identified by
        its resource ARN.
      operationId: get_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the Entity resource that is
          associated with the resource policy.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /ListChangeSets:
    post:
      description: "<p>Returns the list of change sets owned by the account being\
        \ used to make the call. You can filter this list by providing any combination\
        \ of <code>entityId</code>, <code>ChangeSetName</code>, and status. If you\
        \ provide more than one filter, the API operation applies a logical AND between\
        \ the filters.</p> <p>You can describe a change during the 60-day request\
        \ history retention period for API calls.</p>"
      operationId: list_change_sets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListChangeSets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChangeSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListEntities:
    post:
      description: Provides the list of entities of a given type.
      operationId: list_entities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntities_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListTagsForResource:
    post:
      description: Lists all tags that have been added to a resource (either an <a
        href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities">entity</a>
        or <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets">change
        set</a>).
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /PutResourcePolicy:
    post:
      description: "Attaches a resource-based policy to an Entity. Examples of an\
        \ entity include: <code>AmiProduct</code> and <code>ContainerProduct</code>."
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /StartChangeSet:
    post:
      description: "<p>Allows you to request changes for your entities. Within a single\
        \ <code>ChangeSet</code>, you can't start the same change type against the\
        \ same entity multiple times. Additionally, when a <code>ChangeSet</code>\
        \ is running, all the entities targeted by the different changes are locked\
        \ until the change set has completed (either succeeded, cancelled, or failed).\
        \ If you try to start a change set containing a change against an entity that\
        \ is already locked, you will receive a <code>ResourceInUseException</code>\
        \ error.</p> <p>For example, you can't start the <code>ChangeSet</code> described\
        \ in the <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_StartChangeSet.html#API_StartChangeSet_Examples\"\
        >example</a> later in this topic because it contains two changes to run the\
        \ same change type (<code>AddRevisions</code>) against the same entity (<code>entity-id@1</code>).</p>\
        \ <p>For more information about working with change sets, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\"\
        > Working with change sets</a>. For information on change types for single-AMI\
        \ products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\"\
        >Working with single-AMI products</a>. Als, for more information on change\
        \ types available for container-based products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\"\
        >Working with container products</a>.</p>"
      operationId: start_change_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartChangeSet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChangeSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TagResource:
    post:
      description: Tags a resource (either an <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities">entity</a>
        or <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets">change
        set</a>).
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UntagResource:
    post:
      description: Removes a tag or list of tags from a resource (either an <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities">entity</a>
        or <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets">change
        set</a>).
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelChangeSetResponse:
      example:
        ChangeSetId: ""
        ChangeSetArn: ""
      properties:
        ChangeSetId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The unique identifier for the change set referenced in this
              request.
          title: ChangeSetId
        ChangeSetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated with the change set referenced in this
              request.
          title: ChangeSetArn
      title: CancelChangeSetResponse
      type: object
    InternalServiceException: {}
    AccessDeniedException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    ThrottlingException: {}
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DescribeChangeSetResponse:
      example:
        Status: ""
        ChangeSetId: ""
        ChangeSetArn: ""
        FailureDescription: ""
        EndTime: ""
        StartTime: ""
        FailureCode: ""
        ChangeSetName: ""
        ChangeSet: ""
      properties:
        ChangeSetId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: Required. The unique identifier for the change set referenced
              in this request.
          title: ChangeSetId
        ChangeSetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated with the unique identifier for the change
              set referenced in this request.
          title: ChangeSetArn
        ChangeSetName:
          allOf:
          - $ref: '#/components/schemas/ChangeSetName'
          - description: "The optional name provided in the <code>StartChangeSet</code>\
              \ request. If you do not provide a name, one is set by default."
          title: ChangeSetName
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The date and time, in ISO 8601 format (2018-02-27T13:45:22Z),\
              \ the request started. "
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The date and time, in ISO 8601 format (2018-02-27T13:45:22Z),\
              \ the request transitioned to a terminal state. The change cannot transition\
              \ to a different state. Null if the request is not in a terminal state. "
          title: EndTime
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeStatus'
          - description: The status of the change request.
          title: Status
        FailureCode:
          allOf:
          - $ref: '#/components/schemas/FailureCode'
          - description: "Returned if the change set is in <code>FAILED</code> status.\
              \ Can be either <code>CLIENT_ERROR</code>, which means that there are\
              \ issues with the request (see the <code>ErrorDetailList</code>), or\
              \ <code>SERVER_FAULT</code>, which means that there is a problem in\
              \ the system, and you should retry your request."
          title: FailureCode
        FailureDescription:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessageContent'
          - description: "Returned if there is a failure on the change set, but that\
              \ failure is not related to any of the changes in the request."
          title: FailureDescription
        ChangeSet:
          allOf:
          - $ref: '#/components/schemas/ChangeSetDescription'
          - description: An array of <code>ChangeSummary</code> objects.
          title: ChangeSet
      title: DescribeChangeSetResponse
      type: object
    DescribeEntityResponse:
      example:
        EntityType: ""
        LastModifiedDate: ""
        Details: ""
        EntityArn: ""
        EntityIdentifier: ""
      properties:
        EntityType:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: "The named type of the entity, in the format of <code>EntityType@Version</code>."
          title: EntityType
        EntityIdentifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: "The identifier of the entity, in the format of <code>EntityId@RevisionId</code>."
          title: EntityIdentifier
        EntityArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated to the unique identifier for the entity
              referenced in this request.
          title: EntityArn
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The last modified date of the entity, in ISO 8601 format\
              \ (2018-02-27T13:45:22Z)."
          title: LastModifiedDate
        Details:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: This stringified JSON object includes the details of the
              entity.
          title: Details
      title: DescribeEntityResponse
      type: object
    ResourceNotSupportedException: {}
    GetResourcePolicyResponse:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyJson'
          - description: The policy document to set; formatted in JSON.
          title: Policy
      title: GetResourcePolicyResponse
      type: object
    ListChangeSetsResponse:
      example:
        NextToken: ""
        ChangeSetSummaryList: ""
      properties:
        ChangeSetSummaryList:
          allOf:
          - $ref: '#/components/schemas/ChangeSetSummaryList'
          - description: ' Array of <code>ChangeSetSummaryListItem</code> objects.'
          title: ChangeSetSummaryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The value of the next token, if it exists. Null if there\
              \ are no more results."
          title: NextToken
      title: ListChangeSetsResponse
      type: object
    Filter:
      description: "A filter object, used to optionally filter results from calls\
        \ to the <code>ListEntities</code> and <code>ListChangeSets</code> actions."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: "<p>For <code>ListEntities</code>, the supported value for\
              \ this is an <code>EntityId</code>.</p> <p>For <code>ListChangeSets</code>,\
              \ the supported values are as follows:</p>"
          title: Name
        ValueList:
          allOf:
          - $ref: '#/components/schemas/ValueList'
          - description: <p> <code>ListEntities</code> - This is a list of unique
              <code>EntityId</code>s.</p> <p> <code>ListChangeSets</code> - The supported
              filter names and associated <code>ValueList</code>s is as follows:</p>
              <ul> <li> <p> <code>ChangeSetName</code> - The supported <code>ValueList</code>
              is a list of non-unique <code>ChangeSetName</code>s. These are defined
              when you call the <code>StartChangeSet</code> action.</p> </li> <li>
              <p> <code>Status</code> - The supported <code>ValueList</code> is a
              list of statuses for all change set requests.</p> </li> <li> <p> <code>EntityId</code>
              - The supported <code>ValueList</code> is a list of unique <code>EntityId</code>s.</p>
              </li> <li> <p> <code>BeforeStartTime</code> - The supported <code>ValueList</code>
              is a list of all change sets that started before the filter value.</p>
              </li> <li> <p> <code>AfterStartTime</code> - The supported <code>ValueList</code>
              is a list of all change sets that started after the filter value.</p>
              </li> <li> <p> <code>BeforeEndTime</code> - The supported <code>ValueList</code>
              is a list of all change sets that ended before the filter value.</p>
              </li> <li> <p> <code>AfterEndTime</code> - The supported <code>ValueList</code>
              is a list of all change sets that ended after the filter value.</p>
              </li> </ul>
          title: ValueList
      title: Filter
      type: object
    SortBy:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      title: SortOrder
      type: string
    ListEntitiesResponse:
      example:
        NextToken: ""
        EntitySummaryList: ""
      properties:
        EntitySummaryList:
          allOf:
          - $ref: '#/components/schemas/EntitySummaryList'
          - description: ' Array of <code>EntitySummary</code> object.'
          title: EntitySummaryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The value of the next token if it exists. Null if there is
              no more result.
          title: NextToken
      title: ListEntitiesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Required. The ARN associated with the resource you want to
              list tags on.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Required. A list of objects specifying each key name and\
              \ value. Number of objects allowed: 1-50."
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PutResourcePolicyResponse:
      properties: {}
      type: object
    StartChangeSetResponse:
      example:
        ChangeSetId: ""
        ChangeSetArn: ""
      properties:
        ChangeSetId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: Unique identifier generated for the request.
          title: ChangeSetId
        ChangeSetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated to the unique identifier generated for
              the request.
          title: ChangeSetArn
      title: StartChangeSetResponse
      type: object
    Change:
      description: "An object that contains the <code>ChangeType</code>, <code>Details</code>,\
        \ and <code>Entity</code>."
      properties:
        ChangeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: "Change types are single string values that describe your\
              \ intention for the change. Each change type is unique for each <code>EntityType</code>\
              \ provided in the change's scope. For more information on change types\
              \ available for single-AMI products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\"\
              >Working with single-AMI products</a>. Also, for more information on\
              \ change types available for container-based products, see <a href=\"\
              https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\"\
              >Working with container products</a>."
          title: ChangeType
        Entity:
          $ref: '#/components/schemas/Change_Entity'
        EntityTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with the change.
          title: EntityTags
        Details:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: "This object contains details specific to the change type\
              \ of the requested change. For more information on change types available\
              \ for single-AMI products, see <a href=\"https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\"\
              >Working with single-AMI products</a>. Also, for more information on\
              \ change types available for container-based products, see <a href=\"\
              https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\"\
              >Working with container products</a>."
          title: Details
        ChangeName:
          allOf:
          - $ref: '#/components/schemas/ChangeName'
          - description: Optional name for the change.
          title: ChangeName
      required:
      - ChangeType
      - Details
      - Entity
      title: Change
      type: object
    Tag:
      description: A list of objects specifying each key name and value.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key associated with the tag.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value associated with the tag.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    ServiceQuotaExceededException: {}
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    ARN:
      maxLength: 2048
      minLength: 1
      pattern: "^[a-zA-Z0-9:*/-]+$"
      type: string
    Catalog:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    ResourceId:
      maxLength: 255
      minLength: 1
      pattern: "^[\\w\\-]+$"
      title: ResourceId
      type: string
    CancelChangeSetRequest:
      properties: {}
      title: CancelChangeSetRequest
      type: object
    ChangeType:
      maxLength: 255
      minLength: 1
      pattern: "^[A-Z][\\w]*$"
      type: string
    Entity:
      description: "An entity contains data that describes your product, its supported\
        \ features, and how it can be used or launched by your customer. "
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: The type of entity.
          title: Type
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          - description: The identifier for the entity.
          title: Identifier
      required:
      - Type
      title: Entity
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 1
      type: array
    Json:
      maxLength: 16384
      minLength: 2
      pattern: "^[\\s]*\\{[\\s\\S]*\\}[\\s]*$"
      type: string
    ChangeName:
      maxLength: 72
      minLength: 1
      pattern: "^[a-zA-Z]$"
      type: string
    ChangeSummary:
      description: This object is a container for common summary information about
        the change. The summary doesn't contain the whole change structure.
      properties:
        ChangeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: The type of the change.
          title: ChangeType
        Entity:
          $ref: '#/components/schemas/Change_Entity'
        Details:
          allOf:
          - $ref: '#/components/schemas/Json'
          - description: This object contains details specific to the change type
              of the requested change.
          title: Details
        ErrorDetailList:
          allOf:
          - $ref: '#/components/schemas/ErrorDetailList'
          - description: An array of <code>ErrorDetail</code> objects associated with
              the change.
          title: ErrorDetailList
        ChangeName:
          allOf:
          - $ref: '#/components/schemas/ChangeName'
          - description: Optional name for the change.
          title: ChangeName
      title: ChangeSummary
      type: object
    ChangeSetDescription:
      items:
        $ref: '#/components/schemas/ChangeSummary'
      type: array
    ChangeSetName:
      maxLength: 100
      minLength: 1
      pattern: "^[\\w\\s+=.:@-]+$"
      type: string
    ChangeSetSummaryListItem:
      description: A summary of a change set returned in a list of change sets when
        the <code>ListChangeSets</code> action is called.
      properties:
        ChangeSetId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The unique identifier for a change set.
          title: ChangeSetId
        ChangeSetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated with the unique identifier for the change
              set referenced in this request.
          title: ChangeSetArn
        ChangeSetName:
          allOf:
          - $ref: '#/components/schemas/ChangeSetName'
          - description: The non-unique name for the change set.
          title: ChangeSetName
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The time, in ISO 8601 format (2018-02-27T13:45:22Z), when\
              \ the change set was started."
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The time, in ISO 8601 format (2018-02-27T13:45:22Z), when\
              \ the change set was finished."
          title: EndTime
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeStatus'
          - description: The current status of the change set.
          title: Status
        EntityIdList:
          allOf:
          - $ref: '#/components/schemas/ResourceIdList'
          - description: This object is a list of entity IDs (string) that are a part
              of a change set. The entity ID list is a maximum of 20 entities. It
              must contain at least one entity.
          title: EntityIdList
        FailureCode:
          allOf:
          - $ref: '#/components/schemas/FailureCode'
          - description: "Returned if the change set is in <code>FAILED</code> status.\
              \ Can be either <code>CLIENT_ERROR</code>, which means that there are\
              \ issues with the request (see the <code>ErrorDetailList</code> of <code>DescribeChangeSet</code>),\
              \ or <code>SERVER_FAULT</code>, which means that there is a problem\
              \ in the system, and you should retry your request."
          title: FailureCode
      title: ChangeSetSummaryListItem
      type: object
    ChangeSetSummaryList:
      items:
        $ref: '#/components/schemas/ChangeSetSummaryListItem'
      type: array
    DateTimeISO8601:
      maxLength: 20
      minLength: 20
      pattern: "^([\\d]{4})\\-(1[0-2]|0[1-9])\\-(3[01]|0[1-9]|[12][\\d])T(2[0-3]|[01][\\\
        d]):([0-5][\\d]):([0-5][\\d])Z$"
      type: string
    ChangeStatus:
      enum:
      - PREPARING
      - APPLYING
      - SUCCEEDED
      - CANCELLED
      - FAILED
      title: ChangeStatus
      type: string
    ResourceIdList:
      items:
        $ref: '#/components/schemas/ResourceId'
      type: array
    FailureCode:
      enum:
      - CLIENT_ERROR
      - SERVER_FAULT
      title: FailureCode
      type: string
    ErrorDetailList:
      items:
        $ref: '#/components/schemas/ErrorDetail'
      type: array
    ClientRequestToken:
      maxLength: 64
      minLength: 1
      pattern: "^[!-~]+$"
      type: string
    ResourceARN:
      maxLength: 255
      minLength: 1
      pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
        w+=,.@-]+)*$"
      type: string
    DeleteResourcePolicyRequest:
      properties: {}
      title: DeleteResourcePolicyRequest
      type: object
    DescribeChangeSetRequest:
      properties: {}
      title: DescribeChangeSetRequest
      type: object
    ExceptionMessageContent:
      maxLength: 2048
      minLength: 1
      pattern: ^(.)+$
      type: string
    DescribeEntityRequest:
      properties: {}
      title: DescribeEntityRequest
      type: object
    EntityType:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    Identifier:
      maxLength: 255
      minLength: 1
      pattern: "^[\\w\\-@]+$"
      type: string
    EntityNameString:
      maxLength: 255
      minLength: 1
      pattern: "^\\\\S+[\\\\S\\\\s]*"
      type: string
    VisibilityValue:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    EntitySummary:
      description: "This object is a container for common summary information about\
        \ the entity. The summary doesn't contain the whole entity structure, but\
        \ it does contain information common across all entities."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EntityNameString'
          - description: The name for the entity. This value is not unique. It is
              defined by the seller.
          title: Name
        EntityType:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: The type of the entity.
          title: EntityType
        EntityId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The unique identifier for the entity.
          title: EntityId
        EntityArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The ARN associated with the unique identifier for the entity.
          title: EntityArn
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTimeISO8601'
          - description: "The last time the entity was published, using ISO 8601 format\
              \ (2018-02-27T13:45:22Z)."
          title: LastModifiedDate
        Visibility:
          allOf:
          - $ref: '#/components/schemas/VisibilityValue'
          - description: "The visibility status of the entity to buyers. This value\
              \ can be <code>Public</code> (everyone can view the entity), <code>Limited</code>\
              \ (the entity is visible to limited accounts only), or <code>Restricted</code>\
              \ (the entity was published and then unpublished and only existing buyers\
              \ can view it). "
          title: Visibility
      title: EntitySummary
      type: object
    EntitySummaryList:
      items:
        $ref: '#/components/schemas/EntitySummary'
      type: array
    ErrorCodeString:
      maxLength: 72
      minLength: 1
      pattern: "^[a-zA-Z_]+$"
      type: string
    ErrorDetail:
      description: Details about the error.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCodeString'
          - description: The error code that identifies the type of error.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessageContent'
          - description: The message for the error.
          title: ErrorMessage
      title: ErrorDetail
      type: object
    FilterName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z]+$"
      type: string
    ValueList:
      items:
        $ref: '#/components/schemas/FilterValueContent'
      maxItems: 10
      minItems: 1
      type: array
    FilterList:
      items:
        $ref: '#/components/schemas/Filter'
      maxItems: 8
      minItems: 1
      type: array
    FilterValueContent:
      maxLength: 255
      minLength: 1
      pattern: ^(.)+$
      title: FilterValueContent
      type: string
    GetResourcePolicyRequest:
      properties: {}
      title: GetResourcePolicyRequest
      type: object
    ResourcePolicyJson:
      maxLength: 10240
      minLength: 1
      pattern: "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+$"
      type: string
    ListChangeSetsMaxResultInteger:
      maximum: 20
      minimum: 1
      type: integer
    Sort:
      description: "An object that contains two attributes, <code>SortBy</code> and\
        \ <code>SortOrder</code>."
      properties:
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortBy'
          - description: "<p>For <code>ListEntities</code>, supported attributes include\
              \ <code>LastModifiedDate</code> (default), <code>Visibility</code>,\
              \ <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>,\
              \ supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>"
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>.
              The default value is <code>DESCENDING</code>.
          title: SortOrder
      title: Sort
      type: object
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: "^[\\w+=.:@\\-\\/]$"
      type: string
    ListChangeSetsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Sort:
          SortBy: ""
          SortOrder: ""
        FilterList: ""
        Catalog: ""
      properties:
        Catalog:
          allOf:
          - $ref: '#/components/schemas/Catalog'
          - description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
        FilterList:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: An array of filter objects.
        Sort:
          $ref: '#/components/schemas/ListChangeSetsRequest_Sort'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListChangeSetsMaxResultInteger'
          - description: "The maximum number of results returned by a single call.\
              \ This value must be provided in the next call to retrieve the next\
              \ set of results. By default, this value is 20."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token value retrieved from a previous call to access
              the next page of results.
      required:
      - Catalog
      title: ListChangeSetsRequest
      type: object
    ListEntitiesMaxResultInteger:
      maximum: 50
      minimum: 1
      type: integer
    OwnershipType:
      enum:
      - SELF
      - SHARED
      title: OwnershipType
      type: string
    ListEntitiesRequest:
      example:
        EntityType: ""
        OwnershipType: SELF
        NextToken: ""
        MaxResults: ""
        Sort:
          SortBy: ""
          SortOrder: ""
        FilterList: ""
        Catalog: ""
      properties:
        Catalog:
          allOf:
          - $ref: '#/components/schemas/Catalog'
          - description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
        EntityType:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: The type of entities to retrieve.
        FilterList:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "An array of filter objects. Each filter object contains\
              \ two attributes, <code>filterName</code> and <code>filterValues</code>."
        Sort:
          $ref: '#/components/schemas/ListChangeSetsRequest_Sort'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The value of the next token, if it exists. Null if there\
              \ are no more results."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListEntitiesMaxResultInteger'
          - description: "Specifies the upper limit of the elements on a single page.\
              \ If a value isn't provided, the default value is 20."
        OwnershipType:
          $ref: '#/components/schemas/OwnershipType'
      required:
      - Catalog
      - EntityType
      title: ListEntitiesRequest
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Required. The Amazon Resource Name (ARN) associated with
              the resource you want to list tags on.
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    PutResourcePolicyRequest:
      example:
        Policy: ""
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: 'The Amazon Resource Name (ARN) of the Entity resource you
              want to associate with a resource policy. '
        Policy:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyJson'
          - description: The policy document to set; formatted in JSON.
      required:
      - Policy
      - ResourceArn
      title: PutResourcePolicyRequest
      type: object
    RequestedChangeList:
      items:
        $ref: '#/components/schemas/Change'
      maxItems: 20
      minItems: 1
      type: array
    StartChangeSetRequest:
      example:
        ClientRequestToken: ""
        ChangeSetName: ""
        ChangeSet: ""
        Catalog: ""
        ChangeSetTags: ""
      properties:
        Catalog:
          allOf:
          - $ref: '#/components/schemas/Catalog'
          - description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
        ChangeSet:
          allOf:
          - $ref: '#/components/schemas/RequestedChangeList'
          - description: Array of <code>change</code> object.
        ChangeSetName:
          allOf:
          - $ref: '#/components/schemas/ChangeSetName'
          - description: 'Optional case sensitive string of up to 100 ASCII characters.
              The change set name can be used to filter the list of change sets. '
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: A unique token to identify the request to ensure idempotency.
        ChangeSetTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of objects specifying each key name and value for
              the <code>ChangeSetTags</code> property.
      required:
      - Catalog
      - ChangeSet
      title: StartChangeSetRequest
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Required. The Amazon Resource Name (ARN) associated with
              the resource you want to tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Required. A list of objects specifying each key name and\
              \ value. Number of objects allowed: 1-50."
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Required. The Amazon Resource Name (ARN) associated with
              the resource you want to remove the tag from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: "Required. A list of key names of tags to be removed. Number\
              \ of strings allowed: 0-256."
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    ListChangeSets_request_Sort:
      description: "An object that contains two attributes, <code>SortBy</code> and\
        \ <code>SortOrder</code>."
      properties:
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortBy'
          - description: "<p>For <code>ListEntities</code>, supported attributes include\
              \ <code>LastModifiedDate</code> (default), <code>Visibility</code>,\
              \ <code>EntityId</code>, and <code>Name</code>.</p> <p>For <code>ListChangeSets</code>,\
              \ supported attributes include <code>StartTime</code> and <code>EndTime</code>.</p>"
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: The sorting order. Can be <code>ASCENDING</code> or <code>DESCENDING</code>.
              The default value is <code>DESCENDING</code>.
          title: SortOrder
      title: ListChangeSets_request_Sort
      type: object
    ListChangeSets_request:
      properties:
        Catalog:
          description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          title: Catalog
          type: string
        FilterList:
          description: An array of filter objects.
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 8
          minItems: 1
          title: FilterList
          type: array
        Sort:
          $ref: '#/components/schemas/ListChangeSets_request_Sort'
        MaxResults:
          description: "The maximum number of results returned by a single call. This\
            \ value must be provided in the next call to retrieve the next set of\
            \ results. By default, this value is 20."
          maximum: 20
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: The token value retrieved from a previous call to access the
            next page of results.
          maxLength: 2048
          minLength: 1
          pattern: "^[\\w+=.:@\\-\\/]$"
          title: NextToken
          type: string
      required:
      - Catalog
      title: ListChangeSets_request
      type: object
    ListEntities_request:
      properties:
        Catalog:
          description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          title: Catalog
          type: string
        EntityType:
          description: The type of entities to retrieve.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          title: EntityType
          type: string
        FilterList:
          description: "An array of filter objects. Each filter object contains two\
            \ attributes, <code>filterName</code> and <code>filterValues</code>."
          items:
            $ref: '#/components/schemas/Filter'
          maxItems: 8
          minItems: 1
          title: FilterList
          type: array
        Sort:
          $ref: '#/components/schemas/ListChangeSets_request_Sort'
        NextToken:
          description: "The value of the next token, if it exists. Null if there are\
            \ no more results."
          maxLength: 2048
          minLength: 1
          pattern: "^[\\w+=.:@\\-\\/]$"
          title: NextToken
          type: string
        MaxResults:
          description: "Specifies the upper limit of the elements on a single page.\
            \ If a value isn't provided, the default value is 20."
          maximum: 50
          minimum: 1
          title: MaxResults
          type: integer
        OwnershipType:
          description: ""
          enum:
          - SELF
          - SHARED
          title: OwnershipType
          type: string
      required:
      - Catalog
      - EntityType
      title: ListEntities_request
      type: object
    ListTagsForResource_request:
      properties:
        ResourceArn:
          description: Required. The Amazon Resource Name (ARN) associated with the
            resource you want to list tags on.
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          title: ResourceArn
          type: string
      required:
      - ResourceArn
      title: ListTagsForResource_request
      type: object
    PutResourcePolicy_request:
      properties:
        ResourceArn:
          description: 'The Amazon Resource Name (ARN) of the Entity resource you
            want to associate with a resource policy. '
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          title: ResourceArn
          type: string
        Policy:
          description: The policy document to set; formatted in JSON.
          maxLength: 10240
          minLength: 1
          pattern: "^[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+$"
          title: Policy
          type: string
      required:
      - Policy
      - ResourceArn
      title: PutResourcePolicy_request
      type: object
    StartChangeSet_request:
      properties:
        Catalog:
          description: "The catalog related to the request. Fixed value: <code>AWSMarketplace</code> "
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z]+$"
          title: Catalog
          type: string
        ChangeSet:
          description: Array of <code>change</code> object.
          items:
            $ref: '#/components/schemas/Change'
          maxItems: 20
          minItems: 1
          title: ChangeSet
          type: array
        ChangeSetName:
          description: 'Optional case sensitive string of up to 100 ASCII characters.
            The change set name can be used to filter the list of change sets. '
          maxLength: 100
          minLength: 1
          pattern: "^[\\w\\s+=.:@-]+$"
          title: ChangeSetName
          type: string
        ClientRequestToken:
          description: A unique token to identify the request to ensure idempotency.
          maxLength: 64
          minLength: 1
          pattern: "^[!-~]+$"
          title: ClientRequestToken
          type: string
        ChangeSetTags:
          description: A list of objects specifying each key name and value for the
            <code>ChangeSetTags</code> property.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: ChangeSetTags
          type: array
      required:
      - Catalog
      - ChangeSet
      title: StartChangeSet_request
      type: object
    TagResource_request:
      properties:
        ResourceArn:
          description: Required. The Amazon Resource Name (ARN) associated with the
            resource you want to tag.
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          title: ResourceArn
          type: string
        Tags:
          description: "Required. A list of objects specifying each key name and value.\
            \ Number of objects allowed: 1-50."
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          title: Tags
          type: array
      required:
      - ResourceArn
      - Tags
      title: TagResource_request
      type: object
    UntagResource_request:
      properties:
        ResourceArn:
          description: Required. The Amazon Resource Name (ARN) associated with the
            resource you want to remove the tag from.
          maxLength: 255
          minLength: 1
          pattern: "^arn:[\\w+=/,.@-]+:aws-marketplace:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=,.@-]+)*$"
          title: ResourceArn
          type: string
        TagKeys:
          description: "Required. A list of key names of tags to be removed. Number\
            \ of strings allowed: 0-256."
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 1
          title: TagKeys
          type: array
      required:
      - ResourceArn
      - TagKeys
      title: UntagResource_request
      type: object
    Change_Entity:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - description: The entity to be changed.
      title: Change_Entity
    ListChangeSetsRequest_Sort:
      allOf:
      - $ref: '#/components/schemas/Sort'
      - description: "An object that contains two attributes, <code>SortBy</code>\
          \ and <code>SortOrder</code>."
      example:
        SortBy: ""
        SortOrder: ""
      title: ListChangeSetsRequest_Sort
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
