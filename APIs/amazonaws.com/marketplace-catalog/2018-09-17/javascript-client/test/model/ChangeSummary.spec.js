/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsMarketplaceCatalogService);
  }
}(this, function(expect, AwsMarketplaceCatalogService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsMarketplaceCatalogService.ChangeSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ChangeSummary', function() {
    it('should create an instance of ChangeSummary', function() {
      // uncomment below and update the code to test ChangeSummary
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be.a(AwsMarketplaceCatalogService.ChangeSummary);
    });

    it('should have the property changeType (base name: "ChangeType")', function() {
      // uncomment below and update the code to test the property changeType
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be();
    });

    it('should have the property entity (base name: "Entity")', function() {
      // uncomment below and update the code to test the property entity
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "Details")', function() {
      // uncomment below and update the code to test the property details
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be();
    });

    it('should have the property errorDetailList (base name: "ErrorDetailList")', function() {
      // uncomment below and update the code to test the property errorDetailList
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be();
    });

    it('should have the property changeName (base name: "ChangeName")', function() {
      // uncomment below and update the code to test the property changeName
      //var instance = new AwsMarketplaceCatalogService.ChangeSummary();
      //expect(instance).to.be();
    });

  });

}));
