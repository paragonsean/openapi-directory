/*
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChangeStatus;
import org.openapitools.client.model.FailureCode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeChangeSetResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:27.767483-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeChangeSetResponse {
  public static final String SERIALIZED_NAME_CHANGE_SET_ID = "ChangeSetId";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_ID)
  private String changeSetId;

  public static final String SERIALIZED_NAME_CHANGE_SET_ARN = "ChangeSetArn";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_ARN)
  private String changeSetArn;

  public static final String SERIALIZED_NAME_CHANGE_SET_NAME = "ChangeSetName";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_NAME)
  private String changeSetName;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ChangeStatus status;

  public static final String SERIALIZED_NAME_FAILURE_CODE = "FailureCode";
  @SerializedName(SERIALIZED_NAME_FAILURE_CODE)
  private FailureCode failureCode;

  public static final String SERIALIZED_NAME_FAILURE_DESCRIPTION = "FailureDescription";
  @SerializedName(SERIALIZED_NAME_FAILURE_DESCRIPTION)
  private String failureDescription;

  public static final String SERIALIZED_NAME_CHANGE_SET = "ChangeSet";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET)
  private List changeSet;

  public DescribeChangeSetResponse() {
  }

  public DescribeChangeSetResponse changeSetId(String changeSetId) {
    this.changeSetId = changeSetId;
    return this;
  }

  /**
   * Get changeSetId
   * @return changeSetId
   */
  @javax.annotation.Nullable
  public String getChangeSetId() {
    return changeSetId;
  }

  public void setChangeSetId(String changeSetId) {
    this.changeSetId = changeSetId;
  }


  public DescribeChangeSetResponse changeSetArn(String changeSetArn) {
    this.changeSetArn = changeSetArn;
    return this;
  }

  /**
   * Get changeSetArn
   * @return changeSetArn
   */
  @javax.annotation.Nullable
  public String getChangeSetArn() {
    return changeSetArn;
  }

  public void setChangeSetArn(String changeSetArn) {
    this.changeSetArn = changeSetArn;
  }


  public DescribeChangeSetResponse changeSetName(String changeSetName) {
    this.changeSetName = changeSetName;
    return this;
  }

  /**
   * Get changeSetName
   * @return changeSetName
   */
  @javax.annotation.Nullable
  public String getChangeSetName() {
    return changeSetName;
  }

  public void setChangeSetName(String changeSetName) {
    this.changeSetName = changeSetName;
  }


  public DescribeChangeSetResponse startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public DescribeChangeSetResponse endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public DescribeChangeSetResponse status(ChangeStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ChangeStatus getStatus() {
    return status;
  }

  public void setStatus(ChangeStatus status) {
    this.status = status;
  }


  public DescribeChangeSetResponse failureCode(FailureCode failureCode) {
    this.failureCode = failureCode;
    return this;
  }

  /**
   * Get failureCode
   * @return failureCode
   */
  @javax.annotation.Nullable
  public FailureCode getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(FailureCode failureCode) {
    this.failureCode = failureCode;
  }


  public DescribeChangeSetResponse failureDescription(String failureDescription) {
    this.failureDescription = failureDescription;
    return this;
  }

  /**
   * Get failureDescription
   * @return failureDescription
   */
  @javax.annotation.Nullable
  public String getFailureDescription() {
    return failureDescription;
  }

  public void setFailureDescription(String failureDescription) {
    this.failureDescription = failureDescription;
  }


  public DescribeChangeSetResponse changeSet(List changeSet) {
    this.changeSet = changeSet;
    return this;
  }

  /**
   * Get changeSet
   * @return changeSet
   */
  @javax.annotation.Nullable
  public List getChangeSet() {
    return changeSet;
  }

  public void setChangeSet(List changeSet) {
    this.changeSet = changeSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeChangeSetResponse describeChangeSetResponse = (DescribeChangeSetResponse) o;
    return Objects.equals(this.changeSetId, describeChangeSetResponse.changeSetId) &&
        Objects.equals(this.changeSetArn, describeChangeSetResponse.changeSetArn) &&
        Objects.equals(this.changeSetName, describeChangeSetResponse.changeSetName) &&
        Objects.equals(this.startTime, describeChangeSetResponse.startTime) &&
        Objects.equals(this.endTime, describeChangeSetResponse.endTime) &&
        Objects.equals(this.status, describeChangeSetResponse.status) &&
        Objects.equals(this.failureCode, describeChangeSetResponse.failureCode) &&
        Objects.equals(this.failureDescription, describeChangeSetResponse.failureDescription) &&
        Objects.equals(this.changeSet, describeChangeSetResponse.changeSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeSetId, changeSetArn, changeSetName, startTime, endTime, status, failureCode, failureDescription, changeSet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeChangeSetResponse {\n");
    sb.append("    changeSetId: ").append(toIndentedString(changeSetId)).append("\n");
    sb.append("    changeSetArn: ").append(toIndentedString(changeSetArn)).append("\n");
    sb.append("    changeSetName: ").append(toIndentedString(changeSetName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("    failureDescription: ").append(toIndentedString(failureDescription)).append("\n");
    sb.append("    changeSet: ").append(toIndentedString(changeSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ChangeSetId");
    openapiFields.add("ChangeSetArn");
    openapiFields.add("ChangeSetName");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("Status");
    openapiFields.add("FailureCode");
    openapiFields.add("FailureDescription");
    openapiFields.add("ChangeSet");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeChangeSetResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeChangeSetResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeChangeSetResponse is not found in the empty JSON string", DescribeChangeSetResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeChangeSetResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeChangeSetResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ChangeSetId`
      if (jsonObj.get("ChangeSetId") != null && !jsonObj.get("ChangeSetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetId"));
      }
      // validate the optional field `ChangeSetArn`
      if (jsonObj.get("ChangeSetArn") != null && !jsonObj.get("ChangeSetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetArn"));
      }
      // validate the optional field `ChangeSetName`
      if (jsonObj.get("ChangeSetName") != null && !jsonObj.get("ChangeSetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetName"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ChangeStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `FailureCode`
      if (jsonObj.get("FailureCode") != null && !jsonObj.get("FailureCode").isJsonNull()) {
        FailureCode.validateJsonElement(jsonObj.get("FailureCode"));
      }
      // validate the optional field `FailureDescription`
      if (jsonObj.get("FailureDescription") != null && !jsonObj.get("FailureDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailureDescription"));
      }
      // validate the optional field `ChangeSet`
      if (jsonObj.get("ChangeSet") != null && !jsonObj.get("ChangeSet").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ChangeSet"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeChangeSetResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeChangeSetResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeChangeSetResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeChangeSetResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeChangeSetResponse>() {
           @Override
           public void write(JsonWriter out, DescribeChangeSetResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeChangeSetResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeChangeSetResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeChangeSetResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeChangeSetResponse
   */
  public static DescribeChangeSetResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeChangeSetResponse.class);
  }

  /**
   * Convert an instance of DescribeChangeSetResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

