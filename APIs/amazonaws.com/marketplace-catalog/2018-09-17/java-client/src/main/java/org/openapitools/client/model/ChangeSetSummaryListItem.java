/*
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChangeStatus;
import org.openapitools.client.model.FailureCode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A summary of a change set returned in a list of change sets when the &lt;code&gt;ListChangeSets&lt;/code&gt; action is called.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:27.767483-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChangeSetSummaryListItem {
  public static final String SERIALIZED_NAME_CHANGE_SET_ID = "ChangeSetId";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_ID)
  private String changeSetId;

  public static final String SERIALIZED_NAME_CHANGE_SET_ARN = "ChangeSetArn";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_ARN)
  private String changeSetArn;

  public static final String SERIALIZED_NAME_CHANGE_SET_NAME = "ChangeSetName";
  @SerializedName(SERIALIZED_NAME_CHANGE_SET_NAME)
  private String changeSetName;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ChangeStatus status;

  public static final String SERIALIZED_NAME_ENTITY_ID_LIST = "EntityIdList";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID_LIST)
  private List entityIdList;

  public static final String SERIALIZED_NAME_FAILURE_CODE = "FailureCode";
  @SerializedName(SERIALIZED_NAME_FAILURE_CODE)
  private FailureCode failureCode;

  public ChangeSetSummaryListItem() {
  }

  public ChangeSetSummaryListItem changeSetId(String changeSetId) {
    this.changeSetId = changeSetId;
    return this;
  }

  /**
   * Get changeSetId
   * @return changeSetId
   */
  @javax.annotation.Nullable
  public String getChangeSetId() {
    return changeSetId;
  }

  public void setChangeSetId(String changeSetId) {
    this.changeSetId = changeSetId;
  }


  public ChangeSetSummaryListItem changeSetArn(String changeSetArn) {
    this.changeSetArn = changeSetArn;
    return this;
  }

  /**
   * Get changeSetArn
   * @return changeSetArn
   */
  @javax.annotation.Nullable
  public String getChangeSetArn() {
    return changeSetArn;
  }

  public void setChangeSetArn(String changeSetArn) {
    this.changeSetArn = changeSetArn;
  }


  public ChangeSetSummaryListItem changeSetName(String changeSetName) {
    this.changeSetName = changeSetName;
    return this;
  }

  /**
   * Get changeSetName
   * @return changeSetName
   */
  @javax.annotation.Nullable
  public String getChangeSetName() {
    return changeSetName;
  }

  public void setChangeSetName(String changeSetName) {
    this.changeSetName = changeSetName;
  }


  public ChangeSetSummaryListItem startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public ChangeSetSummaryListItem endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public ChangeSetSummaryListItem status(ChangeStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ChangeStatus getStatus() {
    return status;
  }

  public void setStatus(ChangeStatus status) {
    this.status = status;
  }


  public ChangeSetSummaryListItem entityIdList(List entityIdList) {
    this.entityIdList = entityIdList;
    return this;
  }

  /**
   * Get entityIdList
   * @return entityIdList
   */
  @javax.annotation.Nullable
  public List getEntityIdList() {
    return entityIdList;
  }

  public void setEntityIdList(List entityIdList) {
    this.entityIdList = entityIdList;
  }


  public ChangeSetSummaryListItem failureCode(FailureCode failureCode) {
    this.failureCode = failureCode;
    return this;
  }

  /**
   * Get failureCode
   * @return failureCode
   */
  @javax.annotation.Nullable
  public FailureCode getFailureCode() {
    return failureCode;
  }

  public void setFailureCode(FailureCode failureCode) {
    this.failureCode = failureCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeSetSummaryListItem changeSetSummaryListItem = (ChangeSetSummaryListItem) o;
    return Objects.equals(this.changeSetId, changeSetSummaryListItem.changeSetId) &&
        Objects.equals(this.changeSetArn, changeSetSummaryListItem.changeSetArn) &&
        Objects.equals(this.changeSetName, changeSetSummaryListItem.changeSetName) &&
        Objects.equals(this.startTime, changeSetSummaryListItem.startTime) &&
        Objects.equals(this.endTime, changeSetSummaryListItem.endTime) &&
        Objects.equals(this.status, changeSetSummaryListItem.status) &&
        Objects.equals(this.entityIdList, changeSetSummaryListItem.entityIdList) &&
        Objects.equals(this.failureCode, changeSetSummaryListItem.failureCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeSetId, changeSetArn, changeSetName, startTime, endTime, status, entityIdList, failureCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeSetSummaryListItem {\n");
    sb.append("    changeSetId: ").append(toIndentedString(changeSetId)).append("\n");
    sb.append("    changeSetArn: ").append(toIndentedString(changeSetArn)).append("\n");
    sb.append("    changeSetName: ").append(toIndentedString(changeSetName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    entityIdList: ").append(toIndentedString(entityIdList)).append("\n");
    sb.append("    failureCode: ").append(toIndentedString(failureCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ChangeSetId");
    openapiFields.add("ChangeSetArn");
    openapiFields.add("ChangeSetName");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("Status");
    openapiFields.add("EntityIdList");
    openapiFields.add("FailureCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChangeSetSummaryListItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChangeSetSummaryListItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChangeSetSummaryListItem is not found in the empty JSON string", ChangeSetSummaryListItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChangeSetSummaryListItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChangeSetSummaryListItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ChangeSetId`
      if (jsonObj.get("ChangeSetId") != null && !jsonObj.get("ChangeSetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetId"));
      }
      // validate the optional field `ChangeSetArn`
      if (jsonObj.get("ChangeSetArn") != null && !jsonObj.get("ChangeSetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetArn"));
      }
      // validate the optional field `ChangeSetName`
      if (jsonObj.get("ChangeSetName") != null && !jsonObj.get("ChangeSetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChangeSetName"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ChangeStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `EntityIdList`
      if (jsonObj.get("EntityIdList") != null && !jsonObj.get("EntityIdList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EntityIdList"));
      }
      // validate the optional field `FailureCode`
      if (jsonObj.get("FailureCode") != null && !jsonObj.get("FailureCode").isJsonNull()) {
        FailureCode.validateJsonElement(jsonObj.get("FailureCode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChangeSetSummaryListItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChangeSetSummaryListItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChangeSetSummaryListItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChangeSetSummaryListItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ChangeSetSummaryListItem>() {
           @Override
           public void write(JsonWriter out, ChangeSetSummaryListItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChangeSetSummaryListItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChangeSetSummaryListItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChangeSetSummaryListItem
   * @throws IOException if the JSON string is invalid with respect to ChangeSetSummaryListItem
   */
  public static ChangeSetSummaryListItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChangeSetSummaryListItem.class);
  }

  /**
   * Convert an instance of ChangeSetSummaryListItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

