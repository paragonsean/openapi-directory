/*
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancelChangeSetResponse;
import org.openapitools.client.model.DescribeChangeSetResponse;
import org.openapitools.client.model.DescribeEntityResponse;
import org.openapitools.client.model.GetResourcePolicyResponse;
import org.openapitools.client.model.ListChangeSetsRequest;
import org.openapitools.client.model.ListChangeSetsResponse;
import org.openapitools.client.model.ListEntitiesRequest;
import org.openapitools.client.model.ListEntitiesResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.PutResourcePolicyRequest;
import org.openapitools.client.model.StartChangeSetRequest;
import org.openapitools.client.model.StartChangeSetResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Used to cancel an open change request. Must be sent before the status of the request changes to &lt;code&gt;APPLYING&lt;/code&gt;, the final stage of completing your change request. You can describe a change during the 60-day request history retention period for API calls.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelChangeSetTest() throws ApiException {
        String catalog = null;
        String changeSetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CancelChangeSetResponse response = api.cancelChangeSet(catalog, changeSetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a resource-based policy on an Entity that is identified by its resource ARN.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResourcePolicyTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteResourcePolicy(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides information about a given change set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeChangeSetTest() throws ApiException {
        String catalog = null;
        String changeSetId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeChangeSetResponse response = api.describeChangeSet(catalog, changeSetId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the metadata and content of the entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeEntityTest() throws ApiException {
        String catalog = null;
        String entityId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeEntityResponse response = api.describeEntity(catalog, entityId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets a resource-based policy of an Entity that is identified by its resource ARN.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResourcePolicyTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetResourcePolicyResponse response = api.getResourcePolicy(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Returns the list of change sets owned by the account being used to make the call. You can filter this list by providing any combination of &lt;code&gt;entityId&lt;/code&gt;, &lt;code&gt;ChangeSetName&lt;/code&gt;, and status. If you provide more than one filter, the API operation applies a logical AND between the filters.&lt;/p&gt; &lt;p&gt;You can describe a change during the 60-day request history retention period for API calls.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listChangeSetsTest() throws ApiException {
        ListChangeSetsRequest listChangeSetsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListChangeSetsResponse response = api.listChangeSets(listChangeSetsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Provides the list of entities of a given type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEntitiesTest() throws ApiException {
        ListEntitiesRequest listEntitiesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListEntitiesResponse response = api.listEntities(listEntitiesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all tags that have been added to a resource (either an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities\&quot;&gt;entity&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\&quot;&gt;change set&lt;/a&gt;).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        ListTagsForResourceRequest listTagsForResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Attaches a resource-based policy to an Entity. Examples of an entity include: &lt;code&gt;AmiProduct&lt;/code&gt; and &lt;code&gt;ContainerProduct&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putResourcePolicyTest() throws ApiException {
        PutResourcePolicyRequest putResourcePolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putResourcePolicy(putResourcePolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Allows you to request changes for your entities. Within a single &lt;code&gt;ChangeSet&lt;/code&gt;, you can&#39;t start the same change type against the same entity multiple times. Additionally, when a &lt;code&gt;ChangeSet&lt;/code&gt; is running, all the entities targeted by the different changes are locked until the change set has completed (either succeeded, cancelled, or failed). If you try to start a change set containing a change against an entity that is already locked, you will receive a &lt;code&gt;ResourceInUseException&lt;/code&gt; error.&lt;/p&gt; &lt;p&gt;For example, you can&#39;t start the &lt;code&gt;ChangeSet&lt;/code&gt; described in the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_StartChangeSet.html#API_StartChangeSet_Examples\&quot;&gt;example&lt;/a&gt; later in this topic because it contains two changes to run the same change type (&lt;code&gt;AddRevisions&lt;/code&gt;) against the same entity (&lt;code&gt;entity-id@1&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;For more information about working with change sets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\&quot;&gt; Working with change sets&lt;/a&gt;. For information on change types for single-AMI products, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/ami-products.html#working-with-single-AMI-products\&quot;&gt;Working with single-AMI products&lt;/a&gt;. Als, for more information on change types available for container-based products, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/container-products.html#working-with-container-products\&quot;&gt;Working with container products&lt;/a&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startChangeSetTest() throws ApiException {
        StartChangeSetRequest startChangeSetRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartChangeSetResponse response = api.startChangeSet(startChangeSetRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Tags a resource (either an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities\&quot;&gt;entity&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\&quot;&gt;change set&lt;/a&gt;).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a tag or list of tags from a resource (either an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#catalog-api-entities\&quot;&gt;entity&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets\&quot;&gt;change set&lt;/a&gt;).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
