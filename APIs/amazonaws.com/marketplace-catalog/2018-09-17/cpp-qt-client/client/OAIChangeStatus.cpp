/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangeStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangeStatus::OAIChangeStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangeStatus::OAIChangeStatus() {
    this->initializeModel();
}

OAIChangeStatus::~OAIChangeStatus() {}

void OAIChangeStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChangeStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChangeStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PREPARING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChangeStatus::PREPARING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APPLYING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChangeStatus::APPLYING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUCCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChangeStatus::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChangeStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChangeStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChangeStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChangeStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChangeStatus::PREPARING:
            val = "PREPARING";
            break;
        case eOAIChangeStatus::APPLYING:
            val = "APPLYING";
            break;
        case eOAIChangeStatus::SUCCEEDED:
            val = "SUCCEEDED";
            break;
        case eOAIChangeStatus::CANCELLED:
            val = "CANCELLED";
            break;
        case eOAIChangeStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChangeStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChangeStatus::eOAIChangeStatus OAIChangeStatus::getValue() const {
    return m_value;
}

void OAIChangeStatus::setValue(const OAIChangeStatus::eOAIChangeStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChangeStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIChangeStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
