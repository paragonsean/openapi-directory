/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListEntitiesRequest.h
 *
 * 
 */

#ifndef OAIListEntitiesRequest_H
#define OAIListEntitiesRequest_H

#include <QJsonObject>

#include "OAIListChangeSetsRequest_Sort.h"
#include "OAIOwnershipType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListChangeSetsRequest_Sort;

class OAIListEntitiesRequest : public OAIObject {
public:
    OAIListEntitiesRequest();
    OAIListEntitiesRequest(QString json);
    ~OAIListEntitiesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCatalog() const;
    void setCatalog(const QString &catalog);
    bool is_catalog_Set() const;
    bool is_catalog_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QList getFilterList() const;
    void setFilterList(const QList &filter_list);
    bool is_filter_list_Set() const;
    bool is_filter_list_Valid() const;

    OAIListChangeSetsRequest_Sort getSort() const;
    void setSort(const OAIListChangeSetsRequest_Sort &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAIOwnershipType getOwnershipType() const;
    void setOwnershipType(const OAIOwnershipType &ownership_type);
    bool is_ownership_type_Set() const;
    bool is_ownership_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_catalog;
    bool m_catalog_isSet;
    bool m_catalog_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QList m_filter_list;
    bool m_filter_list_isSet;
    bool m_filter_list_isValid;

    OAIListChangeSetsRequest_Sort m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAIOwnershipType m_ownership_type;
    bool m_ownership_type_isSet;
    bool m_ownership_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListEntitiesRequest)

#endif // OAIListEntitiesRequest_H
