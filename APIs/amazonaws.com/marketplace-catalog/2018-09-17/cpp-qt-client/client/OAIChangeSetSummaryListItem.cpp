/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangeSetSummaryListItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangeSetSummaryListItem::OAIChangeSetSummaryListItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangeSetSummaryListItem::OAIChangeSetSummaryListItem() {
    this->initializeModel();
}

OAIChangeSetSummaryListItem::~OAIChangeSetSummaryListItem() {}

void OAIChangeSetSummaryListItem::initializeModel() {

    m_change_set_id_isSet = false;
    m_change_set_id_isValid = false;

    m_change_set_arn_isSet = false;
    m_change_set_arn_isValid = false;

    m_change_set_name_isSet = false;
    m_change_set_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_entity_id_list_isSet = false;
    m_entity_id_list_isValid = false;

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;
}

void OAIChangeSetSummaryListItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangeSetSummaryListItem::fromJsonObject(QJsonObject json) {

    m_change_set_id_isValid = ::OpenAPI::fromJsonValue(m_change_set_id, json[QString("ChangeSetId")]);
    m_change_set_id_isSet = !json[QString("ChangeSetId")].isNull() && m_change_set_id_isValid;

    m_change_set_arn_isValid = ::OpenAPI::fromJsonValue(m_change_set_arn, json[QString("ChangeSetArn")]);
    m_change_set_arn_isSet = !json[QString("ChangeSetArn")].isNull() && m_change_set_arn_isValid;

    m_change_set_name_isValid = ::OpenAPI::fromJsonValue(m_change_set_name, json[QString("ChangeSetName")]);
    m_change_set_name_isSet = !json[QString("ChangeSetName")].isNull() && m_change_set_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_entity_id_list_isValid = ::OpenAPI::fromJsonValue(m_entity_id_list, json[QString("EntityIdList")]);
    m_entity_id_list_isSet = !json[QString("EntityIdList")].isNull() && m_entity_id_list_isValid;

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("FailureCode")]);
    m_failure_code_isSet = !json[QString("FailureCode")].isNull() && m_failure_code_isValid;
}

QString OAIChangeSetSummaryListItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangeSetSummaryListItem::asJsonObject() const {
    QJsonObject obj;
    if (m_change_set_id_isSet) {
        obj.insert(QString("ChangeSetId"), ::OpenAPI::toJsonValue(m_change_set_id));
    }
    if (m_change_set_arn_isSet) {
        obj.insert(QString("ChangeSetArn"), ::OpenAPI::toJsonValue(m_change_set_arn));
    }
    if (m_change_set_name_isSet) {
        obj.insert(QString("ChangeSetName"), ::OpenAPI::toJsonValue(m_change_set_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_entity_id_list.isSet()) {
        obj.insert(QString("EntityIdList"), ::OpenAPI::toJsonValue(m_entity_id_list));
    }
    if (m_failure_code.isSet()) {
        obj.insert(QString("FailureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    return obj;
}

QString OAIChangeSetSummaryListItem::getChangeSetId() const {
    return m_change_set_id;
}
void OAIChangeSetSummaryListItem::setChangeSetId(const QString &change_set_id) {
    m_change_set_id = change_set_id;
    m_change_set_id_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_change_set_id_Set() const{
    return m_change_set_id_isSet;
}

bool OAIChangeSetSummaryListItem::is_change_set_id_Valid() const{
    return m_change_set_id_isValid;
}

QString OAIChangeSetSummaryListItem::getChangeSetArn() const {
    return m_change_set_arn;
}
void OAIChangeSetSummaryListItem::setChangeSetArn(const QString &change_set_arn) {
    m_change_set_arn = change_set_arn;
    m_change_set_arn_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_change_set_arn_Set() const{
    return m_change_set_arn_isSet;
}

bool OAIChangeSetSummaryListItem::is_change_set_arn_Valid() const{
    return m_change_set_arn_isValid;
}

QString OAIChangeSetSummaryListItem::getChangeSetName() const {
    return m_change_set_name;
}
void OAIChangeSetSummaryListItem::setChangeSetName(const QString &change_set_name) {
    m_change_set_name = change_set_name;
    m_change_set_name_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_change_set_name_Set() const{
    return m_change_set_name_isSet;
}

bool OAIChangeSetSummaryListItem::is_change_set_name_Valid() const{
    return m_change_set_name_isValid;
}

QString OAIChangeSetSummaryListItem::getStartTime() const {
    return m_start_time;
}
void OAIChangeSetSummaryListItem::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIChangeSetSummaryListItem::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIChangeSetSummaryListItem::getEndTime() const {
    return m_end_time;
}
void OAIChangeSetSummaryListItem::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIChangeSetSummaryListItem::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIChangeStatus OAIChangeSetSummaryListItem::getStatus() const {
    return m_status;
}
void OAIChangeSetSummaryListItem::setStatus(const OAIChangeStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_status_Set() const{
    return m_status_isSet;
}

bool OAIChangeSetSummaryListItem::is_status_Valid() const{
    return m_status_isValid;
}

QList OAIChangeSetSummaryListItem::getEntityIdList() const {
    return m_entity_id_list;
}
void OAIChangeSetSummaryListItem::setEntityIdList(const QList &entity_id_list) {
    m_entity_id_list = entity_id_list;
    m_entity_id_list_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_entity_id_list_Set() const{
    return m_entity_id_list_isSet;
}

bool OAIChangeSetSummaryListItem::is_entity_id_list_Valid() const{
    return m_entity_id_list_isValid;
}

OAIFailureCode OAIChangeSetSummaryListItem::getFailureCode() const {
    return m_failure_code;
}
void OAIChangeSetSummaryListItem::setFailureCode(const OAIFailureCode &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAIChangeSetSummaryListItem::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAIChangeSetSummaryListItem::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

bool OAIChangeSetSummaryListItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_id_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangeSetSummaryListItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
