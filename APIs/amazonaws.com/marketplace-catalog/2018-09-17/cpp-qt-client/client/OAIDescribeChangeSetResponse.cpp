/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeChangeSetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeChangeSetResponse::OAIDescribeChangeSetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeChangeSetResponse::OAIDescribeChangeSetResponse() {
    this->initializeModel();
}

OAIDescribeChangeSetResponse::~OAIDescribeChangeSetResponse() {}

void OAIDescribeChangeSetResponse::initializeModel() {

    m_change_set_id_isSet = false;
    m_change_set_id_isValid = false;

    m_change_set_arn_isSet = false;
    m_change_set_arn_isValid = false;

    m_change_set_name_isSet = false;
    m_change_set_name_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_failure_code_isSet = false;
    m_failure_code_isValid = false;

    m_failure_description_isSet = false;
    m_failure_description_isValid = false;

    m_change_set_isSet = false;
    m_change_set_isValid = false;
}

void OAIDescribeChangeSetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeChangeSetResponse::fromJsonObject(QJsonObject json) {

    m_change_set_id_isValid = ::OpenAPI::fromJsonValue(m_change_set_id, json[QString("ChangeSetId")]);
    m_change_set_id_isSet = !json[QString("ChangeSetId")].isNull() && m_change_set_id_isValid;

    m_change_set_arn_isValid = ::OpenAPI::fromJsonValue(m_change_set_arn, json[QString("ChangeSetArn")]);
    m_change_set_arn_isSet = !json[QString("ChangeSetArn")].isNull() && m_change_set_arn_isValid;

    m_change_set_name_isValid = ::OpenAPI::fromJsonValue(m_change_set_name, json[QString("ChangeSetName")]);
    m_change_set_name_isSet = !json[QString("ChangeSetName")].isNull() && m_change_set_name_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_failure_code_isValid = ::OpenAPI::fromJsonValue(m_failure_code, json[QString("FailureCode")]);
    m_failure_code_isSet = !json[QString("FailureCode")].isNull() && m_failure_code_isValid;

    m_failure_description_isValid = ::OpenAPI::fromJsonValue(m_failure_description, json[QString("FailureDescription")]);
    m_failure_description_isSet = !json[QString("FailureDescription")].isNull() && m_failure_description_isValid;

    m_change_set_isValid = ::OpenAPI::fromJsonValue(m_change_set, json[QString("ChangeSet")]);
    m_change_set_isSet = !json[QString("ChangeSet")].isNull() && m_change_set_isValid;
}

QString OAIDescribeChangeSetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeChangeSetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_change_set_id_isSet) {
        obj.insert(QString("ChangeSetId"), ::OpenAPI::toJsonValue(m_change_set_id));
    }
    if (m_change_set_arn_isSet) {
        obj.insert(QString("ChangeSetArn"), ::OpenAPI::toJsonValue(m_change_set_arn));
    }
    if (m_change_set_name_isSet) {
        obj.insert(QString("ChangeSetName"), ::OpenAPI::toJsonValue(m_change_set_name));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_failure_code.isSet()) {
        obj.insert(QString("FailureCode"), ::OpenAPI::toJsonValue(m_failure_code));
    }
    if (m_failure_description_isSet) {
        obj.insert(QString("FailureDescription"), ::OpenAPI::toJsonValue(m_failure_description));
    }
    if (m_change_set.isSet()) {
        obj.insert(QString("ChangeSet"), ::OpenAPI::toJsonValue(m_change_set));
    }
    return obj;
}

QString OAIDescribeChangeSetResponse::getChangeSetId() const {
    return m_change_set_id;
}
void OAIDescribeChangeSetResponse::setChangeSetId(const QString &change_set_id) {
    m_change_set_id = change_set_id;
    m_change_set_id_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_change_set_id_Set() const{
    return m_change_set_id_isSet;
}

bool OAIDescribeChangeSetResponse::is_change_set_id_Valid() const{
    return m_change_set_id_isValid;
}

QString OAIDescribeChangeSetResponse::getChangeSetArn() const {
    return m_change_set_arn;
}
void OAIDescribeChangeSetResponse::setChangeSetArn(const QString &change_set_arn) {
    m_change_set_arn = change_set_arn;
    m_change_set_arn_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_change_set_arn_Set() const{
    return m_change_set_arn_isSet;
}

bool OAIDescribeChangeSetResponse::is_change_set_arn_Valid() const{
    return m_change_set_arn_isValid;
}

QString OAIDescribeChangeSetResponse::getChangeSetName() const {
    return m_change_set_name;
}
void OAIDescribeChangeSetResponse::setChangeSetName(const QString &change_set_name) {
    m_change_set_name = change_set_name;
    m_change_set_name_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_change_set_name_Set() const{
    return m_change_set_name_isSet;
}

bool OAIDescribeChangeSetResponse::is_change_set_name_Valid() const{
    return m_change_set_name_isValid;
}

QString OAIDescribeChangeSetResponse::getStartTime() const {
    return m_start_time;
}
void OAIDescribeChangeSetResponse::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDescribeChangeSetResponse::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIDescribeChangeSetResponse::getEndTime() const {
    return m_end_time;
}
void OAIDescribeChangeSetResponse::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIDescribeChangeSetResponse::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIChangeStatus OAIDescribeChangeSetResponse::getStatus() const {
    return m_status;
}
void OAIDescribeChangeSetResponse::setStatus(const OAIChangeStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeChangeSetResponse::is_status_Valid() const{
    return m_status_isValid;
}

OAIFailureCode OAIDescribeChangeSetResponse::getFailureCode() const {
    return m_failure_code;
}
void OAIDescribeChangeSetResponse::setFailureCode(const OAIFailureCode &failure_code) {
    m_failure_code = failure_code;
    m_failure_code_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_failure_code_Set() const{
    return m_failure_code_isSet;
}

bool OAIDescribeChangeSetResponse::is_failure_code_Valid() const{
    return m_failure_code_isValid;
}

QString OAIDescribeChangeSetResponse::getFailureDescription() const {
    return m_failure_description;
}
void OAIDescribeChangeSetResponse::setFailureDescription(const QString &failure_description) {
    m_failure_description = failure_description;
    m_failure_description_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_failure_description_Set() const{
    return m_failure_description_isSet;
}

bool OAIDescribeChangeSetResponse::is_failure_description_Valid() const{
    return m_failure_description_isValid;
}

QList OAIDescribeChangeSetResponse::getChangeSet() const {
    return m_change_set;
}
void OAIDescribeChangeSetResponse::setChangeSet(const QList &change_set) {
    m_change_set = change_set;
    m_change_set_isSet = true;
}

bool OAIDescribeChangeSetResponse::is_change_set_Set() const{
    return m_change_set_isSet;
}

bool OAIDescribeChangeSetResponse::is_change_set_Valid() const{
    return m_change_set_isValid;
}

bool OAIDescribeChangeSetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeChangeSetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
