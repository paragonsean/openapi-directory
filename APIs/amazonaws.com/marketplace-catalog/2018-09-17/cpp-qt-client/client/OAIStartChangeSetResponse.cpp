/**
 * AWS Marketplace Catalog Service
 * <p>Catalog API actions allow you to manage your entities through list, describe, and update capabilities. An entity can be a product or an offer on AWS Marketplace. </p> <p>You can automate your entity update process by integrating the AWS Marketplace Catalog API with your AWS Marketplace product build or deployment pipelines. You can also create your own applications on top of the Catalog API to manage your products on AWS Marketplace.</p>
 *
 * The version of the OpenAPI document: 2018-09-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartChangeSetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartChangeSetResponse::OAIStartChangeSetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartChangeSetResponse::OAIStartChangeSetResponse() {
    this->initializeModel();
}

OAIStartChangeSetResponse::~OAIStartChangeSetResponse() {}

void OAIStartChangeSetResponse::initializeModel() {

    m_change_set_id_isSet = false;
    m_change_set_id_isValid = false;

    m_change_set_arn_isSet = false;
    m_change_set_arn_isValid = false;
}

void OAIStartChangeSetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartChangeSetResponse::fromJsonObject(QJsonObject json) {

    m_change_set_id_isValid = ::OpenAPI::fromJsonValue(m_change_set_id, json[QString("ChangeSetId")]);
    m_change_set_id_isSet = !json[QString("ChangeSetId")].isNull() && m_change_set_id_isValid;

    m_change_set_arn_isValid = ::OpenAPI::fromJsonValue(m_change_set_arn, json[QString("ChangeSetArn")]);
    m_change_set_arn_isSet = !json[QString("ChangeSetArn")].isNull() && m_change_set_arn_isValid;
}

QString OAIStartChangeSetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartChangeSetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_change_set_id_isSet) {
        obj.insert(QString("ChangeSetId"), ::OpenAPI::toJsonValue(m_change_set_id));
    }
    if (m_change_set_arn_isSet) {
        obj.insert(QString("ChangeSetArn"), ::OpenAPI::toJsonValue(m_change_set_arn));
    }
    return obj;
}

QString OAIStartChangeSetResponse::getChangeSetId() const {
    return m_change_set_id;
}
void OAIStartChangeSetResponse::setChangeSetId(const QString &change_set_id) {
    m_change_set_id = change_set_id;
    m_change_set_id_isSet = true;
}

bool OAIStartChangeSetResponse::is_change_set_id_Set() const{
    return m_change_set_id_isSet;
}

bool OAIStartChangeSetResponse::is_change_set_id_Valid() const{
    return m_change_set_id_isValid;
}

QString OAIStartChangeSetResponse::getChangeSetArn() const {
    return m_change_set_arn;
}
void OAIStartChangeSetResponse::setChangeSetArn(const QString &change_set_arn) {
    m_change_set_arn = change_set_arn;
    m_change_set_arn_isSet = true;
}

bool OAIStartChangeSetResponse::is_change_set_arn_Set() const{
    return m_change_set_arn_isSet;
}

bool OAIStartChangeSetResponse::is_change_set_arn_Valid() const{
    return m_change_set_arn_isValid;
}

bool OAIStartChangeSetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_set_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartChangeSetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
