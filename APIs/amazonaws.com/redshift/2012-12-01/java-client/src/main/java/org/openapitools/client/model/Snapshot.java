/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a snapshot.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Snapshot {
  public static final String SERIALIZED_NAME_SNAPSHOT_IDENTIFIER = "SnapshotIdentifier";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_IDENTIFIER)
  private String snapshotIdentifier;

  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_SNAPSHOT_CREATE_TIME = "SnapshotCreateTime";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_CREATE_TIME)
  private OffsetDateTime snapshotCreateTime;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_CLUSTER_CREATE_TIME = "ClusterCreateTime";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CREATE_TIME)
  private OffsetDateTime clusterCreateTime;

  public static final String SERIALIZED_NAME_MASTER_USERNAME = "MasterUsername";
  @SerializedName(SERIALIZED_NAME_MASTER_USERNAME)
  private String masterUsername;

  public static final String SERIALIZED_NAME_CLUSTER_VERSION = "ClusterVersion";
  @SerializedName(SERIALIZED_NAME_CLUSTER_VERSION)
  private String clusterVersion;

  public static final String SERIALIZED_NAME_ENGINE_FULL_VERSION = "EngineFullVersion";
  @SerializedName(SERIALIZED_NAME_ENGINE_FULL_VERSION)
  private String engineFullVersion;

  public static final String SERIALIZED_NAME_SNAPSHOT_TYPE = "SnapshotType";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_TYPE)
  private String snapshotType;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_NUMBER_OF_NODES = "NumberOfNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NODES)
  private Integer numberOfNodes;

  public static final String SERIALIZED_NAME_DB_NAME = "DBName";
  @SerializedName(SERIALIZED_NAME_DB_NAME)
  private String dbName;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_ENCRYPTED = "Encrypted";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED)
  private Boolean encrypted;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_ENCRYPTED_WITH_H_S_M = "EncryptedWithHSM";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED_WITH_H_S_M)
  private Boolean encryptedWithHSM;

  public static final String SERIALIZED_NAME_ACCOUNTS_WITH_RESTORE_ACCESS = "AccountsWithRestoreAccess";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS_WITH_RESTORE_ACCESS)
  private List accountsWithRestoreAccess;

  public static final String SERIALIZED_NAME_OWNER_ACCOUNT = "OwnerAccount";
  @SerializedName(SERIALIZED_NAME_OWNER_ACCOUNT)
  private String ownerAccount;

  public static final String SERIALIZED_NAME_TOTAL_BACKUP_SIZE_IN_MEGA_BYTES = "TotalBackupSizeInMegaBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_BACKUP_SIZE_IN_MEGA_BYTES)
  private Double totalBackupSizeInMegaBytes;

  public static final String SERIALIZED_NAME_ACTUAL_INCREMENTAL_BACKUP_SIZE_IN_MEGA_BYTES = "ActualIncrementalBackupSizeInMegaBytes";
  @SerializedName(SERIALIZED_NAME_ACTUAL_INCREMENTAL_BACKUP_SIZE_IN_MEGA_BYTES)
  private Double actualIncrementalBackupSizeInMegaBytes;

  public static final String SERIALIZED_NAME_BACKUP_PROGRESS_IN_MEGA_BYTES = "BackupProgressInMegaBytes";
  @SerializedName(SERIALIZED_NAME_BACKUP_PROGRESS_IN_MEGA_BYTES)
  private Double backupProgressInMegaBytes;

  public static final String SERIALIZED_NAME_CURRENT_BACKUP_RATE_IN_MEGA_BYTES_PER_SECOND = "CurrentBackupRateInMegaBytesPerSecond";
  @SerializedName(SERIALIZED_NAME_CURRENT_BACKUP_RATE_IN_MEGA_BYTES_PER_SECOND)
  private Double currentBackupRateInMegaBytesPerSecond;

  public static final String SERIALIZED_NAME_ESTIMATED_SECONDS_TO_COMPLETION = "EstimatedSecondsToCompletion";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_SECONDS_TO_COMPLETION)
  private Integer estimatedSecondsToCompletion;

  public static final String SERIALIZED_NAME_ELAPSED_TIME_IN_SECONDS = "ElapsedTimeInSeconds";
  @SerializedName(SERIALIZED_NAME_ELAPSED_TIME_IN_SECONDS)
  private Integer elapsedTimeInSeconds;

  public static final String SERIALIZED_NAME_SOURCE_REGION = "SourceRegion";
  @SerializedName(SERIALIZED_NAME_SOURCE_REGION)
  private String sourceRegion;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_RESTORABLE_NODE_TYPES = "RestorableNodeTypes";
  @SerializedName(SERIALIZED_NAME_RESTORABLE_NODE_TYPES)
  private List restorableNodeTypes;

  public static final String SERIALIZED_NAME_ENHANCED_VPC_ROUTING = "EnhancedVpcRouting";
  @SerializedName(SERIALIZED_NAME_ENHANCED_VPC_ROUTING)
  private Boolean enhancedVpcRouting;

  public static final String SERIALIZED_NAME_MAINTENANCE_TRACK_NAME = "MaintenanceTrackName";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_TRACK_NAME)
  private String maintenanceTrackName;

  public static final String SERIALIZED_NAME_MANUAL_SNAPSHOT_RETENTION_PERIOD = "ManualSnapshotRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_MANUAL_SNAPSHOT_RETENTION_PERIOD)
  private Integer manualSnapshotRetentionPeriod;

  public static final String SERIALIZED_NAME_MANUAL_SNAPSHOT_REMAINING_DAYS = "ManualSnapshotRemainingDays";
  @SerializedName(SERIALIZED_NAME_MANUAL_SNAPSHOT_REMAINING_DAYS)
  private Integer manualSnapshotRemainingDays;

  public static final String SERIALIZED_NAME_SNAPSHOT_RETENTION_START_TIME = "SnapshotRetentionStartTime";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_RETENTION_START_TIME)
  private OffsetDateTime snapshotRetentionStartTime;

  public Snapshot() {
  }

  public Snapshot snapshotIdentifier(String snapshotIdentifier) {
    this.snapshotIdentifier = snapshotIdentifier;
    return this;
  }

  /**
   * Get snapshotIdentifier
   * @return snapshotIdentifier
   */
  @javax.annotation.Nullable
  public String getSnapshotIdentifier() {
    return snapshotIdentifier;
  }

  public void setSnapshotIdentifier(String snapshotIdentifier) {
    this.snapshotIdentifier = snapshotIdentifier;
  }


  public Snapshot clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nullable
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public Snapshot snapshotCreateTime(OffsetDateTime snapshotCreateTime) {
    this.snapshotCreateTime = snapshotCreateTime;
    return this;
  }

  /**
   * Get snapshotCreateTime
   * @return snapshotCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSnapshotCreateTime() {
    return snapshotCreateTime;
  }

  public void setSnapshotCreateTime(OffsetDateTime snapshotCreateTime) {
    this.snapshotCreateTime = snapshotCreateTime;
  }


  public Snapshot status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public Snapshot port(Integer port) {
    this.port = port;
    return this;
  }

  /**
   * Get port
   * @return port
   */
  @javax.annotation.Nullable
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }


  public Snapshot availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public Snapshot clusterCreateTime(OffsetDateTime clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
    return this;
  }

  /**
   * Get clusterCreateTime
   * @return clusterCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getClusterCreateTime() {
    return clusterCreateTime;
  }

  public void setClusterCreateTime(OffsetDateTime clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
  }


  public Snapshot masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

  /**
   * Get masterUsername
   * @return masterUsername
   */
  @javax.annotation.Nullable
  public String getMasterUsername() {
    return masterUsername;
  }

  public void setMasterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
  }


  public Snapshot clusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
    return this;
  }

  /**
   * Get clusterVersion
   * @return clusterVersion
   */
  @javax.annotation.Nullable
  public String getClusterVersion() {
    return clusterVersion;
  }

  public void setClusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
  }


  public Snapshot engineFullVersion(String engineFullVersion) {
    this.engineFullVersion = engineFullVersion;
    return this;
  }

  /**
   * Get engineFullVersion
   * @return engineFullVersion
   */
  @javax.annotation.Nullable
  public String getEngineFullVersion() {
    return engineFullVersion;
  }

  public void setEngineFullVersion(String engineFullVersion) {
    this.engineFullVersion = engineFullVersion;
  }


  public Snapshot snapshotType(String snapshotType) {
    this.snapshotType = snapshotType;
    return this;
  }

  /**
   * Get snapshotType
   * @return snapshotType
   */
  @javax.annotation.Nullable
  public String getSnapshotType() {
    return snapshotType;
  }

  public void setSnapshotType(String snapshotType) {
    this.snapshotType = snapshotType;
  }


  public Snapshot nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nullable
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public Snapshot numberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
    return this;
  }

  /**
   * Get numberOfNodes
   * @return numberOfNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfNodes() {
    return numberOfNodes;
  }

  public void setNumberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
  }


  public Snapshot dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

  /**
   * Get dbName
   * @return dbName
   */
  @javax.annotation.Nullable
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public Snapshot vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public Snapshot encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

  /**
   * Get encrypted
   * @return encrypted
   */
  @javax.annotation.Nullable
  public Boolean getEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }


  public Snapshot kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public Snapshot encryptedWithHSM(Boolean encryptedWithHSM) {
    this.encryptedWithHSM = encryptedWithHSM;
    return this;
  }

  /**
   * Get encryptedWithHSM
   * @return encryptedWithHSM
   */
  @javax.annotation.Nullable
  public Boolean getEncryptedWithHSM() {
    return encryptedWithHSM;
  }

  public void setEncryptedWithHSM(Boolean encryptedWithHSM) {
    this.encryptedWithHSM = encryptedWithHSM;
  }


  public Snapshot accountsWithRestoreAccess(List accountsWithRestoreAccess) {
    this.accountsWithRestoreAccess = accountsWithRestoreAccess;
    return this;
  }

  /**
   * Get accountsWithRestoreAccess
   * @return accountsWithRestoreAccess
   */
  @javax.annotation.Nullable
  public List getAccountsWithRestoreAccess() {
    return accountsWithRestoreAccess;
  }

  public void setAccountsWithRestoreAccess(List accountsWithRestoreAccess) {
    this.accountsWithRestoreAccess = accountsWithRestoreAccess;
  }


  public Snapshot ownerAccount(String ownerAccount) {
    this.ownerAccount = ownerAccount;
    return this;
  }

  /**
   * Get ownerAccount
   * @return ownerAccount
   */
  @javax.annotation.Nullable
  public String getOwnerAccount() {
    return ownerAccount;
  }

  public void setOwnerAccount(String ownerAccount) {
    this.ownerAccount = ownerAccount;
  }


  public Snapshot totalBackupSizeInMegaBytes(Double totalBackupSizeInMegaBytes) {
    this.totalBackupSizeInMegaBytes = totalBackupSizeInMegaBytes;
    return this;
  }

  /**
   * Get totalBackupSizeInMegaBytes
   * @return totalBackupSizeInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getTotalBackupSizeInMegaBytes() {
    return totalBackupSizeInMegaBytes;
  }

  public void setTotalBackupSizeInMegaBytes(Double totalBackupSizeInMegaBytes) {
    this.totalBackupSizeInMegaBytes = totalBackupSizeInMegaBytes;
  }


  public Snapshot actualIncrementalBackupSizeInMegaBytes(Double actualIncrementalBackupSizeInMegaBytes) {
    this.actualIncrementalBackupSizeInMegaBytes = actualIncrementalBackupSizeInMegaBytes;
    return this;
  }

  /**
   * Get actualIncrementalBackupSizeInMegaBytes
   * @return actualIncrementalBackupSizeInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getActualIncrementalBackupSizeInMegaBytes() {
    return actualIncrementalBackupSizeInMegaBytes;
  }

  public void setActualIncrementalBackupSizeInMegaBytes(Double actualIncrementalBackupSizeInMegaBytes) {
    this.actualIncrementalBackupSizeInMegaBytes = actualIncrementalBackupSizeInMegaBytes;
  }


  public Snapshot backupProgressInMegaBytes(Double backupProgressInMegaBytes) {
    this.backupProgressInMegaBytes = backupProgressInMegaBytes;
    return this;
  }

  /**
   * Get backupProgressInMegaBytes
   * @return backupProgressInMegaBytes
   */
  @javax.annotation.Nullable
  public Double getBackupProgressInMegaBytes() {
    return backupProgressInMegaBytes;
  }

  public void setBackupProgressInMegaBytes(Double backupProgressInMegaBytes) {
    this.backupProgressInMegaBytes = backupProgressInMegaBytes;
  }


  public Snapshot currentBackupRateInMegaBytesPerSecond(Double currentBackupRateInMegaBytesPerSecond) {
    this.currentBackupRateInMegaBytesPerSecond = currentBackupRateInMegaBytesPerSecond;
    return this;
  }

  /**
   * Get currentBackupRateInMegaBytesPerSecond
   * @return currentBackupRateInMegaBytesPerSecond
   */
  @javax.annotation.Nullable
  public Double getCurrentBackupRateInMegaBytesPerSecond() {
    return currentBackupRateInMegaBytesPerSecond;
  }

  public void setCurrentBackupRateInMegaBytesPerSecond(Double currentBackupRateInMegaBytesPerSecond) {
    this.currentBackupRateInMegaBytesPerSecond = currentBackupRateInMegaBytesPerSecond;
  }


  public Snapshot estimatedSecondsToCompletion(Integer estimatedSecondsToCompletion) {
    this.estimatedSecondsToCompletion = estimatedSecondsToCompletion;
    return this;
  }

  /**
   * Get estimatedSecondsToCompletion
   * @return estimatedSecondsToCompletion
   */
  @javax.annotation.Nullable
  public Integer getEstimatedSecondsToCompletion() {
    return estimatedSecondsToCompletion;
  }

  public void setEstimatedSecondsToCompletion(Integer estimatedSecondsToCompletion) {
    this.estimatedSecondsToCompletion = estimatedSecondsToCompletion;
  }


  public Snapshot elapsedTimeInSeconds(Integer elapsedTimeInSeconds) {
    this.elapsedTimeInSeconds = elapsedTimeInSeconds;
    return this;
  }

  /**
   * Get elapsedTimeInSeconds
   * @return elapsedTimeInSeconds
   */
  @javax.annotation.Nullable
  public Integer getElapsedTimeInSeconds() {
    return elapsedTimeInSeconds;
  }

  public void setElapsedTimeInSeconds(Integer elapsedTimeInSeconds) {
    this.elapsedTimeInSeconds = elapsedTimeInSeconds;
  }


  public Snapshot sourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
    return this;
  }

  /**
   * Get sourceRegion
   * @return sourceRegion
   */
  @javax.annotation.Nullable
  public String getSourceRegion() {
    return sourceRegion;
  }

  public void setSourceRegion(String sourceRegion) {
    this.sourceRegion = sourceRegion;
  }


  public Snapshot tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public Snapshot restorableNodeTypes(List restorableNodeTypes) {
    this.restorableNodeTypes = restorableNodeTypes;
    return this;
  }

  /**
   * Get restorableNodeTypes
   * @return restorableNodeTypes
   */
  @javax.annotation.Nullable
  public List getRestorableNodeTypes() {
    return restorableNodeTypes;
  }

  public void setRestorableNodeTypes(List restorableNodeTypes) {
    this.restorableNodeTypes = restorableNodeTypes;
  }


  public Snapshot enhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
    return this;
  }

  /**
   * Get enhancedVpcRouting
   * @return enhancedVpcRouting
   */
  @javax.annotation.Nullable
  public Boolean getEnhancedVpcRouting() {
    return enhancedVpcRouting;
  }

  public void setEnhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
  }


  public Snapshot maintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
    return this;
  }

  /**
   * Get maintenanceTrackName
   * @return maintenanceTrackName
   */
  @javax.annotation.Nullable
  public String getMaintenanceTrackName() {
    return maintenanceTrackName;
  }

  public void setMaintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
  }


  public Snapshot manualSnapshotRetentionPeriod(Integer manualSnapshotRetentionPeriod) {
    this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
    return this;
  }

  /**
   * Get manualSnapshotRetentionPeriod
   * @return manualSnapshotRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getManualSnapshotRetentionPeriod() {
    return manualSnapshotRetentionPeriod;
  }

  public void setManualSnapshotRetentionPeriod(Integer manualSnapshotRetentionPeriod) {
    this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
  }


  public Snapshot manualSnapshotRemainingDays(Integer manualSnapshotRemainingDays) {
    this.manualSnapshotRemainingDays = manualSnapshotRemainingDays;
    return this;
  }

  /**
   * Get manualSnapshotRemainingDays
   * @return manualSnapshotRemainingDays
   */
  @javax.annotation.Nullable
  public Integer getManualSnapshotRemainingDays() {
    return manualSnapshotRemainingDays;
  }

  public void setManualSnapshotRemainingDays(Integer manualSnapshotRemainingDays) {
    this.manualSnapshotRemainingDays = manualSnapshotRemainingDays;
  }


  public Snapshot snapshotRetentionStartTime(OffsetDateTime snapshotRetentionStartTime) {
    this.snapshotRetentionStartTime = snapshotRetentionStartTime;
    return this;
  }

  /**
   * Get snapshotRetentionStartTime
   * @return snapshotRetentionStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSnapshotRetentionStartTime() {
    return snapshotRetentionStartTime;
  }

  public void setSnapshotRetentionStartTime(OffsetDateTime snapshotRetentionStartTime) {
    this.snapshotRetentionStartTime = snapshotRetentionStartTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Snapshot snapshot = (Snapshot) o;
    return Objects.equals(this.snapshotIdentifier, snapshot.snapshotIdentifier) &&
        Objects.equals(this.clusterIdentifier, snapshot.clusterIdentifier) &&
        Objects.equals(this.snapshotCreateTime, snapshot.snapshotCreateTime) &&
        Objects.equals(this.status, snapshot.status) &&
        Objects.equals(this.port, snapshot.port) &&
        Objects.equals(this.availabilityZone, snapshot.availabilityZone) &&
        Objects.equals(this.clusterCreateTime, snapshot.clusterCreateTime) &&
        Objects.equals(this.masterUsername, snapshot.masterUsername) &&
        Objects.equals(this.clusterVersion, snapshot.clusterVersion) &&
        Objects.equals(this.engineFullVersion, snapshot.engineFullVersion) &&
        Objects.equals(this.snapshotType, snapshot.snapshotType) &&
        Objects.equals(this.nodeType, snapshot.nodeType) &&
        Objects.equals(this.numberOfNodes, snapshot.numberOfNodes) &&
        Objects.equals(this.dbName, snapshot.dbName) &&
        Objects.equals(this.vpcId, snapshot.vpcId) &&
        Objects.equals(this.encrypted, snapshot.encrypted) &&
        Objects.equals(this.kmsKeyId, snapshot.kmsKeyId) &&
        Objects.equals(this.encryptedWithHSM, snapshot.encryptedWithHSM) &&
        Objects.equals(this.accountsWithRestoreAccess, snapshot.accountsWithRestoreAccess) &&
        Objects.equals(this.ownerAccount, snapshot.ownerAccount) &&
        Objects.equals(this.totalBackupSizeInMegaBytes, snapshot.totalBackupSizeInMegaBytes) &&
        Objects.equals(this.actualIncrementalBackupSizeInMegaBytes, snapshot.actualIncrementalBackupSizeInMegaBytes) &&
        Objects.equals(this.backupProgressInMegaBytes, snapshot.backupProgressInMegaBytes) &&
        Objects.equals(this.currentBackupRateInMegaBytesPerSecond, snapshot.currentBackupRateInMegaBytesPerSecond) &&
        Objects.equals(this.estimatedSecondsToCompletion, snapshot.estimatedSecondsToCompletion) &&
        Objects.equals(this.elapsedTimeInSeconds, snapshot.elapsedTimeInSeconds) &&
        Objects.equals(this.sourceRegion, snapshot.sourceRegion) &&
        Objects.equals(this.tags, snapshot.tags) &&
        Objects.equals(this.restorableNodeTypes, snapshot.restorableNodeTypes) &&
        Objects.equals(this.enhancedVpcRouting, snapshot.enhancedVpcRouting) &&
        Objects.equals(this.maintenanceTrackName, snapshot.maintenanceTrackName) &&
        Objects.equals(this.manualSnapshotRetentionPeriod, snapshot.manualSnapshotRetentionPeriod) &&
        Objects.equals(this.manualSnapshotRemainingDays, snapshot.manualSnapshotRemainingDays) &&
        Objects.equals(this.snapshotRetentionStartTime, snapshot.snapshotRetentionStartTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snapshotIdentifier, clusterIdentifier, snapshotCreateTime, status, port, availabilityZone, clusterCreateTime, masterUsername, clusterVersion, engineFullVersion, snapshotType, nodeType, numberOfNodes, dbName, vpcId, encrypted, kmsKeyId, encryptedWithHSM, accountsWithRestoreAccess, ownerAccount, totalBackupSizeInMegaBytes, actualIncrementalBackupSizeInMegaBytes, backupProgressInMegaBytes, currentBackupRateInMegaBytesPerSecond, estimatedSecondsToCompletion, elapsedTimeInSeconds, sourceRegion, tags, restorableNodeTypes, enhancedVpcRouting, maintenanceTrackName, manualSnapshotRetentionPeriod, manualSnapshotRemainingDays, snapshotRetentionStartTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Snapshot {\n");
    sb.append("    snapshotIdentifier: ").append(toIndentedString(snapshotIdentifier)).append("\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    snapshotCreateTime: ").append(toIndentedString(snapshotCreateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    clusterCreateTime: ").append(toIndentedString(clusterCreateTime)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    clusterVersion: ").append(toIndentedString(clusterVersion)).append("\n");
    sb.append("    engineFullVersion: ").append(toIndentedString(engineFullVersion)).append("\n");
    sb.append("    snapshotType: ").append(toIndentedString(snapshotType)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    numberOfNodes: ").append(toIndentedString(numberOfNodes)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    encryptedWithHSM: ").append(toIndentedString(encryptedWithHSM)).append("\n");
    sb.append("    accountsWithRestoreAccess: ").append(toIndentedString(accountsWithRestoreAccess)).append("\n");
    sb.append("    ownerAccount: ").append(toIndentedString(ownerAccount)).append("\n");
    sb.append("    totalBackupSizeInMegaBytes: ").append(toIndentedString(totalBackupSizeInMegaBytes)).append("\n");
    sb.append("    actualIncrementalBackupSizeInMegaBytes: ").append(toIndentedString(actualIncrementalBackupSizeInMegaBytes)).append("\n");
    sb.append("    backupProgressInMegaBytes: ").append(toIndentedString(backupProgressInMegaBytes)).append("\n");
    sb.append("    currentBackupRateInMegaBytesPerSecond: ").append(toIndentedString(currentBackupRateInMegaBytesPerSecond)).append("\n");
    sb.append("    estimatedSecondsToCompletion: ").append(toIndentedString(estimatedSecondsToCompletion)).append("\n");
    sb.append("    elapsedTimeInSeconds: ").append(toIndentedString(elapsedTimeInSeconds)).append("\n");
    sb.append("    sourceRegion: ").append(toIndentedString(sourceRegion)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    restorableNodeTypes: ").append(toIndentedString(restorableNodeTypes)).append("\n");
    sb.append("    enhancedVpcRouting: ").append(toIndentedString(enhancedVpcRouting)).append("\n");
    sb.append("    maintenanceTrackName: ").append(toIndentedString(maintenanceTrackName)).append("\n");
    sb.append("    manualSnapshotRetentionPeriod: ").append(toIndentedString(manualSnapshotRetentionPeriod)).append("\n");
    sb.append("    manualSnapshotRemainingDays: ").append(toIndentedString(manualSnapshotRemainingDays)).append("\n");
    sb.append("    snapshotRetentionStartTime: ").append(toIndentedString(snapshotRetentionStartTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SnapshotIdentifier");
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("SnapshotCreateTime");
    openapiFields.add("Status");
    openapiFields.add("Port");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("ClusterCreateTime");
    openapiFields.add("MasterUsername");
    openapiFields.add("ClusterVersion");
    openapiFields.add("EngineFullVersion");
    openapiFields.add("SnapshotType");
    openapiFields.add("NodeType");
    openapiFields.add("NumberOfNodes");
    openapiFields.add("DBName");
    openapiFields.add("VpcId");
    openapiFields.add("Encrypted");
    openapiFields.add("KmsKeyId");
    openapiFields.add("EncryptedWithHSM");
    openapiFields.add("AccountsWithRestoreAccess");
    openapiFields.add("OwnerAccount");
    openapiFields.add("TotalBackupSizeInMegaBytes");
    openapiFields.add("ActualIncrementalBackupSizeInMegaBytes");
    openapiFields.add("BackupProgressInMegaBytes");
    openapiFields.add("CurrentBackupRateInMegaBytesPerSecond");
    openapiFields.add("EstimatedSecondsToCompletion");
    openapiFields.add("ElapsedTimeInSeconds");
    openapiFields.add("SourceRegion");
    openapiFields.add("Tags");
    openapiFields.add("RestorableNodeTypes");
    openapiFields.add("EnhancedVpcRouting");
    openapiFields.add("MaintenanceTrackName");
    openapiFields.add("ManualSnapshotRetentionPeriod");
    openapiFields.add("ManualSnapshotRemainingDays");
    openapiFields.add("SnapshotRetentionStartTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Snapshot
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Snapshot.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Snapshot is not found in the empty JSON string", Snapshot.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Snapshot.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Snapshot` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SnapshotIdentifier`
      if (jsonObj.get("SnapshotIdentifier") != null && !jsonObj.get("SnapshotIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotIdentifier"));
      }
      // validate the optional field `ClusterIdentifier`
      if (jsonObj.get("ClusterIdentifier") != null && !jsonObj.get("ClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      }
      // validate the optional field `SnapshotCreateTime`
      if (jsonObj.get("SnapshotCreateTime") != null && !jsonObj.get("SnapshotCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("SnapshotCreateTime"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Port`
      if (jsonObj.get("Port") != null && !jsonObj.get("Port").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Port"));
      }
      // validate the optional field `AvailabilityZone`
      if (jsonObj.get("AvailabilityZone") != null && !jsonObj.get("AvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      }
      // validate the optional field `ClusterCreateTime`
      if (jsonObj.get("ClusterCreateTime") != null && !jsonObj.get("ClusterCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ClusterCreateTime"));
      }
      // validate the optional field `MasterUsername`
      if (jsonObj.get("MasterUsername") != null && !jsonObj.get("MasterUsername").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUsername"));
      }
      // validate the optional field `ClusterVersion`
      if (jsonObj.get("ClusterVersion") != null && !jsonObj.get("ClusterVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterVersion"));
      }
      // validate the optional field `EngineFullVersion`
      if (jsonObj.get("EngineFullVersion") != null && !jsonObj.get("EngineFullVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EngineFullVersion"));
      }
      // validate the optional field `SnapshotType`
      if (jsonObj.get("SnapshotType") != null && !jsonObj.get("SnapshotType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotType"));
      }
      // validate the optional field `NodeType`
      if (jsonObj.get("NodeType") != null && !jsonObj.get("NodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodeType"));
      }
      // validate the optional field `NumberOfNodes`
      if (jsonObj.get("NumberOfNodes") != null && !jsonObj.get("NumberOfNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfNodes"));
      }
      // validate the optional field `DBName`
      if (jsonObj.get("DBName") != null && !jsonObj.get("DBName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBName"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
      // validate the optional field `Encrypted`
      if (jsonObj.get("Encrypted") != null && !jsonObj.get("Encrypted").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Encrypted"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `EncryptedWithHSM`
      if (jsonObj.get("EncryptedWithHSM") != null && !jsonObj.get("EncryptedWithHSM").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EncryptedWithHSM"));
      }
      // validate the optional field `AccountsWithRestoreAccess`
      if (jsonObj.get("AccountsWithRestoreAccess") != null && !jsonObj.get("AccountsWithRestoreAccess").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AccountsWithRestoreAccess"));
      }
      // validate the optional field `OwnerAccount`
      if (jsonObj.get("OwnerAccount") != null && !jsonObj.get("OwnerAccount").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OwnerAccount"));
      }
      // validate the optional field `TotalBackupSizeInMegaBytes`
      if (jsonObj.get("TotalBackupSizeInMegaBytes") != null && !jsonObj.get("TotalBackupSizeInMegaBytes").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("TotalBackupSizeInMegaBytes"));
      }
      // validate the optional field `ActualIncrementalBackupSizeInMegaBytes`
      if (jsonObj.get("ActualIncrementalBackupSizeInMegaBytes") != null && !jsonObj.get("ActualIncrementalBackupSizeInMegaBytes").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("ActualIncrementalBackupSizeInMegaBytes"));
      }
      // validate the optional field `BackupProgressInMegaBytes`
      if (jsonObj.get("BackupProgressInMegaBytes") != null && !jsonObj.get("BackupProgressInMegaBytes").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("BackupProgressInMegaBytes"));
      }
      // validate the optional field `CurrentBackupRateInMegaBytesPerSecond`
      if (jsonObj.get("CurrentBackupRateInMegaBytesPerSecond") != null && !jsonObj.get("CurrentBackupRateInMegaBytesPerSecond").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("CurrentBackupRateInMegaBytesPerSecond"));
      }
      // validate the optional field `EstimatedSecondsToCompletion`
      if (jsonObj.get("EstimatedSecondsToCompletion") != null && !jsonObj.get("EstimatedSecondsToCompletion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EstimatedSecondsToCompletion"));
      }
      // validate the optional field `ElapsedTimeInSeconds`
      if (jsonObj.get("ElapsedTimeInSeconds") != null && !jsonObj.get("ElapsedTimeInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ElapsedTimeInSeconds"));
      }
      // validate the optional field `SourceRegion`
      if (jsonObj.get("SourceRegion") != null && !jsonObj.get("SourceRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceRegion"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `RestorableNodeTypes`
      if (jsonObj.get("RestorableNodeTypes") != null && !jsonObj.get("RestorableNodeTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("RestorableNodeTypes"));
      }
      // validate the optional field `EnhancedVpcRouting`
      if (jsonObj.get("EnhancedVpcRouting") != null && !jsonObj.get("EnhancedVpcRouting").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnhancedVpcRouting"));
      }
      // validate the optional field `MaintenanceTrackName`
      if (jsonObj.get("MaintenanceTrackName") != null && !jsonObj.get("MaintenanceTrackName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceTrackName"));
      }
      // validate the optional field `ManualSnapshotRetentionPeriod`
      if (jsonObj.get("ManualSnapshotRetentionPeriod") != null && !jsonObj.get("ManualSnapshotRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ManualSnapshotRetentionPeriod"));
      }
      // validate the optional field `ManualSnapshotRemainingDays`
      if (jsonObj.get("ManualSnapshotRemainingDays") != null && !jsonObj.get("ManualSnapshotRemainingDays").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ManualSnapshotRemainingDays"));
      }
      // validate the optional field `SnapshotRetentionStartTime`
      if (jsonObj.get("SnapshotRetentionStartTime") != null && !jsonObj.get("SnapshotRetentionStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("SnapshotRetentionStartTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Snapshot.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Snapshot' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Snapshot> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Snapshot.class));

       return (TypeAdapter<T>) new TypeAdapter<Snapshot>() {
           @Override
           public void write(JsonWriter out, Snapshot value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Snapshot read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Snapshot given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Snapshot
   * @throws IOException if the JSON string is invalid with respect to Snapshot
   */
  public static Snapshot fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Snapshot.class);
  }

  /**
   * Convert an instance of Snapshot to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

