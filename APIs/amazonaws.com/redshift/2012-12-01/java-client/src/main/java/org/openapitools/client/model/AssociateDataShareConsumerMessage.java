/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AssociateDataShareConsumerMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociateDataShareConsumerMessage {
  public static final String SERIALIZED_NAME_DATA_SHARE_ARN = "DataShareArn";
  @SerializedName(SERIALIZED_NAME_DATA_SHARE_ARN)
  private String dataShareArn;

  public static final String SERIALIZED_NAME_ASSOCIATE_ENTIRE_ACCOUNT = "AssociateEntireAccount";
  @SerializedName(SERIALIZED_NAME_ASSOCIATE_ENTIRE_ACCOUNT)
  private Boolean associateEntireAccount;

  public static final String SERIALIZED_NAME_CONSUMER_ARN = "ConsumerArn";
  @SerializedName(SERIALIZED_NAME_CONSUMER_ARN)
  private String consumerArn;

  public static final String SERIALIZED_NAME_CONSUMER_REGION = "ConsumerRegion";
  @SerializedName(SERIALIZED_NAME_CONSUMER_REGION)
  private String consumerRegion;

  public AssociateDataShareConsumerMessage() {
  }

  public AssociateDataShareConsumerMessage dataShareArn(String dataShareArn) {
    this.dataShareArn = dataShareArn;
    return this;
  }

  /**
   * Get dataShareArn
   * @return dataShareArn
   */
  @javax.annotation.Nonnull
  public String getDataShareArn() {
    return dataShareArn;
  }

  public void setDataShareArn(String dataShareArn) {
    this.dataShareArn = dataShareArn;
  }


  public AssociateDataShareConsumerMessage associateEntireAccount(Boolean associateEntireAccount) {
    this.associateEntireAccount = associateEntireAccount;
    return this;
  }

  /**
   * Get associateEntireAccount
   * @return associateEntireAccount
   */
  @javax.annotation.Nullable
  public Boolean getAssociateEntireAccount() {
    return associateEntireAccount;
  }

  public void setAssociateEntireAccount(Boolean associateEntireAccount) {
    this.associateEntireAccount = associateEntireAccount;
  }


  public AssociateDataShareConsumerMessage consumerArn(String consumerArn) {
    this.consumerArn = consumerArn;
    return this;
  }

  /**
   * Get consumerArn
   * @return consumerArn
   */
  @javax.annotation.Nullable
  public String getConsumerArn() {
    return consumerArn;
  }

  public void setConsumerArn(String consumerArn) {
    this.consumerArn = consumerArn;
  }


  public AssociateDataShareConsumerMessage consumerRegion(String consumerRegion) {
    this.consumerRegion = consumerRegion;
    return this;
  }

  /**
   * Get consumerRegion
   * @return consumerRegion
   */
  @javax.annotation.Nullable
  public String getConsumerRegion() {
    return consumerRegion;
  }

  public void setConsumerRegion(String consumerRegion) {
    this.consumerRegion = consumerRegion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociateDataShareConsumerMessage associateDataShareConsumerMessage = (AssociateDataShareConsumerMessage) o;
    return Objects.equals(this.dataShareArn, associateDataShareConsumerMessage.dataShareArn) &&
        Objects.equals(this.associateEntireAccount, associateDataShareConsumerMessage.associateEntireAccount) &&
        Objects.equals(this.consumerArn, associateDataShareConsumerMessage.consumerArn) &&
        Objects.equals(this.consumerRegion, associateDataShareConsumerMessage.consumerRegion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataShareArn, associateEntireAccount, consumerArn, consumerRegion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociateDataShareConsumerMessage {\n");
    sb.append("    dataShareArn: ").append(toIndentedString(dataShareArn)).append("\n");
    sb.append("    associateEntireAccount: ").append(toIndentedString(associateEntireAccount)).append("\n");
    sb.append("    consumerArn: ").append(toIndentedString(consumerArn)).append("\n");
    sb.append("    consumerRegion: ").append(toIndentedString(consumerRegion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DataShareArn");
    openapiFields.add("AssociateEntireAccount");
    openapiFields.add("ConsumerArn");
    openapiFields.add("ConsumerRegion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DataShareArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociateDataShareConsumerMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociateDataShareConsumerMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociateDataShareConsumerMessage is not found in the empty JSON string", AssociateDataShareConsumerMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociateDataShareConsumerMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociateDataShareConsumerMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AssociateDataShareConsumerMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DataShareArn`
      String.validateJsonElement(jsonObj.get("DataShareArn"));
      // validate the optional field `AssociateEntireAccount`
      if (jsonObj.get("AssociateEntireAccount") != null && !jsonObj.get("AssociateEntireAccount").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AssociateEntireAccount"));
      }
      // validate the optional field `ConsumerArn`
      if (jsonObj.get("ConsumerArn") != null && !jsonObj.get("ConsumerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ConsumerArn"));
      }
      // validate the optional field `ConsumerRegion`
      if (jsonObj.get("ConsumerRegion") != null && !jsonObj.get("ConsumerRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ConsumerRegion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociateDataShareConsumerMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociateDataShareConsumerMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociateDataShareConsumerMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociateDataShareConsumerMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociateDataShareConsumerMessage>() {
           @Override
           public void write(JsonWriter out, AssociateDataShareConsumerMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociateDataShareConsumerMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociateDataShareConsumerMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociateDataShareConsumerMessage
   * @throws IOException if the JSON string is invalid with respect to AssociateDataShareConsumerMessage
   */
  public static AssociateDataShareConsumerMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociateDataShareConsumerMessage.class);
  }

  /**
   * Convert an instance of AssociateDataShareConsumerMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

