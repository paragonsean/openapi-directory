/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The request parameters to get cluster credentials.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetClusterCredentialsMessage {
  public static final String SERIALIZED_NAME_DB_USER = "DbUser";
  @SerializedName(SERIALIZED_NAME_DB_USER)
  private String dbUser;

  public static final String SERIALIZED_NAME_DB_NAME = "DbName";
  @SerializedName(SERIALIZED_NAME_DB_NAME)
  private String dbName;

  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_DURATION_SECONDS = "DurationSeconds";
  @SerializedName(SERIALIZED_NAME_DURATION_SECONDS)
  private Integer durationSeconds;

  public static final String SERIALIZED_NAME_AUTO_CREATE = "AutoCreate";
  @SerializedName(SERIALIZED_NAME_AUTO_CREATE)
  private Boolean autoCreate;

  public static final String SERIALIZED_NAME_DB_GROUPS = "DbGroups";
  @SerializedName(SERIALIZED_NAME_DB_GROUPS)
  private List dbGroups;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN_NAME = "CustomDomainName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN_NAME)
  private String customDomainName;

  public GetClusterCredentialsMessage() {
  }

  public GetClusterCredentialsMessage dbUser(String dbUser) {
    this.dbUser = dbUser;
    return this;
  }

  /**
   * Get dbUser
   * @return dbUser
   */
  @javax.annotation.Nonnull
  public String getDbUser() {
    return dbUser;
  }

  public void setDbUser(String dbUser) {
    this.dbUser = dbUser;
  }


  public GetClusterCredentialsMessage dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

  /**
   * Get dbName
   * @return dbName
   */
  @javax.annotation.Nullable
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public GetClusterCredentialsMessage clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nullable
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public GetClusterCredentialsMessage durationSeconds(Integer durationSeconds) {
    this.durationSeconds = durationSeconds;
    return this;
  }

  /**
   * Get durationSeconds
   * @return durationSeconds
   */
  @javax.annotation.Nullable
  public Integer getDurationSeconds() {
    return durationSeconds;
  }

  public void setDurationSeconds(Integer durationSeconds) {
    this.durationSeconds = durationSeconds;
  }


  public GetClusterCredentialsMessage autoCreate(Boolean autoCreate) {
    this.autoCreate = autoCreate;
    return this;
  }

  /**
   * Get autoCreate
   * @return autoCreate
   */
  @javax.annotation.Nullable
  public Boolean getAutoCreate() {
    return autoCreate;
  }

  public void setAutoCreate(Boolean autoCreate) {
    this.autoCreate = autoCreate;
  }


  public GetClusterCredentialsMessage dbGroups(List dbGroups) {
    this.dbGroups = dbGroups;
    return this;
  }

  /**
   * Get dbGroups
   * @return dbGroups
   */
  @javax.annotation.Nullable
  public List getDbGroups() {
    return dbGroups;
  }

  public void setDbGroups(List dbGroups) {
    this.dbGroups = dbGroups;
  }


  public GetClusterCredentialsMessage customDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
    return this;
  }

  /**
   * Get customDomainName
   * @return customDomainName
   */
  @javax.annotation.Nullable
  public String getCustomDomainName() {
    return customDomainName;
  }

  public void setCustomDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetClusterCredentialsMessage getClusterCredentialsMessage = (GetClusterCredentialsMessage) o;
    return Objects.equals(this.dbUser, getClusterCredentialsMessage.dbUser) &&
        Objects.equals(this.dbName, getClusterCredentialsMessage.dbName) &&
        Objects.equals(this.clusterIdentifier, getClusterCredentialsMessage.clusterIdentifier) &&
        Objects.equals(this.durationSeconds, getClusterCredentialsMessage.durationSeconds) &&
        Objects.equals(this.autoCreate, getClusterCredentialsMessage.autoCreate) &&
        Objects.equals(this.dbGroups, getClusterCredentialsMessage.dbGroups) &&
        Objects.equals(this.customDomainName, getClusterCredentialsMessage.customDomainName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbUser, dbName, clusterIdentifier, durationSeconds, autoCreate, dbGroups, customDomainName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetClusterCredentialsMessage {\n");
    sb.append("    dbUser: ").append(toIndentedString(dbUser)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    durationSeconds: ").append(toIndentedString(durationSeconds)).append("\n");
    sb.append("    autoCreate: ").append(toIndentedString(autoCreate)).append("\n");
    sb.append("    dbGroups: ").append(toIndentedString(dbGroups)).append("\n");
    sb.append("    customDomainName: ").append(toIndentedString(customDomainName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DbUser");
    openapiFields.add("DbName");
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("DurationSeconds");
    openapiFields.add("AutoCreate");
    openapiFields.add("DbGroups");
    openapiFields.add("CustomDomainName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DbUser");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetClusterCredentialsMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetClusterCredentialsMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetClusterCredentialsMessage is not found in the empty JSON string", GetClusterCredentialsMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetClusterCredentialsMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetClusterCredentialsMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetClusterCredentialsMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DbUser`
      String.validateJsonElement(jsonObj.get("DbUser"));
      // validate the optional field `DbName`
      if (jsonObj.get("DbName") != null && !jsonObj.get("DbName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DbName"));
      }
      // validate the optional field `ClusterIdentifier`
      if (jsonObj.get("ClusterIdentifier") != null && !jsonObj.get("ClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      }
      // validate the optional field `DurationSeconds`
      if (jsonObj.get("DurationSeconds") != null && !jsonObj.get("DurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DurationSeconds"));
      }
      // validate the optional field `AutoCreate`
      if (jsonObj.get("AutoCreate") != null && !jsonObj.get("AutoCreate").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoCreate"));
      }
      // validate the optional field `DbGroups`
      if (jsonObj.get("DbGroups") != null && !jsonObj.get("DbGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DbGroups"));
      }
      // validate the optional field `CustomDomainName`
      if (jsonObj.get("CustomDomainName") != null && !jsonObj.get("CustomDomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomDomainName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetClusterCredentialsMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetClusterCredentialsMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetClusterCredentialsMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetClusterCredentialsMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<GetClusterCredentialsMessage>() {
           @Override
           public void write(JsonWriter out, GetClusterCredentialsMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetClusterCredentialsMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetClusterCredentialsMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetClusterCredentialsMessage
   * @throws IOException if the JSON string is invalid with respect to GetClusterCredentialsMessage
   */
  public static GetClusterCredentialsMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetClusterCredentialsMessage.class);
  }

  /**
   * Convert an instance of GetClusterCredentialsMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

