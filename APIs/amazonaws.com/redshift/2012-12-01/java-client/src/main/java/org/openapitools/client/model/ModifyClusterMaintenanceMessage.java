/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModifyClusterMaintenanceMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyClusterMaintenanceMessage {
  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_DEFER_MAINTENANCE = "DeferMaintenance";
  @SerializedName(SERIALIZED_NAME_DEFER_MAINTENANCE)
  private Boolean deferMaintenance;

  public static final String SERIALIZED_NAME_DEFER_MAINTENANCE_IDENTIFIER = "DeferMaintenanceIdentifier";
  @SerializedName(SERIALIZED_NAME_DEFER_MAINTENANCE_IDENTIFIER)
  private String deferMaintenanceIdentifier;

  public static final String SERIALIZED_NAME_DEFER_MAINTENANCE_START_TIME = "DeferMaintenanceStartTime";
  @SerializedName(SERIALIZED_NAME_DEFER_MAINTENANCE_START_TIME)
  private OffsetDateTime deferMaintenanceStartTime;

  public static final String SERIALIZED_NAME_DEFER_MAINTENANCE_END_TIME = "DeferMaintenanceEndTime";
  @SerializedName(SERIALIZED_NAME_DEFER_MAINTENANCE_END_TIME)
  private OffsetDateTime deferMaintenanceEndTime;

  public static final String SERIALIZED_NAME_DEFER_MAINTENANCE_DURATION = "DeferMaintenanceDuration";
  @SerializedName(SERIALIZED_NAME_DEFER_MAINTENANCE_DURATION)
  private Integer deferMaintenanceDuration;

  public ModifyClusterMaintenanceMessage() {
  }

  public ModifyClusterMaintenanceMessage clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nonnull
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public ModifyClusterMaintenanceMessage deferMaintenance(Boolean deferMaintenance) {
    this.deferMaintenance = deferMaintenance;
    return this;
  }

  /**
   * Get deferMaintenance
   * @return deferMaintenance
   */
  @javax.annotation.Nullable
  public Boolean getDeferMaintenance() {
    return deferMaintenance;
  }

  public void setDeferMaintenance(Boolean deferMaintenance) {
    this.deferMaintenance = deferMaintenance;
  }


  public ModifyClusterMaintenanceMessage deferMaintenanceIdentifier(String deferMaintenanceIdentifier) {
    this.deferMaintenanceIdentifier = deferMaintenanceIdentifier;
    return this;
  }

  /**
   * Get deferMaintenanceIdentifier
   * @return deferMaintenanceIdentifier
   */
  @javax.annotation.Nullable
  public String getDeferMaintenanceIdentifier() {
    return deferMaintenanceIdentifier;
  }

  public void setDeferMaintenanceIdentifier(String deferMaintenanceIdentifier) {
    this.deferMaintenanceIdentifier = deferMaintenanceIdentifier;
  }


  public ModifyClusterMaintenanceMessage deferMaintenanceStartTime(OffsetDateTime deferMaintenanceStartTime) {
    this.deferMaintenanceStartTime = deferMaintenanceStartTime;
    return this;
  }

  /**
   * Get deferMaintenanceStartTime
   * @return deferMaintenanceStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeferMaintenanceStartTime() {
    return deferMaintenanceStartTime;
  }

  public void setDeferMaintenanceStartTime(OffsetDateTime deferMaintenanceStartTime) {
    this.deferMaintenanceStartTime = deferMaintenanceStartTime;
  }


  public ModifyClusterMaintenanceMessage deferMaintenanceEndTime(OffsetDateTime deferMaintenanceEndTime) {
    this.deferMaintenanceEndTime = deferMaintenanceEndTime;
    return this;
  }

  /**
   * Get deferMaintenanceEndTime
   * @return deferMaintenanceEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeferMaintenanceEndTime() {
    return deferMaintenanceEndTime;
  }

  public void setDeferMaintenanceEndTime(OffsetDateTime deferMaintenanceEndTime) {
    this.deferMaintenanceEndTime = deferMaintenanceEndTime;
  }


  public ModifyClusterMaintenanceMessage deferMaintenanceDuration(Integer deferMaintenanceDuration) {
    this.deferMaintenanceDuration = deferMaintenanceDuration;
    return this;
  }

  /**
   * Get deferMaintenanceDuration
   * @return deferMaintenanceDuration
   */
  @javax.annotation.Nullable
  public Integer getDeferMaintenanceDuration() {
    return deferMaintenanceDuration;
  }

  public void setDeferMaintenanceDuration(Integer deferMaintenanceDuration) {
    this.deferMaintenanceDuration = deferMaintenanceDuration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyClusterMaintenanceMessage modifyClusterMaintenanceMessage = (ModifyClusterMaintenanceMessage) o;
    return Objects.equals(this.clusterIdentifier, modifyClusterMaintenanceMessage.clusterIdentifier) &&
        Objects.equals(this.deferMaintenance, modifyClusterMaintenanceMessage.deferMaintenance) &&
        Objects.equals(this.deferMaintenanceIdentifier, modifyClusterMaintenanceMessage.deferMaintenanceIdentifier) &&
        Objects.equals(this.deferMaintenanceStartTime, modifyClusterMaintenanceMessage.deferMaintenanceStartTime) &&
        Objects.equals(this.deferMaintenanceEndTime, modifyClusterMaintenanceMessage.deferMaintenanceEndTime) &&
        Objects.equals(this.deferMaintenanceDuration, modifyClusterMaintenanceMessage.deferMaintenanceDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterIdentifier, deferMaintenance, deferMaintenanceIdentifier, deferMaintenanceStartTime, deferMaintenanceEndTime, deferMaintenanceDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyClusterMaintenanceMessage {\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    deferMaintenance: ").append(toIndentedString(deferMaintenance)).append("\n");
    sb.append("    deferMaintenanceIdentifier: ").append(toIndentedString(deferMaintenanceIdentifier)).append("\n");
    sb.append("    deferMaintenanceStartTime: ").append(toIndentedString(deferMaintenanceStartTime)).append("\n");
    sb.append("    deferMaintenanceEndTime: ").append(toIndentedString(deferMaintenanceEndTime)).append("\n");
    sb.append("    deferMaintenanceDuration: ").append(toIndentedString(deferMaintenanceDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("DeferMaintenance");
    openapiFields.add("DeferMaintenanceIdentifier");
    openapiFields.add("DeferMaintenanceStartTime");
    openapiFields.add("DeferMaintenanceEndTime");
    openapiFields.add("DeferMaintenanceDuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ClusterIdentifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyClusterMaintenanceMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyClusterMaintenanceMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyClusterMaintenanceMessage is not found in the empty JSON string", ModifyClusterMaintenanceMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyClusterMaintenanceMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyClusterMaintenanceMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyClusterMaintenanceMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ClusterIdentifier`
      String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      // validate the optional field `DeferMaintenance`
      if (jsonObj.get("DeferMaintenance") != null && !jsonObj.get("DeferMaintenance").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeferMaintenance"));
      }
      // validate the optional field `DeferMaintenanceIdentifier`
      if (jsonObj.get("DeferMaintenanceIdentifier") != null && !jsonObj.get("DeferMaintenanceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeferMaintenanceIdentifier"));
      }
      // validate the optional field `DeferMaintenanceStartTime`
      if (jsonObj.get("DeferMaintenanceStartTime") != null && !jsonObj.get("DeferMaintenanceStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DeferMaintenanceStartTime"));
      }
      // validate the optional field `DeferMaintenanceEndTime`
      if (jsonObj.get("DeferMaintenanceEndTime") != null && !jsonObj.get("DeferMaintenanceEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("DeferMaintenanceEndTime"));
      }
      // validate the optional field `DeferMaintenanceDuration`
      if (jsonObj.get("DeferMaintenanceDuration") != null && !jsonObj.get("DeferMaintenanceDuration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DeferMaintenanceDuration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyClusterMaintenanceMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyClusterMaintenanceMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyClusterMaintenanceMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyClusterMaintenanceMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyClusterMaintenanceMessage>() {
           @Override
           public void write(JsonWriter out, ModifyClusterMaintenanceMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyClusterMaintenanceMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyClusterMaintenanceMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyClusterMaintenanceMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyClusterMaintenanceMessage
   */
  public static ModifyClusterMaintenanceMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyClusterMaintenanceMessage.class);
  }

  /**
   * Convert an instance of ModifyClusterMaintenanceMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

