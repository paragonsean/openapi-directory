/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModifyScheduledActionMessageTargetAction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModifyScheduledActionMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyScheduledActionMessage {
  public static final String SERIALIZED_NAME_SCHEDULED_ACTION_NAME = "ScheduledActionName";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ACTION_NAME)
  private String scheduledActionName;

  public static final String SERIALIZED_NAME_TARGET_ACTION = "TargetAction";
  @SerializedName(SERIALIZED_NAME_TARGET_ACTION)
  private ModifyScheduledActionMessageTargetAction targetAction;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_IAM_ROLE = "IamRole";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE)
  private String iamRole;

  public static final String SERIALIZED_NAME_SCHEDULED_ACTION_DESCRIPTION = "ScheduledActionDescription";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ACTION_DESCRIPTION)
  private String scheduledActionDescription;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ENABLE = "Enable";
  @SerializedName(SERIALIZED_NAME_ENABLE)
  private Boolean enable;

  public ModifyScheduledActionMessage() {
  }

  public ModifyScheduledActionMessage scheduledActionName(String scheduledActionName) {
    this.scheduledActionName = scheduledActionName;
    return this;
  }

  /**
   * Get scheduledActionName
   * @return scheduledActionName
   */
  @javax.annotation.Nonnull
  public String getScheduledActionName() {
    return scheduledActionName;
  }

  public void setScheduledActionName(String scheduledActionName) {
    this.scheduledActionName = scheduledActionName;
  }


  public ModifyScheduledActionMessage targetAction(ModifyScheduledActionMessageTargetAction targetAction) {
    this.targetAction = targetAction;
    return this;
  }

  /**
   * Get targetAction
   * @return targetAction
   */
  @javax.annotation.Nullable
  public ModifyScheduledActionMessageTargetAction getTargetAction() {
    return targetAction;
  }

  public void setTargetAction(ModifyScheduledActionMessageTargetAction targetAction) {
    this.targetAction = targetAction;
  }


  public ModifyScheduledActionMessage schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public ModifyScheduledActionMessage iamRole(String iamRole) {
    this.iamRole = iamRole;
    return this;
  }

  /**
   * Get iamRole
   * @return iamRole
   */
  @javax.annotation.Nullable
  public String getIamRole() {
    return iamRole;
  }

  public void setIamRole(String iamRole) {
    this.iamRole = iamRole;
  }


  public ModifyScheduledActionMessage scheduledActionDescription(String scheduledActionDescription) {
    this.scheduledActionDescription = scheduledActionDescription;
    return this;
  }

  /**
   * Get scheduledActionDescription
   * @return scheduledActionDescription
   */
  @javax.annotation.Nullable
  public String getScheduledActionDescription() {
    return scheduledActionDescription;
  }

  public void setScheduledActionDescription(String scheduledActionDescription) {
    this.scheduledActionDescription = scheduledActionDescription;
  }


  public ModifyScheduledActionMessage startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ModifyScheduledActionMessage endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public ModifyScheduledActionMessage enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

  /**
   * Get enable
   * @return enable
   */
  @javax.annotation.Nullable
  public Boolean getEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyScheduledActionMessage modifyScheduledActionMessage = (ModifyScheduledActionMessage) o;
    return Objects.equals(this.scheduledActionName, modifyScheduledActionMessage.scheduledActionName) &&
        Objects.equals(this.targetAction, modifyScheduledActionMessage.targetAction) &&
        Objects.equals(this.schedule, modifyScheduledActionMessage.schedule) &&
        Objects.equals(this.iamRole, modifyScheduledActionMessage.iamRole) &&
        Objects.equals(this.scheduledActionDescription, modifyScheduledActionMessage.scheduledActionDescription) &&
        Objects.equals(this.startTime, modifyScheduledActionMessage.startTime) &&
        Objects.equals(this.endTime, modifyScheduledActionMessage.endTime) &&
        Objects.equals(this.enable, modifyScheduledActionMessage.enable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduledActionName, targetAction, schedule, iamRole, scheduledActionDescription, startTime, endTime, enable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyScheduledActionMessage {\n");
    sb.append("    scheduledActionName: ").append(toIndentedString(scheduledActionName)).append("\n");
    sb.append("    targetAction: ").append(toIndentedString(targetAction)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    scheduledActionDescription: ").append(toIndentedString(scheduledActionDescription)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ScheduledActionName");
    openapiFields.add("TargetAction");
    openapiFields.add("Schedule");
    openapiFields.add("IamRole");
    openapiFields.add("ScheduledActionDescription");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("Enable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ScheduledActionName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyScheduledActionMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyScheduledActionMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyScheduledActionMessage is not found in the empty JSON string", ModifyScheduledActionMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyScheduledActionMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyScheduledActionMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyScheduledActionMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ScheduledActionName`
      String.validateJsonElement(jsonObj.get("ScheduledActionName"));
      // validate the optional field `TargetAction`
      if (jsonObj.get("TargetAction") != null && !jsonObj.get("TargetAction").isJsonNull()) {
        ModifyScheduledActionMessageTargetAction.validateJsonElement(jsonObj.get("TargetAction"));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Schedule"));
      }
      // validate the optional field `IamRole`
      if (jsonObj.get("IamRole") != null && !jsonObj.get("IamRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRole"));
      }
      // validate the optional field `ScheduledActionDescription`
      if (jsonObj.get("ScheduledActionDescription") != null && !jsonObj.get("ScheduledActionDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduledActionDescription"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `Enable`
      if (jsonObj.get("Enable") != null && !jsonObj.get("Enable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enable"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyScheduledActionMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyScheduledActionMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyScheduledActionMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyScheduledActionMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyScheduledActionMessage>() {
           @Override
           public void write(JsonWriter out, ModifyScheduledActionMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyScheduledActionMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyScheduledActionMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyScheduledActionMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyScheduledActionMessage
   */
  public static ModifyScheduledActionMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyScheduledActionMessage.class);
  }

  /**
   * Convert an instance of ModifyScheduledActionMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

