/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes cluster attributes that are in a pending state. A change to one or more the attributes was requested and is in progress or will be applied.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PendingModifiedValues {
  public static final String SERIALIZED_NAME_MASTER_USER_PASSWORD = "MasterUserPassword";
  @SerializedName(SERIALIZED_NAME_MASTER_USER_PASSWORD)
  private String masterUserPassword;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_NUMBER_OF_NODES = "NumberOfNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NODES)
  private Integer numberOfNodes;

  public static final String SERIALIZED_NAME_CLUSTER_TYPE = "ClusterType";
  @SerializedName(SERIALIZED_NAME_CLUSTER_TYPE)
  private String clusterType;

  public static final String SERIALIZED_NAME_CLUSTER_VERSION = "ClusterVersion";
  @SerializedName(SERIALIZED_NAME_CLUSTER_VERSION)
  private String clusterVersion;

  public static final String SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD = "AutomatedSnapshotRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD)
  private Integer automatedSnapshotRetentionPeriod;

  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_ENHANCED_VPC_ROUTING = "EnhancedVpcRouting";
  @SerializedName(SERIALIZED_NAME_ENHANCED_VPC_ROUTING)
  private Boolean enhancedVpcRouting;

  public static final String SERIALIZED_NAME_MAINTENANCE_TRACK_NAME = "MaintenanceTrackName";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_TRACK_NAME)
  private String maintenanceTrackName;

  public static final String SERIALIZED_NAME_ENCRYPTION_TYPE = "EncryptionType";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_TYPE)
  private String encryptionType;

  public PendingModifiedValues() {
  }

  public PendingModifiedValues masterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
    return this;
  }

  /**
   * Get masterUserPassword
   * @return masterUserPassword
   */
  @javax.annotation.Nullable
  public String getMasterUserPassword() {
    return masterUserPassword;
  }

  public void setMasterUserPassword(String masterUserPassword) {
    this.masterUserPassword = masterUserPassword;
  }


  public PendingModifiedValues nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nullable
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public PendingModifiedValues numberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
    return this;
  }

  /**
   * Get numberOfNodes
   * @return numberOfNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfNodes() {
    return numberOfNodes;
  }

  public void setNumberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
  }


  public PendingModifiedValues clusterType(String clusterType) {
    this.clusterType = clusterType;
    return this;
  }

  /**
   * Get clusterType
   * @return clusterType
   */
  @javax.annotation.Nullable
  public String getClusterType() {
    return clusterType;
  }

  public void setClusterType(String clusterType) {
    this.clusterType = clusterType;
  }


  public PendingModifiedValues clusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
    return this;
  }

  /**
   * Get clusterVersion
   * @return clusterVersion
   */
  @javax.annotation.Nullable
  public String getClusterVersion() {
    return clusterVersion;
  }

  public void setClusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
  }


  public PendingModifiedValues automatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
    return this;
  }

  /**
   * Get automatedSnapshotRetentionPeriod
   * @return automatedSnapshotRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getAutomatedSnapshotRetentionPeriod() {
    return automatedSnapshotRetentionPeriod;
  }

  public void setAutomatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
  }


  public PendingModifiedValues clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nullable
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public PendingModifiedValues publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public PendingModifiedValues enhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
    return this;
  }

  /**
   * Get enhancedVpcRouting
   * @return enhancedVpcRouting
   */
  @javax.annotation.Nullable
  public Boolean getEnhancedVpcRouting() {
    return enhancedVpcRouting;
  }

  public void setEnhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
  }


  public PendingModifiedValues maintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
    return this;
  }

  /**
   * Get maintenanceTrackName
   * @return maintenanceTrackName
   */
  @javax.annotation.Nullable
  public String getMaintenanceTrackName() {
    return maintenanceTrackName;
  }

  public void setMaintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
  }


  public PendingModifiedValues encryptionType(String encryptionType) {
    this.encryptionType = encryptionType;
    return this;
  }

  /**
   * Get encryptionType
   * @return encryptionType
   */
  @javax.annotation.Nullable
  public String getEncryptionType() {
    return encryptionType;
  }

  public void setEncryptionType(String encryptionType) {
    this.encryptionType = encryptionType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingModifiedValues pendingModifiedValues = (PendingModifiedValues) o;
    return Objects.equals(this.masterUserPassword, pendingModifiedValues.masterUserPassword) &&
        Objects.equals(this.nodeType, pendingModifiedValues.nodeType) &&
        Objects.equals(this.numberOfNodes, pendingModifiedValues.numberOfNodes) &&
        Objects.equals(this.clusterType, pendingModifiedValues.clusterType) &&
        Objects.equals(this.clusterVersion, pendingModifiedValues.clusterVersion) &&
        Objects.equals(this.automatedSnapshotRetentionPeriod, pendingModifiedValues.automatedSnapshotRetentionPeriod) &&
        Objects.equals(this.clusterIdentifier, pendingModifiedValues.clusterIdentifier) &&
        Objects.equals(this.publiclyAccessible, pendingModifiedValues.publiclyAccessible) &&
        Objects.equals(this.enhancedVpcRouting, pendingModifiedValues.enhancedVpcRouting) &&
        Objects.equals(this.maintenanceTrackName, pendingModifiedValues.maintenanceTrackName) &&
        Objects.equals(this.encryptionType, pendingModifiedValues.encryptionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(masterUserPassword, nodeType, numberOfNodes, clusterType, clusterVersion, automatedSnapshotRetentionPeriod, clusterIdentifier, publiclyAccessible, enhancedVpcRouting, maintenanceTrackName, encryptionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingModifiedValues {\n");
    sb.append("    masterUserPassword: ").append(toIndentedString(masterUserPassword)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    numberOfNodes: ").append(toIndentedString(numberOfNodes)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("    clusterVersion: ").append(toIndentedString(clusterVersion)).append("\n");
    sb.append("    automatedSnapshotRetentionPeriod: ").append(toIndentedString(automatedSnapshotRetentionPeriod)).append("\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    enhancedVpcRouting: ").append(toIndentedString(enhancedVpcRouting)).append("\n");
    sb.append("    maintenanceTrackName: ").append(toIndentedString(maintenanceTrackName)).append("\n");
    sb.append("    encryptionType: ").append(toIndentedString(encryptionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MasterUserPassword");
    openapiFields.add("NodeType");
    openapiFields.add("NumberOfNodes");
    openapiFields.add("ClusterType");
    openapiFields.add("ClusterVersion");
    openapiFields.add("AutomatedSnapshotRetentionPeriod");
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("PubliclyAccessible");
    openapiFields.add("EnhancedVpcRouting");
    openapiFields.add("MaintenanceTrackName");
    openapiFields.add("EncryptionType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PendingModifiedValues
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PendingModifiedValues.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PendingModifiedValues is not found in the empty JSON string", PendingModifiedValues.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PendingModifiedValues.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PendingModifiedValues` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MasterUserPassword`
      if (jsonObj.get("MasterUserPassword") != null && !jsonObj.get("MasterUserPassword").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUserPassword"));
      }
      // validate the optional field `NodeType`
      if (jsonObj.get("NodeType") != null && !jsonObj.get("NodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodeType"));
      }
      // validate the optional field `NumberOfNodes`
      if (jsonObj.get("NumberOfNodes") != null && !jsonObj.get("NumberOfNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfNodes"));
      }
      // validate the optional field `ClusterType`
      if (jsonObj.get("ClusterType") != null && !jsonObj.get("ClusterType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterType"));
      }
      // validate the optional field `ClusterVersion`
      if (jsonObj.get("ClusterVersion") != null && !jsonObj.get("ClusterVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterVersion"));
      }
      // validate the optional field `AutomatedSnapshotRetentionPeriod`
      if (jsonObj.get("AutomatedSnapshotRetentionPeriod") != null && !jsonObj.get("AutomatedSnapshotRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutomatedSnapshotRetentionPeriod"));
      }
      // validate the optional field `ClusterIdentifier`
      if (jsonObj.get("ClusterIdentifier") != null && !jsonObj.get("ClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
      // validate the optional field `EnhancedVpcRouting`
      if (jsonObj.get("EnhancedVpcRouting") != null && !jsonObj.get("EnhancedVpcRouting").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnhancedVpcRouting"));
      }
      // validate the optional field `MaintenanceTrackName`
      if (jsonObj.get("MaintenanceTrackName") != null && !jsonObj.get("MaintenanceTrackName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceTrackName"));
      }
      // validate the optional field `EncryptionType`
      if (jsonObj.get("EncryptionType") != null && !jsonObj.get("EncryptionType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EncryptionType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PendingModifiedValues.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PendingModifiedValues' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PendingModifiedValues> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PendingModifiedValues.class));

       return (TypeAdapter<T>) new TypeAdapter<PendingModifiedValues>() {
           @Override
           public void write(JsonWriter out, PendingModifiedValues value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PendingModifiedValues read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PendingModifiedValues given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PendingModifiedValues
   * @throws IOException if the JSON string is invalid with respect to PendingModifiedValues
   */
  public static PendingModifiedValues fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PendingModifiedValues.class);
  }

  /**
   * Convert an instance of PendingModifiedValues to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

