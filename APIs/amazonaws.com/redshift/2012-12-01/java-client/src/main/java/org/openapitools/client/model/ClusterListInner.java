/*
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ClusterAquaConfiguration;
import org.openapitools.client.model.ClusterClusterSnapshotCopyStatus;
import org.openapitools.client.model.ClusterDataTransferProgress;
import org.openapitools.client.model.ClusterElasticIpStatus;
import org.openapitools.client.model.ClusterEndpoint;
import org.openapitools.client.model.ClusterHsmStatus;
import org.openapitools.client.model.ClusterPendingModifiedValues;
import org.openapitools.client.model.ClusterReservedNodeExchangeStatus;
import org.openapitools.client.model.ClusterResizeInfo;
import org.openapitools.client.model.ClusterRestoreStatus;
import org.openapitools.client.model.ScheduleState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClusterListInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:04:09.549948-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClusterListInner {
  public static final String SERIALIZED_NAME_CLUSTER_IDENTIFIER = "ClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_CLUSTER_IDENTIFIER)
  private String clusterIdentifier;

  public static final String SERIALIZED_NAME_NODE_TYPE = "NodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private String nodeType;

  public static final String SERIALIZED_NAME_CLUSTER_STATUS = "ClusterStatus";
  @SerializedName(SERIALIZED_NAME_CLUSTER_STATUS)
  private String clusterStatus;

  public static final String SERIALIZED_NAME_CLUSTER_AVAILABILITY_STATUS = "ClusterAvailabilityStatus";
  @SerializedName(SERIALIZED_NAME_CLUSTER_AVAILABILITY_STATUS)
  private String clusterAvailabilityStatus;

  public static final String SERIALIZED_NAME_MODIFY_STATUS = "ModifyStatus";
  @SerializedName(SERIALIZED_NAME_MODIFY_STATUS)
  private String modifyStatus;

  public static final String SERIALIZED_NAME_MASTER_USERNAME = "MasterUsername";
  @SerializedName(SERIALIZED_NAME_MASTER_USERNAME)
  private String masterUsername;

  public static final String SERIALIZED_NAME_DB_NAME = "DBName";
  @SerializedName(SERIALIZED_NAME_DB_NAME)
  private String dbName;

  public static final String SERIALIZED_NAME_ENDPOINT = "Endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private ClusterEndpoint endpoint;

  public static final String SERIALIZED_NAME_CLUSTER_CREATE_TIME = "ClusterCreateTime";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CREATE_TIME)
  private OffsetDateTime clusterCreateTime;

  public static final String SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD = "AutomatedSnapshotRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_AUTOMATED_SNAPSHOT_RETENTION_PERIOD)
  private Integer automatedSnapshotRetentionPeriod;

  public static final String SERIALIZED_NAME_MANUAL_SNAPSHOT_RETENTION_PERIOD = "ManualSnapshotRetentionPeriod";
  @SerializedName(SERIALIZED_NAME_MANUAL_SNAPSHOT_RETENTION_PERIOD)
  private Integer manualSnapshotRetentionPeriod;

  public static final String SERIALIZED_NAME_CLUSTER_SECURITY_GROUPS = "ClusterSecurityGroups";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SECURITY_GROUPS)
  private List clusterSecurityGroups;

  public static final String SERIALIZED_NAME_VPC_SECURITY_GROUPS = "VpcSecurityGroups";
  @SerializedName(SERIALIZED_NAME_VPC_SECURITY_GROUPS)
  private List vpcSecurityGroups;

  public static final String SERIALIZED_NAME_CLUSTER_PARAMETER_GROUPS = "ClusterParameterGroups";
  @SerializedName(SERIALIZED_NAME_CLUSTER_PARAMETER_GROUPS)
  private List clusterParameterGroups;

  public static final String SERIALIZED_NAME_CLUSTER_SUBNET_GROUP_NAME = "ClusterSubnetGroupName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SUBNET_GROUP_NAME)
  private String clusterSubnetGroupName;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_PENDING_MODIFIED_VALUES = "PendingModifiedValues";
  @SerializedName(SERIALIZED_NAME_PENDING_MODIFIED_VALUES)
  private ClusterPendingModifiedValues pendingModifiedValues;

  public static final String SERIALIZED_NAME_CLUSTER_VERSION = "ClusterVersion";
  @SerializedName(SERIALIZED_NAME_CLUSTER_VERSION)
  private String clusterVersion;

  public static final String SERIALIZED_NAME_ALLOW_VERSION_UPGRADE = "AllowVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_ALLOW_VERSION_UPGRADE)
  private Boolean allowVersionUpgrade;

  public static final String SERIALIZED_NAME_NUMBER_OF_NODES = "NumberOfNodes";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_NODES)
  private Integer numberOfNodes;

  public static final String SERIALIZED_NAME_PUBLICLY_ACCESSIBLE = "PubliclyAccessible";
  @SerializedName(SERIALIZED_NAME_PUBLICLY_ACCESSIBLE)
  private Boolean publiclyAccessible;

  public static final String SERIALIZED_NAME_ENCRYPTED = "Encrypted";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED)
  private Boolean encrypted;

  public static final String SERIALIZED_NAME_RESTORE_STATUS = "RestoreStatus";
  @SerializedName(SERIALIZED_NAME_RESTORE_STATUS)
  private ClusterRestoreStatus restoreStatus;

  public static final String SERIALIZED_NAME_DATA_TRANSFER_PROGRESS = "DataTransferProgress";
  @SerializedName(SERIALIZED_NAME_DATA_TRANSFER_PROGRESS)
  private ClusterDataTransferProgress dataTransferProgress;

  public static final String SERIALIZED_NAME_HSM_STATUS = "HsmStatus";
  @SerializedName(SERIALIZED_NAME_HSM_STATUS)
  private ClusterHsmStatus hsmStatus;

  public static final String SERIALIZED_NAME_CLUSTER_SNAPSHOT_COPY_STATUS = "ClusterSnapshotCopyStatus";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SNAPSHOT_COPY_STATUS)
  private ClusterClusterSnapshotCopyStatus clusterSnapshotCopyStatus;

  public static final String SERIALIZED_NAME_CLUSTER_PUBLIC_KEY = "ClusterPublicKey";
  @SerializedName(SERIALIZED_NAME_CLUSTER_PUBLIC_KEY)
  private String clusterPublicKey;

  public static final String SERIALIZED_NAME_CLUSTER_NODES = "ClusterNodes";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NODES)
  private List clusterNodes;

  public static final String SERIALIZED_NAME_ELASTIC_IP_STATUS = "ElasticIpStatus";
  @SerializedName(SERIALIZED_NAME_ELASTIC_IP_STATUS)
  private ClusterElasticIpStatus elasticIpStatus;

  public static final String SERIALIZED_NAME_CLUSTER_REVISION_NUMBER = "ClusterRevisionNumber";
  @SerializedName(SERIALIZED_NAME_CLUSTER_REVISION_NUMBER)
  private String clusterRevisionNumber;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "KmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_ENHANCED_VPC_ROUTING = "EnhancedVpcRouting";
  @SerializedName(SERIALIZED_NAME_ENHANCED_VPC_ROUTING)
  private Boolean enhancedVpcRouting;

  public static final String SERIALIZED_NAME_IAM_ROLES = "IamRoles";
  @SerializedName(SERIALIZED_NAME_IAM_ROLES)
  private List iamRoles;

  public static final String SERIALIZED_NAME_PENDING_ACTIONS = "PendingActions";
  @SerializedName(SERIALIZED_NAME_PENDING_ACTIONS)
  private List pendingActions;

  public static final String SERIALIZED_NAME_MAINTENANCE_TRACK_NAME = "MaintenanceTrackName";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_TRACK_NAME)
  private String maintenanceTrackName;

  public static final String SERIALIZED_NAME_ELASTIC_RESIZE_NUMBER_OF_NODE_OPTIONS = "ElasticResizeNumberOfNodeOptions";
  @SerializedName(SERIALIZED_NAME_ELASTIC_RESIZE_NUMBER_OF_NODE_OPTIONS)
  private String elasticResizeNumberOfNodeOptions;

  public static final String SERIALIZED_NAME_DEFERRED_MAINTENANCE_WINDOWS = "DeferredMaintenanceWindows";
  @SerializedName(SERIALIZED_NAME_DEFERRED_MAINTENANCE_WINDOWS)
  private List deferredMaintenanceWindows;

  public static final String SERIALIZED_NAME_SNAPSHOT_SCHEDULE_IDENTIFIER = "SnapshotScheduleIdentifier";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_SCHEDULE_IDENTIFIER)
  private String snapshotScheduleIdentifier;

  public static final String SERIALIZED_NAME_SNAPSHOT_SCHEDULE_STATE = "SnapshotScheduleState";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_SCHEDULE_STATE)
  private ScheduleState snapshotScheduleState;

  public static final String SERIALIZED_NAME_EXPECTED_NEXT_SNAPSHOT_SCHEDULE_TIME = "ExpectedNextSnapshotScheduleTime";
  @SerializedName(SERIALIZED_NAME_EXPECTED_NEXT_SNAPSHOT_SCHEDULE_TIME)
  private OffsetDateTime expectedNextSnapshotScheduleTime;

  public static final String SERIALIZED_NAME_EXPECTED_NEXT_SNAPSHOT_SCHEDULE_TIME_STATUS = "ExpectedNextSnapshotScheduleTimeStatus";
  @SerializedName(SERIALIZED_NAME_EXPECTED_NEXT_SNAPSHOT_SCHEDULE_TIME_STATUS)
  private String expectedNextSnapshotScheduleTimeStatus;

  public static final String SERIALIZED_NAME_NEXT_MAINTENANCE_WINDOW_START_TIME = "NextMaintenanceWindowStartTime";
  @SerializedName(SERIALIZED_NAME_NEXT_MAINTENANCE_WINDOW_START_TIME)
  private OffsetDateTime nextMaintenanceWindowStartTime;

  public static final String SERIALIZED_NAME_RESIZE_INFO = "ResizeInfo";
  @SerializedName(SERIALIZED_NAME_RESIZE_INFO)
  private ClusterResizeInfo resizeInfo;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE_RELOCATION_STATUS = "AvailabilityZoneRelocationStatus";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE_RELOCATION_STATUS)
  private String availabilityZoneRelocationStatus;

  public static final String SERIALIZED_NAME_CLUSTER_NAMESPACE_ARN = "ClusterNamespaceArn";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAMESPACE_ARN)
  private String clusterNamespaceArn;

  public static final String SERIALIZED_NAME_TOTAL_STORAGE_CAPACITY_IN_MEGA_BYTES = "TotalStorageCapacityInMegaBytes";
  @SerializedName(SERIALIZED_NAME_TOTAL_STORAGE_CAPACITY_IN_MEGA_BYTES)
  private Integer totalStorageCapacityInMegaBytes;

  public static final String SERIALIZED_NAME_AQUA_CONFIGURATION = "AquaConfiguration";
  @SerializedName(SERIALIZED_NAME_AQUA_CONFIGURATION)
  private ClusterAquaConfiguration aquaConfiguration;

  public static final String SERIALIZED_NAME_DEFAULT_IAM_ROLE_ARN = "DefaultIamRoleArn";
  @SerializedName(SERIALIZED_NAME_DEFAULT_IAM_ROLE_ARN)
  private String defaultIamRoleArn;

  public static final String SERIALIZED_NAME_RESERVED_NODE_EXCHANGE_STATUS = "ReservedNodeExchangeStatus";
  @SerializedName(SERIALIZED_NAME_RESERVED_NODE_EXCHANGE_STATUS)
  private ClusterReservedNodeExchangeStatus reservedNodeExchangeStatus;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN_NAME = "CustomDomainName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN_NAME)
  private String customDomainName;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN_CERTIFICATE_ARN = "CustomDomainCertificateArn";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN_CERTIFICATE_ARN)
  private String customDomainCertificateArn;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAIN_CERTIFICATE_EXPIRY_DATE = "CustomDomainCertificateExpiryDate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAIN_CERTIFICATE_EXPIRY_DATE)
  private OffsetDateTime customDomainCertificateExpiryDate;

  public ClusterListInner() {
  }

  public ClusterListInner clusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
    return this;
  }

  /**
   * Get clusterIdentifier
   * @return clusterIdentifier
   */
  @javax.annotation.Nullable
  public String getClusterIdentifier() {
    return clusterIdentifier;
  }

  public void setClusterIdentifier(String clusterIdentifier) {
    this.clusterIdentifier = clusterIdentifier;
  }


  public ClusterListInner nodeType(String nodeType) {
    this.nodeType = nodeType;
    return this;
  }

  /**
   * Get nodeType
   * @return nodeType
   */
  @javax.annotation.Nullable
  public String getNodeType() {
    return nodeType;
  }

  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public ClusterListInner clusterStatus(String clusterStatus) {
    this.clusterStatus = clusterStatus;
    return this;
  }

  /**
   * Get clusterStatus
   * @return clusterStatus
   */
  @javax.annotation.Nullable
  public String getClusterStatus() {
    return clusterStatus;
  }

  public void setClusterStatus(String clusterStatus) {
    this.clusterStatus = clusterStatus;
  }


  public ClusterListInner clusterAvailabilityStatus(String clusterAvailabilityStatus) {
    this.clusterAvailabilityStatus = clusterAvailabilityStatus;
    return this;
  }

  /**
   * Get clusterAvailabilityStatus
   * @return clusterAvailabilityStatus
   */
  @javax.annotation.Nullable
  public String getClusterAvailabilityStatus() {
    return clusterAvailabilityStatus;
  }

  public void setClusterAvailabilityStatus(String clusterAvailabilityStatus) {
    this.clusterAvailabilityStatus = clusterAvailabilityStatus;
  }


  public ClusterListInner modifyStatus(String modifyStatus) {
    this.modifyStatus = modifyStatus;
    return this;
  }

  /**
   * Get modifyStatus
   * @return modifyStatus
   */
  @javax.annotation.Nullable
  public String getModifyStatus() {
    return modifyStatus;
  }

  public void setModifyStatus(String modifyStatus) {
    this.modifyStatus = modifyStatus;
  }


  public ClusterListInner masterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
    return this;
  }

  /**
   * Get masterUsername
   * @return masterUsername
   */
  @javax.annotation.Nullable
  public String getMasterUsername() {
    return masterUsername;
  }

  public void setMasterUsername(String masterUsername) {
    this.masterUsername = masterUsername;
  }


  public ClusterListInner dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

  /**
   * Get dbName
   * @return dbName
   */
  @javax.annotation.Nullable
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public ClusterListInner endpoint(ClusterEndpoint endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public ClusterEndpoint getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(ClusterEndpoint endpoint) {
    this.endpoint = endpoint;
  }


  public ClusterListInner clusterCreateTime(OffsetDateTime clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
    return this;
  }

  /**
   * Get clusterCreateTime
   * @return clusterCreateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getClusterCreateTime() {
    return clusterCreateTime;
  }

  public void setClusterCreateTime(OffsetDateTime clusterCreateTime) {
    this.clusterCreateTime = clusterCreateTime;
  }


  public ClusterListInner automatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
    return this;
  }

  /**
   * Get automatedSnapshotRetentionPeriod
   * @return automatedSnapshotRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getAutomatedSnapshotRetentionPeriod() {
    return automatedSnapshotRetentionPeriod;
  }

  public void setAutomatedSnapshotRetentionPeriod(Integer automatedSnapshotRetentionPeriod) {
    this.automatedSnapshotRetentionPeriod = automatedSnapshotRetentionPeriod;
  }


  public ClusterListInner manualSnapshotRetentionPeriod(Integer manualSnapshotRetentionPeriod) {
    this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
    return this;
  }

  /**
   * Get manualSnapshotRetentionPeriod
   * @return manualSnapshotRetentionPeriod
   */
  @javax.annotation.Nullable
  public Integer getManualSnapshotRetentionPeriod() {
    return manualSnapshotRetentionPeriod;
  }

  public void setManualSnapshotRetentionPeriod(Integer manualSnapshotRetentionPeriod) {
    this.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod;
  }


  public ClusterListInner clusterSecurityGroups(List clusterSecurityGroups) {
    this.clusterSecurityGroups = clusterSecurityGroups;
    return this;
  }

  /**
   * Get clusterSecurityGroups
   * @return clusterSecurityGroups
   */
  @javax.annotation.Nullable
  public List getClusterSecurityGroups() {
    return clusterSecurityGroups;
  }

  public void setClusterSecurityGroups(List clusterSecurityGroups) {
    this.clusterSecurityGroups = clusterSecurityGroups;
  }


  public ClusterListInner vpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
    return this;
  }

  /**
   * Get vpcSecurityGroups
   * @return vpcSecurityGroups
   */
  @javax.annotation.Nullable
  public List getVpcSecurityGroups() {
    return vpcSecurityGroups;
  }

  public void setVpcSecurityGroups(List vpcSecurityGroups) {
    this.vpcSecurityGroups = vpcSecurityGroups;
  }


  public ClusterListInner clusterParameterGroups(List clusterParameterGroups) {
    this.clusterParameterGroups = clusterParameterGroups;
    return this;
  }

  /**
   * Get clusterParameterGroups
   * @return clusterParameterGroups
   */
  @javax.annotation.Nullable
  public List getClusterParameterGroups() {
    return clusterParameterGroups;
  }

  public void setClusterParameterGroups(List clusterParameterGroups) {
    this.clusterParameterGroups = clusterParameterGroups;
  }


  public ClusterListInner clusterSubnetGroupName(String clusterSubnetGroupName) {
    this.clusterSubnetGroupName = clusterSubnetGroupName;
    return this;
  }

  /**
   * Get clusterSubnetGroupName
   * @return clusterSubnetGroupName
   */
  @javax.annotation.Nullable
  public String getClusterSubnetGroupName() {
    return clusterSubnetGroupName;
  }

  public void setClusterSubnetGroupName(String clusterSubnetGroupName) {
    this.clusterSubnetGroupName = clusterSubnetGroupName;
  }


  public ClusterListInner vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public ClusterListInner availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public ClusterListInner preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public ClusterListInner pendingModifiedValues(ClusterPendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
    return this;
  }

  /**
   * Get pendingModifiedValues
   * @return pendingModifiedValues
   */
  @javax.annotation.Nullable
  public ClusterPendingModifiedValues getPendingModifiedValues() {
    return pendingModifiedValues;
  }

  public void setPendingModifiedValues(ClusterPendingModifiedValues pendingModifiedValues) {
    this.pendingModifiedValues = pendingModifiedValues;
  }


  public ClusterListInner clusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
    return this;
  }

  /**
   * Get clusterVersion
   * @return clusterVersion
   */
  @javax.annotation.Nullable
  public String getClusterVersion() {
    return clusterVersion;
  }

  public void setClusterVersion(String clusterVersion) {
    this.clusterVersion = clusterVersion;
  }


  public ClusterListInner allowVersionUpgrade(Boolean allowVersionUpgrade) {
    this.allowVersionUpgrade = allowVersionUpgrade;
    return this;
  }

  /**
   * Get allowVersionUpgrade
   * @return allowVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAllowVersionUpgrade() {
    return allowVersionUpgrade;
  }

  public void setAllowVersionUpgrade(Boolean allowVersionUpgrade) {
    this.allowVersionUpgrade = allowVersionUpgrade;
  }


  public ClusterListInner numberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
    return this;
  }

  /**
   * Get numberOfNodes
   * @return numberOfNodes
   */
  @javax.annotation.Nullable
  public Integer getNumberOfNodes() {
    return numberOfNodes;
  }

  public void setNumberOfNodes(Integer numberOfNodes) {
    this.numberOfNodes = numberOfNodes;
  }


  public ClusterListInner publiclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
    return this;
  }

  /**
   * Get publiclyAccessible
   * @return publiclyAccessible
   */
  @javax.annotation.Nullable
  public Boolean getPubliclyAccessible() {
    return publiclyAccessible;
  }

  public void setPubliclyAccessible(Boolean publiclyAccessible) {
    this.publiclyAccessible = publiclyAccessible;
  }


  public ClusterListInner encrypted(Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

  /**
   * Get encrypted
   * @return encrypted
   */
  @javax.annotation.Nullable
  public Boolean getEncrypted() {
    return encrypted;
  }

  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }


  public ClusterListInner restoreStatus(ClusterRestoreStatus restoreStatus) {
    this.restoreStatus = restoreStatus;
    return this;
  }

  /**
   * Get restoreStatus
   * @return restoreStatus
   */
  @javax.annotation.Nullable
  public ClusterRestoreStatus getRestoreStatus() {
    return restoreStatus;
  }

  public void setRestoreStatus(ClusterRestoreStatus restoreStatus) {
    this.restoreStatus = restoreStatus;
  }


  public ClusterListInner dataTransferProgress(ClusterDataTransferProgress dataTransferProgress) {
    this.dataTransferProgress = dataTransferProgress;
    return this;
  }

  /**
   * Get dataTransferProgress
   * @return dataTransferProgress
   */
  @javax.annotation.Nullable
  public ClusterDataTransferProgress getDataTransferProgress() {
    return dataTransferProgress;
  }

  public void setDataTransferProgress(ClusterDataTransferProgress dataTransferProgress) {
    this.dataTransferProgress = dataTransferProgress;
  }


  public ClusterListInner hsmStatus(ClusterHsmStatus hsmStatus) {
    this.hsmStatus = hsmStatus;
    return this;
  }

  /**
   * Get hsmStatus
   * @return hsmStatus
   */
  @javax.annotation.Nullable
  public ClusterHsmStatus getHsmStatus() {
    return hsmStatus;
  }

  public void setHsmStatus(ClusterHsmStatus hsmStatus) {
    this.hsmStatus = hsmStatus;
  }


  public ClusterListInner clusterSnapshotCopyStatus(ClusterClusterSnapshotCopyStatus clusterSnapshotCopyStatus) {
    this.clusterSnapshotCopyStatus = clusterSnapshotCopyStatus;
    return this;
  }

  /**
   * Get clusterSnapshotCopyStatus
   * @return clusterSnapshotCopyStatus
   */
  @javax.annotation.Nullable
  public ClusterClusterSnapshotCopyStatus getClusterSnapshotCopyStatus() {
    return clusterSnapshotCopyStatus;
  }

  public void setClusterSnapshotCopyStatus(ClusterClusterSnapshotCopyStatus clusterSnapshotCopyStatus) {
    this.clusterSnapshotCopyStatus = clusterSnapshotCopyStatus;
  }


  public ClusterListInner clusterPublicKey(String clusterPublicKey) {
    this.clusterPublicKey = clusterPublicKey;
    return this;
  }

  /**
   * Get clusterPublicKey
   * @return clusterPublicKey
   */
  @javax.annotation.Nullable
  public String getClusterPublicKey() {
    return clusterPublicKey;
  }

  public void setClusterPublicKey(String clusterPublicKey) {
    this.clusterPublicKey = clusterPublicKey;
  }


  public ClusterListInner clusterNodes(List clusterNodes) {
    this.clusterNodes = clusterNodes;
    return this;
  }

  /**
   * Get clusterNodes
   * @return clusterNodes
   */
  @javax.annotation.Nullable
  public List getClusterNodes() {
    return clusterNodes;
  }

  public void setClusterNodes(List clusterNodes) {
    this.clusterNodes = clusterNodes;
  }


  public ClusterListInner elasticIpStatus(ClusterElasticIpStatus elasticIpStatus) {
    this.elasticIpStatus = elasticIpStatus;
    return this;
  }

  /**
   * Get elasticIpStatus
   * @return elasticIpStatus
   */
  @javax.annotation.Nullable
  public ClusterElasticIpStatus getElasticIpStatus() {
    return elasticIpStatus;
  }

  public void setElasticIpStatus(ClusterElasticIpStatus elasticIpStatus) {
    this.elasticIpStatus = elasticIpStatus;
  }


  public ClusterListInner clusterRevisionNumber(String clusterRevisionNumber) {
    this.clusterRevisionNumber = clusterRevisionNumber;
    return this;
  }

  /**
   * Get clusterRevisionNumber
   * @return clusterRevisionNumber
   */
  @javax.annotation.Nullable
  public String getClusterRevisionNumber() {
    return clusterRevisionNumber;
  }

  public void setClusterRevisionNumber(String clusterRevisionNumber) {
    this.clusterRevisionNumber = clusterRevisionNumber;
  }


  public ClusterListInner tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public ClusterListInner kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

  /**
   * Get kmsKeyId
   * @return kmsKeyId
   */
  @javax.annotation.Nullable
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public ClusterListInner enhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
    return this;
  }

  /**
   * Get enhancedVpcRouting
   * @return enhancedVpcRouting
   */
  @javax.annotation.Nullable
  public Boolean getEnhancedVpcRouting() {
    return enhancedVpcRouting;
  }

  public void setEnhancedVpcRouting(Boolean enhancedVpcRouting) {
    this.enhancedVpcRouting = enhancedVpcRouting;
  }


  public ClusterListInner iamRoles(List iamRoles) {
    this.iamRoles = iamRoles;
    return this;
  }

  /**
   * Get iamRoles
   * @return iamRoles
   */
  @javax.annotation.Nullable
  public List getIamRoles() {
    return iamRoles;
  }

  public void setIamRoles(List iamRoles) {
    this.iamRoles = iamRoles;
  }


  public ClusterListInner pendingActions(List pendingActions) {
    this.pendingActions = pendingActions;
    return this;
  }

  /**
   * Get pendingActions
   * @return pendingActions
   */
  @javax.annotation.Nullable
  public List getPendingActions() {
    return pendingActions;
  }

  public void setPendingActions(List pendingActions) {
    this.pendingActions = pendingActions;
  }


  public ClusterListInner maintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
    return this;
  }

  /**
   * Get maintenanceTrackName
   * @return maintenanceTrackName
   */
  @javax.annotation.Nullable
  public String getMaintenanceTrackName() {
    return maintenanceTrackName;
  }

  public void setMaintenanceTrackName(String maintenanceTrackName) {
    this.maintenanceTrackName = maintenanceTrackName;
  }


  public ClusterListInner elasticResizeNumberOfNodeOptions(String elasticResizeNumberOfNodeOptions) {
    this.elasticResizeNumberOfNodeOptions = elasticResizeNumberOfNodeOptions;
    return this;
  }

  /**
   * Get elasticResizeNumberOfNodeOptions
   * @return elasticResizeNumberOfNodeOptions
   */
  @javax.annotation.Nullable
  public String getElasticResizeNumberOfNodeOptions() {
    return elasticResizeNumberOfNodeOptions;
  }

  public void setElasticResizeNumberOfNodeOptions(String elasticResizeNumberOfNodeOptions) {
    this.elasticResizeNumberOfNodeOptions = elasticResizeNumberOfNodeOptions;
  }


  public ClusterListInner deferredMaintenanceWindows(List deferredMaintenanceWindows) {
    this.deferredMaintenanceWindows = deferredMaintenanceWindows;
    return this;
  }

  /**
   * Get deferredMaintenanceWindows
   * @return deferredMaintenanceWindows
   */
  @javax.annotation.Nullable
  public List getDeferredMaintenanceWindows() {
    return deferredMaintenanceWindows;
  }

  public void setDeferredMaintenanceWindows(List deferredMaintenanceWindows) {
    this.deferredMaintenanceWindows = deferredMaintenanceWindows;
  }


  public ClusterListInner snapshotScheduleIdentifier(String snapshotScheduleIdentifier) {
    this.snapshotScheduleIdentifier = snapshotScheduleIdentifier;
    return this;
  }

  /**
   * Get snapshotScheduleIdentifier
   * @return snapshotScheduleIdentifier
   */
  @javax.annotation.Nullable
  public String getSnapshotScheduleIdentifier() {
    return snapshotScheduleIdentifier;
  }

  public void setSnapshotScheduleIdentifier(String snapshotScheduleIdentifier) {
    this.snapshotScheduleIdentifier = snapshotScheduleIdentifier;
  }


  public ClusterListInner snapshotScheduleState(ScheduleState snapshotScheduleState) {
    this.snapshotScheduleState = snapshotScheduleState;
    return this;
  }

  /**
   * Get snapshotScheduleState
   * @return snapshotScheduleState
   */
  @javax.annotation.Nullable
  public ScheduleState getSnapshotScheduleState() {
    return snapshotScheduleState;
  }

  public void setSnapshotScheduleState(ScheduleState snapshotScheduleState) {
    this.snapshotScheduleState = snapshotScheduleState;
  }


  public ClusterListInner expectedNextSnapshotScheduleTime(OffsetDateTime expectedNextSnapshotScheduleTime) {
    this.expectedNextSnapshotScheduleTime = expectedNextSnapshotScheduleTime;
    return this;
  }

  /**
   * Get expectedNextSnapshotScheduleTime
   * @return expectedNextSnapshotScheduleTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpectedNextSnapshotScheduleTime() {
    return expectedNextSnapshotScheduleTime;
  }

  public void setExpectedNextSnapshotScheduleTime(OffsetDateTime expectedNextSnapshotScheduleTime) {
    this.expectedNextSnapshotScheduleTime = expectedNextSnapshotScheduleTime;
  }


  public ClusterListInner expectedNextSnapshotScheduleTimeStatus(String expectedNextSnapshotScheduleTimeStatus) {
    this.expectedNextSnapshotScheduleTimeStatus = expectedNextSnapshotScheduleTimeStatus;
    return this;
  }

  /**
   * Get expectedNextSnapshotScheduleTimeStatus
   * @return expectedNextSnapshotScheduleTimeStatus
   */
  @javax.annotation.Nullable
  public String getExpectedNextSnapshotScheduleTimeStatus() {
    return expectedNextSnapshotScheduleTimeStatus;
  }

  public void setExpectedNextSnapshotScheduleTimeStatus(String expectedNextSnapshotScheduleTimeStatus) {
    this.expectedNextSnapshotScheduleTimeStatus = expectedNextSnapshotScheduleTimeStatus;
  }


  public ClusterListInner nextMaintenanceWindowStartTime(OffsetDateTime nextMaintenanceWindowStartTime) {
    this.nextMaintenanceWindowStartTime = nextMaintenanceWindowStartTime;
    return this;
  }

  /**
   * Get nextMaintenanceWindowStartTime
   * @return nextMaintenanceWindowStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNextMaintenanceWindowStartTime() {
    return nextMaintenanceWindowStartTime;
  }

  public void setNextMaintenanceWindowStartTime(OffsetDateTime nextMaintenanceWindowStartTime) {
    this.nextMaintenanceWindowStartTime = nextMaintenanceWindowStartTime;
  }


  public ClusterListInner resizeInfo(ClusterResizeInfo resizeInfo) {
    this.resizeInfo = resizeInfo;
    return this;
  }

  /**
   * Get resizeInfo
   * @return resizeInfo
   */
  @javax.annotation.Nullable
  public ClusterResizeInfo getResizeInfo() {
    return resizeInfo;
  }

  public void setResizeInfo(ClusterResizeInfo resizeInfo) {
    this.resizeInfo = resizeInfo;
  }


  public ClusterListInner availabilityZoneRelocationStatus(String availabilityZoneRelocationStatus) {
    this.availabilityZoneRelocationStatus = availabilityZoneRelocationStatus;
    return this;
  }

  /**
   * Get availabilityZoneRelocationStatus
   * @return availabilityZoneRelocationStatus
   */
  @javax.annotation.Nullable
  public String getAvailabilityZoneRelocationStatus() {
    return availabilityZoneRelocationStatus;
  }

  public void setAvailabilityZoneRelocationStatus(String availabilityZoneRelocationStatus) {
    this.availabilityZoneRelocationStatus = availabilityZoneRelocationStatus;
  }


  public ClusterListInner clusterNamespaceArn(String clusterNamespaceArn) {
    this.clusterNamespaceArn = clusterNamespaceArn;
    return this;
  }

  /**
   * Get clusterNamespaceArn
   * @return clusterNamespaceArn
   */
  @javax.annotation.Nullable
  public String getClusterNamespaceArn() {
    return clusterNamespaceArn;
  }

  public void setClusterNamespaceArn(String clusterNamespaceArn) {
    this.clusterNamespaceArn = clusterNamespaceArn;
  }


  public ClusterListInner totalStorageCapacityInMegaBytes(Integer totalStorageCapacityInMegaBytes) {
    this.totalStorageCapacityInMegaBytes = totalStorageCapacityInMegaBytes;
    return this;
  }

  /**
   * Get totalStorageCapacityInMegaBytes
   * @return totalStorageCapacityInMegaBytes
   */
  @javax.annotation.Nullable
  public Integer getTotalStorageCapacityInMegaBytes() {
    return totalStorageCapacityInMegaBytes;
  }

  public void setTotalStorageCapacityInMegaBytes(Integer totalStorageCapacityInMegaBytes) {
    this.totalStorageCapacityInMegaBytes = totalStorageCapacityInMegaBytes;
  }


  public ClusterListInner aquaConfiguration(ClusterAquaConfiguration aquaConfiguration) {
    this.aquaConfiguration = aquaConfiguration;
    return this;
  }

  /**
   * Get aquaConfiguration
   * @return aquaConfiguration
   */
  @javax.annotation.Nullable
  public ClusterAquaConfiguration getAquaConfiguration() {
    return aquaConfiguration;
  }

  public void setAquaConfiguration(ClusterAquaConfiguration aquaConfiguration) {
    this.aquaConfiguration = aquaConfiguration;
  }


  public ClusterListInner defaultIamRoleArn(String defaultIamRoleArn) {
    this.defaultIamRoleArn = defaultIamRoleArn;
    return this;
  }

  /**
   * Get defaultIamRoleArn
   * @return defaultIamRoleArn
   */
  @javax.annotation.Nullable
  public String getDefaultIamRoleArn() {
    return defaultIamRoleArn;
  }

  public void setDefaultIamRoleArn(String defaultIamRoleArn) {
    this.defaultIamRoleArn = defaultIamRoleArn;
  }


  public ClusterListInner reservedNodeExchangeStatus(ClusterReservedNodeExchangeStatus reservedNodeExchangeStatus) {
    this.reservedNodeExchangeStatus = reservedNodeExchangeStatus;
    return this;
  }

  /**
   * Get reservedNodeExchangeStatus
   * @return reservedNodeExchangeStatus
   */
  @javax.annotation.Nullable
  public ClusterReservedNodeExchangeStatus getReservedNodeExchangeStatus() {
    return reservedNodeExchangeStatus;
  }

  public void setReservedNodeExchangeStatus(ClusterReservedNodeExchangeStatus reservedNodeExchangeStatus) {
    this.reservedNodeExchangeStatus = reservedNodeExchangeStatus;
  }


  public ClusterListInner customDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
    return this;
  }

  /**
   * Get customDomainName
   * @return customDomainName
   */
  @javax.annotation.Nullable
  public String getCustomDomainName() {
    return customDomainName;
  }

  public void setCustomDomainName(String customDomainName) {
    this.customDomainName = customDomainName;
  }


  public ClusterListInner customDomainCertificateArn(String customDomainCertificateArn) {
    this.customDomainCertificateArn = customDomainCertificateArn;
    return this;
  }

  /**
   * Get customDomainCertificateArn
   * @return customDomainCertificateArn
   */
  @javax.annotation.Nullable
  public String getCustomDomainCertificateArn() {
    return customDomainCertificateArn;
  }

  public void setCustomDomainCertificateArn(String customDomainCertificateArn) {
    this.customDomainCertificateArn = customDomainCertificateArn;
  }


  public ClusterListInner customDomainCertificateExpiryDate(OffsetDateTime customDomainCertificateExpiryDate) {
    this.customDomainCertificateExpiryDate = customDomainCertificateExpiryDate;
    return this;
  }

  /**
   * Get customDomainCertificateExpiryDate
   * @return customDomainCertificateExpiryDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCustomDomainCertificateExpiryDate() {
    return customDomainCertificateExpiryDate;
  }

  public void setCustomDomainCertificateExpiryDate(OffsetDateTime customDomainCertificateExpiryDate) {
    this.customDomainCertificateExpiryDate = customDomainCertificateExpiryDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterListInner clusterListInner = (ClusterListInner) o;
    return Objects.equals(this.clusterIdentifier, clusterListInner.clusterIdentifier) &&
        Objects.equals(this.nodeType, clusterListInner.nodeType) &&
        Objects.equals(this.clusterStatus, clusterListInner.clusterStatus) &&
        Objects.equals(this.clusterAvailabilityStatus, clusterListInner.clusterAvailabilityStatus) &&
        Objects.equals(this.modifyStatus, clusterListInner.modifyStatus) &&
        Objects.equals(this.masterUsername, clusterListInner.masterUsername) &&
        Objects.equals(this.dbName, clusterListInner.dbName) &&
        Objects.equals(this.endpoint, clusterListInner.endpoint) &&
        Objects.equals(this.clusterCreateTime, clusterListInner.clusterCreateTime) &&
        Objects.equals(this.automatedSnapshotRetentionPeriod, clusterListInner.automatedSnapshotRetentionPeriod) &&
        Objects.equals(this.manualSnapshotRetentionPeriod, clusterListInner.manualSnapshotRetentionPeriod) &&
        Objects.equals(this.clusterSecurityGroups, clusterListInner.clusterSecurityGroups) &&
        Objects.equals(this.vpcSecurityGroups, clusterListInner.vpcSecurityGroups) &&
        Objects.equals(this.clusterParameterGroups, clusterListInner.clusterParameterGroups) &&
        Objects.equals(this.clusterSubnetGroupName, clusterListInner.clusterSubnetGroupName) &&
        Objects.equals(this.vpcId, clusterListInner.vpcId) &&
        Objects.equals(this.availabilityZone, clusterListInner.availabilityZone) &&
        Objects.equals(this.preferredMaintenanceWindow, clusterListInner.preferredMaintenanceWindow) &&
        Objects.equals(this.pendingModifiedValues, clusterListInner.pendingModifiedValues) &&
        Objects.equals(this.clusterVersion, clusterListInner.clusterVersion) &&
        Objects.equals(this.allowVersionUpgrade, clusterListInner.allowVersionUpgrade) &&
        Objects.equals(this.numberOfNodes, clusterListInner.numberOfNodes) &&
        Objects.equals(this.publiclyAccessible, clusterListInner.publiclyAccessible) &&
        Objects.equals(this.encrypted, clusterListInner.encrypted) &&
        Objects.equals(this.restoreStatus, clusterListInner.restoreStatus) &&
        Objects.equals(this.dataTransferProgress, clusterListInner.dataTransferProgress) &&
        Objects.equals(this.hsmStatus, clusterListInner.hsmStatus) &&
        Objects.equals(this.clusterSnapshotCopyStatus, clusterListInner.clusterSnapshotCopyStatus) &&
        Objects.equals(this.clusterPublicKey, clusterListInner.clusterPublicKey) &&
        Objects.equals(this.clusterNodes, clusterListInner.clusterNodes) &&
        Objects.equals(this.elasticIpStatus, clusterListInner.elasticIpStatus) &&
        Objects.equals(this.clusterRevisionNumber, clusterListInner.clusterRevisionNumber) &&
        Objects.equals(this.tags, clusterListInner.tags) &&
        Objects.equals(this.kmsKeyId, clusterListInner.kmsKeyId) &&
        Objects.equals(this.enhancedVpcRouting, clusterListInner.enhancedVpcRouting) &&
        Objects.equals(this.iamRoles, clusterListInner.iamRoles) &&
        Objects.equals(this.pendingActions, clusterListInner.pendingActions) &&
        Objects.equals(this.maintenanceTrackName, clusterListInner.maintenanceTrackName) &&
        Objects.equals(this.elasticResizeNumberOfNodeOptions, clusterListInner.elasticResizeNumberOfNodeOptions) &&
        Objects.equals(this.deferredMaintenanceWindows, clusterListInner.deferredMaintenanceWindows) &&
        Objects.equals(this.snapshotScheduleIdentifier, clusterListInner.snapshotScheduleIdentifier) &&
        Objects.equals(this.snapshotScheduleState, clusterListInner.snapshotScheduleState) &&
        Objects.equals(this.expectedNextSnapshotScheduleTime, clusterListInner.expectedNextSnapshotScheduleTime) &&
        Objects.equals(this.expectedNextSnapshotScheduleTimeStatus, clusterListInner.expectedNextSnapshotScheduleTimeStatus) &&
        Objects.equals(this.nextMaintenanceWindowStartTime, clusterListInner.nextMaintenanceWindowStartTime) &&
        Objects.equals(this.resizeInfo, clusterListInner.resizeInfo) &&
        Objects.equals(this.availabilityZoneRelocationStatus, clusterListInner.availabilityZoneRelocationStatus) &&
        Objects.equals(this.clusterNamespaceArn, clusterListInner.clusterNamespaceArn) &&
        Objects.equals(this.totalStorageCapacityInMegaBytes, clusterListInner.totalStorageCapacityInMegaBytes) &&
        Objects.equals(this.aquaConfiguration, clusterListInner.aquaConfiguration) &&
        Objects.equals(this.defaultIamRoleArn, clusterListInner.defaultIamRoleArn) &&
        Objects.equals(this.reservedNodeExchangeStatus, clusterListInner.reservedNodeExchangeStatus) &&
        Objects.equals(this.customDomainName, clusterListInner.customDomainName) &&
        Objects.equals(this.customDomainCertificateArn, clusterListInner.customDomainCertificateArn) &&
        Objects.equals(this.customDomainCertificateExpiryDate, clusterListInner.customDomainCertificateExpiryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterIdentifier, nodeType, clusterStatus, clusterAvailabilityStatus, modifyStatus, masterUsername, dbName, endpoint, clusterCreateTime, automatedSnapshotRetentionPeriod, manualSnapshotRetentionPeriod, clusterSecurityGroups, vpcSecurityGroups, clusterParameterGroups, clusterSubnetGroupName, vpcId, availabilityZone, preferredMaintenanceWindow, pendingModifiedValues, clusterVersion, allowVersionUpgrade, numberOfNodes, publiclyAccessible, encrypted, restoreStatus, dataTransferProgress, hsmStatus, clusterSnapshotCopyStatus, clusterPublicKey, clusterNodes, elasticIpStatus, clusterRevisionNumber, tags, kmsKeyId, enhancedVpcRouting, iamRoles, pendingActions, maintenanceTrackName, elasticResizeNumberOfNodeOptions, deferredMaintenanceWindows, snapshotScheduleIdentifier, snapshotScheduleState, expectedNextSnapshotScheduleTime, expectedNextSnapshotScheduleTimeStatus, nextMaintenanceWindowStartTime, resizeInfo, availabilityZoneRelocationStatus, clusterNamespaceArn, totalStorageCapacityInMegaBytes, aquaConfiguration, defaultIamRoleArn, reservedNodeExchangeStatus, customDomainName, customDomainCertificateArn, customDomainCertificateExpiryDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterListInner {\n");
    sb.append("    clusterIdentifier: ").append(toIndentedString(clusterIdentifier)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    clusterStatus: ").append(toIndentedString(clusterStatus)).append("\n");
    sb.append("    clusterAvailabilityStatus: ").append(toIndentedString(clusterAvailabilityStatus)).append("\n");
    sb.append("    modifyStatus: ").append(toIndentedString(modifyStatus)).append("\n");
    sb.append("    masterUsername: ").append(toIndentedString(masterUsername)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    clusterCreateTime: ").append(toIndentedString(clusterCreateTime)).append("\n");
    sb.append("    automatedSnapshotRetentionPeriod: ").append(toIndentedString(automatedSnapshotRetentionPeriod)).append("\n");
    sb.append("    manualSnapshotRetentionPeriod: ").append(toIndentedString(manualSnapshotRetentionPeriod)).append("\n");
    sb.append("    clusterSecurityGroups: ").append(toIndentedString(clusterSecurityGroups)).append("\n");
    sb.append("    vpcSecurityGroups: ").append(toIndentedString(vpcSecurityGroups)).append("\n");
    sb.append("    clusterParameterGroups: ").append(toIndentedString(clusterParameterGroups)).append("\n");
    sb.append("    clusterSubnetGroupName: ").append(toIndentedString(clusterSubnetGroupName)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    pendingModifiedValues: ").append(toIndentedString(pendingModifiedValues)).append("\n");
    sb.append("    clusterVersion: ").append(toIndentedString(clusterVersion)).append("\n");
    sb.append("    allowVersionUpgrade: ").append(toIndentedString(allowVersionUpgrade)).append("\n");
    sb.append("    numberOfNodes: ").append(toIndentedString(numberOfNodes)).append("\n");
    sb.append("    publiclyAccessible: ").append(toIndentedString(publiclyAccessible)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    restoreStatus: ").append(toIndentedString(restoreStatus)).append("\n");
    sb.append("    dataTransferProgress: ").append(toIndentedString(dataTransferProgress)).append("\n");
    sb.append("    hsmStatus: ").append(toIndentedString(hsmStatus)).append("\n");
    sb.append("    clusterSnapshotCopyStatus: ").append(toIndentedString(clusterSnapshotCopyStatus)).append("\n");
    sb.append("    clusterPublicKey: ").append(toIndentedString(clusterPublicKey)).append("\n");
    sb.append("    clusterNodes: ").append(toIndentedString(clusterNodes)).append("\n");
    sb.append("    elasticIpStatus: ").append(toIndentedString(elasticIpStatus)).append("\n");
    sb.append("    clusterRevisionNumber: ").append(toIndentedString(clusterRevisionNumber)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    enhancedVpcRouting: ").append(toIndentedString(enhancedVpcRouting)).append("\n");
    sb.append("    iamRoles: ").append(toIndentedString(iamRoles)).append("\n");
    sb.append("    pendingActions: ").append(toIndentedString(pendingActions)).append("\n");
    sb.append("    maintenanceTrackName: ").append(toIndentedString(maintenanceTrackName)).append("\n");
    sb.append("    elasticResizeNumberOfNodeOptions: ").append(toIndentedString(elasticResizeNumberOfNodeOptions)).append("\n");
    sb.append("    deferredMaintenanceWindows: ").append(toIndentedString(deferredMaintenanceWindows)).append("\n");
    sb.append("    snapshotScheduleIdentifier: ").append(toIndentedString(snapshotScheduleIdentifier)).append("\n");
    sb.append("    snapshotScheduleState: ").append(toIndentedString(snapshotScheduleState)).append("\n");
    sb.append("    expectedNextSnapshotScheduleTime: ").append(toIndentedString(expectedNextSnapshotScheduleTime)).append("\n");
    sb.append("    expectedNextSnapshotScheduleTimeStatus: ").append(toIndentedString(expectedNextSnapshotScheduleTimeStatus)).append("\n");
    sb.append("    nextMaintenanceWindowStartTime: ").append(toIndentedString(nextMaintenanceWindowStartTime)).append("\n");
    sb.append("    resizeInfo: ").append(toIndentedString(resizeInfo)).append("\n");
    sb.append("    availabilityZoneRelocationStatus: ").append(toIndentedString(availabilityZoneRelocationStatus)).append("\n");
    sb.append("    clusterNamespaceArn: ").append(toIndentedString(clusterNamespaceArn)).append("\n");
    sb.append("    totalStorageCapacityInMegaBytes: ").append(toIndentedString(totalStorageCapacityInMegaBytes)).append("\n");
    sb.append("    aquaConfiguration: ").append(toIndentedString(aquaConfiguration)).append("\n");
    sb.append("    defaultIamRoleArn: ").append(toIndentedString(defaultIamRoleArn)).append("\n");
    sb.append("    reservedNodeExchangeStatus: ").append(toIndentedString(reservedNodeExchangeStatus)).append("\n");
    sb.append("    customDomainName: ").append(toIndentedString(customDomainName)).append("\n");
    sb.append("    customDomainCertificateArn: ").append(toIndentedString(customDomainCertificateArn)).append("\n");
    sb.append("    customDomainCertificateExpiryDate: ").append(toIndentedString(customDomainCertificateExpiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterIdentifier");
    openapiFields.add("NodeType");
    openapiFields.add("ClusterStatus");
    openapiFields.add("ClusterAvailabilityStatus");
    openapiFields.add("ModifyStatus");
    openapiFields.add("MasterUsername");
    openapiFields.add("DBName");
    openapiFields.add("Endpoint");
    openapiFields.add("ClusterCreateTime");
    openapiFields.add("AutomatedSnapshotRetentionPeriod");
    openapiFields.add("ManualSnapshotRetentionPeriod");
    openapiFields.add("ClusterSecurityGroups");
    openapiFields.add("VpcSecurityGroups");
    openapiFields.add("ClusterParameterGroups");
    openapiFields.add("ClusterSubnetGroupName");
    openapiFields.add("VpcId");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("PendingModifiedValues");
    openapiFields.add("ClusterVersion");
    openapiFields.add("AllowVersionUpgrade");
    openapiFields.add("NumberOfNodes");
    openapiFields.add("PubliclyAccessible");
    openapiFields.add("Encrypted");
    openapiFields.add("RestoreStatus");
    openapiFields.add("DataTransferProgress");
    openapiFields.add("HsmStatus");
    openapiFields.add("ClusterSnapshotCopyStatus");
    openapiFields.add("ClusterPublicKey");
    openapiFields.add("ClusterNodes");
    openapiFields.add("ElasticIpStatus");
    openapiFields.add("ClusterRevisionNumber");
    openapiFields.add("Tags");
    openapiFields.add("KmsKeyId");
    openapiFields.add("EnhancedVpcRouting");
    openapiFields.add("IamRoles");
    openapiFields.add("PendingActions");
    openapiFields.add("MaintenanceTrackName");
    openapiFields.add("ElasticResizeNumberOfNodeOptions");
    openapiFields.add("DeferredMaintenanceWindows");
    openapiFields.add("SnapshotScheduleIdentifier");
    openapiFields.add("SnapshotScheduleState");
    openapiFields.add("ExpectedNextSnapshotScheduleTime");
    openapiFields.add("ExpectedNextSnapshotScheduleTimeStatus");
    openapiFields.add("NextMaintenanceWindowStartTime");
    openapiFields.add("ResizeInfo");
    openapiFields.add("AvailabilityZoneRelocationStatus");
    openapiFields.add("ClusterNamespaceArn");
    openapiFields.add("TotalStorageCapacityInMegaBytes");
    openapiFields.add("AquaConfiguration");
    openapiFields.add("DefaultIamRoleArn");
    openapiFields.add("ReservedNodeExchangeStatus");
    openapiFields.add("CustomDomainName");
    openapiFields.add("CustomDomainCertificateArn");
    openapiFields.add("CustomDomainCertificateExpiryDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClusterListInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClusterListInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClusterListInner is not found in the empty JSON string", ClusterListInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClusterListInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClusterListInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterIdentifier`
      if (jsonObj.get("ClusterIdentifier") != null && !jsonObj.get("ClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterIdentifier"));
      }
      // validate the optional field `NodeType`
      if (jsonObj.get("NodeType") != null && !jsonObj.get("NodeType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NodeType"));
      }
      // validate the optional field `ClusterStatus`
      if (jsonObj.get("ClusterStatus") != null && !jsonObj.get("ClusterStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterStatus"));
      }
      // validate the optional field `ClusterAvailabilityStatus`
      if (jsonObj.get("ClusterAvailabilityStatus") != null && !jsonObj.get("ClusterAvailabilityStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterAvailabilityStatus"));
      }
      // validate the optional field `ModifyStatus`
      if (jsonObj.get("ModifyStatus") != null && !jsonObj.get("ModifyStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModifyStatus"));
      }
      // validate the optional field `MasterUsername`
      if (jsonObj.get("MasterUsername") != null && !jsonObj.get("MasterUsername").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MasterUsername"));
      }
      // validate the optional field `DBName`
      if (jsonObj.get("DBName") != null && !jsonObj.get("DBName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBName"));
      }
      // validate the optional field `Endpoint`
      if (jsonObj.get("Endpoint") != null && !jsonObj.get("Endpoint").isJsonNull()) {
        ClusterEndpoint.validateJsonElement(jsonObj.get("Endpoint"));
      }
      // validate the optional field `ClusterCreateTime`
      if (jsonObj.get("ClusterCreateTime") != null && !jsonObj.get("ClusterCreateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ClusterCreateTime"));
      }
      // validate the optional field `AutomatedSnapshotRetentionPeriod`
      if (jsonObj.get("AutomatedSnapshotRetentionPeriod") != null && !jsonObj.get("AutomatedSnapshotRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutomatedSnapshotRetentionPeriod"));
      }
      // validate the optional field `ManualSnapshotRetentionPeriod`
      if (jsonObj.get("ManualSnapshotRetentionPeriod") != null && !jsonObj.get("ManualSnapshotRetentionPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ManualSnapshotRetentionPeriod"));
      }
      // validate the optional field `ClusterSecurityGroups`
      if (jsonObj.get("ClusterSecurityGroups") != null && !jsonObj.get("ClusterSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ClusterSecurityGroups"));
      }
      // validate the optional field `VpcSecurityGroups`
      if (jsonObj.get("VpcSecurityGroups") != null && !jsonObj.get("VpcSecurityGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("VpcSecurityGroups"));
      }
      // validate the optional field `ClusterParameterGroups`
      if (jsonObj.get("ClusterParameterGroups") != null && !jsonObj.get("ClusterParameterGroups").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ClusterParameterGroups"));
      }
      // validate the optional field `ClusterSubnetGroupName`
      if (jsonObj.get("ClusterSubnetGroupName") != null && !jsonObj.get("ClusterSubnetGroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterSubnetGroupName"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
      // validate the optional field `AvailabilityZone`
      if (jsonObj.get("AvailabilityZone") != null && !jsonObj.get("AvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `PendingModifiedValues`
      if (jsonObj.get("PendingModifiedValues") != null && !jsonObj.get("PendingModifiedValues").isJsonNull()) {
        ClusterPendingModifiedValues.validateJsonElement(jsonObj.get("PendingModifiedValues"));
      }
      // validate the optional field `ClusterVersion`
      if (jsonObj.get("ClusterVersion") != null && !jsonObj.get("ClusterVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterVersion"));
      }
      // validate the optional field `AllowVersionUpgrade`
      if (jsonObj.get("AllowVersionUpgrade") != null && !jsonObj.get("AllowVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AllowVersionUpgrade"));
      }
      // validate the optional field `NumberOfNodes`
      if (jsonObj.get("NumberOfNodes") != null && !jsonObj.get("NumberOfNodes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfNodes"));
      }
      // validate the optional field `PubliclyAccessible`
      if (jsonObj.get("PubliclyAccessible") != null && !jsonObj.get("PubliclyAccessible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("PubliclyAccessible"));
      }
      // validate the optional field `Encrypted`
      if (jsonObj.get("Encrypted") != null && !jsonObj.get("Encrypted").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Encrypted"));
      }
      // validate the optional field `RestoreStatus`
      if (jsonObj.get("RestoreStatus") != null && !jsonObj.get("RestoreStatus").isJsonNull()) {
        ClusterRestoreStatus.validateJsonElement(jsonObj.get("RestoreStatus"));
      }
      // validate the optional field `DataTransferProgress`
      if (jsonObj.get("DataTransferProgress") != null && !jsonObj.get("DataTransferProgress").isJsonNull()) {
        ClusterDataTransferProgress.validateJsonElement(jsonObj.get("DataTransferProgress"));
      }
      // validate the optional field `HsmStatus`
      if (jsonObj.get("HsmStatus") != null && !jsonObj.get("HsmStatus").isJsonNull()) {
        ClusterHsmStatus.validateJsonElement(jsonObj.get("HsmStatus"));
      }
      // validate the optional field `ClusterSnapshotCopyStatus`
      if (jsonObj.get("ClusterSnapshotCopyStatus") != null && !jsonObj.get("ClusterSnapshotCopyStatus").isJsonNull()) {
        ClusterClusterSnapshotCopyStatus.validateJsonElement(jsonObj.get("ClusterSnapshotCopyStatus"));
      }
      // validate the optional field `ClusterPublicKey`
      if (jsonObj.get("ClusterPublicKey") != null && !jsonObj.get("ClusterPublicKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterPublicKey"));
      }
      // validate the optional field `ClusterNodes`
      if (jsonObj.get("ClusterNodes") != null && !jsonObj.get("ClusterNodes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ClusterNodes"));
      }
      // validate the optional field `ElasticIpStatus`
      if (jsonObj.get("ElasticIpStatus") != null && !jsonObj.get("ElasticIpStatus").isJsonNull()) {
        ClusterElasticIpStatus.validateJsonElement(jsonObj.get("ElasticIpStatus"));
      }
      // validate the optional field `ClusterRevisionNumber`
      if (jsonObj.get("ClusterRevisionNumber") != null && !jsonObj.get("ClusterRevisionNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterRevisionNumber"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `KmsKeyId`
      if (jsonObj.get("KmsKeyId") != null && !jsonObj.get("KmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyId"));
      }
      // validate the optional field `EnhancedVpcRouting`
      if (jsonObj.get("EnhancedVpcRouting") != null && !jsonObj.get("EnhancedVpcRouting").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnhancedVpcRouting"));
      }
      // validate the optional field `IamRoles`
      if (jsonObj.get("IamRoles") != null && !jsonObj.get("IamRoles").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("IamRoles"));
      }
      // validate the optional field `PendingActions`
      if (jsonObj.get("PendingActions") != null && !jsonObj.get("PendingActions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PendingActions"));
      }
      // validate the optional field `MaintenanceTrackName`
      if (jsonObj.get("MaintenanceTrackName") != null && !jsonObj.get("MaintenanceTrackName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaintenanceTrackName"));
      }
      // validate the optional field `ElasticResizeNumberOfNodeOptions`
      if (jsonObj.get("ElasticResizeNumberOfNodeOptions") != null && !jsonObj.get("ElasticResizeNumberOfNodeOptions").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ElasticResizeNumberOfNodeOptions"));
      }
      // validate the optional field `DeferredMaintenanceWindows`
      if (jsonObj.get("DeferredMaintenanceWindows") != null && !jsonObj.get("DeferredMaintenanceWindows").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DeferredMaintenanceWindows"));
      }
      // validate the optional field `SnapshotScheduleIdentifier`
      if (jsonObj.get("SnapshotScheduleIdentifier") != null && !jsonObj.get("SnapshotScheduleIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SnapshotScheduleIdentifier"));
      }
      // validate the optional field `SnapshotScheduleState`
      if (jsonObj.get("SnapshotScheduleState") != null && !jsonObj.get("SnapshotScheduleState").isJsonNull()) {
        ScheduleState.validateJsonElement(jsonObj.get("SnapshotScheduleState"));
      }
      // validate the optional field `ExpectedNextSnapshotScheduleTime`
      if (jsonObj.get("ExpectedNextSnapshotScheduleTime") != null && !jsonObj.get("ExpectedNextSnapshotScheduleTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ExpectedNextSnapshotScheduleTime"));
      }
      // validate the optional field `ExpectedNextSnapshotScheduleTimeStatus`
      if (jsonObj.get("ExpectedNextSnapshotScheduleTimeStatus") != null && !jsonObj.get("ExpectedNextSnapshotScheduleTimeStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExpectedNextSnapshotScheduleTimeStatus"));
      }
      // validate the optional field `NextMaintenanceWindowStartTime`
      if (jsonObj.get("NextMaintenanceWindowStartTime") != null && !jsonObj.get("NextMaintenanceWindowStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("NextMaintenanceWindowStartTime"));
      }
      // validate the optional field `ResizeInfo`
      if (jsonObj.get("ResizeInfo") != null && !jsonObj.get("ResizeInfo").isJsonNull()) {
        ClusterResizeInfo.validateJsonElement(jsonObj.get("ResizeInfo"));
      }
      // validate the optional field `AvailabilityZoneRelocationStatus`
      if (jsonObj.get("AvailabilityZoneRelocationStatus") != null && !jsonObj.get("AvailabilityZoneRelocationStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZoneRelocationStatus"));
      }
      // validate the optional field `ClusterNamespaceArn`
      if (jsonObj.get("ClusterNamespaceArn") != null && !jsonObj.get("ClusterNamespaceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterNamespaceArn"));
      }
      // validate the optional field `TotalStorageCapacityInMegaBytes`
      if (jsonObj.get("TotalStorageCapacityInMegaBytes") != null && !jsonObj.get("TotalStorageCapacityInMegaBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalStorageCapacityInMegaBytes"));
      }
      // validate the optional field `AquaConfiguration`
      if (jsonObj.get("AquaConfiguration") != null && !jsonObj.get("AquaConfiguration").isJsonNull()) {
        ClusterAquaConfiguration.validateJsonElement(jsonObj.get("AquaConfiguration"));
      }
      // validate the optional field `DefaultIamRoleArn`
      if (jsonObj.get("DefaultIamRoleArn") != null && !jsonObj.get("DefaultIamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultIamRoleArn"));
      }
      // validate the optional field `ReservedNodeExchangeStatus`
      if (jsonObj.get("ReservedNodeExchangeStatus") != null && !jsonObj.get("ReservedNodeExchangeStatus").isJsonNull()) {
        ClusterReservedNodeExchangeStatus.validateJsonElement(jsonObj.get("ReservedNodeExchangeStatus"));
      }
      // validate the optional field `CustomDomainName`
      if (jsonObj.get("CustomDomainName") != null && !jsonObj.get("CustomDomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomDomainName"));
      }
      // validate the optional field `CustomDomainCertificateArn`
      if (jsonObj.get("CustomDomainCertificateArn") != null && !jsonObj.get("CustomDomainCertificateArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CustomDomainCertificateArn"));
      }
      // validate the optional field `CustomDomainCertificateExpiryDate`
      if (jsonObj.get("CustomDomainCertificateExpiryDate") != null && !jsonObj.get("CustomDomainCertificateExpiryDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CustomDomainCertificateExpiryDate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClusterListInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClusterListInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClusterListInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClusterListInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ClusterListInner>() {
           @Override
           public void write(JsonWriter out, ClusterListInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClusterListInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClusterListInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClusterListInner
   * @throws IOException if the JSON string is invalid with respect to ClusterListInner
   */
  public static ClusterListInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClusterListInner.class);
  }

  /**
   * Convert an instance of ClusterListInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

