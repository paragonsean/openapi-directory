/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonRedshift);
  }
}(this, function(expect, AmazonRedshift) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonRedshift.Cluster();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Cluster', function() {
    it('should create an instance of Cluster', function() {
      // uncomment below and update the code to test Cluster
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be.a(AmazonRedshift.Cluster);
    });

    it('should have the property clusterIdentifier (base name: "ClusterIdentifier")', function() {
      // uncomment below and update the code to test the property clusterIdentifier
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property nodeType (base name: "NodeType")', function() {
      // uncomment below and update the code to test the property nodeType
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterStatus (base name: "ClusterStatus")', function() {
      // uncomment below and update the code to test the property clusterStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterAvailabilityStatus (base name: "ClusterAvailabilityStatus")', function() {
      // uncomment below and update the code to test the property clusterAvailabilityStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property modifyStatus (base name: "ModifyStatus")', function() {
      // uncomment below and update the code to test the property modifyStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property masterUsername (base name: "MasterUsername")', function() {
      // uncomment below and update the code to test the property masterUsername
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property dBName (base name: "DBName")', function() {
      // uncomment below and update the code to test the property dBName
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property endpoint (base name: "Endpoint")', function() {
      // uncomment below and update the code to test the property endpoint
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterCreateTime (base name: "ClusterCreateTime")', function() {
      // uncomment below and update the code to test the property clusterCreateTime
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property automatedSnapshotRetentionPeriod (base name: "AutomatedSnapshotRetentionPeriod")', function() {
      // uncomment below and update the code to test the property automatedSnapshotRetentionPeriod
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property manualSnapshotRetentionPeriod (base name: "ManualSnapshotRetentionPeriod")', function() {
      // uncomment below and update the code to test the property manualSnapshotRetentionPeriod
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterSecurityGroups (base name: "ClusterSecurityGroups")', function() {
      // uncomment below and update the code to test the property clusterSecurityGroups
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property vpcSecurityGroups (base name: "VpcSecurityGroups")', function() {
      // uncomment below and update the code to test the property vpcSecurityGroups
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterParameterGroups (base name: "ClusterParameterGroups")', function() {
      // uncomment below and update the code to test the property clusterParameterGroups
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterSubnetGroupName (base name: "ClusterSubnetGroupName")', function() {
      // uncomment below and update the code to test the property clusterSubnetGroupName
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property vpcId (base name: "VpcId")', function() {
      // uncomment below and update the code to test the property vpcId
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property availabilityZone (base name: "AvailabilityZone")', function() {
      // uncomment below and update the code to test the property availabilityZone
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property preferredMaintenanceWindow (base name: "PreferredMaintenanceWindow")', function() {
      // uncomment below and update the code to test the property preferredMaintenanceWindow
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property pendingModifiedValues (base name: "PendingModifiedValues")', function() {
      // uncomment below and update the code to test the property pendingModifiedValues
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterVersion (base name: "ClusterVersion")', function() {
      // uncomment below and update the code to test the property clusterVersion
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property allowVersionUpgrade (base name: "AllowVersionUpgrade")', function() {
      // uncomment below and update the code to test the property allowVersionUpgrade
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property numberOfNodes (base name: "NumberOfNodes")', function() {
      // uncomment below and update the code to test the property numberOfNodes
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property publiclyAccessible (base name: "PubliclyAccessible")', function() {
      // uncomment below and update the code to test the property publiclyAccessible
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property encrypted (base name: "Encrypted")', function() {
      // uncomment below and update the code to test the property encrypted
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property restoreStatus (base name: "RestoreStatus")', function() {
      // uncomment below and update the code to test the property restoreStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property dataTransferProgress (base name: "DataTransferProgress")', function() {
      // uncomment below and update the code to test the property dataTransferProgress
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property hsmStatus (base name: "HsmStatus")', function() {
      // uncomment below and update the code to test the property hsmStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterSnapshotCopyStatus (base name: "ClusterSnapshotCopyStatus")', function() {
      // uncomment below and update the code to test the property clusterSnapshotCopyStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterPublicKey (base name: "ClusterPublicKey")', function() {
      // uncomment below and update the code to test the property clusterPublicKey
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterNodes (base name: "ClusterNodes")', function() {
      // uncomment below and update the code to test the property clusterNodes
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property elasticIpStatus (base name: "ElasticIpStatus")', function() {
      // uncomment below and update the code to test the property elasticIpStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterRevisionNumber (base name: "ClusterRevisionNumber")', function() {
      // uncomment below and update the code to test the property clusterRevisionNumber
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property kmsKeyId (base name: "KmsKeyId")', function() {
      // uncomment below and update the code to test the property kmsKeyId
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property enhancedVpcRouting (base name: "EnhancedVpcRouting")', function() {
      // uncomment below and update the code to test the property enhancedVpcRouting
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property iamRoles (base name: "IamRoles")', function() {
      // uncomment below and update the code to test the property iamRoles
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property pendingActions (base name: "PendingActions")', function() {
      // uncomment below and update the code to test the property pendingActions
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceTrackName (base name: "MaintenanceTrackName")', function() {
      // uncomment below and update the code to test the property maintenanceTrackName
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property elasticResizeNumberOfNodeOptions (base name: "ElasticResizeNumberOfNodeOptions")', function() {
      // uncomment below and update the code to test the property elasticResizeNumberOfNodeOptions
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property deferredMaintenanceWindows (base name: "DeferredMaintenanceWindows")', function() {
      // uncomment below and update the code to test the property deferredMaintenanceWindows
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property snapshotScheduleIdentifier (base name: "SnapshotScheduleIdentifier")', function() {
      // uncomment below and update the code to test the property snapshotScheduleIdentifier
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property snapshotScheduleState (base name: "SnapshotScheduleState")', function() {
      // uncomment below and update the code to test the property snapshotScheduleState
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property expectedNextSnapshotScheduleTime (base name: "ExpectedNextSnapshotScheduleTime")', function() {
      // uncomment below and update the code to test the property expectedNextSnapshotScheduleTime
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property expectedNextSnapshotScheduleTimeStatus (base name: "ExpectedNextSnapshotScheduleTimeStatus")', function() {
      // uncomment below and update the code to test the property expectedNextSnapshotScheduleTimeStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property nextMaintenanceWindowStartTime (base name: "NextMaintenanceWindowStartTime")', function() {
      // uncomment below and update the code to test the property nextMaintenanceWindowStartTime
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property resizeInfo (base name: "ResizeInfo")', function() {
      // uncomment below and update the code to test the property resizeInfo
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property availabilityZoneRelocationStatus (base name: "AvailabilityZoneRelocationStatus")', function() {
      // uncomment below and update the code to test the property availabilityZoneRelocationStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterNamespaceArn (base name: "ClusterNamespaceArn")', function() {
      // uncomment below and update the code to test the property clusterNamespaceArn
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property totalStorageCapacityInMegaBytes (base name: "TotalStorageCapacityInMegaBytes")', function() {
      // uncomment below and update the code to test the property totalStorageCapacityInMegaBytes
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property aquaConfiguration (base name: "AquaConfiguration")', function() {
      // uncomment below and update the code to test the property aquaConfiguration
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property defaultIamRoleArn (base name: "DefaultIamRoleArn")', function() {
      // uncomment below and update the code to test the property defaultIamRoleArn
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property reservedNodeExchangeStatus (base name: "ReservedNodeExchangeStatus")', function() {
      // uncomment below and update the code to test the property reservedNodeExchangeStatus
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property customDomainName (base name: "CustomDomainName")', function() {
      // uncomment below and update the code to test the property customDomainName
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property customDomainCertificateArn (base name: "CustomDomainCertificateArn")', function() {
      // uncomment below and update the code to test the property customDomainCertificateArn
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

    it('should have the property customDomainCertificateExpiryDate (base name: "CustomDomainCertificateExpiryDate")', function() {
      // uncomment below and update the code to test the property customDomainCertificateExpiryDate
      //var instance = new AmazonRedshift.Cluster();
      //expect(instance).to.be();
    });

  });

}));
