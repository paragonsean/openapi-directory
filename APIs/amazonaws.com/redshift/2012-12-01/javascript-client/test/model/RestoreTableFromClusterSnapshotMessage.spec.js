/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonRedshift);
  }
}(this, function(expect, AmazonRedshift) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RestoreTableFromClusterSnapshotMessage', function() {
    it('should create an instance of RestoreTableFromClusterSnapshotMessage', function() {
      // uncomment below and update the code to test RestoreTableFromClusterSnapshotMessage
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be.a(AmazonRedshift.RestoreTableFromClusterSnapshotMessage);
    });

    it('should have the property clusterIdentifier (base name: "ClusterIdentifier")', function() {
      // uncomment below and update the code to test the property clusterIdentifier
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property snapshotIdentifier (base name: "SnapshotIdentifier")', function() {
      // uncomment below and update the code to test the property snapshotIdentifier
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property sourceDatabaseName (base name: "SourceDatabaseName")', function() {
      // uncomment below and update the code to test the property sourceDatabaseName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property sourceSchemaName (base name: "SourceSchemaName")', function() {
      // uncomment below and update the code to test the property sourceSchemaName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property sourceTableName (base name: "SourceTableName")', function() {
      // uncomment below and update the code to test the property sourceTableName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property targetDatabaseName (base name: "TargetDatabaseName")', function() {
      // uncomment below and update the code to test the property targetDatabaseName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property targetSchemaName (base name: "TargetSchemaName")', function() {
      // uncomment below and update the code to test the property targetSchemaName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property newTableName (base name: "NewTableName")', function() {
      // uncomment below and update the code to test the property newTableName
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

    it('should have the property enableCaseSensitiveIdentifier (base name: "EnableCaseSensitiveIdentifier")', function() {
      // uncomment below and update the code to test the property enableCaseSensitiveIdentifier
      //var instance = new AmazonRedshift.RestoreTableFromClusterSnapshotMessage();
      //expect(instance).to.be();
    });

  });

}));
