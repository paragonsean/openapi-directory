# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterSubnetGroupMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marker: str=None, cluster_subnet_groups: List=None):
        """ClusterSubnetGroupMessage - a model defined in OpenAPI

        :param marker: The marker of this ClusterSubnetGroupMessage.
        :param cluster_subnet_groups: The cluster_subnet_groups of this ClusterSubnetGroupMessage.
        """
        self.openapi_types = {
            'marker': str,
            'cluster_subnet_groups': List
        }

        self.attribute_map = {
            'marker': 'Marker',
            'cluster_subnet_groups': 'ClusterSubnetGroups'
        }

        self._marker = marker
        self._cluster_subnet_groups = cluster_subnet_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterSubnetGroupMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterSubnetGroupMessage of this ClusterSubnetGroupMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marker(self):
        """Gets the marker of this ClusterSubnetGroupMessage.


        :return: The marker of this ClusterSubnetGroupMessage.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this ClusterSubnetGroupMessage.


        :param marker: The marker of this ClusterSubnetGroupMessage.
        :type marker: str
        """

        self._marker = marker

    @property
    def cluster_subnet_groups(self):
        """Gets the cluster_subnet_groups of this ClusterSubnetGroupMessage.


        :return: The cluster_subnet_groups of this ClusterSubnetGroupMessage.
        :rtype: List
        """
        return self._cluster_subnet_groups

    @cluster_subnet_groups.setter
    def cluster_subnet_groups(self, cluster_subnet_groups):
        """Sets the cluster_subnet_groups of this ClusterSubnetGroupMessage.


        :param cluster_subnet_groups: The cluster_subnet_groups of this ClusterSubnetGroupMessage.
        :type cluster_subnet_groups: List
        """

        self._cluster_subnet_groups = cluster_subnet_groups
