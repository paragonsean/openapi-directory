# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster import Cluster
from openapi_server import util


class RestoreFromClusterSnapshotResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster: Cluster=None):
        """RestoreFromClusterSnapshotResult - a model defined in OpenAPI

        :param cluster: The cluster of this RestoreFromClusterSnapshotResult.
        """
        self.openapi_types = {
            'cluster': Cluster
        }

        self.attribute_map = {
            'cluster': 'Cluster'
        }

        self._cluster = cluster

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreFromClusterSnapshotResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreFromClusterSnapshotResult of this RestoreFromClusterSnapshotResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster(self):
        """Gets the cluster of this RestoreFromClusterSnapshotResult.


        :return: The cluster of this RestoreFromClusterSnapshotResult.
        :rtype: Cluster
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this RestoreFromClusterSnapshotResult.


        :param cluster: The cluster of this RestoreFromClusterSnapshotResult.
        :type cluster: Cluster
        """

        self._cluster = cluster
