# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeEndpointAccessMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, resource_owner: str=None, endpoint_name: str=None, vpc_id: str=None, max_records: int=None, marker: str=None):
        """DescribeEndpointAccessMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this DescribeEndpointAccessMessage.
        :param resource_owner: The resource_owner of this DescribeEndpointAccessMessage.
        :param endpoint_name: The endpoint_name of this DescribeEndpointAccessMessage.
        :param vpc_id: The vpc_id of this DescribeEndpointAccessMessage.
        :param max_records: The max_records of this DescribeEndpointAccessMessage.
        :param marker: The marker of this DescribeEndpointAccessMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'resource_owner': str,
            'endpoint_name': str,
            'vpc_id': str,
            'max_records': int,
            'marker': str
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'resource_owner': 'ResourceOwner',
            'endpoint_name': 'EndpointName',
            'vpc_id': 'VpcId',
            'max_records': 'MaxRecords',
            'marker': 'Marker'
        }

        self._cluster_identifier = cluster_identifier
        self._resource_owner = resource_owner
        self._endpoint_name = endpoint_name
        self._vpc_id = vpc_id
        self._max_records = max_records
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeEndpointAccessMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeEndpointAccessMessage of this DescribeEndpointAccessMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this DescribeEndpointAccessMessage.


        :return: The cluster_identifier of this DescribeEndpointAccessMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this DescribeEndpointAccessMessage.


        :param cluster_identifier: The cluster_identifier of this DescribeEndpointAccessMessage.
        :type cluster_identifier: str
        """

        self._cluster_identifier = cluster_identifier

    @property
    def resource_owner(self):
        """Gets the resource_owner of this DescribeEndpointAccessMessage.


        :return: The resource_owner of this DescribeEndpointAccessMessage.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this DescribeEndpointAccessMessage.


        :param resource_owner: The resource_owner of this DescribeEndpointAccessMessage.
        :type resource_owner: str
        """

        self._resource_owner = resource_owner

    @property
    def endpoint_name(self):
        """Gets the endpoint_name of this DescribeEndpointAccessMessage.


        :return: The endpoint_name of this DescribeEndpointAccessMessage.
        :rtype: str
        """
        return self._endpoint_name

    @endpoint_name.setter
    def endpoint_name(self, endpoint_name):
        """Sets the endpoint_name of this DescribeEndpointAccessMessage.


        :param endpoint_name: The endpoint_name of this DescribeEndpointAccessMessage.
        :type endpoint_name: str
        """

        self._endpoint_name = endpoint_name

    @property
    def vpc_id(self):
        """Gets the vpc_id of this DescribeEndpointAccessMessage.


        :return: The vpc_id of this DescribeEndpointAccessMessage.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this DescribeEndpointAccessMessage.


        :param vpc_id: The vpc_id of this DescribeEndpointAccessMessage.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def max_records(self):
        """Gets the max_records of this DescribeEndpointAccessMessage.


        :return: The max_records of this DescribeEndpointAccessMessage.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeEndpointAccessMessage.


        :param max_records: The max_records of this DescribeEndpointAccessMessage.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def marker(self):
        """Gets the marker of this DescribeEndpointAccessMessage.


        :return: The marker of this DescribeEndpointAccessMessage.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this DescribeEndpointAccessMessage.


        :param marker: The marker of this DescribeEndpointAccessMessage.
        :type marker: str
        """

        self._marker = marker
