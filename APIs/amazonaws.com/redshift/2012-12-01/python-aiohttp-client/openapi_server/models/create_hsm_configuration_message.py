# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateHsmConfigurationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hsm_configuration_identifier: str=None, description: str=None, hsm_ip_address: str=None, hsm_partition_name: str=None, hsm_partition_password: str=None, hsm_server_public_certificate: str=None, tags: List=None):
        """CreateHsmConfigurationMessage - a model defined in OpenAPI

        :param hsm_configuration_identifier: The hsm_configuration_identifier of this CreateHsmConfigurationMessage.
        :param description: The description of this CreateHsmConfigurationMessage.
        :param hsm_ip_address: The hsm_ip_address of this CreateHsmConfigurationMessage.
        :param hsm_partition_name: The hsm_partition_name of this CreateHsmConfigurationMessage.
        :param hsm_partition_password: The hsm_partition_password of this CreateHsmConfigurationMessage.
        :param hsm_server_public_certificate: The hsm_server_public_certificate of this CreateHsmConfigurationMessage.
        :param tags: The tags of this CreateHsmConfigurationMessage.
        """
        self.openapi_types = {
            'hsm_configuration_identifier': str,
            'description': str,
            'hsm_ip_address': str,
            'hsm_partition_name': str,
            'hsm_partition_password': str,
            'hsm_server_public_certificate': str,
            'tags': List
        }

        self.attribute_map = {
            'hsm_configuration_identifier': 'HsmConfigurationIdentifier',
            'description': 'Description',
            'hsm_ip_address': 'HsmIpAddress',
            'hsm_partition_name': 'HsmPartitionName',
            'hsm_partition_password': 'HsmPartitionPassword',
            'hsm_server_public_certificate': 'HsmServerPublicCertificate',
            'tags': 'Tags'
        }

        self._hsm_configuration_identifier = hsm_configuration_identifier
        self._description = description
        self._hsm_ip_address = hsm_ip_address
        self._hsm_partition_name = hsm_partition_name
        self._hsm_partition_password = hsm_partition_password
        self._hsm_server_public_certificate = hsm_server_public_certificate
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHsmConfigurationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHsmConfigurationMessage of this CreateHsmConfigurationMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hsm_configuration_identifier(self):
        """Gets the hsm_configuration_identifier of this CreateHsmConfigurationMessage.


        :return: The hsm_configuration_identifier of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._hsm_configuration_identifier

    @hsm_configuration_identifier.setter
    def hsm_configuration_identifier(self, hsm_configuration_identifier):
        """Sets the hsm_configuration_identifier of this CreateHsmConfigurationMessage.


        :param hsm_configuration_identifier: The hsm_configuration_identifier of this CreateHsmConfigurationMessage.
        :type hsm_configuration_identifier: str
        """
        if hsm_configuration_identifier is None:
            raise ValueError("Invalid value for `hsm_configuration_identifier`, must not be `None`")

        self._hsm_configuration_identifier = hsm_configuration_identifier

    @property
    def description(self):
        """Gets the description of this CreateHsmConfigurationMessage.


        :return: The description of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateHsmConfigurationMessage.


        :param description: The description of this CreateHsmConfigurationMessage.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def hsm_ip_address(self):
        """Gets the hsm_ip_address of this CreateHsmConfigurationMessage.


        :return: The hsm_ip_address of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._hsm_ip_address

    @hsm_ip_address.setter
    def hsm_ip_address(self, hsm_ip_address):
        """Sets the hsm_ip_address of this CreateHsmConfigurationMessage.


        :param hsm_ip_address: The hsm_ip_address of this CreateHsmConfigurationMessage.
        :type hsm_ip_address: str
        """
        if hsm_ip_address is None:
            raise ValueError("Invalid value for `hsm_ip_address`, must not be `None`")

        self._hsm_ip_address = hsm_ip_address

    @property
    def hsm_partition_name(self):
        """Gets the hsm_partition_name of this CreateHsmConfigurationMessage.


        :return: The hsm_partition_name of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._hsm_partition_name

    @hsm_partition_name.setter
    def hsm_partition_name(self, hsm_partition_name):
        """Sets the hsm_partition_name of this CreateHsmConfigurationMessage.


        :param hsm_partition_name: The hsm_partition_name of this CreateHsmConfigurationMessage.
        :type hsm_partition_name: str
        """
        if hsm_partition_name is None:
            raise ValueError("Invalid value for `hsm_partition_name`, must not be `None`")

        self._hsm_partition_name = hsm_partition_name

    @property
    def hsm_partition_password(self):
        """Gets the hsm_partition_password of this CreateHsmConfigurationMessage.


        :return: The hsm_partition_password of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._hsm_partition_password

    @hsm_partition_password.setter
    def hsm_partition_password(self, hsm_partition_password):
        """Sets the hsm_partition_password of this CreateHsmConfigurationMessage.


        :param hsm_partition_password: The hsm_partition_password of this CreateHsmConfigurationMessage.
        :type hsm_partition_password: str
        """
        if hsm_partition_password is None:
            raise ValueError("Invalid value for `hsm_partition_password`, must not be `None`")

        self._hsm_partition_password = hsm_partition_password

    @property
    def hsm_server_public_certificate(self):
        """Gets the hsm_server_public_certificate of this CreateHsmConfigurationMessage.


        :return: The hsm_server_public_certificate of this CreateHsmConfigurationMessage.
        :rtype: str
        """
        return self._hsm_server_public_certificate

    @hsm_server_public_certificate.setter
    def hsm_server_public_certificate(self, hsm_server_public_certificate):
        """Sets the hsm_server_public_certificate of this CreateHsmConfigurationMessage.


        :param hsm_server_public_certificate: The hsm_server_public_certificate of this CreateHsmConfigurationMessage.
        :type hsm_server_public_certificate: str
        """
        if hsm_server_public_certificate is None:
            raise ValueError("Invalid value for `hsm_server_public_certificate`, must not be `None`")

        self._hsm_server_public_certificate = hsm_server_public_certificate

    @property
    def tags(self):
        """Gets the tags of this CreateHsmConfigurationMessage.


        :return: The tags of this CreateHsmConfigurationMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateHsmConfigurationMessage.


        :param tags: The tags of this CreateHsmConfigurationMessage.
        :type tags: List
        """

        self._tags = tags
