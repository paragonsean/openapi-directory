# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestoreStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, current_restore_rate_in_mega_bytes_per_second: float=None, snapshot_size_in_mega_bytes: int=None, progress_in_mega_bytes: int=None, elapsed_time_in_seconds: int=None, estimated_time_to_completion_in_seconds: int=None):
        """RestoreStatus - a model defined in OpenAPI

        :param status: The status of this RestoreStatus.
        :param current_restore_rate_in_mega_bytes_per_second: The current_restore_rate_in_mega_bytes_per_second of this RestoreStatus.
        :param snapshot_size_in_mega_bytes: The snapshot_size_in_mega_bytes of this RestoreStatus.
        :param progress_in_mega_bytes: The progress_in_mega_bytes of this RestoreStatus.
        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this RestoreStatus.
        :param estimated_time_to_completion_in_seconds: The estimated_time_to_completion_in_seconds of this RestoreStatus.
        """
        self.openapi_types = {
            'status': str,
            'current_restore_rate_in_mega_bytes_per_second': float,
            'snapshot_size_in_mega_bytes': int,
            'progress_in_mega_bytes': int,
            'elapsed_time_in_seconds': int,
            'estimated_time_to_completion_in_seconds': int
        }

        self.attribute_map = {
            'status': 'Status',
            'current_restore_rate_in_mega_bytes_per_second': 'CurrentRestoreRateInMegaBytesPerSecond',
            'snapshot_size_in_mega_bytes': 'SnapshotSizeInMegaBytes',
            'progress_in_mega_bytes': 'ProgressInMegaBytes',
            'elapsed_time_in_seconds': 'ElapsedTimeInSeconds',
            'estimated_time_to_completion_in_seconds': 'EstimatedTimeToCompletionInSeconds'
        }

        self._status = status
        self._current_restore_rate_in_mega_bytes_per_second = current_restore_rate_in_mega_bytes_per_second
        self._snapshot_size_in_mega_bytes = snapshot_size_in_mega_bytes
        self._progress_in_mega_bytes = progress_in_mega_bytes
        self._elapsed_time_in_seconds = elapsed_time_in_seconds
        self._estimated_time_to_completion_in_seconds = estimated_time_to_completion_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreStatus of this RestoreStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this RestoreStatus.


        :return: The status of this RestoreStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RestoreStatus.


        :param status: The status of this RestoreStatus.
        :type status: str
        """

        self._status = status

    @property
    def current_restore_rate_in_mega_bytes_per_second(self):
        """Gets the current_restore_rate_in_mega_bytes_per_second of this RestoreStatus.


        :return: The current_restore_rate_in_mega_bytes_per_second of this RestoreStatus.
        :rtype: float
        """
        return self._current_restore_rate_in_mega_bytes_per_second

    @current_restore_rate_in_mega_bytes_per_second.setter
    def current_restore_rate_in_mega_bytes_per_second(self, current_restore_rate_in_mega_bytes_per_second):
        """Sets the current_restore_rate_in_mega_bytes_per_second of this RestoreStatus.


        :param current_restore_rate_in_mega_bytes_per_second: The current_restore_rate_in_mega_bytes_per_second of this RestoreStatus.
        :type current_restore_rate_in_mega_bytes_per_second: float
        """

        self._current_restore_rate_in_mega_bytes_per_second = current_restore_rate_in_mega_bytes_per_second

    @property
    def snapshot_size_in_mega_bytes(self):
        """Gets the snapshot_size_in_mega_bytes of this RestoreStatus.


        :return: The snapshot_size_in_mega_bytes of this RestoreStatus.
        :rtype: int
        """
        return self._snapshot_size_in_mega_bytes

    @snapshot_size_in_mega_bytes.setter
    def snapshot_size_in_mega_bytes(self, snapshot_size_in_mega_bytes):
        """Sets the snapshot_size_in_mega_bytes of this RestoreStatus.


        :param snapshot_size_in_mega_bytes: The snapshot_size_in_mega_bytes of this RestoreStatus.
        :type snapshot_size_in_mega_bytes: int
        """

        self._snapshot_size_in_mega_bytes = snapshot_size_in_mega_bytes

    @property
    def progress_in_mega_bytes(self):
        """Gets the progress_in_mega_bytes of this RestoreStatus.


        :return: The progress_in_mega_bytes of this RestoreStatus.
        :rtype: int
        """
        return self._progress_in_mega_bytes

    @progress_in_mega_bytes.setter
    def progress_in_mega_bytes(self, progress_in_mega_bytes):
        """Sets the progress_in_mega_bytes of this RestoreStatus.


        :param progress_in_mega_bytes: The progress_in_mega_bytes of this RestoreStatus.
        :type progress_in_mega_bytes: int
        """

        self._progress_in_mega_bytes = progress_in_mega_bytes

    @property
    def elapsed_time_in_seconds(self):
        """Gets the elapsed_time_in_seconds of this RestoreStatus.


        :return: The elapsed_time_in_seconds of this RestoreStatus.
        :rtype: int
        """
        return self._elapsed_time_in_seconds

    @elapsed_time_in_seconds.setter
    def elapsed_time_in_seconds(self, elapsed_time_in_seconds):
        """Sets the elapsed_time_in_seconds of this RestoreStatus.


        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this RestoreStatus.
        :type elapsed_time_in_seconds: int
        """

        self._elapsed_time_in_seconds = elapsed_time_in_seconds

    @property
    def estimated_time_to_completion_in_seconds(self):
        """Gets the estimated_time_to_completion_in_seconds of this RestoreStatus.


        :return: The estimated_time_to_completion_in_seconds of this RestoreStatus.
        :rtype: int
        """
        return self._estimated_time_to_completion_in_seconds

    @estimated_time_to_completion_in_seconds.setter
    def estimated_time_to_completion_in_seconds(self, estimated_time_to_completion_in_seconds):
        """Sets the estimated_time_to_completion_in_seconds of this RestoreStatus.


        :param estimated_time_to_completion_in_seconds: The estimated_time_to_completion_in_seconds of this RestoreStatus.
        :type estimated_time_to_completion_in_seconds: int
        """

        self._estimated_time_to_completion_in_seconds = estimated_time_to_completion_in_seconds
