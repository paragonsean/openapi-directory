# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeClusterSnapshotsMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, snapshot_identifier: str=None, snapshot_arn: str=None, snapshot_type: str=None, start_time: datetime=None, end_time: datetime=None, max_records: int=None, marker: str=None, owner_account: str=None, tag_keys: List=None, tag_values: List=None, cluster_exists: bool=None, sorting_entities: List=None):
        """DescribeClusterSnapshotsMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this DescribeClusterSnapshotsMessage.
        :param snapshot_identifier: The snapshot_identifier of this DescribeClusterSnapshotsMessage.
        :param snapshot_arn: The snapshot_arn of this DescribeClusterSnapshotsMessage.
        :param snapshot_type: The snapshot_type of this DescribeClusterSnapshotsMessage.
        :param start_time: The start_time of this DescribeClusterSnapshotsMessage.
        :param end_time: The end_time of this DescribeClusterSnapshotsMessage.
        :param max_records: The max_records of this DescribeClusterSnapshotsMessage.
        :param marker: The marker of this DescribeClusterSnapshotsMessage.
        :param owner_account: The owner_account of this DescribeClusterSnapshotsMessage.
        :param tag_keys: The tag_keys of this DescribeClusterSnapshotsMessage.
        :param tag_values: The tag_values of this DescribeClusterSnapshotsMessage.
        :param cluster_exists: The cluster_exists of this DescribeClusterSnapshotsMessage.
        :param sorting_entities: The sorting_entities of this DescribeClusterSnapshotsMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'snapshot_identifier': str,
            'snapshot_arn': str,
            'snapshot_type': str,
            'start_time': datetime,
            'end_time': datetime,
            'max_records': int,
            'marker': str,
            'owner_account': str,
            'tag_keys': List,
            'tag_values': List,
            'cluster_exists': bool,
            'sorting_entities': List
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'snapshot_identifier': 'SnapshotIdentifier',
            'snapshot_arn': 'SnapshotArn',
            'snapshot_type': 'SnapshotType',
            'start_time': 'StartTime',
            'end_time': 'EndTime',
            'max_records': 'MaxRecords',
            'marker': 'Marker',
            'owner_account': 'OwnerAccount',
            'tag_keys': 'TagKeys',
            'tag_values': 'TagValues',
            'cluster_exists': 'ClusterExists',
            'sorting_entities': 'SortingEntities'
        }

        self._cluster_identifier = cluster_identifier
        self._snapshot_identifier = snapshot_identifier
        self._snapshot_arn = snapshot_arn
        self._snapshot_type = snapshot_type
        self._start_time = start_time
        self._end_time = end_time
        self._max_records = max_records
        self._marker = marker
        self._owner_account = owner_account
        self._tag_keys = tag_keys
        self._tag_values = tag_values
        self._cluster_exists = cluster_exists
        self._sorting_entities = sorting_entities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeClusterSnapshotsMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeClusterSnapshotsMessage of this DescribeClusterSnapshotsMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this DescribeClusterSnapshotsMessage.


        :return: The cluster_identifier of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this DescribeClusterSnapshotsMessage.


        :param cluster_identifier: The cluster_identifier of this DescribeClusterSnapshotsMessage.
        :type cluster_identifier: str
        """

        self._cluster_identifier = cluster_identifier

    @property
    def snapshot_identifier(self):
        """Gets the snapshot_identifier of this DescribeClusterSnapshotsMessage.


        :return: The snapshot_identifier of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._snapshot_identifier

    @snapshot_identifier.setter
    def snapshot_identifier(self, snapshot_identifier):
        """Sets the snapshot_identifier of this DescribeClusterSnapshotsMessage.


        :param snapshot_identifier: The snapshot_identifier of this DescribeClusterSnapshotsMessage.
        :type snapshot_identifier: str
        """

        self._snapshot_identifier = snapshot_identifier

    @property
    def snapshot_arn(self):
        """Gets the snapshot_arn of this DescribeClusterSnapshotsMessage.


        :return: The snapshot_arn of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._snapshot_arn

    @snapshot_arn.setter
    def snapshot_arn(self, snapshot_arn):
        """Sets the snapshot_arn of this DescribeClusterSnapshotsMessage.


        :param snapshot_arn: The snapshot_arn of this DescribeClusterSnapshotsMessage.
        :type snapshot_arn: str
        """

        self._snapshot_arn = snapshot_arn

    @property
    def snapshot_type(self):
        """Gets the snapshot_type of this DescribeClusterSnapshotsMessage.


        :return: The snapshot_type of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._snapshot_type

    @snapshot_type.setter
    def snapshot_type(self, snapshot_type):
        """Sets the snapshot_type of this DescribeClusterSnapshotsMessage.


        :param snapshot_type: The snapshot_type of this DescribeClusterSnapshotsMessage.
        :type snapshot_type: str
        """

        self._snapshot_type = snapshot_type

    @property
    def start_time(self):
        """Gets the start_time of this DescribeClusterSnapshotsMessage.


        :return: The start_time of this DescribeClusterSnapshotsMessage.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DescribeClusterSnapshotsMessage.


        :param start_time: The start_time of this DescribeClusterSnapshotsMessage.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this DescribeClusterSnapshotsMessage.


        :return: The end_time of this DescribeClusterSnapshotsMessage.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DescribeClusterSnapshotsMessage.


        :param end_time: The end_time of this DescribeClusterSnapshotsMessage.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def max_records(self):
        """Gets the max_records of this DescribeClusterSnapshotsMessage.


        :return: The max_records of this DescribeClusterSnapshotsMessage.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeClusterSnapshotsMessage.


        :param max_records: The max_records of this DescribeClusterSnapshotsMessage.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def marker(self):
        """Gets the marker of this DescribeClusterSnapshotsMessage.


        :return: The marker of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this DescribeClusterSnapshotsMessage.


        :param marker: The marker of this DescribeClusterSnapshotsMessage.
        :type marker: str
        """

        self._marker = marker

    @property
    def owner_account(self):
        """Gets the owner_account of this DescribeClusterSnapshotsMessage.


        :return: The owner_account of this DescribeClusterSnapshotsMessage.
        :rtype: str
        """
        return self._owner_account

    @owner_account.setter
    def owner_account(self, owner_account):
        """Sets the owner_account of this DescribeClusterSnapshotsMessage.


        :param owner_account: The owner_account of this DescribeClusterSnapshotsMessage.
        :type owner_account: str
        """

        self._owner_account = owner_account

    @property
    def tag_keys(self):
        """Gets the tag_keys of this DescribeClusterSnapshotsMessage.


        :return: The tag_keys of this DescribeClusterSnapshotsMessage.
        :rtype: List
        """
        return self._tag_keys

    @tag_keys.setter
    def tag_keys(self, tag_keys):
        """Sets the tag_keys of this DescribeClusterSnapshotsMessage.


        :param tag_keys: The tag_keys of this DescribeClusterSnapshotsMessage.
        :type tag_keys: List
        """

        self._tag_keys = tag_keys

    @property
    def tag_values(self):
        """Gets the tag_values of this DescribeClusterSnapshotsMessage.


        :return: The tag_values of this DescribeClusterSnapshotsMessage.
        :rtype: List
        """
        return self._tag_values

    @tag_values.setter
    def tag_values(self, tag_values):
        """Sets the tag_values of this DescribeClusterSnapshotsMessage.


        :param tag_values: The tag_values of this DescribeClusterSnapshotsMessage.
        :type tag_values: List
        """

        self._tag_values = tag_values

    @property
    def cluster_exists(self):
        """Gets the cluster_exists of this DescribeClusterSnapshotsMessage.


        :return: The cluster_exists of this DescribeClusterSnapshotsMessage.
        :rtype: bool
        """
        return self._cluster_exists

    @cluster_exists.setter
    def cluster_exists(self, cluster_exists):
        """Sets the cluster_exists of this DescribeClusterSnapshotsMessage.


        :param cluster_exists: The cluster_exists of this DescribeClusterSnapshotsMessage.
        :type cluster_exists: bool
        """

        self._cluster_exists = cluster_exists

    @property
    def sorting_entities(self):
        """Gets the sorting_entities of this DescribeClusterSnapshotsMessage.


        :return: The sorting_entities of this DescribeClusterSnapshotsMessage.
        :rtype: List
        """
        return self._sorting_entities

    @sorting_entities.setter
    def sorting_entities(self, sorting_entities):
        """Sets the sorting_entities of this DescribeClusterSnapshotsMessage.


        :param sorting_entities: The sorting_entities of this DescribeClusterSnapshotsMessage.
        :type sorting_entities: List
        """

        self._sorting_entities = sorting_entities
