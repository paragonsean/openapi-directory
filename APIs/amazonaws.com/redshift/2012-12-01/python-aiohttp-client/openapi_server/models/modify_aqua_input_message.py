# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aqua_configuration_status import AquaConfigurationStatus
from openapi_server import util


class ModifyAquaInputMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, aqua_configuration_status: AquaConfigurationStatus=None):
        """ModifyAquaInputMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this ModifyAquaInputMessage.
        :param aqua_configuration_status: The aqua_configuration_status of this ModifyAquaInputMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'aqua_configuration_status': AquaConfigurationStatus
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'aqua_configuration_status': 'AquaConfigurationStatus'
        }

        self._cluster_identifier = cluster_identifier
        self._aqua_configuration_status = aqua_configuration_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyAquaInputMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyAquaInputMessage of this ModifyAquaInputMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this ModifyAquaInputMessage.


        :return: The cluster_identifier of this ModifyAquaInputMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this ModifyAquaInputMessage.


        :param cluster_identifier: The cluster_identifier of this ModifyAquaInputMessage.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier

    @property
    def aqua_configuration_status(self):
        """Gets the aqua_configuration_status of this ModifyAquaInputMessage.


        :return: The aqua_configuration_status of this ModifyAquaInputMessage.
        :rtype: AquaConfigurationStatus
        """
        return self._aqua_configuration_status

    @aqua_configuration_status.setter
    def aqua_configuration_status(self, aqua_configuration_status):
        """Sets the aqua_configuration_status of this ModifyAquaInputMessage.


        :param aqua_configuration_status: The aqua_configuration_status of this ModifyAquaInputMessage.
        :type aqua_configuration_status: AquaConfigurationStatus
        """

        self._aqua_configuration_status = aqua_configuration_status
