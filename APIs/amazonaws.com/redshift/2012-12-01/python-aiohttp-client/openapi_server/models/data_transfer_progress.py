# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataTransferProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, current_rate_in_mega_bytes_per_second: float=None, total_data_in_mega_bytes: int=None, data_transferred_in_mega_bytes: int=None, estimated_time_to_completion_in_seconds: int=None, elapsed_time_in_seconds: int=None):
        """DataTransferProgress - a model defined in OpenAPI

        :param status: The status of this DataTransferProgress.
        :param current_rate_in_mega_bytes_per_second: The current_rate_in_mega_bytes_per_second of this DataTransferProgress.
        :param total_data_in_mega_bytes: The total_data_in_mega_bytes of this DataTransferProgress.
        :param data_transferred_in_mega_bytes: The data_transferred_in_mega_bytes of this DataTransferProgress.
        :param estimated_time_to_completion_in_seconds: The estimated_time_to_completion_in_seconds of this DataTransferProgress.
        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this DataTransferProgress.
        """
        self.openapi_types = {
            'status': str,
            'current_rate_in_mega_bytes_per_second': float,
            'total_data_in_mega_bytes': int,
            'data_transferred_in_mega_bytes': int,
            'estimated_time_to_completion_in_seconds': int,
            'elapsed_time_in_seconds': int
        }

        self.attribute_map = {
            'status': 'Status',
            'current_rate_in_mega_bytes_per_second': 'CurrentRateInMegaBytesPerSecond',
            'total_data_in_mega_bytes': 'TotalDataInMegaBytes',
            'data_transferred_in_mega_bytes': 'DataTransferredInMegaBytes',
            'estimated_time_to_completion_in_seconds': 'EstimatedTimeToCompletionInSeconds',
            'elapsed_time_in_seconds': 'ElapsedTimeInSeconds'
        }

        self._status = status
        self._current_rate_in_mega_bytes_per_second = current_rate_in_mega_bytes_per_second
        self._total_data_in_mega_bytes = total_data_in_mega_bytes
        self._data_transferred_in_mega_bytes = data_transferred_in_mega_bytes
        self._estimated_time_to_completion_in_seconds = estimated_time_to_completion_in_seconds
        self._elapsed_time_in_seconds = elapsed_time_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataTransferProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataTransferProgress of this DataTransferProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this DataTransferProgress.


        :return: The status of this DataTransferProgress.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DataTransferProgress.


        :param status: The status of this DataTransferProgress.
        :type status: str
        """

        self._status = status

    @property
    def current_rate_in_mega_bytes_per_second(self):
        """Gets the current_rate_in_mega_bytes_per_second of this DataTransferProgress.


        :return: The current_rate_in_mega_bytes_per_second of this DataTransferProgress.
        :rtype: float
        """
        return self._current_rate_in_mega_bytes_per_second

    @current_rate_in_mega_bytes_per_second.setter
    def current_rate_in_mega_bytes_per_second(self, current_rate_in_mega_bytes_per_second):
        """Sets the current_rate_in_mega_bytes_per_second of this DataTransferProgress.


        :param current_rate_in_mega_bytes_per_second: The current_rate_in_mega_bytes_per_second of this DataTransferProgress.
        :type current_rate_in_mega_bytes_per_second: float
        """

        self._current_rate_in_mega_bytes_per_second = current_rate_in_mega_bytes_per_second

    @property
    def total_data_in_mega_bytes(self):
        """Gets the total_data_in_mega_bytes of this DataTransferProgress.


        :return: The total_data_in_mega_bytes of this DataTransferProgress.
        :rtype: int
        """
        return self._total_data_in_mega_bytes

    @total_data_in_mega_bytes.setter
    def total_data_in_mega_bytes(self, total_data_in_mega_bytes):
        """Sets the total_data_in_mega_bytes of this DataTransferProgress.


        :param total_data_in_mega_bytes: The total_data_in_mega_bytes of this DataTransferProgress.
        :type total_data_in_mega_bytes: int
        """

        self._total_data_in_mega_bytes = total_data_in_mega_bytes

    @property
    def data_transferred_in_mega_bytes(self):
        """Gets the data_transferred_in_mega_bytes of this DataTransferProgress.


        :return: The data_transferred_in_mega_bytes of this DataTransferProgress.
        :rtype: int
        """
        return self._data_transferred_in_mega_bytes

    @data_transferred_in_mega_bytes.setter
    def data_transferred_in_mega_bytes(self, data_transferred_in_mega_bytes):
        """Sets the data_transferred_in_mega_bytes of this DataTransferProgress.


        :param data_transferred_in_mega_bytes: The data_transferred_in_mega_bytes of this DataTransferProgress.
        :type data_transferred_in_mega_bytes: int
        """

        self._data_transferred_in_mega_bytes = data_transferred_in_mega_bytes

    @property
    def estimated_time_to_completion_in_seconds(self):
        """Gets the estimated_time_to_completion_in_seconds of this DataTransferProgress.


        :return: The estimated_time_to_completion_in_seconds of this DataTransferProgress.
        :rtype: int
        """
        return self._estimated_time_to_completion_in_seconds

    @estimated_time_to_completion_in_seconds.setter
    def estimated_time_to_completion_in_seconds(self, estimated_time_to_completion_in_seconds):
        """Sets the estimated_time_to_completion_in_seconds of this DataTransferProgress.


        :param estimated_time_to_completion_in_seconds: The estimated_time_to_completion_in_seconds of this DataTransferProgress.
        :type estimated_time_to_completion_in_seconds: int
        """

        self._estimated_time_to_completion_in_seconds = estimated_time_to_completion_in_seconds

    @property
    def elapsed_time_in_seconds(self):
        """Gets the elapsed_time_in_seconds of this DataTransferProgress.


        :return: The elapsed_time_in_seconds of this DataTransferProgress.
        :rtype: int
        """
        return self._elapsed_time_in_seconds

    @elapsed_time_in_seconds.setter
    def elapsed_time_in_seconds(self, elapsed_time_in_seconds):
        """Sets the elapsed_time_in_seconds of this DataTransferProgress.


        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this DataTransferProgress.
        :type elapsed_time_in_seconds: int
        """

        self._elapsed_time_in_seconds = elapsed_time_in_seconds
