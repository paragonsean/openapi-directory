# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifySnapshotCopyRetentionPeriodMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, retention_period: int=None, manual: bool=None):
        """ModifySnapshotCopyRetentionPeriodMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this ModifySnapshotCopyRetentionPeriodMessage.
        :param retention_period: The retention_period of this ModifySnapshotCopyRetentionPeriodMessage.
        :param manual: The manual of this ModifySnapshotCopyRetentionPeriodMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'retention_period': int,
            'manual': bool
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'retention_period': 'RetentionPeriod',
            'manual': 'Manual'
        }

        self._cluster_identifier = cluster_identifier
        self._retention_period = retention_period
        self._manual = manual

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifySnapshotCopyRetentionPeriodMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifySnapshotCopyRetentionPeriodMessage of this ModifySnapshotCopyRetentionPeriodMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this ModifySnapshotCopyRetentionPeriodMessage.


        :return: The cluster_identifier of this ModifySnapshotCopyRetentionPeriodMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this ModifySnapshotCopyRetentionPeriodMessage.


        :param cluster_identifier: The cluster_identifier of this ModifySnapshotCopyRetentionPeriodMessage.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier

    @property
    def retention_period(self):
        """Gets the retention_period of this ModifySnapshotCopyRetentionPeriodMessage.


        :return: The retention_period of this ModifySnapshotCopyRetentionPeriodMessage.
        :rtype: int
        """
        return self._retention_period

    @retention_period.setter
    def retention_period(self, retention_period):
        """Sets the retention_period of this ModifySnapshotCopyRetentionPeriodMessage.


        :param retention_period: The retention_period of this ModifySnapshotCopyRetentionPeriodMessage.
        :type retention_period: int
        """
        if retention_period is None:
            raise ValueError("Invalid value for `retention_period`, must not be `None`")

        self._retention_period = retention_period

    @property
    def manual(self):
        """Gets the manual of this ModifySnapshotCopyRetentionPeriodMessage.


        :return: The manual of this ModifySnapshotCopyRetentionPeriodMessage.
        :rtype: bool
        """
        return self._manual

    @manual.setter
    def manual(self, manual):
        """Sets the manual of this ModifySnapshotCopyRetentionPeriodMessage.


        :param manual: The manual of this ModifySnapshotCopyRetentionPeriodMessage.
        :type manual: bool
        """

        self._manual = manual
