# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.log_destination_type import LogDestinationType
from openapi_server import util


class LoggingStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logging_enabled: bool=None, bucket_name: str=None, s3_key_prefix: str=None, last_successful_delivery_time: datetime=None, last_failure_time: datetime=None, last_failure_message: str=None, log_destination_type: LogDestinationType=None, log_exports: List=None):
        """LoggingStatus - a model defined in OpenAPI

        :param logging_enabled: The logging_enabled of this LoggingStatus.
        :param bucket_name: The bucket_name of this LoggingStatus.
        :param s3_key_prefix: The s3_key_prefix of this LoggingStatus.
        :param last_successful_delivery_time: The last_successful_delivery_time of this LoggingStatus.
        :param last_failure_time: The last_failure_time of this LoggingStatus.
        :param last_failure_message: The last_failure_message of this LoggingStatus.
        :param log_destination_type: The log_destination_type of this LoggingStatus.
        :param log_exports: The log_exports of this LoggingStatus.
        """
        self.openapi_types = {
            'logging_enabled': bool,
            'bucket_name': str,
            's3_key_prefix': str,
            'last_successful_delivery_time': datetime,
            'last_failure_time': datetime,
            'last_failure_message': str,
            'log_destination_type': LogDestinationType,
            'log_exports': List
        }

        self.attribute_map = {
            'logging_enabled': 'LoggingEnabled',
            'bucket_name': 'BucketName',
            's3_key_prefix': 'S3KeyPrefix',
            'last_successful_delivery_time': 'LastSuccessfulDeliveryTime',
            'last_failure_time': 'LastFailureTime',
            'last_failure_message': 'LastFailureMessage',
            'log_destination_type': 'LogDestinationType',
            'log_exports': 'LogExports'
        }

        self._logging_enabled = logging_enabled
        self._bucket_name = bucket_name
        self._s3_key_prefix = s3_key_prefix
        self._last_successful_delivery_time = last_successful_delivery_time
        self._last_failure_time = last_failure_time
        self._last_failure_message = last_failure_message
        self._log_destination_type = log_destination_type
        self._log_exports = log_exports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoggingStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoggingStatus of this LoggingStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logging_enabled(self):
        """Gets the logging_enabled of this LoggingStatus.


        :return: The logging_enabled of this LoggingStatus.
        :rtype: bool
        """
        return self._logging_enabled

    @logging_enabled.setter
    def logging_enabled(self, logging_enabled):
        """Sets the logging_enabled of this LoggingStatus.


        :param logging_enabled: The logging_enabled of this LoggingStatus.
        :type logging_enabled: bool
        """

        self._logging_enabled = logging_enabled

    @property
    def bucket_name(self):
        """Gets the bucket_name of this LoggingStatus.


        :return: The bucket_name of this LoggingStatus.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this LoggingStatus.


        :param bucket_name: The bucket_name of this LoggingStatus.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def s3_key_prefix(self):
        """Gets the s3_key_prefix of this LoggingStatus.


        :return: The s3_key_prefix of this LoggingStatus.
        :rtype: str
        """
        return self._s3_key_prefix

    @s3_key_prefix.setter
    def s3_key_prefix(self, s3_key_prefix):
        """Sets the s3_key_prefix of this LoggingStatus.


        :param s3_key_prefix: The s3_key_prefix of this LoggingStatus.
        :type s3_key_prefix: str
        """

        self._s3_key_prefix = s3_key_prefix

    @property
    def last_successful_delivery_time(self):
        """Gets the last_successful_delivery_time of this LoggingStatus.


        :return: The last_successful_delivery_time of this LoggingStatus.
        :rtype: datetime
        """
        return self._last_successful_delivery_time

    @last_successful_delivery_time.setter
    def last_successful_delivery_time(self, last_successful_delivery_time):
        """Sets the last_successful_delivery_time of this LoggingStatus.


        :param last_successful_delivery_time: The last_successful_delivery_time of this LoggingStatus.
        :type last_successful_delivery_time: datetime
        """

        self._last_successful_delivery_time = last_successful_delivery_time

    @property
    def last_failure_time(self):
        """Gets the last_failure_time of this LoggingStatus.


        :return: The last_failure_time of this LoggingStatus.
        :rtype: datetime
        """
        return self._last_failure_time

    @last_failure_time.setter
    def last_failure_time(self, last_failure_time):
        """Sets the last_failure_time of this LoggingStatus.


        :param last_failure_time: The last_failure_time of this LoggingStatus.
        :type last_failure_time: datetime
        """

        self._last_failure_time = last_failure_time

    @property
    def last_failure_message(self):
        """Gets the last_failure_message of this LoggingStatus.


        :return: The last_failure_message of this LoggingStatus.
        :rtype: str
        """
        return self._last_failure_message

    @last_failure_message.setter
    def last_failure_message(self, last_failure_message):
        """Sets the last_failure_message of this LoggingStatus.


        :param last_failure_message: The last_failure_message of this LoggingStatus.
        :type last_failure_message: str
        """

        self._last_failure_message = last_failure_message

    @property
    def log_destination_type(self):
        """Gets the log_destination_type of this LoggingStatus.


        :return: The log_destination_type of this LoggingStatus.
        :rtype: LogDestinationType
        """
        return self._log_destination_type

    @log_destination_type.setter
    def log_destination_type(self, log_destination_type):
        """Sets the log_destination_type of this LoggingStatus.


        :param log_destination_type: The log_destination_type of this LoggingStatus.
        :type log_destination_type: LogDestinationType
        """

        self._log_destination_type = log_destination_type

    @property
    def log_exports(self):
        """Gets the log_exports of this LoggingStatus.


        :return: The log_exports of this LoggingStatus.
        :rtype: List
        """
        return self._log_exports

    @log_exports.setter
    def log_exports(self, log_exports):
        """Sets the log_exports of this LoggingStatus.


        :param log_exports: The log_exports of this LoggingStatus.
        :type log_exports: List
        """

        self._log_exports = log_exports
