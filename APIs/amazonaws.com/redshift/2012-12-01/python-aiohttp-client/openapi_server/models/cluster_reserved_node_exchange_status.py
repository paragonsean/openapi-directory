# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reserved_node_exchange_status_type import ReservedNodeExchangeStatusType
from openapi_server import util


class ClusterReservedNodeExchangeStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reserved_node_exchange_request_id: str=None, status: ReservedNodeExchangeStatusType=None, request_time: datetime=None, source_reserved_node_id: str=None, source_reserved_node_type: str=None, source_reserved_node_count: int=None, target_reserved_node_offering_id: str=None, target_reserved_node_type: str=None, target_reserved_node_count: int=None):
        """ClusterReservedNodeExchangeStatus - a model defined in OpenAPI

        :param reserved_node_exchange_request_id: The reserved_node_exchange_request_id of this ClusterReservedNodeExchangeStatus.
        :param status: The status of this ClusterReservedNodeExchangeStatus.
        :param request_time: The request_time of this ClusterReservedNodeExchangeStatus.
        :param source_reserved_node_id: The source_reserved_node_id of this ClusterReservedNodeExchangeStatus.
        :param source_reserved_node_type: The source_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :param source_reserved_node_count: The source_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        :param target_reserved_node_offering_id: The target_reserved_node_offering_id of this ClusterReservedNodeExchangeStatus.
        :param target_reserved_node_type: The target_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :param target_reserved_node_count: The target_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        """
        self.openapi_types = {
            'reserved_node_exchange_request_id': str,
            'status': ReservedNodeExchangeStatusType,
            'request_time': datetime,
            'source_reserved_node_id': str,
            'source_reserved_node_type': str,
            'source_reserved_node_count': int,
            'target_reserved_node_offering_id': str,
            'target_reserved_node_type': str,
            'target_reserved_node_count': int
        }

        self.attribute_map = {
            'reserved_node_exchange_request_id': 'ReservedNodeExchangeRequestId',
            'status': 'Status',
            'request_time': 'RequestTime',
            'source_reserved_node_id': 'SourceReservedNodeId',
            'source_reserved_node_type': 'SourceReservedNodeType',
            'source_reserved_node_count': 'SourceReservedNodeCount',
            'target_reserved_node_offering_id': 'TargetReservedNodeOfferingId',
            'target_reserved_node_type': 'TargetReservedNodeType',
            'target_reserved_node_count': 'TargetReservedNodeCount'
        }

        self._reserved_node_exchange_request_id = reserved_node_exchange_request_id
        self._status = status
        self._request_time = request_time
        self._source_reserved_node_id = source_reserved_node_id
        self._source_reserved_node_type = source_reserved_node_type
        self._source_reserved_node_count = source_reserved_node_count
        self._target_reserved_node_offering_id = target_reserved_node_offering_id
        self._target_reserved_node_type = target_reserved_node_type
        self._target_reserved_node_count = target_reserved_node_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterReservedNodeExchangeStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cluster_ReservedNodeExchangeStatus of this ClusterReservedNodeExchangeStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reserved_node_exchange_request_id(self):
        """Gets the reserved_node_exchange_request_id of this ClusterReservedNodeExchangeStatus.


        :return: The reserved_node_exchange_request_id of this ClusterReservedNodeExchangeStatus.
        :rtype: str
        """
        return self._reserved_node_exchange_request_id

    @reserved_node_exchange_request_id.setter
    def reserved_node_exchange_request_id(self, reserved_node_exchange_request_id):
        """Sets the reserved_node_exchange_request_id of this ClusterReservedNodeExchangeStatus.


        :param reserved_node_exchange_request_id: The reserved_node_exchange_request_id of this ClusterReservedNodeExchangeStatus.
        :type reserved_node_exchange_request_id: str
        """

        self._reserved_node_exchange_request_id = reserved_node_exchange_request_id

    @property
    def status(self):
        """Gets the status of this ClusterReservedNodeExchangeStatus.


        :return: The status of this ClusterReservedNodeExchangeStatus.
        :rtype: ReservedNodeExchangeStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ClusterReservedNodeExchangeStatus.


        :param status: The status of this ClusterReservedNodeExchangeStatus.
        :type status: ReservedNodeExchangeStatusType
        """

        self._status = status

    @property
    def request_time(self):
        """Gets the request_time of this ClusterReservedNodeExchangeStatus.


        :return: The request_time of this ClusterReservedNodeExchangeStatus.
        :rtype: datetime
        """
        return self._request_time

    @request_time.setter
    def request_time(self, request_time):
        """Sets the request_time of this ClusterReservedNodeExchangeStatus.


        :param request_time: The request_time of this ClusterReservedNodeExchangeStatus.
        :type request_time: datetime
        """

        self._request_time = request_time

    @property
    def source_reserved_node_id(self):
        """Gets the source_reserved_node_id of this ClusterReservedNodeExchangeStatus.


        :return: The source_reserved_node_id of this ClusterReservedNodeExchangeStatus.
        :rtype: str
        """
        return self._source_reserved_node_id

    @source_reserved_node_id.setter
    def source_reserved_node_id(self, source_reserved_node_id):
        """Sets the source_reserved_node_id of this ClusterReservedNodeExchangeStatus.


        :param source_reserved_node_id: The source_reserved_node_id of this ClusterReservedNodeExchangeStatus.
        :type source_reserved_node_id: str
        """

        self._source_reserved_node_id = source_reserved_node_id

    @property
    def source_reserved_node_type(self):
        """Gets the source_reserved_node_type of this ClusterReservedNodeExchangeStatus.


        :return: The source_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :rtype: str
        """
        return self._source_reserved_node_type

    @source_reserved_node_type.setter
    def source_reserved_node_type(self, source_reserved_node_type):
        """Sets the source_reserved_node_type of this ClusterReservedNodeExchangeStatus.


        :param source_reserved_node_type: The source_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :type source_reserved_node_type: str
        """

        self._source_reserved_node_type = source_reserved_node_type

    @property
    def source_reserved_node_count(self):
        """Gets the source_reserved_node_count of this ClusterReservedNodeExchangeStatus.


        :return: The source_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        :rtype: int
        """
        return self._source_reserved_node_count

    @source_reserved_node_count.setter
    def source_reserved_node_count(self, source_reserved_node_count):
        """Sets the source_reserved_node_count of this ClusterReservedNodeExchangeStatus.


        :param source_reserved_node_count: The source_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        :type source_reserved_node_count: int
        """

        self._source_reserved_node_count = source_reserved_node_count

    @property
    def target_reserved_node_offering_id(self):
        """Gets the target_reserved_node_offering_id of this ClusterReservedNodeExchangeStatus.


        :return: The target_reserved_node_offering_id of this ClusterReservedNodeExchangeStatus.
        :rtype: str
        """
        return self._target_reserved_node_offering_id

    @target_reserved_node_offering_id.setter
    def target_reserved_node_offering_id(self, target_reserved_node_offering_id):
        """Sets the target_reserved_node_offering_id of this ClusterReservedNodeExchangeStatus.


        :param target_reserved_node_offering_id: The target_reserved_node_offering_id of this ClusterReservedNodeExchangeStatus.
        :type target_reserved_node_offering_id: str
        """

        self._target_reserved_node_offering_id = target_reserved_node_offering_id

    @property
    def target_reserved_node_type(self):
        """Gets the target_reserved_node_type of this ClusterReservedNodeExchangeStatus.


        :return: The target_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :rtype: str
        """
        return self._target_reserved_node_type

    @target_reserved_node_type.setter
    def target_reserved_node_type(self, target_reserved_node_type):
        """Sets the target_reserved_node_type of this ClusterReservedNodeExchangeStatus.


        :param target_reserved_node_type: The target_reserved_node_type of this ClusterReservedNodeExchangeStatus.
        :type target_reserved_node_type: str
        """

        self._target_reserved_node_type = target_reserved_node_type

    @property
    def target_reserved_node_count(self):
        """Gets the target_reserved_node_count of this ClusterReservedNodeExchangeStatus.


        :return: The target_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        :rtype: int
        """
        return self._target_reserved_node_count

    @target_reserved_node_count.setter
    def target_reserved_node_count(self, target_reserved_node_count):
        """Sets the target_reserved_node_count of this ClusterReservedNodeExchangeStatus.


        :param target_reserved_node_count: The target_reserved_node_count of this ClusterReservedNodeExchangeStatus.
        :type target_reserved_node_count: int
        """

        self._target_reserved_node_count = target_reserved_node_count
