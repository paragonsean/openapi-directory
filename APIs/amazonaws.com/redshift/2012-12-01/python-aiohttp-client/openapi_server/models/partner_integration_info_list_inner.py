# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.partner_integration_status import PartnerIntegrationStatus
from openapi_server import util


class PartnerIntegrationInfoListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database_name: str=None, partner_name: str=None, status: PartnerIntegrationStatus=None, status_message: str=None, created_at: datetime=None, updated_at: datetime=None):
        """PartnerIntegrationInfoListInner - a model defined in OpenAPI

        :param database_name: The database_name of this PartnerIntegrationInfoListInner.
        :param partner_name: The partner_name of this PartnerIntegrationInfoListInner.
        :param status: The status of this PartnerIntegrationInfoListInner.
        :param status_message: The status_message of this PartnerIntegrationInfoListInner.
        :param created_at: The created_at of this PartnerIntegrationInfoListInner.
        :param updated_at: The updated_at of this PartnerIntegrationInfoListInner.
        """
        self.openapi_types = {
            'database_name': str,
            'partner_name': str,
            'status': PartnerIntegrationStatus,
            'status_message': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'database_name': 'DatabaseName',
            'partner_name': 'PartnerName',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'created_at': 'CreatedAt',
            'updated_at': 'UpdatedAt'
        }

        self._database_name = database_name
        self._partner_name = partner_name
        self._status = status
        self._status_message = status_message
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PartnerIntegrationInfoListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PartnerIntegrationInfoList_inner of this PartnerIntegrationInfoListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_name(self):
        """Gets the database_name of this PartnerIntegrationInfoListInner.


        :return: The database_name of this PartnerIntegrationInfoListInner.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this PartnerIntegrationInfoListInner.


        :param database_name: The database_name of this PartnerIntegrationInfoListInner.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def partner_name(self):
        """Gets the partner_name of this PartnerIntegrationInfoListInner.


        :return: The partner_name of this PartnerIntegrationInfoListInner.
        :rtype: str
        """
        return self._partner_name

    @partner_name.setter
    def partner_name(self, partner_name):
        """Sets the partner_name of this PartnerIntegrationInfoListInner.


        :param partner_name: The partner_name of this PartnerIntegrationInfoListInner.
        :type partner_name: str
        """

        self._partner_name = partner_name

    @property
    def status(self):
        """Gets the status of this PartnerIntegrationInfoListInner.


        :return: The status of this PartnerIntegrationInfoListInner.
        :rtype: PartnerIntegrationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PartnerIntegrationInfoListInner.


        :param status: The status of this PartnerIntegrationInfoListInner.
        :type status: PartnerIntegrationStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this PartnerIntegrationInfoListInner.


        :return: The status_message of this PartnerIntegrationInfoListInner.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this PartnerIntegrationInfoListInner.


        :param status_message: The status_message of this PartnerIntegrationInfoListInner.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def created_at(self):
        """Gets the created_at of this PartnerIntegrationInfoListInner.


        :return: The created_at of this PartnerIntegrationInfoListInner.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PartnerIntegrationInfoListInner.


        :param created_at: The created_at of this PartnerIntegrationInfoListInner.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this PartnerIntegrationInfoListInner.


        :return: The updated_at of this PartnerIntegrationInfoListInner.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PartnerIntegrationInfoListInner.


        :param updated_at: The updated_at of this PartnerIntegrationInfoListInner.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
