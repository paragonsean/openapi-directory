# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeReservedNodeExchangeStatusInputMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reserved_node_id: str=None, reserved_node_exchange_request_id: str=None, max_records: int=None, marker: str=None):
        """DescribeReservedNodeExchangeStatusInputMessage - a model defined in OpenAPI

        :param reserved_node_id: The reserved_node_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :param reserved_node_exchange_request_id: The reserved_node_exchange_request_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :param max_records: The max_records of this DescribeReservedNodeExchangeStatusInputMessage.
        :param marker: The marker of this DescribeReservedNodeExchangeStatusInputMessage.
        """
        self.openapi_types = {
            'reserved_node_id': str,
            'reserved_node_exchange_request_id': str,
            'max_records': int,
            'marker': str
        }

        self.attribute_map = {
            'reserved_node_id': 'ReservedNodeId',
            'reserved_node_exchange_request_id': 'ReservedNodeExchangeRequestId',
            'max_records': 'MaxRecords',
            'marker': 'Marker'
        }

        self._reserved_node_id = reserved_node_id
        self._reserved_node_exchange_request_id = reserved_node_exchange_request_id
        self._max_records = max_records
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeReservedNodeExchangeStatusInputMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeReservedNodeExchangeStatusInputMessage of this DescribeReservedNodeExchangeStatusInputMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reserved_node_id(self):
        """Gets the reserved_node_id of this DescribeReservedNodeExchangeStatusInputMessage.


        :return: The reserved_node_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :rtype: str
        """
        return self._reserved_node_id

    @reserved_node_id.setter
    def reserved_node_id(self, reserved_node_id):
        """Sets the reserved_node_id of this DescribeReservedNodeExchangeStatusInputMessage.


        :param reserved_node_id: The reserved_node_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :type reserved_node_id: str
        """

        self._reserved_node_id = reserved_node_id

    @property
    def reserved_node_exchange_request_id(self):
        """Gets the reserved_node_exchange_request_id of this DescribeReservedNodeExchangeStatusInputMessage.


        :return: The reserved_node_exchange_request_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :rtype: str
        """
        return self._reserved_node_exchange_request_id

    @reserved_node_exchange_request_id.setter
    def reserved_node_exchange_request_id(self, reserved_node_exchange_request_id):
        """Sets the reserved_node_exchange_request_id of this DescribeReservedNodeExchangeStatusInputMessage.


        :param reserved_node_exchange_request_id: The reserved_node_exchange_request_id of this DescribeReservedNodeExchangeStatusInputMessage.
        :type reserved_node_exchange_request_id: str
        """

        self._reserved_node_exchange_request_id = reserved_node_exchange_request_id

    @property
    def max_records(self):
        """Gets the max_records of this DescribeReservedNodeExchangeStatusInputMessage.


        :return: The max_records of this DescribeReservedNodeExchangeStatusInputMessage.
        :rtype: int
        """
        return self._max_records

    @max_records.setter
    def max_records(self, max_records):
        """Sets the max_records of this DescribeReservedNodeExchangeStatusInputMessage.


        :param max_records: The max_records of this DescribeReservedNodeExchangeStatusInputMessage.
        :type max_records: int
        """

        self._max_records = max_records

    @property
    def marker(self):
        """Gets the marker of this DescribeReservedNodeExchangeStatusInputMessage.


        :return: The marker of this DescribeReservedNodeExchangeStatusInputMessage.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this DescribeReservedNodeExchangeStatusInputMessage.


        :param marker: The marker of this DescribeReservedNodeExchangeStatusInputMessage.
        :type marker: str
        """

        self._marker = marker
