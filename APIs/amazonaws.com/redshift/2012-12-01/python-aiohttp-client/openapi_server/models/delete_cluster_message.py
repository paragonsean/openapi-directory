# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteClusterMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, skip_final_cluster_snapshot: bool=None, final_cluster_snapshot_identifier: str=None, final_cluster_snapshot_retention_period: int=None):
        """DeleteClusterMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this DeleteClusterMessage.
        :param skip_final_cluster_snapshot: The skip_final_cluster_snapshot of this DeleteClusterMessage.
        :param final_cluster_snapshot_identifier: The final_cluster_snapshot_identifier of this DeleteClusterMessage.
        :param final_cluster_snapshot_retention_period: The final_cluster_snapshot_retention_period of this DeleteClusterMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'skip_final_cluster_snapshot': bool,
            'final_cluster_snapshot_identifier': str,
            'final_cluster_snapshot_retention_period': int
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'skip_final_cluster_snapshot': 'SkipFinalClusterSnapshot',
            'final_cluster_snapshot_identifier': 'FinalClusterSnapshotIdentifier',
            'final_cluster_snapshot_retention_period': 'FinalClusterSnapshotRetentionPeriod'
        }

        self._cluster_identifier = cluster_identifier
        self._skip_final_cluster_snapshot = skip_final_cluster_snapshot
        self._final_cluster_snapshot_identifier = final_cluster_snapshot_identifier
        self._final_cluster_snapshot_retention_period = final_cluster_snapshot_retention_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteClusterMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteClusterMessage of this DeleteClusterMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this DeleteClusterMessage.


        :return: The cluster_identifier of this DeleteClusterMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this DeleteClusterMessage.


        :param cluster_identifier: The cluster_identifier of this DeleteClusterMessage.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier

    @property
    def skip_final_cluster_snapshot(self):
        """Gets the skip_final_cluster_snapshot of this DeleteClusterMessage.


        :return: The skip_final_cluster_snapshot of this DeleteClusterMessage.
        :rtype: bool
        """
        return self._skip_final_cluster_snapshot

    @skip_final_cluster_snapshot.setter
    def skip_final_cluster_snapshot(self, skip_final_cluster_snapshot):
        """Sets the skip_final_cluster_snapshot of this DeleteClusterMessage.


        :param skip_final_cluster_snapshot: The skip_final_cluster_snapshot of this DeleteClusterMessage.
        :type skip_final_cluster_snapshot: bool
        """

        self._skip_final_cluster_snapshot = skip_final_cluster_snapshot

    @property
    def final_cluster_snapshot_identifier(self):
        """Gets the final_cluster_snapshot_identifier of this DeleteClusterMessage.


        :return: The final_cluster_snapshot_identifier of this DeleteClusterMessage.
        :rtype: str
        """
        return self._final_cluster_snapshot_identifier

    @final_cluster_snapshot_identifier.setter
    def final_cluster_snapshot_identifier(self, final_cluster_snapshot_identifier):
        """Sets the final_cluster_snapshot_identifier of this DeleteClusterMessage.


        :param final_cluster_snapshot_identifier: The final_cluster_snapshot_identifier of this DeleteClusterMessage.
        :type final_cluster_snapshot_identifier: str
        """

        self._final_cluster_snapshot_identifier = final_cluster_snapshot_identifier

    @property
    def final_cluster_snapshot_retention_period(self):
        """Gets the final_cluster_snapshot_retention_period of this DeleteClusterMessage.


        :return: The final_cluster_snapshot_retention_period of this DeleteClusterMessage.
        :rtype: int
        """
        return self._final_cluster_snapshot_retention_period

    @final_cluster_snapshot_retention_period.setter
    def final_cluster_snapshot_retention_period(self, final_cluster_snapshot_retention_period):
        """Sets the final_cluster_snapshot_retention_period of this DeleteClusterMessage.


        :param final_cluster_snapshot_retention_period: The final_cluster_snapshot_retention_period of this DeleteClusterMessage.
        :type final_cluster_snapshot_retention_period: int
        """

        self._final_cluster_snapshot_retention_period = final_cluster_snapshot_retention_period
