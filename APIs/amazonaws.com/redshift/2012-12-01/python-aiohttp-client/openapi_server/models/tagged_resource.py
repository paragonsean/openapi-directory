# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tagged_resource_tag import TaggedResourceTag
from openapi_server import util


class TaggedResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag: TaggedResourceTag=None, resource_name: str=None, resource_type: str=None):
        """TaggedResource - a model defined in OpenAPI

        :param tag: The tag of this TaggedResource.
        :param resource_name: The resource_name of this TaggedResource.
        :param resource_type: The resource_type of this TaggedResource.
        """
        self.openapi_types = {
            'tag': TaggedResourceTag,
            'resource_name': str,
            'resource_type': str
        }

        self.attribute_map = {
            'tag': 'Tag',
            'resource_name': 'ResourceName',
            'resource_type': 'ResourceType'
        }

        self._tag = tag
        self._resource_name = resource_name
        self._resource_type = resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaggedResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaggedResource of this TaggedResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag(self):
        """Gets the tag of this TaggedResource.


        :return: The tag of this TaggedResource.
        :rtype: TaggedResourceTag
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TaggedResource.


        :param tag: The tag of this TaggedResource.
        :type tag: TaggedResourceTag
        """

        self._tag = tag

    @property
    def resource_name(self):
        """Gets the resource_name of this TaggedResource.


        :return: The resource_name of this TaggedResource.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this TaggedResource.


        :param resource_name: The resource_name of this TaggedResource.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def resource_type(self):
        """Gets the resource_type of this TaggedResource.


        :return: The resource_type of this TaggedResource.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this TaggedResource.


        :param resource_type: The resource_type of this TaggedResource.
        :type resource_type: str
        """

        self._resource_type = resource_type
