# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IPRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, cidrip: str=None, tags: List=None):
        """IPRange - a model defined in OpenAPI

        :param status: The status of this IPRange.
        :param cidrip: The cidrip of this IPRange.
        :param tags: The tags of this IPRange.
        """
        self.openapi_types = {
            'status': str,
            'cidrip': str,
            'tags': List
        }

        self.attribute_map = {
            'status': 'Status',
            'cidrip': 'CIDRIP',
            'tags': 'Tags'
        }

        self._status = status
        self._cidrip = cidrip
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IPRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IPRange of this IPRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this IPRange.


        :return: The status of this IPRange.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IPRange.


        :param status: The status of this IPRange.
        :type status: str
        """

        self._status = status

    @property
    def cidrip(self):
        """Gets the cidrip of this IPRange.


        :return: The cidrip of this IPRange.
        :rtype: str
        """
        return self._cidrip

    @cidrip.setter
    def cidrip(self, cidrip):
        """Sets the cidrip of this IPRange.


        :param cidrip: The cidrip of this IPRange.
        :type cidrip: str
        """

        self._cidrip = cidrip

    @property
    def tags(self):
        """Gets the tags of this IPRange.


        :return: The tags of this IPRange.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this IPRange.


        :param tags: The tags of this IPRange.
        :type tags: List
        """

        self._tags = tags
