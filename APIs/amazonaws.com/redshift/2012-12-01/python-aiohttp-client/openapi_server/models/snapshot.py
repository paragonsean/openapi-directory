# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Snapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_identifier: str=None, cluster_identifier: str=None, snapshot_create_time: datetime=None, status: str=None, port: int=None, availability_zone: str=None, cluster_create_time: datetime=None, master_username: str=None, cluster_version: str=None, engine_full_version: str=None, snapshot_type: str=None, node_type: str=None, number_of_nodes: int=None, db_name: str=None, vpc_id: str=None, encrypted: bool=None, kms_key_id: str=None, encrypted_with_hsm: bool=None, accounts_with_restore_access: List=None, owner_account: str=None, total_backup_size_in_mega_bytes: float=None, actual_incremental_backup_size_in_mega_bytes: float=None, backup_progress_in_mega_bytes: float=None, current_backup_rate_in_mega_bytes_per_second: float=None, estimated_seconds_to_completion: int=None, elapsed_time_in_seconds: int=None, source_region: str=None, tags: List=None, restorable_node_types: List=None, enhanced_vpc_routing: bool=None, maintenance_track_name: str=None, manual_snapshot_retention_period: int=None, manual_snapshot_remaining_days: int=None, snapshot_retention_start_time: datetime=None):
        """Snapshot - a model defined in OpenAPI

        :param snapshot_identifier: The snapshot_identifier of this Snapshot.
        :param cluster_identifier: The cluster_identifier of this Snapshot.
        :param snapshot_create_time: The snapshot_create_time of this Snapshot.
        :param status: The status of this Snapshot.
        :param port: The port of this Snapshot.
        :param availability_zone: The availability_zone of this Snapshot.
        :param cluster_create_time: The cluster_create_time of this Snapshot.
        :param master_username: The master_username of this Snapshot.
        :param cluster_version: The cluster_version of this Snapshot.
        :param engine_full_version: The engine_full_version of this Snapshot.
        :param snapshot_type: The snapshot_type of this Snapshot.
        :param node_type: The node_type of this Snapshot.
        :param number_of_nodes: The number_of_nodes of this Snapshot.
        :param db_name: The db_name of this Snapshot.
        :param vpc_id: The vpc_id of this Snapshot.
        :param encrypted: The encrypted of this Snapshot.
        :param kms_key_id: The kms_key_id of this Snapshot.
        :param encrypted_with_hsm: The encrypted_with_hsm of this Snapshot.
        :param accounts_with_restore_access: The accounts_with_restore_access of this Snapshot.
        :param owner_account: The owner_account of this Snapshot.
        :param total_backup_size_in_mega_bytes: The total_backup_size_in_mega_bytes of this Snapshot.
        :param actual_incremental_backup_size_in_mega_bytes: The actual_incremental_backup_size_in_mega_bytes of this Snapshot.
        :param backup_progress_in_mega_bytes: The backup_progress_in_mega_bytes of this Snapshot.
        :param current_backup_rate_in_mega_bytes_per_second: The current_backup_rate_in_mega_bytes_per_second of this Snapshot.
        :param estimated_seconds_to_completion: The estimated_seconds_to_completion of this Snapshot.
        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this Snapshot.
        :param source_region: The source_region of this Snapshot.
        :param tags: The tags of this Snapshot.
        :param restorable_node_types: The restorable_node_types of this Snapshot.
        :param enhanced_vpc_routing: The enhanced_vpc_routing of this Snapshot.
        :param maintenance_track_name: The maintenance_track_name of this Snapshot.
        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this Snapshot.
        :param manual_snapshot_remaining_days: The manual_snapshot_remaining_days of this Snapshot.
        :param snapshot_retention_start_time: The snapshot_retention_start_time of this Snapshot.
        """
        self.openapi_types = {
            'snapshot_identifier': str,
            'cluster_identifier': str,
            'snapshot_create_time': datetime,
            'status': str,
            'port': int,
            'availability_zone': str,
            'cluster_create_time': datetime,
            'master_username': str,
            'cluster_version': str,
            'engine_full_version': str,
            'snapshot_type': str,
            'node_type': str,
            'number_of_nodes': int,
            'db_name': str,
            'vpc_id': str,
            'encrypted': bool,
            'kms_key_id': str,
            'encrypted_with_hsm': bool,
            'accounts_with_restore_access': List,
            'owner_account': str,
            'total_backup_size_in_mega_bytes': float,
            'actual_incremental_backup_size_in_mega_bytes': float,
            'backup_progress_in_mega_bytes': float,
            'current_backup_rate_in_mega_bytes_per_second': float,
            'estimated_seconds_to_completion': int,
            'elapsed_time_in_seconds': int,
            'source_region': str,
            'tags': List,
            'restorable_node_types': List,
            'enhanced_vpc_routing': bool,
            'maintenance_track_name': str,
            'manual_snapshot_retention_period': int,
            'manual_snapshot_remaining_days': int,
            'snapshot_retention_start_time': datetime
        }

        self.attribute_map = {
            'snapshot_identifier': 'SnapshotIdentifier',
            'cluster_identifier': 'ClusterIdentifier',
            'snapshot_create_time': 'SnapshotCreateTime',
            'status': 'Status',
            'port': 'Port',
            'availability_zone': 'AvailabilityZone',
            'cluster_create_time': 'ClusterCreateTime',
            'master_username': 'MasterUsername',
            'cluster_version': 'ClusterVersion',
            'engine_full_version': 'EngineFullVersion',
            'snapshot_type': 'SnapshotType',
            'node_type': 'NodeType',
            'number_of_nodes': 'NumberOfNodes',
            'db_name': 'DBName',
            'vpc_id': 'VpcId',
            'encrypted': 'Encrypted',
            'kms_key_id': 'KmsKeyId',
            'encrypted_with_hsm': 'EncryptedWithHSM',
            'accounts_with_restore_access': 'AccountsWithRestoreAccess',
            'owner_account': 'OwnerAccount',
            'total_backup_size_in_mega_bytes': 'TotalBackupSizeInMegaBytes',
            'actual_incremental_backup_size_in_mega_bytes': 'ActualIncrementalBackupSizeInMegaBytes',
            'backup_progress_in_mega_bytes': 'BackupProgressInMegaBytes',
            'current_backup_rate_in_mega_bytes_per_second': 'CurrentBackupRateInMegaBytesPerSecond',
            'estimated_seconds_to_completion': 'EstimatedSecondsToCompletion',
            'elapsed_time_in_seconds': 'ElapsedTimeInSeconds',
            'source_region': 'SourceRegion',
            'tags': 'Tags',
            'restorable_node_types': 'RestorableNodeTypes',
            'enhanced_vpc_routing': 'EnhancedVpcRouting',
            'maintenance_track_name': 'MaintenanceTrackName',
            'manual_snapshot_retention_period': 'ManualSnapshotRetentionPeriod',
            'manual_snapshot_remaining_days': 'ManualSnapshotRemainingDays',
            'snapshot_retention_start_time': 'SnapshotRetentionStartTime'
        }

        self._snapshot_identifier = snapshot_identifier
        self._cluster_identifier = cluster_identifier
        self._snapshot_create_time = snapshot_create_time
        self._status = status
        self._port = port
        self._availability_zone = availability_zone
        self._cluster_create_time = cluster_create_time
        self._master_username = master_username
        self._cluster_version = cluster_version
        self._engine_full_version = engine_full_version
        self._snapshot_type = snapshot_type
        self._node_type = node_type
        self._number_of_nodes = number_of_nodes
        self._db_name = db_name
        self._vpc_id = vpc_id
        self._encrypted = encrypted
        self._kms_key_id = kms_key_id
        self._encrypted_with_hsm = encrypted_with_hsm
        self._accounts_with_restore_access = accounts_with_restore_access
        self._owner_account = owner_account
        self._total_backup_size_in_mega_bytes = total_backup_size_in_mega_bytes
        self._actual_incremental_backup_size_in_mega_bytes = actual_incremental_backup_size_in_mega_bytes
        self._backup_progress_in_mega_bytes = backup_progress_in_mega_bytes
        self._current_backup_rate_in_mega_bytes_per_second = current_backup_rate_in_mega_bytes_per_second
        self._estimated_seconds_to_completion = estimated_seconds_to_completion
        self._elapsed_time_in_seconds = elapsed_time_in_seconds
        self._source_region = source_region
        self._tags = tags
        self._restorable_node_types = restorable_node_types
        self._enhanced_vpc_routing = enhanced_vpc_routing
        self._maintenance_track_name = maintenance_track_name
        self._manual_snapshot_retention_period = manual_snapshot_retention_period
        self._manual_snapshot_remaining_days = manual_snapshot_remaining_days
        self._snapshot_retention_start_time = snapshot_retention_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Snapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Snapshot of this Snapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_identifier(self):
        """Gets the snapshot_identifier of this Snapshot.


        :return: The snapshot_identifier of this Snapshot.
        :rtype: str
        """
        return self._snapshot_identifier

    @snapshot_identifier.setter
    def snapshot_identifier(self, snapshot_identifier):
        """Sets the snapshot_identifier of this Snapshot.


        :param snapshot_identifier: The snapshot_identifier of this Snapshot.
        :type snapshot_identifier: str
        """

        self._snapshot_identifier = snapshot_identifier

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this Snapshot.


        :return: The cluster_identifier of this Snapshot.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this Snapshot.


        :param cluster_identifier: The cluster_identifier of this Snapshot.
        :type cluster_identifier: str
        """

        self._cluster_identifier = cluster_identifier

    @property
    def snapshot_create_time(self):
        """Gets the snapshot_create_time of this Snapshot.


        :return: The snapshot_create_time of this Snapshot.
        :rtype: datetime
        """
        return self._snapshot_create_time

    @snapshot_create_time.setter
    def snapshot_create_time(self, snapshot_create_time):
        """Sets the snapshot_create_time of this Snapshot.


        :param snapshot_create_time: The snapshot_create_time of this Snapshot.
        :type snapshot_create_time: datetime
        """

        self._snapshot_create_time = snapshot_create_time

    @property
    def status(self):
        """Gets the status of this Snapshot.


        :return: The status of this Snapshot.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Snapshot.


        :param status: The status of this Snapshot.
        :type status: str
        """

        self._status = status

    @property
    def port(self):
        """Gets the port of this Snapshot.


        :return: The port of this Snapshot.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this Snapshot.


        :param port: The port of this Snapshot.
        :type port: int
        """

        self._port = port

    @property
    def availability_zone(self):
        """Gets the availability_zone of this Snapshot.


        :return: The availability_zone of this Snapshot.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this Snapshot.


        :param availability_zone: The availability_zone of this Snapshot.
        :type availability_zone: str
        """

        self._availability_zone = availability_zone

    @property
    def cluster_create_time(self):
        """Gets the cluster_create_time of this Snapshot.


        :return: The cluster_create_time of this Snapshot.
        :rtype: datetime
        """
        return self._cluster_create_time

    @cluster_create_time.setter
    def cluster_create_time(self, cluster_create_time):
        """Sets the cluster_create_time of this Snapshot.


        :param cluster_create_time: The cluster_create_time of this Snapshot.
        :type cluster_create_time: datetime
        """

        self._cluster_create_time = cluster_create_time

    @property
    def master_username(self):
        """Gets the master_username of this Snapshot.


        :return: The master_username of this Snapshot.
        :rtype: str
        """
        return self._master_username

    @master_username.setter
    def master_username(self, master_username):
        """Sets the master_username of this Snapshot.


        :param master_username: The master_username of this Snapshot.
        :type master_username: str
        """

        self._master_username = master_username

    @property
    def cluster_version(self):
        """Gets the cluster_version of this Snapshot.


        :return: The cluster_version of this Snapshot.
        :rtype: str
        """
        return self._cluster_version

    @cluster_version.setter
    def cluster_version(self, cluster_version):
        """Sets the cluster_version of this Snapshot.


        :param cluster_version: The cluster_version of this Snapshot.
        :type cluster_version: str
        """

        self._cluster_version = cluster_version

    @property
    def engine_full_version(self):
        """Gets the engine_full_version of this Snapshot.


        :return: The engine_full_version of this Snapshot.
        :rtype: str
        """
        return self._engine_full_version

    @engine_full_version.setter
    def engine_full_version(self, engine_full_version):
        """Sets the engine_full_version of this Snapshot.


        :param engine_full_version: The engine_full_version of this Snapshot.
        :type engine_full_version: str
        """

        self._engine_full_version = engine_full_version

    @property
    def snapshot_type(self):
        """Gets the snapshot_type of this Snapshot.


        :return: The snapshot_type of this Snapshot.
        :rtype: str
        """
        return self._snapshot_type

    @snapshot_type.setter
    def snapshot_type(self, snapshot_type):
        """Sets the snapshot_type of this Snapshot.


        :param snapshot_type: The snapshot_type of this Snapshot.
        :type snapshot_type: str
        """

        self._snapshot_type = snapshot_type

    @property
    def node_type(self):
        """Gets the node_type of this Snapshot.


        :return: The node_type of this Snapshot.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this Snapshot.


        :param node_type: The node_type of this Snapshot.
        :type node_type: str
        """

        self._node_type = node_type

    @property
    def number_of_nodes(self):
        """Gets the number_of_nodes of this Snapshot.


        :return: The number_of_nodes of this Snapshot.
        :rtype: int
        """
        return self._number_of_nodes

    @number_of_nodes.setter
    def number_of_nodes(self, number_of_nodes):
        """Sets the number_of_nodes of this Snapshot.


        :param number_of_nodes: The number_of_nodes of this Snapshot.
        :type number_of_nodes: int
        """

        self._number_of_nodes = number_of_nodes

    @property
    def db_name(self):
        """Gets the db_name of this Snapshot.


        :return: The db_name of this Snapshot.
        :rtype: str
        """
        return self._db_name

    @db_name.setter
    def db_name(self, db_name):
        """Sets the db_name of this Snapshot.


        :param db_name: The db_name of this Snapshot.
        :type db_name: str
        """

        self._db_name = db_name

    @property
    def vpc_id(self):
        """Gets the vpc_id of this Snapshot.


        :return: The vpc_id of this Snapshot.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this Snapshot.


        :param vpc_id: The vpc_id of this Snapshot.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def encrypted(self):
        """Gets the encrypted of this Snapshot.


        :return: The encrypted of this Snapshot.
        :rtype: bool
        """
        return self._encrypted

    @encrypted.setter
    def encrypted(self, encrypted):
        """Sets the encrypted of this Snapshot.


        :param encrypted: The encrypted of this Snapshot.
        :type encrypted: bool
        """

        self._encrypted = encrypted

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this Snapshot.


        :return: The kms_key_id of this Snapshot.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this Snapshot.


        :param kms_key_id: The kms_key_id of this Snapshot.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def encrypted_with_hsm(self):
        """Gets the encrypted_with_hsm of this Snapshot.


        :return: The encrypted_with_hsm of this Snapshot.
        :rtype: bool
        """
        return self._encrypted_with_hsm

    @encrypted_with_hsm.setter
    def encrypted_with_hsm(self, encrypted_with_hsm):
        """Sets the encrypted_with_hsm of this Snapshot.


        :param encrypted_with_hsm: The encrypted_with_hsm of this Snapshot.
        :type encrypted_with_hsm: bool
        """

        self._encrypted_with_hsm = encrypted_with_hsm

    @property
    def accounts_with_restore_access(self):
        """Gets the accounts_with_restore_access of this Snapshot.


        :return: The accounts_with_restore_access of this Snapshot.
        :rtype: List
        """
        return self._accounts_with_restore_access

    @accounts_with_restore_access.setter
    def accounts_with_restore_access(self, accounts_with_restore_access):
        """Sets the accounts_with_restore_access of this Snapshot.


        :param accounts_with_restore_access: The accounts_with_restore_access of this Snapshot.
        :type accounts_with_restore_access: List
        """

        self._accounts_with_restore_access = accounts_with_restore_access

    @property
    def owner_account(self):
        """Gets the owner_account of this Snapshot.


        :return: The owner_account of this Snapshot.
        :rtype: str
        """
        return self._owner_account

    @owner_account.setter
    def owner_account(self, owner_account):
        """Sets the owner_account of this Snapshot.


        :param owner_account: The owner_account of this Snapshot.
        :type owner_account: str
        """

        self._owner_account = owner_account

    @property
    def total_backup_size_in_mega_bytes(self):
        """Gets the total_backup_size_in_mega_bytes of this Snapshot.


        :return: The total_backup_size_in_mega_bytes of this Snapshot.
        :rtype: float
        """
        return self._total_backup_size_in_mega_bytes

    @total_backup_size_in_mega_bytes.setter
    def total_backup_size_in_mega_bytes(self, total_backup_size_in_mega_bytes):
        """Sets the total_backup_size_in_mega_bytes of this Snapshot.


        :param total_backup_size_in_mega_bytes: The total_backup_size_in_mega_bytes of this Snapshot.
        :type total_backup_size_in_mega_bytes: float
        """

        self._total_backup_size_in_mega_bytes = total_backup_size_in_mega_bytes

    @property
    def actual_incremental_backup_size_in_mega_bytes(self):
        """Gets the actual_incremental_backup_size_in_mega_bytes of this Snapshot.


        :return: The actual_incremental_backup_size_in_mega_bytes of this Snapshot.
        :rtype: float
        """
        return self._actual_incremental_backup_size_in_mega_bytes

    @actual_incremental_backup_size_in_mega_bytes.setter
    def actual_incremental_backup_size_in_mega_bytes(self, actual_incremental_backup_size_in_mega_bytes):
        """Sets the actual_incremental_backup_size_in_mega_bytes of this Snapshot.


        :param actual_incremental_backup_size_in_mega_bytes: The actual_incremental_backup_size_in_mega_bytes of this Snapshot.
        :type actual_incremental_backup_size_in_mega_bytes: float
        """

        self._actual_incremental_backup_size_in_mega_bytes = actual_incremental_backup_size_in_mega_bytes

    @property
    def backup_progress_in_mega_bytes(self):
        """Gets the backup_progress_in_mega_bytes of this Snapshot.


        :return: The backup_progress_in_mega_bytes of this Snapshot.
        :rtype: float
        """
        return self._backup_progress_in_mega_bytes

    @backup_progress_in_mega_bytes.setter
    def backup_progress_in_mega_bytes(self, backup_progress_in_mega_bytes):
        """Sets the backup_progress_in_mega_bytes of this Snapshot.


        :param backup_progress_in_mega_bytes: The backup_progress_in_mega_bytes of this Snapshot.
        :type backup_progress_in_mega_bytes: float
        """

        self._backup_progress_in_mega_bytes = backup_progress_in_mega_bytes

    @property
    def current_backup_rate_in_mega_bytes_per_second(self):
        """Gets the current_backup_rate_in_mega_bytes_per_second of this Snapshot.


        :return: The current_backup_rate_in_mega_bytes_per_second of this Snapshot.
        :rtype: float
        """
        return self._current_backup_rate_in_mega_bytes_per_second

    @current_backup_rate_in_mega_bytes_per_second.setter
    def current_backup_rate_in_mega_bytes_per_second(self, current_backup_rate_in_mega_bytes_per_second):
        """Sets the current_backup_rate_in_mega_bytes_per_second of this Snapshot.


        :param current_backup_rate_in_mega_bytes_per_second: The current_backup_rate_in_mega_bytes_per_second of this Snapshot.
        :type current_backup_rate_in_mega_bytes_per_second: float
        """

        self._current_backup_rate_in_mega_bytes_per_second = current_backup_rate_in_mega_bytes_per_second

    @property
    def estimated_seconds_to_completion(self):
        """Gets the estimated_seconds_to_completion of this Snapshot.


        :return: The estimated_seconds_to_completion of this Snapshot.
        :rtype: int
        """
        return self._estimated_seconds_to_completion

    @estimated_seconds_to_completion.setter
    def estimated_seconds_to_completion(self, estimated_seconds_to_completion):
        """Sets the estimated_seconds_to_completion of this Snapshot.


        :param estimated_seconds_to_completion: The estimated_seconds_to_completion of this Snapshot.
        :type estimated_seconds_to_completion: int
        """

        self._estimated_seconds_to_completion = estimated_seconds_to_completion

    @property
    def elapsed_time_in_seconds(self):
        """Gets the elapsed_time_in_seconds of this Snapshot.


        :return: The elapsed_time_in_seconds of this Snapshot.
        :rtype: int
        """
        return self._elapsed_time_in_seconds

    @elapsed_time_in_seconds.setter
    def elapsed_time_in_seconds(self, elapsed_time_in_seconds):
        """Sets the elapsed_time_in_seconds of this Snapshot.


        :param elapsed_time_in_seconds: The elapsed_time_in_seconds of this Snapshot.
        :type elapsed_time_in_seconds: int
        """

        self._elapsed_time_in_seconds = elapsed_time_in_seconds

    @property
    def source_region(self):
        """Gets the source_region of this Snapshot.


        :return: The source_region of this Snapshot.
        :rtype: str
        """
        return self._source_region

    @source_region.setter
    def source_region(self, source_region):
        """Sets the source_region of this Snapshot.


        :param source_region: The source_region of this Snapshot.
        :type source_region: str
        """

        self._source_region = source_region

    @property
    def tags(self):
        """Gets the tags of this Snapshot.


        :return: The tags of this Snapshot.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Snapshot.


        :param tags: The tags of this Snapshot.
        :type tags: List
        """

        self._tags = tags

    @property
    def restorable_node_types(self):
        """Gets the restorable_node_types of this Snapshot.


        :return: The restorable_node_types of this Snapshot.
        :rtype: List
        """
        return self._restorable_node_types

    @restorable_node_types.setter
    def restorable_node_types(self, restorable_node_types):
        """Sets the restorable_node_types of this Snapshot.


        :param restorable_node_types: The restorable_node_types of this Snapshot.
        :type restorable_node_types: List
        """

        self._restorable_node_types = restorable_node_types

    @property
    def enhanced_vpc_routing(self):
        """Gets the enhanced_vpc_routing of this Snapshot.


        :return: The enhanced_vpc_routing of this Snapshot.
        :rtype: bool
        """
        return self._enhanced_vpc_routing

    @enhanced_vpc_routing.setter
    def enhanced_vpc_routing(self, enhanced_vpc_routing):
        """Sets the enhanced_vpc_routing of this Snapshot.


        :param enhanced_vpc_routing: The enhanced_vpc_routing of this Snapshot.
        :type enhanced_vpc_routing: bool
        """

        self._enhanced_vpc_routing = enhanced_vpc_routing

    @property
    def maintenance_track_name(self):
        """Gets the maintenance_track_name of this Snapshot.


        :return: The maintenance_track_name of this Snapshot.
        :rtype: str
        """
        return self._maintenance_track_name

    @maintenance_track_name.setter
    def maintenance_track_name(self, maintenance_track_name):
        """Sets the maintenance_track_name of this Snapshot.


        :param maintenance_track_name: The maintenance_track_name of this Snapshot.
        :type maintenance_track_name: str
        """

        self._maintenance_track_name = maintenance_track_name

    @property
    def manual_snapshot_retention_period(self):
        """Gets the manual_snapshot_retention_period of this Snapshot.


        :return: The manual_snapshot_retention_period of this Snapshot.
        :rtype: int
        """
        return self._manual_snapshot_retention_period

    @manual_snapshot_retention_period.setter
    def manual_snapshot_retention_period(self, manual_snapshot_retention_period):
        """Sets the manual_snapshot_retention_period of this Snapshot.


        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this Snapshot.
        :type manual_snapshot_retention_period: int
        """

        self._manual_snapshot_retention_period = manual_snapshot_retention_period

    @property
    def manual_snapshot_remaining_days(self):
        """Gets the manual_snapshot_remaining_days of this Snapshot.


        :return: The manual_snapshot_remaining_days of this Snapshot.
        :rtype: int
        """
        return self._manual_snapshot_remaining_days

    @manual_snapshot_remaining_days.setter
    def manual_snapshot_remaining_days(self, manual_snapshot_remaining_days):
        """Sets the manual_snapshot_remaining_days of this Snapshot.


        :param manual_snapshot_remaining_days: The manual_snapshot_remaining_days of this Snapshot.
        :type manual_snapshot_remaining_days: int
        """

        self._manual_snapshot_remaining_days = manual_snapshot_remaining_days

    @property
    def snapshot_retention_start_time(self):
        """Gets the snapshot_retention_start_time of this Snapshot.


        :return: The snapshot_retention_start_time of this Snapshot.
        :rtype: datetime
        """
        return self._snapshot_retention_start_time

    @snapshot_retention_start_time.setter
    def snapshot_retention_start_time(self, snapshot_retention_start_time):
        """Sets the snapshot_retention_start_time of this Snapshot.


        :param snapshot_retention_start_time: The snapshot_retention_start_time of this Snapshot.
        :type snapshot_retention_start_time: datetime
        """

        self._snapshot_retention_start_time = snapshot_retention_start_time
