# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyClusterSnapshotMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_snapshot_identifier: str=None, source_snapshot_cluster_identifier: str=None, target_snapshot_identifier: str=None, manual_snapshot_retention_period: int=None):
        """CopyClusterSnapshotMessage - a model defined in OpenAPI

        :param source_snapshot_identifier: The source_snapshot_identifier of this CopyClusterSnapshotMessage.
        :param source_snapshot_cluster_identifier: The source_snapshot_cluster_identifier of this CopyClusterSnapshotMessage.
        :param target_snapshot_identifier: The target_snapshot_identifier of this CopyClusterSnapshotMessage.
        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this CopyClusterSnapshotMessage.
        """
        self.openapi_types = {
            'source_snapshot_identifier': str,
            'source_snapshot_cluster_identifier': str,
            'target_snapshot_identifier': str,
            'manual_snapshot_retention_period': int
        }

        self.attribute_map = {
            'source_snapshot_identifier': 'SourceSnapshotIdentifier',
            'source_snapshot_cluster_identifier': 'SourceSnapshotClusterIdentifier',
            'target_snapshot_identifier': 'TargetSnapshotIdentifier',
            'manual_snapshot_retention_period': 'ManualSnapshotRetentionPeriod'
        }

        self._source_snapshot_identifier = source_snapshot_identifier
        self._source_snapshot_cluster_identifier = source_snapshot_cluster_identifier
        self._target_snapshot_identifier = target_snapshot_identifier
        self._manual_snapshot_retention_period = manual_snapshot_retention_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyClusterSnapshotMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyClusterSnapshotMessage of this CopyClusterSnapshotMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_snapshot_identifier(self):
        """Gets the source_snapshot_identifier of this CopyClusterSnapshotMessage.


        :return: The source_snapshot_identifier of this CopyClusterSnapshotMessage.
        :rtype: str
        """
        return self._source_snapshot_identifier

    @source_snapshot_identifier.setter
    def source_snapshot_identifier(self, source_snapshot_identifier):
        """Sets the source_snapshot_identifier of this CopyClusterSnapshotMessage.


        :param source_snapshot_identifier: The source_snapshot_identifier of this CopyClusterSnapshotMessage.
        :type source_snapshot_identifier: str
        """
        if source_snapshot_identifier is None:
            raise ValueError("Invalid value for `source_snapshot_identifier`, must not be `None`")

        self._source_snapshot_identifier = source_snapshot_identifier

    @property
    def source_snapshot_cluster_identifier(self):
        """Gets the source_snapshot_cluster_identifier of this CopyClusterSnapshotMessage.


        :return: The source_snapshot_cluster_identifier of this CopyClusterSnapshotMessage.
        :rtype: str
        """
        return self._source_snapshot_cluster_identifier

    @source_snapshot_cluster_identifier.setter
    def source_snapshot_cluster_identifier(self, source_snapshot_cluster_identifier):
        """Sets the source_snapshot_cluster_identifier of this CopyClusterSnapshotMessage.


        :param source_snapshot_cluster_identifier: The source_snapshot_cluster_identifier of this CopyClusterSnapshotMessage.
        :type source_snapshot_cluster_identifier: str
        """

        self._source_snapshot_cluster_identifier = source_snapshot_cluster_identifier

    @property
    def target_snapshot_identifier(self):
        """Gets the target_snapshot_identifier of this CopyClusterSnapshotMessage.


        :return: The target_snapshot_identifier of this CopyClusterSnapshotMessage.
        :rtype: str
        """
        return self._target_snapshot_identifier

    @target_snapshot_identifier.setter
    def target_snapshot_identifier(self, target_snapshot_identifier):
        """Sets the target_snapshot_identifier of this CopyClusterSnapshotMessage.


        :param target_snapshot_identifier: The target_snapshot_identifier of this CopyClusterSnapshotMessage.
        :type target_snapshot_identifier: str
        """
        if target_snapshot_identifier is None:
            raise ValueError("Invalid value for `target_snapshot_identifier`, must not be `None`")

        self._target_snapshot_identifier = target_snapshot_identifier

    @property
    def manual_snapshot_retention_period(self):
        """Gets the manual_snapshot_retention_period of this CopyClusterSnapshotMessage.


        :return: The manual_snapshot_retention_period of this CopyClusterSnapshotMessage.
        :rtype: int
        """
        return self._manual_snapshot_retention_period

    @manual_snapshot_retention_period.setter
    def manual_snapshot_retention_period(self, manual_snapshot_retention_period):
        """Sets the manual_snapshot_retention_period of this CopyClusterSnapshotMessage.


        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this CopyClusterSnapshotMessage.
        :type manual_snapshot_retention_period: int
        """

        self._manual_snapshot_retention_period = manual_snapshot_retention_period
