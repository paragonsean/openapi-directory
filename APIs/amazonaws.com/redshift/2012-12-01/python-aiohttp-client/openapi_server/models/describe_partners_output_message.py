# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribePartnersOutputMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, partner_integration_info_list: List=None):
        """DescribePartnersOutputMessage - a model defined in OpenAPI

        :param partner_integration_info_list: The partner_integration_info_list of this DescribePartnersOutputMessage.
        """
        self.openapi_types = {
            'partner_integration_info_list': List
        }

        self.attribute_map = {
            'partner_integration_info_list': 'PartnerIntegrationInfoList'
        }

        self._partner_integration_info_list = partner_integration_info_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribePartnersOutputMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribePartnersOutputMessage of this DescribePartnersOutputMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def partner_integration_info_list(self):
        """Gets the partner_integration_info_list of this DescribePartnersOutputMessage.


        :return: The partner_integration_info_list of this DescribePartnersOutputMessage.
        :rtype: List
        """
        return self._partner_integration_info_list

    @partner_integration_info_list.setter
    def partner_integration_info_list(self, partner_integration_info_list):
        """Sets the partner_integration_info_list of this DescribePartnersOutputMessage.


        :param partner_integration_info_list: The partner_integration_info_list of this DescribePartnersOutputMessage.
        :type partner_integration_info_list: List
        """

        self._partner_integration_info_list = partner_integration_info_list
