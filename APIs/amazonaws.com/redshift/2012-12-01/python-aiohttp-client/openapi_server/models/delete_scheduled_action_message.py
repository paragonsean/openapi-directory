# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteScheduledActionMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scheduled_action_name: str=None):
        """DeleteScheduledActionMessage - a model defined in OpenAPI

        :param scheduled_action_name: The scheduled_action_name of this DeleteScheduledActionMessage.
        """
        self.openapi_types = {
            'scheduled_action_name': str
        }

        self.attribute_map = {
            'scheduled_action_name': 'ScheduledActionName'
        }

        self._scheduled_action_name = scheduled_action_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteScheduledActionMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteScheduledActionMessage of this DeleteScheduledActionMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scheduled_action_name(self):
        """Gets the scheduled_action_name of this DeleteScheduledActionMessage.


        :return: The scheduled_action_name of this DeleteScheduledActionMessage.
        :rtype: str
        """
        return self._scheduled_action_name

    @scheduled_action_name.setter
    def scheduled_action_name(self, scheduled_action_name):
        """Sets the scheduled_action_name of this DeleteScheduledActionMessage.


        :param scheduled_action_name: The scheduled_action_name of this DeleteScheduledActionMessage.
        :type scheduled_action_name: str
        """
        if scheduled_action_name is None:
            raise ValueError("Invalid value for `scheduled_action_name`, must not be `None`")

        self._scheduled_action_name = scheduled_action_name
