# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MaintenanceTrack(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maintenance_track_name: str=None, database_version: str=None, update_targets: List=None):
        """MaintenanceTrack - a model defined in OpenAPI

        :param maintenance_track_name: The maintenance_track_name of this MaintenanceTrack.
        :param database_version: The database_version of this MaintenanceTrack.
        :param update_targets: The update_targets of this MaintenanceTrack.
        """
        self.openapi_types = {
            'maintenance_track_name': str,
            'database_version': str,
            'update_targets': List
        }

        self.attribute_map = {
            'maintenance_track_name': 'MaintenanceTrackName',
            'database_version': 'DatabaseVersion',
            'update_targets': 'UpdateTargets'
        }

        self._maintenance_track_name = maintenance_track_name
        self._database_version = database_version
        self._update_targets = update_targets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceTrack':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceTrack of this MaintenanceTrack.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maintenance_track_name(self):
        """Gets the maintenance_track_name of this MaintenanceTrack.


        :return: The maintenance_track_name of this MaintenanceTrack.
        :rtype: str
        """
        return self._maintenance_track_name

    @maintenance_track_name.setter
    def maintenance_track_name(self, maintenance_track_name):
        """Sets the maintenance_track_name of this MaintenanceTrack.


        :param maintenance_track_name: The maintenance_track_name of this MaintenanceTrack.
        :type maintenance_track_name: str
        """

        self._maintenance_track_name = maintenance_track_name

    @property
    def database_version(self):
        """Gets the database_version of this MaintenanceTrack.


        :return: The database_version of this MaintenanceTrack.
        :rtype: str
        """
        return self._database_version

    @database_version.setter
    def database_version(self, database_version):
        """Sets the database_version of this MaintenanceTrack.


        :param database_version: The database_version of this MaintenanceTrack.
        :type database_version: str
        """

        self._database_version = database_version

    @property
    def update_targets(self):
        """Gets the update_targets of this MaintenanceTrack.


        :return: The update_targets of this MaintenanceTrack.
        :rtype: List
        """
        return self._update_targets

    @update_targets.setter
    def update_targets(self, update_targets):
        """Sets the update_targets of this MaintenanceTrack.


        :param update_targets: The update_targets of this MaintenanceTrack.
        :type update_targets: List
        """

        self._update_targets = update_targets
