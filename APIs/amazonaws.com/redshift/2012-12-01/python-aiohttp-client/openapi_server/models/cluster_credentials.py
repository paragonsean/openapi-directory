# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_user: str=None, db_password: str=None, expiration: datetime=None):
        """ClusterCredentials - a model defined in OpenAPI

        :param db_user: The db_user of this ClusterCredentials.
        :param db_password: The db_password of this ClusterCredentials.
        :param expiration: The expiration of this ClusterCredentials.
        """
        self.openapi_types = {
            'db_user': str,
            'db_password': str,
            'expiration': datetime
        }

        self.attribute_map = {
            'db_user': 'DbUser',
            'db_password': 'DbPassword',
            'expiration': 'Expiration'
        }

        self._db_user = db_user
        self._db_password = db_password
        self._expiration = expiration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterCredentials of this ClusterCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_user(self):
        """Gets the db_user of this ClusterCredentials.


        :return: The db_user of this ClusterCredentials.
        :rtype: str
        """
        return self._db_user

    @db_user.setter
    def db_user(self, db_user):
        """Sets the db_user of this ClusterCredentials.


        :param db_user: The db_user of this ClusterCredentials.
        :type db_user: str
        """

        self._db_user = db_user

    @property
    def db_password(self):
        """Gets the db_password of this ClusterCredentials.


        :return: The db_password of this ClusterCredentials.
        :rtype: str
        """
        return self._db_password

    @db_password.setter
    def db_password(self, db_password):
        """Sets the db_password of this ClusterCredentials.


        :param db_password: The db_password of this ClusterCredentials.
        :type db_password: str
        """

        self._db_password = db_password

    @property
    def expiration(self):
        """Gets the expiration of this ClusterCredentials.


        :return: The expiration of this ClusterCredentials.
        :rtype: datetime
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this ClusterCredentials.


        :param expiration: The expiration of this ClusterCredentials.
        :type expiration: datetime
        """

        self._expiration = expiration
