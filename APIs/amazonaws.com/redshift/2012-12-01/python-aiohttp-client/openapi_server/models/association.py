# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Association(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_domain_certificate_arn: str=None, custom_domain_certificate_expiry_date: datetime=None, certificate_associations: List=None):
        """Association - a model defined in OpenAPI

        :param custom_domain_certificate_arn: The custom_domain_certificate_arn of this Association.
        :param custom_domain_certificate_expiry_date: The custom_domain_certificate_expiry_date of this Association.
        :param certificate_associations: The certificate_associations of this Association.
        """
        self.openapi_types = {
            'custom_domain_certificate_arn': str,
            'custom_domain_certificate_expiry_date': datetime,
            'certificate_associations': List
        }

        self.attribute_map = {
            'custom_domain_certificate_arn': 'CustomDomainCertificateArn',
            'custom_domain_certificate_expiry_date': 'CustomDomainCertificateExpiryDate',
            'certificate_associations': 'CertificateAssociations'
        }

        self._custom_domain_certificate_arn = custom_domain_certificate_arn
        self._custom_domain_certificate_expiry_date = custom_domain_certificate_expiry_date
        self._certificate_associations = certificate_associations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Association':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Association of this Association.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_domain_certificate_arn(self):
        """Gets the custom_domain_certificate_arn of this Association.


        :return: The custom_domain_certificate_arn of this Association.
        :rtype: str
        """
        return self._custom_domain_certificate_arn

    @custom_domain_certificate_arn.setter
    def custom_domain_certificate_arn(self, custom_domain_certificate_arn):
        """Sets the custom_domain_certificate_arn of this Association.


        :param custom_domain_certificate_arn: The custom_domain_certificate_arn of this Association.
        :type custom_domain_certificate_arn: str
        """

        self._custom_domain_certificate_arn = custom_domain_certificate_arn

    @property
    def custom_domain_certificate_expiry_date(self):
        """Gets the custom_domain_certificate_expiry_date of this Association.


        :return: The custom_domain_certificate_expiry_date of this Association.
        :rtype: datetime
        """
        return self._custom_domain_certificate_expiry_date

    @custom_domain_certificate_expiry_date.setter
    def custom_domain_certificate_expiry_date(self, custom_domain_certificate_expiry_date):
        """Sets the custom_domain_certificate_expiry_date of this Association.


        :param custom_domain_certificate_expiry_date: The custom_domain_certificate_expiry_date of this Association.
        :type custom_domain_certificate_expiry_date: datetime
        """

        self._custom_domain_certificate_expiry_date = custom_domain_certificate_expiry_date

    @property
    def certificate_associations(self):
        """Gets the certificate_associations of this Association.


        :return: The certificate_associations of this Association.
        :rtype: List
        """
        return self._certificate_associations

    @certificate_associations.setter
    def certificate_associations(self, certificate_associations):
        """Sets the certificate_associations of this Association.


        :param certificate_associations: The certificate_associations of this Association.
        :type certificate_associations: List
        """

        self._certificate_associations = certificate_associations
