# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateClusterSnapshotMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_identifier: str=None, cluster_identifier: str=None, manual_snapshot_retention_period: int=None, tags: List=None):
        """CreateClusterSnapshotMessage - a model defined in OpenAPI

        :param snapshot_identifier: The snapshot_identifier of this CreateClusterSnapshotMessage.
        :param cluster_identifier: The cluster_identifier of this CreateClusterSnapshotMessage.
        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this CreateClusterSnapshotMessage.
        :param tags: The tags of this CreateClusterSnapshotMessage.
        """
        self.openapi_types = {
            'snapshot_identifier': str,
            'cluster_identifier': str,
            'manual_snapshot_retention_period': int,
            'tags': List
        }

        self.attribute_map = {
            'snapshot_identifier': 'SnapshotIdentifier',
            'cluster_identifier': 'ClusterIdentifier',
            'manual_snapshot_retention_period': 'ManualSnapshotRetentionPeriod',
            'tags': 'Tags'
        }

        self._snapshot_identifier = snapshot_identifier
        self._cluster_identifier = cluster_identifier
        self._manual_snapshot_retention_period = manual_snapshot_retention_period
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterSnapshotMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterSnapshotMessage of this CreateClusterSnapshotMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_identifier(self):
        """Gets the snapshot_identifier of this CreateClusterSnapshotMessage.


        :return: The snapshot_identifier of this CreateClusterSnapshotMessage.
        :rtype: str
        """
        return self._snapshot_identifier

    @snapshot_identifier.setter
    def snapshot_identifier(self, snapshot_identifier):
        """Sets the snapshot_identifier of this CreateClusterSnapshotMessage.


        :param snapshot_identifier: The snapshot_identifier of this CreateClusterSnapshotMessage.
        :type snapshot_identifier: str
        """
        if snapshot_identifier is None:
            raise ValueError("Invalid value for `snapshot_identifier`, must not be `None`")

        self._snapshot_identifier = snapshot_identifier

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this CreateClusterSnapshotMessage.


        :return: The cluster_identifier of this CreateClusterSnapshotMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this CreateClusterSnapshotMessage.


        :param cluster_identifier: The cluster_identifier of this CreateClusterSnapshotMessage.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier

    @property
    def manual_snapshot_retention_period(self):
        """Gets the manual_snapshot_retention_period of this CreateClusterSnapshotMessage.


        :return: The manual_snapshot_retention_period of this CreateClusterSnapshotMessage.
        :rtype: int
        """
        return self._manual_snapshot_retention_period

    @manual_snapshot_retention_period.setter
    def manual_snapshot_retention_period(self, manual_snapshot_retention_period):
        """Sets the manual_snapshot_retention_period of this CreateClusterSnapshotMessage.


        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this CreateClusterSnapshotMessage.
        :type manual_snapshot_retention_period: int
        """

        self._manual_snapshot_retention_period = manual_snapshot_retention_period

    @property
    def tags(self):
        """Gets the tags of this CreateClusterSnapshotMessage.


        :return: The tags of this CreateClusterSnapshotMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateClusterSnapshotMessage.


        :param tags: The tags of this CreateClusterSnapshotMessage.
        :type tags: List
        """

        self._tags = tags
