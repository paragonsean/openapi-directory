# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeleteClusterSnapshotsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identifiers: List=None):
        """BatchDeleteClusterSnapshotsRequest - a model defined in OpenAPI

        :param identifiers: The identifiers of this BatchDeleteClusterSnapshotsRequest.
        """
        self.openapi_types = {
            'identifiers': List
        }

        self.attribute_map = {
            'identifiers': 'Identifiers'
        }

        self._identifiers = identifiers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeleteClusterSnapshotsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeleteClusterSnapshotsRequest of this BatchDeleteClusterSnapshotsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifiers(self):
        """Gets the identifiers of this BatchDeleteClusterSnapshotsRequest.


        :return: The identifiers of this BatchDeleteClusterSnapshotsRequest.
        :rtype: List
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this BatchDeleteClusterSnapshotsRequest.


        :param identifiers: The identifiers of this BatchDeleteClusterSnapshotsRequest.
        :type identifiers: List
        """
        if identifiers is None:
            raise ValueError("Invalid value for `identifiers`, must not be `None`")

        self._identifiers = identifiers
