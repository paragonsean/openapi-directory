# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResetClusterParameterGroupMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameter_group_name: str=None, reset_all_parameters: bool=None, parameters: List=None):
        """ResetClusterParameterGroupMessage - a model defined in OpenAPI

        :param parameter_group_name: The parameter_group_name of this ResetClusterParameterGroupMessage.
        :param reset_all_parameters: The reset_all_parameters of this ResetClusterParameterGroupMessage.
        :param parameters: The parameters of this ResetClusterParameterGroupMessage.
        """
        self.openapi_types = {
            'parameter_group_name': str,
            'reset_all_parameters': bool,
            'parameters': List
        }

        self.attribute_map = {
            'parameter_group_name': 'ParameterGroupName',
            'reset_all_parameters': 'ResetAllParameters',
            'parameters': 'Parameters'
        }

        self._parameter_group_name = parameter_group_name
        self._reset_all_parameters = reset_all_parameters
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResetClusterParameterGroupMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResetClusterParameterGroupMessage of this ResetClusterParameterGroupMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameter_group_name(self):
        """Gets the parameter_group_name of this ResetClusterParameterGroupMessage.


        :return: The parameter_group_name of this ResetClusterParameterGroupMessage.
        :rtype: str
        """
        return self._parameter_group_name

    @parameter_group_name.setter
    def parameter_group_name(self, parameter_group_name):
        """Sets the parameter_group_name of this ResetClusterParameterGroupMessage.


        :param parameter_group_name: The parameter_group_name of this ResetClusterParameterGroupMessage.
        :type parameter_group_name: str
        """
        if parameter_group_name is None:
            raise ValueError("Invalid value for `parameter_group_name`, must not be `None`")

        self._parameter_group_name = parameter_group_name

    @property
    def reset_all_parameters(self):
        """Gets the reset_all_parameters of this ResetClusterParameterGroupMessage.


        :return: The reset_all_parameters of this ResetClusterParameterGroupMessage.
        :rtype: bool
        """
        return self._reset_all_parameters

    @reset_all_parameters.setter
    def reset_all_parameters(self, reset_all_parameters):
        """Sets the reset_all_parameters of this ResetClusterParameterGroupMessage.


        :param reset_all_parameters: The reset_all_parameters of this ResetClusterParameterGroupMessage.
        :type reset_all_parameters: bool
        """

        self._reset_all_parameters = reset_all_parameters

    @property
    def parameters(self):
        """Gets the parameters of this ResetClusterParameterGroupMessage.


        :return: The parameters of this ResetClusterParameterGroupMessage.
        :rtype: List
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ResetClusterParameterGroupMessage.


        :param parameters: The parameters of this ResetClusterParameterGroupMessage.
        :type parameters: List
        """

        self._parameters = parameters
