# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifyClusterSnapshotScheduleMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None, schedule_identifier: str=None, disassociate_schedule: bool=None):
        """ModifyClusterSnapshotScheduleMessage - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this ModifyClusterSnapshotScheduleMessage.
        :param schedule_identifier: The schedule_identifier of this ModifyClusterSnapshotScheduleMessage.
        :param disassociate_schedule: The disassociate_schedule of this ModifyClusterSnapshotScheduleMessage.
        """
        self.openapi_types = {
            'cluster_identifier': str,
            'schedule_identifier': str,
            'disassociate_schedule': bool
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier',
            'schedule_identifier': 'ScheduleIdentifier',
            'disassociate_schedule': 'DisassociateSchedule'
        }

        self._cluster_identifier = cluster_identifier
        self._schedule_identifier = schedule_identifier
        self._disassociate_schedule = disassociate_schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyClusterSnapshotScheduleMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyClusterSnapshotScheduleMessage of this ModifyClusterSnapshotScheduleMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this ModifyClusterSnapshotScheduleMessage.


        :return: The cluster_identifier of this ModifyClusterSnapshotScheduleMessage.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this ModifyClusterSnapshotScheduleMessage.


        :param cluster_identifier: The cluster_identifier of this ModifyClusterSnapshotScheduleMessage.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier

    @property
    def schedule_identifier(self):
        """Gets the schedule_identifier of this ModifyClusterSnapshotScheduleMessage.


        :return: The schedule_identifier of this ModifyClusterSnapshotScheduleMessage.
        :rtype: str
        """
        return self._schedule_identifier

    @schedule_identifier.setter
    def schedule_identifier(self, schedule_identifier):
        """Sets the schedule_identifier of this ModifyClusterSnapshotScheduleMessage.


        :param schedule_identifier: The schedule_identifier of this ModifyClusterSnapshotScheduleMessage.
        :type schedule_identifier: str
        """

        self._schedule_identifier = schedule_identifier

    @property
    def disassociate_schedule(self):
        """Gets the disassociate_schedule of this ModifyClusterSnapshotScheduleMessage.


        :return: The disassociate_schedule of this ModifyClusterSnapshotScheduleMessage.
        :rtype: bool
        """
        return self._disassociate_schedule

    @disassociate_schedule.setter
    def disassociate_schedule(self, disassociate_schedule):
        """Sets the disassociate_schedule of this ModifyClusterSnapshotScheduleMessage.


        :param disassociate_schedule: The disassociate_schedule of this ModifyClusterSnapshotScheduleMessage.
        :type disassociate_schedule: bool
        """

        self._disassociate_schedule = disassociate_schedule
