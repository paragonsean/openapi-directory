# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accept_reserved_node_exchange_output_message_exchanged_reserved_node import AcceptReservedNodeExchangeOutputMessageExchangedReservedNode
from openapi_server import util


class AcceptReservedNodeExchangeOutputMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exchanged_reserved_node: AcceptReservedNodeExchangeOutputMessageExchangedReservedNode=None):
        """AcceptReservedNodeExchangeOutputMessage - a model defined in OpenAPI

        :param exchanged_reserved_node: The exchanged_reserved_node of this AcceptReservedNodeExchangeOutputMessage.
        """
        self.openapi_types = {
            'exchanged_reserved_node': AcceptReservedNodeExchangeOutputMessageExchangedReservedNode
        }

        self.attribute_map = {
            'exchanged_reserved_node': 'ExchangedReservedNode'
        }

        self._exchanged_reserved_node = exchanged_reserved_node

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceptReservedNodeExchangeOutputMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceptReservedNodeExchangeOutputMessage of this AcceptReservedNodeExchangeOutputMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exchanged_reserved_node(self):
        """Gets the exchanged_reserved_node of this AcceptReservedNodeExchangeOutputMessage.


        :return: The exchanged_reserved_node of this AcceptReservedNodeExchangeOutputMessage.
        :rtype: AcceptReservedNodeExchangeOutputMessageExchangedReservedNode
        """
        return self._exchanged_reserved_node

    @exchanged_reserved_node.setter
    def exchanged_reserved_node(self, exchanged_reserved_node):
        """Sets the exchanged_reserved_node of this AcceptReservedNodeExchangeOutputMessage.


        :param exchanged_reserved_node: The exchanged_reserved_node of this AcceptReservedNodeExchangeOutputMessage.
        :type exchanged_reserved_node: AcceptReservedNodeExchangeOutputMessageExchangedReservedNode
        """

        self._exchanged_reserved_node = exchanged_reserved_node
