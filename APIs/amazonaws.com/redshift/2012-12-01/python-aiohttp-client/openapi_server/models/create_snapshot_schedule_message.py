# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateSnapshotScheduleMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_definitions: List=None, schedule_identifier: str=None, schedule_description: str=None, tags: List=None, dry_run: bool=None, next_invocations: int=None):
        """CreateSnapshotScheduleMessage - a model defined in OpenAPI

        :param schedule_definitions: The schedule_definitions of this CreateSnapshotScheduleMessage.
        :param schedule_identifier: The schedule_identifier of this CreateSnapshotScheduleMessage.
        :param schedule_description: The schedule_description of this CreateSnapshotScheduleMessage.
        :param tags: The tags of this CreateSnapshotScheduleMessage.
        :param dry_run: The dry_run of this CreateSnapshotScheduleMessage.
        :param next_invocations: The next_invocations of this CreateSnapshotScheduleMessage.
        """
        self.openapi_types = {
            'schedule_definitions': List,
            'schedule_identifier': str,
            'schedule_description': str,
            'tags': List,
            'dry_run': bool,
            'next_invocations': int
        }

        self.attribute_map = {
            'schedule_definitions': 'ScheduleDefinitions',
            'schedule_identifier': 'ScheduleIdentifier',
            'schedule_description': 'ScheduleDescription',
            'tags': 'Tags',
            'dry_run': 'DryRun',
            'next_invocations': 'NextInvocations'
        }

        self._schedule_definitions = schedule_definitions
        self._schedule_identifier = schedule_identifier
        self._schedule_description = schedule_description
        self._tags = tags
        self._dry_run = dry_run
        self._next_invocations = next_invocations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSnapshotScheduleMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSnapshotScheduleMessage of this CreateSnapshotScheduleMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_definitions(self):
        """Gets the schedule_definitions of this CreateSnapshotScheduleMessage.


        :return: The schedule_definitions of this CreateSnapshotScheduleMessage.
        :rtype: List
        """
        return self._schedule_definitions

    @schedule_definitions.setter
    def schedule_definitions(self, schedule_definitions):
        """Sets the schedule_definitions of this CreateSnapshotScheduleMessage.


        :param schedule_definitions: The schedule_definitions of this CreateSnapshotScheduleMessage.
        :type schedule_definitions: List
        """

        self._schedule_definitions = schedule_definitions

    @property
    def schedule_identifier(self):
        """Gets the schedule_identifier of this CreateSnapshotScheduleMessage.


        :return: The schedule_identifier of this CreateSnapshotScheduleMessage.
        :rtype: str
        """
        return self._schedule_identifier

    @schedule_identifier.setter
    def schedule_identifier(self, schedule_identifier):
        """Sets the schedule_identifier of this CreateSnapshotScheduleMessage.


        :param schedule_identifier: The schedule_identifier of this CreateSnapshotScheduleMessage.
        :type schedule_identifier: str
        """

        self._schedule_identifier = schedule_identifier

    @property
    def schedule_description(self):
        """Gets the schedule_description of this CreateSnapshotScheduleMessage.


        :return: The schedule_description of this CreateSnapshotScheduleMessage.
        :rtype: str
        """
        return self._schedule_description

    @schedule_description.setter
    def schedule_description(self, schedule_description):
        """Sets the schedule_description of this CreateSnapshotScheduleMessage.


        :param schedule_description: The schedule_description of this CreateSnapshotScheduleMessage.
        :type schedule_description: str
        """

        self._schedule_description = schedule_description

    @property
    def tags(self):
        """Gets the tags of this CreateSnapshotScheduleMessage.


        :return: The tags of this CreateSnapshotScheduleMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateSnapshotScheduleMessage.


        :param tags: The tags of this CreateSnapshotScheduleMessage.
        :type tags: List
        """

        self._tags = tags

    @property
    def dry_run(self):
        """Gets the dry_run of this CreateSnapshotScheduleMessage.


        :return: The dry_run of this CreateSnapshotScheduleMessage.
        :rtype: bool
        """
        return self._dry_run

    @dry_run.setter
    def dry_run(self, dry_run):
        """Sets the dry_run of this CreateSnapshotScheduleMessage.


        :param dry_run: The dry_run of this CreateSnapshotScheduleMessage.
        :type dry_run: bool
        """

        self._dry_run = dry_run

    @property
    def next_invocations(self):
        """Gets the next_invocations of this CreateSnapshotScheduleMessage.


        :return: The next_invocations of this CreateSnapshotScheduleMessage.
        :rtype: int
        """
        return self._next_invocations

    @next_invocations.setter
    def next_invocations(self, next_invocations):
        """Sets the next_invocations of this CreateSnapshotScheduleMessage.


        :param next_invocations: The next_invocations of this CreateSnapshotScheduleMessage.
        :type next_invocations: int
        """

        self._next_invocations = next_invocations
