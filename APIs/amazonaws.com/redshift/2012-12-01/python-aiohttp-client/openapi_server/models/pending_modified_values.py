# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PendingModifiedValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, master_user_password: str=None, node_type: str=None, number_of_nodes: int=None, cluster_type: str=None, cluster_version: str=None, automated_snapshot_retention_period: int=None, cluster_identifier: str=None, publicly_accessible: bool=None, enhanced_vpc_routing: bool=None, maintenance_track_name: str=None, encryption_type: str=None):
        """PendingModifiedValues - a model defined in OpenAPI

        :param master_user_password: The master_user_password of this PendingModifiedValues.
        :param node_type: The node_type of this PendingModifiedValues.
        :param number_of_nodes: The number_of_nodes of this PendingModifiedValues.
        :param cluster_type: The cluster_type of this PendingModifiedValues.
        :param cluster_version: The cluster_version of this PendingModifiedValues.
        :param automated_snapshot_retention_period: The automated_snapshot_retention_period of this PendingModifiedValues.
        :param cluster_identifier: The cluster_identifier of this PendingModifiedValues.
        :param publicly_accessible: The publicly_accessible of this PendingModifiedValues.
        :param enhanced_vpc_routing: The enhanced_vpc_routing of this PendingModifiedValues.
        :param maintenance_track_name: The maintenance_track_name of this PendingModifiedValues.
        :param encryption_type: The encryption_type of this PendingModifiedValues.
        """
        self.openapi_types = {
            'master_user_password': str,
            'node_type': str,
            'number_of_nodes': int,
            'cluster_type': str,
            'cluster_version': str,
            'automated_snapshot_retention_period': int,
            'cluster_identifier': str,
            'publicly_accessible': bool,
            'enhanced_vpc_routing': bool,
            'maintenance_track_name': str,
            'encryption_type': str
        }

        self.attribute_map = {
            'master_user_password': 'MasterUserPassword',
            'node_type': 'NodeType',
            'number_of_nodes': 'NumberOfNodes',
            'cluster_type': 'ClusterType',
            'cluster_version': 'ClusterVersion',
            'automated_snapshot_retention_period': 'AutomatedSnapshotRetentionPeriod',
            'cluster_identifier': 'ClusterIdentifier',
            'publicly_accessible': 'PubliclyAccessible',
            'enhanced_vpc_routing': 'EnhancedVpcRouting',
            'maintenance_track_name': 'MaintenanceTrackName',
            'encryption_type': 'EncryptionType'
        }

        self._master_user_password = master_user_password
        self._node_type = node_type
        self._number_of_nodes = number_of_nodes
        self._cluster_type = cluster_type
        self._cluster_version = cluster_version
        self._automated_snapshot_retention_period = automated_snapshot_retention_period
        self._cluster_identifier = cluster_identifier
        self._publicly_accessible = publicly_accessible
        self._enhanced_vpc_routing = enhanced_vpc_routing
        self._maintenance_track_name = maintenance_track_name
        self._encryption_type = encryption_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingModifiedValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingModifiedValues of this PendingModifiedValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def master_user_password(self):
        """Gets the master_user_password of this PendingModifiedValues.


        :return: The master_user_password of this PendingModifiedValues.
        :rtype: str
        """
        return self._master_user_password

    @master_user_password.setter
    def master_user_password(self, master_user_password):
        """Sets the master_user_password of this PendingModifiedValues.


        :param master_user_password: The master_user_password of this PendingModifiedValues.
        :type master_user_password: str
        """

        self._master_user_password = master_user_password

    @property
    def node_type(self):
        """Gets the node_type of this PendingModifiedValues.


        :return: The node_type of this PendingModifiedValues.
        :rtype: str
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this PendingModifiedValues.


        :param node_type: The node_type of this PendingModifiedValues.
        :type node_type: str
        """

        self._node_type = node_type

    @property
    def number_of_nodes(self):
        """Gets the number_of_nodes of this PendingModifiedValues.


        :return: The number_of_nodes of this PendingModifiedValues.
        :rtype: int
        """
        return self._number_of_nodes

    @number_of_nodes.setter
    def number_of_nodes(self, number_of_nodes):
        """Sets the number_of_nodes of this PendingModifiedValues.


        :param number_of_nodes: The number_of_nodes of this PendingModifiedValues.
        :type number_of_nodes: int
        """

        self._number_of_nodes = number_of_nodes

    @property
    def cluster_type(self):
        """Gets the cluster_type of this PendingModifiedValues.


        :return: The cluster_type of this PendingModifiedValues.
        :rtype: str
        """
        return self._cluster_type

    @cluster_type.setter
    def cluster_type(self, cluster_type):
        """Sets the cluster_type of this PendingModifiedValues.


        :param cluster_type: The cluster_type of this PendingModifiedValues.
        :type cluster_type: str
        """

        self._cluster_type = cluster_type

    @property
    def cluster_version(self):
        """Gets the cluster_version of this PendingModifiedValues.


        :return: The cluster_version of this PendingModifiedValues.
        :rtype: str
        """
        return self._cluster_version

    @cluster_version.setter
    def cluster_version(self, cluster_version):
        """Sets the cluster_version of this PendingModifiedValues.


        :param cluster_version: The cluster_version of this PendingModifiedValues.
        :type cluster_version: str
        """

        self._cluster_version = cluster_version

    @property
    def automated_snapshot_retention_period(self):
        """Gets the automated_snapshot_retention_period of this PendingModifiedValues.


        :return: The automated_snapshot_retention_period of this PendingModifiedValues.
        :rtype: int
        """
        return self._automated_snapshot_retention_period

    @automated_snapshot_retention_period.setter
    def automated_snapshot_retention_period(self, automated_snapshot_retention_period):
        """Sets the automated_snapshot_retention_period of this PendingModifiedValues.


        :param automated_snapshot_retention_period: The automated_snapshot_retention_period of this PendingModifiedValues.
        :type automated_snapshot_retention_period: int
        """

        self._automated_snapshot_retention_period = automated_snapshot_retention_period

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this PendingModifiedValues.


        :return: The cluster_identifier of this PendingModifiedValues.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this PendingModifiedValues.


        :param cluster_identifier: The cluster_identifier of this PendingModifiedValues.
        :type cluster_identifier: str
        """

        self._cluster_identifier = cluster_identifier

    @property
    def publicly_accessible(self):
        """Gets the publicly_accessible of this PendingModifiedValues.


        :return: The publicly_accessible of this PendingModifiedValues.
        :rtype: bool
        """
        return self._publicly_accessible

    @publicly_accessible.setter
    def publicly_accessible(self, publicly_accessible):
        """Sets the publicly_accessible of this PendingModifiedValues.


        :param publicly_accessible: The publicly_accessible of this PendingModifiedValues.
        :type publicly_accessible: bool
        """

        self._publicly_accessible = publicly_accessible

    @property
    def enhanced_vpc_routing(self):
        """Gets the enhanced_vpc_routing of this PendingModifiedValues.


        :return: The enhanced_vpc_routing of this PendingModifiedValues.
        :rtype: bool
        """
        return self._enhanced_vpc_routing

    @enhanced_vpc_routing.setter
    def enhanced_vpc_routing(self, enhanced_vpc_routing):
        """Sets the enhanced_vpc_routing of this PendingModifiedValues.


        :param enhanced_vpc_routing: The enhanced_vpc_routing of this PendingModifiedValues.
        :type enhanced_vpc_routing: bool
        """

        self._enhanced_vpc_routing = enhanced_vpc_routing

    @property
    def maintenance_track_name(self):
        """Gets the maintenance_track_name of this PendingModifiedValues.


        :return: The maintenance_track_name of this PendingModifiedValues.
        :rtype: str
        """
        return self._maintenance_track_name

    @maintenance_track_name.setter
    def maintenance_track_name(self, maintenance_track_name):
        """Sets the maintenance_track_name of this PendingModifiedValues.


        :param maintenance_track_name: The maintenance_track_name of this PendingModifiedValues.
        :type maintenance_track_name: str
        """

        self._maintenance_track_name = maintenance_track_name

    @property
    def encryption_type(self):
        """Gets the encryption_type of this PendingModifiedValues.


        :return: The encryption_type of this PendingModifiedValues.
        :rtype: str
        """
        return self._encryption_type

    @encryption_type.setter
    def encryption_type(self, encryption_type):
        """Sets the encryption_type of this PendingModifiedValues.


        :param encryption_type: The encryption_type of this PendingModifiedValues.
        :type encryption_type: str
        """

        self._encryption_type = encryption_type
