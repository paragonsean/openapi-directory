# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reserved_node import ReservedNode
from openapi_server.models.reserved_node_offering import ReservedNodeOffering
from openapi_server import util


class ReservedNodeConfigurationOptionListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_reserved_node: ReservedNode=None, target_reserved_node_count: int=None, target_reserved_node_offering: ReservedNodeOffering=None):
        """ReservedNodeConfigurationOptionListInner - a model defined in OpenAPI

        :param source_reserved_node: The source_reserved_node of this ReservedNodeConfigurationOptionListInner.
        :param target_reserved_node_count: The target_reserved_node_count of this ReservedNodeConfigurationOptionListInner.
        :param target_reserved_node_offering: The target_reserved_node_offering of this ReservedNodeConfigurationOptionListInner.
        """
        self.openapi_types = {
            'source_reserved_node': ReservedNode,
            'target_reserved_node_count': int,
            'target_reserved_node_offering': ReservedNodeOffering
        }

        self.attribute_map = {
            'source_reserved_node': 'SourceReservedNode',
            'target_reserved_node_count': 'TargetReservedNodeCount',
            'target_reserved_node_offering': 'TargetReservedNodeOffering'
        }

        self._source_reserved_node = source_reserved_node
        self._target_reserved_node_count = target_reserved_node_count
        self._target_reserved_node_offering = target_reserved_node_offering

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservedNodeConfigurationOptionListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservedNodeConfigurationOptionList_inner of this ReservedNodeConfigurationOptionListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_reserved_node(self):
        """Gets the source_reserved_node of this ReservedNodeConfigurationOptionListInner.


        :return: The source_reserved_node of this ReservedNodeConfigurationOptionListInner.
        :rtype: ReservedNode
        """
        return self._source_reserved_node

    @source_reserved_node.setter
    def source_reserved_node(self, source_reserved_node):
        """Sets the source_reserved_node of this ReservedNodeConfigurationOptionListInner.


        :param source_reserved_node: The source_reserved_node of this ReservedNodeConfigurationOptionListInner.
        :type source_reserved_node: ReservedNode
        """

        self._source_reserved_node = source_reserved_node

    @property
    def target_reserved_node_count(self):
        """Gets the target_reserved_node_count of this ReservedNodeConfigurationOptionListInner.


        :return: The target_reserved_node_count of this ReservedNodeConfigurationOptionListInner.
        :rtype: int
        """
        return self._target_reserved_node_count

    @target_reserved_node_count.setter
    def target_reserved_node_count(self, target_reserved_node_count):
        """Sets the target_reserved_node_count of this ReservedNodeConfigurationOptionListInner.


        :param target_reserved_node_count: The target_reserved_node_count of this ReservedNodeConfigurationOptionListInner.
        :type target_reserved_node_count: int
        """

        self._target_reserved_node_count = target_reserved_node_count

    @property
    def target_reserved_node_offering(self):
        """Gets the target_reserved_node_offering of this ReservedNodeConfigurationOptionListInner.


        :return: The target_reserved_node_offering of this ReservedNodeConfigurationOptionListInner.
        :rtype: ReservedNodeOffering
        """
        return self._target_reserved_node_offering

    @target_reserved_node_offering.setter
    def target_reserved_node_offering(self, target_reserved_node_offering):
        """Sets the target_reserved_node_offering of this ReservedNodeConfigurationOptionListInner.


        :param target_reserved_node_offering: The target_reserved_node_offering of this ReservedNodeConfigurationOptionListInner.
        :type target_reserved_node_offering: ReservedNodeOffering
        """

        self._target_reserved_node_offering = target_reserved_node_offering
