# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterIamRoleListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iam_role_arn: str=None, apply_status: str=None):
        """ClusterIamRoleListInner - a model defined in OpenAPI

        :param iam_role_arn: The iam_role_arn of this ClusterIamRoleListInner.
        :param apply_status: The apply_status of this ClusterIamRoleListInner.
        """
        self.openapi_types = {
            'iam_role_arn': str,
            'apply_status': str
        }

        self.attribute_map = {
            'iam_role_arn': 'IamRoleArn',
            'apply_status': 'ApplyStatus'
        }

        self._iam_role_arn = iam_role_arn
        self._apply_status = apply_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterIamRoleListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterIamRoleList_inner of this ClusterIamRoleListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this ClusterIamRoleListInner.


        :return: The iam_role_arn of this ClusterIamRoleListInner.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this ClusterIamRoleListInner.


        :param iam_role_arn: The iam_role_arn of this ClusterIamRoleListInner.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def apply_status(self):
        """Gets the apply_status of this ClusterIamRoleListInner.


        :return: The apply_status of this ClusterIamRoleListInner.
        :rtype: str
        """
        return self._apply_status

    @apply_status.setter
    def apply_status(self, apply_status):
        """Sets the apply_status of this ClusterIamRoleListInner.


        :param apply_status: The apply_status of this ClusterIamRoleListInner.
        :type apply_status: str
        """

        self._apply_status = apply_status
