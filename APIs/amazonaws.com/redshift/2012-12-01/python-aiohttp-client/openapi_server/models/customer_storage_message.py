# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerStorageMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_backup_size_in_mega_bytes: float=None, total_provisioned_storage_in_mega_bytes: float=None):
        """CustomerStorageMessage - a model defined in OpenAPI

        :param total_backup_size_in_mega_bytes: The total_backup_size_in_mega_bytes of this CustomerStorageMessage.
        :param total_provisioned_storage_in_mega_bytes: The total_provisioned_storage_in_mega_bytes of this CustomerStorageMessage.
        """
        self.openapi_types = {
            'total_backup_size_in_mega_bytes': float,
            'total_provisioned_storage_in_mega_bytes': float
        }

        self.attribute_map = {
            'total_backup_size_in_mega_bytes': 'TotalBackupSizeInMegaBytes',
            'total_provisioned_storage_in_mega_bytes': 'TotalProvisionedStorageInMegaBytes'
        }

        self._total_backup_size_in_mega_bytes = total_backup_size_in_mega_bytes
        self._total_provisioned_storage_in_mega_bytes = total_provisioned_storage_in_mega_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerStorageMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerStorageMessage of this CustomerStorageMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_backup_size_in_mega_bytes(self):
        """Gets the total_backup_size_in_mega_bytes of this CustomerStorageMessage.


        :return: The total_backup_size_in_mega_bytes of this CustomerStorageMessage.
        :rtype: float
        """
        return self._total_backup_size_in_mega_bytes

    @total_backup_size_in_mega_bytes.setter
    def total_backup_size_in_mega_bytes(self, total_backup_size_in_mega_bytes):
        """Sets the total_backup_size_in_mega_bytes of this CustomerStorageMessage.


        :param total_backup_size_in_mega_bytes: The total_backup_size_in_mega_bytes of this CustomerStorageMessage.
        :type total_backup_size_in_mega_bytes: float
        """

        self._total_backup_size_in_mega_bytes = total_backup_size_in_mega_bytes

    @property
    def total_provisioned_storage_in_mega_bytes(self):
        """Gets the total_provisioned_storage_in_mega_bytes of this CustomerStorageMessage.


        :return: The total_provisioned_storage_in_mega_bytes of this CustomerStorageMessage.
        :rtype: float
        """
        return self._total_provisioned_storage_in_mega_bytes

    @total_provisioned_storage_in_mega_bytes.setter
    def total_provisioned_storage_in_mega_bytes(self, total_provisioned_storage_in_mega_bytes):
        """Sets the total_provisioned_storage_in_mega_bytes of this CustomerStorageMessage.


        :param total_provisioned_storage_in_mega_bytes: The total_provisioned_storage_in_mega_bytes of this CustomerStorageMessage.
        :type total_provisioned_storage_in_mega_bytes: float
        """

        self._total_provisioned_storage_in_mega_bytes = total_provisioned_storage_in_mega_bytes
