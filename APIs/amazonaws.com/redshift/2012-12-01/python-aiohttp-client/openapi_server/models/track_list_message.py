# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrackListMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maintenance_tracks: List=None, marker: str=None):
        """TrackListMessage - a model defined in OpenAPI

        :param maintenance_tracks: The maintenance_tracks of this TrackListMessage.
        :param marker: The marker of this TrackListMessage.
        """
        self.openapi_types = {
            'maintenance_tracks': List,
            'marker': str
        }

        self.attribute_map = {
            'maintenance_tracks': 'MaintenanceTracks',
            'marker': 'Marker'
        }

        self._maintenance_tracks = maintenance_tracks
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackListMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrackListMessage of this TrackListMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maintenance_tracks(self):
        """Gets the maintenance_tracks of this TrackListMessage.


        :return: The maintenance_tracks of this TrackListMessage.
        :rtype: List
        """
        return self._maintenance_tracks

    @maintenance_tracks.setter
    def maintenance_tracks(self, maintenance_tracks):
        """Sets the maintenance_tracks of this TrackListMessage.


        :param maintenance_tracks: The maintenance_tracks of this TrackListMessage.
        :type maintenance_tracks: List
        """

        self._maintenance_tracks = maintenance_tracks

    @property
    def marker(self):
        """Gets the marker of this TrackListMessage.


        :return: The marker of this TrackListMessage.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this TrackListMessage.


        :param marker: The marker of this TrackListMessage.
        :type marker: str
        """

        self._marker = marker
