# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchModifyClusterSnapshotsMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshot_identifier_list: List=None, manual_snapshot_retention_period: int=None, force: bool=None):
        """BatchModifyClusterSnapshotsMessage - a model defined in OpenAPI

        :param snapshot_identifier_list: The snapshot_identifier_list of this BatchModifyClusterSnapshotsMessage.
        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this BatchModifyClusterSnapshotsMessage.
        :param force: The force of this BatchModifyClusterSnapshotsMessage.
        """
        self.openapi_types = {
            'snapshot_identifier_list': List,
            'manual_snapshot_retention_period': int,
            'force': bool
        }

        self.attribute_map = {
            'snapshot_identifier_list': 'SnapshotIdentifierList',
            'manual_snapshot_retention_period': 'ManualSnapshotRetentionPeriod',
            'force': 'Force'
        }

        self._snapshot_identifier_list = snapshot_identifier_list
        self._manual_snapshot_retention_period = manual_snapshot_retention_period
        self._force = force

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchModifyClusterSnapshotsMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchModifyClusterSnapshotsMessage of this BatchModifyClusterSnapshotsMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshot_identifier_list(self):
        """Gets the snapshot_identifier_list of this BatchModifyClusterSnapshotsMessage.


        :return: The snapshot_identifier_list of this BatchModifyClusterSnapshotsMessage.
        :rtype: List
        """
        return self._snapshot_identifier_list

    @snapshot_identifier_list.setter
    def snapshot_identifier_list(self, snapshot_identifier_list):
        """Sets the snapshot_identifier_list of this BatchModifyClusterSnapshotsMessage.


        :param snapshot_identifier_list: The snapshot_identifier_list of this BatchModifyClusterSnapshotsMessage.
        :type snapshot_identifier_list: List
        """
        if snapshot_identifier_list is None:
            raise ValueError("Invalid value for `snapshot_identifier_list`, must not be `None`")

        self._snapshot_identifier_list = snapshot_identifier_list

    @property
    def manual_snapshot_retention_period(self):
        """Gets the manual_snapshot_retention_period of this BatchModifyClusterSnapshotsMessage.


        :return: The manual_snapshot_retention_period of this BatchModifyClusterSnapshotsMessage.
        :rtype: int
        """
        return self._manual_snapshot_retention_period

    @manual_snapshot_retention_period.setter
    def manual_snapshot_retention_period(self, manual_snapshot_retention_period):
        """Sets the manual_snapshot_retention_period of this BatchModifyClusterSnapshotsMessage.


        :param manual_snapshot_retention_period: The manual_snapshot_retention_period of this BatchModifyClusterSnapshotsMessage.
        :type manual_snapshot_retention_period: int
        """

        self._manual_snapshot_retention_period = manual_snapshot_retention_period

    @property
    def force(self):
        """Gets the force of this BatchModifyClusterSnapshotsMessage.


        :return: The force of this BatchModifyClusterSnapshotsMessage.
        :rtype: bool
        """
        return self._force

    @force.setter
    def force(self, force):
        """Sets the force of this BatchModifyClusterSnapshotsMessage.


        :param force: The force of this BatchModifyClusterSnapshotsMessage.
        :type force: bool
        """

        self._force = force
