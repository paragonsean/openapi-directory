# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GETCreateScheduledActionTargetActionParameterResumeCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_identifier: str=None):
        """GETCreateScheduledActionTargetActionParameterResumeCluster - a model defined in OpenAPI

        :param cluster_identifier: The cluster_identifier of this GETCreateScheduledActionTargetActionParameterResumeCluster.
        """
        self.openapi_types = {
            'cluster_identifier': str
        }

        self.attribute_map = {
            'cluster_identifier': 'ClusterIdentifier'
        }

        self._cluster_identifier = cluster_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GETCreateScheduledActionTargetActionParameterResumeCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GET_CreateScheduledAction_TargetAction_parameter_ResumeCluster of this GETCreateScheduledActionTargetActionParameterResumeCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_identifier(self):
        """Gets the cluster_identifier of this GETCreateScheduledActionTargetActionParameterResumeCluster.


        :return: The cluster_identifier of this GETCreateScheduledActionTargetActionParameterResumeCluster.
        :rtype: str
        """
        return self._cluster_identifier

    @cluster_identifier.setter
    def cluster_identifier(self, cluster_identifier):
        """Sets the cluster_identifier of this GETCreateScheduledActionTargetActionParameterResumeCluster.


        :param cluster_identifier: The cluster_identifier of this GETCreateScheduledActionTargetActionParameterResumeCluster.
        :type cluster_identifier: str
        """
        if cluster_identifier is None:
            raise ValueError("Invalid value for `cluster_identifier`, must not be `None`")

        self._cluster_identifier = cluster_identifier
