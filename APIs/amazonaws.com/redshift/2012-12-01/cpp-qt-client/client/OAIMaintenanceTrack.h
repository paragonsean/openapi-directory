/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMaintenanceTrack.h
 *
 * Defines a maintenance track that determines which Amazon Redshift version to apply during a maintenance window. If the value for &lt;code&gt;MaintenanceTrack&lt;/code&gt; is &lt;code&gt;current&lt;/code&gt;, the cluster is updated to the most recently certified maintenance release. If the value is &lt;code&gt;trailing&lt;/code&gt;, the cluster is updated to the previously certified maintenance release. 
 */

#ifndef OAIMaintenanceTrack_H
#define OAIMaintenanceTrack_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMaintenanceTrack : public OAIObject {
public:
    OAIMaintenanceTrack();
    OAIMaintenanceTrack(QString json);
    ~OAIMaintenanceTrack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMaintenanceTrackName() const;
    void setMaintenanceTrackName(const QString &maintenance_track_name);
    bool is_maintenance_track_name_Set() const;
    bool is_maintenance_track_name_Valid() const;

    QString getDatabaseVersion() const;
    void setDatabaseVersion(const QString &database_version);
    bool is_database_version_Set() const;
    bool is_database_version_Valid() const;

    QList getUpdateTargets() const;
    void setUpdateTargets(const QList &update_targets);
    bool is_update_targets_Set() const;
    bool is_update_targets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_maintenance_track_name;
    bool m_maintenance_track_name_isSet;
    bool m_maintenance_track_name_isValid;

    QString m_database_version;
    bool m_database_version_isSet;
    bool m_database_version_isValid;

    QList m_update_targets;
    bool m_update_targets_isSet;
    bool m_update_targets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMaintenanceTrack)

#endif // OAIMaintenanceTrack_H
