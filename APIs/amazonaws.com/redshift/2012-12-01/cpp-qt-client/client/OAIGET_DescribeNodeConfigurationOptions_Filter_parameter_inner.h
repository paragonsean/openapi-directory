/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner.h
 *
 * 
 */

#ifndef OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner_H
#define OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner_H

#include <QJsonObject>

#include "OAINodeConfigurationOptionsFilterName.h"
#include "OAIOperatorType.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner : public OAIObject {
public:
    OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner();
    OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner(QString json);
    ~OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINodeConfigurationOptionsFilterName getName() const;
    void setName(const OAINodeConfigurationOptionsFilterName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIOperatorType getROperator() const;
    void setROperator(const OAIOperatorType &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINodeConfigurationOptionsFilterName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIOperatorType m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner)

#endif // OAIGET_DescribeNodeConfigurationOptions_Filter_parameter_inner_H
