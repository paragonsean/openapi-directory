/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataShare.h
 *
 * 
 */

#ifndef OAIDataShare_H
#define OAIDataShare_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataShare : public OAIObject {
public:
    OAIDataShare();
    OAIDataShare(QString json);
    ~OAIDataShare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataShareArn() const;
    void setDataShareArn(const QString &data_share_arn);
    bool is_data_share_arn_Set() const;
    bool is_data_share_arn_Valid() const;

    QString getProducerArn() const;
    void setProducerArn(const QString &producer_arn);
    bool is_producer_arn_Set() const;
    bool is_producer_arn_Valid() const;

    bool getAllowPubliclyAccessibleConsumers() const;
    void setAllowPubliclyAccessibleConsumers(const bool &allow_publicly_accessible_consumers);
    bool is_allow_publicly_accessible_consumers_Set() const;
    bool is_allow_publicly_accessible_consumers_Valid() const;

    QList getDataShareAssociations() const;
    void setDataShareAssociations(const QList &data_share_associations);
    bool is_data_share_associations_Set() const;
    bool is_data_share_associations_Valid() const;

    QString getManagedBy() const;
    void setManagedBy(const QString &managed_by);
    bool is_managed_by_Set() const;
    bool is_managed_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_share_arn;
    bool m_data_share_arn_isSet;
    bool m_data_share_arn_isValid;

    QString m_producer_arn;
    bool m_producer_arn_isSet;
    bool m_producer_arn_isValid;

    bool m_allow_publicly_accessible_consumers;
    bool m_allow_publicly_accessible_consumers_isSet;
    bool m_allow_publicly_accessible_consumers_isValid;

    QList m_data_share_associations;
    bool m_data_share_associations_isSet;
    bool m_data_share_associations_isValid;

    QString m_managed_by;
    bool m_managed_by_isSet;
    bool m_managed_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataShare)

#endif // OAIDataShare_H
