/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModifyClusterMaintenanceMessage.h
 *
 * 
 */

#ifndef OAIModifyClusterMaintenanceMessage_H
#define OAIModifyClusterMaintenanceMessage_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModifyClusterMaintenanceMessage : public OAIObject {
public:
    OAIModifyClusterMaintenanceMessage();
    OAIModifyClusterMaintenanceMessage(QString json);
    ~OAIModifyClusterMaintenanceMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterIdentifier() const;
    void setClusterIdentifier(const QString &cluster_identifier);
    bool is_cluster_identifier_Set() const;
    bool is_cluster_identifier_Valid() const;

    bool getDeferMaintenance() const;
    void setDeferMaintenance(const bool &defer_maintenance);
    bool is_defer_maintenance_Set() const;
    bool is_defer_maintenance_Valid() const;

    QString getDeferMaintenanceIdentifier() const;
    void setDeferMaintenanceIdentifier(const QString &defer_maintenance_identifier);
    bool is_defer_maintenance_identifier_Set() const;
    bool is_defer_maintenance_identifier_Valid() const;

    QDateTime getDeferMaintenanceStartTime() const;
    void setDeferMaintenanceStartTime(const QDateTime &defer_maintenance_start_time);
    bool is_defer_maintenance_start_time_Set() const;
    bool is_defer_maintenance_start_time_Valid() const;

    QDateTime getDeferMaintenanceEndTime() const;
    void setDeferMaintenanceEndTime(const QDateTime &defer_maintenance_end_time);
    bool is_defer_maintenance_end_time_Set() const;
    bool is_defer_maintenance_end_time_Valid() const;

    qint32 getDeferMaintenanceDuration() const;
    void setDeferMaintenanceDuration(const qint32 &defer_maintenance_duration);
    bool is_defer_maintenance_duration_Set() const;
    bool is_defer_maintenance_duration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_identifier;
    bool m_cluster_identifier_isSet;
    bool m_cluster_identifier_isValid;

    bool m_defer_maintenance;
    bool m_defer_maintenance_isSet;
    bool m_defer_maintenance_isValid;

    QString m_defer_maintenance_identifier;
    bool m_defer_maintenance_identifier_isSet;
    bool m_defer_maintenance_identifier_isValid;

    QDateTime m_defer_maintenance_start_time;
    bool m_defer_maintenance_start_time_isSet;
    bool m_defer_maintenance_start_time_isValid;

    QDateTime m_defer_maintenance_end_time;
    bool m_defer_maintenance_end_time_isSet;
    bool m_defer_maintenance_end_time_isValid;

    qint32 m_defer_maintenance_duration;
    bool m_defer_maintenance_duration_isSet;
    bool m_defer_maintenance_duration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModifyClusterMaintenanceMessage)

#endif // OAIModifyClusterMaintenanceMessage_H
