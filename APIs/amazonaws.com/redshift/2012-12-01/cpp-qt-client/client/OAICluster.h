/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster.h
 *
 * Describes a cluster.
 */

#ifndef OAICluster_H
#define OAICluster_H

#include <QJsonObject>

#include "OAICluster_AquaConfiguration.h"
#include "OAICluster_ClusterSnapshotCopyStatus.h"
#include "OAICluster_DataTransferProgress.h"
#include "OAICluster_ElasticIpStatus.h"
#include "OAICluster_Endpoint.h"
#include "OAICluster_HsmStatus.h"
#include "OAICluster_PendingModifiedValues.h"
#include "OAICluster_ReservedNodeExchangeStatus.h"
#include "OAICluster_ResizeInfo.h"
#include "OAICluster_RestoreStatus.h"
#include "OAIScheduleState.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICluster_Endpoint;
class OAICluster_PendingModifiedValues;
class OAICluster_RestoreStatus;
class OAICluster_DataTransferProgress;
class OAICluster_HsmStatus;
class OAICluster_ClusterSnapshotCopyStatus;
class OAICluster_ElasticIpStatus;
class OAICluster_ResizeInfo;
class OAICluster_AquaConfiguration;
class OAICluster_ReservedNodeExchangeStatus;

class OAICluster : public OAIObject {
public:
    OAICluster();
    OAICluster(QString json);
    ~OAICluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterIdentifier() const;
    void setClusterIdentifier(const QString &cluster_identifier);
    bool is_cluster_identifier_Set() const;
    bool is_cluster_identifier_Valid() const;

    QString getNodeType() const;
    void setNodeType(const QString &node_type);
    bool is_node_type_Set() const;
    bool is_node_type_Valid() const;

    QString getClusterStatus() const;
    void setClusterStatus(const QString &cluster_status);
    bool is_cluster_status_Set() const;
    bool is_cluster_status_Valid() const;

    QString getClusterAvailabilityStatus() const;
    void setClusterAvailabilityStatus(const QString &cluster_availability_status);
    bool is_cluster_availability_status_Set() const;
    bool is_cluster_availability_status_Valid() const;

    QString getModifyStatus() const;
    void setModifyStatus(const QString &modify_status);
    bool is_modify_status_Set() const;
    bool is_modify_status_Valid() const;

    QString getMasterUsername() const;
    void setMasterUsername(const QString &master_username);
    bool is_master_username_Set() const;
    bool is_master_username_Valid() const;

    QString getDbName() const;
    void setDbName(const QString &db_name);
    bool is_db_name_Set() const;
    bool is_db_name_Valid() const;

    OAICluster_Endpoint getEndpoint() const;
    void setEndpoint(const OAICluster_Endpoint &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QDateTime getClusterCreateTime() const;
    void setClusterCreateTime(const QDateTime &cluster_create_time);
    bool is_cluster_create_time_Set() const;
    bool is_cluster_create_time_Valid() const;

    qint32 getAutomatedSnapshotRetentionPeriod() const;
    void setAutomatedSnapshotRetentionPeriod(const qint32 &automated_snapshot_retention_period);
    bool is_automated_snapshot_retention_period_Set() const;
    bool is_automated_snapshot_retention_period_Valid() const;

    qint32 getManualSnapshotRetentionPeriod() const;
    void setManualSnapshotRetentionPeriod(const qint32 &manual_snapshot_retention_period);
    bool is_manual_snapshot_retention_period_Set() const;
    bool is_manual_snapshot_retention_period_Valid() const;

    QList getClusterSecurityGroups() const;
    void setClusterSecurityGroups(const QList &cluster_security_groups);
    bool is_cluster_security_groups_Set() const;
    bool is_cluster_security_groups_Valid() const;

    QList getVpcSecurityGroups() const;
    void setVpcSecurityGroups(const QList &vpc_security_groups);
    bool is_vpc_security_groups_Set() const;
    bool is_vpc_security_groups_Valid() const;

    QList getClusterParameterGroups() const;
    void setClusterParameterGroups(const QList &cluster_parameter_groups);
    bool is_cluster_parameter_groups_Set() const;
    bool is_cluster_parameter_groups_Valid() const;

    QString getClusterSubnetGroupName() const;
    void setClusterSubnetGroupName(const QString &cluster_subnet_group_name);
    bool is_cluster_subnet_group_name_Set() const;
    bool is_cluster_subnet_group_name_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    OAICluster_PendingModifiedValues getPendingModifiedValues() const;
    void setPendingModifiedValues(const OAICluster_PendingModifiedValues &pending_modified_values);
    bool is_pending_modified_values_Set() const;
    bool is_pending_modified_values_Valid() const;

    QString getClusterVersion() const;
    void setClusterVersion(const QString &cluster_version);
    bool is_cluster_version_Set() const;
    bool is_cluster_version_Valid() const;

    bool getAllowVersionUpgrade() const;
    void setAllowVersionUpgrade(const bool &allow_version_upgrade);
    bool is_allow_version_upgrade_Set() const;
    bool is_allow_version_upgrade_Valid() const;

    qint32 getNumberOfNodes() const;
    void setNumberOfNodes(const qint32 &number_of_nodes);
    bool is_number_of_nodes_Set() const;
    bool is_number_of_nodes_Valid() const;

    bool getPubliclyAccessible() const;
    void setPubliclyAccessible(const bool &publicly_accessible);
    bool is_publicly_accessible_Set() const;
    bool is_publicly_accessible_Valid() const;

    bool getEncrypted() const;
    void setEncrypted(const bool &encrypted);
    bool is_encrypted_Set() const;
    bool is_encrypted_Valid() const;

    OAICluster_RestoreStatus getRestoreStatus() const;
    void setRestoreStatus(const OAICluster_RestoreStatus &restore_status);
    bool is_restore_status_Set() const;
    bool is_restore_status_Valid() const;

    OAICluster_DataTransferProgress getDataTransferProgress() const;
    void setDataTransferProgress(const OAICluster_DataTransferProgress &data_transfer_progress);
    bool is_data_transfer_progress_Set() const;
    bool is_data_transfer_progress_Valid() const;

    OAICluster_HsmStatus getHsmStatus() const;
    void setHsmStatus(const OAICluster_HsmStatus &hsm_status);
    bool is_hsm_status_Set() const;
    bool is_hsm_status_Valid() const;

    OAICluster_ClusterSnapshotCopyStatus getClusterSnapshotCopyStatus() const;
    void setClusterSnapshotCopyStatus(const OAICluster_ClusterSnapshotCopyStatus &cluster_snapshot_copy_status);
    bool is_cluster_snapshot_copy_status_Set() const;
    bool is_cluster_snapshot_copy_status_Valid() const;

    QString getClusterPublicKey() const;
    void setClusterPublicKey(const QString &cluster_public_key);
    bool is_cluster_public_key_Set() const;
    bool is_cluster_public_key_Valid() const;

    QList getClusterNodes() const;
    void setClusterNodes(const QList &cluster_nodes);
    bool is_cluster_nodes_Set() const;
    bool is_cluster_nodes_Valid() const;

    OAICluster_ElasticIpStatus getElasticIpStatus() const;
    void setElasticIpStatus(const OAICluster_ElasticIpStatus &elastic_ip_status);
    bool is_elastic_ip_status_Set() const;
    bool is_elastic_ip_status_Valid() const;

    QString getClusterRevisionNumber() const;
    void setClusterRevisionNumber(const QString &cluster_revision_number);
    bool is_cluster_revision_number_Set() const;
    bool is_cluster_revision_number_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    bool getEnhancedVpcRouting() const;
    void setEnhancedVpcRouting(const bool &enhanced_vpc_routing);
    bool is_enhanced_vpc_routing_Set() const;
    bool is_enhanced_vpc_routing_Valid() const;

    QList getIamRoles() const;
    void setIamRoles(const QList &iam_roles);
    bool is_iam_roles_Set() const;
    bool is_iam_roles_Valid() const;

    QList getPendingActions() const;
    void setPendingActions(const QList &pending_actions);
    bool is_pending_actions_Set() const;
    bool is_pending_actions_Valid() const;

    QString getMaintenanceTrackName() const;
    void setMaintenanceTrackName(const QString &maintenance_track_name);
    bool is_maintenance_track_name_Set() const;
    bool is_maintenance_track_name_Valid() const;

    QString getElasticResizeNumberOfNodeOptions() const;
    void setElasticResizeNumberOfNodeOptions(const QString &elastic_resize_number_of_node_options);
    bool is_elastic_resize_number_of_node_options_Set() const;
    bool is_elastic_resize_number_of_node_options_Valid() const;

    QList getDeferredMaintenanceWindows() const;
    void setDeferredMaintenanceWindows(const QList &deferred_maintenance_windows);
    bool is_deferred_maintenance_windows_Set() const;
    bool is_deferred_maintenance_windows_Valid() const;

    QString getSnapshotScheduleIdentifier() const;
    void setSnapshotScheduleIdentifier(const QString &snapshot_schedule_identifier);
    bool is_snapshot_schedule_identifier_Set() const;
    bool is_snapshot_schedule_identifier_Valid() const;

    OAIScheduleState getSnapshotScheduleState() const;
    void setSnapshotScheduleState(const OAIScheduleState &snapshot_schedule_state);
    bool is_snapshot_schedule_state_Set() const;
    bool is_snapshot_schedule_state_Valid() const;

    QDateTime getExpectedNextSnapshotScheduleTime() const;
    void setExpectedNextSnapshotScheduleTime(const QDateTime &expected_next_snapshot_schedule_time);
    bool is_expected_next_snapshot_schedule_time_Set() const;
    bool is_expected_next_snapshot_schedule_time_Valid() const;

    QString getExpectedNextSnapshotScheduleTimeStatus() const;
    void setExpectedNextSnapshotScheduleTimeStatus(const QString &expected_next_snapshot_schedule_time_status);
    bool is_expected_next_snapshot_schedule_time_status_Set() const;
    bool is_expected_next_snapshot_schedule_time_status_Valid() const;

    QDateTime getNextMaintenanceWindowStartTime() const;
    void setNextMaintenanceWindowStartTime(const QDateTime &next_maintenance_window_start_time);
    bool is_next_maintenance_window_start_time_Set() const;
    bool is_next_maintenance_window_start_time_Valid() const;

    OAICluster_ResizeInfo getResizeInfo() const;
    void setResizeInfo(const OAICluster_ResizeInfo &resize_info);
    bool is_resize_info_Set() const;
    bool is_resize_info_Valid() const;

    QString getAvailabilityZoneRelocationStatus() const;
    void setAvailabilityZoneRelocationStatus(const QString &availability_zone_relocation_status);
    bool is_availability_zone_relocation_status_Set() const;
    bool is_availability_zone_relocation_status_Valid() const;

    QString getClusterNamespaceArn() const;
    void setClusterNamespaceArn(const QString &cluster_namespace_arn);
    bool is_cluster_namespace_arn_Set() const;
    bool is_cluster_namespace_arn_Valid() const;

    qint32 getTotalStorageCapacityInMegaBytes() const;
    void setTotalStorageCapacityInMegaBytes(const qint32 &total_storage_capacity_in_mega_bytes);
    bool is_total_storage_capacity_in_mega_bytes_Set() const;
    bool is_total_storage_capacity_in_mega_bytes_Valid() const;

    OAICluster_AquaConfiguration getAquaConfiguration() const;
    void setAquaConfiguration(const OAICluster_AquaConfiguration &aqua_configuration);
    bool is_aqua_configuration_Set() const;
    bool is_aqua_configuration_Valid() const;

    QString getDefaultIamRoleArn() const;
    void setDefaultIamRoleArn(const QString &default_iam_role_arn);
    bool is_default_iam_role_arn_Set() const;
    bool is_default_iam_role_arn_Valid() const;

    OAICluster_ReservedNodeExchangeStatus getReservedNodeExchangeStatus() const;
    void setReservedNodeExchangeStatus(const OAICluster_ReservedNodeExchangeStatus &reserved_node_exchange_status);
    bool is_reserved_node_exchange_status_Set() const;
    bool is_reserved_node_exchange_status_Valid() const;

    QString getCustomDomainName() const;
    void setCustomDomainName(const QString &custom_domain_name);
    bool is_custom_domain_name_Set() const;
    bool is_custom_domain_name_Valid() const;

    QString getCustomDomainCertificateArn() const;
    void setCustomDomainCertificateArn(const QString &custom_domain_certificate_arn);
    bool is_custom_domain_certificate_arn_Set() const;
    bool is_custom_domain_certificate_arn_Valid() const;

    QDateTime getCustomDomainCertificateExpiryDate() const;
    void setCustomDomainCertificateExpiryDate(const QDateTime &custom_domain_certificate_expiry_date);
    bool is_custom_domain_certificate_expiry_date_Set() const;
    bool is_custom_domain_certificate_expiry_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_identifier;
    bool m_cluster_identifier_isSet;
    bool m_cluster_identifier_isValid;

    QString m_node_type;
    bool m_node_type_isSet;
    bool m_node_type_isValid;

    QString m_cluster_status;
    bool m_cluster_status_isSet;
    bool m_cluster_status_isValid;

    QString m_cluster_availability_status;
    bool m_cluster_availability_status_isSet;
    bool m_cluster_availability_status_isValid;

    QString m_modify_status;
    bool m_modify_status_isSet;
    bool m_modify_status_isValid;

    QString m_master_username;
    bool m_master_username_isSet;
    bool m_master_username_isValid;

    QString m_db_name;
    bool m_db_name_isSet;
    bool m_db_name_isValid;

    OAICluster_Endpoint m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QDateTime m_cluster_create_time;
    bool m_cluster_create_time_isSet;
    bool m_cluster_create_time_isValid;

    qint32 m_automated_snapshot_retention_period;
    bool m_automated_snapshot_retention_period_isSet;
    bool m_automated_snapshot_retention_period_isValid;

    qint32 m_manual_snapshot_retention_period;
    bool m_manual_snapshot_retention_period_isSet;
    bool m_manual_snapshot_retention_period_isValid;

    QList m_cluster_security_groups;
    bool m_cluster_security_groups_isSet;
    bool m_cluster_security_groups_isValid;

    QList m_vpc_security_groups;
    bool m_vpc_security_groups_isSet;
    bool m_vpc_security_groups_isValid;

    QList m_cluster_parameter_groups;
    bool m_cluster_parameter_groups_isSet;
    bool m_cluster_parameter_groups_isValid;

    QString m_cluster_subnet_group_name;
    bool m_cluster_subnet_group_name_isSet;
    bool m_cluster_subnet_group_name_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;

    OAICluster_PendingModifiedValues m_pending_modified_values;
    bool m_pending_modified_values_isSet;
    bool m_pending_modified_values_isValid;

    QString m_cluster_version;
    bool m_cluster_version_isSet;
    bool m_cluster_version_isValid;

    bool m_allow_version_upgrade;
    bool m_allow_version_upgrade_isSet;
    bool m_allow_version_upgrade_isValid;

    qint32 m_number_of_nodes;
    bool m_number_of_nodes_isSet;
    bool m_number_of_nodes_isValid;

    bool m_publicly_accessible;
    bool m_publicly_accessible_isSet;
    bool m_publicly_accessible_isValid;

    bool m_encrypted;
    bool m_encrypted_isSet;
    bool m_encrypted_isValid;

    OAICluster_RestoreStatus m_restore_status;
    bool m_restore_status_isSet;
    bool m_restore_status_isValid;

    OAICluster_DataTransferProgress m_data_transfer_progress;
    bool m_data_transfer_progress_isSet;
    bool m_data_transfer_progress_isValid;

    OAICluster_HsmStatus m_hsm_status;
    bool m_hsm_status_isSet;
    bool m_hsm_status_isValid;

    OAICluster_ClusterSnapshotCopyStatus m_cluster_snapshot_copy_status;
    bool m_cluster_snapshot_copy_status_isSet;
    bool m_cluster_snapshot_copy_status_isValid;

    QString m_cluster_public_key;
    bool m_cluster_public_key_isSet;
    bool m_cluster_public_key_isValid;

    QList m_cluster_nodes;
    bool m_cluster_nodes_isSet;
    bool m_cluster_nodes_isValid;

    OAICluster_ElasticIpStatus m_elastic_ip_status;
    bool m_elastic_ip_status_isSet;
    bool m_elastic_ip_status_isValid;

    QString m_cluster_revision_number;
    bool m_cluster_revision_number_isSet;
    bool m_cluster_revision_number_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    bool m_enhanced_vpc_routing;
    bool m_enhanced_vpc_routing_isSet;
    bool m_enhanced_vpc_routing_isValid;

    QList m_iam_roles;
    bool m_iam_roles_isSet;
    bool m_iam_roles_isValid;

    QList m_pending_actions;
    bool m_pending_actions_isSet;
    bool m_pending_actions_isValid;

    QString m_maintenance_track_name;
    bool m_maintenance_track_name_isSet;
    bool m_maintenance_track_name_isValid;

    QString m_elastic_resize_number_of_node_options;
    bool m_elastic_resize_number_of_node_options_isSet;
    bool m_elastic_resize_number_of_node_options_isValid;

    QList m_deferred_maintenance_windows;
    bool m_deferred_maintenance_windows_isSet;
    bool m_deferred_maintenance_windows_isValid;

    QString m_snapshot_schedule_identifier;
    bool m_snapshot_schedule_identifier_isSet;
    bool m_snapshot_schedule_identifier_isValid;

    OAIScheduleState m_snapshot_schedule_state;
    bool m_snapshot_schedule_state_isSet;
    bool m_snapshot_schedule_state_isValid;

    QDateTime m_expected_next_snapshot_schedule_time;
    bool m_expected_next_snapshot_schedule_time_isSet;
    bool m_expected_next_snapshot_schedule_time_isValid;

    QString m_expected_next_snapshot_schedule_time_status;
    bool m_expected_next_snapshot_schedule_time_status_isSet;
    bool m_expected_next_snapshot_schedule_time_status_isValid;

    QDateTime m_next_maintenance_window_start_time;
    bool m_next_maintenance_window_start_time_isSet;
    bool m_next_maintenance_window_start_time_isValid;

    OAICluster_ResizeInfo m_resize_info;
    bool m_resize_info_isSet;
    bool m_resize_info_isValid;

    QString m_availability_zone_relocation_status;
    bool m_availability_zone_relocation_status_isSet;
    bool m_availability_zone_relocation_status_isValid;

    QString m_cluster_namespace_arn;
    bool m_cluster_namespace_arn_isSet;
    bool m_cluster_namespace_arn_isValid;

    qint32 m_total_storage_capacity_in_mega_bytes;
    bool m_total_storage_capacity_in_mega_bytes_isSet;
    bool m_total_storage_capacity_in_mega_bytes_isValid;

    OAICluster_AquaConfiguration m_aqua_configuration;
    bool m_aqua_configuration_isSet;
    bool m_aqua_configuration_isValid;

    QString m_default_iam_role_arn;
    bool m_default_iam_role_arn_isSet;
    bool m_default_iam_role_arn_isValid;

    OAICluster_ReservedNodeExchangeStatus m_reserved_node_exchange_status;
    bool m_reserved_node_exchange_status_isSet;
    bool m_reserved_node_exchange_status_isValid;

    QString m_custom_domain_name;
    bool m_custom_domain_name_isSet;
    bool m_custom_domain_name_isValid;

    QString m_custom_domain_certificate_arn;
    bool m_custom_domain_certificate_arn_isSet;
    bool m_custom_domain_certificate_arn_isValid;

    QDateTime m_custom_domain_certificate_expiry_date;
    bool m_custom_domain_certificate_expiry_date_isSet;
    bool m_custom_domain_certificate_expiry_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster)

#endif // OAICluster_H
