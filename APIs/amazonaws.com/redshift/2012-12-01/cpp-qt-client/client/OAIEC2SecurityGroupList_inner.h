/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEC2SecurityGroupList_inner.h
 *
 * 
 */

#ifndef OAIEC2SecurityGroupList_inner_H
#define OAIEC2SecurityGroupList_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEC2SecurityGroupList_inner : public OAIObject {
public:
    OAIEC2SecurityGroupList_inner();
    OAIEC2SecurityGroupList_inner(QString json);
    ~OAIEC2SecurityGroupList_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getEc2SecurityGroupName() const;
    void setEc2SecurityGroupName(const QString &ec2_security_group_name);
    bool is_ec2_security_group_name_Set() const;
    bool is_ec2_security_group_name_Valid() const;

    QString getEc2SecurityGroupOwnerId() const;
    void setEc2SecurityGroupOwnerId(const QString &ec2_security_group_owner_id);
    bool is_ec2_security_group_owner_id_Set() const;
    bool is_ec2_security_group_owner_id_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_ec2_security_group_name;
    bool m_ec2_security_group_name_isSet;
    bool m_ec2_security_group_name_isValid;

    QString m_ec2_security_group_owner_id;
    bool m_ec2_security_group_owner_id_isSet;
    bool m_ec2_security_group_owner_id_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEC2SecurityGroupList_inner)

#endif // OAIEC2SecurityGroupList_inner_H
