/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReservedNodeExchangeStatus.h
 *
 * Reserved-node status details, such as the source reserved-node identifier, the target reserved-node identifier, the node type, the node count, and other details.
 */

#ifndef OAIReservedNodeExchangeStatus_H
#define OAIReservedNodeExchangeStatus_H

#include <QJsonObject>

#include "OAIReservedNodeExchangeStatusType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReservedNodeExchangeStatus : public OAIObject {
public:
    OAIReservedNodeExchangeStatus();
    OAIReservedNodeExchangeStatus(QString json);
    ~OAIReservedNodeExchangeStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReservedNodeExchangeRequestId() const;
    void setReservedNodeExchangeRequestId(const QString &reserved_node_exchange_request_id);
    bool is_reserved_node_exchange_request_id_Set() const;
    bool is_reserved_node_exchange_request_id_Valid() const;

    OAIReservedNodeExchangeStatusType getStatus() const;
    void setStatus(const OAIReservedNodeExchangeStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getRequestTime() const;
    void setRequestTime(const QDateTime &request_time);
    bool is_request_time_Set() const;
    bool is_request_time_Valid() const;

    QString getSourceReservedNodeId() const;
    void setSourceReservedNodeId(const QString &source_reserved_node_id);
    bool is_source_reserved_node_id_Set() const;
    bool is_source_reserved_node_id_Valid() const;

    QString getSourceReservedNodeType() const;
    void setSourceReservedNodeType(const QString &source_reserved_node_type);
    bool is_source_reserved_node_type_Set() const;
    bool is_source_reserved_node_type_Valid() const;

    qint32 getSourceReservedNodeCount() const;
    void setSourceReservedNodeCount(const qint32 &source_reserved_node_count);
    bool is_source_reserved_node_count_Set() const;
    bool is_source_reserved_node_count_Valid() const;

    QString getTargetReservedNodeOfferingId() const;
    void setTargetReservedNodeOfferingId(const QString &target_reserved_node_offering_id);
    bool is_target_reserved_node_offering_id_Set() const;
    bool is_target_reserved_node_offering_id_Valid() const;

    QString getTargetReservedNodeType() const;
    void setTargetReservedNodeType(const QString &target_reserved_node_type);
    bool is_target_reserved_node_type_Set() const;
    bool is_target_reserved_node_type_Valid() const;

    qint32 getTargetReservedNodeCount() const;
    void setTargetReservedNodeCount(const qint32 &target_reserved_node_count);
    bool is_target_reserved_node_count_Set() const;
    bool is_target_reserved_node_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reserved_node_exchange_request_id;
    bool m_reserved_node_exchange_request_id_isSet;
    bool m_reserved_node_exchange_request_id_isValid;

    OAIReservedNodeExchangeStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_request_time;
    bool m_request_time_isSet;
    bool m_request_time_isValid;

    QString m_source_reserved_node_id;
    bool m_source_reserved_node_id_isSet;
    bool m_source_reserved_node_id_isValid;

    QString m_source_reserved_node_type;
    bool m_source_reserved_node_type_isSet;
    bool m_source_reserved_node_type_isValid;

    qint32 m_source_reserved_node_count;
    bool m_source_reserved_node_count_isSet;
    bool m_source_reserved_node_count_isValid;

    QString m_target_reserved_node_offering_id;
    bool m_target_reserved_node_offering_id_isSet;
    bool m_target_reserved_node_offering_id_isValid;

    QString m_target_reserved_node_type;
    bool m_target_reserved_node_type_isSet;
    bool m_target_reserved_node_type_isValid;

    qint32 m_target_reserved_node_count;
    bool m_target_reserved_node_count_isSet;
    bool m_target_reserved_node_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReservedNodeExchangeStatus)

#endif // OAIReservedNodeExchangeStatus_H
