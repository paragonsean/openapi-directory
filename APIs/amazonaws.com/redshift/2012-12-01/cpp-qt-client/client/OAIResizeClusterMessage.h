/**
 * Amazon Redshift
 * <fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html\">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href=\"https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html\">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/welcome.html\">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>
 *
 * The version of the OpenAPI document: 2012-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResizeClusterMessage.h
 *
 * Describes a resize cluster operation. For example, a scheduled action to run the &lt;code&gt;ResizeCluster&lt;/code&gt; API operation. 
 */

#ifndef OAIResizeClusterMessage_H
#define OAIResizeClusterMessage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResizeClusterMessage : public OAIObject {
public:
    OAIResizeClusterMessage();
    OAIResizeClusterMessage(QString json);
    ~OAIResizeClusterMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterIdentifier() const;
    void setClusterIdentifier(const QString &cluster_identifier);
    bool is_cluster_identifier_Set() const;
    bool is_cluster_identifier_Valid() const;

    QString getClusterType() const;
    void setClusterType(const QString &cluster_type);
    bool is_cluster_type_Set() const;
    bool is_cluster_type_Valid() const;

    QString getNodeType() const;
    void setNodeType(const QString &node_type);
    bool is_node_type_Set() const;
    bool is_node_type_Valid() const;

    qint32 getNumberOfNodes() const;
    void setNumberOfNodes(const qint32 &number_of_nodes);
    bool is_number_of_nodes_Set() const;
    bool is_number_of_nodes_Valid() const;

    bool getClassic() const;
    void setClassic(const bool &classic);
    bool is_classic_Set() const;
    bool is_classic_Valid() const;

    QString getReservedNodeId() const;
    void setReservedNodeId(const QString &reserved_node_id);
    bool is_reserved_node_id_Set() const;
    bool is_reserved_node_id_Valid() const;

    QString getTargetReservedNodeOfferingId() const;
    void setTargetReservedNodeOfferingId(const QString &target_reserved_node_offering_id);
    bool is_target_reserved_node_offering_id_Set() const;
    bool is_target_reserved_node_offering_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_identifier;
    bool m_cluster_identifier_isSet;
    bool m_cluster_identifier_isValid;

    QString m_cluster_type;
    bool m_cluster_type_isSet;
    bool m_cluster_type_isValid;

    QString m_node_type;
    bool m_node_type_isSet;
    bool m_node_type_isValid;

    qint32 m_number_of_nodes;
    bool m_number_of_nodes_isSet;
    bool m_number_of_nodes_isValid;

    bool m_classic;
    bool m_classic_isSet;
    bool m_classic_isValid;

    QString m_reserved_node_id;
    bool m_reserved_node_id_isSet;
    bool m_reserved_node_id_isValid;

    QString m_target_reserved_node_offering_id;
    bool m_target_reserved_node_offering_id_isSet;
    bool m_target_reserved_node_offering_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResizeClusterMessage)

#endif // OAIResizeClusterMessage_H
