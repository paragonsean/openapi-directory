/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateClusterRequestKubernetesNetworkConfig;
import org.openapitools.client.model.CreateClusterRequestLogging;
import org.openapitools.client.model.CreateClusterRequestOutpostConfig;
import org.openapitools.client.model.CreateClusterRequestResourcesVpcConfig;
import org.openapitools.client.model.EncryptionConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateClusterRequest
 */
public class CreateClusterRequestTest {
    private final CreateClusterRequest model = new CreateClusterRequest();

    /**
     * Model tests for CreateClusterRequest
     */
    @Test
    public void testCreateClusterRequest() {
        // TODO: test CreateClusterRequest
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'resourcesVpcConfig'
     */
    @Test
    public void resourcesVpcConfigTest() {
        // TODO: test resourcesVpcConfig
    }

    /**
     * Test the property 'kubernetesNetworkConfig'
     */
    @Test
    public void kubernetesNetworkConfigTest() {
        // TODO: test kubernetesNetworkConfig
    }

    /**
     * Test the property 'logging'
     */
    @Test
    public void loggingTest() {
        // TODO: test logging
    }

    /**
     * Test the property 'clientRequestToken'
     */
    @Test
    public void clientRequestTokenTest() {
        // TODO: test clientRequestToken
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'outpostConfig'
     */
    @Test
    public void outpostConfigTest() {
        // TODO: test outpostConfig
    }

}
