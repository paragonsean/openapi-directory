/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateNodegroupRequestLaunchTemplate;
import org.openapitools.client.model.CreateNodegroupRequestRemoteAccess;
import org.openapitools.client.model.CreateNodegroupRequestScalingConfig;
import org.openapitools.client.model.CreateNodegroupRequestUpdateConfig;
import org.openapitools.client.model.Taint;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateNodegroupRequest
 */
public class CreateNodegroupRequestTest {
    private final CreateNodegroupRequest model = new CreateNodegroupRequest();

    /**
     * Model tests for CreateNodegroupRequest
     */
    @Test
    public void testCreateNodegroupRequest() {
        // TODO: test CreateNodegroupRequest
    }

    /**
     * Test the property 'nodegroupName'
     */
    @Test
    public void nodegroupNameTest() {
        // TODO: test nodegroupName
    }

    /**
     * Test the property 'scalingConfig'
     */
    @Test
    public void scalingConfigTest() {
        // TODO: test scalingConfig
    }

    /**
     * Test the property 'diskSize'
     */
    @Test
    public void diskSizeTest() {
        // TODO: test diskSize
    }

    /**
     * Test the property 'subnets'
     */
    @Test
    public void subnetsTest() {
        // TODO: test subnets
    }

    /**
     * Test the property 'instanceTypes'
     */
    @Test
    public void instanceTypesTest() {
        // TODO: test instanceTypes
    }

    /**
     * Test the property 'amiType'
     */
    @Test
    public void amiTypeTest() {
        // TODO: test amiType
    }

    /**
     * Test the property 'remoteAccess'
     */
    @Test
    public void remoteAccessTest() {
        // TODO: test remoteAccess
    }

    /**
     * Test the property 'nodeRole'
     */
    @Test
    public void nodeRoleTest() {
        // TODO: test nodeRole
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'taints'
     */
    @Test
    public void taintsTest() {
        // TODO: test taints
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'clientRequestToken'
     */
    @Test
    public void clientRequestTokenTest() {
        // TODO: test clientRequestToken
    }

    /**
     * Test the property 'launchTemplate'
     */
    @Test
    public void launchTemplateTest() {
        // TODO: test launchTemplate
    }

    /**
     * Test the property 'updateConfig'
     */
    @Test
    public void updateConfigTest() {
        // TODO: test updateConfig
    }

    /**
     * Test the property 'capacityType'
     */
    @Test
    public void capacityTypeTest() {
        // TODO: test capacityType
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'releaseVersion'
     */
    @Test
    public void releaseVersionTest() {
        // TODO: test releaseVersion
    }

}
