/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ClusterCertificateAuthority;
import org.openapitools.client.model.ClusterConnectorConfig;
import org.openapitools.client.model.ClusterHealth;
import org.openapitools.client.model.ClusterIdentity;
import org.openapitools.client.model.ClusterKubernetesNetworkConfig;
import org.openapitools.client.model.ClusterLogging;
import org.openapitools.client.model.ClusterOutpostConfig;
import org.openapitools.client.model.ClusterResourcesVpcConfig;
import org.openapitools.client.model.ClusterStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeleteClusterResponseCluster
 */
public class DeleteClusterResponseClusterTest {
    private final DeleteClusterResponseCluster model = new DeleteClusterResponseCluster();

    /**
     * Model tests for DeleteClusterResponseCluster
     */
    @Test
    public void testDeleteClusterResponseCluster() {
        // TODO: test DeleteClusterResponseCluster
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'resourcesVpcConfig'
     */
    @Test
    public void resourcesVpcConfigTest() {
        // TODO: test resourcesVpcConfig
    }

    /**
     * Test the property 'kubernetesNetworkConfig'
     */
    @Test
    public void kubernetesNetworkConfigTest() {
        // TODO: test kubernetesNetworkConfig
    }

    /**
     * Test the property 'logging'
     */
    @Test
    public void loggingTest() {
        // TODO: test logging
    }

    /**
     * Test the property 'identity'
     */
    @Test
    public void identityTest() {
        // TODO: test identity
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'certificateAuthority'
     */
    @Test
    public void certificateAuthorityTest() {
        // TODO: test certificateAuthority
    }

    /**
     * Test the property 'clientRequestToken'
     */
    @Test
    public void clientRequestTokenTest() {
        // TODO: test clientRequestToken
    }

    /**
     * Test the property 'platformVersion'
     */
    @Test
    public void platformVersionTest() {
        // TODO: test platformVersion
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'connectorConfig'
     */
    @Test
    public void connectorConfigTest() {
        // TODO: test connectorConfig
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'health'
     */
    @Test
    public void healthTest() {
        // TODO: test health
    }

    /**
     * Test the property 'outpostConfig'
     */
    @Test
    public void outpostConfigTest() {
        // TODO: test outpostConfig
    }

}
