/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateClusterRequestKubernetesNetworkConfig;
import org.openapitools.client.model.CreateClusterRequestLogging;
import org.openapitools.client.model.CreateClusterRequestOutpostConfig;
import org.openapitools.client.model.CreateClusterRequestResourcesVpcConfig;
import org.openapitools.client.model.EncryptionConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateClusterRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateClusterRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_RESOURCES_VPC_CONFIG = "resourcesVpcConfig";
  @SerializedName(SERIALIZED_NAME_RESOURCES_VPC_CONFIG)
  private CreateClusterRequestResourcesVpcConfig resourcesVpcConfig;

  public static final String SERIALIZED_NAME_KUBERNETES_NETWORK_CONFIG = "kubernetesNetworkConfig";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_NETWORK_CONFIG)
  private CreateClusterRequestKubernetesNetworkConfig kubernetesNetworkConfig;

  public static final String SERIALIZED_NAME_LOGGING = "logging";
  @SerializedName(SERIALIZED_NAME_LOGGING)
  private CreateClusterRequestLogging logging;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "clientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIG = "encryptionConfig";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIG)
  private List<EncryptionConfig> encryptionConfig = new ArrayList<>();

  public static final String SERIALIZED_NAME_OUTPOST_CONFIG = "outpostConfig";
  @SerializedName(SERIALIZED_NAME_OUTPOST_CONFIG)
  private CreateClusterRequestOutpostConfig outpostConfig;

  public CreateClusterRequest() {
  }

  public CreateClusterRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The unique name to give to your cluster.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateClusterRequest version(String version) {
    this.version = version;
    return this;
  }

  /**
   * &lt;p&gt;The desired Kubernetes version for your cluster. If you don&#39;t specify a value here, the default version available in Amazon EKS is used.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The default version might not be the latest version available.&lt;/p&gt; &lt;/note&gt;
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public CreateClusterRequest roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html\&quot;&gt;Amazon EKS Service IAM Role&lt;/a&gt; in the &lt;i&gt; &lt;i&gt;Amazon EKS User Guide&lt;/i&gt; &lt;/i&gt;.
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateClusterRequest resourcesVpcConfig(CreateClusterRequestResourcesVpcConfig resourcesVpcConfig) {
    this.resourcesVpcConfig = resourcesVpcConfig;
    return this;
  }

  /**
   * Get resourcesVpcConfig
   * @return resourcesVpcConfig
   */
  @javax.annotation.Nonnull
  public CreateClusterRequestResourcesVpcConfig getResourcesVpcConfig() {
    return resourcesVpcConfig;
  }

  public void setResourcesVpcConfig(CreateClusterRequestResourcesVpcConfig resourcesVpcConfig) {
    this.resourcesVpcConfig = resourcesVpcConfig;
  }


  public CreateClusterRequest kubernetesNetworkConfig(CreateClusterRequestKubernetesNetworkConfig kubernetesNetworkConfig) {
    this.kubernetesNetworkConfig = kubernetesNetworkConfig;
    return this;
  }

  /**
   * Get kubernetesNetworkConfig
   * @return kubernetesNetworkConfig
   */
  @javax.annotation.Nullable
  public CreateClusterRequestKubernetesNetworkConfig getKubernetesNetworkConfig() {
    return kubernetesNetworkConfig;
  }

  public void setKubernetesNetworkConfig(CreateClusterRequestKubernetesNetworkConfig kubernetesNetworkConfig) {
    this.kubernetesNetworkConfig = kubernetesNetworkConfig;
  }


  public CreateClusterRequest logging(CreateClusterRequestLogging logging) {
    this.logging = logging;
    return this;
  }

  /**
   * Get logging
   * @return logging
   */
  @javax.annotation.Nullable
  public CreateClusterRequestLogging getLogging() {
    return logging;
  }

  public void setLogging(CreateClusterRequestLogging logging) {
    this.logging = logging;
  }


  public CreateClusterRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateClusterRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateClusterRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public CreateClusterRequest encryptionConfig(List<EncryptionConfig> encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  public CreateClusterRequest addEncryptionConfigItem(EncryptionConfig encryptionConfigItem) {
    if (this.encryptionConfig == null) {
      this.encryptionConfig = new ArrayList<>();
    }
    this.encryptionConfig.add(encryptionConfigItem);
    return this;
  }

  /**
   * The encryption configuration for the cluster.
   * @return encryptionConfig
   */
  @javax.annotation.Nullable
  public List<EncryptionConfig> getEncryptionConfig() {
    return encryptionConfig;
  }

  public void setEncryptionConfig(List<EncryptionConfig> encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
  }


  public CreateClusterRequest outpostConfig(CreateClusterRequestOutpostConfig outpostConfig) {
    this.outpostConfig = outpostConfig;
    return this;
  }

  /**
   * Get outpostConfig
   * @return outpostConfig
   */
  @javax.annotation.Nullable
  public CreateClusterRequestOutpostConfig getOutpostConfig() {
    return outpostConfig;
  }

  public void setOutpostConfig(CreateClusterRequestOutpostConfig outpostConfig) {
    this.outpostConfig = outpostConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClusterRequest createClusterRequest = (CreateClusterRequest) o;
    return Objects.equals(this.name, createClusterRequest.name) &&
        Objects.equals(this.version, createClusterRequest.version) &&
        Objects.equals(this.roleArn, createClusterRequest.roleArn) &&
        Objects.equals(this.resourcesVpcConfig, createClusterRequest.resourcesVpcConfig) &&
        Objects.equals(this.kubernetesNetworkConfig, createClusterRequest.kubernetesNetworkConfig) &&
        Objects.equals(this.logging, createClusterRequest.logging) &&
        Objects.equals(this.clientRequestToken, createClusterRequest.clientRequestToken) &&
        Objects.equals(this.tags, createClusterRequest.tags) &&
        Objects.equals(this.encryptionConfig, createClusterRequest.encryptionConfig) &&
        Objects.equals(this.outpostConfig, createClusterRequest.outpostConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, version, roleArn, resourcesVpcConfig, kubernetesNetworkConfig, logging, clientRequestToken, tags, encryptionConfig, outpostConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClusterRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    resourcesVpcConfig: ").append(toIndentedString(resourcesVpcConfig)).append("\n");
    sb.append("    kubernetesNetworkConfig: ").append(toIndentedString(kubernetesNetworkConfig)).append("\n");
    sb.append("    logging: ").append(toIndentedString(logging)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    encryptionConfig: ").append(toIndentedString(encryptionConfig)).append("\n");
    sb.append("    outpostConfig: ").append(toIndentedString(outpostConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("version");
    openapiFields.add("roleArn");
    openapiFields.add("resourcesVpcConfig");
    openapiFields.add("kubernetesNetworkConfig");
    openapiFields.add("logging");
    openapiFields.add("clientRequestToken");
    openapiFields.add("tags");
    openapiFields.add("encryptionConfig");
    openapiFields.add("outpostConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("roleArn");
    openapiRequiredFields.add("resourcesVpcConfig");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateClusterRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateClusterRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateClusterRequest is not found in the empty JSON string", CreateClusterRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateClusterRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateClusterRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateClusterRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if (!jsonObj.get("roleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleArn").toString()));
      }
      // validate the required field `resourcesVpcConfig`
      CreateClusterRequestResourcesVpcConfig.validateJsonElement(jsonObj.get("resourcesVpcConfig"));
      // validate the optional field `kubernetesNetworkConfig`
      if (jsonObj.get("kubernetesNetworkConfig") != null && !jsonObj.get("kubernetesNetworkConfig").isJsonNull()) {
        CreateClusterRequestKubernetesNetworkConfig.validateJsonElement(jsonObj.get("kubernetesNetworkConfig"));
      }
      // validate the optional field `logging`
      if (jsonObj.get("logging") != null && !jsonObj.get("logging").isJsonNull()) {
        CreateClusterRequestLogging.validateJsonElement(jsonObj.get("logging"));
      }
      if ((jsonObj.get("clientRequestToken") != null && !jsonObj.get("clientRequestToken").isJsonNull()) && !jsonObj.get("clientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientRequestToken").toString()));
      }
      if (jsonObj.get("encryptionConfig") != null && !jsonObj.get("encryptionConfig").isJsonNull()) {
        JsonArray jsonArrayencryptionConfig = jsonObj.getAsJsonArray("encryptionConfig");
        if (jsonArrayencryptionConfig != null) {
          // ensure the json data is an array
          if (!jsonObj.get("encryptionConfig").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `encryptionConfig` to be an array in the JSON string but got `%s`", jsonObj.get("encryptionConfig").toString()));
          }

          // validate the optional field `encryptionConfig` (array)
          for (int i = 0; i < jsonArrayencryptionConfig.size(); i++) {
            EncryptionConfig.validateJsonElement(jsonArrayencryptionConfig.get(i));
          };
        }
      }
      // validate the optional field `outpostConfig`
      if (jsonObj.get("outpostConfig") != null && !jsonObj.get("outpostConfig").isJsonNull()) {
        CreateClusterRequestOutpostConfig.validateJsonElement(jsonObj.get("outpostConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateClusterRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateClusterRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateClusterRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateClusterRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateClusterRequest>() {
           @Override
           public void write(JsonWriter out, CreateClusterRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateClusterRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateClusterRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateClusterRequest
   * @throws IOException if the JSON string is invalid with respect to CreateClusterRequest
   */
  public static CreateClusterRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateClusterRequest.class);
  }

  /**
   * Convert an instance of CreateClusterRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

