/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.AddonHealth;
import org.openapitools.client.model.AddonMarketplaceInformation;
import org.openapitools.client.model.AddonStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An Amazon EKS add-on. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html\&quot;&gt;Amazon EKS add-ons&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Addon {
  public static final String SERIALIZED_NAME_ADDON_NAME = "addonName";
  @SerializedName(SERIALIZED_NAME_ADDON_NAME)
  private String addonName;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AddonStatus status;

  public static final String SERIALIZED_NAME_ADDON_VERSION = "addonVersion";
  @SerializedName(SERIALIZED_NAME_ADDON_VERSION)
  private String addonVersion;

  public static final String SERIALIZED_NAME_HEALTH = "health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private AddonHealth health;

  public static final String SERIALIZED_NAME_ADDON_ARN = "addonArn";
  @SerializedName(SERIALIZED_NAME_ADDON_ARN)
  private String addonArn;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_ROLE_ARN = "serviceAccountRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_ROLE_ARN)
  private String serviceAccountRoleArn;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_MARKETPLACE_INFORMATION = "marketplaceInformation";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_INFORMATION)
  private AddonMarketplaceInformation marketplaceInformation;

  public static final String SERIALIZED_NAME_CONFIGURATION_VALUES = "configurationValues";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_VALUES)
  private String configurationValues;

  public Addon() {
  }

  public Addon addonName(String addonName) {
    this.addonName = addonName;
    return this;
  }

  /**
   * Get addonName
   * @return addonName
   */
  @javax.annotation.Nullable
  public String getAddonName() {
    return addonName;
  }

  public void setAddonName(String addonName) {
    this.addonName = addonName;
  }


  public Addon clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public Addon status(AddonStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AddonStatus getStatus() {
    return status;
  }

  public void setStatus(AddonStatus status) {
    this.status = status;
  }


  public Addon addonVersion(String addonVersion) {
    this.addonVersion = addonVersion;
    return this;
  }

  /**
   * Get addonVersion
   * @return addonVersion
   */
  @javax.annotation.Nullable
  public String getAddonVersion() {
    return addonVersion;
  }

  public void setAddonVersion(String addonVersion) {
    this.addonVersion = addonVersion;
  }


  public Addon health(AddonHealth health) {
    this.health = health;
    return this;
  }

  /**
   * Get health
   * @return health
   */
  @javax.annotation.Nullable
  public AddonHealth getHealth() {
    return health;
  }

  public void setHealth(AddonHealth health) {
    this.health = health;
  }


  public Addon addonArn(String addonArn) {
    this.addonArn = addonArn;
    return this;
  }

  /**
   * Get addonArn
   * @return addonArn
   */
  @javax.annotation.Nullable
  public String getAddonArn() {
    return addonArn;
  }

  public void setAddonArn(String addonArn) {
    this.addonArn = addonArn;
  }


  public Addon createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Addon modifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Get modifiedAt
   * @return modifiedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public Addon serviceAccountRoleArn(String serviceAccountRoleArn) {
    this.serviceAccountRoleArn = serviceAccountRoleArn;
    return this;
  }

  /**
   * Get serviceAccountRoleArn
   * @return serviceAccountRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceAccountRoleArn() {
    return serviceAccountRoleArn;
  }

  public void setServiceAccountRoleArn(String serviceAccountRoleArn) {
    this.serviceAccountRoleArn = serviceAccountRoleArn;
  }


  public Addon tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public Addon publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }


  public Addon owner(String owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  public Addon marketplaceInformation(AddonMarketplaceInformation marketplaceInformation) {
    this.marketplaceInformation = marketplaceInformation;
    return this;
  }

  /**
   * Get marketplaceInformation
   * @return marketplaceInformation
   */
  @javax.annotation.Nullable
  public AddonMarketplaceInformation getMarketplaceInformation() {
    return marketplaceInformation;
  }

  public void setMarketplaceInformation(AddonMarketplaceInformation marketplaceInformation) {
    this.marketplaceInformation = marketplaceInformation;
  }


  public Addon configurationValues(String configurationValues) {
    this.configurationValues = configurationValues;
    return this;
  }

  /**
   * Get configurationValues
   * @return configurationValues
   */
  @javax.annotation.Nullable
  public String getConfigurationValues() {
    return configurationValues;
  }

  public void setConfigurationValues(String configurationValues) {
    this.configurationValues = configurationValues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addon addon = (Addon) o;
    return Objects.equals(this.addonName, addon.addonName) &&
        Objects.equals(this.clusterName, addon.clusterName) &&
        Objects.equals(this.status, addon.status) &&
        Objects.equals(this.addonVersion, addon.addonVersion) &&
        Objects.equals(this.health, addon.health) &&
        Objects.equals(this.addonArn, addon.addonArn) &&
        Objects.equals(this.createdAt, addon.createdAt) &&
        Objects.equals(this.modifiedAt, addon.modifiedAt) &&
        Objects.equals(this.serviceAccountRoleArn, addon.serviceAccountRoleArn) &&
        Objects.equals(this.tags, addon.tags) &&
        Objects.equals(this.publisher, addon.publisher) &&
        Objects.equals(this.owner, addon.owner) &&
        Objects.equals(this.marketplaceInformation, addon.marketplaceInformation) &&
        Objects.equals(this.configurationValues, addon.configurationValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addonName, clusterName, status, addonVersion, health, addonArn, createdAt, modifiedAt, serviceAccountRoleArn, tags, publisher, owner, marketplaceInformation, configurationValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addon {\n");
    sb.append("    addonName: ").append(toIndentedString(addonName)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    addonVersion: ").append(toIndentedString(addonVersion)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    addonArn: ").append(toIndentedString(addonArn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    serviceAccountRoleArn: ").append(toIndentedString(serviceAccountRoleArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    marketplaceInformation: ").append(toIndentedString(marketplaceInformation)).append("\n");
    sb.append("    configurationValues: ").append(toIndentedString(configurationValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addonName");
    openapiFields.add("clusterName");
    openapiFields.add("status");
    openapiFields.add("addonVersion");
    openapiFields.add("health");
    openapiFields.add("addonArn");
    openapiFields.add("createdAt");
    openapiFields.add("modifiedAt");
    openapiFields.add("serviceAccountRoleArn");
    openapiFields.add("tags");
    openapiFields.add("publisher");
    openapiFields.add("owner");
    openapiFields.add("marketplaceInformation");
    openapiFields.add("configurationValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Addon
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Addon.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Addon is not found in the empty JSON string", Addon.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Addon.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Addon` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `addonName`
      if (jsonObj.get("addonName") != null && !jsonObj.get("addonName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("addonName"));
      }
      // validate the optional field `clusterName`
      if (jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterName"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AddonStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `addonVersion`
      if (jsonObj.get("addonVersion") != null && !jsonObj.get("addonVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("addonVersion"));
      }
      // validate the optional field `health`
      if (jsonObj.get("health") != null && !jsonObj.get("health").isJsonNull()) {
        AddonHealth.validateJsonElement(jsonObj.get("health"));
      }
      // validate the optional field `addonArn`
      if (jsonObj.get("addonArn") != null && !jsonObj.get("addonArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("addonArn"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `modifiedAt`
      if (jsonObj.get("modifiedAt") != null && !jsonObj.get("modifiedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("modifiedAt"));
      }
      // validate the optional field `serviceAccountRoleArn`
      if (jsonObj.get("serviceAccountRoleArn") != null && !jsonObj.get("serviceAccountRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("serviceAccountRoleArn"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `publisher`
      if (jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("publisher"));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("owner"));
      }
      // validate the optional field `marketplaceInformation`
      if (jsonObj.get("marketplaceInformation") != null && !jsonObj.get("marketplaceInformation").isJsonNull()) {
        AddonMarketplaceInformation.validateJsonElement(jsonObj.get("marketplaceInformation"));
      }
      // validate the optional field `configurationValues`
      if (jsonObj.get("configurationValues") != null && !jsonObj.get("configurationValues").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("configurationValues"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Addon.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Addon' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Addon> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Addon.class));

       return (TypeAdapter<T>) new TypeAdapter<Addon>() {
           @Override
           public void write(JsonWriter out, Addon value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Addon read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Addon given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Addon
   * @throws IOException if the JSON string is invalid with respect to Addon
   */
  public static Addon fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Addon.class);
  }

  /**
   * Convert an instance of Addon to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

