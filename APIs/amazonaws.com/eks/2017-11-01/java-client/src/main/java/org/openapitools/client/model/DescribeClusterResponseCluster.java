/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ClusterCertificateAuthority;
import org.openapitools.client.model.ClusterConnectorConfig;
import org.openapitools.client.model.ClusterHealth;
import org.openapitools.client.model.ClusterIdentity;
import org.openapitools.client.model.ClusterKubernetesNetworkConfig;
import org.openapitools.client.model.ClusterLogging;
import org.openapitools.client.model.ClusterOutpostConfig;
import org.openapitools.client.model.ClusterResourcesVpcConfig;
import org.openapitools.client.model.ClusterStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeClusterResponseCluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeClusterResponseCluster {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_RESOURCES_VPC_CONFIG = "resourcesVpcConfig";
  @SerializedName(SERIALIZED_NAME_RESOURCES_VPC_CONFIG)
  private ClusterResourcesVpcConfig resourcesVpcConfig;

  public static final String SERIALIZED_NAME_KUBERNETES_NETWORK_CONFIG = "kubernetesNetworkConfig";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_NETWORK_CONFIG)
  private ClusterKubernetesNetworkConfig kubernetesNetworkConfig;

  public static final String SERIALIZED_NAME_LOGGING = "logging";
  @SerializedName(SERIALIZED_NAME_LOGGING)
  private ClusterLogging logging;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private ClusterIdentity identity;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ClusterStatus status;

  public static final String SERIALIZED_NAME_CERTIFICATE_AUTHORITY = "certificateAuthority";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_AUTHORITY)
  private ClusterCertificateAuthority certificateAuthority;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "clientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_PLATFORM_VERSION = "platformVersion";
  @SerializedName(SERIALIZED_NAME_PLATFORM_VERSION)
  private String platformVersion;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_ENCRYPTION_CONFIG = "encryptionConfig";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_CONFIG)
  private List encryptionConfig;

  public static final String SERIALIZED_NAME_CONNECTOR_CONFIG = "connectorConfig";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_CONFIG)
  private ClusterConnectorConfig connectorConfig;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_HEALTH = "health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private ClusterHealth health;

  public static final String SERIALIZED_NAME_OUTPOST_CONFIG = "outpostConfig";
  @SerializedName(SERIALIZED_NAME_OUTPOST_CONFIG)
  private ClusterOutpostConfig outpostConfig;

  public DescribeClusterResponseCluster() {
  }

  public DescribeClusterResponseCluster name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeClusterResponseCluster arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribeClusterResponseCluster createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeClusterResponseCluster version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public DescribeClusterResponseCluster endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public DescribeClusterResponseCluster roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeClusterResponseCluster resourcesVpcConfig(ClusterResourcesVpcConfig resourcesVpcConfig) {
    this.resourcesVpcConfig = resourcesVpcConfig;
    return this;
  }

  /**
   * Get resourcesVpcConfig
   * @return resourcesVpcConfig
   */
  @javax.annotation.Nullable
  public ClusterResourcesVpcConfig getResourcesVpcConfig() {
    return resourcesVpcConfig;
  }

  public void setResourcesVpcConfig(ClusterResourcesVpcConfig resourcesVpcConfig) {
    this.resourcesVpcConfig = resourcesVpcConfig;
  }


  public DescribeClusterResponseCluster kubernetesNetworkConfig(ClusterKubernetesNetworkConfig kubernetesNetworkConfig) {
    this.kubernetesNetworkConfig = kubernetesNetworkConfig;
    return this;
  }

  /**
   * Get kubernetesNetworkConfig
   * @return kubernetesNetworkConfig
   */
  @javax.annotation.Nullable
  public ClusterKubernetesNetworkConfig getKubernetesNetworkConfig() {
    return kubernetesNetworkConfig;
  }

  public void setKubernetesNetworkConfig(ClusterKubernetesNetworkConfig kubernetesNetworkConfig) {
    this.kubernetesNetworkConfig = kubernetesNetworkConfig;
  }


  public DescribeClusterResponseCluster logging(ClusterLogging logging) {
    this.logging = logging;
    return this;
  }

  /**
   * Get logging
   * @return logging
   */
  @javax.annotation.Nullable
  public ClusterLogging getLogging() {
    return logging;
  }

  public void setLogging(ClusterLogging logging) {
    this.logging = logging;
  }


  public DescribeClusterResponseCluster identity(ClusterIdentity identity) {
    this.identity = identity;
    return this;
  }

  /**
   * Get identity
   * @return identity
   */
  @javax.annotation.Nullable
  public ClusterIdentity getIdentity() {
    return identity;
  }

  public void setIdentity(ClusterIdentity identity) {
    this.identity = identity;
  }


  public DescribeClusterResponseCluster status(ClusterStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ClusterStatus getStatus() {
    return status;
  }

  public void setStatus(ClusterStatus status) {
    this.status = status;
  }


  public DescribeClusterResponseCluster certificateAuthority(ClusterCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
    return this;
  }

  /**
   * Get certificateAuthority
   * @return certificateAuthority
   */
  @javax.annotation.Nullable
  public ClusterCertificateAuthority getCertificateAuthority() {
    return certificateAuthority;
  }

  public void setCertificateAuthority(ClusterCertificateAuthority certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
  }


  public DescribeClusterResponseCluster clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Get clientRequestToken
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public DescribeClusterResponseCluster platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

  /**
   * Get platformVersion
   * @return platformVersion
   */
  @javax.annotation.Nullable
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }


  public DescribeClusterResponseCluster tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public DescribeClusterResponseCluster encryptionConfig(List encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
    return this;
  }

  /**
   * Get encryptionConfig
   * @return encryptionConfig
   */
  @javax.annotation.Nullable
  public List getEncryptionConfig() {
    return encryptionConfig;
  }

  public void setEncryptionConfig(List encryptionConfig) {
    this.encryptionConfig = encryptionConfig;
  }


  public DescribeClusterResponseCluster connectorConfig(ClusterConnectorConfig connectorConfig) {
    this.connectorConfig = connectorConfig;
    return this;
  }

  /**
   * Get connectorConfig
   * @return connectorConfig
   */
  @javax.annotation.Nullable
  public ClusterConnectorConfig getConnectorConfig() {
    return connectorConfig;
  }

  public void setConnectorConfig(ClusterConnectorConfig connectorConfig) {
    this.connectorConfig = connectorConfig;
  }


  public DescribeClusterResponseCluster id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribeClusterResponseCluster health(ClusterHealth health) {
    this.health = health;
    return this;
  }

  /**
   * Get health
   * @return health
   */
  @javax.annotation.Nullable
  public ClusterHealth getHealth() {
    return health;
  }

  public void setHealth(ClusterHealth health) {
    this.health = health;
  }


  public DescribeClusterResponseCluster outpostConfig(ClusterOutpostConfig outpostConfig) {
    this.outpostConfig = outpostConfig;
    return this;
  }

  /**
   * Get outpostConfig
   * @return outpostConfig
   */
  @javax.annotation.Nullable
  public ClusterOutpostConfig getOutpostConfig() {
    return outpostConfig;
  }

  public void setOutpostConfig(ClusterOutpostConfig outpostConfig) {
    this.outpostConfig = outpostConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeClusterResponseCluster describeClusterResponseCluster = (DescribeClusterResponseCluster) o;
    return Objects.equals(this.name, describeClusterResponseCluster.name) &&
        Objects.equals(this.arn, describeClusterResponseCluster.arn) &&
        Objects.equals(this.createdAt, describeClusterResponseCluster.createdAt) &&
        Objects.equals(this.version, describeClusterResponseCluster.version) &&
        Objects.equals(this.endpoint, describeClusterResponseCluster.endpoint) &&
        Objects.equals(this.roleArn, describeClusterResponseCluster.roleArn) &&
        Objects.equals(this.resourcesVpcConfig, describeClusterResponseCluster.resourcesVpcConfig) &&
        Objects.equals(this.kubernetesNetworkConfig, describeClusterResponseCluster.kubernetesNetworkConfig) &&
        Objects.equals(this.logging, describeClusterResponseCluster.logging) &&
        Objects.equals(this.identity, describeClusterResponseCluster.identity) &&
        Objects.equals(this.status, describeClusterResponseCluster.status) &&
        Objects.equals(this.certificateAuthority, describeClusterResponseCluster.certificateAuthority) &&
        Objects.equals(this.clientRequestToken, describeClusterResponseCluster.clientRequestToken) &&
        Objects.equals(this.platformVersion, describeClusterResponseCluster.platformVersion) &&
        Objects.equals(this.tags, describeClusterResponseCluster.tags) &&
        Objects.equals(this.encryptionConfig, describeClusterResponseCluster.encryptionConfig) &&
        Objects.equals(this.connectorConfig, describeClusterResponseCluster.connectorConfig) &&
        Objects.equals(this.id, describeClusterResponseCluster.id) &&
        Objects.equals(this.health, describeClusterResponseCluster.health) &&
        Objects.equals(this.outpostConfig, describeClusterResponseCluster.outpostConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, arn, createdAt, version, endpoint, roleArn, resourcesVpcConfig, kubernetesNetworkConfig, logging, identity, status, certificateAuthority, clientRequestToken, platformVersion, tags, encryptionConfig, connectorConfig, id, health, outpostConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeClusterResponseCluster {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    resourcesVpcConfig: ").append(toIndentedString(resourcesVpcConfig)).append("\n");
    sb.append("    kubernetesNetworkConfig: ").append(toIndentedString(kubernetesNetworkConfig)).append("\n");
    sb.append("    logging: ").append(toIndentedString(logging)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    certificateAuthority: ").append(toIndentedString(certificateAuthority)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    encryptionConfig: ").append(toIndentedString(encryptionConfig)).append("\n");
    sb.append("    connectorConfig: ").append(toIndentedString(connectorConfig)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    outpostConfig: ").append(toIndentedString(outpostConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("arn");
    openapiFields.add("createdAt");
    openapiFields.add("version");
    openapiFields.add("endpoint");
    openapiFields.add("roleArn");
    openapiFields.add("resourcesVpcConfig");
    openapiFields.add("kubernetesNetworkConfig");
    openapiFields.add("logging");
    openapiFields.add("identity");
    openapiFields.add("status");
    openapiFields.add("certificateAuthority");
    openapiFields.add("clientRequestToken");
    openapiFields.add("platformVersion");
    openapiFields.add("tags");
    openapiFields.add("encryptionConfig");
    openapiFields.add("connectorConfig");
    openapiFields.add("id");
    openapiFields.add("health");
    openapiFields.add("outpostConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeClusterResponseCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeClusterResponseCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeClusterResponseCluster is not found in the empty JSON string", DescribeClusterResponseCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeClusterResponseCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeClusterResponseCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `version`
      if (jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("version"));
      }
      // validate the optional field `endpoint`
      if (jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("endpoint"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `resourcesVpcConfig`
      if (jsonObj.get("resourcesVpcConfig") != null && !jsonObj.get("resourcesVpcConfig").isJsonNull()) {
        ClusterResourcesVpcConfig.validateJsonElement(jsonObj.get("resourcesVpcConfig"));
      }
      // validate the optional field `kubernetesNetworkConfig`
      if (jsonObj.get("kubernetesNetworkConfig") != null && !jsonObj.get("kubernetesNetworkConfig").isJsonNull()) {
        ClusterKubernetesNetworkConfig.validateJsonElement(jsonObj.get("kubernetesNetworkConfig"));
      }
      // validate the optional field `logging`
      if (jsonObj.get("logging") != null && !jsonObj.get("logging").isJsonNull()) {
        ClusterLogging.validateJsonElement(jsonObj.get("logging"));
      }
      // validate the optional field `identity`
      if (jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()) {
        ClusterIdentity.validateJsonElement(jsonObj.get("identity"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ClusterStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `certificateAuthority`
      if (jsonObj.get("certificateAuthority") != null && !jsonObj.get("certificateAuthority").isJsonNull()) {
        ClusterCertificateAuthority.validateJsonElement(jsonObj.get("certificateAuthority"));
      }
      // validate the optional field `clientRequestToken`
      if (jsonObj.get("clientRequestToken") != null && !jsonObj.get("clientRequestToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clientRequestToken"));
      }
      // validate the optional field `platformVersion`
      if (jsonObj.get("platformVersion") != null && !jsonObj.get("platformVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("platformVersion"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `encryptionConfig`
      if (jsonObj.get("encryptionConfig") != null && !jsonObj.get("encryptionConfig").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("encryptionConfig"));
      }
      // validate the optional field `connectorConfig`
      if (jsonObj.get("connectorConfig") != null && !jsonObj.get("connectorConfig").isJsonNull()) {
        ClusterConnectorConfig.validateJsonElement(jsonObj.get("connectorConfig"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `health`
      if (jsonObj.get("health") != null && !jsonObj.get("health").isJsonNull()) {
        ClusterHealth.validateJsonElement(jsonObj.get("health"));
      }
      // validate the optional field `outpostConfig`
      if (jsonObj.get("outpostConfig") != null && !jsonObj.get("outpostConfig").isJsonNull()) {
        ClusterOutpostConfig.validateJsonElement(jsonObj.get("outpostConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeClusterResponseCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeClusterResponseCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeClusterResponseCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeClusterResponseCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeClusterResponseCluster>() {
           @Override
           public void write(JsonWriter out, DescribeClusterResponseCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeClusterResponseCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeClusterResponseCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeClusterResponseCluster
   * @throws IOException if the JSON string is invalid with respect to DescribeClusterResponseCluster
   */
  public static DescribeClusterResponseCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeClusterResponseCluster.class);
  }

  /**
   * Convert an instance of DescribeClusterResponseCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

