/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.FargateProfileStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeFargateProfileResponseFargateProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeFargateProfileResponseFargateProfile {
  public static final String SERIALIZED_NAME_FARGATE_PROFILE_NAME = "fargateProfileName";
  @SerializedName(SERIALIZED_NAME_FARGATE_PROFILE_NAME)
  private String fargateProfileName;

  public static final String SERIALIZED_NAME_FARGATE_PROFILE_ARN = "fargateProfileArn";
  @SerializedName(SERIALIZED_NAME_FARGATE_PROFILE_ARN)
  private String fargateProfileArn;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_POD_EXECUTION_ROLE_ARN = "podExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_POD_EXECUTION_ROLE_ARN)
  private String podExecutionRoleArn;

  public static final String SERIALIZED_NAME_SUBNETS = "subnets";
  @SerializedName(SERIALIZED_NAME_SUBNETS)
  private List subnets;

  public static final String SERIALIZED_NAME_SELECTORS = "selectors";
  @SerializedName(SERIALIZED_NAME_SELECTORS)
  private List selectors;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private FargateProfileStatus status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public DescribeFargateProfileResponseFargateProfile() {
  }

  public DescribeFargateProfileResponseFargateProfile fargateProfileName(String fargateProfileName) {
    this.fargateProfileName = fargateProfileName;
    return this;
  }

  /**
   * Get fargateProfileName
   * @return fargateProfileName
   */
  @javax.annotation.Nullable
  public String getFargateProfileName() {
    return fargateProfileName;
  }

  public void setFargateProfileName(String fargateProfileName) {
    this.fargateProfileName = fargateProfileName;
  }


  public DescribeFargateProfileResponseFargateProfile fargateProfileArn(String fargateProfileArn) {
    this.fargateProfileArn = fargateProfileArn;
    return this;
  }

  /**
   * Get fargateProfileArn
   * @return fargateProfileArn
   */
  @javax.annotation.Nullable
  public String getFargateProfileArn() {
    return fargateProfileArn;
  }

  public void setFargateProfileArn(String fargateProfileArn) {
    this.fargateProfileArn = fargateProfileArn;
  }


  public DescribeFargateProfileResponseFargateProfile clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public DescribeFargateProfileResponseFargateProfile createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeFargateProfileResponseFargateProfile podExecutionRoleArn(String podExecutionRoleArn) {
    this.podExecutionRoleArn = podExecutionRoleArn;
    return this;
  }

  /**
   * Get podExecutionRoleArn
   * @return podExecutionRoleArn
   */
  @javax.annotation.Nullable
  public String getPodExecutionRoleArn() {
    return podExecutionRoleArn;
  }

  public void setPodExecutionRoleArn(String podExecutionRoleArn) {
    this.podExecutionRoleArn = podExecutionRoleArn;
  }


  public DescribeFargateProfileResponseFargateProfile subnets(List subnets) {
    this.subnets = subnets;
    return this;
  }

  /**
   * Get subnets
   * @return subnets
   */
  @javax.annotation.Nullable
  public List getSubnets() {
    return subnets;
  }

  public void setSubnets(List subnets) {
    this.subnets = subnets;
  }


  public DescribeFargateProfileResponseFargateProfile selectors(List selectors) {
    this.selectors = selectors;
    return this;
  }

  /**
   * Get selectors
   * @return selectors
   */
  @javax.annotation.Nullable
  public List getSelectors() {
    return selectors;
  }

  public void setSelectors(List selectors) {
    this.selectors = selectors;
  }


  public DescribeFargateProfileResponseFargateProfile status(FargateProfileStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public FargateProfileStatus getStatus() {
    return status;
  }

  public void setStatus(FargateProfileStatus status) {
    this.status = status;
  }


  public DescribeFargateProfileResponseFargateProfile tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeFargateProfileResponseFargateProfile describeFargateProfileResponseFargateProfile = (DescribeFargateProfileResponseFargateProfile) o;
    return Objects.equals(this.fargateProfileName, describeFargateProfileResponseFargateProfile.fargateProfileName) &&
        Objects.equals(this.fargateProfileArn, describeFargateProfileResponseFargateProfile.fargateProfileArn) &&
        Objects.equals(this.clusterName, describeFargateProfileResponseFargateProfile.clusterName) &&
        Objects.equals(this.createdAt, describeFargateProfileResponseFargateProfile.createdAt) &&
        Objects.equals(this.podExecutionRoleArn, describeFargateProfileResponseFargateProfile.podExecutionRoleArn) &&
        Objects.equals(this.subnets, describeFargateProfileResponseFargateProfile.subnets) &&
        Objects.equals(this.selectors, describeFargateProfileResponseFargateProfile.selectors) &&
        Objects.equals(this.status, describeFargateProfileResponseFargateProfile.status) &&
        Objects.equals(this.tags, describeFargateProfileResponseFargateProfile.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fargateProfileName, fargateProfileArn, clusterName, createdAt, podExecutionRoleArn, subnets, selectors, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeFargateProfileResponseFargateProfile {\n");
    sb.append("    fargateProfileName: ").append(toIndentedString(fargateProfileName)).append("\n");
    sb.append("    fargateProfileArn: ").append(toIndentedString(fargateProfileArn)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    podExecutionRoleArn: ").append(toIndentedString(podExecutionRoleArn)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    selectors: ").append(toIndentedString(selectors)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fargateProfileName");
    openapiFields.add("fargateProfileArn");
    openapiFields.add("clusterName");
    openapiFields.add("createdAt");
    openapiFields.add("podExecutionRoleArn");
    openapiFields.add("subnets");
    openapiFields.add("selectors");
    openapiFields.add("status");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeFargateProfileResponseFargateProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeFargateProfileResponseFargateProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeFargateProfileResponseFargateProfile is not found in the empty JSON string", DescribeFargateProfileResponseFargateProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeFargateProfileResponseFargateProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeFargateProfileResponseFargateProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fargateProfileName`
      if (jsonObj.get("fargateProfileName") != null && !jsonObj.get("fargateProfileName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("fargateProfileName"));
      }
      // validate the optional field `fargateProfileArn`
      if (jsonObj.get("fargateProfileArn") != null && !jsonObj.get("fargateProfileArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("fargateProfileArn"));
      }
      // validate the optional field `clusterName`
      if (jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterName"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `podExecutionRoleArn`
      if (jsonObj.get("podExecutionRoleArn") != null && !jsonObj.get("podExecutionRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("podExecutionRoleArn"));
      }
      // validate the optional field `subnets`
      if (jsonObj.get("subnets") != null && !jsonObj.get("subnets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("subnets"));
      }
      // validate the optional field `selectors`
      if (jsonObj.get("selectors") != null && !jsonObj.get("selectors").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("selectors"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        FargateProfileStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeFargateProfileResponseFargateProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeFargateProfileResponseFargateProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeFargateProfileResponseFargateProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeFargateProfileResponseFargateProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeFargateProfileResponseFargateProfile>() {
           @Override
           public void write(JsonWriter out, DescribeFargateProfileResponseFargateProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeFargateProfileResponseFargateProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeFargateProfileResponseFargateProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeFargateProfileResponseFargateProfile
   * @throws IOException if the JSON string is invalid with respect to DescribeFargateProfileResponseFargateProfile
   */
  public static DescribeFargateProfileResponseFargateProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeFargateProfileResponseFargateProfile.class);
  }

  /**
   * Convert an instance of DescribeFargateProfileResponseFargateProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

