/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAddonRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateAddonRequest {
  public static final String SERIALIZED_NAME_ADDON_VERSION = "addonVersion";
  @SerializedName(SERIALIZED_NAME_ADDON_VERSION)
  private String addonVersion;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_ROLE_ARN = "serviceAccountRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_ROLE_ARN)
  private String serviceAccountRoleArn;

  /**
   * &lt;p&gt;How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;None&lt;/b&gt; – Amazon EKS doesn&#39;t change the value. The update might fail.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Overwrite&lt;/b&gt; – Amazon EKS overwrites the changed value back to the Amazon EKS default value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Preserve&lt;/b&gt; – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   */
  @JsonAdapter(ResolveConflictsEnum.Adapter.class)
  public enum ResolveConflictsEnum {
    OVERWRITE("OVERWRITE"),
    
    NONE("NONE"),
    
    PRESERVE("PRESERVE");

    private String value;

    ResolveConflictsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResolveConflictsEnum fromValue(String value) {
      for (ResolveConflictsEnum b : ResolveConflictsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResolveConflictsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResolveConflictsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResolveConflictsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResolveConflictsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResolveConflictsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOLVE_CONFLICTS = "resolveConflicts";
  @SerializedName(SERIALIZED_NAME_RESOLVE_CONFLICTS)
  private ResolveConflictsEnum resolveConflicts;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "clientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_CONFIGURATION_VALUES = "configurationValues";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_VALUES)
  private String configurationValues;

  public UpdateAddonRequest() {
  }

  public UpdateAddonRequest addonVersion(String addonVersion) {
    this.addonVersion = addonVersion;
    return this;
  }

  /**
   * The version of the add-on. The version must match one of the versions returned by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\&quot;&gt; &lt;code&gt;DescribeAddonVersions&lt;/code&gt; &lt;/a&gt;.
   * @return addonVersion
   */
  @javax.annotation.Nullable
  public String getAddonVersion() {
    return addonVersion;
  }

  public void setAddonVersion(String addonVersion) {
    this.addonVersion = addonVersion;
  }


  public UpdateAddonRequest serviceAccountRoleArn(String serviceAccountRoleArn) {
    this.serviceAccountRoleArn = serviceAccountRoleArn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on&#39;s service account. The role must be assigned the IAM permissions required by the add-on. If you don&#39;t specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html\&quot;&gt;Amazon EKS node IAM role&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html\&quot;&gt;Enabling IAM roles for service accounts on your cluster&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt;
   * @return serviceAccountRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceAccountRoleArn() {
    return serviceAccountRoleArn;
  }

  public void setServiceAccountRoleArn(String serviceAccountRoleArn) {
    this.serviceAccountRoleArn = serviceAccountRoleArn;
  }


  public UpdateAddonRequest resolveConflicts(ResolveConflictsEnum resolveConflicts) {
    this.resolveConflicts = resolveConflicts;
    return this;
  }

  /**
   * &lt;p&gt;How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;None&lt;/b&gt; – Amazon EKS doesn&#39;t change the value. The update might fail.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Overwrite&lt;/b&gt; – Amazon EKS overwrites the changed value back to the Amazon EKS default value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Preserve&lt;/b&gt; – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return resolveConflicts
   */
  @javax.annotation.Nullable
  public ResolveConflictsEnum getResolveConflicts() {
    return resolveConflicts;
  }

  public void setResolveConflicts(ResolveConflictsEnum resolveConflicts) {
    this.resolveConflicts = resolveConflicts;
  }


  public UpdateAddonRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public UpdateAddonRequest configurationValues(String configurationValues) {
    this.configurationValues = configurationValues;
    return this;
  }

  /**
   * The set of configuration values for the add-on that&#39;s created. The values that you provide are validated against the schema in &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html\&quot;&gt;DescribeAddonConfiguration&lt;/a&gt;.
   * @return configurationValues
   */
  @javax.annotation.Nullable
  public String getConfigurationValues() {
    return configurationValues;
  }

  public void setConfigurationValues(String configurationValues) {
    this.configurationValues = configurationValues;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAddonRequest updateAddonRequest = (UpdateAddonRequest) o;
    return Objects.equals(this.addonVersion, updateAddonRequest.addonVersion) &&
        Objects.equals(this.serviceAccountRoleArn, updateAddonRequest.serviceAccountRoleArn) &&
        Objects.equals(this.resolveConflicts, updateAddonRequest.resolveConflicts) &&
        Objects.equals(this.clientRequestToken, updateAddonRequest.clientRequestToken) &&
        Objects.equals(this.configurationValues, updateAddonRequest.configurationValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addonVersion, serviceAccountRoleArn, resolveConflicts, clientRequestToken, configurationValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAddonRequest {\n");
    sb.append("    addonVersion: ").append(toIndentedString(addonVersion)).append("\n");
    sb.append("    serviceAccountRoleArn: ").append(toIndentedString(serviceAccountRoleArn)).append("\n");
    sb.append("    resolveConflicts: ").append(toIndentedString(resolveConflicts)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    configurationValues: ").append(toIndentedString(configurationValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addonVersion");
    openapiFields.add("serviceAccountRoleArn");
    openapiFields.add("resolveConflicts");
    openapiFields.add("clientRequestToken");
    openapiFields.add("configurationValues");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAddonRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAddonRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAddonRequest is not found in the empty JSON string", UpdateAddonRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAddonRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAddonRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addonVersion") != null && !jsonObj.get("addonVersion").isJsonNull()) && !jsonObj.get("addonVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addonVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addonVersion").toString()));
      }
      if ((jsonObj.get("serviceAccountRoleArn") != null && !jsonObj.get("serviceAccountRoleArn").isJsonNull()) && !jsonObj.get("serviceAccountRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccountRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccountRoleArn").toString()));
      }
      if ((jsonObj.get("resolveConflicts") != null && !jsonObj.get("resolveConflicts").isJsonNull()) && !jsonObj.get("resolveConflicts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resolveConflicts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resolveConflicts").toString()));
      }
      // validate the optional field `resolveConflicts`
      if (jsonObj.get("resolveConflicts") != null && !jsonObj.get("resolveConflicts").isJsonNull()) {
        ResolveConflictsEnum.validateJsonElement(jsonObj.get("resolveConflicts"));
      }
      if ((jsonObj.get("clientRequestToken") != null && !jsonObj.get("clientRequestToken").isJsonNull()) && !jsonObj.get("clientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientRequestToken").toString()));
      }
      if ((jsonObj.get("configurationValues") != null && !jsonObj.get("configurationValues").isJsonNull()) && !jsonObj.get("configurationValues").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `configurationValues` to be a primitive type in the JSON string but got `%s`", jsonObj.get("configurationValues").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAddonRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAddonRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAddonRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAddonRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAddonRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAddonRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAddonRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAddonRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAddonRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAddonRequest
   */
  public static UpdateAddonRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAddonRequest.class);
  }

  /**
   * Convert an instance of UpdateAddonRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

