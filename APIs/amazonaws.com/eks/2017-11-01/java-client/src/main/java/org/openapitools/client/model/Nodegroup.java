/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AMITypes;
import org.openapitools.client.model.CapacityTypes;
import org.openapitools.client.model.CreateNodegroupRequestUpdateConfig;
import org.openapitools.client.model.NodegroupHealth;
import org.openapitools.client.model.NodegroupLaunchTemplate;
import org.openapitools.client.model.NodegroupRemoteAccess;
import org.openapitools.client.model.NodegroupResources;
import org.openapitools.client.model.NodegroupScalingConfig;
import org.openapitools.client.model.NodegroupStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object representing an Amazon EKS managed node group.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Nodegroup {
  public static final String SERIALIZED_NAME_NODEGROUP_NAME = "nodegroupName";
  @SerializedName(SERIALIZED_NAME_NODEGROUP_NAME)
  private String nodegroupName;

  public static final String SERIALIZED_NAME_NODEGROUP_ARN = "nodegroupArn";
  @SerializedName(SERIALIZED_NAME_NODEGROUP_ARN)
  private String nodegroupArn;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "clusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_RELEASE_VERSION = "releaseVersion";
  @SerializedName(SERIALIZED_NAME_RELEASE_VERSION)
  private String releaseVersion;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private NodegroupStatus status;

  public static final String SERIALIZED_NAME_CAPACITY_TYPE = "capacityType";
  @SerializedName(SERIALIZED_NAME_CAPACITY_TYPE)
  private CapacityTypes capacityType;

  public static final String SERIALIZED_NAME_SCALING_CONFIG = "scalingConfig";
  @SerializedName(SERIALIZED_NAME_SCALING_CONFIG)
  private NodegroupScalingConfig scalingConfig;

  public static final String SERIALIZED_NAME_INSTANCE_TYPES = "instanceTypes";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPES)
  private List instanceTypes;

  public static final String SERIALIZED_NAME_SUBNETS = "subnets";
  @SerializedName(SERIALIZED_NAME_SUBNETS)
  private List subnets;

  public static final String SERIALIZED_NAME_REMOTE_ACCESS = "remoteAccess";
  @SerializedName(SERIALIZED_NAME_REMOTE_ACCESS)
  private NodegroupRemoteAccess remoteAccess;

  public static final String SERIALIZED_NAME_AMI_TYPE = "amiType";
  @SerializedName(SERIALIZED_NAME_AMI_TYPE)
  private AMITypes amiType;

  public static final String SERIALIZED_NAME_NODE_ROLE = "nodeRole";
  @SerializedName(SERIALIZED_NAME_NODE_ROLE)
  private String nodeRole;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map labels;

  public static final String SERIALIZED_NAME_TAINTS = "taints";
  @SerializedName(SERIALIZED_NAME_TAINTS)
  private List taints;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private NodegroupResources resources;

  public static final String SERIALIZED_NAME_DISK_SIZE = "diskSize";
  @SerializedName(SERIALIZED_NAME_DISK_SIZE)
  private Integer diskSize;

  public static final String SERIALIZED_NAME_HEALTH = "health";
  @SerializedName(SERIALIZED_NAME_HEALTH)
  private NodegroupHealth health;

  public static final String SERIALIZED_NAME_UPDATE_CONFIG = "updateConfig";
  @SerializedName(SERIALIZED_NAME_UPDATE_CONFIG)
  private CreateNodegroupRequestUpdateConfig updateConfig;

  public static final String SERIALIZED_NAME_LAUNCH_TEMPLATE = "launchTemplate";
  @SerializedName(SERIALIZED_NAME_LAUNCH_TEMPLATE)
  private NodegroupLaunchTemplate launchTemplate;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public Nodegroup() {
  }

  public Nodegroup nodegroupName(String nodegroupName) {
    this.nodegroupName = nodegroupName;
    return this;
  }

  /**
   * Get nodegroupName
   * @return nodegroupName
   */
  @javax.annotation.Nullable
  public String getNodegroupName() {
    return nodegroupName;
  }

  public void setNodegroupName(String nodegroupName) {
    this.nodegroupName = nodegroupName;
  }


  public Nodegroup nodegroupArn(String nodegroupArn) {
    this.nodegroupArn = nodegroupArn;
    return this;
  }

  /**
   * Get nodegroupArn
   * @return nodegroupArn
   */
  @javax.annotation.Nullable
  public String getNodegroupArn() {
    return nodegroupArn;
  }

  public void setNodegroupArn(String nodegroupArn) {
    this.nodegroupArn = nodegroupArn;
  }


  public Nodegroup clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public Nodegroup version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public Nodegroup releaseVersion(String releaseVersion) {
    this.releaseVersion = releaseVersion;
    return this;
  }

  /**
   * Get releaseVersion
   * @return releaseVersion
   */
  @javax.annotation.Nullable
  public String getReleaseVersion() {
    return releaseVersion;
  }

  public void setReleaseVersion(String releaseVersion) {
    this.releaseVersion = releaseVersion;
  }


  public Nodegroup createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Nodegroup modifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Get modifiedAt
   * @return modifiedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public Nodegroup status(NodegroupStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public NodegroupStatus getStatus() {
    return status;
  }

  public void setStatus(NodegroupStatus status) {
    this.status = status;
  }


  public Nodegroup capacityType(CapacityTypes capacityType) {
    this.capacityType = capacityType;
    return this;
  }

  /**
   * Get capacityType
   * @return capacityType
   */
  @javax.annotation.Nullable
  public CapacityTypes getCapacityType() {
    return capacityType;
  }

  public void setCapacityType(CapacityTypes capacityType) {
    this.capacityType = capacityType;
  }


  public Nodegroup scalingConfig(NodegroupScalingConfig scalingConfig) {
    this.scalingConfig = scalingConfig;
    return this;
  }

  /**
   * Get scalingConfig
   * @return scalingConfig
   */
  @javax.annotation.Nullable
  public NodegroupScalingConfig getScalingConfig() {
    return scalingConfig;
  }

  public void setScalingConfig(NodegroupScalingConfig scalingConfig) {
    this.scalingConfig = scalingConfig;
  }


  public Nodegroup instanceTypes(List instanceTypes) {
    this.instanceTypes = instanceTypes;
    return this;
  }

  /**
   * Get instanceTypes
   * @return instanceTypes
   */
  @javax.annotation.Nullable
  public List getInstanceTypes() {
    return instanceTypes;
  }

  public void setInstanceTypes(List instanceTypes) {
    this.instanceTypes = instanceTypes;
  }


  public Nodegroup subnets(List subnets) {
    this.subnets = subnets;
    return this;
  }

  /**
   * Get subnets
   * @return subnets
   */
  @javax.annotation.Nullable
  public List getSubnets() {
    return subnets;
  }

  public void setSubnets(List subnets) {
    this.subnets = subnets;
  }


  public Nodegroup remoteAccess(NodegroupRemoteAccess remoteAccess) {
    this.remoteAccess = remoteAccess;
    return this;
  }

  /**
   * Get remoteAccess
   * @return remoteAccess
   */
  @javax.annotation.Nullable
  public NodegroupRemoteAccess getRemoteAccess() {
    return remoteAccess;
  }

  public void setRemoteAccess(NodegroupRemoteAccess remoteAccess) {
    this.remoteAccess = remoteAccess;
  }


  public Nodegroup amiType(AMITypes amiType) {
    this.amiType = amiType;
    return this;
  }

  /**
   * Get amiType
   * @return amiType
   */
  @javax.annotation.Nullable
  public AMITypes getAmiType() {
    return amiType;
  }

  public void setAmiType(AMITypes amiType) {
    this.amiType = amiType;
  }


  public Nodegroup nodeRole(String nodeRole) {
    this.nodeRole = nodeRole;
    return this;
  }

  /**
   * Get nodeRole
   * @return nodeRole
   */
  @javax.annotation.Nullable
  public String getNodeRole() {
    return nodeRole;
  }

  public void setNodeRole(String nodeRole) {
    this.nodeRole = nodeRole;
  }


  public Nodegroup labels(Map labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nullable
  public Map getLabels() {
    return labels;
  }

  public void setLabels(Map labels) {
    this.labels = labels;
  }


  public Nodegroup taints(List taints) {
    this.taints = taints;
    return this;
  }

  /**
   * Get taints
   * @return taints
   */
  @javax.annotation.Nullable
  public List getTaints() {
    return taints;
  }

  public void setTaints(List taints) {
    this.taints = taints;
  }


  public Nodegroup resources(NodegroupResources resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public NodegroupResources getResources() {
    return resources;
  }

  public void setResources(NodegroupResources resources) {
    this.resources = resources;
  }


  public Nodegroup diskSize(Integer diskSize) {
    this.diskSize = diskSize;
    return this;
  }

  /**
   * Get diskSize
   * @return diskSize
   */
  @javax.annotation.Nullable
  public Integer getDiskSize() {
    return diskSize;
  }

  public void setDiskSize(Integer diskSize) {
    this.diskSize = diskSize;
  }


  public Nodegroup health(NodegroupHealth health) {
    this.health = health;
    return this;
  }

  /**
   * Get health
   * @return health
   */
  @javax.annotation.Nullable
  public NodegroupHealth getHealth() {
    return health;
  }

  public void setHealth(NodegroupHealth health) {
    this.health = health;
  }


  public Nodegroup updateConfig(CreateNodegroupRequestUpdateConfig updateConfig) {
    this.updateConfig = updateConfig;
    return this;
  }

  /**
   * Get updateConfig
   * @return updateConfig
   */
  @javax.annotation.Nullable
  public CreateNodegroupRequestUpdateConfig getUpdateConfig() {
    return updateConfig;
  }

  public void setUpdateConfig(CreateNodegroupRequestUpdateConfig updateConfig) {
    this.updateConfig = updateConfig;
  }


  public Nodegroup launchTemplate(NodegroupLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
    return this;
  }

  /**
   * Get launchTemplate
   * @return launchTemplate
   */
  @javax.annotation.Nullable
  public NodegroupLaunchTemplate getLaunchTemplate() {
    return launchTemplate;
  }

  public void setLaunchTemplate(NodegroupLaunchTemplate launchTemplate) {
    this.launchTemplate = launchTemplate;
  }


  public Nodegroup tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Nodegroup nodegroup = (Nodegroup) o;
    return Objects.equals(this.nodegroupName, nodegroup.nodegroupName) &&
        Objects.equals(this.nodegroupArn, nodegroup.nodegroupArn) &&
        Objects.equals(this.clusterName, nodegroup.clusterName) &&
        Objects.equals(this.version, nodegroup.version) &&
        Objects.equals(this.releaseVersion, nodegroup.releaseVersion) &&
        Objects.equals(this.createdAt, nodegroup.createdAt) &&
        Objects.equals(this.modifiedAt, nodegroup.modifiedAt) &&
        Objects.equals(this.status, nodegroup.status) &&
        Objects.equals(this.capacityType, nodegroup.capacityType) &&
        Objects.equals(this.scalingConfig, nodegroup.scalingConfig) &&
        Objects.equals(this.instanceTypes, nodegroup.instanceTypes) &&
        Objects.equals(this.subnets, nodegroup.subnets) &&
        Objects.equals(this.remoteAccess, nodegroup.remoteAccess) &&
        Objects.equals(this.amiType, nodegroup.amiType) &&
        Objects.equals(this.nodeRole, nodegroup.nodeRole) &&
        Objects.equals(this.labels, nodegroup.labels) &&
        Objects.equals(this.taints, nodegroup.taints) &&
        Objects.equals(this.resources, nodegroup.resources) &&
        Objects.equals(this.diskSize, nodegroup.diskSize) &&
        Objects.equals(this.health, nodegroup.health) &&
        Objects.equals(this.updateConfig, nodegroup.updateConfig) &&
        Objects.equals(this.launchTemplate, nodegroup.launchTemplate) &&
        Objects.equals(this.tags, nodegroup.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodegroupName, nodegroupArn, clusterName, version, releaseVersion, createdAt, modifiedAt, status, capacityType, scalingConfig, instanceTypes, subnets, remoteAccess, amiType, nodeRole, labels, taints, resources, diskSize, health, updateConfig, launchTemplate, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Nodegroup {\n");
    sb.append("    nodegroupName: ").append(toIndentedString(nodegroupName)).append("\n");
    sb.append("    nodegroupArn: ").append(toIndentedString(nodegroupArn)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    releaseVersion: ").append(toIndentedString(releaseVersion)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    capacityType: ").append(toIndentedString(capacityType)).append("\n");
    sb.append("    scalingConfig: ").append(toIndentedString(scalingConfig)).append("\n");
    sb.append("    instanceTypes: ").append(toIndentedString(instanceTypes)).append("\n");
    sb.append("    subnets: ").append(toIndentedString(subnets)).append("\n");
    sb.append("    remoteAccess: ").append(toIndentedString(remoteAccess)).append("\n");
    sb.append("    amiType: ").append(toIndentedString(amiType)).append("\n");
    sb.append("    nodeRole: ").append(toIndentedString(nodeRole)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    taints: ").append(toIndentedString(taints)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    diskSize: ").append(toIndentedString(diskSize)).append("\n");
    sb.append("    health: ").append(toIndentedString(health)).append("\n");
    sb.append("    updateConfig: ").append(toIndentedString(updateConfig)).append("\n");
    sb.append("    launchTemplate: ").append(toIndentedString(launchTemplate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nodegroupName");
    openapiFields.add("nodegroupArn");
    openapiFields.add("clusterName");
    openapiFields.add("version");
    openapiFields.add("releaseVersion");
    openapiFields.add("createdAt");
    openapiFields.add("modifiedAt");
    openapiFields.add("status");
    openapiFields.add("capacityType");
    openapiFields.add("scalingConfig");
    openapiFields.add("instanceTypes");
    openapiFields.add("subnets");
    openapiFields.add("remoteAccess");
    openapiFields.add("amiType");
    openapiFields.add("nodeRole");
    openapiFields.add("labels");
    openapiFields.add("taints");
    openapiFields.add("resources");
    openapiFields.add("diskSize");
    openapiFields.add("health");
    openapiFields.add("updateConfig");
    openapiFields.add("launchTemplate");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Nodegroup
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Nodegroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Nodegroup is not found in the empty JSON string", Nodegroup.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Nodegroup.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Nodegroup` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `nodegroupName`
      if (jsonObj.get("nodegroupName") != null && !jsonObj.get("nodegroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nodegroupName"));
      }
      // validate the optional field `nodegroupArn`
      if (jsonObj.get("nodegroupArn") != null && !jsonObj.get("nodegroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nodegroupArn"));
      }
      // validate the optional field `clusterName`
      if (jsonObj.get("clusterName") != null && !jsonObj.get("clusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterName"));
      }
      // validate the optional field `version`
      if (jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("version"));
      }
      // validate the optional field `releaseVersion`
      if (jsonObj.get("releaseVersion") != null && !jsonObj.get("releaseVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("releaseVersion"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `modifiedAt`
      if (jsonObj.get("modifiedAt") != null && !jsonObj.get("modifiedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("modifiedAt"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        NodegroupStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `capacityType`
      if (jsonObj.get("capacityType") != null && !jsonObj.get("capacityType").isJsonNull()) {
        CapacityTypes.validateJsonElement(jsonObj.get("capacityType"));
      }
      // validate the optional field `scalingConfig`
      if (jsonObj.get("scalingConfig") != null && !jsonObj.get("scalingConfig").isJsonNull()) {
        NodegroupScalingConfig.validateJsonElement(jsonObj.get("scalingConfig"));
      }
      // validate the optional field `instanceTypes`
      if (jsonObj.get("instanceTypes") != null && !jsonObj.get("instanceTypes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("instanceTypes"));
      }
      // validate the optional field `subnets`
      if (jsonObj.get("subnets") != null && !jsonObj.get("subnets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("subnets"));
      }
      // validate the optional field `remoteAccess`
      if (jsonObj.get("remoteAccess") != null && !jsonObj.get("remoteAccess").isJsonNull()) {
        NodegroupRemoteAccess.validateJsonElement(jsonObj.get("remoteAccess"));
      }
      // validate the optional field `amiType`
      if (jsonObj.get("amiType") != null && !jsonObj.get("amiType").isJsonNull()) {
        AMITypes.validateJsonElement(jsonObj.get("amiType"));
      }
      // validate the optional field `nodeRole`
      if (jsonObj.get("nodeRole") != null && !jsonObj.get("nodeRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("nodeRole"));
      }
      // validate the optional field `labels`
      if (jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("labels"));
      }
      // validate the optional field `taints`
      if (jsonObj.get("taints") != null && !jsonObj.get("taints").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("taints"));
      }
      // validate the optional field `resources`
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        NodegroupResources.validateJsonElement(jsonObj.get("resources"));
      }
      // validate the optional field `diskSize`
      if (jsonObj.get("diskSize") != null && !jsonObj.get("diskSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("diskSize"));
      }
      // validate the optional field `health`
      if (jsonObj.get("health") != null && !jsonObj.get("health").isJsonNull()) {
        NodegroupHealth.validateJsonElement(jsonObj.get("health"));
      }
      // validate the optional field `updateConfig`
      if (jsonObj.get("updateConfig") != null && !jsonObj.get("updateConfig").isJsonNull()) {
        CreateNodegroupRequestUpdateConfig.validateJsonElement(jsonObj.get("updateConfig"));
      }
      // validate the optional field `launchTemplate`
      if (jsonObj.get("launchTemplate") != null && !jsonObj.get("launchTemplate").isJsonNull()) {
        NodegroupLaunchTemplate.validateJsonElement(jsonObj.get("launchTemplate"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Nodegroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Nodegroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Nodegroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Nodegroup.class));

       return (TypeAdapter<T>) new TypeAdapter<Nodegroup>() {
           @Override
           public void write(JsonWriter out, Nodegroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Nodegroup read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Nodegroup given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Nodegroup
   * @throws IOException if the JSON string is invalid with respect to Nodegroup
   */
  public static Nodegroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Nodegroup.class);
  }

  /**
   * Convert an instance of Nodegroup to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

