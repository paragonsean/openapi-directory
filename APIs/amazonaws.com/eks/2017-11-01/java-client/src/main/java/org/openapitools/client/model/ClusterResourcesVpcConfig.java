/*
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClusterResourcesVpcConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:26:04.017338-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClusterResourcesVpcConfig {
  public static final String SERIALIZED_NAME_SUBNET_IDS = "subnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "securityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_CLUSTER_SECURITY_GROUP_ID = "clusterSecurityGroupId";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SECURITY_GROUP_ID)
  private String clusterSecurityGroupId;

  public static final String SERIALIZED_NAME_VPC_ID = "vpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_ENDPOINT_PUBLIC_ACCESS = "endpointPublicAccess";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_PUBLIC_ACCESS)
  private Boolean endpointPublicAccess;

  public static final String SERIALIZED_NAME_ENDPOINT_PRIVATE_ACCESS = "endpointPrivateAccess";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_PRIVATE_ACCESS)
  private Boolean endpointPrivateAccess;

  public static final String SERIALIZED_NAME_PUBLIC_ACCESS_CIDRS = "publicAccessCidrs";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ACCESS_CIDRS)
  private List publicAccessCidrs;

  public ClusterResourcesVpcConfig() {
  }

  public ClusterResourcesVpcConfig subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }


  public ClusterResourcesVpcConfig securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public ClusterResourcesVpcConfig clusterSecurityGroupId(String clusterSecurityGroupId) {
    this.clusterSecurityGroupId = clusterSecurityGroupId;
    return this;
  }

  /**
   * Get clusterSecurityGroupId
   * @return clusterSecurityGroupId
   */
  @javax.annotation.Nullable
  public String getClusterSecurityGroupId() {
    return clusterSecurityGroupId;
  }

  public void setClusterSecurityGroupId(String clusterSecurityGroupId) {
    this.clusterSecurityGroupId = clusterSecurityGroupId;
  }


  public ClusterResourcesVpcConfig vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public ClusterResourcesVpcConfig endpointPublicAccess(Boolean endpointPublicAccess) {
    this.endpointPublicAccess = endpointPublicAccess;
    return this;
  }

  /**
   * Get endpointPublicAccess
   * @return endpointPublicAccess
   */
  @javax.annotation.Nullable
  public Boolean getEndpointPublicAccess() {
    return endpointPublicAccess;
  }

  public void setEndpointPublicAccess(Boolean endpointPublicAccess) {
    this.endpointPublicAccess = endpointPublicAccess;
  }


  public ClusterResourcesVpcConfig endpointPrivateAccess(Boolean endpointPrivateAccess) {
    this.endpointPrivateAccess = endpointPrivateAccess;
    return this;
  }

  /**
   * Get endpointPrivateAccess
   * @return endpointPrivateAccess
   */
  @javax.annotation.Nullable
  public Boolean getEndpointPrivateAccess() {
    return endpointPrivateAccess;
  }

  public void setEndpointPrivateAccess(Boolean endpointPrivateAccess) {
    this.endpointPrivateAccess = endpointPrivateAccess;
  }


  public ClusterResourcesVpcConfig publicAccessCidrs(List publicAccessCidrs) {
    this.publicAccessCidrs = publicAccessCidrs;
    return this;
  }

  /**
   * Get publicAccessCidrs
   * @return publicAccessCidrs
   */
  @javax.annotation.Nullable
  public List getPublicAccessCidrs() {
    return publicAccessCidrs;
  }

  public void setPublicAccessCidrs(List publicAccessCidrs) {
    this.publicAccessCidrs = publicAccessCidrs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterResourcesVpcConfig clusterResourcesVpcConfig = (ClusterResourcesVpcConfig) o;
    return Objects.equals(this.subnetIds, clusterResourcesVpcConfig.subnetIds) &&
        Objects.equals(this.securityGroupIds, clusterResourcesVpcConfig.securityGroupIds) &&
        Objects.equals(this.clusterSecurityGroupId, clusterResourcesVpcConfig.clusterSecurityGroupId) &&
        Objects.equals(this.vpcId, clusterResourcesVpcConfig.vpcId) &&
        Objects.equals(this.endpointPublicAccess, clusterResourcesVpcConfig.endpointPublicAccess) &&
        Objects.equals(this.endpointPrivateAccess, clusterResourcesVpcConfig.endpointPrivateAccess) &&
        Objects.equals(this.publicAccessCidrs, clusterResourcesVpcConfig.publicAccessCidrs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subnetIds, securityGroupIds, clusterSecurityGroupId, vpcId, endpointPublicAccess, endpointPrivateAccess, publicAccessCidrs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterResourcesVpcConfig {\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    clusterSecurityGroupId: ").append(toIndentedString(clusterSecurityGroupId)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    endpointPublicAccess: ").append(toIndentedString(endpointPublicAccess)).append("\n");
    sb.append("    endpointPrivateAccess: ").append(toIndentedString(endpointPrivateAccess)).append("\n");
    sb.append("    publicAccessCidrs: ").append(toIndentedString(publicAccessCidrs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("subnetIds");
    openapiFields.add("securityGroupIds");
    openapiFields.add("clusterSecurityGroupId");
    openapiFields.add("vpcId");
    openapiFields.add("endpointPublicAccess");
    openapiFields.add("endpointPrivateAccess");
    openapiFields.add("publicAccessCidrs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClusterResourcesVpcConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClusterResourcesVpcConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClusterResourcesVpcConfig is not found in the empty JSON string", ClusterResourcesVpcConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClusterResourcesVpcConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClusterResourcesVpcConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `subnetIds`
      if (jsonObj.get("subnetIds") != null && !jsonObj.get("subnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("subnetIds"));
      }
      // validate the optional field `securityGroupIds`
      if (jsonObj.get("securityGroupIds") != null && !jsonObj.get("securityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("securityGroupIds"));
      }
      // validate the optional field `clusterSecurityGroupId`
      if (jsonObj.get("clusterSecurityGroupId") != null && !jsonObj.get("clusterSecurityGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("clusterSecurityGroupId"));
      }
      // validate the optional field `vpcId`
      if (jsonObj.get("vpcId") != null && !jsonObj.get("vpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("vpcId"));
      }
      // validate the optional field `endpointPublicAccess`
      if (jsonObj.get("endpointPublicAccess") != null && !jsonObj.get("endpointPublicAccess").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("endpointPublicAccess"));
      }
      // validate the optional field `endpointPrivateAccess`
      if (jsonObj.get("endpointPrivateAccess") != null && !jsonObj.get("endpointPrivateAccess").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("endpointPrivateAccess"));
      }
      // validate the optional field `publicAccessCidrs`
      if (jsonObj.get("publicAccessCidrs") != null && !jsonObj.get("publicAccessCidrs").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("publicAccessCidrs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClusterResourcesVpcConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClusterResourcesVpcConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClusterResourcesVpcConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClusterResourcesVpcConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<ClusterResourcesVpcConfig>() {
           @Override
           public void write(JsonWriter out, ClusterResourcesVpcConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClusterResourcesVpcConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClusterResourcesVpcConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClusterResourcesVpcConfig
   * @throws IOException if the JSON string is invalid with respect to ClusterResourcesVpcConfig
   */
  public static ClusterResourcesVpcConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClusterResourcesVpcConfig.class);
  }

  /**
   * Convert an instance of ClusterResourcesVpcConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

