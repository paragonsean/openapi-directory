/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FargateProfileSelector from './FargateProfileSelector';

/**
 * The CreateFargateProfileRequest model module.
 * @module model/CreateFargateProfileRequest
 * @version 2017-11-01
 */
class CreateFargateProfileRequest {
    /**
     * Constructs a new <code>CreateFargateProfileRequest</code>.
     * @alias module:model/CreateFargateProfileRequest
     * @param fargateProfileName {String} The name of the Fargate profile.
     * @param podExecutionRoleArn {String} The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html\">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.
     */
    constructor(fargateProfileName, podExecutionRoleArn) { 
        
        CreateFargateProfileRequest.initialize(this, fargateProfileName, podExecutionRoleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fargateProfileName, podExecutionRoleArn) { 
        obj['fargateProfileName'] = fargateProfileName;
        obj['podExecutionRoleArn'] = podExecutionRoleArn;
    }

    /**
     * Constructs a <code>CreateFargateProfileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFargateProfileRequest} obj Optional instance to populate.
     * @return {module:model/CreateFargateProfileRequest} The populated <code>CreateFargateProfileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFargateProfileRequest();

            if (data.hasOwnProperty('fargateProfileName')) {
                obj['fargateProfileName'] = ApiClient.convertToType(data['fargateProfileName'], 'String');
            }
            if (data.hasOwnProperty('podExecutionRoleArn')) {
                obj['podExecutionRoleArn'] = ApiClient.convertToType(data['podExecutionRoleArn'], 'String');
            }
            if (data.hasOwnProperty('subnets')) {
                obj['subnets'] = ApiClient.convertToType(data['subnets'], ['String']);
            }
            if (data.hasOwnProperty('selectors')) {
                obj['selectors'] = ApiClient.convertToType(data['selectors'], [FargateProfileSelector]);
            }
            if (data.hasOwnProperty('clientRequestToken')) {
                obj['clientRequestToken'] = ApiClient.convertToType(data['clientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFargateProfileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFargateProfileRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFargateProfileRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fargateProfileName'] && !(typeof data['fargateProfileName'] === 'string' || data['fargateProfileName'] instanceof String)) {
            throw new Error("Expected the field `fargateProfileName` to be a primitive type in the JSON string but got " + data['fargateProfileName']);
        }
        // ensure the json data is a string
        if (data['podExecutionRoleArn'] && !(typeof data['podExecutionRoleArn'] === 'string' || data['podExecutionRoleArn'] instanceof String)) {
            throw new Error("Expected the field `podExecutionRoleArn` to be a primitive type in the JSON string but got " + data['podExecutionRoleArn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subnets'])) {
            throw new Error("Expected the field `subnets` to be an array in the JSON data but got " + data['subnets']);
        }
        if (data['selectors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['selectors'])) {
                throw new Error("Expected the field `selectors` to be an array in the JSON data but got " + data['selectors']);
            }
            // validate the optional field `selectors` (array)
            for (const item of data['selectors']) {
                FargateProfileSelector.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['clientRequestToken'] && !(typeof data['clientRequestToken'] === 'string' || data['clientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got " + data['clientRequestToken']);
        }

        return true;
    }


}

CreateFargateProfileRequest.RequiredProperties = ["fargateProfileName", "podExecutionRoleArn"];

/**
 * The name of the Fargate profile.
 * @member {String} fargateProfileName
 */
CreateFargateProfileRequest.prototype['fargateProfileName'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html\">Pod Execution Role</a> in the <i>Amazon EKS User Guide</i>.
 * @member {String} podExecutionRoleArn
 */
CreateFargateProfileRequest.prototype['podExecutionRoleArn'] = undefined;

/**
 * The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.
 * @member {Array.<String>} subnets
 */
CreateFargateProfileRequest.prototype['subnets'] = undefined;

/**
 * The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.
 * @member {Array.<module:model/FargateProfileSelector>} selectors
 */
CreateFargateProfileRequest.prototype['selectors'] = undefined;

/**
 * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
 * @member {String} clientRequestToken
 */
CreateFargateProfileRequest.prototype['clientRequestToken'] = undefined;

/**
 * The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.
 * @member {Object.<String, String>} tags
 */
CreateFargateProfileRequest.prototype['tags'] = undefined;






export default CreateFargateProfileRequest;

