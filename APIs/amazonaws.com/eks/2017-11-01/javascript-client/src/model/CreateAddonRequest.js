/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAddonRequest model module.
 * @module model/CreateAddonRequest
 * @version 2017-11-01
 */
class CreateAddonRequest {
    /**
     * Constructs a new <code>CreateAddonRequest</code>.
     * @alias module:model/CreateAddonRequest
     * @param addonName {String} The name of the add-on. The name must match one of the names that <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\"> <code>DescribeAddonVersions</code> </a> returns.
     */
    constructor(addonName) { 
        
        CreateAddonRequest.initialize(this, addonName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addonName) { 
        obj['addonName'] = addonName;
    }

    /**
     * Constructs a <code>CreateAddonRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAddonRequest} obj Optional instance to populate.
     * @return {module:model/CreateAddonRequest} The populated <code>CreateAddonRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAddonRequest();

            if (data.hasOwnProperty('addonName')) {
                obj['addonName'] = ApiClient.convertToType(data['addonName'], 'String');
            }
            if (data.hasOwnProperty('addonVersion')) {
                obj['addonVersion'] = ApiClient.convertToType(data['addonVersion'], 'String');
            }
            if (data.hasOwnProperty('serviceAccountRoleArn')) {
                obj['serviceAccountRoleArn'] = ApiClient.convertToType(data['serviceAccountRoleArn'], 'String');
            }
            if (data.hasOwnProperty('resolveConflicts')) {
                obj['resolveConflicts'] = ApiClient.convertToType(data['resolveConflicts'], 'String');
            }
            if (data.hasOwnProperty('clientRequestToken')) {
                obj['clientRequestToken'] = ApiClient.convertToType(data['clientRequestToken'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('configurationValues')) {
                obj['configurationValues'] = ApiClient.convertToType(data['configurationValues'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAddonRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAddonRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAddonRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['addonName'] && !(typeof data['addonName'] === 'string' || data['addonName'] instanceof String)) {
            throw new Error("Expected the field `addonName` to be a primitive type in the JSON string but got " + data['addonName']);
        }
        // ensure the json data is a string
        if (data['addonVersion'] && !(typeof data['addonVersion'] === 'string' || data['addonVersion'] instanceof String)) {
            throw new Error("Expected the field `addonVersion` to be a primitive type in the JSON string but got " + data['addonVersion']);
        }
        // ensure the json data is a string
        if (data['serviceAccountRoleArn'] && !(typeof data['serviceAccountRoleArn'] === 'string' || data['serviceAccountRoleArn'] instanceof String)) {
            throw new Error("Expected the field `serviceAccountRoleArn` to be a primitive type in the JSON string but got " + data['serviceAccountRoleArn']);
        }
        // ensure the json data is a string
        if (data['resolveConflicts'] && !(typeof data['resolveConflicts'] === 'string' || data['resolveConflicts'] instanceof String)) {
            throw new Error("Expected the field `resolveConflicts` to be a primitive type in the JSON string but got " + data['resolveConflicts']);
        }
        // ensure the json data is a string
        if (data['clientRequestToken'] && !(typeof data['clientRequestToken'] === 'string' || data['clientRequestToken'] instanceof String)) {
            throw new Error("Expected the field `clientRequestToken` to be a primitive type in the JSON string but got " + data['clientRequestToken']);
        }
        // ensure the json data is a string
        if (data['configurationValues'] && !(typeof data['configurationValues'] === 'string' || data['configurationValues'] instanceof String)) {
            throw new Error("Expected the field `configurationValues` to be a primitive type in the JSON string but got " + data['configurationValues']);
        }

        return true;
    }


}

CreateAddonRequest.RequiredProperties = ["addonName"];

/**
 * The name of the add-on. The name must match one of the names that <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\"> <code>DescribeAddonVersions</code> </a> returns.
 * @member {String} addonName
 */
CreateAddonRequest.prototype['addonName'] = undefined;

/**
 * The version of the add-on. The version must match one of the versions returned by <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\"> <code>DescribeAddonVersions</code> </a>.
 * @member {String} addonVersion
 */
CreateAddonRequest.prototype['addonVersion'] = undefined;

/**
 * <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html\">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html\">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
 * @member {String} serviceAccountRoleArn
 */
CreateAddonRequest.prototype['serviceAccountRoleArn'] = undefined;

/**
 * <p>How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled based on the value you choose:</p> <ul> <li> <p> <b>None</b> – If the self-managed version of the add-on is installed on your cluster, Amazon EKS doesn't change the value. Creation of the add-on might fail.</p> </li> <li> <p> <b>Overwrite</b> – If the self-managed version of the add-on is installed on your cluster and the Amazon EKS default value is different than the existing value, Amazon EKS changes the value to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Not supported. You can set this value when updating an add-on though. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html\">UpdateAddon</a>.</p> </li> </ul> <p>If you don't currently have the self-managed version of the add-on installed on your cluster, the Amazon EKS add-on is installed. Amazon EKS sets all values to default values, regardless of the option that you specify.</p>
 * @member {module:model/CreateAddonRequest.ResolveConflictsEnum} resolveConflicts
 */
CreateAddonRequest.prototype['resolveConflicts'] = undefined;

/**
 * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
 * @member {String} clientRequestToken
 */
CreateAddonRequest.prototype['clientRequestToken'] = undefined;

/**
 * The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
 * @member {Object.<String, String>} tags
 */
CreateAddonRequest.prototype['tags'] = undefined;

/**
 * The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html\"> <code>DescribeAddonConfiguration</code> </a>.
 * @member {String} configurationValues
 */
CreateAddonRequest.prototype['configurationValues'] = undefined;





/**
 * Allowed values for the <code>resolveConflicts</code> property.
 * @enum {String}
 * @readonly
 */
CreateAddonRequest['ResolveConflictsEnum'] = {

    /**
     * value: "OVERWRITE"
     * @const
     */
    "OVERWRITE": "OVERWRITE",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "PRESERVE"
     * @const
     */
    "PRESERVE": "PRESERVE"
};



export default CreateAddonRequest;

