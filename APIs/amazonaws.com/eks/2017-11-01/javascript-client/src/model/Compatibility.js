/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Compatibility model module.
 * @module model/Compatibility
 * @version 2017-11-01
 */
class Compatibility {
    /**
     * Constructs a new <code>Compatibility</code>.
     * Compatibility information.
     * @alias module:model/Compatibility
     */
    constructor() { 
        
        Compatibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Compatibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Compatibility} obj Optional instance to populate.
     * @return {module:model/Compatibility} The populated <code>Compatibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Compatibility();

            if (data.hasOwnProperty('clusterVersion')) {
                obj['clusterVersion'] = ApiClient.convertToType(data['clusterVersion'], 'String');
            }
            if (data.hasOwnProperty('platformVersions')) {
                obj['platformVersions'] = ApiClient.convertToType(data['platformVersions'], Array);
            }
            if (data.hasOwnProperty('defaultVersion')) {
                obj['defaultVersion'] = ApiClient.convertToType(data['defaultVersion'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Compatibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Compatibility</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clusterVersion`
        if (data['clusterVersion']) { // data not null
          String.validateJSON(data['clusterVersion']);
        }
        // validate the optional field `platformVersions`
        if (data['platformVersions']) { // data not null
          Array.validateJSON(data['platformVersions']);
        }
        // validate the optional field `defaultVersion`
        if (data['defaultVersion']) { // data not null
          Boolean.validateJSON(data['defaultVersion']);
        }

        return true;
    }


}



/**
 * @member {String} clusterVersion
 */
Compatibility.prototype['clusterVersion'] = undefined;

/**
 * @member {Array} platformVersions
 */
Compatibility.prototype['platformVersions'] = undefined;

/**
 * @member {Boolean} defaultVersion
 */
Compatibility.prototype['defaultVersion'] = undefined;






export default Compatibility;

