/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonElasticKubernetesService);
  }
}(this, function(expect, AmazonElasticKubernetesService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssociateIdentityProviderConfigRequestOidc', function() {
    it('should create an instance of AssociateIdentityProviderConfigRequestOidc', function() {
      // uncomment below and update the code to test AssociateIdentityProviderConfigRequestOidc
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be.a(AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc);
    });

    it('should have the property identityProviderConfigName (base name: "identityProviderConfigName")', function() {
      // uncomment below and update the code to test the property identityProviderConfigName
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property issuerUrl (base name: "issuerUrl")', function() {
      // uncomment below and update the code to test the property issuerUrl
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property usernameClaim (base name: "usernameClaim")', function() {
      // uncomment below and update the code to test the property usernameClaim
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property usernamePrefix (base name: "usernamePrefix")', function() {
      // uncomment below and update the code to test the property usernamePrefix
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property groupsClaim (base name: "groupsClaim")', function() {
      // uncomment below and update the code to test the property groupsClaim
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property groupsPrefix (base name: "groupsPrefix")', function() {
      // uncomment below and update the code to test the property groupsPrefix
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

    it('should have the property requiredClaims (base name: "requiredClaims")', function() {
      // uncomment below and update the code to test the property requiredClaims
      //var instance = new AmazonElasticKubernetesService.AssociateIdentityProviderConfigRequestOidc();
      //expect(instance).to.be();
    });

  });

}));
