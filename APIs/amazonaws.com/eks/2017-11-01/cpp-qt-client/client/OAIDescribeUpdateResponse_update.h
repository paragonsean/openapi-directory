/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeUpdateResponse_update.h
 *
 * 
 */

#ifndef OAIDescribeUpdateResponse_update_H
#define OAIDescribeUpdateResponse_update_H

#include <QJsonObject>

#include "OAIUpdateStatus.h"
#include "OAIUpdateType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeUpdateResponse_update : public OAIObject {
public:
    OAIDescribeUpdateResponse_update();
    OAIDescribeUpdateResponse_update(QString json);
    ~OAIDescribeUpdateResponse_update() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIUpdateStatus getStatus() const;
    void setStatus(const OAIUpdateStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIUpdateType getType() const;
    void setType(const OAIUpdateType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList getParams() const;
    void setParams(const QList &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList getErrors() const;
    void setErrors(const QList &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIUpdateStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIUpdateType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeUpdateResponse_update)

#endif // OAIDescribeUpdateResponse_update_H
