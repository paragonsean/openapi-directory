/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateNodegroupVersion_request.h
 *
 * 
 */

#ifndef OAIUpdateNodegroupVersion_request_H
#define OAIUpdateNodegroupVersion_request_H

#include <QJsonObject>

#include "OAICreateNodegroup_request_launchTemplate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNodegroup_request_launchTemplate;

class OAIUpdateNodegroupVersion_request : public OAIObject {
public:
    OAIUpdateNodegroupVersion_request();
    OAIUpdateNodegroupVersion_request(QString json);
    ~OAIUpdateNodegroupVersion_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getReleaseVersion() const;
    void setReleaseVersion(const QString &release_version);
    bool is_release_version_Set() const;
    bool is_release_version_Valid() const;

    OAICreateNodegroup_request_launchTemplate getLaunchTemplate() const;
    void setLaunchTemplate(const OAICreateNodegroup_request_launchTemplate &launch_template);
    bool is_launch_template_Set() const;
    bool is_launch_template_Valid() const;

    bool isForce() const;
    void setForce(const bool &force);
    bool is_force_Set() const;
    bool is_force_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_release_version;
    bool m_release_version_isSet;
    bool m_release_version_isValid;

    OAICreateNodegroup_request_launchTemplate m_launch_template;
    bool m_launch_template_isSet;
    bool m_launch_template_isValid;

    bool m_force;
    bool m_force_isSet;
    bool m_force_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateNodegroupVersion_request)

#endif // OAIUpdateNodegroupVersion_request_H
