/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFargateProfile_request.h
 *
 * 
 */

#ifndef OAICreateFargateProfile_request_H
#define OAICreateFargateProfile_request_H

#include <QJsonObject>

#include "OAIFargateProfileSelector.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFargateProfileSelector;

class OAICreateFargateProfile_request : public OAIObject {
public:
    OAICreateFargateProfile_request();
    OAICreateFargateProfile_request(QString json);
    ~OAICreateFargateProfile_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFargateProfileName() const;
    void setFargateProfileName(const QString &fargate_profile_name);
    bool is_fargate_profile_name_Set() const;
    bool is_fargate_profile_name_Valid() const;

    QString getPodExecutionRoleArn() const;
    void setPodExecutionRoleArn(const QString &pod_execution_role_arn);
    bool is_pod_execution_role_arn_Set() const;
    bool is_pod_execution_role_arn_Valid() const;

    QList<QString> getSubnets() const;
    void setSubnets(const QList<QString> &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    QList<OAIFargateProfileSelector> getSelectors() const;
    void setSelectors(const QList<OAIFargateProfileSelector> &selectors);
    bool is_selectors_Set() const;
    bool is_selectors_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fargate_profile_name;
    bool m_fargate_profile_name_isSet;
    bool m_fargate_profile_name_isValid;

    QString m_pod_execution_role_arn;
    bool m_pod_execution_role_arn_isSet;
    bool m_pod_execution_role_arn_isValid;

    QList<QString> m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;

    QList<OAIFargateProfileSelector> m_selectors;
    bool m_selectors_isSet;
    bool m_selectors_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFargateProfile_request)

#endif // OAICreateFargateProfile_request_H
