/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteClusterResponse_cluster.h
 *
 * 
 */

#ifndef OAIDeleteClusterResponse_cluster_H
#define OAIDeleteClusterResponse_cluster_H

#include <QJsonObject>

#include "OAIClusterStatus.h"
#include "OAICluster_certificateAuthority.h"
#include "OAICluster_connectorConfig.h"
#include "OAICluster_health.h"
#include "OAICluster_identity.h"
#include "OAICluster_kubernetesNetworkConfig.h"
#include "OAICluster_logging.h"
#include "OAICluster_outpostConfig.h"
#include "OAICluster_resourcesVpcConfig.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICluster_resourcesVpcConfig;
class OAICluster_kubernetesNetworkConfig;
class OAICluster_logging;
class OAICluster_identity;
class OAICluster_certificateAuthority;
class OAICluster_connectorConfig;
class OAICluster_health;
class OAICluster_outpostConfig;

class OAIDeleteClusterResponse_cluster : public OAIObject {
public:
    OAIDeleteClusterResponse_cluster();
    OAIDeleteClusterResponse_cluster(QString json);
    ~OAIDeleteClusterResponse_cluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAICluster_resourcesVpcConfig getResourcesVpcConfig() const;
    void setResourcesVpcConfig(const OAICluster_resourcesVpcConfig &resources_vpc_config);
    bool is_resources_vpc_config_Set() const;
    bool is_resources_vpc_config_Valid() const;

    OAICluster_kubernetesNetworkConfig getKubernetesNetworkConfig() const;
    void setKubernetesNetworkConfig(const OAICluster_kubernetesNetworkConfig &kubernetes_network_config);
    bool is_kubernetes_network_config_Set() const;
    bool is_kubernetes_network_config_Valid() const;

    OAICluster_logging getLogging() const;
    void setLogging(const OAICluster_logging &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    OAICluster_identity getIdentity() const;
    void setIdentity(const OAICluster_identity &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    OAIClusterStatus getStatus() const;
    void setStatus(const OAIClusterStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAICluster_certificateAuthority getCertificateAuthority() const;
    void setCertificateAuthority(const OAICluster_certificateAuthority &certificate_authority);
    bool is_certificate_authority_Set() const;
    bool is_certificate_authority_Valid() const;

    QString getClientRequestToken() const;
    void setClientRequestToken(const QString &client_request_token);
    bool is_client_request_token_Set() const;
    bool is_client_request_token_Valid() const;

    QString getPlatformVersion() const;
    void setPlatformVersion(const QString &platform_version);
    bool is_platform_version_Set() const;
    bool is_platform_version_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList getEncryptionConfig() const;
    void setEncryptionConfig(const QList &encryption_config);
    bool is_encryption_config_Set() const;
    bool is_encryption_config_Valid() const;

    OAICluster_connectorConfig getConnectorConfig() const;
    void setConnectorConfig(const OAICluster_connectorConfig &connector_config);
    bool is_connector_config_Set() const;
    bool is_connector_config_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAICluster_health getHealth() const;
    void setHealth(const OAICluster_health &health);
    bool is_health_Set() const;
    bool is_health_Valid() const;

    OAICluster_outpostConfig getOutpostConfig() const;
    void setOutpostConfig(const OAICluster_outpostConfig &outpost_config);
    bool is_outpost_config_Set() const;
    bool is_outpost_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAICluster_resourcesVpcConfig m_resources_vpc_config;
    bool m_resources_vpc_config_isSet;
    bool m_resources_vpc_config_isValid;

    OAICluster_kubernetesNetworkConfig m_kubernetes_network_config;
    bool m_kubernetes_network_config_isSet;
    bool m_kubernetes_network_config_isValid;

    OAICluster_logging m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;

    OAICluster_identity m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    OAIClusterStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAICluster_certificateAuthority m_certificate_authority;
    bool m_certificate_authority_isSet;
    bool m_certificate_authority_isValid;

    QString m_client_request_token;
    bool m_client_request_token_isSet;
    bool m_client_request_token_isValid;

    QString m_platform_version;
    bool m_platform_version_isSet;
    bool m_platform_version_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList m_encryption_config;
    bool m_encryption_config_isSet;
    bool m_encryption_config_isValid;

    OAICluster_connectorConfig m_connector_config;
    bool m_connector_config_isSet;
    bool m_connector_config_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAICluster_health m_health;
    bool m_health_isSet;
    bool m_health_isValid;

    OAICluster_outpostConfig m_outpost_config;
    bool m_outpost_config_isSet;
    bool m_outpost_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteClusterResponse_cluster)

#endif // OAIDeleteClusterResponse_cluster_H
