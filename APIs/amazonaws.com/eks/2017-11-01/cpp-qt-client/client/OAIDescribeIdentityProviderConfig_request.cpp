/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeIdentityProviderConfig_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeIdentityProviderConfig_request::OAIDescribeIdentityProviderConfig_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeIdentityProviderConfig_request::OAIDescribeIdentityProviderConfig_request() {
    this->initializeModel();
}

OAIDescribeIdentityProviderConfig_request::~OAIDescribeIdentityProviderConfig_request() {}

void OAIDescribeIdentityProviderConfig_request::initializeModel() {

    m_identity_provider_config_isSet = false;
    m_identity_provider_config_isValid = false;
}

void OAIDescribeIdentityProviderConfig_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeIdentityProviderConfig_request::fromJsonObject(QJsonObject json) {

    m_identity_provider_config_isValid = ::OpenAPI::fromJsonValue(m_identity_provider_config, json[QString("identityProviderConfig")]);
    m_identity_provider_config_isSet = !json[QString("identityProviderConfig")].isNull() && m_identity_provider_config_isValid;
}

QString OAIDescribeIdentityProviderConfig_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeIdentityProviderConfig_request::asJsonObject() const {
    QJsonObject obj;
    if (m_identity_provider_config.isSet()) {
        obj.insert(QString("identityProviderConfig"), ::OpenAPI::toJsonValue(m_identity_provider_config));
    }
    return obj;
}

OAIDescribeIdentityProviderConfig_request_identityProviderConfig OAIDescribeIdentityProviderConfig_request::getIdentityProviderConfig() const {
    return m_identity_provider_config;
}
void OAIDescribeIdentityProviderConfig_request::setIdentityProviderConfig(const OAIDescribeIdentityProviderConfig_request_identityProviderConfig &identity_provider_config) {
    m_identity_provider_config = identity_provider_config;
    m_identity_provider_config_isSet = true;
}

bool OAIDescribeIdentityProviderConfig_request::is_identity_provider_config_Set() const{
    return m_identity_provider_config_isSet;
}

bool OAIDescribeIdentityProviderConfig_request::is_identity_provider_config_Valid() const{
    return m_identity_provider_config_isValid;
}

bool OAIDescribeIdentityProviderConfig_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity_provider_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeIdentityProviderConfig_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_identity_provider_config_isValid && true;
}

} // namespace OpenAPI
