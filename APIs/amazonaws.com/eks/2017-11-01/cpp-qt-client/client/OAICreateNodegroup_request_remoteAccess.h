/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateNodegroup_request_remoteAccess.h
 *
 * An object representing the remote access configuration for the managed node group.
 */

#ifndef OAICreateNodegroup_request_remoteAccess_H
#define OAICreateNodegroup_request_remoteAccess_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateNodegroup_request_remoteAccess : public OAIObject {
public:
    OAICreateNodegroup_request_remoteAccess();
    OAICreateNodegroup_request_remoteAccess(QString json);
    ~OAICreateNodegroup_request_remoteAccess() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEc2SshKey() const;
    void setEc2SshKey(const QString &ec2_ssh_key);
    bool is_ec2_ssh_key_Set() const;
    bool is_ec2_ssh_key_Valid() const;

    QList getSourceSecurityGroups() const;
    void setSourceSecurityGroups(const QList &source_security_groups);
    bool is_source_security_groups_Set() const;
    bool is_source_security_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ec2_ssh_key;
    bool m_ec2_ssh_key_isSet;
    bool m_ec2_ssh_key_isValid;

    QList m_source_security_groups;
    bool m_source_security_groups_isSet;
    bool m_source_security_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateNodegroup_request_remoteAccess)

#endif // OAICreateNodegroup_request_remoteAccess_H
