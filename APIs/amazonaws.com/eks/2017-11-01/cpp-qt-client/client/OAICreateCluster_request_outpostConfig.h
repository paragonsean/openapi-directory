/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCluster_request_outpostConfig.h
 *
 * The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html\&quot;&gt;Creating a local cluster on an Outpost&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;. This API isn&#39;t available for Amazon EKS clusters on the Amazon Web Services cloud.
 */

#ifndef OAICreateCluster_request_outpostConfig_H
#define OAICreateCluster_request_outpostConfig_H

#include <QJsonObject>

#include "OAICreateCluster_request_outpostConfig_controlPlanePlacement.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCluster_request_outpostConfig_controlPlanePlacement;

class OAICreateCluster_request_outpostConfig : public OAIObject {
public:
    OAICreateCluster_request_outpostConfig();
    OAICreateCluster_request_outpostConfig(QString json);
    ~OAICreateCluster_request_outpostConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getOutpostArns() const;
    void setOutpostArns(const QList &outpost_arns);
    bool is_outpost_arns_Set() const;
    bool is_outpost_arns_Valid() const;

    QString getControlPlaneInstanceType() const;
    void setControlPlaneInstanceType(const QString &control_plane_instance_type);
    bool is_control_plane_instance_type_Set() const;
    bool is_control_plane_instance_type_Valid() const;

    OAICreateCluster_request_outpostConfig_controlPlanePlacement getControlPlanePlacement() const;
    void setControlPlanePlacement(const OAICreateCluster_request_outpostConfig_controlPlanePlacement &control_plane_placement);
    bool is_control_plane_placement_Set() const;
    bool is_control_plane_placement_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_outpost_arns;
    bool m_outpost_arns_isSet;
    bool m_outpost_arns_isValid;

    QString m_control_plane_instance_type;
    bool m_control_plane_instance_type_isSet;
    bool m_control_plane_instance_type_isValid;

    OAICreateCluster_request_outpostConfig_controlPlanePlacement m_control_plane_placement;
    bool m_control_plane_placement_isSet;
    bool m_control_plane_placement_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCluster_request_outpostConfig)

#endif // OAICreateCluster_request_outpostConfig_H
