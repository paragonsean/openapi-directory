/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddonInfo.h
 *
 * Information about an add-on.
 */

#ifndef OAIAddonInfo_H
#define OAIAddonInfo_H

#include <QJsonObject>

#include "OAIAddonInfo_marketplaceInformation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddonInfo_marketplaceInformation;

class OAIAddonInfo : public OAIObject {
public:
    OAIAddonInfo();
    OAIAddonInfo(QString json);
    ~OAIAddonInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddonName() const;
    void setAddonName(const QString &addon_name);
    bool is_addon_name_Set() const;
    bool is_addon_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList getAddonVersions() const;
    void setAddonVersions(const QList &addon_versions);
    bool is_addon_versions_Set() const;
    bool is_addon_versions_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIAddonInfo_marketplaceInformation getMarketplaceInformation() const;
    void setMarketplaceInformation(const OAIAddonInfo_marketplaceInformation &marketplace_information);
    bool is_marketplace_information_Set() const;
    bool is_marketplace_information_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_addon_name;
    bool m_addon_name_isSet;
    bool m_addon_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList m_addon_versions;
    bool m_addon_versions_isSet;
    bool m_addon_versions_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIAddonInfo_marketplaceInformation m_marketplace_information;
    bool m_marketplace_information_isSet;
    bool m_marketplace_information_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddonInfo)

#endif // OAIAddonInfo_H
