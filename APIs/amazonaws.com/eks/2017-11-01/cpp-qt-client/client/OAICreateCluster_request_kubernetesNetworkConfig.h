/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCluster_request_kubernetesNetworkConfig.h
 *
 * The Kubernetes network configuration for the cluster.
 */

#ifndef OAICreateCluster_request_kubernetesNetworkConfig_H
#define OAICreateCluster_request_kubernetesNetworkConfig_H

#include <QJsonObject>

#include "OAIIpFamily.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateCluster_request_kubernetesNetworkConfig : public OAIObject {
public:
    OAICreateCluster_request_kubernetesNetworkConfig();
    OAICreateCluster_request_kubernetesNetworkConfig(QString json);
    ~OAICreateCluster_request_kubernetesNetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getServiceIpv4Cidr() const;
    void setServiceIpv4Cidr(const QString &service_ipv4_cidr);
    bool is_service_ipv4_cidr_Set() const;
    bool is_service_ipv4_cidr_Valid() const;

    OAIIpFamily getIpFamily() const;
    void setIpFamily(const OAIIpFamily &ip_family);
    bool is_ip_family_Set() const;
    bool is_ip_family_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_service_ipv4_cidr;
    bool m_service_ipv4_cidr_isSet;
    bool m_service_ipv4_cidr_isValid;

    OAIIpFamily m_ip_family;
    bool m_ip_family_isSet;
    bool m_ip_family_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCluster_request_kubernetesNetworkConfig)

#endif // OAICreateCluster_request_kubernetesNetworkConfig_H
