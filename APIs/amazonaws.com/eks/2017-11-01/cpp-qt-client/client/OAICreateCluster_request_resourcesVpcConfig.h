/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCluster_request_resourcesVpcConfig.h
 *
 * An object representing the VPC configuration to use for an Amazon EKS cluster.
 */

#ifndef OAICreateCluster_request_resourcesVpcConfig_H
#define OAICreateCluster_request_resourcesVpcConfig_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateCluster_request_resourcesVpcConfig : public OAIObject {
public:
    OAICreateCluster_request_resourcesVpcConfig();
    OAICreateCluster_request_resourcesVpcConfig(QString json);
    ~OAICreateCluster_request_resourcesVpcConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSubnetIds() const;
    void setSubnetIds(const QList &subnet_ids);
    bool is_subnet_ids_Set() const;
    bool is_subnet_ids_Valid() const;

    QList getSecurityGroupIds() const;
    void setSecurityGroupIds(const QList &security_group_ids);
    bool is_security_group_ids_Set() const;
    bool is_security_group_ids_Valid() const;

    bool getEndpointPublicAccess() const;
    void setEndpointPublicAccess(const bool &endpoint_public_access);
    bool is_endpoint_public_access_Set() const;
    bool is_endpoint_public_access_Valid() const;

    bool getEndpointPrivateAccess() const;
    void setEndpointPrivateAccess(const bool &endpoint_private_access);
    bool is_endpoint_private_access_Set() const;
    bool is_endpoint_private_access_Valid() const;

    QList getPublicAccessCidrs() const;
    void setPublicAccessCidrs(const QList &public_access_cidrs);
    bool is_public_access_cidrs_Set() const;
    bool is_public_access_cidrs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_subnet_ids;
    bool m_subnet_ids_isSet;
    bool m_subnet_ids_isValid;

    QList m_security_group_ids;
    bool m_security_group_ids_isSet;
    bool m_security_group_ids_isValid;

    bool m_endpoint_public_access;
    bool m_endpoint_public_access_isSet;
    bool m_endpoint_public_access_isValid;

    bool m_endpoint_private_access;
    bool m_endpoint_private_access_isSet;
    bool m_endpoint_private_access_isValid;

    QList m_public_access_cidrs;
    bool m_public_access_cidrs_isSet;
    bool m_public_access_cidrs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCluster_request_resourcesVpcConfig)

#endif // OAICreateCluster_request_resourcesVpcConfig_H
