/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddon.h
 *
 * An Amazon EKS add-on. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html\&quot;&gt;Amazon EKS add-ons&lt;/a&gt; in the &lt;i&gt;Amazon EKS User Guide&lt;/i&gt;.
 */

#ifndef OAIAddon_H
#define OAIAddon_H

#include <QJsonObject>

#include "OAIAddonStatus.h"
#include "OAIAddon_health.h"
#include "OAIAddon_marketplaceInformation.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddon_health;
class OAIAddon_marketplaceInformation;

class OAIAddon : public OAIObject {
public:
    OAIAddon();
    OAIAddon(QString json);
    ~OAIAddon() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddonName() const;
    void setAddonName(const QString &addon_name);
    bool is_addon_name_Set() const;
    bool is_addon_name_Valid() const;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    OAIAddonStatus getStatus() const;
    void setStatus(const OAIAddonStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getAddonVersion() const;
    void setAddonVersion(const QString &addon_version);
    bool is_addon_version_Set() const;
    bool is_addon_version_Valid() const;

    OAIAddon_health getHealth() const;
    void setHealth(const OAIAddon_health &health);
    bool is_health_Set() const;
    bool is_health_Valid() const;

    QString getAddonArn() const;
    void setAddonArn(const QString &addon_arn);
    bool is_addon_arn_Set() const;
    bool is_addon_arn_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getModifiedAt() const;
    void setModifiedAt(const QDateTime &modified_at);
    bool is_modified_at_Set() const;
    bool is_modified_at_Valid() const;

    QString getServiceAccountRoleArn() const;
    void setServiceAccountRoleArn(const QString &service_account_role_arn);
    bool is_service_account_role_arn_Set() const;
    bool is_service_account_role_arn_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIAddon_marketplaceInformation getMarketplaceInformation() const;
    void setMarketplaceInformation(const OAIAddon_marketplaceInformation &marketplace_information);
    bool is_marketplace_information_Set() const;
    bool is_marketplace_information_Valid() const;

    QString getConfigurationValues() const;
    void setConfigurationValues(const QString &configuration_values);
    bool is_configuration_values_Set() const;
    bool is_configuration_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_addon_name;
    bool m_addon_name_isSet;
    bool m_addon_name_isValid;

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    OAIAddonStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_addon_version;
    bool m_addon_version_isSet;
    bool m_addon_version_isValid;

    OAIAddon_health m_health;
    bool m_health_isSet;
    bool m_health_isValid;

    QString m_addon_arn;
    bool m_addon_arn_isSet;
    bool m_addon_arn_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_modified_at;
    bool m_modified_at_isSet;
    bool m_modified_at_isValid;

    QString m_service_account_role_arn;
    bool m_service_account_role_arn_isSet;
    bool m_service_account_role_arn_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIAddon_marketplaceInformation m_marketplace_information;
    bool m_marketplace_information_isSet;
    bool m_marketplace_information_isValid;

    QString m_configuration_values;
    bool m_configuration_values_isSet;
    bool m_configuration_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddon)

#endif // OAIAddon_H
