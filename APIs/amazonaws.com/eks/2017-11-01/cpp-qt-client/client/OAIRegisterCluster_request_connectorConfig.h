/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterCluster_request_connectorConfig.h
 *
 * The configuration sent to a cluster for configuration.
 */

#ifndef OAIRegisterCluster_request_connectorConfig_H
#define OAIRegisterCluster_request_connectorConfig_H

#include <QJsonObject>

#include "OAIConnectorConfigProvider.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegisterCluster_request_connectorConfig : public OAIObject {
public:
    OAIRegisterCluster_request_connectorConfig();
    OAIRegisterCluster_request_connectorConfig(QString json);
    ~OAIRegisterCluster_request_connectorConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIConnectorConfigProvider getProvider() const;
    void setProvider(const OAIConnectorConfigProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIConnectorConfigProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterCluster_request_connectorConfig)

#endif // OAIRegisterCluster_request_connectorConfig_H
