/**
 * Amazon Elastic Kubernetes Service
 * <p>Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to stand up or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications. </p> <p>Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.</p>
 *
 * The version of the OpenAPI document: 2017-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateClusterRequest_resourcesVpcConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateClusterRequest_resourcesVpcConfig::OAICreateClusterRequest_resourcesVpcConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateClusterRequest_resourcesVpcConfig::OAICreateClusterRequest_resourcesVpcConfig() {
    this->initializeModel();
}

OAICreateClusterRequest_resourcesVpcConfig::~OAICreateClusterRequest_resourcesVpcConfig() {}

void OAICreateClusterRequest_resourcesVpcConfig::initializeModel() {

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;

    m_endpoint_public_access_isSet = false;
    m_endpoint_public_access_isValid = false;

    m_endpoint_private_access_isSet = false;
    m_endpoint_private_access_isValid = false;

    m_public_access_cidrs_isSet = false;
    m_public_access_cidrs_isValid = false;
}

void OAICreateClusterRequest_resourcesVpcConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateClusterRequest_resourcesVpcConfig::fromJsonObject(QJsonObject json) {

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("subnetIds")]);
    m_subnet_ids_isSet = !json[QString("subnetIds")].isNull() && m_subnet_ids_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("securityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("securityGroupIds")].isNull() && m_security_group_ids_isValid;

    m_endpoint_public_access_isValid = ::OpenAPI::fromJsonValue(m_endpoint_public_access, json[QString("endpointPublicAccess")]);
    m_endpoint_public_access_isSet = !json[QString("endpointPublicAccess")].isNull() && m_endpoint_public_access_isValid;

    m_endpoint_private_access_isValid = ::OpenAPI::fromJsonValue(m_endpoint_private_access, json[QString("endpointPrivateAccess")]);
    m_endpoint_private_access_isSet = !json[QString("endpointPrivateAccess")].isNull() && m_endpoint_private_access_isValid;

    m_public_access_cidrs_isValid = ::OpenAPI::fromJsonValue(m_public_access_cidrs, json[QString("publicAccessCidrs")]);
    m_public_access_cidrs_isSet = !json[QString("publicAccessCidrs")].isNull() && m_public_access_cidrs_isValid;
}

QString OAICreateClusterRequest_resourcesVpcConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateClusterRequest_resourcesVpcConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("subnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("securityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    if (m_endpoint_public_access_isSet) {
        obj.insert(QString("endpointPublicAccess"), ::OpenAPI::toJsonValue(m_endpoint_public_access));
    }
    if (m_endpoint_private_access_isSet) {
        obj.insert(QString("endpointPrivateAccess"), ::OpenAPI::toJsonValue(m_endpoint_private_access));
    }
    if (m_public_access_cidrs.isSet()) {
        obj.insert(QString("publicAccessCidrs"), ::OpenAPI::toJsonValue(m_public_access_cidrs));
    }
    return obj;
}

QList OAICreateClusterRequest_resourcesVpcConfig::getSubnetIds() const {
    return m_subnet_ids;
}
void OAICreateClusterRequest_resourcesVpcConfig::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QList OAICreateClusterRequest_resourcesVpcConfig::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAICreateClusterRequest_resourcesVpcConfig::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

bool OAICreateClusterRequest_resourcesVpcConfig::getEndpointPublicAccess() const {
    return m_endpoint_public_access;
}
void OAICreateClusterRequest_resourcesVpcConfig::setEndpointPublicAccess(const bool &endpoint_public_access) {
    m_endpoint_public_access = endpoint_public_access;
    m_endpoint_public_access_isSet = true;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_endpoint_public_access_Set() const{
    return m_endpoint_public_access_isSet;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_endpoint_public_access_Valid() const{
    return m_endpoint_public_access_isValid;
}

bool OAICreateClusterRequest_resourcesVpcConfig::getEndpointPrivateAccess() const {
    return m_endpoint_private_access;
}
void OAICreateClusterRequest_resourcesVpcConfig::setEndpointPrivateAccess(const bool &endpoint_private_access) {
    m_endpoint_private_access = endpoint_private_access;
    m_endpoint_private_access_isSet = true;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_endpoint_private_access_Set() const{
    return m_endpoint_private_access_isSet;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_endpoint_private_access_Valid() const{
    return m_endpoint_private_access_isValid;
}

QList OAICreateClusterRequest_resourcesVpcConfig::getPublicAccessCidrs() const {
    return m_public_access_cidrs;
}
void OAICreateClusterRequest_resourcesVpcConfig::setPublicAccessCidrs(const QList &public_access_cidrs) {
    m_public_access_cidrs = public_access_cidrs;
    m_public_access_cidrs_isSet = true;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_public_access_cidrs_Set() const{
    return m_public_access_cidrs_isSet;
}

bool OAICreateClusterRequest_resourcesVpcConfig::is_public_access_cidrs_Valid() const{
    return m_public_access_cidrs_isValid;
}

bool OAICreateClusterRequest_resourcesVpcConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_public_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_private_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_access_cidrs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateClusterRequest_resourcesVpcConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
