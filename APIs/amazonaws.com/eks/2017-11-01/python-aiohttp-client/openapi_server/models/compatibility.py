# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Compatibility(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_version: str=None, platform_versions: List=None, default_version: bool=None):
        """Compatibility - a model defined in OpenAPI

        :param cluster_version: The cluster_version of this Compatibility.
        :param platform_versions: The platform_versions of this Compatibility.
        :param default_version: The default_version of this Compatibility.
        """
        self.openapi_types = {
            'cluster_version': str,
            'platform_versions': List,
            'default_version': bool
        }

        self.attribute_map = {
            'cluster_version': 'clusterVersion',
            'platform_versions': 'platformVersions',
            'default_version': 'defaultVersion'
        }

        self._cluster_version = cluster_version
        self._platform_versions = platform_versions
        self._default_version = default_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Compatibility':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Compatibility of this Compatibility.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_version(self):
        """Gets the cluster_version of this Compatibility.


        :return: The cluster_version of this Compatibility.
        :rtype: str
        """
        return self._cluster_version

    @cluster_version.setter
    def cluster_version(self, cluster_version):
        """Sets the cluster_version of this Compatibility.


        :param cluster_version: The cluster_version of this Compatibility.
        :type cluster_version: str
        """

        self._cluster_version = cluster_version

    @property
    def platform_versions(self):
        """Gets the platform_versions of this Compatibility.


        :return: The platform_versions of this Compatibility.
        :rtype: List
        """
        return self._platform_versions

    @platform_versions.setter
    def platform_versions(self, platform_versions):
        """Sets the platform_versions of this Compatibility.


        :param platform_versions: The platform_versions of this Compatibility.
        :type platform_versions: List
        """

        self._platform_versions = platform_versions

    @property
    def default_version(self):
        """Gets the default_version of this Compatibility.


        :return: The default_version of this Compatibility.
        :rtype: bool
        """
        return self._default_version

    @default_version.setter
    def default_version(self, default_version):
        """Sets the default_version of this Compatibility.


        :param default_version: The default_version of this Compatibility.
        :type default_version: bool
        """

        self._default_version = default_version
