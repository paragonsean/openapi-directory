# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.addon_health import AddonHealth
from openapi_server.models.addon_marketplace_information import AddonMarketplaceInformation
from openapi_server.models.addon_status import AddonStatus
from openapi_server import util


class Addon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addon_name: str=None, cluster_name: str=None, status: AddonStatus=None, addon_version: str=None, health: AddonHealth=None, addon_arn: str=None, created_at: datetime=None, modified_at: datetime=None, service_account_role_arn: str=None, tags: Dict=None, publisher: str=None, owner: str=None, marketplace_information: AddonMarketplaceInformation=None, configuration_values: str=None):
        """Addon - a model defined in OpenAPI

        :param addon_name: The addon_name of this Addon.
        :param cluster_name: The cluster_name of this Addon.
        :param status: The status of this Addon.
        :param addon_version: The addon_version of this Addon.
        :param health: The health of this Addon.
        :param addon_arn: The addon_arn of this Addon.
        :param created_at: The created_at of this Addon.
        :param modified_at: The modified_at of this Addon.
        :param service_account_role_arn: The service_account_role_arn of this Addon.
        :param tags: The tags of this Addon.
        :param publisher: The publisher of this Addon.
        :param owner: The owner of this Addon.
        :param marketplace_information: The marketplace_information of this Addon.
        :param configuration_values: The configuration_values of this Addon.
        """
        self.openapi_types = {
            'addon_name': str,
            'cluster_name': str,
            'status': AddonStatus,
            'addon_version': str,
            'health': AddonHealth,
            'addon_arn': str,
            'created_at': datetime,
            'modified_at': datetime,
            'service_account_role_arn': str,
            'tags': Dict,
            'publisher': str,
            'owner': str,
            'marketplace_information': AddonMarketplaceInformation,
            'configuration_values': str
        }

        self.attribute_map = {
            'addon_name': 'addonName',
            'cluster_name': 'clusterName',
            'status': 'status',
            'addon_version': 'addonVersion',
            'health': 'health',
            'addon_arn': 'addonArn',
            'created_at': 'createdAt',
            'modified_at': 'modifiedAt',
            'service_account_role_arn': 'serviceAccountRoleArn',
            'tags': 'tags',
            'publisher': 'publisher',
            'owner': 'owner',
            'marketplace_information': 'marketplaceInformation',
            'configuration_values': 'configurationValues'
        }

        self._addon_name = addon_name
        self._cluster_name = cluster_name
        self._status = status
        self._addon_version = addon_version
        self._health = health
        self._addon_arn = addon_arn
        self._created_at = created_at
        self._modified_at = modified_at
        self._service_account_role_arn = service_account_role_arn
        self._tags = tags
        self._publisher = publisher
        self._owner = owner
        self._marketplace_information = marketplace_information
        self._configuration_values = configuration_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Addon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Addon of this Addon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addon_name(self):
        """Gets the addon_name of this Addon.


        :return: The addon_name of this Addon.
        :rtype: str
        """
        return self._addon_name

    @addon_name.setter
    def addon_name(self, addon_name):
        """Sets the addon_name of this Addon.


        :param addon_name: The addon_name of this Addon.
        :type addon_name: str
        """

        self._addon_name = addon_name

    @property
    def cluster_name(self):
        """Gets the cluster_name of this Addon.


        :return: The cluster_name of this Addon.
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this Addon.


        :param cluster_name: The cluster_name of this Addon.
        :type cluster_name: str
        """

        self._cluster_name = cluster_name

    @property
    def status(self):
        """Gets the status of this Addon.


        :return: The status of this Addon.
        :rtype: AddonStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Addon.


        :param status: The status of this Addon.
        :type status: AddonStatus
        """

        self._status = status

    @property
    def addon_version(self):
        """Gets the addon_version of this Addon.


        :return: The addon_version of this Addon.
        :rtype: str
        """
        return self._addon_version

    @addon_version.setter
    def addon_version(self, addon_version):
        """Sets the addon_version of this Addon.


        :param addon_version: The addon_version of this Addon.
        :type addon_version: str
        """

        self._addon_version = addon_version

    @property
    def health(self):
        """Gets the health of this Addon.


        :return: The health of this Addon.
        :rtype: AddonHealth
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this Addon.


        :param health: The health of this Addon.
        :type health: AddonHealth
        """

        self._health = health

    @property
    def addon_arn(self):
        """Gets the addon_arn of this Addon.


        :return: The addon_arn of this Addon.
        :rtype: str
        """
        return self._addon_arn

    @addon_arn.setter
    def addon_arn(self, addon_arn):
        """Sets the addon_arn of this Addon.


        :param addon_arn: The addon_arn of this Addon.
        :type addon_arn: str
        """

        self._addon_arn = addon_arn

    @property
    def created_at(self):
        """Gets the created_at of this Addon.


        :return: The created_at of this Addon.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Addon.


        :param created_at: The created_at of this Addon.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this Addon.


        :return: The modified_at of this Addon.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this Addon.


        :param modified_at: The modified_at of this Addon.
        :type modified_at: datetime
        """

        self._modified_at = modified_at

    @property
    def service_account_role_arn(self):
        """Gets the service_account_role_arn of this Addon.


        :return: The service_account_role_arn of this Addon.
        :rtype: str
        """
        return self._service_account_role_arn

    @service_account_role_arn.setter
    def service_account_role_arn(self, service_account_role_arn):
        """Sets the service_account_role_arn of this Addon.


        :param service_account_role_arn: The service_account_role_arn of this Addon.
        :type service_account_role_arn: str
        """

        self._service_account_role_arn = service_account_role_arn

    @property
    def tags(self):
        """Gets the tags of this Addon.


        :return: The tags of this Addon.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Addon.


        :param tags: The tags of this Addon.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def publisher(self):
        """Gets the publisher of this Addon.


        :return: The publisher of this Addon.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this Addon.


        :param publisher: The publisher of this Addon.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def owner(self):
        """Gets the owner of this Addon.


        :return: The owner of this Addon.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this Addon.


        :param owner: The owner of this Addon.
        :type owner: str
        """

        self._owner = owner

    @property
    def marketplace_information(self):
        """Gets the marketplace_information of this Addon.


        :return: The marketplace_information of this Addon.
        :rtype: AddonMarketplaceInformation
        """
        return self._marketplace_information

    @marketplace_information.setter
    def marketplace_information(self, marketplace_information):
        """Sets the marketplace_information of this Addon.


        :param marketplace_information: The marketplace_information of this Addon.
        :type marketplace_information: AddonMarketplaceInformation
        """

        self._marketplace_information = marketplace_information

    @property
    def configuration_values(self):
        """Gets the configuration_values of this Addon.


        :return: The configuration_values of this Addon.
        :rtype: str
        """
        return self._configuration_values

    @configuration_values.setter
    def configuration_values(self, configuration_values):
        """Sets the configuration_values of this Addon.


        :param configuration_values: The configuration_values of this Addon.
        :type configuration_values: str
        """

        self._configuration_values = configuration_values
