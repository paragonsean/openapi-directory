# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterLogging(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_logging: List=None):
        """ClusterLogging - a model defined in OpenAPI

        :param cluster_logging: The cluster_logging of this ClusterLogging.
        """
        self.openapi_types = {
            'cluster_logging': List
        }

        self.attribute_map = {
            'cluster_logging': 'clusterLogging'
        }

        self._cluster_logging = cluster_logging

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterLogging':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cluster_logging of this ClusterLogging.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_logging(self):
        """Gets the cluster_logging of this ClusterLogging.


        :return: The cluster_logging of this ClusterLogging.
        :rtype: List
        """
        return self._cluster_logging

    @cluster_logging.setter
    def cluster_logging(self, cluster_logging):
        """Sets the cluster_logging of this ClusterLogging.


        :param cluster_logging: The cluster_logging of this ClusterLogging.
        :type cluster_logging: List
        """

        self._cluster_logging = cluster_logging
