# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateAddonRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addon_version: str=None, service_account_role_arn: str=None, resolve_conflicts: str=None, client_request_token: str=None, configuration_values: str=None):
        """UpdateAddonRequest - a model defined in OpenAPI

        :param addon_version: The addon_version of this UpdateAddonRequest.
        :param service_account_role_arn: The service_account_role_arn of this UpdateAddonRequest.
        :param resolve_conflicts: The resolve_conflicts of this UpdateAddonRequest.
        :param client_request_token: The client_request_token of this UpdateAddonRequest.
        :param configuration_values: The configuration_values of this UpdateAddonRequest.
        """
        self.openapi_types = {
            'addon_version': str,
            'service_account_role_arn': str,
            'resolve_conflicts': str,
            'client_request_token': str,
            'configuration_values': str
        }

        self.attribute_map = {
            'addon_version': 'addonVersion',
            'service_account_role_arn': 'serviceAccountRoleArn',
            'resolve_conflicts': 'resolveConflicts',
            'client_request_token': 'clientRequestToken',
            'configuration_values': 'configurationValues'
        }

        self._addon_version = addon_version
        self._service_account_role_arn = service_account_role_arn
        self._resolve_conflicts = resolve_conflicts
        self._client_request_token = client_request_token
        self._configuration_values = configuration_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAddonRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAddon_request of this UpdateAddonRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addon_version(self):
        """Gets the addon_version of this UpdateAddonRequest.

        The version of the add-on. The version must match one of the versions returned by <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\"> <code>DescribeAddonVersions</code> </a>.

        :return: The addon_version of this UpdateAddonRequest.
        :rtype: str
        """
        return self._addon_version

    @addon_version.setter
    def addon_version(self, addon_version):
        """Sets the addon_version of this UpdateAddonRequest.

        The version of the add-on. The version must match one of the versions returned by <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html\"> <code>DescribeAddonVersions</code> </a>.

        :param addon_version: The addon_version of this UpdateAddonRequest.
        :type addon_version: str
        """

        self._addon_version = addon_version

    @property
    def service_account_role_arn(self):
        """Gets the service_account_role_arn of this UpdateAddonRequest.

        <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html\">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html\">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>

        :return: The service_account_role_arn of this UpdateAddonRequest.
        :rtype: str
        """
        return self._service_account_role_arn

    @service_account_role_arn.setter
    def service_account_role_arn(self, service_account_role_arn):
        """Sets the service_account_role_arn of this UpdateAddonRequest.

        <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html\">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html\">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>

        :param service_account_role_arn: The service_account_role_arn of this UpdateAddonRequest.
        :type service_account_role_arn: str
        """
        if service_account_role_arn is not None and len(service_account_role_arn) > 255:
            raise ValueError("Invalid value for `service_account_role_arn`, length must be less than or equal to `255`")
        if service_account_role_arn is not None and len(service_account_role_arn) < 1:
            raise ValueError("Invalid value for `service_account_role_arn`, length must be greater than or equal to `1`")

        self._service_account_role_arn = service_account_role_arn

    @property
    def resolve_conflicts(self):
        """Gets the resolve_conflicts of this UpdateAddonRequest.

        <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p> <ul> <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li> <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li> </ul>

        :return: The resolve_conflicts of this UpdateAddonRequest.
        :rtype: str
        """
        return self._resolve_conflicts

    @resolve_conflicts.setter
    def resolve_conflicts(self, resolve_conflicts):
        """Sets the resolve_conflicts of this UpdateAddonRequest.

        <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p> <ul> <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li> <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li> </ul>

        :param resolve_conflicts: The resolve_conflicts of this UpdateAddonRequest.
        :type resolve_conflicts: str
        """
        allowed_values = ["OVERWRITE", "NONE", "PRESERVE"]  # noqa: E501
        if resolve_conflicts not in allowed_values:
            raise ValueError(
                "Invalid value for `resolve_conflicts` ({0}), must be one of {1}"
                .format(resolve_conflicts, allowed_values)
            )

        self._resolve_conflicts = resolve_conflicts

    @property
    def client_request_token(self):
        """Gets the client_request_token of this UpdateAddonRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :return: The client_request_token of this UpdateAddonRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this UpdateAddonRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :param client_request_token: The client_request_token of this UpdateAddonRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def configuration_values(self):
        """Gets the configuration_values of this UpdateAddonRequest.

        The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html\">DescribeAddonConfiguration</a>.

        :return: The configuration_values of this UpdateAddonRequest.
        :rtype: str
        """
        return self._configuration_values

    @configuration_values.setter
    def configuration_values(self, configuration_values):
        """Sets the configuration_values of this UpdateAddonRequest.

        The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html\">DescribeAddonConfiguration</a>.

        :param configuration_values: The configuration_values of this UpdateAddonRequest.
        :type configuration_values: str
        """

        self._configuration_values = configuration_values
