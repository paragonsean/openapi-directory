# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_outpost_config_control_plane_placement import CreateClusterRequestOutpostConfigControlPlanePlacement
from openapi_server import util


class CreateClusterRequestOutpostConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outpost_arns: List=None, control_plane_instance_type: str=None, control_plane_placement: CreateClusterRequestOutpostConfigControlPlanePlacement=None):
        """CreateClusterRequestOutpostConfig - a model defined in OpenAPI

        :param outpost_arns: The outpost_arns of this CreateClusterRequestOutpostConfig.
        :param control_plane_instance_type: The control_plane_instance_type of this CreateClusterRequestOutpostConfig.
        :param control_plane_placement: The control_plane_placement of this CreateClusterRequestOutpostConfig.
        """
        self.openapi_types = {
            'outpost_arns': List,
            'control_plane_instance_type': str,
            'control_plane_placement': CreateClusterRequestOutpostConfigControlPlanePlacement
        }

        self.attribute_map = {
            'outpost_arns': 'outpostArns',
            'control_plane_instance_type': 'controlPlaneInstanceType',
            'control_plane_placement': 'controlPlanePlacement'
        }

        self._outpost_arns = outpost_arns
        self._control_plane_instance_type = control_plane_instance_type
        self._control_plane_placement = control_plane_placement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateClusterRequestOutpostConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateClusterRequest_outpostConfig of this CreateClusterRequestOutpostConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outpost_arns(self):
        """Gets the outpost_arns of this CreateClusterRequestOutpostConfig.


        :return: The outpost_arns of this CreateClusterRequestOutpostConfig.
        :rtype: List
        """
        return self._outpost_arns

    @outpost_arns.setter
    def outpost_arns(self, outpost_arns):
        """Sets the outpost_arns of this CreateClusterRequestOutpostConfig.


        :param outpost_arns: The outpost_arns of this CreateClusterRequestOutpostConfig.
        :type outpost_arns: List
        """
        if outpost_arns is None:
            raise ValueError("Invalid value for `outpost_arns`, must not be `None`")

        self._outpost_arns = outpost_arns

    @property
    def control_plane_instance_type(self):
        """Gets the control_plane_instance_type of this CreateClusterRequestOutpostConfig.


        :return: The control_plane_instance_type of this CreateClusterRequestOutpostConfig.
        :rtype: str
        """
        return self._control_plane_instance_type

    @control_plane_instance_type.setter
    def control_plane_instance_type(self, control_plane_instance_type):
        """Sets the control_plane_instance_type of this CreateClusterRequestOutpostConfig.


        :param control_plane_instance_type: The control_plane_instance_type of this CreateClusterRequestOutpostConfig.
        :type control_plane_instance_type: str
        """
        if control_plane_instance_type is None:
            raise ValueError("Invalid value for `control_plane_instance_type`, must not be `None`")

        self._control_plane_instance_type = control_plane_instance_type

    @property
    def control_plane_placement(self):
        """Gets the control_plane_placement of this CreateClusterRequestOutpostConfig.


        :return: The control_plane_placement of this CreateClusterRequestOutpostConfig.
        :rtype: CreateClusterRequestOutpostConfigControlPlanePlacement
        """
        return self._control_plane_placement

    @control_plane_placement.setter
    def control_plane_placement(self, control_plane_placement):
        """Sets the control_plane_placement of this CreateClusterRequestOutpostConfig.


        :param control_plane_placement: The control_plane_placement of this CreateClusterRequestOutpostConfig.
        :type control_plane_placement: CreateClusterRequestOutpostConfigControlPlanePlacement
        """

        self._control_plane_placement = control_plane_placement
