# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_family import IpFamily
from openapi_server import util


class ClusterKubernetesNetworkConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_ipv4_cidr: str=None, service_ipv6_cidr: str=None, ip_family: IpFamily=None):
        """ClusterKubernetesNetworkConfig - a model defined in OpenAPI

        :param service_ipv4_cidr: The service_ipv4_cidr of this ClusterKubernetesNetworkConfig.
        :param service_ipv6_cidr: The service_ipv6_cidr of this ClusterKubernetesNetworkConfig.
        :param ip_family: The ip_family of this ClusterKubernetesNetworkConfig.
        """
        self.openapi_types = {
            'service_ipv4_cidr': str,
            'service_ipv6_cidr': str,
            'ip_family': IpFamily
        }

        self.attribute_map = {
            'service_ipv4_cidr': 'serviceIpv4Cidr',
            'service_ipv6_cidr': 'serviceIpv6Cidr',
            'ip_family': 'ipFamily'
        }

        self._service_ipv4_cidr = service_ipv4_cidr
        self._service_ipv6_cidr = service_ipv6_cidr
        self._ip_family = ip_family

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterKubernetesNetworkConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cluster_kubernetesNetworkConfig of this ClusterKubernetesNetworkConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_ipv4_cidr(self):
        """Gets the service_ipv4_cidr of this ClusterKubernetesNetworkConfig.


        :return: The service_ipv4_cidr of this ClusterKubernetesNetworkConfig.
        :rtype: str
        """
        return self._service_ipv4_cidr

    @service_ipv4_cidr.setter
    def service_ipv4_cidr(self, service_ipv4_cidr):
        """Sets the service_ipv4_cidr of this ClusterKubernetesNetworkConfig.


        :param service_ipv4_cidr: The service_ipv4_cidr of this ClusterKubernetesNetworkConfig.
        :type service_ipv4_cidr: str
        """

        self._service_ipv4_cidr = service_ipv4_cidr

    @property
    def service_ipv6_cidr(self):
        """Gets the service_ipv6_cidr of this ClusterKubernetesNetworkConfig.


        :return: The service_ipv6_cidr of this ClusterKubernetesNetworkConfig.
        :rtype: str
        """
        return self._service_ipv6_cidr

    @service_ipv6_cidr.setter
    def service_ipv6_cidr(self, service_ipv6_cidr):
        """Sets the service_ipv6_cidr of this ClusterKubernetesNetworkConfig.


        :param service_ipv6_cidr: The service_ipv6_cidr of this ClusterKubernetesNetworkConfig.
        :type service_ipv6_cidr: str
        """

        self._service_ipv6_cidr = service_ipv6_cidr

    @property
    def ip_family(self):
        """Gets the ip_family of this ClusterKubernetesNetworkConfig.


        :return: The ip_family of this ClusterKubernetesNetworkConfig.
        :rtype: IpFamily
        """
        return self._ip_family

    @ip_family.setter
    def ip_family(self, ip_family):
        """Sets the ip_family of this ClusterKubernetesNetworkConfig.


        :param ip_family: The ip_family of this ClusterKubernetesNetworkConfig.
        :type ip_family: IpFamily
        """

        self._ip_family = ip_family
