# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_cluster_request_logging import CreateClusterRequestLogging
from openapi_server.models.create_cluster_request_resources_vpc_config import CreateClusterRequestResourcesVpcConfig
from openapi_server import util


class UpdateClusterConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resources_vpc_config: CreateClusterRequestResourcesVpcConfig=None, logging: CreateClusterRequestLogging=None, client_request_token: str=None):
        """UpdateClusterConfigRequest - a model defined in OpenAPI

        :param resources_vpc_config: The resources_vpc_config of this UpdateClusterConfigRequest.
        :param logging: The logging of this UpdateClusterConfigRequest.
        :param client_request_token: The client_request_token of this UpdateClusterConfigRequest.
        """
        self.openapi_types = {
            'resources_vpc_config': CreateClusterRequestResourcesVpcConfig,
            'logging': CreateClusterRequestLogging,
            'client_request_token': str
        }

        self.attribute_map = {
            'resources_vpc_config': 'resourcesVpcConfig',
            'logging': 'logging',
            'client_request_token': 'clientRequestToken'
        }

        self._resources_vpc_config = resources_vpc_config
        self._logging = logging
        self._client_request_token = client_request_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateClusterConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateClusterConfig_request of this UpdateClusterConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resources_vpc_config(self):
        """Gets the resources_vpc_config of this UpdateClusterConfigRequest.


        :return: The resources_vpc_config of this UpdateClusterConfigRequest.
        :rtype: CreateClusterRequestResourcesVpcConfig
        """
        return self._resources_vpc_config

    @resources_vpc_config.setter
    def resources_vpc_config(self, resources_vpc_config):
        """Sets the resources_vpc_config of this UpdateClusterConfigRequest.


        :param resources_vpc_config: The resources_vpc_config of this UpdateClusterConfigRequest.
        :type resources_vpc_config: CreateClusterRequestResourcesVpcConfig
        """

        self._resources_vpc_config = resources_vpc_config

    @property
    def logging(self):
        """Gets the logging of this UpdateClusterConfigRequest.


        :return: The logging of this UpdateClusterConfigRequest.
        :rtype: CreateClusterRequestLogging
        """
        return self._logging

    @logging.setter
    def logging(self, logging):
        """Sets the logging of this UpdateClusterConfigRequest.


        :param logging: The logging of this UpdateClusterConfigRequest.
        :type logging: CreateClusterRequestLogging
        """

        self._logging = logging

    @property
    def client_request_token(self):
        """Gets the client_request_token of this UpdateClusterConfigRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :return: The client_request_token of this UpdateClusterConfigRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this UpdateClusterConfigRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :param client_request_token: The client_request_token of this UpdateClusterConfigRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token
