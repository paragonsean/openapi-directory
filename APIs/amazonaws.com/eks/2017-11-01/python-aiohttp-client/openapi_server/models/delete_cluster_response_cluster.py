# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster_certificate_authority import ClusterCertificateAuthority
from openapi_server.models.cluster_connector_config import ClusterConnectorConfig
from openapi_server.models.cluster_health import ClusterHealth
from openapi_server.models.cluster_identity import ClusterIdentity
from openapi_server.models.cluster_kubernetes_network_config import ClusterKubernetesNetworkConfig
from openapi_server.models.cluster_logging import ClusterLogging
from openapi_server.models.cluster_outpost_config import ClusterOutpostConfig
from openapi_server.models.cluster_resources_vpc_config import ClusterResourcesVpcConfig
from openapi_server.models.cluster_status import ClusterStatus
from openapi_server import util


class DeleteClusterResponseCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, arn: str=None, created_at: datetime=None, version: str=None, endpoint: str=None, role_arn: str=None, resources_vpc_config: ClusterResourcesVpcConfig=None, kubernetes_network_config: ClusterKubernetesNetworkConfig=None, logging: ClusterLogging=None, identity: ClusterIdentity=None, status: ClusterStatus=None, certificate_authority: ClusterCertificateAuthority=None, client_request_token: str=None, platform_version: str=None, tags: Dict=None, encryption_config: List=None, connector_config: ClusterConnectorConfig=None, id: str=None, health: ClusterHealth=None, outpost_config: ClusterOutpostConfig=None):
        """DeleteClusterResponseCluster - a model defined in OpenAPI

        :param name: The name of this DeleteClusterResponseCluster.
        :param arn: The arn of this DeleteClusterResponseCluster.
        :param created_at: The created_at of this DeleteClusterResponseCluster.
        :param version: The version of this DeleteClusterResponseCluster.
        :param endpoint: The endpoint of this DeleteClusterResponseCluster.
        :param role_arn: The role_arn of this DeleteClusterResponseCluster.
        :param resources_vpc_config: The resources_vpc_config of this DeleteClusterResponseCluster.
        :param kubernetes_network_config: The kubernetes_network_config of this DeleteClusterResponseCluster.
        :param logging: The logging of this DeleteClusterResponseCluster.
        :param identity: The identity of this DeleteClusterResponseCluster.
        :param status: The status of this DeleteClusterResponseCluster.
        :param certificate_authority: The certificate_authority of this DeleteClusterResponseCluster.
        :param client_request_token: The client_request_token of this DeleteClusterResponseCluster.
        :param platform_version: The platform_version of this DeleteClusterResponseCluster.
        :param tags: The tags of this DeleteClusterResponseCluster.
        :param encryption_config: The encryption_config of this DeleteClusterResponseCluster.
        :param connector_config: The connector_config of this DeleteClusterResponseCluster.
        :param id: The id of this DeleteClusterResponseCluster.
        :param health: The health of this DeleteClusterResponseCluster.
        :param outpost_config: The outpost_config of this DeleteClusterResponseCluster.
        """
        self.openapi_types = {
            'name': str,
            'arn': str,
            'created_at': datetime,
            'version': str,
            'endpoint': str,
            'role_arn': str,
            'resources_vpc_config': ClusterResourcesVpcConfig,
            'kubernetes_network_config': ClusterKubernetesNetworkConfig,
            'logging': ClusterLogging,
            'identity': ClusterIdentity,
            'status': ClusterStatus,
            'certificate_authority': ClusterCertificateAuthority,
            'client_request_token': str,
            'platform_version': str,
            'tags': Dict,
            'encryption_config': List,
            'connector_config': ClusterConnectorConfig,
            'id': str,
            'health': ClusterHealth,
            'outpost_config': ClusterOutpostConfig
        }

        self.attribute_map = {
            'name': 'name',
            'arn': 'arn',
            'created_at': 'createdAt',
            'version': 'version',
            'endpoint': 'endpoint',
            'role_arn': 'roleArn',
            'resources_vpc_config': 'resourcesVpcConfig',
            'kubernetes_network_config': 'kubernetesNetworkConfig',
            'logging': 'logging',
            'identity': 'identity',
            'status': 'status',
            'certificate_authority': 'certificateAuthority',
            'client_request_token': 'clientRequestToken',
            'platform_version': 'platformVersion',
            'tags': 'tags',
            'encryption_config': 'encryptionConfig',
            'connector_config': 'connectorConfig',
            'id': 'id',
            'health': 'health',
            'outpost_config': 'outpostConfig'
        }

        self._name = name
        self._arn = arn
        self._created_at = created_at
        self._version = version
        self._endpoint = endpoint
        self._role_arn = role_arn
        self._resources_vpc_config = resources_vpc_config
        self._kubernetes_network_config = kubernetes_network_config
        self._logging = logging
        self._identity = identity
        self._status = status
        self._certificate_authority = certificate_authority
        self._client_request_token = client_request_token
        self._platform_version = platform_version
        self._tags = tags
        self._encryption_config = encryption_config
        self._connector_config = connector_config
        self._id = id
        self._health = health
        self._outpost_config = outpost_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteClusterResponseCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteClusterResponse_cluster of this DeleteClusterResponseCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DeleteClusterResponseCluster.


        :return: The name of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeleteClusterResponseCluster.


        :param name: The name of this DeleteClusterResponseCluster.
        :type name: str
        """

        self._name = name

    @property
    def arn(self):
        """Gets the arn of this DeleteClusterResponseCluster.


        :return: The arn of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DeleteClusterResponseCluster.


        :param arn: The arn of this DeleteClusterResponseCluster.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_at(self):
        """Gets the created_at of this DeleteClusterResponseCluster.


        :return: The created_at of this DeleteClusterResponseCluster.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DeleteClusterResponseCluster.


        :param created_at: The created_at of this DeleteClusterResponseCluster.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def version(self):
        """Gets the version of this DeleteClusterResponseCluster.


        :return: The version of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeleteClusterResponseCluster.


        :param version: The version of this DeleteClusterResponseCluster.
        :type version: str
        """

        self._version = version

    @property
    def endpoint(self):
        """Gets the endpoint of this DeleteClusterResponseCluster.


        :return: The endpoint of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this DeleteClusterResponseCluster.


        :param endpoint: The endpoint of this DeleteClusterResponseCluster.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def role_arn(self):
        """Gets the role_arn of this DeleteClusterResponseCluster.


        :return: The role_arn of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this DeleteClusterResponseCluster.


        :param role_arn: The role_arn of this DeleteClusterResponseCluster.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def resources_vpc_config(self):
        """Gets the resources_vpc_config of this DeleteClusterResponseCluster.


        :return: The resources_vpc_config of this DeleteClusterResponseCluster.
        :rtype: ClusterResourcesVpcConfig
        """
        return self._resources_vpc_config

    @resources_vpc_config.setter
    def resources_vpc_config(self, resources_vpc_config):
        """Sets the resources_vpc_config of this DeleteClusterResponseCluster.


        :param resources_vpc_config: The resources_vpc_config of this DeleteClusterResponseCluster.
        :type resources_vpc_config: ClusterResourcesVpcConfig
        """

        self._resources_vpc_config = resources_vpc_config

    @property
    def kubernetes_network_config(self):
        """Gets the kubernetes_network_config of this DeleteClusterResponseCluster.


        :return: The kubernetes_network_config of this DeleteClusterResponseCluster.
        :rtype: ClusterKubernetesNetworkConfig
        """
        return self._kubernetes_network_config

    @kubernetes_network_config.setter
    def kubernetes_network_config(self, kubernetes_network_config):
        """Sets the kubernetes_network_config of this DeleteClusterResponseCluster.


        :param kubernetes_network_config: The kubernetes_network_config of this DeleteClusterResponseCluster.
        :type kubernetes_network_config: ClusterKubernetesNetworkConfig
        """

        self._kubernetes_network_config = kubernetes_network_config

    @property
    def logging(self):
        """Gets the logging of this DeleteClusterResponseCluster.


        :return: The logging of this DeleteClusterResponseCluster.
        :rtype: ClusterLogging
        """
        return self._logging

    @logging.setter
    def logging(self, logging):
        """Sets the logging of this DeleteClusterResponseCluster.


        :param logging: The logging of this DeleteClusterResponseCluster.
        :type logging: ClusterLogging
        """

        self._logging = logging

    @property
    def identity(self):
        """Gets the identity of this DeleteClusterResponseCluster.


        :return: The identity of this DeleteClusterResponseCluster.
        :rtype: ClusterIdentity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this DeleteClusterResponseCluster.


        :param identity: The identity of this DeleteClusterResponseCluster.
        :type identity: ClusterIdentity
        """

        self._identity = identity

    @property
    def status(self):
        """Gets the status of this DeleteClusterResponseCluster.


        :return: The status of this DeleteClusterResponseCluster.
        :rtype: ClusterStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeleteClusterResponseCluster.


        :param status: The status of this DeleteClusterResponseCluster.
        :type status: ClusterStatus
        """

        self._status = status

    @property
    def certificate_authority(self):
        """Gets the certificate_authority of this DeleteClusterResponseCluster.


        :return: The certificate_authority of this DeleteClusterResponseCluster.
        :rtype: ClusterCertificateAuthority
        """
        return self._certificate_authority

    @certificate_authority.setter
    def certificate_authority(self, certificate_authority):
        """Sets the certificate_authority of this DeleteClusterResponseCluster.


        :param certificate_authority: The certificate_authority of this DeleteClusterResponseCluster.
        :type certificate_authority: ClusterCertificateAuthority
        """

        self._certificate_authority = certificate_authority

    @property
    def client_request_token(self):
        """Gets the client_request_token of this DeleteClusterResponseCluster.


        :return: The client_request_token of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this DeleteClusterResponseCluster.


        :param client_request_token: The client_request_token of this DeleteClusterResponseCluster.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def platform_version(self):
        """Gets the platform_version of this DeleteClusterResponseCluster.


        :return: The platform_version of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._platform_version

    @platform_version.setter
    def platform_version(self, platform_version):
        """Sets the platform_version of this DeleteClusterResponseCluster.


        :param platform_version: The platform_version of this DeleteClusterResponseCluster.
        :type platform_version: str
        """

        self._platform_version = platform_version

    @property
    def tags(self):
        """Gets the tags of this DeleteClusterResponseCluster.


        :return: The tags of this DeleteClusterResponseCluster.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DeleteClusterResponseCluster.


        :param tags: The tags of this DeleteClusterResponseCluster.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def encryption_config(self):
        """Gets the encryption_config of this DeleteClusterResponseCluster.


        :return: The encryption_config of this DeleteClusterResponseCluster.
        :rtype: List
        """
        return self._encryption_config

    @encryption_config.setter
    def encryption_config(self, encryption_config):
        """Sets the encryption_config of this DeleteClusterResponseCluster.


        :param encryption_config: The encryption_config of this DeleteClusterResponseCluster.
        :type encryption_config: List
        """

        self._encryption_config = encryption_config

    @property
    def connector_config(self):
        """Gets the connector_config of this DeleteClusterResponseCluster.


        :return: The connector_config of this DeleteClusterResponseCluster.
        :rtype: ClusterConnectorConfig
        """
        return self._connector_config

    @connector_config.setter
    def connector_config(self, connector_config):
        """Sets the connector_config of this DeleteClusterResponseCluster.


        :param connector_config: The connector_config of this DeleteClusterResponseCluster.
        :type connector_config: ClusterConnectorConfig
        """

        self._connector_config = connector_config

    @property
    def id(self):
        """Gets the id of this DeleteClusterResponseCluster.


        :return: The id of this DeleteClusterResponseCluster.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeleteClusterResponseCluster.


        :param id: The id of this DeleteClusterResponseCluster.
        :type id: str
        """

        self._id = id

    @property
    def health(self):
        """Gets the health of this DeleteClusterResponseCluster.


        :return: The health of this DeleteClusterResponseCluster.
        :rtype: ClusterHealth
        """
        return self._health

    @health.setter
    def health(self, health):
        """Sets the health of this DeleteClusterResponseCluster.


        :param health: The health of this DeleteClusterResponseCluster.
        :type health: ClusterHealth
        """

        self._health = health

    @property
    def outpost_config(self):
        """Gets the outpost_config of this DeleteClusterResponseCluster.


        :return: The outpost_config of this DeleteClusterResponseCluster.
        :rtype: ClusterOutpostConfig
        """
        return self._outpost_config

    @outpost_config.setter
    def outpost_config(self, outpost_config):
        """Sets the outpost_config of this DeleteClusterResponseCluster.


        :param outpost_config: The outpost_config of this DeleteClusterResponseCluster.
        :type outpost_config: ClusterOutpostConfig
        """

        self._outpost_config = outpost_config
