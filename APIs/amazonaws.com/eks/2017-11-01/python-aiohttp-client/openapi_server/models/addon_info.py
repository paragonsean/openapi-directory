# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.addon_info_marketplace_information import AddonInfoMarketplaceInformation
from openapi_server import util


class AddonInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addon_name: str=None, type: str=None, addon_versions: List=None, publisher: str=None, owner: str=None, marketplace_information: AddonInfoMarketplaceInformation=None):
        """AddonInfo - a model defined in OpenAPI

        :param addon_name: The addon_name of this AddonInfo.
        :param type: The type of this AddonInfo.
        :param addon_versions: The addon_versions of this AddonInfo.
        :param publisher: The publisher of this AddonInfo.
        :param owner: The owner of this AddonInfo.
        :param marketplace_information: The marketplace_information of this AddonInfo.
        """
        self.openapi_types = {
            'addon_name': str,
            'type': str,
            'addon_versions': List,
            'publisher': str,
            'owner': str,
            'marketplace_information': AddonInfoMarketplaceInformation
        }

        self.attribute_map = {
            'addon_name': 'addonName',
            'type': 'type',
            'addon_versions': 'addonVersions',
            'publisher': 'publisher',
            'owner': 'owner',
            'marketplace_information': 'marketplaceInformation'
        }

        self._addon_name = addon_name
        self._type = type
        self._addon_versions = addon_versions
        self._publisher = publisher
        self._owner = owner
        self._marketplace_information = marketplace_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddonInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddonInfo of this AddonInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addon_name(self):
        """Gets the addon_name of this AddonInfo.


        :return: The addon_name of this AddonInfo.
        :rtype: str
        """
        return self._addon_name

    @addon_name.setter
    def addon_name(self, addon_name):
        """Sets the addon_name of this AddonInfo.


        :param addon_name: The addon_name of this AddonInfo.
        :type addon_name: str
        """

        self._addon_name = addon_name

    @property
    def type(self):
        """Gets the type of this AddonInfo.


        :return: The type of this AddonInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AddonInfo.


        :param type: The type of this AddonInfo.
        :type type: str
        """

        self._type = type

    @property
    def addon_versions(self):
        """Gets the addon_versions of this AddonInfo.


        :return: The addon_versions of this AddonInfo.
        :rtype: List
        """
        return self._addon_versions

    @addon_versions.setter
    def addon_versions(self, addon_versions):
        """Sets the addon_versions of this AddonInfo.


        :param addon_versions: The addon_versions of this AddonInfo.
        :type addon_versions: List
        """

        self._addon_versions = addon_versions

    @property
    def publisher(self):
        """Gets the publisher of this AddonInfo.


        :return: The publisher of this AddonInfo.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this AddonInfo.


        :param publisher: The publisher of this AddonInfo.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def owner(self):
        """Gets the owner of this AddonInfo.


        :return: The owner of this AddonInfo.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this AddonInfo.


        :param owner: The owner of this AddonInfo.
        :type owner: str
        """

        self._owner = owner

    @property
    def marketplace_information(self):
        """Gets the marketplace_information of this AddonInfo.


        :return: The marketplace_information of this AddonInfo.
        :rtype: AddonInfoMarketplaceInformation
        """
        return self._marketplace_information

    @marketplace_information.setter
    def marketplace_information(self, marketplace_information):
        """Sets the marketplace_information of this AddonInfo.


        :param marketplace_information: The marketplace_information of this AddonInfo.
        :type marketplace_information: AddonInfoMarketplaceInformation
        """

        self._marketplace_information = marketplace_information
