# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateNodegroupRequestScalingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min_size: int=None, max_size: int=None, desired_size: int=None):
        """CreateNodegroupRequestScalingConfig - a model defined in OpenAPI

        :param min_size: The min_size of this CreateNodegroupRequestScalingConfig.
        :param max_size: The max_size of this CreateNodegroupRequestScalingConfig.
        :param desired_size: The desired_size of this CreateNodegroupRequestScalingConfig.
        """
        self.openapi_types = {
            'min_size': int,
            'max_size': int,
            'desired_size': int
        }

        self.attribute_map = {
            'min_size': 'minSize',
            'max_size': 'maxSize',
            'desired_size': 'desiredSize'
        }

        self._min_size = min_size
        self._max_size = max_size
        self._desired_size = desired_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNodegroupRequestScalingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateNodegroupRequest_scalingConfig of this CreateNodegroupRequestScalingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min_size(self):
        """Gets the min_size of this CreateNodegroupRequestScalingConfig.


        :return: The min_size of this CreateNodegroupRequestScalingConfig.
        :rtype: int
        """
        return self._min_size

    @min_size.setter
    def min_size(self, min_size):
        """Sets the min_size of this CreateNodegroupRequestScalingConfig.


        :param min_size: The min_size of this CreateNodegroupRequestScalingConfig.
        :type min_size: int
        """

        self._min_size = min_size

    @property
    def max_size(self):
        """Gets the max_size of this CreateNodegroupRequestScalingConfig.


        :return: The max_size of this CreateNodegroupRequestScalingConfig.
        :rtype: int
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this CreateNodegroupRequestScalingConfig.


        :param max_size: The max_size of this CreateNodegroupRequestScalingConfig.
        :type max_size: int
        """

        self._max_size = max_size

    @property
    def desired_size(self):
        """Gets the desired_size of this CreateNodegroupRequestScalingConfig.


        :return: The desired_size of this CreateNodegroupRequestScalingConfig.
        :rtype: int
        """
        return self._desired_size

    @desired_size.setter
    def desired_size(self, desired_size):
        """Sets the desired_size of this CreateNodegroupRequestScalingConfig.


        :param desired_size: The desired_size of this CreateNodegroupRequestScalingConfig.
        :type desired_size: int
        """

        self._desired_size = desired_size
