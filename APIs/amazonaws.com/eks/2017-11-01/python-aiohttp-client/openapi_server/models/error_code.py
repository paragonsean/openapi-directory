# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SUBNETNOTFOUND = 'SubnetNotFound'
    SECURITYGROUPNOTFOUND = 'SecurityGroupNotFound'
    ENILIMITREACHED = 'EniLimitReached'
    IPNOTAVAILABLE = 'IpNotAvailable'
    ACCESSDENIED = 'AccessDenied'
    OPERATIONNOTPERMITTED = 'OperationNotPermitted'
    VPCIDNOTFOUND = 'VpcIdNotFound'
    UNKNOWN = 'Unknown'
    NODECREATIONFAILURE = 'NodeCreationFailure'
    PODEVICTIONFAILURE = 'PodEvictionFailure'
    INSUFFICIENTFREEADDRESSES = 'InsufficientFreeAddresses'
    CLUSTERUNREACHABLE = 'ClusterUnreachable'
    INSUFFICIENTNUMBEROFREPLICAS = 'InsufficientNumberOfReplicas'
    CONFIGURATIONCONFLICT = 'ConfigurationConflict'
    ADMISSIONREQUESTDENIED = 'AdmissionRequestDenied'
    UNSUPPORTEDADDONMODIFICATION = 'UnsupportedAddonModification'
    K8SRESOURCENOTFOUND = 'K8sResourceNotFound'

    def __init__(self):
        """ErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorCode of this ErrorCode.
        """
        return util.deserialize_model(dikt, cls)
