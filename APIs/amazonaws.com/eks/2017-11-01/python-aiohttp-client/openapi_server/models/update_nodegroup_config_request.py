# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_nodegroup_request_scaling_config import CreateNodegroupRequestScalingConfig
from openapi_server.models.create_nodegroup_request_update_config import CreateNodegroupRequestUpdateConfig
from openapi_server.models.update_nodegroup_config_request_labels import UpdateNodegroupConfigRequestLabels
from openapi_server.models.update_nodegroup_config_request_taints import UpdateNodegroupConfigRequestTaints
from openapi_server import util


class UpdateNodegroupConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: UpdateNodegroupConfigRequestLabels=None, taints: UpdateNodegroupConfigRequestTaints=None, scaling_config: CreateNodegroupRequestScalingConfig=None, update_config: CreateNodegroupRequestUpdateConfig=None, client_request_token: str=None):
        """UpdateNodegroupConfigRequest - a model defined in OpenAPI

        :param labels: The labels of this UpdateNodegroupConfigRequest.
        :param taints: The taints of this UpdateNodegroupConfigRequest.
        :param scaling_config: The scaling_config of this UpdateNodegroupConfigRequest.
        :param update_config: The update_config of this UpdateNodegroupConfigRequest.
        :param client_request_token: The client_request_token of this UpdateNodegroupConfigRequest.
        """
        self.openapi_types = {
            'labels': UpdateNodegroupConfigRequestLabels,
            'taints': UpdateNodegroupConfigRequestTaints,
            'scaling_config': CreateNodegroupRequestScalingConfig,
            'update_config': CreateNodegroupRequestUpdateConfig,
            'client_request_token': str
        }

        self.attribute_map = {
            'labels': 'labels',
            'taints': 'taints',
            'scaling_config': 'scalingConfig',
            'update_config': 'updateConfig',
            'client_request_token': 'clientRequestToken'
        }

        self._labels = labels
        self._taints = taints
        self._scaling_config = scaling_config
        self._update_config = update_config
        self._client_request_token = client_request_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNodegroupConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNodegroupConfig_request of this UpdateNodegroupConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this UpdateNodegroupConfigRequest.


        :return: The labels of this UpdateNodegroupConfigRequest.
        :rtype: UpdateNodegroupConfigRequestLabels
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this UpdateNodegroupConfigRequest.


        :param labels: The labels of this UpdateNodegroupConfigRequest.
        :type labels: UpdateNodegroupConfigRequestLabels
        """

        self._labels = labels

    @property
    def taints(self):
        """Gets the taints of this UpdateNodegroupConfigRequest.


        :return: The taints of this UpdateNodegroupConfigRequest.
        :rtype: UpdateNodegroupConfigRequestTaints
        """
        return self._taints

    @taints.setter
    def taints(self, taints):
        """Sets the taints of this UpdateNodegroupConfigRequest.


        :param taints: The taints of this UpdateNodegroupConfigRequest.
        :type taints: UpdateNodegroupConfigRequestTaints
        """

        self._taints = taints

    @property
    def scaling_config(self):
        """Gets the scaling_config of this UpdateNodegroupConfigRequest.


        :return: The scaling_config of this UpdateNodegroupConfigRequest.
        :rtype: CreateNodegroupRequestScalingConfig
        """
        return self._scaling_config

    @scaling_config.setter
    def scaling_config(self, scaling_config):
        """Sets the scaling_config of this UpdateNodegroupConfigRequest.


        :param scaling_config: The scaling_config of this UpdateNodegroupConfigRequest.
        :type scaling_config: CreateNodegroupRequestScalingConfig
        """

        self._scaling_config = scaling_config

    @property
    def update_config(self):
        """Gets the update_config of this UpdateNodegroupConfigRequest.


        :return: The update_config of this UpdateNodegroupConfigRequest.
        :rtype: CreateNodegroupRequestUpdateConfig
        """
        return self._update_config

    @update_config.setter
    def update_config(self, update_config):
        """Sets the update_config of this UpdateNodegroupConfigRequest.


        :param update_config: The update_config of this UpdateNodegroupConfigRequest.
        :type update_config: CreateNodegroupRequestUpdateConfig
        """

        self._update_config = update_config

    @property
    def client_request_token(self):
        """Gets the client_request_token of this UpdateNodegroupConfigRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :return: The client_request_token of this UpdateNodegroupConfigRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this UpdateNodegroupConfigRequest.

        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.

        :param client_request_token: The client_request_token of this UpdateNodegroupConfigRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token
