# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConnectorConfigProvider(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EKS_ANYWHERE = 'EKS_ANYWHERE'
    ANTHOS = 'ANTHOS'
    GKE = 'GKE'
    AKS = 'AKS'
    OPENSHIFT = 'OPENSHIFT'
    TANZU = 'TANZU'
    RANCHER = 'RANCHER'
    EC2 = 'EC2'
    OTHER = 'OTHER'

    def __init__(self):
        """ConnectorConfigProvider - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectorConfigProvider':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectorConfigProvider of this ConnectorConfigProvider.
        """
        return util.deserialize_model(dikt, cls)
