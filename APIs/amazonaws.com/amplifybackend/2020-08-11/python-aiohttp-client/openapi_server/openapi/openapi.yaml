openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: AWS Amplify Admin API
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AmplifyBackend
  version: 2020-08-11
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: amplifybackend
  x-aws-signingName: amplifybackend
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifybackend-2020-08-11.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/amplifybackend/
servers:
- description: The AmplifyBackend multi-region endpoint
  url: "http://amplifybackend.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmplifyBackend multi-region endpoint
  url: "https://amplifybackend.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)
  url: "http://amplifybackend.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AmplifyBackend endpoint for China (Beijing) and China (Ningxia)
  url: "https://amplifybackend.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /backend:
    post:
      description: This operation creates a backend for an Amplify app. Backends are
        automatically created at the time of app creation.
      operationId: create_backend
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackend_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api:
    post:
      description: Creates a new backend API resource.
      operationId: create_backend_api
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendAPI_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendAPIResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api/{backendEnvironmentName}:
    post:
      description: Updates an existing backend API resource.
      operationId: update_backend_api
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAPI_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackendAPIResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api/{backendEnvironmentName}/details:
    post:
      description: Gets the details for a backend API.
      operationId: get_backend_api
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAPI_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendAPIResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api/{backendEnvironmentName}/generateModels:
    post:
      description: Generates a model schema for an existing backend API resource.
      operationId: generate_backend_api_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateBackendAPIModelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api/{backendEnvironmentName}/getModels:
    post:
      description: Gets a model introspection schema for an existing backend API resource.
      operationId: get_backend_api_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendAPIModelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/api/{backendEnvironmentName}/remove:
    post:
      description: Deletes an existing backend API resource.
      operationId: delete_backend_api
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAPI_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackendAPIResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/auth:
    post:
      description: Creates a new backend authentication resource.
      operationId: create_backend_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/auth/{backendEnvironmentName}:
    post:
      description: Updates an existing backend authentication resource.
      operationId: update_backend_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackendAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/auth/{backendEnvironmentName}/details:
    post:
      description: Gets a backend auth details.
      operationId: get_backend_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/auth/{backendEnvironmentName}/import:
    post:
      description: Imports an existing backend authentication resource.
      operationId: import_backend_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBackendAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/auth/{backendEnvironmentName}/remove:
    post:
      description: Deletes an existing backend authentication resource.
      operationId: delete_backend_auth
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendAuth_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackendAuthResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/challenge:
    post:
      description: Generates a one-time challenge code to authenticate a user into
        your Amplify Admin UI.
      operationId: create_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /backend/{appId}/challenge/{sessionId}:
    get:
      description: Gets the challenge token based on the given appId and sessionId.
      operationId: get_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /backend/{appId}/challenge/{sessionId}/remove:
    post:
      description: Deletes the challenge token based on the given appId and sessionId.
      operationId: delete_token
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The session ID.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /backend/{appId}/config:
    post:
      description: Creates a config object for a backend.
      operationId: create_backend_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/config/remove:
    post:
      description: Removes the AWS resources required to access the Amplify Admin
        UI.
      operationId: remove_backend_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveBackendConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /backend/{appId}/config/update:
    post:
      description: Updates the AWS resources required to access the Amplify Admin
        UI.
      operationId: update_backend_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackendConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/details:
    post:
      description: Provides project-level details for your Amplify UI project.
      operationId: get_backend
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBackend_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/environments/{backendEnvironmentName}/clone:
    post:
      description: This operation clones an existing backend.
      operationId: clone_backend
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneBackend_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneBackendResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/environments/{backendEnvironmentName}/remove:
    post:
      description: Removes an existing environment from your Amplify project.
      operationId: delete_backend
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackendResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /backend/{appId}/job/{backendEnvironmentName}:
    post:
      description: Lists the jobs for the backend of an Amplify app.
      operationId: list_backend_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBackendJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackendJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/job/{backendEnvironmentName}/{jobId}:
    get:
      description: Returns information about a specific job.
      operationId: get_backend_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID for the job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Updates a specific job.
      operationId: update_backend_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID for the job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackendJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/remove:
    post:
      description: Removes all backend environments from your Amplify project.
      operationId: remove_all_backends
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAllBackends_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveAllBackendsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/storage:
    post:
      description: Creates a backend storage resource.
      operationId: create_backend_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/storage/{backendEnvironmentName}:
    post:
      description: Updates an existing backend storage resource.
      operationId: update_backend_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackendStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/storage/{backendEnvironmentName}/details:
    post:
      description: Gets details for a backend storage resource.
      operationId: get_backend_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBackendStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/storage/{backendEnvironmentName}/import:
    post:
      description: Imports an existing backend storage resource.
      operationId: import_backend_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportBackendStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportBackendStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /backend/{appId}/storage/{backendEnvironmentName}/remove:
    post:
      description: Removes the specified backend storage resource.
      operationId: delete_backend_storage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app ID.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment.
        explode: false
        in: path
        name: backendEnvironmentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackendStorage_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackendStorageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /s3Buckets:
    post:
      description: The list of S3 buckets in your account.
      operationId: list_s3_buckets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListS3Buckets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListS3BucketsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
          description: GatewayTimeoutException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CloneBackendResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CloneBackendResponse
      type: object
    NotFoundException: {}
    GatewayTimeoutException: {}
    TooManyRequestsException: {}
    BadRequestException: {}
    CreateBackendResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CreateBackendResponse
      type: object
    CreateBackendAPIResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CreateBackendAPIResponse
      type: object
    ListOfBackendAPIAuthType:
      items:
        $ref: '#/components/schemas/BackendAPIAuthType'
      type: array
    __string:
      title: __string
      type: string
    BackendAPIConflictResolution:
      description: Describes the conflict resolution configuration for your data model
        configured in your Amplify project.
      properties:
        ResolutionStrategy:
          allOf:
          - $ref: '#/components/schemas/ResolutionStrategy'
          - description: The strategy for conflict resolution.
            xml:
              name: resolutionStrategy
          title: ResolutionStrategy
      title: BackendAPIConflictResolution
      type: object
    BackendAPIAuthType:
      description: Describes the auth types for your configured data models.
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          - description: Describes the authentication mode.
            xml:
              name: mode
          title: Mode
        Settings:
          $ref: '#/components/schemas/BackendAPIAuthType_Settings'
      title: BackendAPIAuthType
      type: object
    CreateBackendAuthResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CreateBackendAuthResponse
      type: object
    AuthResources:
      enum:
      - USER_POOL_ONLY
      - IDENTITY_POOL_AND_USER_POOL
      title: AuthResources
      type: string
    CreateBackendAuthIdentityPoolConfig:
      description: "Describes authorization configurations for the auth resources,\
        \ configured as a part of your Amplify project."
      properties:
        IdentityPoolName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Name of the Amazon Cognito identity pool used for authorization.
            xml:
              name: identityPoolName
          title: IdentityPoolName
        UnauthenticatedLogin:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Set to true or false based on whether you want to enable
              guest authorization to your Amplify app.
            xml:
              name: unauthenticatedLogin
          title: UnauthenticatedLogin
      required:
      - IdentityPoolName
      - UnauthenticatedLogin
      title: CreateBackendAuthIdentityPoolConfig
      type: object
    Service:
      enum:
      - COGNITO
      title: Service
      type: string
    CreateBackendAuthUserPoolConfig:
      description: Describes the Amazon Cognito user pool configuration for the auth
        resource to be configured for your Amplify project.
      properties:
        ForgotPassword:
          $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig_ForgotPassword'
        Mfa:
          $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig_Mfa'
        OAuth:
          $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig_OAuth'
        PasswordPolicy:
          $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig_PasswordPolicy'
        RequiredSignUpAttributes:
          allOf:
          - $ref: '#/components/schemas/ListOfRequiredSignUpAttributesElement'
          - description: The required attributes to sign up new users in the user
              pool.
            xml:
              name: requiredSignUpAttributes
          title: RequiredSignUpAttributes
        SignInMethod:
          allOf:
          - $ref: '#/components/schemas/SignInMethod'
          - description: "Describes the sign-in methods that your Amplify app users\
              \ use to log in using the Amazon Cognito user pool, configured as a\
              \ part of your Amplify project."
            xml:
              name: signInMethod
          title: SignInMethod
        UserPoolName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito user pool name.
            xml:
              name: userPoolName
          title: UserPoolName
        VerificationMessage:
          $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig_VerificationMessage'
      required:
      - RequiredSignUpAttributes
      - SignInMethod
      - UserPoolName
      title: CreateBackendAuthUserPoolConfig
      type: object
    CreateBackendConfigResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CreateBackendConfigResponse
      type: object
    CreateBackendStorageResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: CreateBackendStorageResponse
      type: object
    BackendStoragePermissions:
      description: "Describes the read, write, and delete permissions users have against\
        \ your storage S3 bucket."
      properties:
        Authenticated:
          allOf:
          - $ref: '#/components/schemas/ListOfAuthenticatedElement'
          - description: "Lists all authenticated user read, write, and delete permissions\
              \ for your S3 bucket."
            xml:
              name: authenticated
          title: Authenticated
        UnAuthenticated:
          allOf:
          - $ref: '#/components/schemas/ListOfUnAuthenticatedElement'
          - description: "Lists all unauthenticated user read, write, and delete permissions\
              \ for your S3 bucket."
            xml:
              name: unAuthenticated
          title: UnAuthenticated
      required:
      - Authenticated
      title: BackendStoragePermissions
      type: object
    ServiceName:
      enum:
      - S3
      title: ServiceName
      type: string
    CreateTokenResponse:
      example:
        AppId: ""
        SessionId: ""
        Ttl: ""
        ChallengeCode: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        ChallengeCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: One-time challenge code for authenticating into the Amplify
              Admin UI.
            xml:
              name: challengeCode
          title: ChallengeCode
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique ID provided when creating a new challenge token.
            xml:
              name: sessionId
          title: SessionId
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The expiry time for the one-time generated token code.
            xml:
              name: ttl
          title: Ttl
      title: CreateTokenResponse
      type: object
    DeleteBackendResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: DeleteBackendResponse
      type: object
    DeleteBackendAPIResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: DeleteBackendAPIResponse
      type: object
    DeleteBackendAuthResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: DeleteBackendAuthResponse
      type: object
    DeleteBackendStorageResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: DeleteBackendStorageResponse
      type: object
    DeleteTokenResponse:
      example:
        IsSuccess: ""
      properties:
        IsSuccess:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates whether the request succeeded or failed.
            xml:
              name: isSuccess
          title: IsSuccess
      title: DeleteTokenResponse
      type: object
    GenerateBackendAPIModelsResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: GenerateBackendAPIModelsResponse
      type: object
    GetBackendResponse:
      example:
        AmplifyMetaConfig: ""
        BackendEnvironmentList: ""
        AppId: ""
        AmplifyFeatureFlags: ""
        BackendEnvironmentName: ""
        Error: ""
        AppName: ""
      properties:
        AmplifyFeatureFlags:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A stringified version of the cli.json file for your Amplify
              project.
            xml:
              name: amplifyFeatureFlags
          title: AmplifyFeatureFlags
        AmplifyMetaConfig:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A stringified version of the current configs for your Amplify
              project.
            xml:
              name: amplifyMetaConfig
          title: AmplifyMetaConfig
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        AppName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the app.
            xml:
              name: appName
          title: AppName
        BackendEnvironmentList:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: A list of backend environments in an array.
            xml:
              name: backendEnvironmentList
          title: BackendEnvironmentList
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request failed, this is the returned error."
            xml:
              name: error
          title: Error
      title: GetBackendResponse
      type: object
    GetBackendAPIResponse:
      example:
        AppId: ""
        ResourceName: ""
        BackendEnvironmentName: ""
        Error: ""
        ResourceConfig:
          TransformSchema: ""
          ApiName: ""
          Service: ""
          DefaultAuthType:
            Mode: ""
            Settings:
              CognitoUserPoolId: ""
              Description: ""
              OpenIDProviderName: ""
              OpenIDClientId: ""
              OpenIDIssueURL: ""
              OpenIDIatTTL: ""
              ExpirationTime: ""
              OpenIDAuthTTL: ""
          ConflictResolution:
            ResolutionStrategy: ""
          AdditionalAuthTypes: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        ResourceConfig:
          $ref: '#/components/schemas/GetBackendAPIResponse_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
          title: ResourceName
      title: GetBackendAPIResponse
      type: object
    GetBackendAPIModelsResponse:
      example:
        Status: ""
        ModelIntrospectionSchema: ""
        Models: ""
      properties:
        Models:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Stringified JSON of the datastore model.
            xml:
              name: models
          title: Models
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
        ModelIntrospectionSchema:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Stringified JSON of the model introspection schema for an
              existing backend API resource.
            xml:
              name: modelIntrospectionSchema
          title: ModelIntrospectionSchema
      title: GetBackendAPIModelsResponse
      type: object
    GetBackendAuthResponse:
      example:
        AppId: ""
        ResourceName: ""
        BackendEnvironmentName: ""
        Error: ""
        ResourceConfig:
          IdentityPoolConfigs:
            UnauthenticatedLogin: ""
            IdentityPoolName: ""
          AuthResources: ""
          UserPoolConfigs:
            PasswordPolicy:
              AdditionalConstraints: ""
              MinimumLength: ""
            RequiredSignUpAttributes: ""
            VerificationMessage:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            Mfa:
              MFAMode: ""
              Settings:
                SmsMessage: ""
                MfaTypes: ""
            SignInMethod: ""
            ForgotPassword:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            OAuth:
              RedirectSignOutURIs: ""
              SocialProviderSettings:
                Google:
                  ClientSecret: ""
                  ClientId: ""
                LoginWithAmazon:
                  ClientSecret: ""
                  ClientId: ""
                Facebook:
                  ClientSecret: ""
                  ClientId: ""
                SignInWithApple:
                  PrivateKey: ""
                  ClientId: ""
                  KeyId: ""
                  TeamId: ""
              RedirectSignInURIs: ""
              OAuthGrantType: ""
              DomainPrefix: ""
              OAuthScopes: ""
            UserPoolName: ""
          Service: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        ResourceConfig:
          $ref: '#/components/schemas/GetBackendAuthResponse_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
          title: ResourceName
      title: GetBackendAuthResponse
      type: object
    GetBackendJobResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        CreateTime: ""
        UpdateTime: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was created.
            xml:
              name: createTime
          title: CreateTime
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was last updated.
            xml:
              name: updateTime
          title: UpdateTime
      title: GetBackendJobResponse
      type: object
    GetBackendStorageResponse:
      example:
        AppId: ""
        ResourceName: ""
        BackendEnvironmentName: ""
        ResourceConfig:
          BucketName: ""
          ServiceName: ""
          Permissions:
            Authenticated: ""
            UnAuthenticated: ""
          Imported: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        ResourceConfig:
          $ref: '#/components/schemas/GetBackendStorageResponse_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the storage resource.
            xml:
              name: resourceName
          title: ResourceName
      title: GetBackendStorageResponse
      type: object
    GetTokenResponse:
      example:
        AppId: ""
        SessionId: ""
        Ttl: ""
        ChallengeCode: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        ChallengeCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The one-time challenge code for authenticating into the Amplify
              Admin UI.
            xml:
              name: challengeCode
          title: ChallengeCode
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique ID provided when creating a new challenge token.
            xml:
              name: sessionId
          title: SessionId
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The expiry time for the one-time generated token code.
            xml:
              name: ttl
          title: Ttl
      title: GetTokenResponse
      type: object
    ImportBackendAuthResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: ImportBackendAuthResponse
      type: object
    ImportBackendStorageResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: ImportBackendStorageResponse
      type: object
    ListBackendJobsResponse:
      example:
        NextToken: ""
        Jobs: ""
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/ListOfBackendJobRespObj'
          - description: An array of jobs and their properties.
            xml:
              name: jobs
          title: Jobs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The token for the next set of results.
            xml:
              name: nextToken
          title: NextToken
      title: ListBackendJobsResponse
      type: object
    ListS3BucketsResponse:
      example:
        NextToken: ""
        Buckets: ""
      properties:
        Buckets:
          allOf:
          - $ref: '#/components/schemas/ListOfS3BucketInfo'
          - description: The list of S3 buckets.
            xml:
              name: buckets
          title: Buckets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Reserved for future use.
            xml:
              name: nextToken
          title: NextToken
      title: ListS3BucketsResponse
      type: object
    RemoveAllBackendsResponse:
      example:
        Status: ""
        AppId: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: RemoveAllBackendsResponse
      type: object
    RemoveBackendConfigResponse:
      example:
        Error: ""
      properties:
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
      title: RemoveBackendConfigResponse
      type: object
    UpdateBackendAPIResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: UpdateBackendAPIResponse
      type: object
    UpdateBackendAuthResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: UpdateBackendAuthResponse
      type: object
    UpdateBackendAuthIdentityPoolConfig:
      description: "Describes the authorization configuration for the Amazon Cognito\
        \ identity pool, provisioned as a part of your auth resource in the Amplify\
        \ project."
      properties:
        UnauthenticatedLogin:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: A boolean value that can be set to allow or disallow guest-level
              authorization into your Amplify app.
            xml:
              name: unauthenticatedLogin
          title: UnauthenticatedLogin
      title: UpdateBackendAuthIdentityPoolConfig
      type: object
    UpdateBackendAuthUserPoolConfig:
      description: Describes the Amazon Cognito user pool configuration for the authorization
        resource to be configured for your Amplify project on an update.
      properties:
        ForgotPassword:
          $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig_ForgotPassword'
        Mfa:
          $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig_Mfa'
        OAuth:
          $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig_OAuth'
        PasswordPolicy:
          $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig_PasswordPolicy'
        VerificationMessage:
          $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig_VerificationMessage'
      title: UpdateBackendAuthUserPoolConfig
      type: object
    UpdateBackendConfigResponse:
      example:
        AppId: ""
        BackendManagerAppId: ""
        Error: ""
        LoginAuthConfig:
          AwsCognitoIdentityPoolId: ""
          AwsUserPoolsWebClientId: ""
          AwsUserPoolsId: ""
          AwsCognitoRegion: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendManagerAppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID for the backend manager.
            xml:
              name: backendManagerAppId
          title: BackendManagerAppId
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        LoginAuthConfig:
          $ref: '#/components/schemas/UpdateBackendConfigResponse_LoginAuthConfig'
      title: UpdateBackendConfigResponse
      type: object
    UpdateBackendJobResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        CreateTime: ""
        UpdateTime: ""
        Error: ""
        Operation: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was created.
            xml:
              name: createTime
          title: CreateTime
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was last updated.
            xml:
              name: updateTime
          title: UpdateTime
      title: UpdateBackendJobResponse
      type: object
    UpdateBackendStorageResponse:
      example:
        Status: ""
        AppId: ""
        BackendEnvironmentName: ""
        JobId: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
      title: UpdateBackendStorageResponse
      type: object
    __double:
      format: double
      type: number
    BackendAPIAppSyncAuthSettings:
      description: The authentication settings for accessing provisioned data models
        in your Amplify project.
      properties:
        CognitoUserPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Amazon Cognito user pool ID, if Amazon Cognito was used\
              \ as an authentication setting to access your data models."
            xml:
              name: cognitoUserPoolId
          title: CognitoUserPoolId
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The API key description for API_KEY, if it was used as an\
              \ authentication mechanism to access your data models."
            xml:
              name: description
          title: Description
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "The API key expiration time for API_KEY, if it was used\
              \ as an authentication mechanism to access your data models."
            xml:
              name: expirationTime
          title: ExpirationTime
        OpenIDAuthTTL:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The expiry time for the OpenID authentication mechanism.
            xml:
              name: openIDAuthTTL
          title: OpenIDAuthTTL
        OpenIDClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The clientID for openID, if openID was used as an authentication\
              \ setting to access your data models."
            xml:
              name: openIDClientId
          title: OpenIDClientId
        OpenIDIatTTL:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The expiry time for the OpenID authentication mechanism.
            xml:
              name: openIDIatTTL
          title: OpenIDIatTTL
        OpenIDIssueURL:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The openID issuer URL, if openID was used as an authentication\
              \ setting to access your data models."
            xml:
              name: openIDIssueURL
          title: OpenIDIssueURL
        OpenIDProviderName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The OpenID provider name, if OpenID was used as an authentication\
              \ mechanism to access your data models."
            xml:
              name: openIDProviderName
          title: OpenIDProviderName
      title: BackendAPIAppSyncAuthSettings
      type: object
    Mode:
      enum:
      - API_KEY
      - AWS_IAM
      - AMAZON_COGNITO_USER_POOLS
      - OPENID_CONNECT
      title: Mode
      type: string
    ResolutionStrategy:
      enum:
      - OPTIMISTIC_CONCURRENCY
      - LAMBDA
      - AUTOMERGE
      - NONE
      title: ResolutionStrategy
      type: string
    BackendAPIResourceConfig:
      description: "The resource config for the data model, configured as a part of\
        \ the Amplify project."
      properties:
        AdditionalAuthTypes:
          allOf:
          - $ref: '#/components/schemas/ListOfBackendAPIAuthType'
          - description: Additional authentication methods used to interact with your
              data models.
            xml:
              name: additionalAuthTypes
          title: AdditionalAuthTypes
        ApiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The API name used to interact with the data model, configured\
              \ as a part of your Amplify project."
            xml:
              name: apiName
          title: ApiName
        ConflictResolution:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig_ConflictResolution'
        DefaultAuthType:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig_DefaultAuthType'
        Service:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The service used to provision and interact with the data
              model.
            xml:
              name: service
          title: Service
        TransformSchema:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The definition of the data model in the annotated transform
              of the GraphQL schema.
            xml:
              name: transformSchema
          title: TransformSchema
      title: BackendAPIResourceConfig
      type: object
    BackendAuthAppleProviderConfig:
      description: Describes Apple social federation configurations for allowing your
        app users to sign in using OAuth.
      example:
        PrivateKey: ""
        ClientId: ""
        KeyId: ""
        TeamId: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Describes the client_id (also called Services ID) that comes
              from Apple.
            xml:
              name: client_id
          title: ClientId
        KeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Describes the key_id that comes from Apple.
            xml:
              name: key_id
          title: KeyId
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Describes the private_key that comes from Apple.
            xml:
              name: private_key
          title: PrivateKey
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Describes the team_id that comes from Apple.
            xml:
              name: team_id
          title: TeamId
      title: BackendAuthAppleProviderConfig
      type: object
    BackendAuthSocialProviderConfig:
      description: Describes third-party social federation configurations for allowing
        your app users to sign in using OAuth.
      example:
        ClientSecret: ""
        ClientId: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Describes the client_id, which can be obtained from the\
              \ third-party social federation provider."
            xml:
              name: client_id
          title: ClientId
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Describes the client_secret, which can be obtained from\
              \ third-party social federation providers."
            xml:
              name: client_secret
          title: ClientSecret
      title: BackendAuthSocialProviderConfig
      type: object
    BackendJobRespObj:
      description: The response object for this operation.
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
          title: AppId
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
          title: BackendEnvironmentName
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was created.
            xml:
              name: createTime
          title: CreateTime
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If the request fails, this error is returned."
            xml:
              name: error
          title: Error
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
          title: JobId
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the operation.
            xml:
              name: operation
          title: Operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The current status of the request.
            xml:
              name: status
          title: Status
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time when the job was last updated.
            xml:
              name: updateTime
          title: UpdateTime
      required:
      - AppId
      - BackendEnvironmentName
      title: BackendJobRespObj
      type: object
    ListOfAuthenticatedElement:
      items:
        $ref: '#/components/schemas/AuthenticatedElement'
      type: array
    ListOfUnAuthenticatedElement:
      items:
        $ref: '#/components/schemas/UnAuthenticatedElement'
      type: array
    CloneBackendRequest:
      description: The request body for CloneBackend.
      example:
        TargetEnvironmentName: ""
      properties:
        TargetEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the destination backend environment to be created.
            xml:
              name: targetEnvironmentName
      required:
      - TargetEnvironmentName
      title: CloneBackendRequest
      type: object
    CreateBackendAPIRequest:
      description: The request body for CreateBackendAPI.
      example:
        ResourceName: ""
        BackendEnvironmentName: ""
        ResourceConfig:
          TransformSchema: ""
          ApiName: ""
          Service: ""
          DefaultAuthType:
            Mode: ""
            Settings:
              CognitoUserPoolId: ""
              Description: ""
              OpenIDProviderName: ""
              OpenIDClientId: ""
              OpenIDIssueURL: ""
              OpenIDIatTTL: ""
              ExpirationTime: ""
              OpenIDAuthTTL: ""
          ConflictResolution:
            ResolutionStrategy: ""
          AdditionalAuthTypes: ""
      properties:
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
        ResourceConfig:
          $ref: '#/components/schemas/CreateBackendAPIRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      title: CreateBackendAPIRequest
      type: object
    DeliveryMethod:
      description: The type of verification message to send.
      enum:
      - EMAIL
      - SMS
      title: DeliveryMethod
      type: string
    EmailSettings:
      description: The configuration for the email sent when an app user forgets their
        password.
      properties:
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The contents of the email message.
            xml:
              name: emailMessage
          title: EmailMessage
        EmailSubject:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The contents of the subject line of the email message.
            xml:
              name: emailSubject
          title: EmailSubject
      title: EmailSettings
      type: object
    SmsSettings:
      description: SMS settings for authentication.
      properties:
        SmsMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The contents of the SMS message.
            xml:
              name: smsMessage
          title: SmsMessage
      title: SmsSettings
      type: object
    CreateBackendAuthForgotPasswordConfig:
      description: <b>(DEPRECATED)</b> Describes the forgot password policy for authenticating
        into the Amplify app.
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          - description: <b>(DEPRECATED)</b> Describes which mode to use (either SMS
              or email) to deliver messages to app users who want to recover their
              password.
            xml:
              name: deliveryMethod
          title: DeliveryMethod
        EmailSettings:
          $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig_EmailSettings'
        SmsSettings:
          $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig_SmsSettings'
      required:
      - DeliveryMethod
      title: CreateBackendAuthForgotPasswordConfig
      type: object
    __boolean:
      type: boolean
    MFAMode:
      enum:
      - "ON"
      - "OFF"
      - OPTIONAL
      title: MFAMode
      type: string
    Settings:
      description: The settings of your MFA configuration for the backend of your
        Amplify project.
      properties:
        MfaTypes:
          allOf:
          - $ref: '#/components/schemas/ListOfMfaTypesElement'
          - description: The supported MFA types.
            xml:
              name: mfaTypes
          title: MfaTypes
        SmsMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the SMS message.
            xml:
              name: smsMessage
          title: SmsMessage
      title: Settings
      type: object
    CreateBackendAuthMFAConfig:
      description: Describes whether to apply multi-factor authentication policies
        for your Amazon Cognito user pool configured as a part of your Amplify project.
      properties:
        MFAMode:
          allOf:
          - $ref: '#/components/schemas/MFAMode'
          - description: "Describes whether MFA should be [ON, OFF, or OPTIONAL] for\
              \ authentication in your Amplify project."
          title: MFAMode
        Settings:
          $ref: '#/components/schemas/CreateBackendAuthMFAConfig_Settings'
      required:
      - MFAMode
      title: CreateBackendAuthMFAConfig
      type: object
    OAuthGrantType:
      enum:
      - CODE
      - IMPLICIT
      title: OAuthGrantType
      type: string
    ListOfOAuthScopesElement:
      items:
        $ref: '#/components/schemas/OAuthScopesElement'
      type: array
    ListOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    SocialProviderSettings:
      description: The settings for using the social identity providers for access
        to your Amplify app.
      properties:
        Facebook:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        Google:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        LoginWithAmazon:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        SignInWithApple:
          $ref: '#/components/schemas/BackendAuthAppleProviderConfig'
      title: SocialProviderSettings
      type: object
    CreateBackendAuthOAuthConfig:
      description: Creates the OAuth configuration for your Amplify project.
      properties:
        DomainPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The domain prefix for your Amplify app.
            xml:
              name: domainPrefix
          title: DomainPrefix
        OAuthGrantType:
          allOf:
          - $ref: '#/components/schemas/OAuthGrantType'
          - description: The OAuth grant type that you use to allow app users to authenticate
              from your Amplify app.
            xml:
              name: oAuthGrantType
          title: OAuthGrantType
        OAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ListOfOAuthScopesElement'
          - description: List of OAuth-related flows used to allow your app users
              to authenticate from your Amplify app.
            xml:
              name: oAuthScopes
          title: OAuthScopes
        RedirectSignInURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: The redirected URI for signing in to your Amplify app.
            xml:
              name: redirectSignInURIs
          title: RedirectSignInURIs
        RedirectSignOutURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: Redirect URLs that OAuth uses when a user signs out of an
              Amplify app.
            xml:
              name: redirectSignOutURIs
          title: RedirectSignOutURIs
        SocialProviderSettings:
          $ref: '#/components/schemas/CreateBackendAuthOAuthConfig_SocialProviderSettings'
      required:
      - OAuthGrantType
      - OAuthScopes
      - RedirectSignInURIs
      - RedirectSignOutURIs
      title: CreateBackendAuthOAuthConfig
      type: object
    ListOfAdditionalConstraintsElement:
      items:
        $ref: '#/components/schemas/AdditionalConstraintsElement'
      type: array
    CreateBackendAuthPasswordPolicyConfig:
      description: The password policy configuration for the backend to your Amplify
        project.
      properties:
        AdditionalConstraints:
          allOf:
          - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'
          - description: Additional constraints for the password used to access the
              backend of your Amplify project.
            xml:
              name: additionalConstraints
          title: AdditionalConstraints
        MinimumLength:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: The minimum length of the password used to access the backend
              of your Amplify project.
            xml:
              name: minimumLength
          title: MinimumLength
      required:
      - MinimumLength
      title: CreateBackendAuthPasswordPolicyConfig
      type: object
    CreateBackendAuthResourceConfig:
      description: Defines the resource configuration when creating an auth resource
        in your Amplify project.
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          - description: Defines whether you want to configure only authentication
              or both authentication and authorization settings.
            xml:
              name: authResources
          title: AuthResources
        IdentityPoolConfigs:
          $ref: '#/components/schemas/CreateBackendAuth_request_resourceConfig_IdentityPoolConfigs'
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: service
          title: Service
        UserPoolConfigs:
          $ref: '#/components/schemas/CreateBackendAuth_request_resourceConfig_UserPoolConfigs'
      required:
      - AuthResources
      - Service
      - UserPoolConfigs
      title: CreateBackendAuthResourceConfig
      type: object
    CreateBackendAuthRequest:
      description: The request body for CreateBackendAuth.
      example:
        ResourceName: ""
        BackendEnvironmentName: ""
        ResourceConfig:
          IdentityPoolConfigs:
            UnauthenticatedLogin: ""
            IdentityPoolName: ""
          AuthResources: ""
          UserPoolConfigs:
            PasswordPolicy:
              AdditionalConstraints: ""
              MinimumLength: ""
            RequiredSignUpAttributes: ""
            VerificationMessage:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            Mfa:
              MFAMode: ""
              Settings:
                SmsMessage: ""
                MfaTypes: ""
            SignInMethod: ""
            ForgotPassword:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            OAuth:
              RedirectSignOutURIs: ""
              SocialProviderSettings:
                Google:
                  ClientSecret: ""
                  ClientId: ""
                LoginWithAmazon:
                  ClientSecret: ""
                  ClientId: ""
                Facebook:
                  ClientSecret: ""
                  ClientId: ""
                SignInWithApple:
                  PrivateKey: ""
                  ClientId: ""
                  KeyId: ""
                  TeamId: ""
              RedirectSignInURIs: ""
              OAuthGrantType: ""
              DomainPrefix: ""
              OAuthScopes: ""
            UserPoolName: ""
          Service: ""
      properties:
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
        ResourceConfig:
          $ref: '#/components/schemas/CreateBackendAuthRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      title: CreateBackendAuthRequest
      type: object
    ListOfRequiredSignUpAttributesElement:
      items:
        $ref: '#/components/schemas/RequiredSignUpAttributesElement'
      type: array
    SignInMethod:
      enum:
      - EMAIL
      - EMAIL_AND_PHONE_NUMBER
      - PHONE_NUMBER
      - USERNAME
      title: SignInMethod
      type: string
    CreateBackendAuthVerificationMessageConfig:
      description: Creates an email or SMS verification message for the auth resource
        configured for your Amplify project.
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          - description: The type of verification message to send.
            xml:
              name: deliveryMethod
          title: DeliveryMethod
        EmailSettings:
          $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig_EmailSettings'
        SmsSettings:
          $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig_SmsSettings'
      required:
      - DeliveryMethod
      title: CreateBackendAuthVerificationMessageConfig
      type: object
    CreateBackendConfigRequest:
      description: The request body for CreateBackendConfig.
      example:
        BackendManagerAppId: ""
      properties:
        BackendManagerAppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID for the backend manager.
            xml:
              name: backendManagerAppId
      title: CreateBackendConfigRequest
      type: object
    ResourceConfig:
      description: Defines the resource configuration for the data model in your Amplify
        project.
      properties: {}
      type: object
    CreateBackendRequest:
      description: The request body for CreateBackend.
      example:
        AppId: ""
        ResourceName: ""
        BackendEnvironmentName: ""
        ResourceConfig: ""
        AppName: ""
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The app ID.
            xml:
              name: appId
        AppName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the app.
            xml:
              name: appName
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/ResourceConfig'
          - description: The resource configuration for creating a backend.
            xml:
              name: resourceConfig
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the resource.
            xml:
              name: resourceName
      required:
      - AppId
      - AppName
      - BackendEnvironmentName
      title: CreateBackendRequest
      type: object
    CreateBackendStorageResourceConfig:
      description: The resource configuration for creating backend storage.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the S3 bucket.
            xml:
              name: bucketName
          title: BucketName
        Permissions:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig_Permissions'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
          title: ServiceName
      required:
      - Permissions
      - ServiceName
      title: CreateBackendStorageResourceConfig
      type: object
    CreateBackendStorageRequest:
      description: The request body for CreateBackendStorage.
      example:
        ResourceName: ""
        BackendEnvironmentName: ""
        ResourceConfig:
          BucketName: ""
          ServiceName: ""
          Permissions:
            Authenticated: ""
            UnAuthenticated: ""
      properties:
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
        ResourceConfig:
          $ref: '#/components/schemas/CreateBackendStorageRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the storage resource.
            xml:
              name: resourceName
      required:
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      title: CreateBackendStorageRequest
      type: object
    CreateTokenRequest:
      properties: {}
      title: CreateTokenRequest
      type: object
    DeleteBackendAPIRequest:
      description: The request body for DeleteBackendAPI.
      example:
        ResourceName: ""
        ResourceConfig:
          TransformSchema: ""
          ApiName: ""
          Service: ""
          DefaultAuthType:
            Mode: ""
            Settings:
              CognitoUserPoolId: ""
              Description: ""
              OpenIDProviderName: ""
              OpenIDClientId: ""
              OpenIDIssueURL: ""
              OpenIDIatTTL: ""
              ExpirationTime: ""
              OpenIDAuthTTL: ""
          ConflictResolution:
            ResolutionStrategy: ""
          AdditionalAuthTypes: ""
      properties:
        ResourceConfig:
          $ref: '#/components/schemas/DeleteBackendAPIRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: DeleteBackendAPIRequest
      type: object
    DeleteBackendAuthRequest:
      description: The request body for DeleteBackendAuth.
      example:
        ResourceName: ""
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: DeleteBackendAuthRequest
      type: object
    DeleteBackendRequest:
      properties: {}
      title: DeleteBackendRequest
      type: object
    DeleteBackendStorageRequest:
      description: The request body for DeleteBackendStorage.
      example:
        ServiceName: ""
        ResourceName: ""
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the storage resource.
            xml:
              name: resourceName
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
      required:
      - ResourceName
      - ServiceName
      title: DeleteBackendStorageRequest
      type: object
    DeleteTokenRequest:
      properties: {}
      title: DeleteTokenRequest
      type: object
    GenerateBackendAPIModelsRequest:
      description: The request body for GenerateBackendAPIModels.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: GenerateBackendAPIModelsRequest
      type: object
    GetBackendAPIModelsRequest:
      description: The request body for GetBackendAPIModels.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: GetBackendAPIModelsRequest
      type: object
    Status:
      enum:
      - LATEST
      - STALE
      title: Status
      type: string
    GetBackendAPIRequest:
      description: The request body for GetBackendAPI.
      properties:
        ResourceConfig:
          $ref: '#/components/schemas/DeleteBackendAPIRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: GetBackendAPIRequest
      type: object
    GetBackendAuthRequest:
      description: The request body for GetBackendAuth.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: GetBackendAuthRequest
      type: object
    GetBackendJobRequest:
      properties: {}
      title: GetBackendJobRequest
      type: object
    GetBackendRequest:
      description: The request body for GetBackend.
      example:
        BackendEnvironmentName: ""
      properties:
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the backend environment.
            xml:
              name: backendEnvironmentName
      title: GetBackendRequest
      type: object
    GetBackendStorageRequest:
      description: The request body for GetBackendStorage.
      example:
        ResourceName: ""
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the storage resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: GetBackendStorageRequest
      type: object
    GetBackendStorageResourceConfig:
      description: The details for a backend storage resource.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the S3 bucket.
            xml:
              name: bucketName
          title: BucketName
        Imported:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Returns True if the storage resource has been imported.
            xml:
              name: imported
          title: Imported
        Permissions:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig_Permissions'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
          title: ServiceName
      required:
      - Imported
      - ServiceName
      title: GetBackendStorageResourceConfig
      type: object
    GetTokenRequest:
      properties: {}
      title: GetTokenRequest
      type: object
    ImportBackendAuthRequest:
      description: The request body for ImportBackendAuth.
      example:
        NativeClientId: ""
        UserPoolId: ""
        IdentityPoolId: ""
        WebClientId: ""
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Amazon Cognito identity pool.
            xml:
              name: identityPoolId
        NativeClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Amazon Cognito native client.
            xml:
              name: nativeClientId
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Amazon Cognito user pool.
            xml:
              name: userPoolId
        WebClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Amazon Cognito web client.
            xml:
              name: webClientId
      required:
      - NativeClientId
      - UserPoolId
      - WebClientId
      title: ImportBackendAuthRequest
      type: object
    ImportBackendStorageRequest:
      description: The request body for ImportBackendStorage.
      example:
        BucketName: ""
        ServiceName: ""
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the S3 bucket.
            xml:
              name: bucketName
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
      required:
      - ServiceName
      title: ImportBackendStorageRequest
      type: object
    __integerMin1Max25:
      maximum: 25
      minimum: 1
      type: integer
    ListBackendJobsRequest:
      description: The request body for ListBackendJobs.
      example:
        Status: ""
        NextToken: ""
        MaxResults: ""
        Operation: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID for the job.
            xml:
              name: jobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max25'
          - description: The maximum number of results that you want in the response.
            xml:
              name: maxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The token for the next set of results.
            xml:
              name: nextToken
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Filters the list of response objects to include only those
              with the specified operation name.
            xml:
              name: operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Filters the list of response objects to include only those
              with the specified status.
            xml:
              name: status
      title: ListBackendJobsRequest
      type: object
    ListOfBackendJobRespObj:
      items:
        $ref: '#/components/schemas/BackendJobRespObj'
      type: array
    ListS3BucketsRequest:
      description: The request body for S3Buckets.
      example:
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Reserved for future use.
            xml:
              name: nextToken
      title: ListS3BucketsRequest
      type: object
    ListOfS3BucketInfo:
      items:
        $ref: '#/components/schemas/S3BucketInfo'
      type: array
    LoginAuthConfigReqObj:
      description: The request object for this operation.
      properties:
        AwsCognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito identity pool ID used for the Amplify
              Admin UI login authorization.
            xml:
              name: aws_cognito_identity_pool_id
          title: AwsCognitoIdentityPoolId
        AwsCognitoRegion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Region for the Amplify Admin UI login.
            xml:
              name: aws_cognito_region
          title: AwsCognitoRegion
        AwsUserPoolsId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito user pool ID used for Amplify Admin UI
              login authentication.
            xml:
              name: aws_user_pools_id
          title: AwsUserPoolsId
        AwsUserPoolsWebClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The web client ID for the Amazon Cognito user pools.
            xml:
              name: aws_user_pools_web_client_id
          title: AwsUserPoolsWebClientId
      title: LoginAuthConfigReqObj
      type: object
    RemoveAllBackendsRequest:
      description: The request body for RemoveAllBackends.
      example:
        CleanAmplifyApp: ""
      properties:
        CleanAmplifyApp:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Cleans up the Amplify Console app if this value is set to
              true.
            xml:
              name: cleanAmplifyApp
      title: RemoveAllBackendsRequest
      type: object
    RemoveBackendConfigRequest:
      properties: {}
      title: RemoveBackendConfigRequest
      type: object
    S3BucketInfo:
      description: Describes the metadata of the S3 bucket.
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The creation date of the S3 bucket.
            xml:
              name: creationDate
          title: CreationDate
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the S3 bucket.
            xml:
              name: name
          title: Name
      title: S3BucketInfo
      type: object
    ListOfMfaTypesElement:
      items:
        $ref: '#/components/schemas/MfaTypesElement'
      type: array
    UpdateBackendAPIRequest:
      description: The request body for UpdateBackendAPI.
      properties:
        ResourceConfig:
          $ref: '#/components/schemas/DeleteBackendAPIRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceName
      title: UpdateBackendAPIRequest
      type: object
    UpdateBackendAuthForgotPasswordConfig:
      description: <b>(DEPRECATED)</b> Describes the forgot password policy for authenticating
        into the Amplify app.
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          - description: <b>(DEPRECATED)</b> Describes which mode to use (either SMS
              or email) to deliver messages to app users that want to recover their
              password.
            xml:
              name: deliveryMethod
          title: DeliveryMethod
        EmailSettings:
          $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig_EmailSettings'
        SmsSettings:
          $ref: '#/components/schemas/UpdateBackendAuthForgotPasswordConfig_SmsSettings'
      title: UpdateBackendAuthForgotPasswordConfig
      type: object
    UpdateBackendAuthMFAConfig:
      description: Updates the multi-factor authentication (MFA) configuration for
        the backend of your Amplify project.
      properties:
        MFAMode:
          allOf:
          - $ref: '#/components/schemas/MFAMode'
          - description: The MFA mode for the backend of your Amplify project.
          title: MFAMode
        Settings:
          $ref: '#/components/schemas/UpdateBackendAuthMFAConfig_Settings'
      title: UpdateBackendAuthMFAConfig
      type: object
    UpdateBackendAuthOAuthConfig:
      description: The OAuth configurations for authenticating users into your Amplify
        app.
      properties:
        DomainPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito domain prefix used to create a hosted
              UI for authentication.
            xml:
              name: domainPrefix
          title: DomainPrefix
        OAuthGrantType:
          allOf:
          - $ref: '#/components/schemas/OAuthGrantType'
          - description: The OAuth grant type to allow app users to authenticate from
              your Amplify app.
            xml:
              name: oAuthGrantType
          title: OAuthGrantType
        OAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ListOfOAuthScopesElement'
          - description: The list of OAuth-related flows that can allow users to authenticate
              from your Amplify app.
            xml:
              name: oAuthScopes
          title: OAuthScopes
        RedirectSignInURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: Redirect URLs that OAuth uses when a user signs in to an
              Amplify app.
            xml:
              name: redirectSignInURIs
          title: RedirectSignInURIs
        RedirectSignOutURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: Redirect URLs that OAuth uses when a user signs out of an
              Amplify app.
            xml:
              name: redirectSignOutURIs
          title: RedirectSignOutURIs
        SocialProviderSettings:
          $ref: '#/components/schemas/UpdateBackendAuthOAuthConfig_SocialProviderSettings'
      title: UpdateBackendAuthOAuthConfig
      type: object
    UpdateBackendAuthPasswordPolicyConfig:
      description: Describes the password policy for your Amazon Cognito user pool
        configured as a part of your Amplify project.
      properties:
        AdditionalConstraints:
          allOf:
          - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'
          - description: "Describes additional constraints on password requirements\
              \ to sign in to the auth resource, configured as a part of your Amplify\
              \ project."
            xml:
              name: additionalConstraints
          title: AdditionalConstraints
        MinimumLength:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "Describes the minimum length of the password required to\
              \ sign in to the auth resource, configured as a part of your Amplify\
              \ project."
            xml:
              name: minimumLength
          title: MinimumLength
      title: UpdateBackendAuthPasswordPolicyConfig
      type: object
    UpdateBackendAuthResourceConfig:
      description: Defines the resource configuration when updating an authentication
        resource in your Amplify project.
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: authResources
          title: AuthResources
        IdentityPoolConfigs:
          $ref: '#/components/schemas/UpdateBackendAuth_request_resourceConfig_IdentityPoolConfigs'
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: service
          title: Service
        UserPoolConfigs:
          $ref: '#/components/schemas/UpdateBackendAuth_request_resourceConfig_UserPoolConfigs'
      required:
      - AuthResources
      - Service
      - UserPoolConfigs
      title: UpdateBackendAuthResourceConfig
      type: object
    UpdateBackendAuthRequest:
      description: The request body for UpdateBackendAuth.
      example:
        ResourceName: ""
        ResourceConfig:
          IdentityPoolConfigs:
            UnauthenticatedLogin: ""
          AuthResources: ""
          UserPoolConfigs:
            PasswordPolicy:
              AdditionalConstraints: ""
              MinimumLength: ""
            VerificationMessage:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            Mfa:
              MFAMode: ""
              Settings:
                SmsMessage: ""
                MfaTypes: ""
            ForgotPassword:
              DeliveryMethod: ""
              EmailSettings:
                EmailMessage: ""
                EmailSubject: ""
              SmsSettings:
                SmsMessage: ""
            OAuth:
              RedirectSignOutURIs: ""
              SocialProviderSettings:
                Google:
                  ClientSecret: ""
                  ClientId: ""
                LoginWithAmazon:
                  ClientSecret: ""
                  ClientId: ""
                Facebook:
                  ClientSecret: ""
                  ClientId: ""
                SignInWithApple:
                  PrivateKey: ""
                  ClientId: ""
                  KeyId: ""
                  TeamId: ""
              RedirectSignInURIs: ""
              OAuthGrantType: ""
              DomainPrefix: ""
              OAuthScopes: ""
          Service: ""
      properties:
        ResourceConfig:
          $ref: '#/components/schemas/UpdateBackendAuthRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of this resource.
            xml:
              name: resourceName
      required:
      - ResourceConfig
      - ResourceName
      title: UpdateBackendAuthRequest
      type: object
    UpdateBackendAuthVerificationMessageConfig:
      description: Updates the configuration of the email or SMS message for the auth
        resource configured for your Amplify project.
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          - description: The type of verification message to send.
            xml:
              name: deliveryMethod
          title: DeliveryMethod
        EmailSettings:
          $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig_EmailSettings'
        SmsSettings:
          $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig_SmsSettings'
      required:
      - DeliveryMethod
      title: UpdateBackendAuthVerificationMessageConfig
      type: object
    UpdateBackendConfigRequest:
      description: The request body for UpdateBackendConfig.
      example:
        LoginAuthConfig:
          AwsCognitoIdentityPoolId: ""
          AwsUserPoolsWebClientId: ""
          AwsUserPoolsId: ""
          AwsCognitoRegion: ""
      properties:
        LoginAuthConfig:
          $ref: '#/components/schemas/UpdateBackendConfigRequest_LoginAuthConfig'
      title: UpdateBackendConfigRequest
      type: object
    UpdateBackendJobRequest:
      description: The request body for GetBackendJob.
      example:
        Status: ""
        Operation: ""
      properties:
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Filters the list of response objects to include only those
              with the specified operation name.
            xml:
              name: operation
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Filters the list of response objects to include only those
              with the specified status.
            xml:
              name: status
      title: UpdateBackendJobRequest
      type: object
    UpdateBackendStorageResourceConfig:
      description: The resource configuration for updating backend storage.
      properties:
        Permissions:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig_Permissions'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
          title: ServiceName
      required:
      - Permissions
      - ServiceName
      title: UpdateBackendStorageResourceConfig
      type: object
    UpdateBackendStorageRequest:
      description: The request body for UpdateBackendStorage.
      example:
        ResourceName: ""
        ResourceConfig:
          ServiceName: ""
          Permissions:
            Authenticated: ""
            UnAuthenticated: ""
      properties:
        ResourceConfig:
          $ref: '#/components/schemas/UpdateBackendStorageRequest_ResourceConfig'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the storage resource.
            xml:
              name: resourceName
      required:
      - ResourceConfig
      - ResourceName
      title: UpdateBackendStorageRequest
      type: object
    AdditionalConstraintsElement:
      enum:
      - REQUIRE_DIGIT
      - REQUIRE_LOWERCASE
      - REQUIRE_SYMBOL
      - REQUIRE_UPPERCASE
      title: AdditionalConstraintsElement
      type: string
    AuthenticatedElement:
      enum:
      - READ
      - CREATE_AND_UPDATE
      - DELETE
      title: AuthenticatedElement
      type: string
    MfaTypesElement:
      enum:
      - SMS
      - TOTP
      title: MfaTypesElement
      type: string
    OAuthScopesElement:
      enum:
      - PHONE
      - EMAIL
      - OPENID
      - PROFILE
      - AWS_COGNITO_SIGNIN_USER_ADMIN
      title: OAuthScopesElement
      type: string
    RequiredSignUpAttributesElement:
      enum:
      - ADDRESS
      - BIRTHDATE
      - EMAIL
      - FAMILY_NAME
      - GENDER
      - GIVEN_NAME
      - LOCALE
      - MIDDLE_NAME
      - NAME
      - NICKNAME
      - PHONE_NUMBER
      - PICTURE
      - PREFERRED_USERNAME
      - PROFILE
      - UPDATED_AT
      - WEBSITE
      - ZONE_INFO
      title: RequiredSignUpAttributesElement
      type: string
    UnAuthenticatedElement:
      enum:
      - READ
      - CREATE_AND_UPDATE
      - DELETE
      title: UnAuthenticatedElement
      type: string
    CloneBackend_request:
      properties:
        targetEnvironmentName:
          description: The name of the destination backend environment to be created.
          title: targetEnvironmentName
          type: string
      required:
      - targetEnvironmentName
      title: CloneBackend_request
      type: object
    CreateBackend_request:
      properties:
        appId:
          description: The app ID.
          title: appId
          type: string
        appName:
          description: The name of the app.
          title: appName
          type: string
        backendEnvironmentName:
          description: The name of the backend environment.
          title: backendEnvironmentName
          type: string
        resourceConfig:
          description: Defines the resource configuration for the data model in your
            Amplify project.
          properties: {}
          title: resourceConfig
          type: object
        resourceName:
          description: The name of the resource.
          title: resourceName
          type: string
      required:
      - appId
      - appName
      - backendEnvironmentName
      title: CreateBackend_request
      type: object
    CreateBackendAPI_request_resourceConfig_ConflictResolution:
      allOf:
      - $ref: '#/components/schemas/BackendAPIConflictResolution'
      - description: The conflict resolution strategy for your data stored in the
          data models.
        xml:
          name: conflictResolution
      example:
        ResolutionStrategy: ""
      title: CreateBackendAPI_request_resourceConfig_ConflictResolution
    CreateBackendAPI_request_resourceConfig_DefaultAuthType:
      allOf:
      - $ref: '#/components/schemas/BackendAPIAuthType'
      - description: The default authentication type for interacting with the configured
          data models in your Amplify project.
        xml:
          name: defaultAuthType
      example:
        Mode: ""
        Settings:
          CognitoUserPoolId: ""
          Description: ""
          OpenIDProviderName: ""
          OpenIDClientId: ""
          OpenIDIssueURL: ""
          OpenIDIatTTL: ""
          ExpirationTime: ""
          OpenIDAuthTTL: ""
      title: CreateBackendAPI_request_resourceConfig_DefaultAuthType
    CreateBackendAPI_request_resourceConfig:
      description: "The resource config for the data model, configured as a part of\
        \ the Amplify project."
      properties:
        AdditionalAuthTypes:
          allOf:
          - $ref: '#/components/schemas/ListOfBackendAPIAuthType'
          - description: Additional authentication methods used to interact with your
              data models.
            xml:
              name: additionalAuthTypes
          title: AdditionalAuthTypes
        ApiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The API name used to interact with the data model, configured\
              \ as a part of your Amplify project."
            xml:
              name: apiName
          title: ApiName
        ConflictResolution:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig_ConflictResolution'
        DefaultAuthType:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig_DefaultAuthType'
        Service:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The service used to provision and interact with the data
              model.
            xml:
              name: service
          title: Service
        TransformSchema:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The definition of the data model in the annotated transform
              of the GraphQL schema.
            xml:
              name: transformSchema
          title: TransformSchema
      title: CreateBackendAPI_request_resourceConfig
      type: object
    CreateBackendAPI_request:
      properties:
        backendEnvironmentName:
          description: The name of the backend environment.
          title: backendEnvironmentName
          type: string
        resourceConfig:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig'
        resourceName:
          description: The name of this resource.
          title: resourceName
          type: string
      required:
      - backendEnvironmentName
      - resourceConfig
      - resourceName
      title: CreateBackendAPI_request
      type: object
    CreateBackendAuth_request_resourceConfig_IdentityPoolConfigs:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthIdentityPoolConfig'
      - description: "Describes the authorization configuration for the Amazon Cognito\
          \ identity pool, provisioned as a part of your auth resource in the Amplify\
          \ project."
        xml:
          name: identityPoolConfigs
      example:
        UnauthenticatedLogin: ""
        IdentityPoolName: ""
      title: CreateBackendAuth_request_resourceConfig_IdentityPoolConfigs
    CreateBackendAuth_request_resourceConfig_UserPoolConfigs:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig'
      - description: "Describes authentication configuration for the Amazon Cognito\
          \ user pool, provisioned as a part of your auth resource in the Amplify\
          \ project."
        xml:
          name: userPoolConfigs
      example:
        PasswordPolicy:
          AdditionalConstraints: ""
          MinimumLength: ""
        RequiredSignUpAttributes: ""
        VerificationMessage:
          DeliveryMethod: ""
          EmailSettings:
            EmailMessage: ""
            EmailSubject: ""
          SmsSettings:
            SmsMessage: ""
        Mfa:
          MFAMode: ""
          Settings:
            SmsMessage: ""
            MfaTypes: ""
        SignInMethod: ""
        ForgotPassword:
          DeliveryMethod: ""
          EmailSettings:
            EmailMessage: ""
            EmailSubject: ""
          SmsSettings:
            SmsMessage: ""
        OAuth:
          RedirectSignOutURIs: ""
          SocialProviderSettings:
            Google:
              ClientSecret: ""
              ClientId: ""
            LoginWithAmazon:
              ClientSecret: ""
              ClientId: ""
            Facebook:
              ClientSecret: ""
              ClientId: ""
            SignInWithApple:
              PrivateKey: ""
              ClientId: ""
              KeyId: ""
              TeamId: ""
          RedirectSignInURIs: ""
          OAuthGrantType: ""
          DomainPrefix: ""
          OAuthScopes: ""
        UserPoolName: ""
      title: CreateBackendAuth_request_resourceConfig_UserPoolConfigs
    CreateBackendAuth_request_resourceConfig:
      description: Defines the resource configuration when creating an auth resource
        in your Amplify project.
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          - description: Defines whether you want to configure only authentication
              or both authentication and authorization settings.
            xml:
              name: authResources
          title: AuthResources
        IdentityPoolConfigs:
          $ref: '#/components/schemas/CreateBackendAuth_request_resourceConfig_IdentityPoolConfigs'
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: service
          title: Service
        UserPoolConfigs:
          $ref: '#/components/schemas/CreateBackendAuth_request_resourceConfig_UserPoolConfigs'
      title: CreateBackendAuth_request_resourceConfig
      type: object
    CreateBackendAuth_request:
      properties:
        backendEnvironmentName:
          description: The name of the backend environment.
          title: backendEnvironmentName
          type: string
        resourceConfig:
          $ref: '#/components/schemas/CreateBackendAuth_request_resourceConfig'
        resourceName:
          description: The name of this resource.
          title: resourceName
          type: string
      required:
      - backendEnvironmentName
      - resourceConfig
      - resourceName
      title: CreateBackendAuth_request
      type: object
    CreateBackendConfig_request:
      properties:
        backendManagerAppId:
          description: The app ID for the backend manager.
          title: backendManagerAppId
          type: string
      title: CreateBackendConfig_request
      type: object
    CreateBackendStorage_request_resourceConfig_Permissions:
      allOf:
      - $ref: '#/components/schemas/BackendStoragePermissions'
      - description: The authorization configuration for the storage S3 bucket.
        xml:
          name: permissions
      example:
        Authenticated: ""
        UnAuthenticated: ""
      title: CreateBackendStorage_request_resourceConfig_Permissions
    CreateBackendStorage_request_resourceConfig:
      description: The resource configuration for creating backend storage.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the S3 bucket.
            xml:
              name: bucketName
          title: BucketName
        Permissions:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig_Permissions'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
          title: ServiceName
      title: CreateBackendStorage_request_resourceConfig
      type: object
    CreateBackendStorage_request:
      properties:
        backendEnvironmentName:
          description: The name of the backend environment.
          title: backendEnvironmentName
          type: string
        resourceConfig:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig'
        resourceName:
          description: The name of the storage resource.
          title: resourceName
          type: string
      required:
      - backendEnvironmentName
      - resourceConfig
      - resourceName
      title: CreateBackendStorage_request
      type: object
    DeleteBackendAPI_request:
      properties:
        resourceConfig:
          $ref: '#/components/schemas/CreateBackendAPI_request_resourceConfig'
        resourceName:
          description: The name of this resource.
          title: resourceName
          type: string
      required:
      - resourceName
      title: DeleteBackendAPI_request
      type: object
    DeleteBackendAuth_request:
      properties:
        resourceName:
          description: The name of this resource.
          title: resourceName
          type: string
      required:
      - resourceName
      title: DeleteBackendAuth_request
      type: object
    DeleteBackendStorage_request:
      properties:
        resourceName:
          description: The name of the storage resource.
          title: resourceName
          type: string
        serviceName:
          description: The name of the storage service.
          enum:
          - S3
          title: serviceName
          type: string
      required:
      - resourceName
      - serviceName
      title: DeleteBackendStorage_request
      type: object
    GetBackend_request:
      properties:
        backendEnvironmentName:
          description: The name of the backend environment.
          title: backendEnvironmentName
          type: string
      title: GetBackend_request
      type: object
    UpdateBackendJob_request:
      properties:
        operation:
          description: Filters the list of response objects to include only those
            with the specified operation name.
          title: operation
          type: string
        status:
          description: Filters the list of response objects to include only those
            with the specified status.
          title: status
          type: string
      title: UpdateBackendJob_request
      type: object
    GetBackendStorage_request:
      properties:
        resourceName:
          description: The name of the storage resource.
          title: resourceName
          type: string
      required:
      - resourceName
      title: GetBackendStorage_request
      type: object
    ImportBackendAuth_request:
      properties:
        identityPoolId:
          description: The ID of the Amazon Cognito identity pool.
          title: identityPoolId
          type: string
        nativeClientId:
          description: The ID of the Amazon Cognito native client.
          title: nativeClientId
          type: string
        userPoolId:
          description: The ID of the Amazon Cognito user pool.
          title: userPoolId
          type: string
        webClientId:
          description: The ID of the Amazon Cognito web client.
          title: webClientId
          type: string
      required:
      - nativeClientId
      - userPoolId
      - webClientId
      title: ImportBackendAuth_request
      type: object
    ImportBackendStorage_request:
      properties:
        bucketName:
          description: The name of the S3 bucket.
          title: bucketName
          type: string
        serviceName:
          description: The name of the storage service.
          enum:
          - S3
          title: serviceName
          type: string
      required:
      - serviceName
      title: ImportBackendStorage_request
      type: object
    ListBackendJobs_request:
      properties:
        jobId:
          description: The ID for the job.
          title: jobId
          type: string
        maxResults:
          description: The maximum number of results that you want in the response.
          maximum: 25
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: The token for the next set of results.
          title: nextToken
          type: string
        operation:
          description: Filters the list of response objects to include only those
            with the specified operation name.
          title: operation
          type: string
        status:
          description: Filters the list of response objects to include only those
            with the specified status.
          title: status
          type: string
      title: ListBackendJobs_request
      type: object
    ListS3Buckets_request:
      properties:
        nextToken:
          description: Reserved for future use.
          title: nextToken
          type: string
      title: ListS3Buckets_request
      type: object
    RemoveAllBackends_request:
      properties:
        cleanAmplifyApp:
          description: Cleans up the Amplify Console app if this value is set to true.
          title: cleanAmplifyApp
          type: boolean
      title: RemoveAllBackends_request
      type: object
    UpdateBackendAuth_request_resourceConfig_IdentityPoolConfigs:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthIdentityPoolConfig'
      - description: "Describes the authorization configuration for the Amazon Cognito\
          \ identity pool, provisioned as a part of your auth resource in the Amplify\
          \ project."
        xml:
          name: identityPoolConfigs
      example:
        UnauthenticatedLogin: ""
      title: UpdateBackendAuth_request_resourceConfig_IdentityPoolConfigs
    UpdateBackendAuth_request_resourceConfig_UserPoolConfigs:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig'
      - description: "Describes the authentication configuration for the Amazon Cognito\
          \ user pool, provisioned as a part of your auth resource in the Amplify\
          \ project."
        xml:
          name: userPoolConfigs
      example:
        PasswordPolicy:
          AdditionalConstraints: ""
          MinimumLength: ""
        VerificationMessage:
          DeliveryMethod: ""
          EmailSettings:
            EmailMessage: ""
            EmailSubject: ""
          SmsSettings:
            SmsMessage: ""
        Mfa:
          MFAMode: ""
          Settings:
            SmsMessage: ""
            MfaTypes: ""
        ForgotPassword:
          DeliveryMethod: ""
          EmailSettings:
            EmailMessage: ""
            EmailSubject: ""
          SmsSettings:
            SmsMessage: ""
        OAuth:
          RedirectSignOutURIs: ""
          SocialProviderSettings:
            Google:
              ClientSecret: ""
              ClientId: ""
            LoginWithAmazon:
              ClientSecret: ""
              ClientId: ""
            Facebook:
              ClientSecret: ""
              ClientId: ""
            SignInWithApple:
              PrivateKey: ""
              ClientId: ""
              KeyId: ""
              TeamId: ""
          RedirectSignInURIs: ""
          OAuthGrantType: ""
          DomainPrefix: ""
          OAuthScopes: ""
      title: UpdateBackendAuth_request_resourceConfig_UserPoolConfigs
    UpdateBackendAuth_request_resourceConfig:
      description: Defines the resource configuration when updating an authentication
        resource in your Amplify project.
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: authResources
          title: AuthResources
        IdentityPoolConfigs:
          $ref: '#/components/schemas/UpdateBackendAuth_request_resourceConfig_IdentityPoolConfigs'
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          - description: Defines the service name to use when configuring an authentication
              resource in your Amplify project.
            xml:
              name: service
          title: Service
        UserPoolConfigs:
          $ref: '#/components/schemas/UpdateBackendAuth_request_resourceConfig_UserPoolConfigs'
      title: UpdateBackendAuth_request_resourceConfig
      type: object
    UpdateBackendAuth_request:
      properties:
        resourceConfig:
          $ref: '#/components/schemas/UpdateBackendAuth_request_resourceConfig'
        resourceName:
          description: The name of this resource.
          title: resourceName
          type: string
      required:
      - resourceConfig
      - resourceName
      title: UpdateBackendAuth_request
      type: object
    UpdateBackendConfig_request_loginAuthConfig:
      description: The request object for this operation.
      properties:
        AwsCognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito identity pool ID used for the Amplify
              Admin UI login authorization.
            xml:
              name: aws_cognito_identity_pool_id
          title: AwsCognitoIdentityPoolId
        AwsCognitoRegion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Region for the Amplify Admin UI login.
            xml:
              name: aws_cognito_region
          title: AwsCognitoRegion
        AwsUserPoolsId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Cognito user pool ID used for Amplify Admin UI
              login authentication.
            xml:
              name: aws_user_pools_id
          title: AwsUserPoolsId
        AwsUserPoolsWebClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The web client ID for the Amazon Cognito user pools.
            xml:
              name: aws_user_pools_web_client_id
          title: AwsUserPoolsWebClientId
      title: UpdateBackendConfig_request_loginAuthConfig
      type: object
    UpdateBackendConfig_request:
      properties:
        loginAuthConfig:
          $ref: '#/components/schemas/UpdateBackendConfig_request_loginAuthConfig'
      title: UpdateBackendConfig_request
      type: object
    UpdateBackendStorage_request_resourceConfig:
      description: The resource configuration for updating backend storage.
      properties:
        Permissions:
          $ref: '#/components/schemas/CreateBackendStorage_request_resourceConfig_Permissions'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: The name of the storage service.
            xml:
              name: serviceName
          title: ServiceName
      title: UpdateBackendStorage_request_resourceConfig
      type: object
    UpdateBackendStorage_request:
      properties:
        resourceConfig:
          $ref: '#/components/schemas/UpdateBackendStorage_request_resourceConfig'
        resourceName:
          description: The name of the storage resource.
          title: resourceName
          type: string
      required:
      - resourceConfig
      - resourceName
      title: UpdateBackendStorage_request
      type: object
    BackendAPIAuthType_Settings:
      allOf:
      - $ref: '#/components/schemas/BackendAPIAppSyncAuthSettings'
      - description: Describes settings for the authentication mode.
        xml:
          name: settings
      example:
        CognitoUserPoolId: ""
        Description: ""
        OpenIDProviderName: ""
        OpenIDClientId: ""
        OpenIDIssueURL: ""
        OpenIDIatTTL: ""
        ExpirationTime: ""
        OpenIDAuthTTL: ""
      title: BackendAPIAuthType_Settings
    CreateBackendAuthUserPoolConfig_ForgotPassword:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig'
      - description: "<b>(DEPRECATED)</b> Describes the forgotten password policy\
          \ for your Amazon Cognito user pool, configured as a part of your Amplify\
          \ project."
        xml:
          name: forgotPassword
      example:
        DeliveryMethod: ""
        EmailSettings:
          EmailMessage: ""
          EmailSubject: ""
        SmsSettings:
          SmsMessage: ""
      title: CreateBackendAuthUserPoolConfig_ForgotPassword
    CreateBackendAuthUserPoolConfig_Mfa:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthMFAConfig'
      - description: Describes whether to apply multi-factor authentication policies
          for your Amazon Cognito user pool configured as a part of your Amplify project.
        xml:
          name: mfa
      example:
        MFAMode: ""
        Settings:
          SmsMessage: ""
          MfaTypes: ""
      title: CreateBackendAuthUserPoolConfig_Mfa
    CreateBackendAuthUserPoolConfig_OAuth:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthOAuthConfig'
      - description: "Describes the OAuth policy and rules for your Amazon Cognito\
          \ user pool, configured as a part of your Amplify project."
        xml:
          name: oAuth
      example:
        RedirectSignOutURIs: ""
        SocialProviderSettings:
          Google:
            ClientSecret: ""
            ClientId: ""
          LoginWithAmazon:
            ClientSecret: ""
            ClientId: ""
          Facebook:
            ClientSecret: ""
            ClientId: ""
          SignInWithApple:
            PrivateKey: ""
            ClientId: ""
            KeyId: ""
            TeamId: ""
        RedirectSignInURIs: ""
        OAuthGrantType: ""
        DomainPrefix: ""
        OAuthScopes: ""
      title: CreateBackendAuthUserPoolConfig_OAuth
    CreateBackendAuthUserPoolConfig_PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthPasswordPolicyConfig'
      - description: "Describes the password policy for your Amazon Cognito user pool,\
          \ configured as a part of your Amplify project."
        xml:
          name: passwordPolicy
      example:
        AdditionalConstraints: ""
        MinimumLength: ""
      title: CreateBackendAuthUserPoolConfig_PasswordPolicy
    CreateBackendAuthUserPoolConfig_VerificationMessage:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig'
      - description: "Describes the email or SMS verification message for your Amazon\
          \ Cognito user pool, configured as a part of your Amplify project."
        xml:
          name: verificationMessage
      example:
        DeliveryMethod: ""
        EmailSettings:
          EmailMessage: ""
          EmailSubject: ""
        SmsSettings:
          SmsMessage: ""
      title: CreateBackendAuthUserPoolConfig_VerificationMessage
    GetBackendAPIResponse_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/BackendAPIResourceConfig'
      - description: The resource configuration for this response object.
        xml:
          name: resourceConfig
      example:
        TransformSchema: ""
        ApiName: ""
        Service: ""
        DefaultAuthType:
          Mode: ""
          Settings:
            CognitoUserPoolId: ""
            Description: ""
            OpenIDProviderName: ""
            OpenIDClientId: ""
            OpenIDIssueURL: ""
            OpenIDIatTTL: ""
            ExpirationTime: ""
            OpenIDAuthTTL: ""
        ConflictResolution:
          ResolutionStrategy: ""
        AdditionalAuthTypes: ""
      title: GetBackendAPIResponse_ResourceConfig
    GetBackendAuthResponse_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'
      - description: The resource configuration for authorization requests to the
          backend of your Amplify project.
        xml:
          name: resourceConfig
      example:
        IdentityPoolConfigs:
          UnauthenticatedLogin: ""
          IdentityPoolName: ""
        AuthResources: ""
        UserPoolConfigs:
          PasswordPolicy:
            AdditionalConstraints: ""
            MinimumLength: ""
          RequiredSignUpAttributes: ""
          VerificationMessage:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          Mfa:
            MFAMode: ""
            Settings:
              SmsMessage: ""
              MfaTypes: ""
          SignInMethod: ""
          ForgotPassword:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          OAuth:
            RedirectSignOutURIs: ""
            SocialProviderSettings:
              Google:
                ClientSecret: ""
                ClientId: ""
              LoginWithAmazon:
                ClientSecret: ""
                ClientId: ""
              Facebook:
                ClientSecret: ""
                ClientId: ""
              SignInWithApple:
                PrivateKey: ""
                ClientId: ""
                KeyId: ""
                TeamId: ""
            RedirectSignInURIs: ""
            OAuthGrantType: ""
            DomainPrefix: ""
            OAuthScopes: ""
          UserPoolName: ""
        Service: ""
      title: GetBackendAuthResponse_ResourceConfig
    GetBackendStorageResponse_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/GetBackendStorageResourceConfig'
      - description: The resource configuration for the backend storage resource.
        xml:
          name: resourceConfig
      example:
        BucketName: ""
        ServiceName: ""
        Permissions:
          Authenticated: ""
          UnAuthenticated: ""
        Imported: ""
      title: GetBackendStorageResponse_ResourceConfig
    UpdateBackendAuthUserPoolConfig_ForgotPassword:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthForgotPasswordConfig'
      - description: "<b>(DEPRECATED)</b> Describes the forgot password policy for\
          \ your Amazon Cognito user pool, configured as a part of your Amplify project."
        xml:
          name: forgotPassword
      example:
        DeliveryMethod: ""
        EmailSettings:
          EmailMessage: ""
          EmailSubject: ""
        SmsSettings:
          SmsMessage: ""
      title: UpdateBackendAuthUserPoolConfig_ForgotPassword
    UpdateBackendAuthUserPoolConfig_Mfa:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthMFAConfig'
      - description: Describes whether to apply multi-factor authentication policies
          for your Amazon Cognito user pool configured as a part of your Amplify project.
        xml:
          name: mfa
      example:
        MFAMode: ""
        Settings:
          SmsMessage: ""
          MfaTypes: ""
      title: UpdateBackendAuthUserPoolConfig_Mfa
    UpdateBackendAuthUserPoolConfig_OAuth:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthOAuthConfig'
      - description: "Describes the OAuth policy and rules for your Amazon Cognito\
          \ user pool, configured as a part of your Amplify project."
        xml:
          name: oAuth
      example:
        RedirectSignOutURIs: ""
        SocialProviderSettings:
          Google:
            ClientSecret: ""
            ClientId: ""
          LoginWithAmazon:
            ClientSecret: ""
            ClientId: ""
          Facebook:
            ClientSecret: ""
            ClientId: ""
          SignInWithApple:
            PrivateKey: ""
            ClientId: ""
            KeyId: ""
            TeamId: ""
        RedirectSignInURIs: ""
        OAuthGrantType: ""
        DomainPrefix: ""
        OAuthScopes: ""
      title: UpdateBackendAuthUserPoolConfig_OAuth
    UpdateBackendAuthUserPoolConfig_PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthPasswordPolicyConfig'
      - description: "Describes the password policy for your Amazon Cognito user pool,\
          \ configured as a part of your Amplify project."
        xml:
          name: passwordPolicy
      example:
        AdditionalConstraints: ""
        MinimumLength: ""
      title: UpdateBackendAuthUserPoolConfig_PasswordPolicy
    UpdateBackendAuthUserPoolConfig_VerificationMessage:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthVerificationMessageConfig'
      - description: "Describes the email or SMS verification message for your Amazon\
          \ Cognito user pool, configured as a part of your Amplify project."
        xml:
          name: verificationMessage
      example:
        DeliveryMethod: ""
        EmailSettings:
          EmailMessage: ""
          EmailSubject: ""
        SmsSettings:
          SmsMessage: ""
      title: UpdateBackendAuthUserPoolConfig_VerificationMessage
    UpdateBackendConfigResponse_LoginAuthConfig:
      allOf:
      - $ref: '#/components/schemas/LoginAuthConfigReqObj'
      - description: Describes the Amazon Cognito configurations for the Admin UI
          auth resource to log in with.
        xml:
          name: loginAuthConfig
      example:
        AwsCognitoIdentityPoolId: ""
        AwsUserPoolsWebClientId: ""
        AwsUserPoolsId: ""
        AwsCognitoRegion: ""
      title: UpdateBackendConfigResponse_LoginAuthConfig
    CreateBackendAPIRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/BackendAPIResourceConfig'
      - description: The resource configuration for this request.
        xml:
          name: resourceConfig
      example:
        TransformSchema: ""
        ApiName: ""
        Service: ""
        DefaultAuthType:
          Mode: ""
          Settings:
            CognitoUserPoolId: ""
            Description: ""
            OpenIDProviderName: ""
            OpenIDClientId: ""
            OpenIDIssueURL: ""
            OpenIDIatTTL: ""
            ExpirationTime: ""
            OpenIDAuthTTL: ""
        ConflictResolution:
          ResolutionStrategy: ""
        AdditionalAuthTypes: ""
      title: CreateBackendAPIRequest_ResourceConfig
    CreateBackendAuthForgotPasswordConfig_EmailSettings:
      allOf:
      - $ref: '#/components/schemas/EmailSettings'
      - description: <b>(DEPRECATED)</b> The configuration for the email sent when
          an app user forgets their password.
        xml:
          name: emailSettings
      example:
        EmailMessage: ""
        EmailSubject: ""
      title: CreateBackendAuthForgotPasswordConfig_EmailSettings
    CreateBackendAuthForgotPasswordConfig_SmsSettings:
      allOf:
      - $ref: '#/components/schemas/SmsSettings'
      - description: <b>(DEPRECATED)</b> The configuration for the SMS message sent
          when an app user forgets their password.
        xml:
          name: smsSettings
      example:
        SmsMessage: ""
      title: CreateBackendAuthForgotPasswordConfig_SmsSettings
    CreateBackendAuthMFAConfig_Settings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - description: Describes the configuration settings and methods for your Amplify
          app users to use MFA.
        xml:
          name: settings
      example:
        SmsMessage: ""
        MfaTypes: ""
      title: CreateBackendAuthMFAConfig_Settings
    CreateBackendAuthOAuthConfig_SocialProviderSettings:
      allOf:
      - $ref: '#/components/schemas/SocialProviderSettings'
      - description: The settings for using social providers to access your Amplify
          app.
        xml:
          name: socialProviderSettings
      example:
        Google:
          ClientSecret: ""
          ClientId: ""
        LoginWithAmazon:
          ClientSecret: ""
          ClientId: ""
        Facebook:
          ClientSecret: ""
          ClientId: ""
        SignInWithApple:
          PrivateKey: ""
          ClientId: ""
          KeyId: ""
          TeamId: ""
      title: CreateBackendAuthOAuthConfig_SocialProviderSettings
    CreateBackendAuthRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'
      - description: The resource configuration for this request object.
        xml:
          name: resourceConfig
      example:
        IdentityPoolConfigs:
          UnauthenticatedLogin: ""
          IdentityPoolName: ""
        AuthResources: ""
        UserPoolConfigs:
          PasswordPolicy:
            AdditionalConstraints: ""
            MinimumLength: ""
          RequiredSignUpAttributes: ""
          VerificationMessage:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          Mfa:
            MFAMode: ""
            Settings:
              SmsMessage: ""
              MfaTypes: ""
          SignInMethod: ""
          ForgotPassword:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          OAuth:
            RedirectSignOutURIs: ""
            SocialProviderSettings:
              Google:
                ClientSecret: ""
                ClientId: ""
              LoginWithAmazon:
                ClientSecret: ""
                ClientId: ""
              Facebook:
                ClientSecret: ""
                ClientId: ""
              SignInWithApple:
                PrivateKey: ""
                ClientId: ""
                KeyId: ""
                TeamId: ""
            RedirectSignInURIs: ""
            OAuthGrantType: ""
            DomainPrefix: ""
            OAuthScopes: ""
          UserPoolName: ""
        Service: ""
      title: CreateBackendAuthRequest_ResourceConfig
    CreateBackendAuthVerificationMessageConfig_EmailSettings:
      allOf:
      - $ref: '#/components/schemas/EmailSettings'
      - description: The settings for the email message.
        xml:
          name: emailSettings
      example:
        EmailMessage: ""
        EmailSubject: ""
      title: CreateBackendAuthVerificationMessageConfig_EmailSettings
    CreateBackendAuthVerificationMessageConfig_SmsSettings:
      allOf:
      - $ref: '#/components/schemas/SmsSettings'
      - description: The settings for the SMS message.
        xml:
          name: smsSettings
      example:
        SmsMessage: ""
      title: CreateBackendAuthVerificationMessageConfig_SmsSettings
    CreateBackendStorageRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/CreateBackendStorageResourceConfig'
      - description: The resource configuration for creating backend storage.
        xml:
          name: resourceConfig
      example:
        BucketName: ""
        ServiceName: ""
        Permissions:
          Authenticated: ""
          UnAuthenticated: ""
      title: CreateBackendStorageRequest_ResourceConfig
    DeleteBackendAPIRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/BackendAPIResourceConfig'
      - description: Defines the resource configuration for the data model in your
          Amplify project.
        xml:
          name: resourceConfig
      example:
        TransformSchema: ""
        ApiName: ""
        Service: ""
        DefaultAuthType:
          Mode: ""
          Settings:
            CognitoUserPoolId: ""
            Description: ""
            OpenIDProviderName: ""
            OpenIDClientId: ""
            OpenIDIssueURL: ""
            OpenIDIatTTL: ""
            ExpirationTime: ""
            OpenIDAuthTTL: ""
        ConflictResolution:
          ResolutionStrategy: ""
        AdditionalAuthTypes: ""
      title: DeleteBackendAPIRequest_ResourceConfig
    UpdateBackendAuthForgotPasswordConfig_SmsSettings:
      allOf:
      - $ref: '#/components/schemas/SmsSettings'
      - description: <b>(DEPRECATED)</b> The configuration for the SMS message sent
          when an Amplify app user forgets their password.
        xml:
          name: smsSettings
      example:
        SmsMessage: ""
      title: UpdateBackendAuthForgotPasswordConfig_SmsSettings
    UpdateBackendAuthMFAConfig_Settings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - description: The settings of your MFA configuration for the backend of your
          Amplify project.
        xml:
          name: settings
      example:
        SmsMessage: ""
        MfaTypes: ""
      title: UpdateBackendAuthMFAConfig_Settings
    UpdateBackendAuthOAuthConfig_SocialProviderSettings:
      allOf:
      - $ref: '#/components/schemas/SocialProviderSettings'
      - description: Describes third-party social federation configurations for allowing
          your users to sign in with OAuth.
        xml:
          name: socialProviderSettings
      example:
        Google:
          ClientSecret: ""
          ClientId: ""
        LoginWithAmazon:
          ClientSecret: ""
          ClientId: ""
        Facebook:
          ClientSecret: ""
          ClientId: ""
        SignInWithApple:
          PrivateKey: ""
          ClientId: ""
          KeyId: ""
          TeamId: ""
      title: UpdateBackendAuthOAuthConfig_SocialProviderSettings
    UpdateBackendAuthRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendAuthResourceConfig'
      - description: The resource configuration for this request object.
        xml:
          name: resourceConfig
      example:
        IdentityPoolConfigs:
          UnauthenticatedLogin: ""
        AuthResources: ""
        UserPoolConfigs:
          PasswordPolicy:
            AdditionalConstraints: ""
            MinimumLength: ""
          VerificationMessage:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          Mfa:
            MFAMode: ""
            Settings:
              SmsMessage: ""
              MfaTypes: ""
          ForgotPassword:
            DeliveryMethod: ""
            EmailSettings:
              EmailMessage: ""
              EmailSubject: ""
            SmsSettings:
              SmsMessage: ""
          OAuth:
            RedirectSignOutURIs: ""
            SocialProviderSettings:
              Google:
                ClientSecret: ""
                ClientId: ""
              LoginWithAmazon:
                ClientSecret: ""
                ClientId: ""
              Facebook:
                ClientSecret: ""
                ClientId: ""
              SignInWithApple:
                PrivateKey: ""
                ClientId: ""
                KeyId: ""
                TeamId: ""
            RedirectSignInURIs: ""
            OAuthGrantType: ""
            DomainPrefix: ""
            OAuthScopes: ""
        Service: ""
      title: UpdateBackendAuthRequest_ResourceConfig
    UpdateBackendConfigRequest_LoginAuthConfig:
      allOf:
      - $ref: '#/components/schemas/LoginAuthConfigReqObj'
      - description: Describes the Amazon Cognito configuration for Admin UI access.
        xml:
          name: loginAuthConfig
      example:
        AwsCognitoIdentityPoolId: ""
        AwsUserPoolsWebClientId: ""
        AwsUserPoolsId: ""
        AwsCognitoRegion: ""
      title: UpdateBackendConfigRequest_LoginAuthConfig
    UpdateBackendStorageRequest_ResourceConfig:
      allOf:
      - $ref: '#/components/schemas/UpdateBackendStorageResourceConfig'
      - description: The resource configuration for updating backend storage.
        xml:
          name: resourceConfig
      example:
        ServiceName: ""
        Permissions:
          Authenticated: ""
          UnAuthenticated: ""
      title: UpdateBackendStorageRequest_ResourceConfig
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
