# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateBackendJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation: str=None, status: str=None):
        """UpdateBackendJobRequest - a model defined in OpenAPI

        :param operation: The operation of this UpdateBackendJobRequest.
        :param status: The status of this UpdateBackendJobRequest.
        """
        self.openapi_types = {
            'operation': str,
            'status': str
        }

        self.attribute_map = {
            'operation': 'operation',
            'status': 'status'
        }

        self._operation = operation
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBackendJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBackendJob_request of this UpdateBackendJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self):
        """Gets the operation of this UpdateBackendJobRequest.

        Filters the list of response objects to include only those with the specified operation name.

        :return: The operation of this UpdateBackendJobRequest.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this UpdateBackendJobRequest.

        Filters the list of response objects to include only those with the specified operation name.

        :param operation: The operation of this UpdateBackendJobRequest.
        :type operation: str
        """

        self._operation = operation

    @property
    def status(self):
        """Gets the status of this UpdateBackendJobRequest.

        Filters the list of response objects to include only those with the specified status.

        :return: The status of this UpdateBackendJobRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateBackendJobRequest.

        Filters the list of response objects to include only those with the specified status.

        :param status: The status of this UpdateBackendJobRequest.
        :type status: str
        """

        self._status = status
