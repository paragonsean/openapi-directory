# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BackendStoragePermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authenticated: List=None, un_authenticated: List=None):
        """BackendStoragePermissions - a model defined in OpenAPI

        :param authenticated: The authenticated of this BackendStoragePermissions.
        :param un_authenticated: The un_authenticated of this BackendStoragePermissions.
        """
        self.openapi_types = {
            'authenticated': List,
            'un_authenticated': List
        }

        self.attribute_map = {
            'authenticated': 'Authenticated',
            'un_authenticated': 'UnAuthenticated'
        }

        self._authenticated = authenticated
        self._un_authenticated = un_authenticated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackendStoragePermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackendStoragePermissions of this BackendStoragePermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authenticated(self):
        """Gets the authenticated of this BackendStoragePermissions.


        :return: The authenticated of this BackendStoragePermissions.
        :rtype: List
        """
        return self._authenticated

    @authenticated.setter
    def authenticated(self, authenticated):
        """Sets the authenticated of this BackendStoragePermissions.


        :param authenticated: The authenticated of this BackendStoragePermissions.
        :type authenticated: List
        """
        if authenticated is None:
            raise ValueError("Invalid value for `authenticated`, must not be `None`")

        self._authenticated = authenticated

    @property
    def un_authenticated(self):
        """Gets the un_authenticated of this BackendStoragePermissions.


        :return: The un_authenticated of this BackendStoragePermissions.
        :rtype: List
        """
        return self._un_authenticated

    @un_authenticated.setter
    def un_authenticated(self, un_authenticated):
        """Sets the un_authenticated of this BackendStoragePermissions.


        :param un_authenticated: The un_authenticated of this BackendStoragePermissions.
        :type un_authenticated: List
        """

        self._un_authenticated = un_authenticated
