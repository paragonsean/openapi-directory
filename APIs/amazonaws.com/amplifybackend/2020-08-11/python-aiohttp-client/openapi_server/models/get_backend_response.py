# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetBackendResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amplify_feature_flags: str=None, amplify_meta_config: str=None, app_id: str=None, app_name: str=None, backend_environment_list: List=None, backend_environment_name: str=None, error: str=None):
        """GetBackendResponse - a model defined in OpenAPI

        :param amplify_feature_flags: The amplify_feature_flags of this GetBackendResponse.
        :param amplify_meta_config: The amplify_meta_config of this GetBackendResponse.
        :param app_id: The app_id of this GetBackendResponse.
        :param app_name: The app_name of this GetBackendResponse.
        :param backend_environment_list: The backend_environment_list of this GetBackendResponse.
        :param backend_environment_name: The backend_environment_name of this GetBackendResponse.
        :param error: The error of this GetBackendResponse.
        """
        self.openapi_types = {
            'amplify_feature_flags': str,
            'amplify_meta_config': str,
            'app_id': str,
            'app_name': str,
            'backend_environment_list': List,
            'backend_environment_name': str,
            'error': str
        }

        self.attribute_map = {
            'amplify_feature_flags': 'AmplifyFeatureFlags',
            'amplify_meta_config': 'AmplifyMetaConfig',
            'app_id': 'AppId',
            'app_name': 'AppName',
            'backend_environment_list': 'BackendEnvironmentList',
            'backend_environment_name': 'BackendEnvironmentName',
            'error': 'Error'
        }

        self._amplify_feature_flags = amplify_feature_flags
        self._amplify_meta_config = amplify_meta_config
        self._app_id = app_id
        self._app_name = app_name
        self._backend_environment_list = backend_environment_list
        self._backend_environment_name = backend_environment_name
        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetBackendResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetBackendResponse of this GetBackendResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amplify_feature_flags(self):
        """Gets the amplify_feature_flags of this GetBackendResponse.


        :return: The amplify_feature_flags of this GetBackendResponse.
        :rtype: str
        """
        return self._amplify_feature_flags

    @amplify_feature_flags.setter
    def amplify_feature_flags(self, amplify_feature_flags):
        """Sets the amplify_feature_flags of this GetBackendResponse.


        :param amplify_feature_flags: The amplify_feature_flags of this GetBackendResponse.
        :type amplify_feature_flags: str
        """

        self._amplify_feature_flags = amplify_feature_flags

    @property
    def amplify_meta_config(self):
        """Gets the amplify_meta_config of this GetBackendResponse.


        :return: The amplify_meta_config of this GetBackendResponse.
        :rtype: str
        """
        return self._amplify_meta_config

    @amplify_meta_config.setter
    def amplify_meta_config(self, amplify_meta_config):
        """Sets the amplify_meta_config of this GetBackendResponse.


        :param amplify_meta_config: The amplify_meta_config of this GetBackendResponse.
        :type amplify_meta_config: str
        """

        self._amplify_meta_config = amplify_meta_config

    @property
    def app_id(self):
        """Gets the app_id of this GetBackendResponse.


        :return: The app_id of this GetBackendResponse.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GetBackendResponse.


        :param app_id: The app_id of this GetBackendResponse.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def app_name(self):
        """Gets the app_name of this GetBackendResponse.


        :return: The app_name of this GetBackendResponse.
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this GetBackendResponse.


        :param app_name: The app_name of this GetBackendResponse.
        :type app_name: str
        """

        self._app_name = app_name

    @property
    def backend_environment_list(self):
        """Gets the backend_environment_list of this GetBackendResponse.


        :return: The backend_environment_list of this GetBackendResponse.
        :rtype: List
        """
        return self._backend_environment_list

    @backend_environment_list.setter
    def backend_environment_list(self, backend_environment_list):
        """Sets the backend_environment_list of this GetBackendResponse.


        :param backend_environment_list: The backend_environment_list of this GetBackendResponse.
        :type backend_environment_list: List
        """

        self._backend_environment_list = backend_environment_list

    @property
    def backend_environment_name(self):
        """Gets the backend_environment_name of this GetBackendResponse.


        :return: The backend_environment_name of this GetBackendResponse.
        :rtype: str
        """
        return self._backend_environment_name

    @backend_environment_name.setter
    def backend_environment_name(self, backend_environment_name):
        """Sets the backend_environment_name of this GetBackendResponse.


        :param backend_environment_name: The backend_environment_name of this GetBackendResponse.
        :type backend_environment_name: str
        """

        self._backend_environment_name = backend_environment_name

    @property
    def error(self):
        """Gets the error of this GetBackendResponse.


        :return: The error of this GetBackendResponse.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GetBackendResponse.


        :param error: The error of this GetBackendResponse.
        :type error: str
        """

        self._error = error
