# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetBackendJobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, backend_environment_name: str=None, create_time: str=None, error: str=None, job_id: str=None, operation: str=None, status: str=None, update_time: str=None):
        """GetBackendJobResponse - a model defined in OpenAPI

        :param app_id: The app_id of this GetBackendJobResponse.
        :param backend_environment_name: The backend_environment_name of this GetBackendJobResponse.
        :param create_time: The create_time of this GetBackendJobResponse.
        :param error: The error of this GetBackendJobResponse.
        :param job_id: The job_id of this GetBackendJobResponse.
        :param operation: The operation of this GetBackendJobResponse.
        :param status: The status of this GetBackendJobResponse.
        :param update_time: The update_time of this GetBackendJobResponse.
        """
        self.openapi_types = {
            'app_id': str,
            'backend_environment_name': str,
            'create_time': str,
            'error': str,
            'job_id': str,
            'operation': str,
            'status': str,
            'update_time': str
        }

        self.attribute_map = {
            'app_id': 'AppId',
            'backend_environment_name': 'BackendEnvironmentName',
            'create_time': 'CreateTime',
            'error': 'Error',
            'job_id': 'JobId',
            'operation': 'Operation',
            'status': 'Status',
            'update_time': 'UpdateTime'
        }

        self._app_id = app_id
        self._backend_environment_name = backend_environment_name
        self._create_time = create_time
        self._error = error
        self._job_id = job_id
        self._operation = operation
        self._status = status
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetBackendJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetBackendJobResponse of this GetBackendJobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this GetBackendJobResponse.


        :return: The app_id of this GetBackendJobResponse.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this GetBackendJobResponse.


        :param app_id: The app_id of this GetBackendJobResponse.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def backend_environment_name(self):
        """Gets the backend_environment_name of this GetBackendJobResponse.


        :return: The backend_environment_name of this GetBackendJobResponse.
        :rtype: str
        """
        return self._backend_environment_name

    @backend_environment_name.setter
    def backend_environment_name(self, backend_environment_name):
        """Sets the backend_environment_name of this GetBackendJobResponse.


        :param backend_environment_name: The backend_environment_name of this GetBackendJobResponse.
        :type backend_environment_name: str
        """

        self._backend_environment_name = backend_environment_name

    @property
    def create_time(self):
        """Gets the create_time of this GetBackendJobResponse.


        :return: The create_time of this GetBackendJobResponse.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GetBackendJobResponse.


        :param create_time: The create_time of this GetBackendJobResponse.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def error(self):
        """Gets the error of this GetBackendJobResponse.


        :return: The error of this GetBackendJobResponse.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GetBackendJobResponse.


        :param error: The error of this GetBackendJobResponse.
        :type error: str
        """

        self._error = error

    @property
    def job_id(self):
        """Gets the job_id of this GetBackendJobResponse.


        :return: The job_id of this GetBackendJobResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this GetBackendJobResponse.


        :param job_id: The job_id of this GetBackendJobResponse.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def operation(self):
        """Gets the operation of this GetBackendJobResponse.


        :return: The operation of this GetBackendJobResponse.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this GetBackendJobResponse.


        :param operation: The operation of this GetBackendJobResponse.
        :type operation: str
        """

        self._operation = operation

    @property
    def status(self):
        """Gets the status of this GetBackendJobResponse.


        :return: The status of this GetBackendJobResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetBackendJobResponse.


        :param status: The status of this GetBackendJobResponse.
        :type status: str
        """

        self._status = status

    @property
    def update_time(self):
        """Gets the update_time of this GetBackendJobResponse.


        :return: The update_time of this GetBackendJobResponse.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GetBackendJobResponse.


        :param update_time: The update_time of this GetBackendJobResponse.
        :type update_time: str
        """

        self._update_time = update_time
