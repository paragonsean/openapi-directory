# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_backend_config_request_login_auth_config import UpdateBackendConfigRequestLoginAuthConfig
from openapi_server import util


class UpdateBackendConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, login_auth_config: UpdateBackendConfigRequestLoginAuthConfig=None):
        """UpdateBackendConfigRequest - a model defined in OpenAPI

        :param login_auth_config: The login_auth_config of this UpdateBackendConfigRequest.
        """
        self.openapi_types = {
            'login_auth_config': UpdateBackendConfigRequestLoginAuthConfig
        }

        self.attribute_map = {
            'login_auth_config': 'loginAuthConfig'
        }

        self._login_auth_config = login_auth_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBackendConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBackendConfig_request of this UpdateBackendConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def login_auth_config(self):
        """Gets the login_auth_config of this UpdateBackendConfigRequest.


        :return: The login_auth_config of this UpdateBackendConfigRequest.
        :rtype: UpdateBackendConfigRequestLoginAuthConfig
        """
        return self._login_auth_config

    @login_auth_config.setter
    def login_auth_config(self, login_auth_config):
        """Sets the login_auth_config of this UpdateBackendConfigRequest.


        :param login_auth_config: The login_auth_config of this UpdateBackendConfigRequest.
        :type login_auth_config: UpdateBackendConfigRequestLoginAuthConfig
        """

        self._login_auth_config = login_auth_config
