# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetBackendRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backend_environment_name: str=None):
        """GetBackendRequest - a model defined in OpenAPI

        :param backend_environment_name: The backend_environment_name of this GetBackendRequest.
        """
        self.openapi_types = {
            'backend_environment_name': str
        }

        self.attribute_map = {
            'backend_environment_name': 'backendEnvironmentName'
        }

        self._backend_environment_name = backend_environment_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetBackendRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetBackend_request of this GetBackendRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backend_environment_name(self):
        """Gets the backend_environment_name of this GetBackendRequest.

        The name of the backend environment.

        :return: The backend_environment_name of this GetBackendRequest.
        :rtype: str
        """
        return self._backend_environment_name

    @backend_environment_name.setter
    def backend_environment_name(self, backend_environment_name):
        """Sets the backend_environment_name of this GetBackendRequest.

        The name of the backend environment.

        :param backend_environment_name: The backend_environment_name of this GetBackendRequest.
        :type backend_environment_name: str
        """

        self._backend_environment_name = backend_environment_name
