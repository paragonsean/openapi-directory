# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_backend_auth_forgot_password_config_email_settings import CreateBackendAuthForgotPasswordConfigEmailSettings
from openapi_server.models.create_backend_auth_forgot_password_config_sms_settings import CreateBackendAuthForgotPasswordConfigSmsSettings
from openapi_server.models.delivery_method import DeliveryMethod
from openapi_server import util


class CreateBackendAuthForgotPasswordConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_method: DeliveryMethod=None, email_settings: CreateBackendAuthForgotPasswordConfigEmailSettings=None, sms_settings: CreateBackendAuthForgotPasswordConfigSmsSettings=None):
        """CreateBackendAuthForgotPasswordConfig - a model defined in OpenAPI

        :param delivery_method: The delivery_method of this CreateBackendAuthForgotPasswordConfig.
        :param email_settings: The email_settings of this CreateBackendAuthForgotPasswordConfig.
        :param sms_settings: The sms_settings of this CreateBackendAuthForgotPasswordConfig.
        """
        self.openapi_types = {
            'delivery_method': DeliveryMethod,
            'email_settings': CreateBackendAuthForgotPasswordConfigEmailSettings,
            'sms_settings': CreateBackendAuthForgotPasswordConfigSmsSettings
        }

        self.attribute_map = {
            'delivery_method': 'DeliveryMethod',
            'email_settings': 'EmailSettings',
            'sms_settings': 'SmsSettings'
        }

        self._delivery_method = delivery_method
        self._email_settings = email_settings
        self._sms_settings = sms_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBackendAuthForgotPasswordConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBackendAuthForgotPasswordConfig of this CreateBackendAuthForgotPasswordConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_method(self):
        """Gets the delivery_method of this CreateBackendAuthForgotPasswordConfig.


        :return: The delivery_method of this CreateBackendAuthForgotPasswordConfig.
        :rtype: DeliveryMethod
        """
        return self._delivery_method

    @delivery_method.setter
    def delivery_method(self, delivery_method):
        """Sets the delivery_method of this CreateBackendAuthForgotPasswordConfig.


        :param delivery_method: The delivery_method of this CreateBackendAuthForgotPasswordConfig.
        :type delivery_method: DeliveryMethod
        """
        if delivery_method is None:
            raise ValueError("Invalid value for `delivery_method`, must not be `None`")

        self._delivery_method = delivery_method

    @property
    def email_settings(self):
        """Gets the email_settings of this CreateBackendAuthForgotPasswordConfig.


        :return: The email_settings of this CreateBackendAuthForgotPasswordConfig.
        :rtype: CreateBackendAuthForgotPasswordConfigEmailSettings
        """
        return self._email_settings

    @email_settings.setter
    def email_settings(self, email_settings):
        """Sets the email_settings of this CreateBackendAuthForgotPasswordConfig.


        :param email_settings: The email_settings of this CreateBackendAuthForgotPasswordConfig.
        :type email_settings: CreateBackendAuthForgotPasswordConfigEmailSettings
        """

        self._email_settings = email_settings

    @property
    def sms_settings(self):
        """Gets the sms_settings of this CreateBackendAuthForgotPasswordConfig.


        :return: The sms_settings of this CreateBackendAuthForgotPasswordConfig.
        :rtype: CreateBackendAuthForgotPasswordConfigSmsSettings
        """
        return self._sms_settings

    @sms_settings.setter
    def sms_settings(self, sms_settings):
        """Sets the sms_settings of this CreateBackendAuthForgotPasswordConfig.


        :param sms_settings: The sms_settings of this CreateBackendAuthForgotPasswordConfig.
        :type sms_settings: CreateBackendAuthForgotPasswordConfigSmsSettings
        """

        self._sms_settings = sms_settings
