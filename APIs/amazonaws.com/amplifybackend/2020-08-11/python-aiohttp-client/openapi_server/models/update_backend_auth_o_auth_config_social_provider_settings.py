# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backend_auth_apple_provider_config import BackendAuthAppleProviderConfig
from openapi_server.models.backend_auth_social_provider_config import BackendAuthSocialProviderConfig
from openapi_server import util


class UpdateBackendAuthOAuthConfigSocialProviderSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facebook: BackendAuthSocialProviderConfig=None, google: BackendAuthSocialProviderConfig=None, login_with_amazon: BackendAuthSocialProviderConfig=None, sign_in_with_apple: BackendAuthAppleProviderConfig=None):
        """UpdateBackendAuthOAuthConfigSocialProviderSettings - a model defined in OpenAPI

        :param facebook: The facebook of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :param google: The google of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :param login_with_amazon: The login_with_amazon of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :param sign_in_with_apple: The sign_in_with_apple of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        """
        self.openapi_types = {
            'facebook': BackendAuthSocialProviderConfig,
            'google': BackendAuthSocialProviderConfig,
            'login_with_amazon': BackendAuthSocialProviderConfig,
            'sign_in_with_apple': BackendAuthAppleProviderConfig
        }

        self.attribute_map = {
            'facebook': 'Facebook',
            'google': 'Google',
            'login_with_amazon': 'LoginWithAmazon',
            'sign_in_with_apple': 'SignInWithApple'
        }

        self._facebook = facebook
        self._google = google
        self._login_with_amazon = login_with_amazon
        self._sign_in_with_apple = sign_in_with_apple

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBackendAuthOAuthConfigSocialProviderSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBackendAuthOAuthConfig_SocialProviderSettings of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facebook(self):
        """Gets the facebook of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :return: The facebook of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :rtype: BackendAuthSocialProviderConfig
        """
        return self._facebook

    @facebook.setter
    def facebook(self, facebook):
        """Sets the facebook of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :param facebook: The facebook of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :type facebook: BackendAuthSocialProviderConfig
        """

        self._facebook = facebook

    @property
    def google(self):
        """Gets the google of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :return: The google of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :rtype: BackendAuthSocialProviderConfig
        """
        return self._google

    @google.setter
    def google(self, google):
        """Sets the google of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :param google: The google of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :type google: BackendAuthSocialProviderConfig
        """

        self._google = google

    @property
    def login_with_amazon(self):
        """Gets the login_with_amazon of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :return: The login_with_amazon of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :rtype: BackendAuthSocialProviderConfig
        """
        return self._login_with_amazon

    @login_with_amazon.setter
    def login_with_amazon(self, login_with_amazon):
        """Sets the login_with_amazon of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :param login_with_amazon: The login_with_amazon of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :type login_with_amazon: BackendAuthSocialProviderConfig
        """

        self._login_with_amazon = login_with_amazon

    @property
    def sign_in_with_apple(self):
        """Gets the sign_in_with_apple of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :return: The sign_in_with_apple of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :rtype: BackendAuthAppleProviderConfig
        """
        return self._sign_in_with_apple

    @sign_in_with_apple.setter
    def sign_in_with_apple(self, sign_in_with_apple):
        """Sets the sign_in_with_apple of this UpdateBackendAuthOAuthConfigSocialProviderSettings.


        :param sign_in_with_apple: The sign_in_with_apple of this UpdateBackendAuthOAuthConfigSocialProviderSettings.
        :type sign_in_with_apple: BackendAuthAppleProviderConfig
        """

        self._sign_in_with_apple = sign_in_with_apple
