/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteBackendAPIRequest_ResourceConfig.h
 *
 * 
 */

#ifndef OAIDeleteBackendAPIRequest_ResourceConfig_H
#define OAIDeleteBackendAPIRequest_ResourceConfig_H

#include <QJsonObject>

#include "OAICreateBackendAPI_request_resourceConfig_ConflictResolution.h"
#include "OAICreateBackendAPI_request_resourceConfig_DefaultAuthType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBackendAPI_request_resourceConfig_ConflictResolution;
class OAICreateBackendAPI_request_resourceConfig_DefaultAuthType;

class OAIDeleteBackendAPIRequest_ResourceConfig : public OAIObject {
public:
    OAIDeleteBackendAPIRequest_ResourceConfig();
    OAIDeleteBackendAPIRequest_ResourceConfig(QString json);
    ~OAIDeleteBackendAPIRequest_ResourceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAdditionalAuthTypes() const;
    void setAdditionalAuthTypes(const QList &additional_auth_types);
    bool is_additional_auth_types_Set() const;
    bool is_additional_auth_types_Valid() const;

    QString getApiName() const;
    void setApiName(const QString &api_name);
    bool is_api_name_Set() const;
    bool is_api_name_Valid() const;

    OAICreateBackendAPI_request_resourceConfig_ConflictResolution getConflictResolution() const;
    void setConflictResolution(const OAICreateBackendAPI_request_resourceConfig_ConflictResolution &conflict_resolution);
    bool is_conflict_resolution_Set() const;
    bool is_conflict_resolution_Valid() const;

    OAICreateBackendAPI_request_resourceConfig_DefaultAuthType getDefaultAuthType() const;
    void setDefaultAuthType(const OAICreateBackendAPI_request_resourceConfig_DefaultAuthType &default_auth_type);
    bool is_default_auth_type_Set() const;
    bool is_default_auth_type_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    QString getTransformSchema() const;
    void setTransformSchema(const QString &transform_schema);
    bool is_transform_schema_Set() const;
    bool is_transform_schema_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_additional_auth_types;
    bool m_additional_auth_types_isSet;
    bool m_additional_auth_types_isValid;

    QString m_api_name;
    bool m_api_name_isSet;
    bool m_api_name_isValid;

    OAICreateBackendAPI_request_resourceConfig_ConflictResolution m_conflict_resolution;
    bool m_conflict_resolution_isSet;
    bool m_conflict_resolution_isValid;

    OAICreateBackendAPI_request_resourceConfig_DefaultAuthType m_default_auth_type;
    bool m_default_auth_type_isSet;
    bool m_default_auth_type_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    QString m_transform_schema;
    bool m_transform_schema_isSet;
    bool m_transform_schema_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteBackendAPIRequest_ResourceConfig)

#endif // OAIDeleteBackendAPIRequest_ResourceConfig_H
