/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBackendAuth_request_resourceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBackendAuth_request_resourceConfig::OAICreateBackendAuth_request_resourceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBackendAuth_request_resourceConfig::OAICreateBackendAuth_request_resourceConfig() {
    this->initializeModel();
}

OAICreateBackendAuth_request_resourceConfig::~OAICreateBackendAuth_request_resourceConfig() {}

void OAICreateBackendAuth_request_resourceConfig::initializeModel() {

    m_auth_resources_isSet = false;
    m_auth_resources_isValid = false;

    m_identity_pool_configs_isSet = false;
    m_identity_pool_configs_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_user_pool_configs_isSet = false;
    m_user_pool_configs_isValid = false;
}

void OAICreateBackendAuth_request_resourceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBackendAuth_request_resourceConfig::fromJsonObject(QJsonObject json) {

    m_auth_resources_isValid = ::OpenAPI::fromJsonValue(m_auth_resources, json[QString("AuthResources")]);
    m_auth_resources_isSet = !json[QString("AuthResources")].isNull() && m_auth_resources_isValid;

    m_identity_pool_configs_isValid = ::OpenAPI::fromJsonValue(m_identity_pool_configs, json[QString("IdentityPoolConfigs")]);
    m_identity_pool_configs_isSet = !json[QString("IdentityPoolConfigs")].isNull() && m_identity_pool_configs_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("Service")]);
    m_service_isSet = !json[QString("Service")].isNull() && m_service_isValid;

    m_user_pool_configs_isValid = ::OpenAPI::fromJsonValue(m_user_pool_configs, json[QString("UserPoolConfigs")]);
    m_user_pool_configs_isSet = !json[QString("UserPoolConfigs")].isNull() && m_user_pool_configs_isValid;
}

QString OAICreateBackendAuth_request_resourceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBackendAuth_request_resourceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_resources.isSet()) {
        obj.insert(QString("AuthResources"), ::OpenAPI::toJsonValue(m_auth_resources));
    }
    if (m_identity_pool_configs.isSet()) {
        obj.insert(QString("IdentityPoolConfigs"), ::OpenAPI::toJsonValue(m_identity_pool_configs));
    }
    if (m_service.isSet()) {
        obj.insert(QString("Service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_user_pool_configs.isSet()) {
        obj.insert(QString("UserPoolConfigs"), ::OpenAPI::toJsonValue(m_user_pool_configs));
    }
    return obj;
}

OAIAuthResources OAICreateBackendAuth_request_resourceConfig::getAuthResources() const {
    return m_auth_resources;
}
void OAICreateBackendAuth_request_resourceConfig::setAuthResources(const OAIAuthResources &auth_resources) {
    m_auth_resources = auth_resources;
    m_auth_resources_isSet = true;
}

bool OAICreateBackendAuth_request_resourceConfig::is_auth_resources_Set() const{
    return m_auth_resources_isSet;
}

bool OAICreateBackendAuth_request_resourceConfig::is_auth_resources_Valid() const{
    return m_auth_resources_isValid;
}

OAICreateBackendAuth_request_resourceConfig_IdentityPoolConfigs OAICreateBackendAuth_request_resourceConfig::getIdentityPoolConfigs() const {
    return m_identity_pool_configs;
}
void OAICreateBackendAuth_request_resourceConfig::setIdentityPoolConfigs(const OAICreateBackendAuth_request_resourceConfig_IdentityPoolConfigs &identity_pool_configs) {
    m_identity_pool_configs = identity_pool_configs;
    m_identity_pool_configs_isSet = true;
}

bool OAICreateBackendAuth_request_resourceConfig::is_identity_pool_configs_Set() const{
    return m_identity_pool_configs_isSet;
}

bool OAICreateBackendAuth_request_resourceConfig::is_identity_pool_configs_Valid() const{
    return m_identity_pool_configs_isValid;
}

OAIService OAICreateBackendAuth_request_resourceConfig::getService() const {
    return m_service;
}
void OAICreateBackendAuth_request_resourceConfig::setService(const OAIService &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAICreateBackendAuth_request_resourceConfig::is_service_Set() const{
    return m_service_isSet;
}

bool OAICreateBackendAuth_request_resourceConfig::is_service_Valid() const{
    return m_service_isValid;
}

OAICreateBackendAuth_request_resourceConfig_UserPoolConfigs OAICreateBackendAuth_request_resourceConfig::getUserPoolConfigs() const {
    return m_user_pool_configs;
}
void OAICreateBackendAuth_request_resourceConfig::setUserPoolConfigs(const OAICreateBackendAuth_request_resourceConfig_UserPoolConfigs &user_pool_configs) {
    m_user_pool_configs = user_pool_configs;
    m_user_pool_configs_isSet = true;
}

bool OAICreateBackendAuth_request_resourceConfig::is_user_pool_configs_Set() const{
    return m_user_pool_configs_isSet;
}

bool OAICreateBackendAuth_request_resourceConfig::is_user_pool_configs_Valid() const{
    return m_user_pool_configs_isValid;
}

bool OAICreateBackendAuth_request_resourceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_pool_configs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_pool_configs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBackendAuth_request_resourceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
