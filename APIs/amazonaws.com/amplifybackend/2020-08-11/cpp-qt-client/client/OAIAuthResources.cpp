/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthResources.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthResources::OAIAuthResources(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthResources::OAIAuthResources() {
    this->initializeModel();
}

OAIAuthResources::~OAIAuthResources() {}

void OAIAuthResources::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAuthResources::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAuthResources::fromJson(QString jsonString) {
    
    if ( jsonString.compare("USER_POOL_ONLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthResources::USER_POOL_ONLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IDENTITY_POOL_AND_USER_POOL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthResources::IDENTITY_POOL_AND_USER_POOL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAuthResources::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAuthResources::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAuthResources::USER_POOL_ONLY:
            val = "USER_POOL_ONLY";
            break;
        case eOAIAuthResources::IDENTITY_POOL_AND_USER_POOL:
            val = "IDENTITY_POOL_AND_USER_POOL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAuthResources::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAuthResources::eOAIAuthResources OAIAuthResources::getValue() const {
    return m_value;
}

void OAIAuthResources::setValue(const OAIAuthResources::eOAIAuthResources& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAuthResources::isSet() const {
    
    return m_value_isSet;
}

bool OAIAuthResources::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
