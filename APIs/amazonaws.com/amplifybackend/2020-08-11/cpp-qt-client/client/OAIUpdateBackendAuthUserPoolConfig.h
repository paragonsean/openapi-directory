/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateBackendAuthUserPoolConfig.h
 *
 * Describes the Amazon Cognito user pool configuration for the authorization resource to be configured for your Amplify project on an update.
 */

#ifndef OAIUpdateBackendAuthUserPoolConfig_H
#define OAIUpdateBackendAuthUserPoolConfig_H

#include <QJsonObject>

#include "OAIUpdateBackendAuthUserPoolConfig_ForgotPassword.h"
#include "OAIUpdateBackendAuthUserPoolConfig_Mfa.h"
#include "OAIUpdateBackendAuthUserPoolConfig_OAuth.h"
#include "OAIUpdateBackendAuthUserPoolConfig_PasswordPolicy.h"
#include "OAIUpdateBackendAuthUserPoolConfig_VerificationMessage.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateBackendAuthUserPoolConfig_ForgotPassword;
class OAIUpdateBackendAuthUserPoolConfig_Mfa;
class OAIUpdateBackendAuthUserPoolConfig_OAuth;
class OAIUpdateBackendAuthUserPoolConfig_PasswordPolicy;
class OAIUpdateBackendAuthUserPoolConfig_VerificationMessage;

class OAIUpdateBackendAuthUserPoolConfig : public OAIObject {
public:
    OAIUpdateBackendAuthUserPoolConfig();
    OAIUpdateBackendAuthUserPoolConfig(QString json);
    ~OAIUpdateBackendAuthUserPoolConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateBackendAuthUserPoolConfig_ForgotPassword getForgotPassword() const;
    void setForgotPassword(const OAIUpdateBackendAuthUserPoolConfig_ForgotPassword &forgot_password);
    bool is_forgot_password_Set() const;
    bool is_forgot_password_Valid() const;

    OAIUpdateBackendAuthUserPoolConfig_Mfa getMfa() const;
    void setMfa(const OAIUpdateBackendAuthUserPoolConfig_Mfa &mfa);
    bool is_mfa_Set() const;
    bool is_mfa_Valid() const;

    OAIUpdateBackendAuthUserPoolConfig_OAuth getOAuth() const;
    void setOAuth(const OAIUpdateBackendAuthUserPoolConfig_OAuth &o_auth);
    bool is_o_auth_Set() const;
    bool is_o_auth_Valid() const;

    OAIUpdateBackendAuthUserPoolConfig_PasswordPolicy getPasswordPolicy() const;
    void setPasswordPolicy(const OAIUpdateBackendAuthUserPoolConfig_PasswordPolicy &password_policy);
    bool is_password_policy_Set() const;
    bool is_password_policy_Valid() const;

    OAIUpdateBackendAuthUserPoolConfig_VerificationMessage getVerificationMessage() const;
    void setVerificationMessage(const OAIUpdateBackendAuthUserPoolConfig_VerificationMessage &verification_message);
    bool is_verification_message_Set() const;
    bool is_verification_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateBackendAuthUserPoolConfig_ForgotPassword m_forgot_password;
    bool m_forgot_password_isSet;
    bool m_forgot_password_isValid;

    OAIUpdateBackendAuthUserPoolConfig_Mfa m_mfa;
    bool m_mfa_isSet;
    bool m_mfa_isValid;

    OAIUpdateBackendAuthUserPoolConfig_OAuth m_o_auth;
    bool m_o_auth_isSet;
    bool m_o_auth_isValid;

    OAIUpdateBackendAuthUserPoolConfig_PasswordPolicy m_password_policy;
    bool m_password_policy_isSet;
    bool m_password_policy_isValid;

    OAIUpdateBackendAuthUserPoolConfig_VerificationMessage m_verification_message;
    bool m_verification_message_isSet;
    bool m_verification_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateBackendAuthUserPoolConfig)

#endif // OAIUpdateBackendAuthUserPoolConfig_H
