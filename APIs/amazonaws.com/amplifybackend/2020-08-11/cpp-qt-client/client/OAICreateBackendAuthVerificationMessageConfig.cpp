/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBackendAuthVerificationMessageConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBackendAuthVerificationMessageConfig::OAICreateBackendAuthVerificationMessageConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBackendAuthVerificationMessageConfig::OAICreateBackendAuthVerificationMessageConfig() {
    this->initializeModel();
}

OAICreateBackendAuthVerificationMessageConfig::~OAICreateBackendAuthVerificationMessageConfig() {}

void OAICreateBackendAuthVerificationMessageConfig::initializeModel() {

    m_delivery_method_isSet = false;
    m_delivery_method_isValid = false;

    m_email_settings_isSet = false;
    m_email_settings_isValid = false;

    m_sms_settings_isSet = false;
    m_sms_settings_isValid = false;
}

void OAICreateBackendAuthVerificationMessageConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBackendAuthVerificationMessageConfig::fromJsonObject(QJsonObject json) {

    m_delivery_method_isValid = ::OpenAPI::fromJsonValue(m_delivery_method, json[QString("DeliveryMethod")]);
    m_delivery_method_isSet = !json[QString("DeliveryMethod")].isNull() && m_delivery_method_isValid;

    m_email_settings_isValid = ::OpenAPI::fromJsonValue(m_email_settings, json[QString("EmailSettings")]);
    m_email_settings_isSet = !json[QString("EmailSettings")].isNull() && m_email_settings_isValid;

    m_sms_settings_isValid = ::OpenAPI::fromJsonValue(m_sms_settings, json[QString("SmsSettings")]);
    m_sms_settings_isSet = !json[QString("SmsSettings")].isNull() && m_sms_settings_isValid;
}

QString OAICreateBackendAuthVerificationMessageConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBackendAuthVerificationMessageConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_delivery_method.isSet()) {
        obj.insert(QString("DeliveryMethod"), ::OpenAPI::toJsonValue(m_delivery_method));
    }
    if (m_email_settings.isSet()) {
        obj.insert(QString("EmailSettings"), ::OpenAPI::toJsonValue(m_email_settings));
    }
    if (m_sms_settings.isSet()) {
        obj.insert(QString("SmsSettings"), ::OpenAPI::toJsonValue(m_sms_settings));
    }
    return obj;
}

OAIDeliveryMethod OAICreateBackendAuthVerificationMessageConfig::getDeliveryMethod() const {
    return m_delivery_method;
}
void OAICreateBackendAuthVerificationMessageConfig::setDeliveryMethod(const OAIDeliveryMethod &delivery_method) {
    m_delivery_method = delivery_method;
    m_delivery_method_isSet = true;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_delivery_method_Set() const{
    return m_delivery_method_isSet;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_delivery_method_Valid() const{
    return m_delivery_method_isValid;
}

OAICreateBackendAuthVerificationMessageConfig_EmailSettings OAICreateBackendAuthVerificationMessageConfig::getEmailSettings() const {
    return m_email_settings;
}
void OAICreateBackendAuthVerificationMessageConfig::setEmailSettings(const OAICreateBackendAuthVerificationMessageConfig_EmailSettings &email_settings) {
    m_email_settings = email_settings;
    m_email_settings_isSet = true;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_email_settings_Set() const{
    return m_email_settings_isSet;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_email_settings_Valid() const{
    return m_email_settings_isValid;
}

OAICreateBackendAuthVerificationMessageConfig_SmsSettings OAICreateBackendAuthVerificationMessageConfig::getSmsSettings() const {
    return m_sms_settings;
}
void OAICreateBackendAuthVerificationMessageConfig::setSmsSettings(const OAICreateBackendAuthVerificationMessageConfig_SmsSettings &sms_settings) {
    m_sms_settings = sms_settings;
    m_sms_settings_isSet = true;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_sms_settings_Set() const{
    return m_sms_settings_isSet;
}

bool OAICreateBackendAuthVerificationMessageConfig::is_sms_settings_Valid() const{
    return m_sms_settings_isValid;
}

bool OAICreateBackendAuthVerificationMessageConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivery_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBackendAuthVerificationMessageConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_delivery_method_isValid && true;
}

} // namespace OpenAPI
