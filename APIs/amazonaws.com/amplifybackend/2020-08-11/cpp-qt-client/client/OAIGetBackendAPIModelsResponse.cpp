/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetBackendAPIModelsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetBackendAPIModelsResponse::OAIGetBackendAPIModelsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetBackendAPIModelsResponse::OAIGetBackendAPIModelsResponse() {
    this->initializeModel();
}

OAIGetBackendAPIModelsResponse::~OAIGetBackendAPIModelsResponse() {}

void OAIGetBackendAPIModelsResponse::initializeModel() {

    m_models_isSet = false;
    m_models_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_model_introspection_schema_isSet = false;
    m_model_introspection_schema_isValid = false;
}

void OAIGetBackendAPIModelsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetBackendAPIModelsResponse::fromJsonObject(QJsonObject json) {

    m_models_isValid = ::OpenAPI::fromJsonValue(m_models, json[QString("Models")]);
    m_models_isSet = !json[QString("Models")].isNull() && m_models_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_model_introspection_schema_isValid = ::OpenAPI::fromJsonValue(m_model_introspection_schema, json[QString("ModelIntrospectionSchema")]);
    m_model_introspection_schema_isSet = !json[QString("ModelIntrospectionSchema")].isNull() && m_model_introspection_schema_isValid;
}

QString OAIGetBackendAPIModelsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetBackendAPIModelsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_models_isSet) {
        obj.insert(QString("Models"), ::OpenAPI::toJsonValue(m_models));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_model_introspection_schema_isSet) {
        obj.insert(QString("ModelIntrospectionSchema"), ::OpenAPI::toJsonValue(m_model_introspection_schema));
    }
    return obj;
}

QString OAIGetBackendAPIModelsResponse::getModels() const {
    return m_models;
}
void OAIGetBackendAPIModelsResponse::setModels(const QString &models) {
    m_models = models;
    m_models_isSet = true;
}

bool OAIGetBackendAPIModelsResponse::is_models_Set() const{
    return m_models_isSet;
}

bool OAIGetBackendAPIModelsResponse::is_models_Valid() const{
    return m_models_isValid;
}

OAIStatus OAIGetBackendAPIModelsResponse::getStatus() const {
    return m_status;
}
void OAIGetBackendAPIModelsResponse::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetBackendAPIModelsResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetBackendAPIModelsResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetBackendAPIModelsResponse::getModelIntrospectionSchema() const {
    return m_model_introspection_schema;
}
void OAIGetBackendAPIModelsResponse::setModelIntrospectionSchema(const QString &model_introspection_schema) {
    m_model_introspection_schema = model_introspection_schema;
    m_model_introspection_schema_isSet = true;
}

bool OAIGetBackendAPIModelsResponse::is_model_introspection_schema_Set() const{
    return m_model_introspection_schema_isSet;
}

bool OAIGetBackendAPIModelsResponse::is_model_introspection_schema_Valid() const{
    return m_model_introspection_schema_isValid;
}

bool OAIGetBackendAPIModelsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_models_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_introspection_schema_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetBackendAPIModelsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
