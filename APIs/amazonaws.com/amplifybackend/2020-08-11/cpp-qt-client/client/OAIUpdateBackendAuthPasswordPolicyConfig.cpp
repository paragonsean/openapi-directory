/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBackendAuthPasswordPolicyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBackendAuthPasswordPolicyConfig::OAIUpdateBackendAuthPasswordPolicyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBackendAuthPasswordPolicyConfig::OAIUpdateBackendAuthPasswordPolicyConfig() {
    this->initializeModel();
}

OAIUpdateBackendAuthPasswordPolicyConfig::~OAIUpdateBackendAuthPasswordPolicyConfig() {}

void OAIUpdateBackendAuthPasswordPolicyConfig::initializeModel() {

    m_additional_constraints_isSet = false;
    m_additional_constraints_isValid = false;

    m_minimum_length_isSet = false;
    m_minimum_length_isValid = false;
}

void OAIUpdateBackendAuthPasswordPolicyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBackendAuthPasswordPolicyConfig::fromJsonObject(QJsonObject json) {

    m_additional_constraints_isValid = ::OpenAPI::fromJsonValue(m_additional_constraints, json[QString("AdditionalConstraints")]);
    m_additional_constraints_isSet = !json[QString("AdditionalConstraints")].isNull() && m_additional_constraints_isValid;

    m_minimum_length_isValid = ::OpenAPI::fromJsonValue(m_minimum_length, json[QString("MinimumLength")]);
    m_minimum_length_isSet = !json[QString("MinimumLength")].isNull() && m_minimum_length_isValid;
}

QString OAIUpdateBackendAuthPasswordPolicyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBackendAuthPasswordPolicyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_constraints.isSet()) {
        obj.insert(QString("AdditionalConstraints"), ::OpenAPI::toJsonValue(m_additional_constraints));
    }
    if (m_minimum_length_isSet) {
        obj.insert(QString("MinimumLength"), ::OpenAPI::toJsonValue(m_minimum_length));
    }
    return obj;
}

QList OAIUpdateBackendAuthPasswordPolicyConfig::getAdditionalConstraints() const {
    return m_additional_constraints;
}
void OAIUpdateBackendAuthPasswordPolicyConfig::setAdditionalConstraints(const QList &additional_constraints) {
    m_additional_constraints = additional_constraints;
    m_additional_constraints_isSet = true;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::is_additional_constraints_Set() const{
    return m_additional_constraints_isSet;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::is_additional_constraints_Valid() const{
    return m_additional_constraints_isValid;
}

double OAIUpdateBackendAuthPasswordPolicyConfig::getMinimumLength() const {
    return m_minimum_length;
}
void OAIUpdateBackendAuthPasswordPolicyConfig::setMinimumLength(const double &minimum_length) {
    m_minimum_length = minimum_length;
    m_minimum_length_isSet = true;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::is_minimum_length_Set() const{
    return m_minimum_length_isSet;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::is_minimum_length_Valid() const{
    return m_minimum_length_isValid;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBackendAuthPasswordPolicyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
