/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBackendStorageResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBackendStorageResponse::OAIUpdateBackendStorageResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBackendStorageResponse::OAIUpdateBackendStorageResponse() {
    this->initializeModel();
}

OAIUpdateBackendStorageResponse::~OAIUpdateBackendStorageResponse() {}

void OAIUpdateBackendStorageResponse::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_backend_environment_name_isSet = false;
    m_backend_environment_name_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdateBackendStorageResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBackendStorageResponse::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("AppId")]);
    m_app_id_isSet = !json[QString("AppId")].isNull() && m_app_id_isValid;

    m_backend_environment_name_isValid = ::OpenAPI::fromJsonValue(m_backend_environment_name, json[QString("BackendEnvironmentName")]);
    m_backend_environment_name_isSet = !json[QString("BackendEnvironmentName")].isNull() && m_backend_environment_name_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobId")]);
    m_job_id_isSet = !json[QString("JobId")].isNull() && m_job_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIUpdateBackendStorageResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBackendStorageResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("AppId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_backend_environment_name_isSet) {
        obj.insert(QString("BackendEnvironmentName"), ::OpenAPI::toJsonValue(m_backend_environment_name));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("JobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIUpdateBackendStorageResponse::getAppId() const {
    return m_app_id;
}
void OAIUpdateBackendStorageResponse::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIUpdateBackendStorageResponse::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIUpdateBackendStorageResponse::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIUpdateBackendStorageResponse::getBackendEnvironmentName() const {
    return m_backend_environment_name;
}
void OAIUpdateBackendStorageResponse::setBackendEnvironmentName(const QString &backend_environment_name) {
    m_backend_environment_name = backend_environment_name;
    m_backend_environment_name_isSet = true;
}

bool OAIUpdateBackendStorageResponse::is_backend_environment_name_Set() const{
    return m_backend_environment_name_isSet;
}

bool OAIUpdateBackendStorageResponse::is_backend_environment_name_Valid() const{
    return m_backend_environment_name_isValid;
}

QString OAIUpdateBackendStorageResponse::getJobId() const {
    return m_job_id;
}
void OAIUpdateBackendStorageResponse::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIUpdateBackendStorageResponse::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIUpdateBackendStorageResponse::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIUpdateBackendStorageResponse::getStatus() const {
    return m_status;
}
void OAIUpdateBackendStorageResponse::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateBackendStorageResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateBackendStorageResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateBackendStorageResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backend_environment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBackendStorageResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
