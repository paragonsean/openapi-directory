/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBackendAuthOAuthConfig.h
 *
 * Creates the OAuth configuration for your Amplify project.
 */

#ifndef OAICreateBackendAuthOAuthConfig_H
#define OAICreateBackendAuthOAuthConfig_H

#include <QJsonObject>

#include "OAICreateBackendAuthOAuthConfig_SocialProviderSettings.h"
#include "OAIOAuthGrantType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBackendAuthOAuthConfig_SocialProviderSettings;

class OAICreateBackendAuthOAuthConfig : public OAIObject {
public:
    OAICreateBackendAuthOAuthConfig();
    OAICreateBackendAuthOAuthConfig(QString json);
    ~OAICreateBackendAuthOAuthConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainPrefix() const;
    void setDomainPrefix(const QString &domain_prefix);
    bool is_domain_prefix_Set() const;
    bool is_domain_prefix_Valid() const;

    OAIOAuthGrantType getOAuthGrantType() const;
    void setOAuthGrantType(const OAIOAuthGrantType &o_auth_grant_type);
    bool is_o_auth_grant_type_Set() const;
    bool is_o_auth_grant_type_Valid() const;

    QList getOAuthScopes() const;
    void setOAuthScopes(const QList &o_auth_scopes);
    bool is_o_auth_scopes_Set() const;
    bool is_o_auth_scopes_Valid() const;

    QList getRedirectSignInUris() const;
    void setRedirectSignInUris(const QList &redirect_sign_in_uris);
    bool is_redirect_sign_in_uris_Set() const;
    bool is_redirect_sign_in_uris_Valid() const;

    QList getRedirectSignOutUris() const;
    void setRedirectSignOutUris(const QList &redirect_sign_out_uris);
    bool is_redirect_sign_out_uris_Set() const;
    bool is_redirect_sign_out_uris_Valid() const;

    OAICreateBackendAuthOAuthConfig_SocialProviderSettings getSocialProviderSettings() const;
    void setSocialProviderSettings(const OAICreateBackendAuthOAuthConfig_SocialProviderSettings &social_provider_settings);
    bool is_social_provider_settings_Set() const;
    bool is_social_provider_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_prefix;
    bool m_domain_prefix_isSet;
    bool m_domain_prefix_isValid;

    OAIOAuthGrantType m_o_auth_grant_type;
    bool m_o_auth_grant_type_isSet;
    bool m_o_auth_grant_type_isValid;

    QList m_o_auth_scopes;
    bool m_o_auth_scopes_isSet;
    bool m_o_auth_scopes_isValid;

    QList m_redirect_sign_in_uris;
    bool m_redirect_sign_in_uris_isSet;
    bool m_redirect_sign_in_uris_isValid;

    QList m_redirect_sign_out_uris;
    bool m_redirect_sign_out_uris_isSet;
    bool m_redirect_sign_out_uris_isValid;

    OAICreateBackendAuthOAuthConfig_SocialProviderSettings m_social_provider_settings;
    bool m_social_provider_settings_isSet;
    bool m_social_provider_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBackendAuthOAuthConfig)

#endif // OAICreateBackendAuthOAuthConfig_H
