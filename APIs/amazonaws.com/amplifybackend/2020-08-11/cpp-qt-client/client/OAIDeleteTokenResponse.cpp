/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteTokenResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteTokenResponse::OAIDeleteTokenResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteTokenResponse::OAIDeleteTokenResponse() {
    this->initializeModel();
}

OAIDeleteTokenResponse::~OAIDeleteTokenResponse() {}

void OAIDeleteTokenResponse::initializeModel() {

    m_is_success_isSet = false;
    m_is_success_isValid = false;
}

void OAIDeleteTokenResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteTokenResponse::fromJsonObject(QJsonObject json) {

    m_is_success_isValid = ::OpenAPI::fromJsonValue(m_is_success, json[QString("IsSuccess")]);
    m_is_success_isSet = !json[QString("IsSuccess")].isNull() && m_is_success_isValid;
}

QString OAIDeleteTokenResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteTokenResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_is_success_isSet) {
        obj.insert(QString("IsSuccess"), ::OpenAPI::toJsonValue(m_is_success));
    }
    return obj;
}

bool OAIDeleteTokenResponse::getIsSuccess() const {
    return m_is_success;
}
void OAIDeleteTokenResponse::setIsSuccess(const bool &is_success) {
    m_is_success = is_success;
    m_is_success_isSet = true;
}

bool OAIDeleteTokenResponse::is_is_success_Set() const{
    return m_is_success_isSet;
}

bool OAIDeleteTokenResponse::is_is_success_Valid() const{
    return m_is_success_isValid;
}

bool OAIDeleteTokenResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_success_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteTokenResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
