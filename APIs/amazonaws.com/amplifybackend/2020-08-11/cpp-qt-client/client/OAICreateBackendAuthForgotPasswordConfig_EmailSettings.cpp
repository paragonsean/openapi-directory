/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateBackendAuthForgotPasswordConfig_EmailSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateBackendAuthForgotPasswordConfig_EmailSettings::OAICreateBackendAuthForgotPasswordConfig_EmailSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateBackendAuthForgotPasswordConfig_EmailSettings::OAICreateBackendAuthForgotPasswordConfig_EmailSettings() {
    this->initializeModel();
}

OAICreateBackendAuthForgotPasswordConfig_EmailSettings::~OAICreateBackendAuthForgotPasswordConfig_EmailSettings() {}

void OAICreateBackendAuthForgotPasswordConfig_EmailSettings::initializeModel() {

    m_email_message_isSet = false;
    m_email_message_isValid = false;

    m_email_subject_isSet = false;
    m_email_subject_isValid = false;
}

void OAICreateBackendAuthForgotPasswordConfig_EmailSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateBackendAuthForgotPasswordConfig_EmailSettings::fromJsonObject(QJsonObject json) {

    m_email_message_isValid = ::OpenAPI::fromJsonValue(m_email_message, json[QString("EmailMessage")]);
    m_email_message_isSet = !json[QString("EmailMessage")].isNull() && m_email_message_isValid;

    m_email_subject_isValid = ::OpenAPI::fromJsonValue(m_email_subject, json[QString("EmailSubject")]);
    m_email_subject_isSet = !json[QString("EmailSubject")].isNull() && m_email_subject_isValid;
}

QString OAICreateBackendAuthForgotPasswordConfig_EmailSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateBackendAuthForgotPasswordConfig_EmailSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_email_message_isSet) {
        obj.insert(QString("EmailMessage"), ::OpenAPI::toJsonValue(m_email_message));
    }
    if (m_email_subject_isSet) {
        obj.insert(QString("EmailSubject"), ::OpenAPI::toJsonValue(m_email_subject));
    }
    return obj;
}

QString OAICreateBackendAuthForgotPasswordConfig_EmailSettings::getEmailMessage() const {
    return m_email_message;
}
void OAICreateBackendAuthForgotPasswordConfig_EmailSettings::setEmailMessage(const QString &email_message) {
    m_email_message = email_message;
    m_email_message_isSet = true;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::is_email_message_Set() const{
    return m_email_message_isSet;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::is_email_message_Valid() const{
    return m_email_message_isValid;
}

QString OAICreateBackendAuthForgotPasswordConfig_EmailSettings::getEmailSubject() const {
    return m_email_subject;
}
void OAICreateBackendAuthForgotPasswordConfig_EmailSettings::setEmailSubject(const QString &email_subject) {
    m_email_subject = email_subject;
    m_email_subject_isSet = true;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::is_email_subject_Set() const{
    return m_email_subject_isSet;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::is_email_subject_Valid() const{
    return m_email_subject_isValid;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_subject_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateBackendAuthForgotPasswordConfig_EmailSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
