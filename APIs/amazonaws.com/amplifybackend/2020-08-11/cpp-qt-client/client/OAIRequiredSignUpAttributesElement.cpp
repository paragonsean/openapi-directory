/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequiredSignUpAttributesElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequiredSignUpAttributesElement::OAIRequiredSignUpAttributesElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequiredSignUpAttributesElement::OAIRequiredSignUpAttributesElement() {
    this->initializeModel();
}

OAIRequiredSignUpAttributesElement::~OAIRequiredSignUpAttributesElement() {}

void OAIRequiredSignUpAttributesElement::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRequiredSignUpAttributesElement::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRequiredSignUpAttributesElement::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ADDRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::ADDRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BIRTHDATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::BIRTHDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAMILY_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::FAMILY_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GENDER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::GENDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GIVEN_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::GIVEN_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LOCALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::LOCALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MIDDLE_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::MIDDLE_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NICKNAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::NICKNAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PHONE_NUMBER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::PHONE_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PICTURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::PICTURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PREFERRED_USERNAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::PREFERRED_USERNAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PROFILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::PROFILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UPDATED_AT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::UPDATED_AT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WEBSITE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::WEBSITE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ZONE_INFO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRequiredSignUpAttributesElement::ZONE_INFO;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRequiredSignUpAttributesElement::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRequiredSignUpAttributesElement::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRequiredSignUpAttributesElement::ADDRESS:
            val = "ADDRESS";
            break;
        case eOAIRequiredSignUpAttributesElement::BIRTHDATE:
            val = "BIRTHDATE";
            break;
        case eOAIRequiredSignUpAttributesElement::EMAIL:
            val = "EMAIL";
            break;
        case eOAIRequiredSignUpAttributesElement::FAMILY_NAME:
            val = "FAMILY_NAME";
            break;
        case eOAIRequiredSignUpAttributesElement::GENDER:
            val = "GENDER";
            break;
        case eOAIRequiredSignUpAttributesElement::GIVEN_NAME:
            val = "GIVEN_NAME";
            break;
        case eOAIRequiredSignUpAttributesElement::LOCALE:
            val = "LOCALE";
            break;
        case eOAIRequiredSignUpAttributesElement::MIDDLE_NAME:
            val = "MIDDLE_NAME";
            break;
        case eOAIRequiredSignUpAttributesElement::NAME:
            val = "NAME";
            break;
        case eOAIRequiredSignUpAttributesElement::NICKNAME:
            val = "NICKNAME";
            break;
        case eOAIRequiredSignUpAttributesElement::PHONE_NUMBER:
            val = "PHONE_NUMBER";
            break;
        case eOAIRequiredSignUpAttributesElement::PICTURE:
            val = "PICTURE";
            break;
        case eOAIRequiredSignUpAttributesElement::PREFERRED_USERNAME:
            val = "PREFERRED_USERNAME";
            break;
        case eOAIRequiredSignUpAttributesElement::PROFILE:
            val = "PROFILE";
            break;
        case eOAIRequiredSignUpAttributesElement::UPDATED_AT:
            val = "UPDATED_AT";
            break;
        case eOAIRequiredSignUpAttributesElement::WEBSITE:
            val = "WEBSITE";
            break;
        case eOAIRequiredSignUpAttributesElement::ZONE_INFO:
            val = "ZONE_INFO";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRequiredSignUpAttributesElement::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRequiredSignUpAttributesElement::eOAIRequiredSignUpAttributesElement OAIRequiredSignUpAttributesElement::getValue() const {
    return m_value;
}

void OAIRequiredSignUpAttributesElement::setValue(const OAIRequiredSignUpAttributesElement::eOAIRequiredSignUpAttributesElement& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRequiredSignUpAttributesElement::isSet() const {
    
    return m_value_isSet;
}

bool OAIRequiredSignUpAttributesElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
