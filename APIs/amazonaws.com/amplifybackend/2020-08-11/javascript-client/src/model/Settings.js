/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Settings model module.
 * @module model/Settings
 * @version 2020-08-11
 */
class Settings {
    /**
     * Constructs a new <code>Settings</code>.
     * The settings of your MFA configuration for the backend of your Amplify project.
     * @alias module:model/Settings
     */
    constructor() { 
        
        Settings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Settings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Settings} obj Optional instance to populate.
     * @return {module:model/Settings} The populated <code>Settings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Settings();

            if (data.hasOwnProperty('MfaTypes')) {
                obj['MfaTypes'] = ApiClient.convertToType(data['MfaTypes'], Array);
            }
            if (data.hasOwnProperty('SmsMessage')) {
                obj['SmsMessage'] = ApiClient.convertToType(data['SmsMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Settings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Settings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MfaTypes`
        if (data['MfaTypes']) { // data not null
          Array.validateJSON(data['MfaTypes']);
        }
        // validate the optional field `SmsMessage`
        if (data['SmsMessage']) { // data not null
          String.validateJSON(data['SmsMessage']);
        }

        return true;
    }


}



/**
 * @member {Array} MfaTypes
 */
Settings.prototype['MfaTypes'] = undefined;

/**
 * @member {String} SmsMessage
 */
Settings.prototype['SmsMessage'] = undefined;






export default Settings;

