/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBackendAPIRequestResourceConfig from './CreateBackendAPIRequestResourceConfig';

/**
 * The CreateBackendAPIRequest model module.
 * @module model/CreateBackendAPIRequest
 * @version 2020-08-11
 */
class CreateBackendAPIRequest {
    /**
     * Constructs a new <code>CreateBackendAPIRequest</code>.
     * @alias module:model/CreateBackendAPIRequest
     * @param backendEnvironmentName {String} The name of the backend environment.
     * @param resourceConfig {module:model/CreateBackendAPIRequestResourceConfig} 
     * @param resourceName {String} The name of this resource.
     */
    constructor(backendEnvironmentName, resourceConfig, resourceName) { 
        
        CreateBackendAPIRequest.initialize(this, backendEnvironmentName, resourceConfig, resourceName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, backendEnvironmentName, resourceConfig, resourceName) { 
        obj['backendEnvironmentName'] = backendEnvironmentName;
        obj['resourceConfig'] = resourceConfig;
        obj['resourceName'] = resourceName;
    }

    /**
     * Constructs a <code>CreateBackendAPIRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBackendAPIRequest} obj Optional instance to populate.
     * @return {module:model/CreateBackendAPIRequest} The populated <code>CreateBackendAPIRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBackendAPIRequest();

            if (data.hasOwnProperty('backendEnvironmentName')) {
                obj['backendEnvironmentName'] = ApiClient.convertToType(data['backendEnvironmentName'], 'String');
            }
            if (data.hasOwnProperty('resourceConfig')) {
                obj['resourceConfig'] = CreateBackendAPIRequestResourceConfig.constructFromObject(data['resourceConfig']);
            }
            if (data.hasOwnProperty('resourceName')) {
                obj['resourceName'] = ApiClient.convertToType(data['resourceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBackendAPIRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBackendAPIRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBackendAPIRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['backendEnvironmentName'] && !(typeof data['backendEnvironmentName'] === 'string' || data['backendEnvironmentName'] instanceof String)) {
            throw new Error("Expected the field `backendEnvironmentName` to be a primitive type in the JSON string but got " + data['backendEnvironmentName']);
        }
        // validate the optional field `resourceConfig`
        if (data['resourceConfig']) { // data not null
          CreateBackendAPIRequestResourceConfig.validateJSON(data['resourceConfig']);
        }
        // ensure the json data is a string
        if (data['resourceName'] && !(typeof data['resourceName'] === 'string' || data['resourceName'] instanceof String)) {
            throw new Error("Expected the field `resourceName` to be a primitive type in the JSON string but got " + data['resourceName']);
        }

        return true;
    }


}

CreateBackendAPIRequest.RequiredProperties = ["backendEnvironmentName", "resourceConfig", "resourceName"];

/**
 * The name of the backend environment.
 * @member {String} backendEnvironmentName
 */
CreateBackendAPIRequest.prototype['backendEnvironmentName'] = undefined;

/**
 * @member {module:model/CreateBackendAPIRequestResourceConfig} resourceConfig
 */
CreateBackendAPIRequest.prototype['resourceConfig'] = undefined;

/**
 * The name of this resource.
 * @member {String} resourceName
 */
CreateBackendAPIRequest.prototype['resourceName'] = undefined;






export default CreateBackendAPIRequest;

