/**
 * AmplifyBackend
 * AWS Amplify Admin API
 *
 * The version of the OpenAPI document: 2020-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackendAuthAppleProviderConfig model module.
 * @module model/BackendAuthAppleProviderConfig
 * @version 2020-08-11
 */
class BackendAuthAppleProviderConfig {
    /**
     * Constructs a new <code>BackendAuthAppleProviderConfig</code>.
     * Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
     * @alias module:model/BackendAuthAppleProviderConfig
     */
    constructor() { 
        
        BackendAuthAppleProviderConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackendAuthAppleProviderConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackendAuthAppleProviderConfig} obj Optional instance to populate.
     * @return {module:model/BackendAuthAppleProviderConfig} The populated <code>BackendAuthAppleProviderConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackendAuthAppleProviderConfig();

            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'String');
            }
            if (data.hasOwnProperty('KeyId')) {
                obj['KeyId'] = ApiClient.convertToType(data['KeyId'], 'String');
            }
            if (data.hasOwnProperty('PrivateKey')) {
                obj['PrivateKey'] = ApiClient.convertToType(data['PrivateKey'], 'String');
            }
            if (data.hasOwnProperty('TeamId')) {
                obj['TeamId'] = ApiClient.convertToType(data['TeamId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackendAuthAppleProviderConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackendAuthAppleProviderConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ClientId`
        if (data['ClientId']) { // data not null
          String.validateJSON(data['ClientId']);
        }
        // validate the optional field `KeyId`
        if (data['KeyId']) { // data not null
          String.validateJSON(data['KeyId']);
        }
        // validate the optional field `PrivateKey`
        if (data['PrivateKey']) { // data not null
          String.validateJSON(data['PrivateKey']);
        }
        // validate the optional field `TeamId`
        if (data['TeamId']) { // data not null
          String.validateJSON(data['TeamId']);
        }

        return true;
    }


}



/**
 * @member {String} ClientId
 */
BackendAuthAppleProviderConfig.prototype['ClientId'] = undefined;

/**
 * @member {String} KeyId
 */
BackendAuthAppleProviderConfig.prototype['KeyId'] = undefined;

/**
 * @member {String} PrivateKey
 */
BackendAuthAppleProviderConfig.prototype['PrivateKey'] = undefined;

/**
 * @member {String} TeamId
 */
BackendAuthAppleProviderConfig.prototype['TeamId'] = undefined;






export default BackendAuthAppleProviderConfig;

