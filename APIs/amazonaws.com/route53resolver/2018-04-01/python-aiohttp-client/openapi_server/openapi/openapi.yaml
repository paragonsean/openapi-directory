openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>When you create a VPC using Amazon VPC, you automatically get DNS\
    \ resolution within the VPC from Route 53 Resolver. By default, Resolver answers\
    \ DNS queries for VPC domain names such as domain names for EC2 instances or Elastic\
    \ Load Balancing load balancers. Resolver performs recursive lookups against public\
    \ name servers for all other domain names.</p> <p>You can also configure DNS resolution\
    \ between your VPC and your network over a Direct Connect or VPN connection:</p>\
    \ <p> <b>Forward DNS queries from resolvers on your network to Route 53 Resolver</b>\
    \ </p> <p>DNS resolvers on your network can forward DNS queries to Resolver in\
    \ a specified VPC. This allows your DNS resolvers to easily resolve domain names\
    \ for Amazon Web Services resources such as EC2 instances or records in a Route\
    \ 53 private hosted zone. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-network-to-vpc\"\
    >How DNS Resolvers on Your Network Forward DNS Queries to Route 53 Resolver</a>\
    \ in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Conditionally forward\
    \ queries from a VPC to resolvers on your network</b> </p> <p>You can configure\
    \ Resolver to forward queries that it receives from EC2 instances in your VPCs\
    \ to DNS resolvers on your network. To forward selected queries, you create Resolver\
    \ rules that specify the domain names for the DNS queries that you want to forward\
    \ (such as example.com), and the IP addresses of the DNS resolvers on your network\
    \ that you want to forward the queries to. If a query matches multiple rules (example.com,\
    \ acme.example.com), Resolver chooses the rule with the most specific match (acme.example.com)\
    \ and forwards the query to the IP addresses that you specified in that rule.\
    \ For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver.html#resolver-overview-forward-vpc-to-network\"\
    >How Route 53 Resolver Forwards DNS Queries from Your VPCs to Your Network</a>\
    \ in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Like Amazon VPC, Resolver\
    \ is Regional. In each Region where you have VPCs, you can choose whether to forward\
    \ queries from your VPCs to your network (outbound queries), from your network\
    \ to your VPCs (inbound queries), or both.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Route 53 Resolver
  version: 2018-04-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: route53resolver
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53resolver-2018-04-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/route53resolver/
servers:
- description: The Route53Resolver multi-region endpoint
  url: "http://route53resolver.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Route53Resolver multi-region endpoint
  url: "https://route53resolver.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Route53Resolver endpoint for China (Beijing) and China (Ningxia)
  url: "http://route53resolver.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Route53Resolver endpoint for China (Beijing) and China (Ningxia)
  url: "https://route53resolver.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=Route53Resolver.AssociateFirewallRuleGroup:
    post:
      description: "Associates a <a>FirewallRuleGroup</a> with a VPC, to provide DNS\
        \ filtering for the VPC. "
      operationId: associate_firewall_rule_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.AssociateFirewallRuleGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFirewallRuleGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateFirewallRuleGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.AssociateResolverEndpointIpAddress:
    post:
      description: "<p>Adds IP addresses to an inbound or an outbound Resolver endpoint.\
        \ If you want to add more than one IP address, submit one <code>AssociateResolverEndpointIpAddress</code>\
        \ request for each IP address.</p> <p>To remove an IP address from an endpoint,\
        \ see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverEndpointIpAddress.html\"\
        >DisassociateResolverEndpointIpAddress</a>. </p>"
      operationId: associate_resolver_endpoint_ip_address
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.AssociateResolverEndpointIpAddress
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateResolverEndpointIpAddressRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateResolverEndpointIpAddressResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.AssociateResolverQueryLogConfig:
    post:
      description: "<p>Associates an Amazon VPC with a specified query logging configuration.\
        \ Route 53 Resolver logs DNS queries that originate in all of the Amazon VPCs\
        \ that are associated with a specified query logging configuration. To associate\
        \ more than one VPC with a configuration, submit one <code>AssociateResolverQueryLogConfig</code>\
        \ request for each VPC.</p> <note> <p>The VPCs that you associate with a query\
        \ logging configuration must be in the same Region as the configuration.</p>\
        \ </note> <p>To remove a VPC from a query logging configuration, see <a href=\"\
        https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\"\
        >DisassociateResolverQueryLogConfig</a>. </p>"
      operationId: associate_resolver_query_log_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.AssociateResolverQueryLogConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateResolverQueryLogConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateResolverQueryLogConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.AssociateResolverRule:
    post:
      description: "Associates a Resolver rule with a VPC. When you associate a rule\
        \ with a VPC, Resolver forwards all DNS queries for the domain name that is\
        \ specified in the rule and that originate in the VPC. The queries are forwarded\
        \ to the IP addresses for the DNS resolvers that are specified in the rule.\
        \ For more information about rules, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\"\
        >CreateResolverRule</a>. "
      operationId: associate_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.AssociateResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateFirewallDomainList:
    post:
      description: "Creates an empty firewall domain list for use in DNS Firewall\
        \ rules. You can populate the domains for the new list with a file, using\
        \ <a>ImportFirewallDomains</a>, or with domain strings, using <a>UpdateFirewallDomains</a>. "
      operationId: create_firewall_domain_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateFirewallDomainList
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallDomainListRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFirewallDomainListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateFirewallRule:
    post:
      description: "Creates a single DNS Firewall rule in the specified rule group,\
        \ using the specified domain list."
      operationId: create_firewall_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateFirewallRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFirewallRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateFirewallRuleGroup:
    post:
      description: 'Creates an empty DNS Firewall rule group for filtering DNS network
        traffic in a VPC. You can add rules to the new rule group by calling <a>CreateFirewallRule</a>. '
      operationId: create_firewall_rule_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateFirewallRuleGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFirewallRuleGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateOutpostResolver:
    post:
      description: Creates an Route 53 Resolver on an Outpost.
      operationId: create_outpost_resolver
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateOutpostResolver
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOutpostResolverRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutpostResolverResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateResolverEndpoint:
    post:
      description: "<p>Creates a Resolver endpoint. There are two types of Resolver\
        \ endpoints, inbound and outbound:</p> <ul> <li> <p>An <i>inbound Resolver\
        \ endpoint</i> forwards DNS queries to the DNS service for a VPC from your\
        \ network.</p> </li> <li> <p>An <i>outbound Resolver endpoint</i> forwards\
        \ DNS queries from the DNS service for a VPC to your network.</p> </li> </ul>"
      operationId: create_resolver_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateResolverEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResolverEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResolverEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateResolverQueryLogConfig:
    post:
      description: "<p>Creates a Resolver query logging configuration, which defines\
        \ where you want Resolver to save DNS query logs that originate in your VPCs.\
        \ Resolver can log queries only for VPCs that are in the same Region as the\
        \ query logging configuration.</p> <p>To specify which VPCs you want to log\
        \ queries for, you use <code>AssociateResolverQueryLogConfig</code>. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html\"\
        >AssociateResolverQueryLogConfig</a>. </p> <p>You can optionally use Resource\
        \ Access Manager (RAM) to share a query logging configuration with other Amazon\
        \ Web Services accounts. The other accounts can then associate VPCs with the\
        \ configuration. The query logs that Resolver creates for a configuration\
        \ include all DNS queries that originate in all VPCs that are associated with\
        \ the configuration.</p>"
      operationId: create_resolver_query_log_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateResolverQueryLogConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResolverQueryLogConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResolverQueryLogConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.CreateResolverRule:
    post:
      description: "For DNS queries that originate in your VPCs, specifies which Resolver\
        \ endpoint the queries pass through, one domain name that you want to forward\
        \ to your network, and the IP addresses of the DNS resolvers in your network."
      operationId: create_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.CreateResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteFirewallDomainList:
    post:
      description: 'Deletes the specified domain list. '
      operationId: delete_firewall_domain_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteFirewallDomainList
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFirewallDomainListRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFirewallDomainListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteFirewallRule:
    post:
      description: Deletes the specified firewall rule.
      operationId: delete_firewall_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteFirewallRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFirewallRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFirewallRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteFirewallRuleGroup:
    post:
      description: 'Deletes the specified firewall rule group. '
      operationId: delete_firewall_rule_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteFirewallRuleGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFirewallRuleGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFirewallRuleGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteOutpostResolver:
    post:
      description: Deletes a Resolver on the Outpost.
      operationId: delete_outpost_resolver
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteOutpostResolver
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOutpostResolverRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutpostResolverResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteResolverEndpoint:
    post:
      description: "<p>Deletes a Resolver endpoint. The effect of deleting a Resolver\
        \ endpoint depends on whether it's an inbound or an outbound Resolver endpoint:</p>\
        \ <ul> <li> <p> <b>Inbound</b>: DNS queries from your network are no longer\
        \ routed to the DNS service for the specified VPC.</p> </li> <li> <p> <b>Outbound</b>:\
        \ DNS queries from a VPC are no longer routed to your network.</p> </li> </ul>"
      operationId: delete_resolver_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteResolverEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResolverEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResolverEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteResolverQueryLogConfig:
    post:
      description: "<p>Deletes a query logging configuration. When you delete a configuration,\
        \ Resolver stops logging DNS queries for all of the Amazon VPCs that are associated\
        \ with the configuration. This also applies if the query logging configuration\
        \ is shared with other Amazon Web Services accounts, and the other accounts\
        \ have associated VPCs with the shared configuration.</p> <p>Before you can\
        \ delete a query logging configuration, you must first disassociate all VPCs\
        \ from the configuration. See <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\"\
        >DisassociateResolverQueryLogConfig</a>.</p> <p>If you used Resource Access\
        \ Manager (RAM) to share a query logging configuration with other accounts,\
        \ you must stop sharing the configuration before you can delete a configuration.\
        \ The accounts that you shared the configuration with can first disassociate\
        \ VPCs that they associated with the configuration, but that's not necessary.\
        \ If you stop sharing the configuration, those VPCs are automatically disassociated\
        \ from the configuration.</p>"
      operationId: delete_resolver_query_log_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteResolverQueryLogConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResolverQueryLogConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResolverQueryLogConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DeleteResolverRule:
    post:
      description: "Deletes a Resolver rule. Before you can delete a Resolver rule,\
        \ you must disassociate it from all the VPCs that you associated the Resolver\
        \ rule with. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html\"\
        >DisassociateResolverRule</a>."
      operationId: delete_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DeleteResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DisassociateFirewallRuleGroup:
    post:
      description: "Disassociates a <a>FirewallRuleGroup</a> from a VPC, to remove\
        \ DNS filtering from the VPC. "
      operationId: disassociate_firewall_rule_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DisassociateFirewallRuleGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateFirewallRuleGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateFirewallRuleGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DisassociateResolverEndpointIpAddress:
    post:
      description: "<p>Removes IP addresses from an inbound or an outbound Resolver\
        \ endpoint. If you want to remove more than one IP address, submit one <code>DisassociateResolverEndpointIpAddress</code>\
        \ request for each IP address.</p> <p>To add an IP address to an endpoint,\
        \ see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverEndpointIpAddress.html\"\
        >AssociateResolverEndpointIpAddress</a>. </p>"
      operationId: disassociate_resolver_endpoint_ip_address
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DisassociateResolverEndpointIpAddress
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateResolverEndpointIpAddressRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateResolverEndpointIpAddressResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
          description: ResourceExistsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DisassociateResolverQueryLogConfig:
    post:
      description: "<p>Disassociates a VPC from a query logging configuration.</p>\
        \ <note> <p>Before you can delete a query logging configuration, you must\
        \ first disassociate all VPCs from the configuration. If you used Resource\
        \ Access Manager (RAM) to share a query logging configuration with other accounts,\
        \ VPCs can be disassociated from the configuration in the following ways:</p>\
        \ <ul> <li> <p>The accounts that you shared the configuration with can disassociate\
        \ VPCs from the configuration.</p> </li> <li> <p>You can stop sharing the\
        \ configuration.</p> </li> </ul> </note>"
      operationId: disassociate_resolver_query_log_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DisassociateResolverQueryLogConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateResolverQueryLogConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateResolverQueryLogConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.DisassociateResolverRule:
    post:
      description: "<p>Removes the association between a specified Resolver rule and\
        \ a specified VPC.</p> <important> <p>If you disassociate a Resolver rule\
        \ from a VPC, Resolver stops forwarding DNS queries for the domain name that\
        \ you specified in the Resolver rule. </p> </important>"
      operationId: disassociate_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.DisassociateResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetFirewallConfig:
    post:
      description: 'Retrieves the configuration of the firewall behavior provided
        by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon
        VPC). '
      operationId: get_firewall_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetFirewallConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFirewallConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFirewallConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetFirewallDomainList:
    post:
      description: Retrieves the specified firewall domain list.
      operationId: get_firewall_domain_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetFirewallDomainList
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFirewallDomainListRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFirewallDomainListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroup:
    post:
      description: 'Retrieves the specified firewall rule group. '
      operationId: get_firewall_rule_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetFirewallRuleGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFirewallRuleGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFirewallRuleGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroupAssociation:
    post:
      description: "Retrieves a firewall rule group association, which enables DNS\
        \ filtering for a VPC with one rule group. A VPC can have more than one firewall\
        \ rule group association, and a rule group can be associated with more than\
        \ one VPC."
      operationId: get_firewall_rule_group_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetFirewallRuleGroupAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFirewallRuleGroupAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFirewallRuleGroupAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetFirewallRuleGroupPolicy:
    post:
      description: 'Returns the Identity and Access Management (Amazon Web Services
        IAM) policy for sharing the specified rule group. You can use the policy to
        share the rule group using Resource Access Manager (RAM). '
      operationId: get_firewall_rule_group_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetFirewallRuleGroupPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFirewallRuleGroupPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFirewallRuleGroupPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetOutpostResolver:
    post:
      description: "Gets information about a specified Resolver on the Outpost, such\
        \ as its instance count and type, name, and the current status of the Resolver."
      operationId: get_outpost_resolver
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetOutpostResolver
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOutpostResolverRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutpostResolverResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverConfig:
    post:
      description: Retrieves the behavior configuration of Route 53 Resolver behavior
        for a single VPC from Amazon Virtual Private Cloud.
      operationId: get_resolver_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverDnssecConfig:
    post:
      description: Gets DNSSEC validation information for a specified resource.
      operationId: get_resolver_dnssec_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverDnssecConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverDnssecConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverDnssecConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverEndpoint:
    post:
      description: "Gets information about a specified Resolver endpoint, such as\
        \ whether it's an inbound or an outbound Resolver endpoint, and the current\
        \ status of the endpoint."
      operationId: get_resolver_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfig:
    post:
      description: "Gets information about a specified Resolver query logging configuration,\
        \ such as the number of VPCs that the configuration is logging queries for\
        \ and the location that logs are sent to. "
      operationId: get_resolver_query_log_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverQueryLogConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverQueryLogConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverQueryLogConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfigAssociation:
    post:
      description: "Gets information about a specified association between a Resolver\
        \ query logging configuration and an Amazon VPC. When you associate a VPC\
        \ with a query logging configuration, Resolver logs DNS queries that originate\
        \ in that VPC."
      operationId: get_resolver_query_log_config_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverQueryLogConfigAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverQueryLogConfigAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverQueryLogConfigAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverQueryLogConfigPolicy:
    post:
      description: Gets information about a query logging policy. A query logging
        policy specifies the Resolver query logging operations and resources that
        you want to allow another Amazon Web Services account to be able to use.
      operationId: get_resolver_query_log_config_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverQueryLogConfigPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverQueryLogConfigPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverQueryLogConfigPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
          description: UnknownResourceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverRule:
    post:
      description: "Gets information about a specified Resolver rule, such as the\
        \ domain name that the rule forwards DNS queries for and the ID of the outbound\
        \ Resolver endpoint that the rule is associated with."
      operationId: get_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverRuleAssociation:
    post:
      description: 'Gets information about an association between a specified Resolver
        rule and a VPC. You associate a Resolver rule and a VPC using <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>. '
      operationId: get_resolver_rule_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverRuleAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverRuleAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverRuleAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.GetResolverRulePolicy:
    post:
      description: "Gets information about the Resolver rule policy for a specified\
        \ rule. A Resolver rule policy includes the rule that you want to share with\
        \ another account, the account that you want to share the rule with, and the\
        \ Resolver operations that you want to allow the account to use. "
      operationId: get_resolver_rule_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.GetResolverRulePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResolverRulePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResolverRulePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
          description: UnknownResourceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ImportFirewallDomains:
    post:
      description: "<p>Imports domain names from a file into a domain list, for use\
        \ in a DNS firewall rule group. </p> <p>Each domain specification in your\
        \ domain list must satisfy the following requirements: </p> <ul> <li> <p>It\
        \ can optionally start with <code>*</code> (asterisk).</p> </li> <li> <p>With\
        \ the exception of the optional starting asterisk, it must only contain the\
        \ following characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>,\
        \ <code>-</code> (hyphen).</p> </li> <li> <p>It must be from 1-255 characters\
        \ in length. </p> </li> </ul>"
      operationId: import_firewall_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ImportFirewallDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportFirewallDomainsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportFirewallDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallConfigs:
    post:
      description: "<p>Retrieves the firewall configurations that you have defined.\
        \ DNS Firewall uses the configurations to manage firewall behavior for your\
        \ VPCs. </p> <p>A single call might return only a partial list of the configurations.\
        \ For information, see <code>MaxResults</code>. </p>"
      operationId: list_firewall_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallConfigsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallDomainLists:
    post:
      description: "<p>Retrieves the firewall domain lists that you have defined.\
        \ For each firewall domain list, you can retrieve the domains that are defined\
        \ for a list by calling <a>ListFirewallDomains</a>. </p> <p>A single call\
        \ to this list operation might return only a partial list of the domain lists.\
        \ For information, see <code>MaxResults</code>. </p>"
      operationId: list_firewall_domain_lists
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallDomainLists
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallDomainListsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallDomainListsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallDomains:
    post:
      description: "<p>Retrieves the domains that you have defined for the specified\
        \ firewall domain list. </p> <p>A single call might return only a partial\
        \ list of the domains. For information, see <code>MaxResults</code>. </p>"
      operationId: list_firewall_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallDomainsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallRuleGroupAssociations:
    post:
      description: "<p>Retrieves the firewall rule group associations that you have\
        \ defined. Each association enables DNS filtering for a VPC with one rule\
        \ group. </p> <p>A single call might return only a partial list of the associations.\
        \ For information, see <code>MaxResults</code>. </p>"
      operationId: list_firewall_rule_group_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallRuleGroupAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallRuleGroupAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRuleGroupAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallRuleGroups:
    post:
      description: "<p>Retrieves the minimal high-level information for the rule groups\
        \ that you have defined. </p> <p>A single call might return only a partial\
        \ list of the rule groups. For information, see <code>MaxResults</code>. </p>"
      operationId: list_firewall_rule_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallRuleGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallRuleGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRuleGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListFirewallRules:
    post:
      description: "<p>Retrieves the firewall rules that you have defined for the\
        \ specified firewall rule group. DNS Firewall uses the rules in a rule group\
        \ to filter DNS network traffic for a VPC. </p> <p>A single call might return\
        \ only a partial list of the rules. For information, see <code>MaxResults</code>.\
        \ </p>"
      operationId: list_firewall_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListFirewallRules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFirewallRulesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListOutpostResolvers:
    post:
      description: Lists all the Resolvers on Outposts that were created using the
        current Amazon Web Services account.
      operationId: list_outpost_resolvers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListOutpostResolvers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOutpostResolversRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutpostResolversResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverConfigs:
    post:
      description: Retrieves the Resolver configurations that you have defined. Route 53
        Resolver uses the configurations to manage DNS resolution behavior for your
        VPCs.
      operationId: list_resolver_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverConfigsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverDnssecConfigs:
    post:
      description: Lists the configurations for DNSSEC validation that are associated
        with the current Amazon Web Services account.
      operationId: list_resolver_dnssec_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverDnssecConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverDnssecConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverDnssecConfigsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverEndpointIpAddresses:
    post:
      description: Gets the IP addresses for a specified Resolver endpoint.
      operationId: list_resolver_endpoint_ip_addresses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverEndpointIpAddresses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverEndpointIpAddressesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverEndpointIpAddressesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverEndpoints:
    post:
      description: Lists all the Resolver endpoints that were created using the current
        Amazon Web Services account.
      operationId: list_resolver_endpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverEndpointsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverQueryLogConfigAssociations:
    post:
      description: Lists information about associations between Amazon VPCs and query
        logging configurations.
      operationId: list_resolver_query_log_config_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverQueryLogConfigAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverQueryLogConfigAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverQueryLogConfigAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverQueryLogConfigs:
    post:
      description: Lists information about the specified query logging configurations.
        Each configuration defines where you want Resolver to save DNS query logs
        and specifies the VPCs that you want to log queries for.
      operationId: list_resolver_query_log_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverQueryLogConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverQueryLogConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverQueryLogConfigsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverRuleAssociations:
    post:
      description: Lists the associations that were created between Resolver rules
        and VPCs using the current Amazon Web Services account.
      operationId: list_resolver_rule_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverRuleAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverRuleAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverRuleAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListResolverRules:
    post:
      description: Lists the Resolver rules that were created using the current Amazon
        Web Services account.
      operationId: list_resolver_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListResolverRules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResolverRulesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResolverRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.ListTagsForResource:
    post:
      description: Lists the tags that you associated with the specified resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.PutFirewallRuleGroupPolicy:
    post:
      description: 'Attaches an Identity and Access Management (Amazon Web Services
        IAM) policy for sharing the rule group. You can use the policy to share the
        rule group using Resource Access Manager (RAM). '
      operationId: put_firewall_rule_group_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.PutFirewallRuleGroupPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFirewallRuleGroupPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFirewallRuleGroupPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.PutResolverQueryLogConfigPolicy:
    post:
      description: "Specifies an Amazon Web Services account that you want to share\
        \ a query logging configuration with, the query logging configuration that\
        \ you want to share, and the operations that you want the account to be able\
        \ to perform on the configuration."
      operationId: put_resolver_query_log_config_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.PutResolverQueryLogConfigPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResolverQueryLogConfigPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResolverQueryLogConfigPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyDocument'
          description: InvalidPolicyDocument
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
          description: UnknownResourceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.PutResolverRulePolicy:
    post:
      description: "Specifies an Amazon Web Services rule that you want to share with\
        \ another account, the account that you want to share the rule with, and the\
        \ operations that you want the account to be able to perform on the rule."
      operationId: put_resolver_rule_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.PutResolverRulePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResolverRulePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResolverRulePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyDocument'
          description: InvalidPolicyDocument
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
          description: UnknownResourceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.TagResource:
    post:
      description: Adds one or more tags to a specified resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagException'
          description: InvalidTagException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UntagResource:
    post:
      description: Removes one or more tags from a specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateFirewallConfig:
    post:
      description: 'Updates the configuration of the firewall behavior provided by
        DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC). '
      operationId: update_firewall_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateFirewallConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFirewallConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateFirewallDomains:
    post:
      description: 'Updates the firewall domain list from an array of domain specifications. '
      operationId: update_firewall_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateFirewallDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallDomainsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFirewallDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateFirewallRule:
    post:
      description: 'Updates the specified firewall rule. '
      operationId: update_firewall_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateFirewallRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFirewallRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateFirewallRuleGroupAssociation:
    post:
      description: 'Changes the association of a <a>FirewallRuleGroup</a> with a VPC.
        The association enables DNS filtering for the VPC. '
      operationId: update_firewall_rule_group_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateFirewallRuleGroupAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleGroupAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFirewallRuleGroupAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateOutpostResolver:
    post:
      description: "You can use <code>UpdateOutpostResolver</code> to update the instance\
        \ count, type, or name of a Resolver on an Outpost."
      operationId: update_outpost_resolver
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateOutpostResolver
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutpostResolverRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOutpostResolverResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateResolverConfig:
    post:
      description: Updates the behavior configuration of Route 53 Resolver behavior
        for a single VPC from Amazon Virtual Private Cloud.
      operationId: update_resolver_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateResolverConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResolverConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResolverConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateResolverDnssecConfig:
    post:
      description: "Updates an existing DNSSEC validation configuration. If there\
        \ is no existing DNSSEC validation configuration, one is created."
      operationId: update_resolver_dnssec_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateResolverDnssecConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResolverDnssecConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResolverDnssecConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateResolverEndpoint:
    post:
      description: "Updates the name, or enpoint type for an inbound or an outbound\
        \ Resolver endpoint. You can only update between IPV4 and DUALSTACK, IPV6\
        \ endpoint type can't be updated to other type. "
      operationId: update_resolver_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateResolverEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResolverEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResolverEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=Route53Resolver.UpdateResolverRule:
    post:
      description: "Updates settings for a specified Resolver rule. <code>ResolverRuleId</code>\
        \ is required, and all other parameters are optional. If you don't specify\
        \ a parameter, it retains its current value."
      operationId: update_resolver_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - Route53Resolver.UpdateResolverRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResolverRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResolverRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
          description: ResourceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateFirewallRuleGroupResponse:
      example:
        FirewallRuleGroupAssociation:
          Status: ""
          FirewallRuleGroupId: ""
          Priority: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          CreatorRequestId: ""
          MutationProtection: ""
          Name: ""
          StatusMessage: ""
          VpcId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        FirewallRuleGroupAssociation:
          $ref: '#/components/schemas/AssociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation'
      title: AssociateFirewallRuleGroupResponse
      type: object
    AssociateFirewallRuleGroupRequest:
      example:
        VpcId: ""
        FirewallRuleGroupId: ""
        Priority: ""
        CreatorRequestId: ""
        MutationProtection: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
          title: FirewallRuleGroupId
        VpcId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the VPC that you want to associate
              with the rule group. '
          title: VpcId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>The setting that determines the processing order of the\
              \ rule group among the rule groups that you associate with the specified\
              \ VPC. DNS Firewall filters VPC traffic starting from the rule group\
              \ with the lowest numeric priority setting. </p> <p>You must specify\
              \ a unique priority for each rule group that you associate with a single\
              \ VPC. To make it easier to insert rule groups later, leave space between\
              \ the numbers, for example, use 101, 200, and so on. You can change\
              \ the priority setting for a rule group association after you create\
              \ it.</p> <p>The allowed values for <code>Priority</code> are between\
              \ 100 and 9900.</p>"
          title: Priority
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "A name that lets you identify the association, to manage\
              \ and use it."
          title: Name
        MutationProtection:
          allOf:
          - $ref: '#/components/schemas/MutationProtectionStatus'
          - description: "If enabled, this setting disallows modification or removal\
              \ of the association, to help prevent against accidentally altering\
              \ DNS firewall protections. When you create the association, the default\
              \ setting is <code>DISABLED</code>. "
          title: MutationProtection
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'A list of the tag keys and values that you want to associate
              with the rule group association. '
          title: Tags
      required:
      - CreatorRequestId
      - FirewallRuleGroupId
      - Name
      - Priority
      - VpcId
      title: AssociateFirewallRuleGroupRequest
      type: object
    ResourceNotFoundException: {}
    ValidationException: {}
    LimitExceededException: {}
    ConflictException: {}
    AccessDeniedException: {}
    InternalServiceErrorException: {}
    ThrottlingException: {}
    AssociateResolverEndpointIpAddressResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/AssociateResolverEndpointIpAddressResponse_ResolverEndpoint'
      title: AssociateResolverEndpointIpAddressResponse
      type: object
    AssociateResolverEndpointIpAddressRequest:
      example:
        ResolverEndpointId: ""
        IpAddress:
          IpId: ""
          Ipv6: ""
          Ip: ""
          SubnetId: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to associate
              IP addresses with.
          title: ResolverEndpointId
        IpAddress:
          $ref: '#/components/schemas/AssociateResolverEndpointIpAddressRequest_IpAddress'
      required:
      - IpAddress
      - ResolverEndpointId
      title: AssociateResolverEndpointIpAddressRequest
      type: object
    InvalidParameterException: {}
    InvalidRequestException: {}
    ResourceExistsException: {}
    AssociateResolverQueryLogConfigResponse:
      example:
        ResolverQueryLogConfigAssociation:
          Status: ""
          ResourceId: ""
          CreationTime: ""
          Error: ""
          Id: ""
          ResolverQueryLogConfigId: ""
          ErrorMessage: ""
      properties:
        ResolverQueryLogConfigAssociation:
          $ref: '#/components/schemas/AssociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation'
      title: AssociateResolverQueryLogConfigResponse
      type: object
    AssociateResolverQueryLogConfigRequest:
      example:
        ResourceId: ""
        ResolverQueryLogConfigId: ""
      properties:
        ResolverQueryLogConfigId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the query logging configuration that you want to
              associate a VPC with.
          title: ResolverQueryLogConfigId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: <p>The ID of an Amazon VPC that you want this query logging
              configuration to log queries for.</p> <note> <p>The VPCs and the query
              logging configuration must be in the same Region.</p> </note>
          title: ResourceId
      required:
      - ResolverQueryLogConfigId
      - ResourceId
      title: AssociateResolverQueryLogConfigRequest
      type: object
    AssociateResolverRuleResponse:
      example:
        ResolverRuleAssociation:
          Status: ""
          VPCId: ""
          ResolverRuleId: ""
          Id: ""
          Name: ""
          StatusMessage: ""
      properties:
        ResolverRuleAssociation:
          $ref: '#/components/schemas/AssociateResolverRuleResponse_ResolverRuleAssociation'
      title: AssociateResolverRuleResponse
      type: object
    AssociateResolverRuleRequest:
      example:
        VPCId: ""
        ResolverRuleId: ""
        Name: ""
      properties:
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "The ID of the Resolver rule that you want to associate with\
              \ the VPC. To list the existing Resolver rules, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
              >ListResolverRules</a>."
          title: ResolverRuleId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name for the association that you're creating between a
              Resolver rule and a VPC.
          title: Name
        VPCId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that you want to associate the Resolver
              rule with.
          title: VPCId
      required:
      - ResolverRuleId
      - VPCId
      title: AssociateResolverRuleRequest
      type: object
    ResourceUnavailableException: {}
    CreateFirewallDomainListResponse:
      example:
        FirewallDomainList:
          Status: ""
          CreationTime: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          DomainCount: ""
          StatusMessage: ""
      properties:
        FirewallDomainList:
          $ref: '#/components/schemas/CreateFirewallDomainListResponse_FirewallDomainList'
      title: CreateFirewallDomainListResponse
      type: object
    CreateFirewallDomainListRequest:
      example:
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ you to retry failed requests without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name that lets you identify the domain list to manage and
              use it.
          title: Name
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'A list of the tag keys and values that you want to associate
              with the domain list. '
          title: Tags
      required:
      - CreatorRequestId
      - Name
      title: CreateFirewallDomainListRequest
      type: object
    CreateFirewallRuleResponse:
      example:
        FirewallRule:
          Action: ""
          FirewallRuleGroupId: ""
          Priority: ""
          BlockOverrideDomain: ""
          FirewallDomainListId: ""
          CreationTime: ""
          ModificationTime: ""
          BlockResponse: ""
          BlockOverrideTtl: ""
          CreatorRequestId: ""
          BlockOverrideDnsType: ""
          Name: ""
      properties:
        FirewallRule:
          $ref: '#/components/schemas/CreateFirewallRuleResponse_FirewallRule'
      title: CreateFirewallRuleResponse
      type: object
    CreateFirewallRuleRequest:
      example:
        Action: ""
        FirewallRuleGroupId: ""
        Priority: ""
        BlockOverrideDomain: ""
        FirewallDomainListId: ""
        BlockResponse: ""
        BlockOverrideTtl: ""
        CreatorRequestId: ""
        BlockOverrideDnsType: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ you to retry failed requests without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group where you
              want to create the rule. '
          title: FirewallRuleGroupId
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list that you want to use in the rule. '
          title: FirewallDomainListId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>The setting that determines the processing order of the\
              \ rule in the rule group. DNS Firewall processes the rules in a rule\
              \ group by order of priority, starting from the lowest setting.</p>\
              \ <p>You must specify a unique priority for each rule in a rule group.\
              \ To make it easier to insert rules later, leave space between the numbers,\
              \ for example, use 100, 200, and so on. You can change the priority\
              \ setting for the rules in a rule group at any time.</p>"
          title: Priority
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action that DNS Firewall should take on a DNS query
              when it matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go through.</p>
              </li> <li> <p> <code>ALERT</code> - Permit the request and send metrics
              and logs to Cloud Watch.</p> </li> <li> <p> <code>BLOCK</code> - Disallow
              the request. This option requires additional details in the rule's <code>BlockResponse</code>.
              </p> </li> </ul>
          title: Action
        BlockResponse:
          allOf:
          - $ref: '#/components/schemas/BlockResponse'
          - description: "<p>The way that you want DNS Firewall to block the request,\
              \ used with the rule action setting <code>BLOCK</code>. </p> <ul> <li>\
              \ <p> <code>NODATA</code> - Respond indicating that the query was successful,\
              \ but no response is available for it.</p> </li> <li> <p> <code>NXDOMAIN</code>\
              \ - Respond indicating that the domain name that's in the query doesn't\
              \ exist.</p> </li> <li> <p> <code>OVERRIDE</code> - Provide a custom\
              \ override in the response. This option requires custom handling details\
              \ in the rule's <code>BlockOverride*</code> settings. </p> </li> </ul>\
              \ <p>This setting is required if the rule action setting is <code>BLOCK</code>.</p>"
          title: BlockResponse
        BlockOverrideDomain:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDomain'
          - description: <p>The custom DNS record to send back in response to the
              query. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.</p> <p>This setting is required if
              the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>
          title: BlockOverrideDomain
        BlockOverrideDnsType:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDnsType'
          - description: <p>The DNS record's type. This determines the format of the
              record value that you provided in <code>BlockOverrideDomain</code>.
              Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.</p> <p>This setting is required if
              the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>
          title: BlockOverrideDnsType
        BlockOverrideTtl:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideTtl'
          - description: "<p>The recommended amount of time, in seconds, for the DNS\
              \ resolver or web browser to cache the provided override record. Used\
              \ for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>\
              \ setting of <code>OVERRIDE</code>.</p> <p>This setting is required\
              \ if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>"
          title: BlockOverrideTtl
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A name that lets you identify the rule in the rule group.
          title: Name
      required:
      - Action
      - CreatorRequestId
      - FirewallDomainListId
      - FirewallRuleGroupId
      - Name
      - Priority
      title: CreateFirewallRuleRequest
      type: object
    CreateFirewallRuleGroupResponse:
      example:
        FirewallRuleGroup:
          RuleCount: ""
          Status: ""
          OwnerId: ""
          CreationTime: ""
          ShareStatus: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        FirewallRuleGroup:
          $ref: '#/components/schemas/CreateFirewallRuleGroupResponse_FirewallRuleGroup'
      title: CreateFirewallRuleGroupResponse
      type: object
    CreateFirewallRuleGroupRequest:
      example:
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "A name that lets you identify the rule group, to manage\
              \ and use it."
          title: Name
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'A list of the tag keys and values that you want to associate
              with the rule group. '
          title: Tags
      required:
      - CreatorRequestId
      - Name
      title: CreateFirewallRuleGroupRequest
      type: object
    CreateOutpostResolverResponse:
      example:
        OutpostResolver:
          Status: ""
          InstanceCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          OutpostArn: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        OutpostResolver:
          $ref: '#/components/schemas/CreateOutpostResolverResponse_OutpostResolver'
      title: CreateOutpostResolverResponse
      type: object
    CreateOutpostResolverRequest:
      example:
        InstanceCount: ""
        PreferredInstanceType: ""
        OutpostArn: ""
        CreatorRequestId: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "<p>A unique string that identifies the request and that\
              \ allows failed requests to be retried without the risk of running the\
              \ operation twice. </p> <p> <code>CreatorRequestId</code> can be any\
              \ unique string, for example, a date/time stamp.</p>"
          title: CreatorRequestId
        Name:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverName'
          - description: A friendly name that lets you easily find a configuration
              in the Resolver dashboard in the Route 53 console.
          title: Name
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceCount'
          - description: Number of Amazon EC2 instances for the Resolver on Outpost.
              The default and minimal value is 4.
          title: InstanceCount
        PreferredInstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          - description: " The Amazon EC2 instance type. If you specify this, you\
              \ must also specify a value for the <code>OutpostArn</code>. "
          title: PreferredInstanceType
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          - description: "The Amazon Resource Name (ARN) of the Outpost. If you specify\
              \ this, you must also specify a value for the <code>PreferredInstanceType</code>."
          title: OutpostArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' A string that helps identify the Route 53 Resolvers on
              Outpost. '
          title: Tags
      required:
      - CreatorRequestId
      - Name
      - OutpostArn
      - PreferredInstanceType
      title: CreateOutpostResolverRequest
      type: object
    ServiceQuotaExceededException: {}
    CreateResolverEndpointResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/CreateResolverEndpointResponse_ResolverEndpoint'
      title: CreateResolverEndpointResponse
      type: object
    CreateResolverEndpointRequest:
      example:
        IpAddresses: ""
        OutpostArn: ""
        PreferredInstanceType: ""
        ResolverEndpointType: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A friendly name that lets you easily find a configuration
              in the Resolver dashboard in the Route 53 console.
          title: Name
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The ID of one or more security groups that you want to use\
              \ to control access to this VPC. The security group that you specify\
              \ must include one or more inbound rules (for inbound Resolver endpoints)\
              \ or outbound rules (for outbound Resolver endpoints). Inbound and outbound\
              \ rules must allow TCP and UDP access. For inbound access, open port\
              \ 53. For outbound access, open the port that you're using for DNS queries\
              \ on your network."
          title: SecurityGroupIds
        Direction:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointDirection'
          - description: "<p>Specify the applicable value:</p> <ul> <li> <p> <code>INBOUND</code>:\
              \ Resolver forwards DNS queries to the DNS service for a VPC from your\
              \ network</p> </li> <li> <p> <code>OUTBOUND</code>: Resolver forwards\
              \ DNS queries from the DNS service for a VPC to your network</p> </li>\
              \ </ul>"
          title: Direction
        IpAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddressesRequest'
          - description: 'The subnets and IP addresses in your VPC that DNS queries
              originate from (for outbound endpoints) or that you forward DNS queries
              to (for inbound endpoints). The subnet ID uniquely identifies a VPC. '
          title: IpAddresses
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of the tag keys and values that you want to associate
              with the endpoint.
          title: Tags
        ResolverEndpointType:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointType'
          - description: " For the endpoint type you can choose either IPv4, IPv6,\
              \ or dual-stack. A dual-stack endpoint means that it will resolve via\
              \ both IPv4 and IPv6. This endpoint type is applied to all IP addresses. "
          title: ResolverEndpointType
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          - description: "The Amazon Resource Name (ARN) of the Outpost. If you specify\
              \ this, you must also specify a value for the <code>PreferredInstanceType</code>. "
          title: OutpostArn
        PreferredInstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          - description: "The instance type. If you specify this, you must also specify\
              \ a value for the <code>OutpostArn</code>."
          title: PreferredInstanceType
      required:
      - CreatorRequestId
      - Direction
      - IpAddresses
      - SecurityGroupIds
      title: CreateResolverEndpointRequest
      type: object
    CreateResolverQueryLogConfigResponse:
      example:
        ResolverQueryLogConfig:
          Status: ""
          OwnerId: ""
          AssociationCount: ""
          CreationTime: ""
          ShareStatus: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          DestinationArn: ""
          Name: ""
      properties:
        ResolverQueryLogConfig:
          $ref: '#/components/schemas/CreateResolverQueryLogConfigResponse_ResolverQueryLogConfig'
      title: CreateResolverQueryLogConfigResponse
      type: object
    CreateResolverQueryLogConfigRequest:
      example:
        CreatorRequestId: ""
        DestinationArn: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigName'
          - description: The name that you want to give the query logging configuration.
          title: Name
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: "<p>The ARN of the resource that you want Resolver to send\
              \ query logs. You can send query logs to an S3 bucket, a CloudWatch\
              \ Logs log group, or a Kinesis Data Firehose delivery stream. Examples\
              \ of valid values include the following:</p> <ul> <li> <p> <b>S3 bucket</b>:\
              \ </p> <p> <code>arn:aws:s3:::examplebucket</code> </p> <p>You can optionally\
              \ append a file prefix to the end of the ARN.</p> <p> <code>arn:aws:s3:::examplebucket/development/</code>\
              \ </p> </li> <li> <p> <b>CloudWatch Logs log group</b>: </p> <p> <code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code>\
              \ </p> </li> <li> <p> <b>Kinesis Data Firehose delivery stream</b>:</p>\
              \ <p> <code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code>\
              \ </p> </li> </ul>"
          title: DestinationArn
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of the tag keys and values that you want to associate
              with the query logging configuration.
          title: Tags
      required:
      - CreatorRequestId
      - DestinationArn
      - Name
      title: CreateResolverQueryLogConfigRequest
      type: object
    CreateResolverRuleResponse:
      example:
        ResolverRule:
          Status: ""
          ResolverEndpointId: ""
          DomainName: ""
          ShareStatus: ""
          RuleType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          TargetIps: ""
          StatusMessage: ""
          Name: ""
          OwnerId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        ResolverRule:
          $ref: '#/components/schemas/CreateResolverRuleResponse_ResolverRule'
      title: CreateResolverRuleResponse
      type: object
    CreateResolverRuleRequest:
      example:
        ResolverEndpointId: ""
        DomainName: ""
        RuleType: ""
        CreatorRequestId: ""
        TargetIps: ""
        Tags: ""
        Name: ""
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string that identifies the request and that allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. <code>CreatorRequestId</code> can be any unique string, for\
              \ example, a date/time stamp. "
          title: CreatorRequestId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A friendly name that lets you easily find a rule in the Resolver
              dashboard in the Route 53 console.
          title: Name
        RuleType:
          allOf:
          - $ref: '#/components/schemas/RuleTypeOption'
          - description: "<p>When you want to forward DNS queries for specified domain\
              \ name to resolvers on your network, specify <code>FORWARD</code>.</p>\
              \ <p>When you have a forwarding rule to forward DNS queries for a domain\
              \ to your network and you want Resolver to process queries for a subdomain\
              \ of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to\
              \ forward DNS queries for example.com to resolvers on your network,\
              \ you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>.\
              \ To then have Resolver process queries for apex.example.com, you create\
              \ a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p>\
              \ <p>Currently, only Resolver can create rules that have a value of\
              \ <code>RECURSIVE</code> for <code>RuleType</code>.</p>"
          title: RuleType
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: "DNS queries for this domain name are forwarded to the IP\
              \ addresses that you specify in <code>TargetIps</code>. If a query matches\
              \ multiple Resolver rules (example.com and www.example.com), outbound\
              \ DNS queries are routed using the Resolver rule that contains the most\
              \ specific domain name (www.example.com)."
          title: DomainName
        TargetIps:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: <p>The IPs that you want Resolver to forward DNS queries
              to. You can specify either Ipv4 or Ipv6 addresses but not both in the
              same rule. Separate IP addresses with a space.</p> <p> <code>TargetIps</code>
              is available only when the value of <code>Rule type</code> is <code>FORWARD</code>.</p>
          title: TargetIps
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the outbound Resolver endpoint that you want to
              use to route DNS queries to the IP addresses that you specify in <code>TargetIps</code>.
          title: ResolverEndpointId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of the tag keys and values that you want to associate
              with the endpoint.
          title: Tags
      required:
      - CreatorRequestId
      - DomainName
      - RuleType
      title: CreateResolverRuleRequest
      type: object
    DeleteFirewallDomainListResponse:
      example:
        FirewallDomainList:
          Status: ""
          CreationTime: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          DomainCount: ""
          StatusMessage: ""
      properties:
        FirewallDomainList:
          $ref: '#/components/schemas/DeleteFirewallDomainListResponse_FirewallDomainList'
      title: DeleteFirewallDomainListResponse
      type: object
    DeleteFirewallDomainListRequest:
      example:
        FirewallDomainListId: ""
      properties:
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list that you want to delete. '
          title: FirewallDomainListId
      required:
      - FirewallDomainListId
      title: DeleteFirewallDomainListRequest
      type: object
    DeleteFirewallRuleResponse:
      example:
        FirewallRule:
          Action: ""
          FirewallRuleGroupId: ""
          Priority: ""
          BlockOverrideDomain: ""
          FirewallDomainListId: ""
          CreationTime: ""
          ModificationTime: ""
          BlockResponse: ""
          BlockOverrideTtl: ""
          CreatorRequestId: ""
          BlockOverrideDnsType: ""
          Name: ""
      properties:
        FirewallRule:
          $ref: '#/components/schemas/DeleteFirewallRuleResponse_FirewallRule'
      title: DeleteFirewallRuleResponse
      type: object
    DeleteFirewallRuleRequest:
      example:
        FirewallRuleGroupId: ""
        FirewallDomainListId: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group that you
              want to delete the rule from. '
          title: FirewallRuleGroupId
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list that''s used in the rule. '
          title: FirewallDomainListId
      required:
      - FirewallDomainListId
      - FirewallRuleGroupId
      title: DeleteFirewallRuleRequest
      type: object
    DeleteFirewallRuleGroupResponse:
      example:
        FirewallRuleGroup:
          RuleCount: ""
          Status: ""
          OwnerId: ""
          CreationTime: ""
          ShareStatus: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        FirewallRuleGroup:
          $ref: '#/components/schemas/CreateFirewallRuleGroupResponse_FirewallRuleGroup'
      title: DeleteFirewallRuleGroupResponse
      type: object
    DeleteFirewallRuleGroupRequest:
      example:
        FirewallRuleGroupId: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group that you
              want to delete. '
          title: FirewallRuleGroupId
      required:
      - FirewallRuleGroupId
      title: DeleteFirewallRuleGroupRequest
      type: object
    DeleteOutpostResolverResponse:
      example:
        OutpostResolver:
          Status: ""
          InstanceCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          OutpostArn: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        OutpostResolver:
          $ref: '#/components/schemas/DeleteOutpostResolverResponse_OutpostResolver'
      title: DeleteOutpostResolverResponse
      type: object
    DeleteOutpostResolverRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: A unique string that identifies the Resolver on the Outpost.
          title: Id
      required:
      - Id
      title: DeleteOutpostResolverRequest
      type: object
    DeleteResolverEndpointResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/DeleteResolverEndpointResponse_ResolverEndpoint'
      title: DeleteResolverEndpointResponse
      type: object
    DeleteResolverEndpointRequest:
      example:
        ResolverEndpointId: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to delete.
          title: ResolverEndpointId
      required:
      - ResolverEndpointId
      title: DeleteResolverEndpointRequest
      type: object
    DeleteResolverQueryLogConfigResponse:
      example:
        ResolverQueryLogConfig:
          Status: ""
          OwnerId: ""
          AssociationCount: ""
          CreationTime: ""
          ShareStatus: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          DestinationArn: ""
          Name: ""
      properties:
        ResolverQueryLogConfig:
          $ref: '#/components/schemas/DeleteResolverQueryLogConfigResponse_ResolverQueryLogConfig'
      title: DeleteResolverQueryLogConfigResponse
      type: object
    DeleteResolverQueryLogConfigRequest:
      example:
        ResolverQueryLogConfigId: ""
      properties:
        ResolverQueryLogConfigId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the query logging configuration that you want to
              delete.
          title: ResolverQueryLogConfigId
      required:
      - ResolverQueryLogConfigId
      title: DeleteResolverQueryLogConfigRequest
      type: object
    DeleteResolverRuleResponse:
      example:
        ResolverRule:
          Status: ""
          ResolverEndpointId: ""
          DomainName: ""
          ShareStatus: ""
          RuleType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          TargetIps: ""
          StatusMessage: ""
          Name: ""
          OwnerId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        ResolverRule:
          $ref: '#/components/schemas/DeleteResolverRuleResponse_ResolverRule'
      title: DeleteResolverRuleResponse
      type: object
    DeleteResolverRuleRequest:
      example:
        ResolverRuleId: ""
      properties:
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule that you want to delete.
          title: ResolverRuleId
      required:
      - ResolverRuleId
      title: DeleteResolverRuleRequest
      type: object
    ResourceInUseException: {}
    DisassociateFirewallRuleGroupResponse:
      example:
        FirewallRuleGroupAssociation:
          Status: ""
          FirewallRuleGroupId: ""
          Priority: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          CreatorRequestId: ""
          MutationProtection: ""
          Name: ""
          StatusMessage: ""
          VpcId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        FirewallRuleGroupAssociation:
          $ref: '#/components/schemas/DisassociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation'
      title: DisassociateFirewallRuleGroupResponse
      type: object
    DisassociateFirewallRuleGroupRequest:
      example:
        FirewallRuleGroupAssociationId: ""
      properties:
        FirewallRuleGroupAssociationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
          title: FirewallRuleGroupAssociationId
      required:
      - FirewallRuleGroupAssociationId
      title: DisassociateFirewallRuleGroupRequest
      type: object
    DisassociateResolverEndpointIpAddressResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/DisassociateResolverEndpointIpAddressResponse_ResolverEndpoint'
      title: DisassociateResolverEndpointIpAddressResponse
      type: object
    DisassociateResolverEndpointIpAddressRequest:
      example:
        ResolverEndpointId: ""
        IpAddress:
          IpId: ""
          Ipv6: ""
          Ip: ""
          SubnetId: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to disassociate
              an IP address from.
          title: ResolverEndpointId
        IpAddress:
          $ref: '#/components/schemas/DisassociateResolverEndpointIpAddressRequest_IpAddress'
      required:
      - IpAddress
      - ResolverEndpointId
      title: DisassociateResolverEndpointIpAddressRequest
      type: object
    DisassociateResolverQueryLogConfigResponse:
      example:
        ResolverQueryLogConfigAssociation:
          Status: ""
          ResourceId: ""
          CreationTime: ""
          Error: ""
          Id: ""
          ResolverQueryLogConfigId: ""
          ErrorMessage: ""
      properties:
        ResolverQueryLogConfigAssociation:
          $ref: '#/components/schemas/DisassociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation'
      title: DisassociateResolverQueryLogConfigResponse
      type: object
    DisassociateResolverQueryLogConfigRequest:
      example:
        ResourceId: ""
        ResolverQueryLogConfigId: ""
      properties:
        ResolverQueryLogConfigId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the query logging configuration that you want to
              disassociate a specified VPC from.
          title: ResolverQueryLogConfigId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Amazon VPC that you want to disassociate from
              a specified query logging configuration.
          title: ResourceId
      required:
      - ResolverQueryLogConfigId
      - ResourceId
      title: DisassociateResolverQueryLogConfigRequest
      type: object
    DisassociateResolverRuleResponse:
      example:
        ResolverRuleAssociation:
          Status: ""
          VPCId: ""
          ResolverRuleId: ""
          Id: ""
          Name: ""
          StatusMessage: ""
      properties:
        ResolverRuleAssociation:
          $ref: '#/components/schemas/DisassociateResolverRuleResponse_ResolverRuleAssociation'
      title: DisassociateResolverRuleResponse
      type: object
    DisassociateResolverRuleRequest:
      example:
        VPCId: ""
        ResolverRuleId: ""
      properties:
        VPCId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that you want to disassociate the Resolver
              rule from.
          title: VPCId
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule that you want to disassociate
              from the specified VPC.
          title: ResolverRuleId
      required:
      - ResolverRuleId
      - VPCId
      title: DisassociateResolverRuleRequest
      type: object
    GetFirewallConfigResponse:
      example:
        FirewallConfig:
          OwnerId: ""
          ResourceId: ""
          FirewallFailOpen: ""
          Id: ""
      properties:
        FirewallConfig:
          $ref: '#/components/schemas/GetFirewallConfigResponse_FirewallConfig'
      title: GetFirewallConfigResponse
      type: object
    GetFirewallConfigRequest:
      example:
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC from Amazon VPC that the configuration
              is for.
          title: ResourceId
      required:
      - ResourceId
      title: GetFirewallConfigRequest
      type: object
    GetFirewallDomainListResponse:
      example:
        FirewallDomainList:
          Status: ""
          CreationTime: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          DomainCount: ""
          StatusMessage: ""
      properties:
        FirewallDomainList:
          $ref: '#/components/schemas/GetFirewallDomainListResponse_FirewallDomainList'
      title: GetFirewallDomainListResponse
      type: object
    GetFirewallDomainListRequest:
      example:
        FirewallDomainListId: ""
      properties:
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list. '
          title: FirewallDomainListId
      required:
      - FirewallDomainListId
      title: GetFirewallDomainListRequest
      type: object
    GetFirewallRuleGroupResponse:
      example:
        FirewallRuleGroup:
          RuleCount: ""
          Status: ""
          OwnerId: ""
          CreationTime: ""
          ShareStatus: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        FirewallRuleGroup:
          $ref: '#/components/schemas/CreateFirewallRuleGroupResponse_FirewallRuleGroup'
      title: GetFirewallRuleGroupResponse
      type: object
    GetFirewallRuleGroupRequest:
      example:
        FirewallRuleGroupId: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
          title: FirewallRuleGroupId
      required:
      - FirewallRuleGroupId
      title: GetFirewallRuleGroupRequest
      type: object
    GetFirewallRuleGroupAssociationResponse:
      example:
        FirewallRuleGroupAssociation:
          Status: ""
          FirewallRuleGroupId: ""
          Priority: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          CreatorRequestId: ""
          MutationProtection: ""
          Name: ""
          StatusMessage: ""
          VpcId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        FirewallRuleGroupAssociation:
          $ref: '#/components/schemas/GetFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation'
      title: GetFirewallRuleGroupAssociationResponse
      type: object
    GetFirewallRuleGroupAssociationRequest:
      example:
        FirewallRuleGroupAssociationId: ""
      properties:
        FirewallRuleGroupAssociationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
          title: FirewallRuleGroupAssociationId
      required:
      - FirewallRuleGroupAssociationId
      title: GetFirewallRuleGroupAssociationRequest
      type: object
    GetFirewallRuleGroupPolicyResponse:
      example:
        FirewallRuleGroupPolicy: ""
      properties:
        FirewallRuleGroupPolicy:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupPolicy'
          - description: 'The Identity and Access Management (Amazon Web Services
              IAM) policy for sharing the specified rule group. You can use the policy
              to share the rule group using Resource Access Manager (RAM). '
          title: FirewallRuleGroupPolicy
      title: GetFirewallRuleGroupPolicyResponse
      type: object
    GetFirewallRuleGroupPolicyRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) for the rule group.
          title: Arn
      required:
      - Arn
      title: GetFirewallRuleGroupPolicyRequest
      type: object
    GetOutpostResolverResponse:
      example:
        OutpostResolver:
          Status: ""
          InstanceCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          OutpostArn: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        OutpostResolver:
          $ref: '#/components/schemas/GetOutpostResolverResponse_OutpostResolver'
      title: GetOutpostResolverResponse
      type: object
    GetOutpostResolverRequest:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver on the Outpost.
          title: Id
      required:
      - Id
      title: GetOutpostResolverRequest
      type: object
    GetResolverConfigResponse:
      example:
        ResolverConfig:
          OwnerId: ""
          AutodefinedReverse: ""
          ResourceId: ""
          Id: ""
      properties:
        ResolverConfig:
          $ref: '#/components/schemas/GetResolverConfigResponse_ResolverConfig'
      title: GetResolverConfigResponse
      type: object
    GetResolverConfigRequest:
      example:
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: Resource ID of the Amazon VPC that you want to get information
              about.
          title: ResourceId
      required:
      - ResourceId
      title: GetResolverConfigRequest
      type: object
    GetResolverDnssecConfigResponse:
      example:
        ResolverDNSSECConfig:
          ValidationStatus: ""
          OwnerId: ""
          ResourceId: ""
          Id: ""
      properties:
        ResolverDNSSECConfig:
          $ref: '#/components/schemas/GetResolverDnssecConfigResponse_ResolverDNSSECConfig'
      title: GetResolverDnssecConfigResponse
      type: object
    GetResolverDnssecConfigRequest:
      example:
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the virtual private cloud (VPC) for the DNSSEC
              validation status.
          title: ResourceId
      required:
      - ResourceId
      title: GetResolverDnssecConfigRequest
      type: object
    GetResolverEndpointResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/GetResolverEndpointResponse_ResolverEndpoint'
      title: GetResolverEndpointResponse
      type: object
    GetResolverEndpointRequest:
      example:
        ResolverEndpointId: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to get information
              about.
          title: ResolverEndpointId
      required:
      - ResolverEndpointId
      title: GetResolverEndpointRequest
      type: object
    GetResolverQueryLogConfigResponse:
      example:
        ResolverQueryLogConfig:
          Status: ""
          OwnerId: ""
          AssociationCount: ""
          CreationTime: ""
          ShareStatus: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          DestinationArn: ""
          Name: ""
      properties:
        ResolverQueryLogConfig:
          $ref: '#/components/schemas/GetResolverQueryLogConfigResponse_ResolverQueryLogConfig'
      title: GetResolverQueryLogConfigResponse
      type: object
    GetResolverQueryLogConfigRequest:
      example:
        ResolverQueryLogConfigId: ""
      properties:
        ResolverQueryLogConfigId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver query logging configuration that you
              want to get information about.
          title: ResolverQueryLogConfigId
      required:
      - ResolverQueryLogConfigId
      title: GetResolverQueryLogConfigRequest
      type: object
    GetResolverQueryLogConfigAssociationResponse:
      example:
        ResolverQueryLogConfigAssociation:
          Status: ""
          ResourceId: ""
          CreationTime: ""
          Error: ""
          Id: ""
          ResolverQueryLogConfigId: ""
          ErrorMessage: ""
      properties:
        ResolverQueryLogConfigAssociation:
          $ref: '#/components/schemas/GetResolverQueryLogConfigAssociationResponse_ResolverQueryLogConfigAssociation'
      title: GetResolverQueryLogConfigAssociationResponse
      type: object
    GetResolverQueryLogConfigAssociationRequest:
      example:
        ResolverQueryLogConfigAssociationId: ""
      properties:
        ResolverQueryLogConfigAssociationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver query logging configuration association
              that you want to get information about.
          title: ResolverQueryLogConfigAssociationId
      required:
      - ResolverQueryLogConfigAssociationId
      title: GetResolverQueryLogConfigAssociationRequest
      type: object
    GetResolverQueryLogConfigPolicyResponse:
      example:
        ResolverQueryLogConfigPolicy: ""
      properties:
        ResolverQueryLogConfigPolicy:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigPolicy'
          - description: Information about the query logging policy for the query
              logging configuration that you specified in a <code>GetResolverQueryLogConfigPolicy</code>
              request.
          title: ResolverQueryLogConfigPolicy
      title: GetResolverQueryLogConfigPolicyResponse
      type: object
    GetResolverQueryLogConfigPolicyRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the query logging configuration that you want
              to get the query logging policy for.
          title: Arn
      required:
      - Arn
      title: GetResolverQueryLogConfigPolicyRequest
      type: object
    UnknownResourceException: {}
    GetResolverRuleResponse:
      example:
        ResolverRule:
          Status: ""
          ResolverEndpointId: ""
          DomainName: ""
          ShareStatus: ""
          RuleType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          TargetIps: ""
          StatusMessage: ""
          Name: ""
          OwnerId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        ResolverRule:
          $ref: '#/components/schemas/GetResolverRuleResponse_ResolverRule'
      title: GetResolverRuleResponse
      type: object
    GetResolverRuleRequest:
      example:
        ResolverRuleId: ""
      properties:
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule that you want to get information
              about.
          title: ResolverRuleId
      required:
      - ResolverRuleId
      title: GetResolverRuleRequest
      type: object
    GetResolverRuleAssociationResponse:
      example:
        ResolverRuleAssociation:
          Status: ""
          VPCId: ""
          ResolverRuleId: ""
          Id: ""
          Name: ""
          StatusMessage: ""
      properties:
        ResolverRuleAssociation:
          $ref: '#/components/schemas/GetResolverRuleAssociationResponse_ResolverRuleAssociation'
      title: GetResolverRuleAssociationResponse
      type: object
    GetResolverRuleAssociationRequest:
      example:
        ResolverRuleAssociationId: ""
      properties:
        ResolverRuleAssociationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule association that you want to
              get information about.
          title: ResolverRuleAssociationId
      required:
      - ResolverRuleAssociationId
      title: GetResolverRuleAssociationRequest
      type: object
    GetResolverRulePolicyResponse:
      example:
        ResolverRulePolicy: ""
      properties:
        ResolverRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ResolverRulePolicy'
          - description: The Resolver rule policy for the rule that you specified
              in a <code>GetResolverRulePolicy</code> request.
          title: ResolverRulePolicy
      title: GetResolverRulePolicyResponse
      type: object
    GetResolverRulePolicyRequest:
      example:
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ID of the Resolver rule that you want to get the Resolver
              rule policy for.
          title: Arn
      required:
      - Arn
      title: GetResolverRulePolicyRequest
      type: object
    ImportFirewallDomainsResponse:
      example:
        Status: ""
        Id: ""
        Name: ""
        StatusMessage: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The Id of the firewall domain list that DNS Firewall just
              updated.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the domain list. '
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainListStatus'
          - description: Status of the import request.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: "Additional information about the status of the list, if\
              \ available."
          title: StatusMessage
      title: ImportFirewallDomainsResponse
      type: object
    ImportFirewallDomainsRequest:
      example:
        DomainFileUrl: ""
        FirewallDomainListId: ""
        Operation: ""
      properties:
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the domain list that you want to modify with the
              import operation.
          title: FirewallDomainListId
        Operation:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainImportOperation'
          - description: "What you want DNS Firewall to do with the domains that are\
              \ listed in the file. This must be set to <code>REPLACE</code>, which\
              \ updates the domain list to exactly match the list in the file. "
          title: Operation
        DomainFileUrl:
          allOf:
          - $ref: '#/components/schemas/DomainListFileUrl'
          - description: <p>The fully qualified URL or URI of the file stored in Amazon
              Simple Storage Service (Amazon S3) that contains the list of domains
              to import.</p> <p>The file must be in an S3 bucket that's in the same
              Region as your DNS Firewall. The file must be a text file and must contain
              a single domain per line.</p>
          title: DomainFileUrl
      required:
      - DomainFileUrl
      - FirewallDomainListId
      - Operation
      title: ImportFirewallDomainsRequest
      type: object
    ListFirewallConfigsResponse:
      example:
        FirewallConfigs: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        FirewallConfigs:
          allOf:
          - $ref: '#/components/schemas/FirewallConfigList'
          - description: 'The configurations for the firewall behavior provided by
              DNS Firewall for VPCs from Amazon Virtual Private Cloud (Amazon VPC). '
          title: FirewallConfigs
      title: ListFirewallConfigsResponse
      type: object
    ListFirewallConfigsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListFirewallConfigsMaxResult'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      title: ListFirewallConfigsRequest
      type: object
    ListFirewallDomainListsResponse:
      example:
        NextToken: ""
        FirewallDomainLists: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        FirewallDomainLists:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainListMetadataList'
          - description: "<p>A list of the domain lists that you have defined. </p>\
              \ <p>This might be a partial list of the domain lists that you've defined.\
              \ For information, see <code>MaxResults</code>. </p>"
          title: FirewallDomainLists
      title: ListFirewallDomainListsResponse
      type: object
    ListFirewallDomainListsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      title: ListFirewallDomainListsRequest
      type: object
    ListFirewallDomainsResponse:
      example:
        Domains: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        Domains:
          allOf:
          - $ref: '#/components/schemas/FirewallDomains'
          - description: "<p>A list of the domains in the firewall domain list. </p>\
              \ <p>This might be a partial list of the domains that you've defined\
              \ in the domain list. For information, see <code>MaxResults</code>.\
              \ </p>"
          title: Domains
      title: ListFirewallDomainsResponse
      type: object
    ListFirewallDomainsRequest:
      example:
        NextToken: ""
        FirewallDomainListId: ""
        MaxResults: ""
      properties:
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list whose domains you want to retrieve. '
          title: FirewallDomainListId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListDomainMaxResults'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      required:
      - FirewallDomainListId
      title: ListFirewallDomainsRequest
      type: object
    ListFirewallRuleGroupAssociationsResponse:
      example:
        FirewallRuleGroupAssociations: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        FirewallRuleGroupAssociations:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupAssociations'
          - description: "<p>A list of your firewall rule group associations.</p>\
              \ <p>This might be a partial list of the associations that you have\
              \ defined. For information, see <code>MaxResults</code>. </p>"
          title: FirewallRuleGroupAssociations
      title: ListFirewallRuleGroupAssociationsResponse
      type: object
    ListFirewallRuleGroupAssociationsRequest:
      example:
        Status: ""
        VpcId: ""
        NextToken: ""
        FirewallRuleGroupId: ""
        Priority: ""
        MaxResults: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group that you
              want to retrieve the associations for. Leave this blank to retrieve
              associations for any rule group. '
          title: FirewallRuleGroupId
        VpcId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the VPC that you want to retrieve
              the associations for. Leave this blank to retrieve associations for
              any VPC. '
          title: VpcId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: 'The setting that determines the processing order of the
              rule group among the rule groups that are associated with a single VPC.
              DNS Firewall filters VPC traffic starting from the rule group with the
              lowest numeric priority setting. '
          title: Priority
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupAssociationStatus'
          - description: "The association <code>Status</code> setting that you want\
              \ DNS Firewall to filter on for the list. If you don't specify this,\
              \ then DNS Firewall returns all associations, regardless of status."
          title: Status
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      title: ListFirewallRuleGroupAssociationsRequest
      type: object
    ListFirewallRuleGroupsResponse:
      example:
        NextToken: ""
        FirewallRuleGroups: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        FirewallRuleGroups:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupMetadataList'
          - description: "<p>A list of your firewall rule groups.</p> <p>This might\
              \ be a partial list of the rule groups that you have defined. For information,\
              \ see <code>MaxResults</code>. </p>"
          title: FirewallRuleGroups
      title: ListFirewallRuleGroupsResponse
      type: object
    ListFirewallRuleGroupsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      title: ListFirewallRuleGroupsRequest
      type: object
    ListFirewallRulesResponse:
      example:
        NextToken: ""
        FirewallRules: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If objects are still available for retrieval, Resolver returns\
              \ this token in the response. To retrieve the next batch of objects,\
              \ provide this token in your next request."
          title: NextToken
        FirewallRules:
          allOf:
          - $ref: '#/components/schemas/FirewallRules'
          - description: "<p>A list of the rules that you have defined. </p> <p>This\
              \ might be a partial list of the firewall rules that you've defined.\
              \ For information, see <code>MaxResults</code>. </p>"
          title: FirewallRules
      title: ListFirewallRulesResponse
      type: object
    ListFirewallRulesRequest:
      example:
        Action: ""
        NextToken: ""
        FirewallRuleGroupId: ""
        Priority: ""
        MaxResults: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group that you
              want to retrieve the rules for. '
          title: FirewallRuleGroupId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>Optional additional filter for the rules to retrieve.</p>\
              \ <p>The setting that determines the processing order of the rules in\
              \ a rule group. DNS Firewall processes the rules in a rule group by\
              \ order of priority, starting from the lowest setting.</p>"
          title: Priority
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: "<p>Optional additional filter for the rules to retrieve.</p>\
              \ <p>The action that DNS Firewall should take on a DNS query when it\
              \ matches one of the domains in the rule's domain list:</p> <ul> <li>\
              \ <p> <code>ALLOW</code> - Permit the request to go through.</p> </li>\
              \ <li> <p> <code>ALERT</code> - Permit the request to go through but\
              \ send an alert to the logs.</p> </li> <li> <p> <code>BLOCK</code> -\
              \ Disallow the request. If this is specified, additional handling details\
              \ are provided in the rule's <code>BlockResponse</code> setting. </p>\
              \ </li> </ul>"
          title: Action
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of objects that you want Resolver\
              \ to return for this request. If more objects are available, in the\
              \ response, Resolver provides a <code>NextToken</code> value that you\
              \ can use in a subsequent call to get the next batch of objects.</p>\
              \ <p>If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 objects. </p>"
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first call to this list request, omit this value.</p>\
              \ <p>When you request a list of objects, Resolver returns at most the\
              \ number of objects specified in <code>MaxResults</code>. If more objects\
              \ are available for retrieval, Resolver returns a <code>NextToken</code>\
              \ value in the response. To retrieve the next batch of objects, use\
              \ the token that was returned for the prior request in your next request.</p>"
          title: NextToken
      required:
      - FirewallRuleGroupId
      title: ListFirewallRulesRequest
      type: object
    ListOutpostResolversResponse:
      example:
        NextToken: ""
        OutpostResolvers: ""
      properties:
        OutpostResolvers:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverList'
          - description: "The Resolvers on Outposts that were created by using the\
              \ current Amazon Web Services account, and that match the specified\
              \ filters, if any."
          title: OutpostResolvers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> Resolvers match the\
              \ specified criteria, you can submit another <code>ListOutpostResolver</code>\
              \ request to get the next group of results. In the next request, specify\
              \ the value of <code>NextToken</code> from the previous response."
          title: NextToken
      title: ListOutpostResolversResponse
      type: object
    ListOutpostResolversRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OutpostArn: ""
      properties:
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          - description: The Amazon Resource Name (ARN) of the Outpost.
          title: OutpostArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of Resolvers on the Outpost that you\
              \ want to return in the response to a <code>ListOutpostResolver</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ the request returns up to 100 Resolvers."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListOutpostResolver</code> request,\
              \ omit this value.</p> <p/>"
          title: NextToken
      title: ListOutpostResolversRequest
      type: object
    ListResolverConfigsResponse:
      example:
        NextToken: ""
        ResolverConfigs: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>If a response includes the last of the Resolver configurations\
              \ that are associated with the current Amazon Web Services account,\
              \ <code>NextToken</code> doesn't appear in the response.</p> <p>If a\
              \ response doesn't include the last of the configurations, you can get\
              \ more configurations by submitting another <code>ListResolverConfigs</code>\
              \ request. Get the value of <code>NextToken</code> that Amazon Route\_\
              53 returned in the previous response and include it in <code>NextToken</code>\
              \ in the next request.</p>"
          title: NextToken
        ResolverConfigs:
          allOf:
          - $ref: '#/components/schemas/ResolverConfigList'
          - description: An array that contains one <code>ResolverConfigs</code> element
              for each Resolver configuration that is associated with the current
              Amazon Web Services account.
          title: ResolverConfigs
      title: ListResolverConfigsResponse
      type: object
    ListResolverConfigsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResolverConfigsMaxResult'
          - description: "The maximum number of Resolver configurations that you want\
              \ to return in the response to a <code>ListResolverConfigs</code> request.\
              \ If you don't specify a value for <code>MaxResults</code>, up to 100\
              \ Resolver configurations are returned."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>(Optional) If the current Amazon Web Services account\
              \ has more than <code>MaxResults</code> Resolver configurations, use\
              \ <code>NextToken</code> to get the second and subsequent pages of results.</p>\
              \ <p>For the first <code>ListResolverConfigs</code> request, omit this\
              \ value.</p> <p>For the second and subsequent requests, get the value\
              \ of <code>NextToken</code> from the previous response and specify that\
              \ value for <code>NextToken</code> in the request.</p>"
          title: NextToken
      title: ListResolverConfigsRequest
      type: object
    InvalidNextTokenException: {}
    ListResolverDnssecConfigsResponse:
      example:
        NextToken: ""
        ResolverDnssecConfigs: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>If a response includes the last of the DNSSEC configurations\
              \ that are associated with the current Amazon Web Services account,\
              \ <code>NextToken</code> doesn't appear in the response.</p> <p>If a\
              \ response doesn't include the last of the configurations, you can get\
              \ more configurations by submitting another <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResolverDnssecConfigs.html\"\
              >ListResolverDnssecConfigs</a> request. Get the value of <code>NextToken</code>\
              \ that Amazon Route 53 returned in the previous response and include\
              \ it in <code>NextToken</code> in the next request.</p>"
          title: NextToken
        ResolverDnssecConfigs:
          allOf:
          - $ref: '#/components/schemas/ResolverDnssecConfigList'
          - description: An array that contains one <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResolverDnssecConfig.html">ResolverDnssecConfig</a>
              element for each configuration for DNSSEC validation that is associated
              with the current Amazon Web Services account.
          title: ResolverDnssecConfigs
      title: ListResolverDnssecConfigsResponse
      type: object
    ListResolverDnssecConfigsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: " <i>Optional</i>: An integer that specifies the maximum\
              \ number of DNSSEC configuration results that you want Amazon Route\
              \ 53 to return. If you don't specify a value for <code>MaxResults</code>,\
              \ Route 53 returns up to 100 configuration per page."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>(Optional) If the current Amazon Web Services account\
              \ has more than <code>MaxResults</code> DNSSEC configurations, use <code>NextToken</code>\
              \ to get the second and subsequent pages of results.</p> <p>For the\
              \ first <code>ListResolverDnssecConfigs</code> request, omit this value.</p>\
              \ <p>For the second and subsequent requests, get the value of <code>NextToken</code>\
              \ from the previous response and specify that value for <code>NextToken</code>\
              \ in the request.</p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: An optional specification to return a subset of objects.
          title: Filters
      title: ListResolverDnssecConfigsRequest
      type: object
    ListResolverEndpointIpAddressesResponse:
      example:
        IpAddresses: ""
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the specified endpoint has more than <code>MaxResults</code>\
              \ IP addresses, you can submit another <code>ListResolverEndpointIpAddresses</code>\
              \ request to get the next group of IP addresses. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The value that you specified for <code>MaxResults</code>
              in the request.
          title: MaxResults
        IpAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddressesResponse'
          - description: Information about the IP addresses in your VPC that DNS queries
              originate from (for outbound endpoints) or that you forward DNS queries
              to (for inbound endpoints).
          title: IpAddresses
      title: ListResolverEndpointIpAddressesResponse
      type: object
    ListResolverEndpointIpAddressesRequest:
      example:
        ResolverEndpointId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to get IP addresses
              for.
          title: ResolverEndpointId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of IP addresses that you want to return\
              \ in the response to a <code>ListResolverEndpointIpAddresses</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ Resolver returns up to 100 IP addresses. "
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverEndpointIpAddresses</code>\
              \ request, omit this value.</p> <p>If the specified Resolver endpoint\
              \ has more than <code>MaxResults</code> IP addresses, you can submit\
              \ another <code>ListResolverEndpointIpAddresses</code> request to get\
              \ the next group of IP addresses. In the next request, specify the value\
              \ of <code>NextToken</code> from the previous response. </p>"
          title: NextToken
      required:
      - ResolverEndpointId
      title: ListResolverEndpointIpAddressesRequest
      type: object
    ListResolverEndpointsResponse:
      example:
        NextToken: ""
        MaxResults: ""
        ResolverEndpoints: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> IP addresses match\
              \ the specified criteria, you can submit another <code>ListResolverEndpoint</code>\
              \ request to get the next group of results. In the next request, specify\
              \ the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The value that you specified for <code>MaxResults</code>
              in the request.
          title: MaxResults
        ResolverEndpoints:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpoints'
          - description: "The Resolver endpoints that were created by using the current\
              \ Amazon Web Services account, and that match the specified filters,\
              \ if any."
          title: ResolverEndpoints
      title: ListResolverEndpointsResponse
      type: object
    ListResolverEndpointsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of Resolver endpoints that you want to\
              \ return in the response to a <code>ListResolverEndpoints</code> request.\
              \ If you don't specify a value for <code>MaxResults</code>, Resolver\
              \ returns up to 100 Resolver endpoints. "
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverEndpoints</code> request,\
              \ omit this value.</p> <p>If you have more than <code>MaxResults</code>\
              \ Resolver endpoints, you can submit another <code>ListResolverEndpoints</code>\
              \ request to get the next group of Resolver endpoints. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An optional specification to return a subset of Resolver\
              \ endpoints, such as all inbound Resolver endpoints.</p> <note> <p>If\
              \ you submit a second or subsequent <code>ListResolverEndpoints</code>\
              \ request and specify the <code>NextToken</code> parameter, you must\
              \ use the same values for <code>Filters</code>, if any, as in the previous\
              \ request.</p> </note>"
          title: Filters
      title: ListResolverEndpointsRequest
      type: object
    ListResolverQueryLogConfigAssociationsResponse:
      example:
        TotalCount: ""
        NextToken: ""
        ResolverQueryLogConfigAssociations: ""
        TotalFilteredCount: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more than <code>MaxResults</code> query logging\
              \ associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code>\
              \ request to get the next group of associations. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "The total number of query logging associations that were\
              \ created by the current account in the specified Region. This count\
              \ can differ from the number of associations that are returned in a\
              \ <code>ListResolverQueryLogConfigAssociations</code> response, depending\
              \ on the values that you specify in the request."
          title: TotalCount
        TotalFilteredCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "The total number of query logging associations that were\
              \ created by the current account in the specified Region and that match\
              \ the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code>\
              \ request. For the total number of associations that were created by\
              \ the current account in the specified Region, see <code>TotalCount</code>."
          title: TotalFilteredCount
        ResolverQueryLogConfigAssociations:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigAssociationList'
          - description: A list that contains one <code>ResolverQueryLogConfigAssociations</code>
              element for each query logging association that matches the values that
              you specified for <code>Filter</code>.
          title: ResolverQueryLogConfigAssociations
      title: ListResolverQueryLogConfigAssociationsResponse
      type: object
    ListResolverQueryLogConfigAssociationsRequest:
      example:
        Filters: ""
        NextToken: ""
        SortBy: ""
        MaxResults: ""
        SortOrder: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of query logging associations that you\
              \ want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ Resolver returns up to 100 query logging associations. "
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverQueryLogConfigAssociations</code>\
              \ request, omit this value.</p> <p>If there are more than <code>MaxResults</code>\
              \ query logging associations that match the values that you specify\
              \ for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code>\
              \ request to get the next group of associations. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An optional specification to return a subset of query\
              \ logging associations.</p> <note> <p>If you submit a second or subsequent\
              \ <code>ListResolverQueryLogConfigAssociations</code> request and specify\
              \ the <code>NextToken</code> parameter, you must use the same values\
              \ for <code>Filters</code>, if any, as in the previous request.</p>\
              \ </note>"
          title: Filters
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortByKey'
          - description: "<p>The element that you want Resolver to sort query logging\
              \ associations by. </p> <note> <p>If you submit a second or subsequent\
              \ <code>ListResolverQueryLogConfigAssociations</code> request and specify\
              \ the <code>NextToken</code> parameter, you must use the same value\
              \ for <code>SortBy</code>, if any, as in the previous request.</p> </note>\
              \ <p>Valid values include the following elements:</p> <ul> <li> <p>\
              \ <code>CreationTime</code>: The ID of the query logging association.</p>\
              \ </li> <li> <p> <code>Error</code>: If the value of <code>Status</code>\
              \ is <code>FAILED</code>, the value of <code>Error</code> indicates\
              \ the cause: </p> <ul> <li> <p> <code>DESTINATION_NOT_FOUND</code>:\
              \ The specified destination (for example, an Amazon S3 bucket) was deleted.</p>\
              \ </li> <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow\
              \ sending logs to the destination.</p> </li> </ul> <p>If <code>Status</code>\
              \ is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p>\
              \ </li> <li> <p> <code>Id</code>: The ID of the query logging association</p>\
              \ </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the\
              \ query logging configuration</p> </li> <li> <p> <code>ResourceId</code>:\
              \ The ID of the VPC that is associated with the query logging configuration</p>\
              \ </li> <li> <p> <code>Status</code>: The current status of the configuration.\
              \ Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>:\
              \ Resolver is creating an association between an Amazon VPC and a query\
              \ logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The\
              \ association between an Amazon VPC and a query logging configuration\
              \ was successfully created. Resolver is logging queries that originate\
              \ in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver\
              \ is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>:\
              \ Resolver either couldn't create or couldn't delete the query logging\
              \ association. Here are two common causes:</p> <ul> <li> <p>The specified\
              \ destination (for example, an Amazon S3 bucket) was deleted.</p> </li>\
              \ <li> <p>Permissions don't allow sending logs to the destination.</p>\
              \ </li> </ul> </li> </ul> </li> </ul>"
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>If you specified a value for <code>SortBy</code>, the\
              \ order that you want query logging associations to be listed in, <code>ASCENDING</code>\
              \ or <code>DESCENDING</code>.</p> <note> <p>If you submit a second or\
              \ subsequent <code>ListResolverQueryLogConfigAssociations</code> request\
              \ and specify the <code>NextToken</code> parameter, you must use the\
              \ same value for <code>SortOrder</code>, if any, as in the previous\
              \ request.</p> </note>"
          title: SortOrder
      title: ListResolverQueryLogConfigAssociationsRequest
      type: object
    ListResolverQueryLogConfigsResponse:
      example:
        TotalCount: ""
        ResolverQueryLogConfigs: ""
        NextToken: ""
        TotalFilteredCount: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If there are more than <code>MaxResults</code> query logging\
              \ configurations, you can submit another <code>ListResolverQueryLogConfigs</code>\
              \ request to get the next group of configurations. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "The total number of query logging configurations that were\
              \ created by the current account in the specified Region. This count\
              \ can differ from the number of query logging configurations that are\
              \ returned in a <code>ListResolverQueryLogConfigs</code> response, depending\
              \ on the values that you specify in the request."
          title: TotalCount
        TotalFilteredCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: "The total number of query logging configurations that were\
              \ created by the current account in the specified Region and that match\
              \ the filters that were specified in the <code>ListResolverQueryLogConfigs</code>\
              \ request. For the total number of query logging configurations that\
              \ were created by the current account in the specified Region, see <code>TotalCount</code>."
          title: TotalFilteredCount
        ResolverQueryLogConfigs:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigList'
          - description: A list that contains one <code>ResolverQueryLogConfig</code>
              element for each query logging configuration that matches the values
              that you specified for <code>Filter</code>.
          title: ResolverQueryLogConfigs
      title: ListResolverQueryLogConfigsResponse
      type: object
    ListResolverQueryLogConfigsRequest:
      example:
        Filters: ""
        NextToken: ""
        SortBy: ""
        MaxResults: ""
        SortOrder: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of query logging configurations that\
              \ you want to return in the response to a <code>ListResolverQueryLogConfigs</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ Resolver returns up to 100 query logging configurations. "
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverQueryLogConfigs</code>\
              \ request, omit this value.</p> <p>If there are more than <code>MaxResults</code>\
              \ query logging configurations that match the values that you specify\
              \ for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code>\
              \ request to get the next group of configurations. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An optional specification to return a subset of query\
              \ logging configurations.</p> <note> <p>If you submit a second or subsequent\
              \ <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code>\
              \ parameter, you must use the same values for <code>Filters</code>,\
              \ if any, as in the previous request.</p> </note>"
          title: Filters
        SortBy:
          allOf:
          - $ref: '#/components/schemas/SortByKey'
          - description: "<p>The element that you want Resolver to sort query logging\
              \ configurations by. </p> <note> <p>If you submit a second or subsequent\
              \ <code>ListResolverQueryLogConfigs</code> request and specify the <code>NextToken</code>\
              \ parameter, you must use the same value for <code>SortBy</code>, if\
              \ any, as in the previous request.</p> </note> <p>Valid values include\
              \ the following elements:</p> <ul> <li> <p> <code>Arn</code>: The ARN\
              \ of the query logging configuration</p> </li> <li> <p> <code>AssociationCount</code>:\
              \ The number of VPCs that are associated with the specified configuration\
              \ </p> </li> <li> <p> <code>CreationTime</code>: The date and time that\
              \ Resolver returned when the configuration was created</p> </li> <li>\
              \ <p> <code>CreatorRequestId</code>: The value that was specified for\
              \ <code>CreatorRequestId</code> when the configuration was created</p>\
              \ </li> <li> <p> <code>DestinationArn</code>: The location that logs\
              \ are sent to</p> </li> <li> <p> <code>Id</code>: The ID of the configuration</p>\
              \ </li> <li> <p> <code>Name</code>: The name of the configuration</p>\
              \ </li> <li> <p> <code>OwnerId</code>: The Amazon Web Services account\
              \ number of the account that created the configuration</p> </li> <li>\
              \ <p> <code>ShareStatus</code>: Whether the configuration is shared\
              \ with other Amazon Web Services accounts or shared with the current\
              \ account by another Amazon Web Services account. Sharing is configured\
              \ through Resource Access Manager (RAM).</p> </li> <li> <p> <code>Status</code>:\
              \ The current status of the configuration. Valid values include the\
              \ following:</p> <ul> <li> <p> <code>CREATING</code>: Resolver is creating\
              \ the query logging configuration.</p> </li> <li> <p> <code>CREATED</code>:\
              \ The query logging configuration was successfully created. Resolver\
              \ is logging queries that originate in the specified VPC.</p> </li>\
              \ <li> <p> <code>DELETING</code>: Resolver is deleting this query logging\
              \ configuration.</p> </li> <li> <p> <code>FAILED</code>: Resolver either\
              \ couldn't create or couldn't delete the query logging configuration.\
              \ Here are two common causes:</p> <ul> <li> <p>The specified destination\
              \ (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>Permissions\
              \ don't allow sending logs to the destination.</p> </li> </ul> </li>\
              \ </ul> </li> </ul>"
          title: SortBy
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: "<p>If you specified a value for <code>SortBy</code>, the\
              \ order that you want query logging configurations to be listed in,\
              \ <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note> <p>If\
              \ you submit a second or subsequent <code>ListResolverQueryLogConfigs</code>\
              \ request and specify the <code>NextToken</code> parameter, you must\
              \ use the same value for <code>SortOrder</code>, if any, as in the previous\
              \ request.</p> </note>"
          title: SortOrder
      title: ListResolverQueryLogConfigsRequest
      type: object
    ListResolverRuleAssociationsResponse:
      example:
        NextToken: ""
        MaxResults: ""
        ResolverRuleAssociations: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> rule associations match\
              \ the specified criteria, you can submit another <code>ListResolverRuleAssociation</code>\
              \ request to get the next group of results. In the next request, specify\
              \ the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The value that you specified for <code>MaxResults</code>
              in the request.
          title: MaxResults
        ResolverRuleAssociations:
          allOf:
          - $ref: '#/components/schemas/ResolverRuleAssociations'
          - description: "The associations that were created between Resolver rules\
              \ and VPCs using the current Amazon Web Services account, and that match\
              \ the specified filters, if any."
          title: ResolverRuleAssociations
      title: ListResolverRuleAssociationsResponse
      type: object
    ListResolverRuleAssociationsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of rule associations that you want to\
              \ return in the response to a <code>ListResolverRuleAssociations</code>\
              \ request. If you don't specify a value for <code>MaxResults</code>,\
              \ Resolver returns up to 100 rule associations. "
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverRuleAssociation</code>\
              \ request, omit this value.</p> <p>If you have more than <code>MaxResults</code>\
              \ rule associations, you can submit another <code>ListResolverRuleAssociation</code>\
              \ request to get the next group of rule associations. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An optional specification to return a subset of Resolver\
              \ rules, such as Resolver rules that are associated with the same VPC\
              \ ID.</p> <note> <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code>\
              \ request and specify the <code>NextToken</code> parameter, you must\
              \ use the same values for <code>Filters</code>, if any, as in the previous\
              \ request.</p> </note>"
          title: Filters
      title: ListResolverRuleAssociationsRequest
      type: object
    ListResolverRulesResponse:
      example:
        NextToken: ""
        ResolverRules: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> Resolver rules match\
              \ the specified criteria, you can submit another <code>ListResolverRules</code>\
              \ request to get the next group of results. In the next request, specify\
              \ the value of <code>NextToken</code> from the previous response. "
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The value that you specified for <code>MaxResults</code>
              in the request.
          title: MaxResults
        ResolverRules:
          allOf:
          - $ref: '#/components/schemas/ResolverRules'
          - description: "The Resolver rules that were created using the current Amazon\
              \ Web Services account and that match the specified filters, if any."
          title: ResolverRules
      title: ListResolverRulesResponse
      type: object
    ListResolverRulesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of Resolver rules that you want to return\
              \ in the response to a <code>ListResolverRules</code> request. If you\
              \ don't specify a value for <code>MaxResults</code>, Resolver returns\
              \ up to 100 Resolver rules."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListResolverRules</code> request,\
              \ omit this value.</p> <p>If you have more than <code>MaxResults</code>\
              \ Resolver rules, you can submit another <code>ListResolverRules</code>\
              \ request to get the next group of Resolver rules. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          - description: "<p>An optional specification to return a subset of Resolver\
              \ rules, such as all Resolver rules that are associated with the same\
              \ Resolver endpoint.</p> <note> <p>If you submit a second or subsequent\
              \ <code>ListResolverRules</code> request and specify the <code>NextToken</code>\
              \ parameter, you must use the same values for <code>Filters</code>,\
              \ if any, as in the previous request.</p> </note>"
          title: Filters
      title: ListResolverRulesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that are associated with the resource that you specified
              in the <code>ListTagsForResource</code> request.
          title: Tags
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If more than <code>MaxResults</code> tags match the specified\
              \ criteria, you can submit another <code>ListTagsForResource</code>\
              \ request to get the next group of results. In the next request, specify\
              \ the value of <code>NextToken</code> from the previous response. "
          title: NextToken
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the resource that you
              want to list tags for.
          title: ResourceArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of tags that you want to return in the\
              \ response to a <code>ListTagsForResource</code> request. If you don't\
              \ specify a value for <code>MaxResults</code>, Resolver returns up to\
              \ 100 tags."
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "<p>For the first <code>ListTagsForResource</code> request,\
              \ omit this value.</p> <p>If you have more than <code>MaxResults</code>\
              \ tags, you can submit another <code>ListTagsForResource</code> request\
              \ to get the next group of tags for the resource. In the next request,\
              \ specify the value of <code>NextToken</code> from the previous response.\
              \ </p>"
          title: NextToken
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    PutFirewallRuleGroupPolicyResponse:
      example:
        ReturnValue: ""
      properties:
        ReturnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p/>
          title: ReturnValue
      title: PutFirewallRuleGroupPolicyResponse
      type: object
    PutFirewallRuleGroupPolicyRequest:
      example:
        FirewallRuleGroupPolicy: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) for the rule group that you
              want to share.
          title: Arn
        FirewallRuleGroupPolicy:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupPolicy'
          - description: The Identity and Access Management (Amazon Web Services IAM)
              policy to attach to the rule group.
          title: FirewallRuleGroupPolicy
      required:
      - Arn
      - FirewallRuleGroupPolicy
      title: PutFirewallRuleGroupPolicyRequest
      type: object
    PutResolverQueryLogConfigPolicyResponse:
      description: The response to a <code>PutResolverQueryLogConfigPolicy</code>
        request.
      example:
        ReturnValue: ""
      properties:
        ReturnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the <code>PutResolverQueryLogConfigPolicy</code>
              request was successful.
          title: ReturnValue
      title: PutResolverQueryLogConfigPolicyResponse
      type: object
    PutResolverQueryLogConfigPolicyRequest:
      example:
        ResolverQueryLogConfigPolicy: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the account that you want
              to share rules with.
          title: Arn
        ResolverQueryLogConfigPolicy:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigPolicy'
          - description: "<p>An Identity and Access Management policy statement that\
              \ lists the query logging configurations that you want to share with\
              \ another Amazon Web Services account and the operations that you want\
              \ the account to be able to perform. You can specify the following operations\
              \ in the <code>Actions</code> section of the statement:</p> <ul> <li>\
              \ <p> <code>route53resolver:AssociateResolverQueryLogConfig</code> </p>\
              \ </li> <li> <p> <code>route53resolver:DisassociateResolverQueryLogConfig</code>\
              \ </p> </li> <li> <p> <code>route53resolver:ListResolverQueryLogConfigs</code>\
              \ </p> </li> </ul> <p>In the <code>Resource</code> section of the statement,\
              \ you specify the ARNs for the query logging configurations that you\
              \ want to share with the account that you specified in <code>Arn</code>.\
              \ </p>"
          title: ResolverQueryLogConfigPolicy
      required:
      - Arn
      - ResolverQueryLogConfigPolicy
      title: PutResolverQueryLogConfigPolicyRequest
      type: object
    InvalidPolicyDocument: {}
    PutResolverRulePolicyResponse:
      description: The response to a <code>PutResolverRulePolicy</code> request.
      example:
        ReturnValue: ""
      properties:
        ReturnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the <code>PutResolverRulePolicy</code> request was
              successful.
          title: ReturnValue
      title: PutResolverRulePolicyResponse
      type: object
    PutResolverRulePolicyRequest:
      example:
        ResolverRulePolicy: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the rule that you want
              to share with another account.
          title: Arn
        ResolverRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ResolverRulePolicy'
          - description: "<p>An Identity and Access Management policy statement that\
              \ lists the rules that you want to share with another Amazon Web Services\
              \ account and the operations that you want the account to be able to\
              \ perform. You can specify the following operations in the <code>Action</code>\
              \ section of the statement:</p> <ul> <li> <p> <code>route53resolver:GetResolverRule</code>\
              \ </p> </li> <li> <p> <code>route53resolver:AssociateResolverRule</code>\
              \ </p> </li> <li> <p> <code>route53resolver:DisassociateResolverRule</code>\
              \ </p> </li> <li> <p> <code>route53resolver:ListResolverRules</code>\
              \ </p> </li> <li> <p> <code>route53resolver:ListResolverRuleAssociations</code>\
              \ </p> </li> </ul> <p>In the <code>Resource</code> section of the statement,\
              \ specify the ARN for the rule that you want to share with another account.\
              \ Specify the same ARN that you specified in <code>Arn</code>.</p>"
          title: ResolverRulePolicy
      required:
      - Arn
      - ResolverRulePolicy
      title: PutResolverRulePolicyRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) for the resource that\
              \ you want to add tags to. To get the ARN for a resource, use the applicable\
              \ <code>Get</code> or <code>List</code> command: </p> <ul> <li> <p>\
              \ <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
              >GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\"\
              >GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\"\
              >GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\"\
              >ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\"\
              >ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
              >ListResolverRules</a> </p> </li> </ul>"
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that you want to add to the specified resource.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    InvalidTagException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The Amazon Resource Name (ARN) for the resource that\
              \ you want to remove tags from. To get the ARN for a resource, use the\
              \ applicable <code>Get</code> or <code>List</code> command: </p> <ul>\
              \ <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
              >GetResolverEndpoint</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\"\
              >GetResolverRule</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html\"\
              >GetResolverRuleAssociation</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\"\
              >ListResolverEndpoints</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\"\
              >ListResolverRuleAssociations</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
              >ListResolverRules</a> </p> </li> </ul>"
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tags that you want to remove to the specified resource.
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateFirewallConfigResponse:
      example:
        FirewallConfig:
          OwnerId: ""
          ResourceId: ""
          FirewallFailOpen: ""
          Id: ""
      properties:
        FirewallConfig:
          $ref: '#/components/schemas/UpdateFirewallConfigResponse_FirewallConfig'
      title: UpdateFirewallConfigResponse
      type: object
    UpdateFirewallConfigRequest:
      example:
        ResourceId: ""
        FirewallFailOpen: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that the configuration is for.
          title: ResourceId
        FirewallFailOpen:
          allOf:
          - $ref: '#/components/schemas/FirewallFailOpenStatus'
          - description: "<p>Determines how Route 53 Resolver handles queries during\
              \ failures, for example when all traffic that is sent to DNS Firewall\
              \ fails to receive a reply. </p> <ul> <li> <p>By default, fail open\
              \ is disabled, which means the failure mode is closed. This approach\
              \ favors security over availability. DNS Firewall blocks queries that\
              \ it is unable to evaluate properly. </p> </li> <li> <p>If you enable\
              \ this option, the failure mode is open. This approach favors availability\
              \ over security. DNS Firewall allows queries to proceed if it is unable\
              \ to properly evaluate them. </p> </li> </ul> <p>This behavior is only\
              \ enforced for VPCs that have at least one DNS Firewall rule group association.\
              \ </p>"
          title: FirewallFailOpen
      required:
      - FirewallFailOpen
      - ResourceId
      title: UpdateFirewallConfigRequest
      type: object
    UpdateFirewallDomainsResponse:
      example:
        Status: ""
        Id: ""
        Name: ""
        StatusMessage: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the firewall domain list that DNS Firewall just
              updated.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the domain list. '
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainListStatus'
          - description: Status of the <code>UpdateFirewallDomains</code> request.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: "Additional information about the status of the list, if\
              \ available."
          title: StatusMessage
      title: UpdateFirewallDomainsResponse
      type: object
    UpdateFirewallDomainsRequest:
      example:
        Domains: ""
        FirewallDomainListId: ""
        Operation: ""
      properties:
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list whose domains you want to update. '
          title: FirewallDomainListId
        Operation:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainUpdateOperation'
          - description: "<p>What you want DNS Firewall to do with the domains that\
              \ you are providing: </p> <ul> <li> <p> <code>ADD</code> - Add the domains\
              \ to the ones that are already in the domain list. </p> </li> <li> <p>\
              \ <code>REMOVE</code> - Search the domain list for the domains and remove\
              \ them from the list.</p> </li> <li> <p> <code>REPLACE</code> - Update\
              \ the domain list to exactly match the list that you are providing.\
              \ </p> </li> </ul>"
          title: Operation
        Domains:
          allOf:
          - $ref: '#/components/schemas/FirewallDomains'
          - description: "<p>A list of domains to use in the update operation.</p>\
              \ <important> <p>There is a limit of 1000 domains per request.</p> </important>\
              \ <p>Each domain specification in your domain list must satisfy the\
              \ following requirements: </p> <ul> <li> <p>It can optionally start\
              \ with <code>*</code> (asterisk).</p> </li> <li> <p>With the exception\
              \ of the optional starting asterisk, it must only contain the following\
              \ characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>,\
              \ <code>-</code> (hyphen).</p> </li> <li> <p>It must be from 1-255 characters\
              \ in length. </p> </li> </ul>"
          title: Domains
      required:
      - Domains
      - FirewallDomainListId
      - Operation
      title: UpdateFirewallDomainsRequest
      type: object
    UpdateFirewallRuleResponse:
      example:
        FirewallRule:
          Action: ""
          FirewallRuleGroupId: ""
          Priority: ""
          BlockOverrideDomain: ""
          FirewallDomainListId: ""
          CreationTime: ""
          ModificationTime: ""
          BlockResponse: ""
          BlockOverrideTtl: ""
          CreatorRequestId: ""
          BlockOverrideDnsType: ""
          Name: ""
      properties:
        FirewallRule:
          $ref: '#/components/schemas/UpdateFirewallRuleResponse_FirewallRule'
      title: UpdateFirewallRuleResponse
      type: object
    UpdateFirewallRuleRequest:
      example:
        Action: ""
        FirewallRuleGroupId: ""
        Priority: ""
        BlockOverrideDomain: ""
        FirewallDomainListId: ""
        BlockResponse: ""
        BlockOverrideTtl: ""
        BlockOverrideDnsType: ""
        Name: ""
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group for the
              rule. '
          title: FirewallRuleGroupId
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list to use in the rule. '
          title: FirewallDomainListId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>The setting that determines the processing order of the\
              \ rule in the rule group. DNS Firewall processes the rules in a rule\
              \ group by order of priority, starting from the lowest setting.</p>\
              \ <p>You must specify a unique priority for each rule in a rule group.\
              \ To make it easier to insert rules later, leave space between the numbers,\
              \ for example, use 100, 200, and so on. You can change the priority\
              \ setting for the rules in a rule group at any time.</p>"
          title: Priority
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action that DNS Firewall should take on a DNS query
              when it matches one of the domains in the rule's domain list:</p> <ul>
              <li> <p> <code>ALLOW</code> - Permit the request to go through.</p>
              </li> <li> <p> <code>ALERT</code> - Permit the request to go through
              but send an alert to the logs.</p> </li> <li> <p> <code>BLOCK</code>
              - Disallow the request. This option requires additional details in the
              rule's <code>BlockResponse</code>. </p> </li> </ul>
          title: Action
        BlockResponse:
          allOf:
          - $ref: '#/components/schemas/BlockResponse'
          - description: "<p>The way that you want DNS Firewall to block the request.\
              \ Used for the rule action setting <code>BLOCK</code>.</p> <ul> <li>\
              \ <p> <code>NODATA</code> - Respond indicating that the query was successful,\
              \ but no response is available for it.</p> </li> <li> <p> <code>NXDOMAIN</code>\
              \ - Respond indicating that the domain name that's in the query doesn't\
              \ exist.</p> </li> <li> <p> <code>OVERRIDE</code> - Provide a custom\
              \ override in the response. This option requires custom handling details\
              \ in the rule's <code>BlockOverride*</code> settings. </p> </li> </ul>"
          title: BlockResponse
        BlockOverrideDomain:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDomain'
          - description: The custom DNS record to send back in response to the query.
              Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
          title: BlockOverrideDomain
        BlockOverrideDnsType:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDnsType'
          - description: The DNS record's type. This determines the format of the
              record value that you provided in <code>BlockOverrideDomain</code>.
              Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
          title: BlockOverrideDnsType
        BlockOverrideTtl:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideTtl'
          - description: "The recommended amount of time, in seconds, for the DNS\
              \ resolver or web browser to cache the provided override record. Used\
              \ for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>\
              \ setting of <code>OVERRIDE</code>."
          title: BlockOverrideTtl
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the rule.
          title: Name
      required:
      - FirewallDomainListId
      - FirewallRuleGroupId
      title: UpdateFirewallRuleRequest
      type: object
    UpdateFirewallRuleGroupAssociationResponse:
      example:
        FirewallRuleGroupAssociation:
          Status: ""
          FirewallRuleGroupId: ""
          Priority: ""
          ManagedOwnerName: ""
          ModificationTime: ""
          CreatorRequestId: ""
          MutationProtection: ""
          Name: ""
          StatusMessage: ""
          VpcId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        FirewallRuleGroupAssociation:
          $ref: '#/components/schemas/UpdateFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation'
      title: UpdateFirewallRuleGroupAssociationResponse
      type: object
    UpdateFirewallRuleGroupAssociationRequest:
      example:
        FirewallRuleGroupAssociationId: ""
        Priority: ""
        MutationProtection: ""
        Name: ""
      properties:
        FirewallRuleGroupAssociationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The identifier of the <a>FirewallRuleGroupAssociation</a>. '
          title: FirewallRuleGroupAssociationId
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>The setting that determines the processing order of the\
              \ rule group among the rule groups that you associate with the specified\
              \ VPC. DNS Firewall filters VPC traffic starting from the rule group\
              \ with the lowest numeric priority setting. </p> <p>You must specify\
              \ a unique priority for each rule group that you associate with a single\
              \ VPC. To make it easier to insert rule groups later, leave space between\
              \ the numbers, for example, use 100, 200, and so on. You can change\
              \ the priority setting for a rule group association after you create\
              \ it.</p>"
          title: Priority
        MutationProtection:
          allOf:
          - $ref: '#/components/schemas/MutationProtectionStatus'
          - description: "If enabled, this setting disallows modification or removal\
              \ of the association, to help prevent against accidentally altering\
              \ DNS firewall protections. "
          title: MutationProtection
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the rule group association.
          title: Name
      required:
      - FirewallRuleGroupAssociationId
      title: UpdateFirewallRuleGroupAssociationRequest
      type: object
    UpdateOutpostResolverResponse:
      example:
        OutpostResolver:
          Status: ""
          InstanceCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          OutpostArn: ""
          ModificationTime: ""
          Id: ""
          Arn: ""
          CreatorRequestId: ""
          Name: ""
          StatusMessage: ""
      properties:
        OutpostResolver:
          $ref: '#/components/schemas/UpdateOutpostResolverResponse_OutpostResolver'
      title: UpdateOutpostResolverResponse
      type: object
    UpdateOutpostResolverRequest:
      example:
        InstanceCount: ""
        PreferredInstanceType: ""
        Id: ""
        Name: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: A unique string that identifies Resolver on an Outpost.
          title: Id
        Name:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverName'
          - description: Name of the Resolver on the Outpost.
          title: Name
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceCount'
          - description: The Amazon EC2 instance count for a Resolver on the Outpost.
          title: InstanceCount
        PreferredInstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          - description: ' Amazon EC2 instance type. '
          title: PreferredInstanceType
      required:
      - Id
      title: UpdateOutpostResolverRequest
      type: object
    UpdateResolverConfigResponse:
      example:
        ResolverConfig:
          OwnerId: ""
          AutodefinedReverse: ""
          ResourceId: ""
          Id: ""
      properties:
        ResolverConfig:
          $ref: '#/components/schemas/UpdateResolverConfigResponse_ResolverConfig'
      title: UpdateResolverConfigResponse
      type: object
    UpdateResolverConfigRequest:
      example:
        ResourceId: ""
        AutodefinedReverseFlag: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: Resource ID of the Amazon VPC that you want to update the
              Resolver configuration for.
          title: ResourceId
        AutodefinedReverseFlag:
          allOf:
          - $ref: '#/components/schemas/AutodefinedReverseFlag'
          - description: "<p>Indicates whether or not the Resolver will create autodefined\
              \ rules for reverse DNS lookups. This is enabled by default. Disabling\
              \ this option will also affect EC2-Classic instances using ClassicLink.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html\"\
              >ClassicLink</a> in the <i>Amazon EC2 guide</i>.</p> <important> <p>We\
              \ are retiring EC2-Classic on August 15, 2022. We recommend that you\
              \ migrate from EC2-Classic to a VPC. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html\"\
              >Migrate from EC2-Classic to a VPC</a> in the <i>Amazon EC2 guide</i>\
              \ and the blog <a href=\"http://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/\"\
              >EC2-Classic Networking is Retiring – Here’s How to Prepare</a>.</p>\
              \ </important> <note> <p>It can take some time for the status change\
              \ to be completed.</p> </note> <p/>"
          title: AutodefinedReverseFlag
      required:
      - AutodefinedReverseFlag
      - ResourceId
      title: UpdateResolverConfigRequest
      type: object
    UpdateResolverDnssecConfigResponse:
      example:
        ResolverDNSSECConfig:
          ValidationStatus: ""
          OwnerId: ""
          ResourceId: ""
          Id: ""
      properties:
        ResolverDNSSECConfig:
          $ref: '#/components/schemas/UpdateResolverDnssecConfigResponse_ResolverDNSSECConfig'
      title: UpdateResolverDnssecConfigResponse
      type: object
    UpdateResolverDnssecConfigRequest:
      example:
        Validation: ""
        ResourceId: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the virtual private cloud (VPC) that you're updating
              the DNSSEC validation status for.
          title: ResourceId
        Validation:
          allOf:
          - $ref: '#/components/schemas/Validation'
          - description: The new value that you are specifying for DNSSEC validation
              for the VPC. The value can be <code>ENABLE</code> or <code>DISABLE</code>.
              Be aware that it can take time for a validation status change to be
              completed.
          title: Validation
      required:
      - ResourceId
      - Validation
      title: UpdateResolverDnssecConfigRequest
      type: object
    UpdateResolverEndpointResponse:
      example:
        ResolverEndpoint:
          Status: ""
          OutpostArn: ""
          ResolverEndpointType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          SecurityGroupIds: ""
          Direction: ""
          Name: ""
          StatusMessage: ""
          IpAddressCount: ""
          CreationTime: ""
          PreferredInstanceType: ""
          Id: ""
          Arn: ""
          HostVPCId: ""
      properties:
        ResolverEndpoint:
          $ref: '#/components/schemas/UpdateResolverEndpointResponse_ResolverEndpoint'
      title: UpdateResolverEndpointResponse
      type: object
    UpdateResolverEndpointRequest:
      example:
        ResolverEndpointId: ""
        UpdateIpAddresses: ""
        ResolverEndpointType: ""
        Name: ""
      properties:
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint that you want to update.
          title: ResolverEndpointId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the Resolver endpoint that you want to update.
          title: Name
        ResolverEndpointType:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointType'
          - description: <p> Specifies the endpoint type for what type of IP address
              the endpoint uses to forward DNS queries. </p> <p>Updating to <code>IPV6</code>
              type isn't currently supported.</p>
          title: ResolverEndpointType
        UpdateIpAddresses:
          allOf:
          - $ref: '#/components/schemas/UpdateIpAddresses'
          - description: " Specifies the IPv6 address when you update the Resolver\
              \ endpoint from IPv4 to dual-stack. If you don't specify an IPv6 address,\
              \ one will be automatically chosen from your subnet. "
          title: UpdateIpAddresses
      required:
      - ResolverEndpointId
      title: UpdateResolverEndpointRequest
      type: object
    UpdateResolverRuleResponse:
      example:
        ResolverRule:
          Status: ""
          ResolverEndpointId: ""
          DomainName: ""
          ShareStatus: ""
          RuleType: ""
          ModificationTime: ""
          CreatorRequestId: ""
          TargetIps: ""
          StatusMessage: ""
          Name: ""
          OwnerId: ""
          CreationTime: ""
          Id: ""
          Arn: ""
      properties:
        ResolverRule:
          $ref: '#/components/schemas/UpdateResolverRuleResponse_ResolverRule'
      title: UpdateResolverRuleResponse
      type: object
    UpdateResolverRuleRequest:
      example:
        Config:
          ResolverEndpointId: ""
          TargetIps: ""
          Name: ""
        ResolverRuleId: ""
      properties:
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule that you want to update.
          title: ResolverRuleId
        Config:
          $ref: '#/components/schemas/UpdateResolverRuleRequest_Config'
      required:
      - Config
      - ResolverRuleId
      title: UpdateResolverRuleRequest
      type: object
    AccountId:
      maxLength: 32
      minLength: 12
      type: string
    Action:
      enum:
      - ALLOW
      - BLOCK
      - ALERT
      title: Action
      type: string
    Arn:
      maxLength: 255
      minLength: 1
      type: string
    CreatorRequestId:
      maxLength: 255
      minLength: 1
      type: string
    ResourceId:
      maxLength: 64
      minLength: 1
      title: ResourceId
      type: string
    Priority:
      type: integer
    Name:
      maxLength: 64
      pattern: "(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)"
      type: string
    MutationProtectionStatus:
      enum:
      - ENABLED
      - DISABLED
      title: MutationProtectionStatus
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      type: array
    FirewallRuleGroupAssociation:
      description: "An association between a firewall rule group and a VPC, which\
        \ enables DNS filtering for the VPC. "
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The identifier for the association.
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the firewall rule group
              association.
          title: Arn
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group. '
          title: FirewallRuleGroupId
        VpcId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the VPC that is associated with
              the rule group. '
          title: VpcId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the association.
          title: Name
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: 'The setting that determines the processing order of the
              rule group among the rule groups that are associated with a single VPC.
              DNS Firewall filters VPC traffic starting from rule group with the lowest
              numeric priority setting. '
          title: Priority
        MutationProtection:
          allOf:
          - $ref: '#/components/schemas/MutationProtectionStatus'
          - description: "If enabled, this setting disallows modification or removal\
              \ of the association, to help prevent against accidentally altering\
              \ DNS firewall protections. "
          title: MutationProtection
        ManagedOwnerName:
          allOf:
          - $ref: '#/components/schemas/ServicePrinciple'
          - description: "The owner of the association, used only for associations\
              \ that are not managed by you. If you use Firewall Manager to manage\
              \ your DNS Firewalls, then this reports Firewall Manager as the managed\
              \ owner."
          title: ManagedOwnerName
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupAssociationStatus'
          - description: The current status of the association.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: "Additional information about the status of the response,\
              \ if available."
          title: StatusMessage
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the association was created, in Unix\
              \ time format and Coordinated Universal Time (UTC). "
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the association was last modified,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
      title: FirewallRuleGroupAssociation
      type: object
    IpAddressUpdate:
      description: "In an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html\"\
        >UpdateResolverEndpoint</a> request, information about an IP address to update."
      properties:
        IpId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: " <i>Only when removing an IP address from a Resolver endpoint</i>:\
              \ The ID of the IP address that you want to remove. To get this ID,\
              \ use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
              >GetResolverEndpoint</a>."
          title: IpId
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          - description: "The ID of the subnet that includes the IP address that you\
              \ want to update. To get this ID, use <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
              >GetResolverEndpoint</a>."
          title: SubnetId
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: The new IPv4 address.
          title: Ip
        Ipv6:
          allOf:
          - $ref: '#/components/schemas/Ipv6'
          - description: ' The new IPv6 address. '
          title: Ipv6
      title: IpAddressUpdate
      type: object
    ResolverEndpoint:
      description: "In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\"\
        >CreateResolverEndpoint</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverEndpoint.html\"\
        >DeleteResolverEndpoint</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
        >GetResolverEndpoint</a>, Updates the name, or ResolverEndpointType for an\
        \ endpoint, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html\"\
        >UpdateResolverEndpoint</a> request, a complex type that contains settings\
        \ for an existing inbound or outbound Resolver endpoint."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver endpoint.
          title: Id
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: A unique string that identifies the request that created
              the Resolver endpoint. The <code>CreatorRequestId</code> allows failed
              requests to be retried without the risk of running the operation twice.
          title: CreatorRequestId
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) for the Resolver endpoint.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name that you assigned to the Resolver endpoint when
              you submitted a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>
              request.
          title: Name
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The ID of one or more security groups that control access\
              \ to this VPC. The security group must include one or more inbound rules\
              \ (for inbound endpoints) or outbound rules (for outbound endpoints).\
              \ Inbound and outbound rules must allow TCP and UDP access. For inbound\
              \ access, open port 53. For outbound access, open the port that you're\
              \ using for DNS queries on your network."
          title: SecurityGroupIds
        Direction:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointDirection'
          - description: "<p>Indicates whether the Resolver endpoint allows inbound\
              \ or outbound DNS queries:</p> <ul> <li> <p> <code>INBOUND</code>: allows\
              \ DNS queries to your VPC from your network</p> </li> <li> <p> <code>OUTBOUND</code>:\
              \ allows DNS queries from your VPC to your network</p> </li> </ul>"
          title: Direction
        IpAddressCount:
          allOf:
          - $ref: '#/components/schemas/IpAddressCount'
          - description: The number of IP addresses that the Resolver endpoint can
              use for DNS queries.
          title: IpAddressCount
        HostVPCId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that you want to create the Resolver endpoint
              in.
          title: HostVPCId
        Status:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointStatus'
          - description: "<p>A code that specifies the current status of the Resolver\
              \ endpoint. Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>:\
              \ Resolver is creating and configuring one or more Amazon VPC network\
              \ interfaces for this endpoint.</p> </li> <li> <p> <code>OPERATIONAL</code>:\
              \ The Amazon VPC network interfaces for this endpoint are correctly\
              \ configured and able to pass inbound or outbound DNS queries between\
              \ your network and Resolver.</p> </li> <li> <p> <code>UPDATING</code>:\
              \ Resolver is associating or disassociating one or more network interfaces\
              \ with this endpoint.</p> </li> <li> <p> <code>AUTO_RECOVERING</code>:\
              \ Resolver is trying to recover one or more of the network interfaces\
              \ that are associated with this endpoint. During the recovery process,\
              \ the endpoint functions with limited capacity because of the limit\
              \ on the number of DNS queries per IP address (per network interface).\
              \ For the current limit, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver\"\
              >Limits on Route 53 Resolver</a>.</p> </li> <li> <p> <code>ACTION_NEEDED</code>:\
              \ This endpoint is unhealthy, and Resolver can't automatically recover\
              \ it. To resolve the problem, we recommend that you check each IP address\
              \ that you associated with the endpoint. For each IP address that isn't\
              \ available, add another IP address and then delete the IP address that\
              \ isn't available. (An endpoint must always include at least two IP\
              \ addresses.) A status of <code>ACTION_NEEDED</code> can have a variety\
              \ of causes. Here are two common causes:</p> <ul> <li> <p>One or more\
              \ of the network interfaces that are associated with the endpoint were\
              \ deleted using Amazon VPC.</p> </li> <li> <p>The network interface\
              \ couldn't be created for some reason that's outside the control of\
              \ Resolver.</p> </li> </ul> </li> <li> <p> <code>DELETING</code>: Resolver\
              \ is deleting this endpoint and the associated network interfaces.</p>\
              \ </li> </ul>"
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A detailed description of the status of the Resolver endpoint.
          title: StatusMessage
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the endpoint was created, in Unix\
              \ time format and Coordinated Universal Time (UTC)."
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the endpoint was last modified, in\
              \ Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
        ResolverEndpointType:
          allOf:
          - $ref: '#/components/schemas/ResolverEndpointType'
          - description: ' The Resolver endpoint IP address type. '
          title: ResolverEndpointType
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          - description: The ARN (Amazon Resource Name) for the Outpost.
          title: OutpostArn
        PreferredInstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          - description: ' The Amazon EC2 instance type. '
          title: PreferredInstanceType
      title: ResolverEndpoint
      type: object
    ResolverQueryLogConfigAssociation:
      description: "In the response to an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html\"\
        >AssociateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html\"\
        >DisassociateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfigAssociation.html\"\
        >GetResolverQueryLogConfigAssociation</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\"\
        >ListResolverQueryLogConfigAssociations</a>, request, a complex type that\
        \ contains settings for a specified association between an Amazon VPC and\
        \ a query logging configuration."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the query logging association.
          title: Id
        ResolverQueryLogConfigId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the query logging configuration that a VPC is associated
              with.
          title: ResolverQueryLogConfigId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Amazon VPC that is associated with the query
              logging configuration.
          title: ResourceId
        Status:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigAssociationStatus'
          - description: "<p>The status of the specified query logging association.\
              \ Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>:\
              \ Resolver is creating an association between an Amazon VPC and a query\
              \ logging configuration.</p> </li> <li> <p> <code>CREATED</code>: The\
              \ association between an Amazon VPC and a query logging configuration\
              \ was successfully created. Resolver is logging queries that originate\
              \ in the specified VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver\
              \ is deleting this query logging association.</p> </li> <li> <p> <code>FAILED</code>:\
              \ Resolver either couldn't create or couldn't delete the query logging\
              \ association.</p> </li> </ul>"
          title: Status
        Error:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigAssociationError'
          - description: "<p>If the value of <code>Status</code> is <code>FAILED</code>,\
              \ the value of <code>Error</code> indicates the cause:</p> <ul> <li>\
              \ <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination\
              \ (for example, an Amazon S3 bucket) was deleted.</p> </li> <li> <p>\
              \ <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to\
              \ the destination.</p> </li> </ul> <p>If the value of <code>Status</code>\
              \ is a value other than <code>FAILED</code>, <code>Error</code> is null.\
              \ </p>"
          title: Error
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigAssociationErrorMessage'
          - description: "Contains additional information about the error. If the\
              \ value or <code>Error</code> is null, the value of <code>ErrorMessage</code>\
              \ also is null."
          title: ErrorMessage
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the VPC was associated with the query\
              \ logging configuration, in Unix time format and Coordinated Universal\
              \ Time (UTC)."
          title: CreationTime
      title: ResolverQueryLogConfigAssociation
      type: object
    ResolverRuleAssociation:
      description: "In the response to an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html\"\
        >AssociateResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html\"\
        >DisassociateResolverRule</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\"\
        >ListResolverRuleAssociations</a> request, provides information about an association\
        \ between a Resolver rule and a VPC. The association determines which DNS\
        \ queries that originate in the VPC are forwarded to your network. "
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the association between a Resolver rule and a VPC.
              Resolver assigns this value when you submit an <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>
              request.
          title: Id
        ResolverRuleId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver rule that you associated with the
              VPC that is specified by <code>VPCId</code>.
          title: ResolverRuleId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of an association between a Resolver rule and a
              VPC.
          title: Name
        VPCId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that you associated the Resolver rule with.
          title: VPCId
        Status:
          allOf:
          - $ref: '#/components/schemas/ResolverRuleAssociationStatus'
          - description: A code that specifies the current status of the association
              between a Resolver rule and a VPC.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A detailed description of the status of the association between
              a Resolver rule and a VPC.
          title: StatusMessage
      title: ResolverRuleAssociation
      type: object
    AutodefinedReverseFlag:
      enum:
      - ENABLE
      - DISABLE
      - USE_LOCAL_RESOURCE_SETTING
      title: AutodefinedReverseFlag
      type: string
    BlockOverrideDnsType:
      enum:
      - CNAME
      title: BlockOverrideDnsType
      type: string
    BlockOverrideDomain:
      maxLength: 255
      minLength: 1
      type: string
    BlockOverrideTtl:
      maximum: 604800
      minimum: 0
      type: integer
    BlockResponse:
      enum:
      - NODATA
      - NXDOMAIN
      - OVERRIDE
      title: BlockResponse
      type: string
    Boolean:
      type: boolean
    Count:
      type: integer
    FirewallDomainList:
      description: "<p>High-level information about a list of firewall domains for\
        \ use in a <a>FirewallRule</a>. This is returned by <a>GetFirewallDomainList</a>.</p>\
        \ <p>To retrieve the domains that are defined for this domain list, call <a>ListFirewallDomains</a>.</p>"
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list. '
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the firewall domain list.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the domain list. '
          title: Name
        DomainCount:
          allOf:
          - $ref: '#/components/schemas/Unsigned'
          - description: The number of domain names that are specified in the domain
              list.
          title: DomainCount
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallDomainListStatus'
          - description: 'The status of the domain list. '
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: "Additional information about the status of the list, if\
              \ available."
          title: StatusMessage
        ManagedOwnerName:
          allOf:
          - $ref: '#/components/schemas/ServicePrinciple'
          - description: "The owner of the list, used only for lists that are not\
              \ managed by you. For example, the managed domain list <code>AWSManagedDomainsMalwareDomainList</code>\
              \ has the managed owner name <code>Route 53 Resolver DNS Firewall</code>."
          title: ManagedOwnerName
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the domain list was created, in Unix\
              \ time format and Coordinated Universal Time (UTC). "
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the domain list was last modified,\
              \ in Unix time format and Coordinated Universal Time (UTC). "
          title: ModificationTime
      title: FirewallDomainList
      type: object
    FirewallRuleGroup:
      description: "High-level information for a firewall rule group. A firewall rule\
        \ group is a collection of rules that DNS Firewall uses to filter DNS network\
        \ traffic for a VPC. To retrieve the rules for the rule group, call <a>ListFirewallRules</a>."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the rule group. '
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) of the rule group.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the rule group.
          title: Name
        RuleCount:
          allOf:
          - $ref: '#/components/schemas/Unsigned'
          - description: The number of rules in the rule group.
          title: RuleCount
        Status:
          allOf:
          - $ref: '#/components/schemas/FirewallRuleGroupStatus'
          - description: 'The status of the domain list. '
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: "Additional information about the status of the rule group,\
              \ if available."
          title: StatusMessage
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "The Amazon Web Services account ID for the account that\
              \ created the rule group. When a rule group is shared with your account,\
              \ this is the account that has shared the rule group with you. "
          title: OwnerId
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        ShareStatus:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: "Whether the rule group is shared with other Amazon Web Services\
              \ accounts, or was shared with the current account by another Amazon\
              \ Web Services account. Sharing is configured through Resource Access\
              \ Manager (RAM)."
          title: ShareStatus
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the rule group was created, in Unix\
              \ time format and Coordinated Universal Time (UTC). "
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the rule group was last modified,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
      title: FirewallRuleGroup
      type: object
    FirewallRule:
      description: A single firewall rule in a rule group.
      properties:
        FirewallRuleGroupId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The unique identifier of the firewall rule group of the
              rule. '
          title: FirewallRuleGroupId
        FirewallDomainListId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list that''s used in the rule. '
          title: FirewallDomainListId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the rule. '
          title: Name
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "The priority of the rule in the rule group. This value must\
              \ be unique within the rule group. DNS Firewall processes the rules\
              \ in a rule group by order of priority, starting from the lowest setting."
          title: Priority
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: "<p>The action that DNS Firewall should take on a DNS query\
              \ when it matches one of the domains in the rule's domain list:</p>\
              \ <ul> <li> <p> <code>ALLOW</code> - Permit the request to go through.</p>\
              \ </li> <li> <p> <code>ALERT</code> - Permit the request to go through\
              \ but send an alert to the logs.</p> </li> <li> <p> <code>BLOCK</code>\
              \ - Disallow the request. If this is specified, additional handling\
              \ details are provided in the rule's <code>BlockResponse</code> setting.\
              \ </p> </li> </ul>"
          title: Action
        BlockResponse:
          allOf:
          - $ref: '#/components/schemas/BlockResponse'
          - description: "<p>The way that you want DNS Firewall to block the request.\
              \ Used for the rule action setting <code>BLOCK</code>.</p> <ul> <li>\
              \ <p> <code>NODATA</code> - Respond indicating that the query was successful,\
              \ but no response is available for it.</p> </li> <li> <p> <code>NXDOMAIN</code>\
              \ - Respond indicating that the domain name that's in the query doesn't\
              \ exist.</p> </li> <li> <p> <code>OVERRIDE</code> - Provide a custom\
              \ override in the response. This option requires custom handling details\
              \ in the rule's <code>BlockOverride*</code> settings. </p> </li> </ul>"
          title: BlockResponse
        BlockOverrideDomain:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDomain'
          - description: The custom DNS record to send back in response to the query.
              Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
          title: BlockOverrideDomain
        BlockOverrideDnsType:
          allOf:
          - $ref: '#/components/schemas/BlockOverrideDnsType'
          - description: The DNS record's type. This determines the format of the
              record value that you provided in <code>BlockOverrideDomain</code>.
              Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>
              setting of <code>OVERRIDE</code>.
          title: BlockOverrideDnsType
        BlockOverrideTtl:
          allOf:
          - $ref: '#/components/schemas/Unsigned'
          - description: "The recommended amount of time, in seconds, for the DNS\
              \ resolver or web browser to cache the provided override record. Used\
              \ for the rule action <code>BLOCK</code> with a <code>BlockResponse</code>\
              \ setting of <code>OVERRIDE</code>."
          title: BlockOverrideTtl
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of executing\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the rule was created, in Unix time\
              \ format and Coordinated Universal Time (UTC). "
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the rule was last modified, in Unix\
              \ time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
      title: FirewallRule
      type: object
    OutpostResolverName:
      maxLength: 255
      minLength: 1
      type: string
    InstanceCount:
      type: integer
    OutpostInstanceType:
      maxLength: 255
      minLength: 1
      type: string
    OutpostArn:
      maxLength: 255
      minLength: 1
      pattern: "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/op-[a-f0-9]{17}$"
      type: string
    OutpostResolver:
      description: A complex type that contains settings for an existing Resolver
        on an Outpost.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) for the Resolver on an Outpost.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the Outpost Resolver was created,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the Outpost Resolver was modified,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: A unique string that identifies the request that created
              the Resolver endpoint. The <code>CreatorRequestId</code> allows failed
              requests to be retried without the risk of running the operation twice.
          title: CreatorRequestId
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Resolver on Outpost.
          title: Id
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceCount'
          - description: Amazon EC2 instance count for the Resolver on the Outpost.
          title: InstanceCount
        PreferredInstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          - description: ' The Amazon EC2 instance type. '
          title: PreferredInstanceType
        Name:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverName'
          - description: Name of the Resolver.
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverStatus'
          - description: Status of the Resolver.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/OutpostResolverStatusMessage'
          - description: A detailed description of the Resolver.
          title: StatusMessage
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          - description: The ARN (Amazon Resource Name) for the Outpost.
          title: OutpostArn
      title: OutpostResolver
      type: object
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/ResourceId'
      type: array
    ResolverEndpointDirection:
      enum:
      - INBOUND
      - OUTBOUND
      title: ResolverEndpointDirection
      type: string
    IpAddressesRequest:
      items:
        $ref: '#/components/schemas/IpAddressRequest'
      maxItems: 20
      minItems: 1
      type: array
    ResolverEndpointType:
      enum:
      - IPV6
      - IPV4
      - DUALSTACK
      title: ResolverEndpointType
      type: string
    ResolverQueryLogConfigName:
      maxLength: 64
      minLength: 1
      pattern: "(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)"
      type: string
    DestinationArn:
      maxLength: 600
      minLength: 1
      type: string
    ResolverQueryLogConfig:
      description: "In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverQueryLogConfig.html\"\
        >CreateResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverQueryLogConfig.html\"\
        >DeleteResolverQueryLogConfig</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfig.html\"\
        >GetResolverQueryLogConfig</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\"\
        >ListResolverQueryLogConfigs</a> request, a complex type that contains settings\
        \ for one query logging configuration."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID for the query logging configuration.
          title: Id
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: 'The Amazon Web Services account ID for the account that
              created the query logging configuration. '
          title: OwnerId
        Status:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigStatus'
          - description: "<p>The status of the specified query logging configuration.\
              \ Valid values include the following:</p> <ul> <li> <p> <code>CREATING</code>:\
              \ Resolver is creating the query logging configuration.</p> </li> <li>\
              \ <p> <code>CREATED</code>: The query logging configuration was successfully\
              \ created. Resolver is logging queries that originate in the specified\
              \ VPC.</p> </li> <li> <p> <code>DELETING</code>: Resolver is deleting\
              \ this query logging configuration.</p> </li> <li> <p> <code>FAILED</code>:\
              \ Resolver can't deliver logs to the location that is specified in the\
              \ query logging configuration. Here are two common causes:</p> <ul>\
              \ <li> <p>The specified destination (for example, an Amazon S3 bucket)\
              \ was deleted.</p> </li> <li> <p>Permissions don't allow sending logs\
              \ to the destination.</p> </li> </ul> </li> </ul>"
          title: Status
        ShareStatus:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: "An indication of whether the query logging configuration\
              \ is shared with other Amazon Web Services accounts, or was shared with\
              \ the current account by another Amazon Web Services account. Sharing\
              \ is configured through Resource Access Manager (RAM)."
          title: ShareStatus
        AssociationCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The number of VPCs that are associated with the query logging
              configuration.
          title: AssociationCount
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN for the query logging configuration.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/ResolverQueryLogConfigName'
          - description: 'The name of the query logging configuration. '
          title: Name
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: "The ARN of the resource that you want Resolver to send query\
              \ logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis\
              \ Data Firehose delivery stream."
          title: DestinationArn
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: A unique string that identifies the request that created
              the query logging configuration. The <code>CreatorRequestId</code> allows
              failed requests to be retried without the risk of running the operation
              twice.
          title: CreatorRequestId
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the query logging configuration was\
              \ created, in Unix time format and Coordinated Universal Time (UTC)."
          title: CreationTime
      title: ResolverQueryLogConfig
      type: object
    RuleTypeOption:
      enum:
      - FORWARD
      - SYSTEM
      - RECURSIVE
      title: RuleTypeOption
      type: string
    DomainName:
      maxLength: 256
      minLength: 1
      type: string
    TargetList:
      items:
        $ref: '#/components/schemas/TargetAddress'
      minItems: 1
      type: array
    ResolverRule:
      description: "For queries that originate in your VPC, detailed information about\
        \ a Resolver rule, which specifies how to route DNS queries out of the VPC.\
        \ The <code>ResolverRule</code> parameter appears in the response to a <a\
        \ href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\"\
        >CreateResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html\"\
        >DeleteResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html\"\
        >GetResolverRule</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
        >ListResolverRules</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html\"\
        >UpdateResolverRule</a> request."
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID that Resolver assigned to the Resolver rule when you
              created it.
          title: Id
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: 'A unique string that you specified when you created the
              Resolver rule. <code>CreatorRequestId</code> identifies the request
              and allows failed requests to be retried without the risk of running
              the operation twice. '
          title: CreatorRequestId
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) for the Resolver rule specified
              by <code>Id</code>.
          title: Arn
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: "DNS queries for this domain name are forwarded to the IP\
              \ addresses that are specified in <code>TargetIps</code>. If a query\
              \ matches multiple Resolver rules (example.com and www.example.com),\
              \ the query is routed using the Resolver rule that contains the most\
              \ specific domain name (www.example.com)."
          title: DomainName
        Status:
          allOf:
          - $ref: '#/components/schemas/ResolverRuleStatus'
          - description: A code that specifies the current status of the Resolver
              rule.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A detailed description of the status of a Resolver rule.
          title: StatusMessage
        RuleType:
          allOf:
          - $ref: '#/components/schemas/RuleTypeOption'
          - description: "<p>When you want to forward DNS queries for specified domain\
              \ name to resolvers on your network, specify <code>FORWARD</code>.</p>\
              \ <p>When you have a forwarding rule to forward DNS queries for a domain\
              \ to your network and you want Resolver to process queries for a subdomain\
              \ of that domain, specify <code>SYSTEM</code>.</p> <p>For example, to\
              \ forward DNS queries for example.com to resolvers on your network,\
              \ you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>.\
              \ To then have Resolver process queries for apex.example.com, you create\
              \ a rule and specify <code>SYSTEM</code> for <code>RuleType</code>.</p>\
              \ <p>Currently, only Resolver can create rules that have a value of\
              \ <code>RECURSIVE</code> for <code>RuleType</code>.</p>"
          title: RuleType
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name for the Resolver rule, which you specified when\
              \ you created the Resolver rule."
          title: Name
        TargetIps:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: "An array that contains the IP addresses and ports that an\
              \ outbound endpoint forwards DNS queries to. Typically, these are the\
              \ IP addresses of DNS resolvers on your network. "
          title: TargetIps
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the endpoint that the rule is associated with.
          title: ResolverEndpointId
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "When a rule is shared with another Amazon Web Services account,\
              \ the account ID of the account that the rule is shared with."
          title: OwnerId
        ShareStatus:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: "Whether the rule is shared and, if so, whether the current\
              \ account is sharing the rule with another account, or another account\
              \ is sharing the rule with the current account."
          title: ShareStatus
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the Resolver rule was created, in\
              \ Unix time format and Coordinated Universal Time (UTC)."
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the Resolver rule was last updated,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
      title: ResolverRule
      type: object
    DomainListFileUrl:
      maxLength: 1024
      minLength: 1
      type: string
    FilterName:
      maxLength: 64
      minLength: 1
      type: string
    FilterValues:
      items:
        $ref: '#/components/schemas/FilterValue'
      type: array
    Filter:
      description: "<p>For Resolver list operations (<a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\"\
        >ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
        >ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\"\
        >ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\"\
        >ListResolverQueryLogConfigs</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\"\
        >ListResolverQueryLogConfigAssociations</a>), and <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverDnssecConfigs.html\"\
        >ListResolverDnssecConfigs</a>), an optional specification to return a subset\
        \ of objects.</p> <p>To filter objects, such as Resolver endpoints or Resolver\
        \ rules, you specify <code>Name</code> and <code>Values</code>. For example,\
        \ to list only inbound Resolver endpoints, specify <code>Direction</code>\
        \ for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>.\
        \ </p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          - description: "<p>The name of the parameter that you want to use to filter\
              \ objects.</p> <p>The valid values for <code>Name</code> depend on the\
              \ action that you're including the filter in, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html\"\
              >ListResolverEndpoints</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html\"\
              >ListResolverRules</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html\"\
              >ListResolverRuleAssociations</a>, <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html\"\
              >ListResolverQueryLogConfigs</a>, or <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html\"\
              >ListResolverQueryLogConfigAssociations</a>.</p> <note> <p>In early\
              \ versions of Resolver, values for <code>Name</code> were listed as\
              \ uppercase, with underscore (_) delimiters. For example, <code>CreatorRequestId</code>\
              \ was originally listed as <code>CREATOR_REQUEST_ID</code>. Uppercase\
              \ values for <code>Name</code> are still supported.</p> </note> <p>\
              \ <b>ListResolverEndpoints</b> </p> <p>Valid values for <code>Name</code>\
              \ include the following:</p> <ul> <li> <p> <code>CreatorRequestId</code>:\
              \ The value that you specified when you created the Resolver endpoint.</p>\
              \ </li> <li> <p> <code>Direction</code>: Whether you want to return\
              \ inbound or outbound Resolver endpoints. If you specify <code>DIRECTION</code>\
              \ for <code>Name</code>, specify <code>INBOUND</code> or <code>OUTBOUND</code>\
              \ for <code>Values</code>.</p> </li> <li> <p> <code>HostVPCId</code>:\
              \ The ID of the VPC that inbound DNS queries pass through on the way\
              \ from your network to your VPCs in a region, or the VPC that outbound\
              \ queries pass through on the way from your VPCs to your network. In\
              \ a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\"\
              >CreateResolverEndpoint</a> request, <code>SubnetId</code> indirectly\
              \ identifies the VPC. In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
              >GetResolverEndpoint</a> request, the VPC ID for a Resolver endpoint\
              \ is returned in the <code>HostVPCId</code> element. </p> </li> <li>\
              \ <p> <code>IpAddressCount</code>: The number of IP addresses that you\
              \ have associated with the Resolver endpoint.</p> </li> <li> <p> <code>Name</code>:\
              \ The name of the Resolver endpoint.</p> </li> <li> <p> <code>SecurityGroupIds</code>:\
              \ The IDs of the VPC security groups that you specified when you created\
              \ the Resolver endpoint.</p> </li> <li> <p> <code>Status</code>: The\
              \ status of the Resolver endpoint. If you specify <code>Status</code>\
              \ for <code>Name</code>, specify one of the following status codes for\
              \ <code>Values</code>: <code>CREATING</code>, <code>OPERATIONAL</code>,\
              \ <code>UPDATING</code>, <code>AUTO_RECOVERING</code>, <code>ACTION_NEEDED</code>,\
              \ or <code>DELETING</code>. For more information, see <code>Status</code>\
              \ in <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverEndpoint.html\"\
              >ResolverEndpoint</a>.</p> </li> </ul> <p> <b>ListResolverRules</b>\
              \ </p> <p>Valid values for <code>Name</code> include the following:</p>\
              \ <ul> <li> <p> <code>CreatorRequestId</code>: The value that you specified\
              \ when you created the Resolver rule.</p> </li> <li> <p> <code>DomainName</code>:\
              \ The domain name for which Resolver is forwarding DNS queries to your\
              \ network. In the value that you specify for <code>Values</code>, include\
              \ a trailing dot (.) after the domain name. For example, if the domain\
              \ name is example.com, specify the following value. Note the \".\" after\
              \ <code>com</code>:</p> <p> <code>example.com.</code> </p> </li> <li>\
              \ <p> <code>Name</code>: The name of the Resolver rule.</p> </li> <li>\
              \ <p> <code>ResolverEndpointId</code>: The ID of the Resolver endpoint\
              \ that the Resolver rule is associated with.</p> <note> <p>You can filter\
              \ on the Resolver endpoint only for rules that have a value of <code>FORWARD</code>\
              \ for <code>RuleType</code>.</p> </note> </li> <li> <p> <code>Status</code>:\
              \ The status of the Resolver rule. If you specify <code>Status</code>\
              \ for <code>Name</code>, specify one of the following status codes for\
              \ <code>Values</code>: <code>COMPLETE</code>, <code>DELETING</code>,\
              \ <code>UPDATING</code>, or <code>FAILED</code>.</p> </li> <li> <p>\
              \ <code>Type</code>: The type of the Resolver rule. If you specify <code>TYPE</code>\
              \ for <code>Name</code>, specify <code>FORWARD</code> or <code>SYSTEM</code>\
              \ for <code>Values</code>.</p> </li> </ul> <p> <b>ListResolverRuleAssociations</b>\
              \ </p> <p>Valid values for <code>Name</code> include the following:</p>\
              \ <ul> <li> <p> <code>Name</code>: The name of the Resolver rule association.</p>\
              \ </li> <li> <p> <code>ResolverRuleId</code>: The ID of the Resolver\
              \ rule that is associated with one or more VPCs.</p> </li> <li> <p>\
              \ <code>Status</code>: The status of the Resolver rule association.\
              \ If you specify <code>Status</code> for <code>Name</code>, specify\
              \ one of the following status codes for <code>Values</code>: <code>CREATING</code>,\
              \ <code>COMPLETE</code>, <code>DELETING</code>, or <code>FAILED</code>.</p>\
              \ </li> <li> <p> <code>VPCId</code>: The ID of the VPC that the Resolver\
              \ rule is associated with.</p> </li> </ul> <p> <b>ListResolverQueryLogConfigs</b>\
              \ </p> <p>Valid values for <code>Name</code> include the following:</p>\
              \ <ul> <li> <p> <code>Arn</code>: The ARN for the query logging configuration.</p>\
              \ </li> <li> <p> <code>AssociationCount</code>: The number of VPCs that\
              \ are associated with the query logging configuration.</p> </li> <li>\
              \ <p> <code>CreationTime</code>: The date and time that the query logging\
              \ configuration was created, in Unix time format and Coordinated Universal\
              \ Time (UTC). </p> </li> <li> <p> <code>CreatorRequestId</code>: A unique\
              \ string that identifies the request that created the query logging\
              \ configuration.</p> </li> <li> <p> <code>Destination</code>: The Amazon\
              \ Web Services service that you want to forward query logs to. Valid\
              \ values include the following:</p> <ul> <li> <p> <code>S3</code> </p>\
              \ </li> <li> <p> <code>CloudWatchLogs</code> </p> </li> <li> <p> <code>KinesisFirehose</code>\
              \ </p> </li> </ul> </li> <li> <p> <code>DestinationArn</code>: The ARN\
              \ of the location that Resolver is sending query logs to. This value\
              \ can be the ARN for an S3 bucket, a CloudWatch Logs log group, or a\
              \ Kinesis Data Firehose delivery stream.</p> </li> <li> <p> <code>Id</code>:\
              \ The ID of the query logging configuration</p> </li> <li> <p> <code>Name</code>:\
              \ The name of the query logging configuration</p> </li> <li> <p> <code>OwnerId</code>:\
              \ The Amazon Web Services account ID for the account that created the\
              \ query logging configuration.</p> </li> <li> <p> <code>ShareStatus</code>:\
              \ An indication of whether the query logging configuration is shared\
              \ with other Amazon Web Services accounts, or was shared with the current\
              \ account by another Amazon Web Services account. Valid values include:\
              \ <code>NOT_SHARED</code>, <code>SHARED_WITH_ME</code>, or <code>SHARED_BY_ME</code>.</p>\
              \ </li> <li> <p> <code>Status</code>: The status of the query logging\
              \ configuration. If you specify <code>Status</code> for <code>Name</code>,\
              \ specify the applicable status code for <code>Values</code>: <code>CREATING</code>,\
              \ <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfig.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfig-Status\"\
              >Status</a>. </p> </li> </ul> <p> <b>ListResolverQueryLogConfigAssociations</b>\
              \ </p> <p>Valid values for <code>Name</code> include the following:</p>\
              \ <ul> <li> <p> <code>CreationTime</code>: The date and time that the\
              \ VPC was associated with the query logging configuration, in Unix time\
              \ format and Coordinated Universal Time (UTC).</p> </li> <li> <p> <code>Error</code>:\
              \ If the value of <code>Status</code> is <code>FAILED</code>, specify\
              \ the cause: <code>DESTINATION_NOT_FOUND</code> or <code>ACCESS_DENIED</code>.</p>\
              \ </li> <li> <p> <code>Id</code>: The ID of the query logging association.</p>\
              \ </li> <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the\
              \ query logging configuration that a VPC is associated with.</p> </li>\
              \ <li> <p> <code>ResourceId</code>: The ID of the Amazon VPC that is\
              \ associated with the query logging configuration.</p> </li> <li> <p>\
              \ <code>Status</code>: The status of the query logging association.\
              \ If you specify <code>Status</code> for <code>Name</code>, specify\
              \ the applicable status code for <code>Values</code>: <code>CREATING</code>,\
              \ <code>CREATED</code>, <code>DELETING</code>, or <code>FAILED</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ResolverQueryLogConfigAssociation.html#Route53Resolver-Type-route53resolver_ResolverQueryLogConfigAssociation-Status\"\
              >Status</a>. </p> </li> </ul>"
          title: Name
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          - description: "When you're using a <code>List</code> operation and you\
              \ want the operation to return a subset of objects, such as Resolver\
              \ endpoints or Resolver rules, the value of the parameter that you want\
              \ to use to filter objects. For example, to list only inbound Resolver\
              \ endpoints, specify <code>Direction</code> for <code>Name</code> and\
              \ specify <code>INBOUND</code> for <code>Values</code>."
          title: Values
      title: Filter
      type: object
    FilterValue:
      maxLength: 600
      minLength: 1
      title: FilterValue
      type: string
    Filters:
      items:
        $ref: '#/components/schemas/Filter'
      type: array
    FirewallFailOpenStatus:
      enum:
      - ENABLED
      - DISABLED
      - USE_LOCAL_RESOURCE_SETTING
      title: FirewallFailOpenStatus
      type: string
    FirewallConfig:
      description: 'Configuration of the firewall behavior provided by DNS Firewall
        for a single VPC from Amazon Virtual Private Cloud (Amazon VPC). '
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the firewall configuration.
          title: Id
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the VPC that this firewall configuration applies
              to.
          title: ResourceId
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the owner of the VPC
              that this firewall configuration applies to.
          title: OwnerId
        FirewallFailOpen:
          allOf:
          - $ref: '#/components/schemas/FirewallFailOpenStatus'
          - description: "<p>Determines how DNS Firewall operates during failures,\
              \ for example when all traffic that is sent to DNS Firewall fails to\
              \ receive a reply. </p> <ul> <li> <p>By default, fail open is disabled,\
              \ which means the failure mode is closed. This approach favors security\
              \ over availability. DNS Firewall returns a failure error when it is\
              \ unable to properly evaluate a query. </p> </li> <li> <p>If you enable\
              \ this option, the failure mode is open. This approach favors availability\
              \ over security. DNS Firewall allows queries to proceed if it is unable\
              \ to properly evaluate them. </p> </li> </ul> <p>This behavior is only\
              \ enforced for VPCs that have at least one DNS Firewall rule group association.\
              \ </p>"
          title: FirewallFailOpen
      title: FirewallConfig
      type: object
    FirewallConfigList:
      items:
        $ref: '#/components/schemas/FirewallConfig'
      type: array
    FirewallDomainImportOperation:
      enum:
      - REPLACE
      title: FirewallDomainImportOperation
      type: string
    Unsigned:
      type: integer
    FirewallDomainListStatus:
      enum:
      - COMPLETE
      - COMPLETE_IMPORT_FAILED
      - IMPORTING
      - DELETING
      - UPDATING
      title: FirewallDomainListStatus
      type: string
    StatusMessage:
      maxLength: 255
      type: string
    ServicePrinciple:
      maxLength: 512
      minLength: 1
      type: string
    Rfc3339TimeString:
      maxLength: 40
      minLength: 20
      type: string
    FirewallDomainListMetadata:
      description: "<p>Minimal high-level information for a firewall domain list.\
        \ The action <a>ListFirewallDomainLists</a> returns an array of these objects.\
        \ </p> <p>To retrieve full information for a firewall domain list, call <a>GetFirewallDomainList</a>\
        \ and <a>ListFirewallDomains</a>.</p>"
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the domain list. '
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the firewall domain list
              metadata.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The name of the domain list. '
          title: Name
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        ManagedOwnerName:
          allOf:
          - $ref: '#/components/schemas/ServicePrinciple'
          - description: "The owner of the list, used only for lists that are not\
              \ managed by you. For example, the managed domain list <code>AWSManagedDomainsMalwareDomainList</code>\
              \ has the managed owner name <code>Route 53 Resolver DNS Firewall</code>."
          title: ManagedOwnerName
      title: FirewallDomainListMetadata
      type: object
    FirewallDomainListMetadataList:
      items:
        $ref: '#/components/schemas/FirewallDomainListMetadata'
      type: array
    FirewallDomainName:
      maxLength: 255
      minLength: 1
      title: FirewallDomainName
      type: string
    FirewallDomainUpdateOperation:
      enum:
      - ADD
      - REMOVE
      - REPLACE
      title: FirewallDomainUpdateOperation
      type: string
    FirewallDomains:
      items:
        $ref: '#/components/schemas/FirewallDomainName'
      type: array
    FirewallRuleGroupStatus:
      enum:
      - COMPLETE
      - DELETING
      - UPDATING
      title: FirewallRuleGroupStatus
      type: string
    ShareStatus:
      enum:
      - NOT_SHARED
      - SHARED_WITH_ME
      - SHARED_BY_ME
      title: ShareStatus
      type: string
    FirewallRuleGroupAssociationStatus:
      enum:
      - COMPLETE
      - DELETING
      - UPDATING
      title: FirewallRuleGroupAssociationStatus
      type: string
    FirewallRuleGroupAssociations:
      items:
        $ref: '#/components/schemas/FirewallRuleGroupAssociation'
      type: array
    FirewallRuleGroupMetadata:
      description: "<p>Minimal high-level information for a firewall rule group. The\
        \ action <a>ListFirewallRuleGroups</a> returns an array of these objects.\
        \ </p> <p>To retrieve full information for a firewall rule group, call <a>GetFirewallRuleGroup</a>\
        \ and <a>ListFirewallRules</a>.</p>"
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: 'The ID of the rule group. '
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN (Amazon Resource Name) of the rule group.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the rule group.
          title: Name
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "The Amazon Web Services account ID for the account that\
              \ created the rule group. When a rule group is shared with your account,\
              \ this is the account that has shared the rule group with you. "
          title: OwnerId
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/CreatorRequestId'
          - description: "A unique string defined by you to identify the request.\
              \ This allows you to retry failed requests without the risk of running\
              \ the operation twice. This can be any unique string, for example, a\
              \ timestamp. "
          title: CreatorRequestId
        ShareStatus:
          allOf:
          - $ref: '#/components/schemas/ShareStatus'
          - description: "Whether the rule group is shared with other Amazon Web Services\
              \ accounts, or was shared with the current account by another Amazon\
              \ Web Services account. Sharing is configured through Resource Access\
              \ Manager (RAM)."
          title: ShareStatus
      title: FirewallRuleGroupMetadata
      type: object
    FirewallRuleGroupMetadataList:
      items:
        $ref: '#/components/schemas/FirewallRuleGroupMetadata'
      type: array
    FirewallRuleGroupPolicy:
      maxLength: 30000
      type: string
    FirewallRules:
      items:
        $ref: '#/components/schemas/FirewallRule'
      type: array
    ResolverConfig:
      description: A complex type that contains information about a Resolver configuration
        for a VPC.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: ID for the Resolver configuration.
          title: Id
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the Amazon Virtual Private Cloud VPC that you're
              configuring Resolver for.
          title: ResourceId
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The owner account ID of the Amazon Virtual Private Cloud
              VPC.
          title: OwnerId
        AutodefinedReverse:
          allOf:
          - $ref: '#/components/schemas/ResolverAutodefinedReverseStatus'
          - description: <p> The status of whether or not the Resolver will create
              autodefined rules for reverse DNS lookups. This is enabled by default.
              The status can be one of following:</p> <ul> <li> <p> <b>ENABLING:</b>
              Autodefined rules for reverse DNS lookups are being enabled but are
              not complete.</p> </li> <li> <p> <b>ENABLED:</b> Autodefined rules for
              reverse DNS lookups are enabled.</p> </li> <li> <p> <b>DISABLING:</b>
              Autodefined rules for reverse DNS lookups are being disabled but are
              not complete.</p> </li> <li> <p> <b>DISABLED:</b> Autodefined rules
              for reverse DNS lookups are disabled.</p> </li> </ul>
          title: AutodefinedReverse
      title: ResolverConfig
      type: object
    ResolverDnssecConfig:
      description: A complex type that contains information about a configuration
        for DNSSEC validation.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID for a configuration for DNSSEC validation.
          title: Id
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The owner account ID of the virtual private cloud (VPC) for
              a configuration for DNSSEC validation.
          title: OwnerId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the virtual private cloud (VPC) that you're configuring
              the DNSSEC validation status for.
          title: ResourceId
        ValidationStatus:
          allOf:
          - $ref: '#/components/schemas/ResolverDNSSECValidationStatus'
          - description: <p>The validation status for a DNSSEC configuration. The
              status can be one of the following:</p> <ul> <li> <p> <b>ENABLING:</b>
              DNSSEC validation is being enabled but is not complete.</p> </li> <li>
              <p> <b>ENABLED:</b> DNSSEC validation is enabled.</p> </li> <li> <p>
              <b>DISABLING:</b> DNSSEC validation is being disabled but is not complete.</p>
              </li> <li> <p> <b>DISABLED</b> DNSSEC validation is disabled.</p> </li>
              </ul>
          title: ValidationStatus
      title: ResolverDnssecConfig
      type: object
    ResolverQueryLogConfigPolicy:
      maxLength: 30000
      type: string
    ResolverRulePolicy:
      maxLength: 30000
      type: string
    Ip:
      maxLength: 36
      minLength: 7
      type: string
    IpAddressCount:
      type: integer
    SubnetId:
      maxLength: 32
      minLength: 1
      type: string
    Ipv6:
      maxLength: 39
      minLength: 7
      type: string
    IpAddressRequest:
      description: "In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html\"\
        >CreateResolverEndpoint</a> request, the IP address that DNS queries originate\
        \ from (for outbound endpoints) or that you forward DNS queries to (for inbound\
        \ endpoints). <code>IpAddressRequest</code> also includes the ID of the subnet\
        \ that contains the IP address."
      properties:
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          - description: 'The ID of the subnet that contains the IP address. '
          title: SubnetId
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: The IPv4 address that you want to use for DNS queries.
          title: Ip
        Ipv6:
          allOf:
          - $ref: '#/components/schemas/Ipv6'
          - description: ' The IPv6 address that you want to use for DNS queries. '
          title: Ipv6
      required:
      - SubnetId
      title: IpAddressRequest
      type: object
    IpAddressStatus:
      enum:
      - CREATING
      - FAILED_CREATION
      - ATTACHING
      - ATTACHED
      - REMAP_DETACHING
      - REMAP_ATTACHING
      - DETACHING
      - FAILED_RESOURCE_GONE
      - DELETING
      - DELETE_FAILED_FAS_EXPIRED
      - UPDATING
      - UPDATE_FAILED
      title: IpAddressStatus
      type: string
    IpAddressResponse:
      description: "In the response to a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html\"\
        >GetResolverEndpoint</a> request, information about the IP addresses that\
        \ the Resolver endpoint uses for DNS queries."
      properties:
        IpId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of one IP address.
          title: IpId
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          - description: The ID of one subnet.
          title: SubnetId
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: One IPv4 address that the Resolver endpoint uses for DNS
              queries.
          title: Ip
        Ipv6:
          allOf:
          - $ref: '#/components/schemas/Ipv6'
          - description: ' One IPv6 address that the Resolver endpoint uses for DNS
              queries. '
          title: Ipv6
        Status:
          allOf:
          - $ref: '#/components/schemas/IpAddressStatus'
          - description: A status code that gives the current status of the request.
          title: Status
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: A message that provides additional information about the
              status of the request.
          title: StatusMessage
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the IP address was created, in Unix\
              \ time format and Coordinated Universal Time (UTC)."
          title: CreationTime
        ModificationTime:
          allOf:
          - $ref: '#/components/schemas/Rfc3339TimeString'
          - description: "The date and time that the IP address was last modified,\
              \ in Unix time format and Coordinated Universal Time (UTC)."
          title: ModificationTime
      title: IpAddressResponse
      type: object
    IpAddressesResponse:
      items:
        $ref: '#/components/schemas/IpAddressResponse'
      type: array
    ListDomainMaxResults:
      maximum: 5000
      minimum: 1
      type: integer
    ListFirewallConfigsMaxResult:
      maximum: 10
      minimum: 5
      type: integer
    NextToken:
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    OutpostResolverList:
      items:
        $ref: '#/components/schemas/OutpostResolver'
      type: array
    ListResolverConfigsMaxResult:
      maximum: 100
      minimum: 5
      type: integer
    ResolverConfigList:
      items:
        $ref: '#/components/schemas/ResolverConfig'
      type: array
    ResolverDnssecConfigList:
      items:
        $ref: '#/components/schemas/ResolverDnssecConfig'
      type: array
    ResolverEndpoints:
      items:
        $ref: '#/components/schemas/ResolverEndpoint'
      type: array
    SortByKey:
      maxLength: 64
      minLength: 1
      type: string
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      title: SortOrder
      type: string
    ResolverQueryLogConfigAssociationList:
      items:
        $ref: '#/components/schemas/ResolverQueryLogConfigAssociation'
      type: array
    ResolverQueryLogConfigList:
      items:
        $ref: '#/components/schemas/ResolverQueryLogConfig'
      type: array
    ResolverRuleAssociations:
      items:
        $ref: '#/components/schemas/ResolverRuleAssociation'
      type: array
    ResolverRules:
      items:
        $ref: '#/components/schemas/ResolverRule'
      type: array
    OutpostResolverStatus:
      enum:
      - CREATING
      - OPERATIONAL
      - UPDATING
      - DELETING
      - ACTION_NEEDED
      - FAILED_CREATION
      - FAILED_DELETION
      title: OutpostResolverStatus
      type: string
    OutpostResolverStatusMessage:
      maxLength: 4096
      type: string
    Port:
      maximum: 65535
      minimum: 0
      type: integer
    ResolverAutodefinedReverseStatus:
      enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
      - UPDATING_TO_USE_LOCAL_RESOURCE_SETTING
      - USE_LOCAL_RESOURCE_SETTING
      title: ResolverAutodefinedReverseStatus
      type: string
    ResolverDNSSECValidationStatus:
      enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
      - UPDATING_TO_USE_LOCAL_RESOURCE_SETTING
      - USE_LOCAL_RESOURCE_SETTING
      title: ResolverDNSSECValidationStatus
      type: string
    ResolverEndpointStatus:
      enum:
      - CREATING
      - OPERATIONAL
      - UPDATING
      - AUTO_RECOVERING
      - ACTION_NEEDED
      - DELETING
      title: ResolverEndpointStatus
      type: string
    ResolverQueryLogConfigStatus:
      enum:
      - CREATING
      - CREATED
      - DELETING
      - FAILED
      title: ResolverQueryLogConfigStatus
      type: string
    ResolverQueryLogConfigAssociationStatus:
      enum:
      - CREATING
      - ACTIVE
      - ACTION_NEEDED
      - DELETING
      - FAILED
      title: ResolverQueryLogConfigAssociationStatus
      type: string
    ResolverQueryLogConfigAssociationError:
      enum:
      - NONE
      - DESTINATION_NOT_FOUND
      - ACCESS_DENIED
      - INTERNAL_SERVICE_ERROR
      title: ResolverQueryLogConfigAssociationError
      type: string
    ResolverQueryLogConfigAssociationErrorMessage:
      type: string
    ResolverRuleStatus:
      enum:
      - COMPLETE
      - DELETING
      - UPDATING
      - FAILED
      title: ResolverRuleStatus
      type: string
    ResolverRuleAssociationStatus:
      enum:
      - CREATING
      - COMPLETE
      - DELETING
      - FAILED
      - OVERRIDDEN
      title: ResolverRuleAssociationStatus
      type: string
    ResolverRuleConfig:
      description: "In an <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html\"\
        >UpdateResolverRule</a> request, information about the changes that you want\
        \ to make."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: 'The new name for the Resolver rule. The name that you specify
              appears in the Resolver dashboard in the Route 53 console. '
          title: Name
        TargetIps:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: "For DNS queries that originate in your VPC, the new IP addresses\
              \ that you want to route outbound DNS queries to."
          title: TargetIps
        ResolverEndpointId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The ID of the new outbound Resolver endpoint that you want
              to use to route DNS queries to the IP addresses that you specify in
              <code>TargetIps</code>.
          title: ResolverEndpointId
      title: ResolverRuleConfig
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: One tag that you want to add to the specified resource. A tag consists
        of a <code>Key</code> (a name for the tag) and a <code>Value</code>.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "The name for the tag. For example, if you want to associate\
              \ Resolver resources with the account IDs of your customers for billing\
              \ purposes, the value of <code>Key</code> might be <code>account-id</code>."
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The value for the tag. For example, if <code>Key</code>\
              \ is <code>account-id</code>, then <code>Value</code> might be the ID\
              \ of the customer account that you're creating the resource for."
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      type: array
    TargetAddress:
      description: "In a <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html\"\
        >CreateResolverRule</a> request, an array of the IPs that you want to forward\
        \ DNS queries to."
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: One IPv4 address that you want to forward DNS queries to.
          title: Ip
        Port:
          allOf:
          - $ref: '#/components/schemas/Port'
          - description: The port at <code>Ip</code> that you want to forward DNS
              queries to.
          title: Port
        Ipv6:
          allOf:
          - $ref: '#/components/schemas/Ipv6'
          - description: ' One IPv6 address that you want to forward DNS queries to. '
          title: Ipv6
      title: TargetAddress
      type: object
    UpdateIpAddress:
      description: ' Provides information about the IP address type in response to
        <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html">UpdateResolverEndpoint</a>. '
      properties:
        IpId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: " The ID of the IP address, specified by the <code>ResolverEndpointId</code>. "
          title: IpId
        Ipv6:
          allOf:
          - $ref: '#/components/schemas/Ipv6'
          - description: ' The IPv6 address that you want to use for DNS queries. '
          title: Ipv6
      required:
      - IpId
      - Ipv6
      title: UpdateIpAddress
      type: object
    UpdateIpAddresses:
      items:
        $ref: '#/components/schemas/UpdateIpAddress'
      maxItems: 50
      minItems: 0
      type: array
    Validation:
      enum:
      - ENABLE
      - DISABLE
      - USE_LOCAL_RESOURCE_SETTING
      title: Validation
      type: string
    AssociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation:
      allOf:
      - $ref: '#/components/schemas/FirewallRuleGroupAssociation'
      - description: "The association that you just created. The association has an\
          \ ID that you can use to identify it in other requests, like update and\
          \ delete."
      example:
        Status: ""
        FirewallRuleGroupId: ""
        Priority: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        CreatorRequestId: ""
        MutationProtection: ""
        Name: ""
        StatusMessage: ""
        VpcId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: AssociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation
    AssociateResolverEndpointIpAddressResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: The response to an <code>AssociateResolverEndpointIpAddress</code>
          request.
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: AssociateResolverEndpointIpAddressResponse_ResolverEndpoint
    AssociateResolverEndpointIpAddressRequest_IpAddress:
      allOf:
      - $ref: '#/components/schemas/IpAddressUpdate'
      - description: "Either the IPv4 address that you want to add to a Resolver endpoint\
          \ or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address\
          \ for you from the available IPs in the specified subnet."
      example:
        IpId: ""
        Ipv6: ""
        Ip: ""
        SubnetId: ""
      title: AssociateResolverEndpointIpAddressRequest_IpAddress
    AssociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfigAssociation'
      - description: A complex type that contains settings for a specified association
          between an Amazon VPC and a query logging configuration.
      example:
        Status: ""
        ResourceId: ""
        CreationTime: ""
        Error: ""
        Id: ""
        ResolverQueryLogConfigId: ""
        ErrorMessage: ""
      title: AssociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation
    AssociateResolverRuleResponse_ResolverRuleAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverRuleAssociation'
      - description: "Information about the <code>AssociateResolverRule</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        VPCId: ""
        ResolverRuleId: ""
        Id: ""
        Name: ""
        StatusMessage: ""
      title: AssociateResolverRuleResponse_ResolverRuleAssociation
    CreateFirewallDomainListResponse_FirewallDomainList:
      allOf:
      - $ref: '#/components/schemas/FirewallDomainList'
      - description: The domain list that you just created.
      example:
        Status: ""
        CreationTime: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        DomainCount: ""
        StatusMessage: ""
      title: CreateFirewallDomainListResponse_FirewallDomainList
    CreateFirewallRuleResponse_FirewallRule:
      allOf:
      - $ref: '#/components/schemas/FirewallRule'
      - description: 'The firewall rule that you just created. '
      example:
        Action: ""
        FirewallRuleGroupId: ""
        Priority: ""
        BlockOverrideDomain: ""
        FirewallDomainListId: ""
        CreationTime: ""
        ModificationTime: ""
        BlockResponse: ""
        BlockOverrideTtl: ""
        CreatorRequestId: ""
        BlockOverrideDnsType: ""
        Name: ""
      title: CreateFirewallRuleResponse_FirewallRule
    CreateFirewallRuleGroupResponse_FirewallRuleGroup:
      allOf:
      - $ref: '#/components/schemas/FirewallRuleGroup'
      - description: 'A collection of rules used to filter DNS network traffic. '
      example:
        RuleCount: ""
        Status: ""
        OwnerId: ""
        CreationTime: ""
        ShareStatus: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        StatusMessage: ""
      title: CreateFirewallRuleGroupResponse_FirewallRuleGroup
    CreateOutpostResolverResponse_OutpostResolver:
      allOf:
      - $ref: '#/components/schemas/OutpostResolver'
      - description: "Information about the <code>CreateOutpostResolver</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        InstanceCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        OutpostArn: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        StatusMessage: ""
      title: CreateOutpostResolverResponse_OutpostResolver
    CreateResolverEndpointResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: "Information about the <code>CreateResolverEndpoint</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: CreateResolverEndpointResponse_ResolverEndpoint
    CreateResolverQueryLogConfigResponse_ResolverQueryLogConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfig'
      - description: "Information about the <code>CreateResolverQueryLogConfig</code>\
          \ request, including the status of the request."
      example:
        Status: ""
        OwnerId: ""
        AssociationCount: ""
        CreationTime: ""
        ShareStatus: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        DestinationArn: ""
        Name: ""
      title: CreateResolverQueryLogConfigResponse_ResolverQueryLogConfig
    CreateResolverRuleResponse_ResolverRule:
      allOf:
      - $ref: '#/components/schemas/ResolverRule'
      - description: "Information about the <code>CreateResolverRule</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        ResolverEndpointId: ""
        DomainName: ""
        ShareStatus: ""
        RuleType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        TargetIps: ""
        StatusMessage: ""
        Name: ""
        OwnerId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: CreateResolverRuleResponse_ResolverRule
    DeleteFirewallDomainListResponse_FirewallDomainList:
      allOf:
      - $ref: '#/components/schemas/FirewallDomainList'
      - description: 'The domain list that you just deleted. '
      example:
        Status: ""
        CreationTime: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        DomainCount: ""
        StatusMessage: ""
      title: DeleteFirewallDomainListResponse_FirewallDomainList
    DeleteFirewallRuleResponse_FirewallRule:
      allOf:
      - $ref: '#/components/schemas/FirewallRule'
      - description: The specification for the firewall rule that you just deleted.
      example:
        Action: ""
        FirewallRuleGroupId: ""
        Priority: ""
        BlockOverrideDomain: ""
        FirewallDomainListId: ""
        CreationTime: ""
        ModificationTime: ""
        BlockResponse: ""
        BlockOverrideTtl: ""
        CreatorRequestId: ""
        BlockOverrideDnsType: ""
        Name: ""
      title: DeleteFirewallRuleResponse_FirewallRule
    DeleteOutpostResolverResponse_OutpostResolver:
      allOf:
      - $ref: '#/components/schemas/OutpostResolver'
      - description: "Information about the <code>DeleteOutpostResolver</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        InstanceCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        OutpostArn: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        StatusMessage: ""
      title: DeleteOutpostResolverResponse_OutpostResolver
    DeleteResolverEndpointResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: "Information about the <code>DeleteResolverEndpoint</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: DeleteResolverEndpointResponse_ResolverEndpoint
    DeleteResolverQueryLogConfigResponse_ResolverQueryLogConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfig'
      - description: "Information about the query logging configuration that you deleted,\
          \ including the status of the request."
      example:
        Status: ""
        OwnerId: ""
        AssociationCount: ""
        CreationTime: ""
        ShareStatus: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        DestinationArn: ""
        Name: ""
      title: DeleteResolverQueryLogConfigResponse_ResolverQueryLogConfig
    DeleteResolverRuleResponse_ResolverRule:
      allOf:
      - $ref: '#/components/schemas/ResolverRule'
      - description: "Information about the <code>DeleteResolverRule</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        ResolverEndpointId: ""
        DomainName: ""
        ShareStatus: ""
        RuleType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        TargetIps: ""
        StatusMessage: ""
        Name: ""
        OwnerId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: DeleteResolverRuleResponse_ResolverRule
    DisassociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation:
      allOf:
      - $ref: '#/components/schemas/FirewallRuleGroupAssociation'
      - description: 'The firewall rule group association that you just removed. '
      example:
        Status: ""
        FirewallRuleGroupId: ""
        Priority: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        CreatorRequestId: ""
        MutationProtection: ""
        Name: ""
        StatusMessage: ""
        VpcId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: DisassociateFirewallRuleGroupResponse_FirewallRuleGroupAssociation
    DisassociateResolverEndpointIpAddressResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: The response to an <code>DisassociateResolverEndpointIpAddress</code>
          request.
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: DisassociateResolverEndpointIpAddressResponse_ResolverEndpoint
    DisassociateResolverEndpointIpAddressRequest_IpAddress:
      allOf:
      - $ref: '#/components/schemas/IpAddressUpdate'
      - description: The IPv4 address that you want to remove from a Resolver endpoint.
      example:
        IpId: ""
        Ipv6: ""
        Ip: ""
        SubnetId: ""
      title: DisassociateResolverEndpointIpAddressRequest_IpAddress
    DisassociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfigAssociation'
      - description: A complex type that contains settings for the association that
          you deleted between an Amazon VPC and a query logging configuration.
      example:
        Status: ""
        ResourceId: ""
        CreationTime: ""
        Error: ""
        Id: ""
        ResolverQueryLogConfigId: ""
        ErrorMessage: ""
      title: DisassociateResolverQueryLogConfigResponse_ResolverQueryLogConfigAssociation
    DisassociateResolverRuleResponse_ResolverRuleAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverRuleAssociation'
      - description: "Information about the <code>DisassociateResolverRule</code>\
          \ request, including the status of the request."
      example:
        Status: ""
        VPCId: ""
        ResolverRuleId: ""
        Id: ""
        Name: ""
        StatusMessage: ""
      title: DisassociateResolverRuleResponse_ResolverRuleAssociation
    GetFirewallConfigResponse_FirewallConfig:
      allOf:
      - $ref: '#/components/schemas/FirewallConfig'
      - description: 'Configuration of the firewall behavior provided by DNS Firewall
          for a single VPC from AmazonVPC. '
      example:
        OwnerId: ""
        ResourceId: ""
        FirewallFailOpen: ""
        Id: ""
      title: GetFirewallConfigResponse_FirewallConfig
    GetFirewallDomainListResponse_FirewallDomainList:
      allOf:
      - $ref: '#/components/schemas/FirewallDomainList'
      - description: 'The domain list that you requested. '
      example:
        Status: ""
        CreationTime: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        DomainCount: ""
        StatusMessage: ""
      title: GetFirewallDomainListResponse_FirewallDomainList
    GetFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation:
      allOf:
      - $ref: '#/components/schemas/FirewallRuleGroupAssociation'
      - description: 'The association that you requested. '
      example:
        Status: ""
        FirewallRuleGroupId: ""
        Priority: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        CreatorRequestId: ""
        MutationProtection: ""
        Name: ""
        StatusMessage: ""
        VpcId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: GetFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation
    GetOutpostResolverResponse_OutpostResolver:
      allOf:
      - $ref: '#/components/schemas/OutpostResolver'
      - description: "Information about the <code>GetOutpostResolver</code> request,\
          \ including the status of the request."
      example:
        Status: ""
        InstanceCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        OutpostArn: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        StatusMessage: ""
      title: GetOutpostResolverResponse_OutpostResolver
    GetResolverConfigResponse_ResolverConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverConfig'
      - description: Information about the behavior configuration of Route 53 Resolver
          behavior for the VPC you specified in the <code>GetResolverConfig</code>
          request.
      example:
        OwnerId: ""
        AutodefinedReverse: ""
        ResourceId: ""
        Id: ""
      title: GetResolverConfigResponse_ResolverConfig
    GetResolverDnssecConfigResponse_ResolverDNSSECConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverDnssecConfig'
      - description: The information about a configuration for DNSSEC validation.
      example:
        ValidationStatus: ""
        OwnerId: ""
        ResourceId: ""
        Id: ""
      title: GetResolverDnssecConfigResponse_ResolverDNSSECConfig
    GetResolverEndpointResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: Information about the Resolver endpoint that you specified in
          a <code>GetResolverEndpoint</code> request.
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: GetResolverEndpointResponse_ResolverEndpoint
    GetResolverQueryLogConfigResponse_ResolverQueryLogConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfig'
      - description: Information about the Resolver query logging configuration that
          you specified in a <code>GetQueryLogConfig</code> request.
      example:
        Status: ""
        OwnerId: ""
        AssociationCount: ""
        CreationTime: ""
        ShareStatus: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        DestinationArn: ""
        Name: ""
      title: GetResolverQueryLogConfigResponse_ResolverQueryLogConfig
    GetResolverQueryLogConfigAssociationResponse_ResolverQueryLogConfigAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverQueryLogConfigAssociation'
      - description: Information about the Resolver query logging configuration association
          that you specified in a <code>GetQueryLogConfigAssociation</code> request.
      example:
        Status: ""
        ResourceId: ""
        CreationTime: ""
        Error: ""
        Id: ""
        ResolverQueryLogConfigId: ""
        ErrorMessage: ""
      title: GetResolverQueryLogConfigAssociationResponse_ResolverQueryLogConfigAssociation
    GetResolverRuleResponse_ResolverRule:
      allOf:
      - $ref: '#/components/schemas/ResolverRule'
      - description: Information about the Resolver rule that you specified in a <code>GetResolverRule</code>
          request.
      example:
        Status: ""
        ResolverEndpointId: ""
        DomainName: ""
        ShareStatus: ""
        RuleType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        TargetIps: ""
        StatusMessage: ""
        Name: ""
        OwnerId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: GetResolverRuleResponse_ResolverRule
    GetResolverRuleAssociationResponse_ResolverRuleAssociation:
      allOf:
      - $ref: '#/components/schemas/ResolverRuleAssociation'
      - description: Information about the Resolver rule association that you specified
          in a <code>GetResolverRuleAssociation</code> request.
      example:
        Status: ""
        VPCId: ""
        ResolverRuleId: ""
        Id: ""
        Name: ""
        StatusMessage: ""
      title: GetResolverRuleAssociationResponse_ResolverRuleAssociation
    UpdateFirewallConfigResponse_FirewallConfig:
      allOf:
      - $ref: '#/components/schemas/FirewallConfig'
      - description: 'Configuration of the firewall behavior provided by DNS Firewall
          for a single VPC. '
      example:
        OwnerId: ""
        ResourceId: ""
        FirewallFailOpen: ""
        Id: ""
      title: UpdateFirewallConfigResponse_FirewallConfig
    UpdateFirewallRuleResponse_FirewallRule:
      allOf:
      - $ref: '#/components/schemas/FirewallRule'
      - description: 'The firewall rule that you just updated. '
      example:
        Action: ""
        FirewallRuleGroupId: ""
        Priority: ""
        BlockOverrideDomain: ""
        FirewallDomainListId: ""
        CreationTime: ""
        ModificationTime: ""
        BlockResponse: ""
        BlockOverrideTtl: ""
        CreatorRequestId: ""
        BlockOverrideDnsType: ""
        Name: ""
      title: UpdateFirewallRuleResponse_FirewallRule
    UpdateFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation:
      allOf:
      - $ref: '#/components/schemas/FirewallRuleGroupAssociation'
      - description: 'The association that you just updated. '
      example:
        Status: ""
        FirewallRuleGroupId: ""
        Priority: ""
        ManagedOwnerName: ""
        ModificationTime: ""
        CreatorRequestId: ""
        MutationProtection: ""
        Name: ""
        StatusMessage: ""
        VpcId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: UpdateFirewallRuleGroupAssociationResponse_FirewallRuleGroupAssociation
    UpdateOutpostResolverResponse_OutpostResolver:
      allOf:
      - $ref: '#/components/schemas/OutpostResolver'
      - description: The response to an <code>UpdateOutpostResolver</code> request.
      example:
        Status: ""
        InstanceCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        OutpostArn: ""
        ModificationTime: ""
        Id: ""
        Arn: ""
        CreatorRequestId: ""
        Name: ""
        StatusMessage: ""
      title: UpdateOutpostResolverResponse_OutpostResolver
    UpdateResolverConfigResponse_ResolverConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverConfig'
      - description: An array that contains settings for the specified Resolver configuration.
      example:
        OwnerId: ""
        AutodefinedReverse: ""
        ResourceId: ""
        Id: ""
      title: UpdateResolverConfigResponse_ResolverConfig
    UpdateResolverDnssecConfigResponse_ResolverDNSSECConfig:
      allOf:
      - $ref: '#/components/schemas/ResolverDnssecConfig'
      - description: A complex type that contains settings for the specified DNSSEC
          configuration.
      example:
        ValidationStatus: ""
        OwnerId: ""
        ResourceId: ""
        Id: ""
      title: UpdateResolverDnssecConfigResponse_ResolverDNSSECConfig
    UpdateResolverEndpointResponse_ResolverEndpoint:
      allOf:
      - $ref: '#/components/schemas/ResolverEndpoint'
      - description: The response to an <code>UpdateResolverEndpoint</code> request.
      example:
        Status: ""
        OutpostArn: ""
        ResolverEndpointType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        SecurityGroupIds: ""
        Direction: ""
        Name: ""
        StatusMessage: ""
        IpAddressCount: ""
        CreationTime: ""
        PreferredInstanceType: ""
        Id: ""
        Arn: ""
        HostVPCId: ""
      title: UpdateResolverEndpointResponse_ResolverEndpoint
    UpdateResolverRuleResponse_ResolverRule:
      allOf:
      - $ref: '#/components/schemas/ResolverRule'
      - description: The response to an <code>UpdateResolverRule</code> request.
      example:
        Status: ""
        ResolverEndpointId: ""
        DomainName: ""
        ShareStatus: ""
        RuleType: ""
        ModificationTime: ""
        CreatorRequestId: ""
        TargetIps: ""
        StatusMessage: ""
        Name: ""
        OwnerId: ""
        CreationTime: ""
        Id: ""
        Arn: ""
      title: UpdateResolverRuleResponse_ResolverRule
    UpdateResolverRuleRequest_Config:
      allOf:
      - $ref: '#/components/schemas/ResolverRuleConfig'
      - description: The new settings for the Resolver rule.
      example:
        ResolverEndpointId: ""
        TargetIps: ""
        Name: ""
      title: UpdateResolverRuleRequest_Config
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
