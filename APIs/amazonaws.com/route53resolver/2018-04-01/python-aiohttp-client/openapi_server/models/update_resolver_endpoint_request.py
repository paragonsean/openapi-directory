# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resolver_endpoint_type import ResolverEndpointType
from openapi_server import util


class UpdateResolverEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resolver_endpoint_id: str=None, name: str=None, resolver_endpoint_type: ResolverEndpointType=None, update_ip_addresses: List=None):
        """UpdateResolverEndpointRequest - a model defined in OpenAPI

        :param resolver_endpoint_id: The resolver_endpoint_id of this UpdateResolverEndpointRequest.
        :param name: The name of this UpdateResolverEndpointRequest.
        :param resolver_endpoint_type: The resolver_endpoint_type of this UpdateResolverEndpointRequest.
        :param update_ip_addresses: The update_ip_addresses of this UpdateResolverEndpointRequest.
        """
        self.openapi_types = {
            'resolver_endpoint_id': str,
            'name': str,
            'resolver_endpoint_type': ResolverEndpointType,
            'update_ip_addresses': List
        }

        self.attribute_map = {
            'resolver_endpoint_id': 'ResolverEndpointId',
            'name': 'Name',
            'resolver_endpoint_type': 'ResolverEndpointType',
            'update_ip_addresses': 'UpdateIpAddresses'
        }

        self._resolver_endpoint_id = resolver_endpoint_id
        self._name = name
        self._resolver_endpoint_type = resolver_endpoint_type
        self._update_ip_addresses = update_ip_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResolverEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResolverEndpointRequest of this UpdateResolverEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolver_endpoint_id(self):
        """Gets the resolver_endpoint_id of this UpdateResolverEndpointRequest.


        :return: The resolver_endpoint_id of this UpdateResolverEndpointRequest.
        :rtype: str
        """
        return self._resolver_endpoint_id

    @resolver_endpoint_id.setter
    def resolver_endpoint_id(self, resolver_endpoint_id):
        """Sets the resolver_endpoint_id of this UpdateResolverEndpointRequest.


        :param resolver_endpoint_id: The resolver_endpoint_id of this UpdateResolverEndpointRequest.
        :type resolver_endpoint_id: str
        """
        if resolver_endpoint_id is None:
            raise ValueError("Invalid value for `resolver_endpoint_id`, must not be `None`")

        self._resolver_endpoint_id = resolver_endpoint_id

    @property
    def name(self):
        """Gets the name of this UpdateResolverEndpointRequest.


        :return: The name of this UpdateResolverEndpointRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateResolverEndpointRequest.


        :param name: The name of this UpdateResolverEndpointRequest.
        :type name: str
        """

        self._name = name

    @property
    def resolver_endpoint_type(self):
        """Gets the resolver_endpoint_type of this UpdateResolverEndpointRequest.


        :return: The resolver_endpoint_type of this UpdateResolverEndpointRequest.
        :rtype: ResolverEndpointType
        """
        return self._resolver_endpoint_type

    @resolver_endpoint_type.setter
    def resolver_endpoint_type(self, resolver_endpoint_type):
        """Sets the resolver_endpoint_type of this UpdateResolverEndpointRequest.


        :param resolver_endpoint_type: The resolver_endpoint_type of this UpdateResolverEndpointRequest.
        :type resolver_endpoint_type: ResolverEndpointType
        """

        self._resolver_endpoint_type = resolver_endpoint_type

    @property
    def update_ip_addresses(self):
        """Gets the update_ip_addresses of this UpdateResolverEndpointRequest.


        :return: The update_ip_addresses of this UpdateResolverEndpointRequest.
        :rtype: List
        """
        return self._update_ip_addresses

    @update_ip_addresses.setter
    def update_ip_addresses(self, update_ip_addresses):
        """Sets the update_ip_addresses of this UpdateResolverEndpointRequest.


        :param update_ip_addresses: The update_ip_addresses of this UpdateResolverEndpointRequest.
        :type update_ip_addresses: List
        """

        self._update_ip_addresses = update_ip_addresses
