# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_resolver_config_response_resolver_config import GetResolverConfigResponseResolverConfig
from openapi_server import util


class GetResolverConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resolver_config: GetResolverConfigResponseResolverConfig=None):
        """GetResolverConfigResponse - a model defined in OpenAPI

        :param resolver_config: The resolver_config of this GetResolverConfigResponse.
        """
        self.openapi_types = {
            'resolver_config': GetResolverConfigResponseResolverConfig
        }

        self.attribute_map = {
            'resolver_config': 'ResolverConfig'
        }

        self._resolver_config = resolver_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetResolverConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetResolverConfigResponse of this GetResolverConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolver_config(self):
        """Gets the resolver_config of this GetResolverConfigResponse.


        :return: The resolver_config of this GetResolverConfigResponse.
        :rtype: GetResolverConfigResponseResolverConfig
        """
        return self._resolver_config

    @resolver_config.setter
    def resolver_config(self, resolver_config):
        """Sets the resolver_config of this GetResolverConfigResponse.


        :param resolver_config: The resolver_config of this GetResolverConfigResponse.
        :type resolver_config: GetResolverConfigResponseResolverConfig
        """

        self._resolver_config = resolver_config
