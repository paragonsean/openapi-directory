# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sort_order import SortOrder
from openapi_server import util


class ListResolverQueryLogConfigsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_results: int=None, next_token: str=None, filters: List=None, sort_by: str=None, sort_order: SortOrder=None):
        """ListResolverQueryLogConfigsRequest - a model defined in OpenAPI

        :param max_results: The max_results of this ListResolverQueryLogConfigsRequest.
        :param next_token: The next_token of this ListResolverQueryLogConfigsRequest.
        :param filters: The filters of this ListResolverQueryLogConfigsRequest.
        :param sort_by: The sort_by of this ListResolverQueryLogConfigsRequest.
        :param sort_order: The sort_order of this ListResolverQueryLogConfigsRequest.
        """
        self.openapi_types = {
            'max_results': int,
            'next_token': str,
            'filters': List,
            'sort_by': str,
            'sort_order': SortOrder
        }

        self.attribute_map = {
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'filters': 'Filters',
            'sort_by': 'SortBy',
            'sort_order': 'SortOrder'
        }

        self._max_results = max_results
        self._next_token = next_token
        self._filters = filters
        self._sort_by = sort_by
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListResolverQueryLogConfigsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListResolverQueryLogConfigsRequest of this ListResolverQueryLogConfigsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_results(self):
        """Gets the max_results of this ListResolverQueryLogConfigsRequest.


        :return: The max_results of this ListResolverQueryLogConfigsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListResolverQueryLogConfigsRequest.


        :param max_results: The max_results of this ListResolverQueryLogConfigsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListResolverQueryLogConfigsRequest.


        :return: The next_token of this ListResolverQueryLogConfigsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListResolverQueryLogConfigsRequest.


        :param next_token: The next_token of this ListResolverQueryLogConfigsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def filters(self):
        """Gets the filters of this ListResolverQueryLogConfigsRequest.


        :return: The filters of this ListResolverQueryLogConfigsRequest.
        :rtype: List
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ListResolverQueryLogConfigsRequest.


        :param filters: The filters of this ListResolverQueryLogConfigsRequest.
        :type filters: List
        """

        self._filters = filters

    @property
    def sort_by(self):
        """Gets the sort_by of this ListResolverQueryLogConfigsRequest.


        :return: The sort_by of this ListResolverQueryLogConfigsRequest.
        :rtype: str
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this ListResolverQueryLogConfigsRequest.


        :param sort_by: The sort_by of this ListResolverQueryLogConfigsRequest.
        :type sort_by: str
        """

        self._sort_by = sort_by

    @property
    def sort_order(self):
        """Gets the sort_order of this ListResolverQueryLogConfigsRequest.


        :return: The sort_order of this ListResolverQueryLogConfigsRequest.
        :rtype: SortOrder
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this ListResolverQueryLogConfigsRequest.


        :param sort_order: The sort_order of this ListResolverQueryLogConfigsRequest.
        :type sort_order: SortOrder
        """

        self._sort_order = sort_order
