# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resolver_rule_association_status import ResolverRuleAssociationStatus
from openapi_server import util


class DisassociateResolverRuleResponseResolverRuleAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, resolver_rule_id: str=None, name: str=None, vpcid: str=None, status: ResolverRuleAssociationStatus=None, status_message: str=None):
        """DisassociateResolverRuleResponseResolverRuleAssociation - a model defined in OpenAPI

        :param id: The id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :param resolver_rule_id: The resolver_rule_id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :param name: The name of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :param vpcid: The vpcid of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :param status: The status of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :param status_message: The status_message of this DisassociateResolverRuleResponseResolverRuleAssociation.
        """
        self.openapi_types = {
            'id': str,
            'resolver_rule_id': str,
            'name': str,
            'vpcid': str,
            'status': ResolverRuleAssociationStatus,
            'status_message': str
        }

        self.attribute_map = {
            'id': 'Id',
            'resolver_rule_id': 'ResolverRuleId',
            'name': 'Name',
            'vpcid': 'VPCId',
            'status': 'Status',
            'status_message': 'StatusMessage'
        }

        self._id = id
        self._resolver_rule_id = resolver_rule_id
        self._name = name
        self._vpcid = vpcid
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisassociateResolverRuleResponseResolverRuleAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisassociateResolverRuleResponse_ResolverRuleAssociation of this DisassociateResolverRuleResponseResolverRuleAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param id: The id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type id: str
        """

        self._id = id

    @property
    def resolver_rule_id(self):
        """Gets the resolver_rule_id of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The resolver_rule_id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: str
        """
        return self._resolver_rule_id

    @resolver_rule_id.setter
    def resolver_rule_id(self, resolver_rule_id):
        """Sets the resolver_rule_id of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param resolver_rule_id: The resolver_rule_id of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type resolver_rule_id: str
        """

        self._resolver_rule_id = resolver_rule_id

    @property
    def name(self):
        """Gets the name of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The name of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param name: The name of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type name: str
        """

        self._name = name

    @property
    def vpcid(self):
        """Gets the vpcid of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The vpcid of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: str
        """
        return self._vpcid

    @vpcid.setter
    def vpcid(self, vpcid):
        """Sets the vpcid of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param vpcid: The vpcid of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type vpcid: str
        """

        self._vpcid = vpcid

    @property
    def status(self):
        """Gets the status of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The status of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: ResolverRuleAssociationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param status: The status of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type status: ResolverRuleAssociationStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :return: The status_message of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DisassociateResolverRuleResponseResolverRuleAssociation.


        :param status_message: The status_message of this DisassociateResolverRuleResponseResolverRuleAssociation.
        :type status_message: str
        """

        self._status_message = status_message
