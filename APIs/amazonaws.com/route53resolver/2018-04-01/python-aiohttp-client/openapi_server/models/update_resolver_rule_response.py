# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_resolver_rule_response_resolver_rule import UpdateResolverRuleResponseResolverRule
from openapi_server import util


class UpdateResolverRuleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resolver_rule: UpdateResolverRuleResponseResolverRule=None):
        """UpdateResolverRuleResponse - a model defined in OpenAPI

        :param resolver_rule: The resolver_rule of this UpdateResolverRuleResponse.
        """
        self.openapi_types = {
            'resolver_rule': UpdateResolverRuleResponseResolverRule
        }

        self.attribute_map = {
            'resolver_rule': 'ResolverRule'
        }

        self._resolver_rule = resolver_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResolverRuleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResolverRuleResponse of this UpdateResolverRuleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolver_rule(self):
        """Gets the resolver_rule of this UpdateResolverRuleResponse.


        :return: The resolver_rule of this UpdateResolverRuleResponse.
        :rtype: UpdateResolverRuleResponseResolverRule
        """
        return self._resolver_rule

    @resolver_rule.setter
    def resolver_rule(self, resolver_rule):
        """Sets the resolver_rule of this UpdateResolverRuleResponse.


        :param resolver_rule: The resolver_rule of this UpdateResolverRuleResponse.
        :type resolver_rule: UpdateResolverRuleResponseResolverRule
        """

        self._resolver_rule = resolver_rule
