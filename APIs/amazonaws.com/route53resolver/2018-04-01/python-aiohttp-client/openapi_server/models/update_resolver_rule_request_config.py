# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateResolverRuleRequestConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, target_ips: List=None, resolver_endpoint_id: str=None):
        """UpdateResolverRuleRequestConfig - a model defined in OpenAPI

        :param name: The name of this UpdateResolverRuleRequestConfig.
        :param target_ips: The target_ips of this UpdateResolverRuleRequestConfig.
        :param resolver_endpoint_id: The resolver_endpoint_id of this UpdateResolverRuleRequestConfig.
        """
        self.openapi_types = {
            'name': str,
            'target_ips': List,
            'resolver_endpoint_id': str
        }

        self.attribute_map = {
            'name': 'Name',
            'target_ips': 'TargetIps',
            'resolver_endpoint_id': 'ResolverEndpointId'
        }

        self._name = name
        self._target_ips = target_ips
        self._resolver_endpoint_id = resolver_endpoint_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResolverRuleRequestConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResolverRuleRequest_Config of this UpdateResolverRuleRequestConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateResolverRuleRequestConfig.


        :return: The name of this UpdateResolverRuleRequestConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateResolverRuleRequestConfig.


        :param name: The name of this UpdateResolverRuleRequestConfig.
        :type name: str
        """

        self._name = name

    @property
    def target_ips(self):
        """Gets the target_ips of this UpdateResolverRuleRequestConfig.


        :return: The target_ips of this UpdateResolverRuleRequestConfig.
        :rtype: List
        """
        return self._target_ips

    @target_ips.setter
    def target_ips(self, target_ips):
        """Sets the target_ips of this UpdateResolverRuleRequestConfig.


        :param target_ips: The target_ips of this UpdateResolverRuleRequestConfig.
        :type target_ips: List
        """

        self._target_ips = target_ips

    @property
    def resolver_endpoint_id(self):
        """Gets the resolver_endpoint_id of this UpdateResolverRuleRequestConfig.


        :return: The resolver_endpoint_id of this UpdateResolverRuleRequestConfig.
        :rtype: str
        """
        return self._resolver_endpoint_id

    @resolver_endpoint_id.setter
    def resolver_endpoint_id(self, resolver_endpoint_id):
        """Sets the resolver_endpoint_id of this UpdateResolverRuleRequestConfig.


        :param resolver_endpoint_id: The resolver_endpoint_id of this UpdateResolverRuleRequestConfig.
        :type resolver_endpoint_id: str
        """

        self._resolver_endpoint_id = resolver_endpoint_id
