# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetResolverRulePolicyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resolver_rule_policy: str=None):
        """GetResolverRulePolicyResponse - a model defined in OpenAPI

        :param resolver_rule_policy: The resolver_rule_policy of this GetResolverRulePolicyResponse.
        """
        self.openapi_types = {
            'resolver_rule_policy': str
        }

        self.attribute_map = {
            'resolver_rule_policy': 'ResolverRulePolicy'
        }

        self._resolver_rule_policy = resolver_rule_policy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetResolverRulePolicyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetResolverRulePolicyResponse of this GetResolverRulePolicyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resolver_rule_policy(self):
        """Gets the resolver_rule_policy of this GetResolverRulePolicyResponse.


        :return: The resolver_rule_policy of this GetResolverRulePolicyResponse.
        :rtype: str
        """
        return self._resolver_rule_policy

    @resolver_rule_policy.setter
    def resolver_rule_policy(self, resolver_rule_policy):
        """Sets the resolver_rule_policy of this GetResolverRulePolicyResponse.


        :param resolver_rule_policy: The resolver_rule_policy of this GetResolverRulePolicyResponse.
        :type resolver_rule_policy: str
        """

        self._resolver_rule_policy = resolver_rule_policy
