# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_address_status import IpAddressStatus
from openapi_server import util


class IpAddressResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_id: str=None, subnet_id: str=None, ip: str=None, ipv6: str=None, status: IpAddressStatus=None, status_message: str=None, creation_time: str=None, modification_time: str=None):
        """IpAddressResponse - a model defined in OpenAPI

        :param ip_id: The ip_id of this IpAddressResponse.
        :param subnet_id: The subnet_id of this IpAddressResponse.
        :param ip: The ip of this IpAddressResponse.
        :param ipv6: The ipv6 of this IpAddressResponse.
        :param status: The status of this IpAddressResponse.
        :param status_message: The status_message of this IpAddressResponse.
        :param creation_time: The creation_time of this IpAddressResponse.
        :param modification_time: The modification_time of this IpAddressResponse.
        """
        self.openapi_types = {
            'ip_id': str,
            'subnet_id': str,
            'ip': str,
            'ipv6': str,
            'status': IpAddressStatus,
            'status_message': str,
            'creation_time': str,
            'modification_time': str
        }

        self.attribute_map = {
            'ip_id': 'IpId',
            'subnet_id': 'SubnetId',
            'ip': 'Ip',
            'ipv6': 'Ipv6',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'creation_time': 'CreationTime',
            'modification_time': 'ModificationTime'
        }

        self._ip_id = ip_id
        self._subnet_id = subnet_id
        self._ip = ip
        self._ipv6 = ipv6
        self._status = status
        self._status_message = status_message
        self._creation_time = creation_time
        self._modification_time = modification_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpAddressResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IpAddressResponse of this IpAddressResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_id(self):
        """Gets the ip_id of this IpAddressResponse.


        :return: The ip_id of this IpAddressResponse.
        :rtype: str
        """
        return self._ip_id

    @ip_id.setter
    def ip_id(self, ip_id):
        """Sets the ip_id of this IpAddressResponse.


        :param ip_id: The ip_id of this IpAddressResponse.
        :type ip_id: str
        """

        self._ip_id = ip_id

    @property
    def subnet_id(self):
        """Gets the subnet_id of this IpAddressResponse.


        :return: The subnet_id of this IpAddressResponse.
        :rtype: str
        """
        return self._subnet_id

    @subnet_id.setter
    def subnet_id(self, subnet_id):
        """Sets the subnet_id of this IpAddressResponse.


        :param subnet_id: The subnet_id of this IpAddressResponse.
        :type subnet_id: str
        """

        self._subnet_id = subnet_id

    @property
    def ip(self):
        """Gets the ip of this IpAddressResponse.


        :return: The ip of this IpAddressResponse.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this IpAddressResponse.


        :param ip: The ip of this IpAddressResponse.
        :type ip: str
        """

        self._ip = ip

    @property
    def ipv6(self):
        """Gets the ipv6 of this IpAddressResponse.


        :return: The ipv6 of this IpAddressResponse.
        :rtype: str
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6):
        """Sets the ipv6 of this IpAddressResponse.


        :param ipv6: The ipv6 of this IpAddressResponse.
        :type ipv6: str
        """

        self._ipv6 = ipv6

    @property
    def status(self):
        """Gets the status of this IpAddressResponse.


        :return: The status of this IpAddressResponse.
        :rtype: IpAddressStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IpAddressResponse.


        :param status: The status of this IpAddressResponse.
        :type status: IpAddressStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this IpAddressResponse.


        :return: The status_message of this IpAddressResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this IpAddressResponse.


        :param status_message: The status_message of this IpAddressResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def creation_time(self):
        """Gets the creation_time of this IpAddressResponse.


        :return: The creation_time of this IpAddressResponse.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this IpAddressResponse.


        :param creation_time: The creation_time of this IpAddressResponse.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def modification_time(self):
        """Gets the modification_time of this IpAddressResponse.


        :return: The modification_time of this IpAddressResponse.
        :rtype: str
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this IpAddressResponse.


        :param modification_time: The modification_time of this IpAddressResponse.
        :type modification_time: str
        """

        self._modification_time = modification_time
