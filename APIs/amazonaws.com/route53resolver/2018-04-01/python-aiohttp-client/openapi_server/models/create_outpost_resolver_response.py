# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_outpost_resolver_response_outpost_resolver import CreateOutpostResolverResponseOutpostResolver
from openapi_server import util


class CreateOutpostResolverResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outpost_resolver: CreateOutpostResolverResponseOutpostResolver=None):
        """CreateOutpostResolverResponse - a model defined in OpenAPI

        :param outpost_resolver: The outpost_resolver of this CreateOutpostResolverResponse.
        """
        self.openapi_types = {
            'outpost_resolver': CreateOutpostResolverResponseOutpostResolver
        }

        self.attribute_map = {
            'outpost_resolver': 'OutpostResolver'
        }

        self._outpost_resolver = outpost_resolver

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOutpostResolverResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOutpostResolverResponse of this CreateOutpostResolverResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outpost_resolver(self):
        """Gets the outpost_resolver of this CreateOutpostResolverResponse.


        :return: The outpost_resolver of this CreateOutpostResolverResponse.
        :rtype: CreateOutpostResolverResponseOutpostResolver
        """
        return self._outpost_resolver

    @outpost_resolver.setter
    def outpost_resolver(self, outpost_resolver):
        """Sets the outpost_resolver of this CreateOutpostResolverResponse.


        :param outpost_resolver: The outpost_resolver of this CreateOutpostResolverResponse.
        :type outpost_resolver: CreateOutpostResolverResponseOutpostResolver
        """

        self._outpost_resolver = outpost_resolver
