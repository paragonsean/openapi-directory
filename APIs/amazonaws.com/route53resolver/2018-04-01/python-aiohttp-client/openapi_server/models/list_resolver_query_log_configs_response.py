# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListResolverQueryLogConfigsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, total_count: int=None, total_filtered_count: int=None, resolver_query_log_configs: List=None):
        """ListResolverQueryLogConfigsResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListResolverQueryLogConfigsResponse.
        :param total_count: The total_count of this ListResolverQueryLogConfigsResponse.
        :param total_filtered_count: The total_filtered_count of this ListResolverQueryLogConfigsResponse.
        :param resolver_query_log_configs: The resolver_query_log_configs of this ListResolverQueryLogConfigsResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'total_count': int,
            'total_filtered_count': int,
            'resolver_query_log_configs': List
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'total_count': 'TotalCount',
            'total_filtered_count': 'TotalFilteredCount',
            'resolver_query_log_configs': 'ResolverQueryLogConfigs'
        }

        self._next_token = next_token
        self._total_count = total_count
        self._total_filtered_count = total_filtered_count
        self._resolver_query_log_configs = resolver_query_log_configs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListResolverQueryLogConfigsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListResolverQueryLogConfigsResponse of this ListResolverQueryLogConfigsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListResolverQueryLogConfigsResponse.


        :return: The next_token of this ListResolverQueryLogConfigsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListResolverQueryLogConfigsResponse.


        :param next_token: The next_token of this ListResolverQueryLogConfigsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def total_count(self):
        """Gets the total_count of this ListResolverQueryLogConfigsResponse.


        :return: The total_count of this ListResolverQueryLogConfigsResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this ListResolverQueryLogConfigsResponse.


        :param total_count: The total_count of this ListResolverQueryLogConfigsResponse.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def total_filtered_count(self):
        """Gets the total_filtered_count of this ListResolverQueryLogConfigsResponse.


        :return: The total_filtered_count of this ListResolverQueryLogConfigsResponse.
        :rtype: int
        """
        return self._total_filtered_count

    @total_filtered_count.setter
    def total_filtered_count(self, total_filtered_count):
        """Sets the total_filtered_count of this ListResolverQueryLogConfigsResponse.


        :param total_filtered_count: The total_filtered_count of this ListResolverQueryLogConfigsResponse.
        :type total_filtered_count: int
        """

        self._total_filtered_count = total_filtered_count

    @property
    def resolver_query_log_configs(self):
        """Gets the resolver_query_log_configs of this ListResolverQueryLogConfigsResponse.


        :return: The resolver_query_log_configs of this ListResolverQueryLogConfigsResponse.
        :rtype: List
        """
        return self._resolver_query_log_configs

    @resolver_query_log_configs.setter
    def resolver_query_log_configs(self, resolver_query_log_configs):
        """Sets the resolver_query_log_configs of this ListResolverQueryLogConfigsResponse.


        :param resolver_query_log_configs: The resolver_query_log_configs of this ListResolverQueryLogConfigsResponse.
        :type resolver_query_log_configs: List
        """

        self._resolver_query_log_configs = resolver_query_log_configs
