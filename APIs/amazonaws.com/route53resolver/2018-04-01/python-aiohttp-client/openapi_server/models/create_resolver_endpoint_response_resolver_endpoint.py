# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resolver_endpoint_direction import ResolverEndpointDirection
from openapi_server.models.resolver_endpoint_status import ResolverEndpointStatus
from openapi_server.models.resolver_endpoint_type import ResolverEndpointType
from openapi_server import util


class CreateResolverEndpointResponseResolverEndpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, creator_request_id: str=None, arn: str=None, name: str=None, security_group_ids: List=None, direction: ResolverEndpointDirection=None, ip_address_count: int=None, host_vpcid: str=None, status: ResolverEndpointStatus=None, status_message: str=None, creation_time: str=None, modification_time: str=None, resolver_endpoint_type: ResolverEndpointType=None, outpost_arn: str=None, preferred_instance_type: str=None):
        """CreateResolverEndpointResponseResolverEndpoint - a model defined in OpenAPI

        :param id: The id of this CreateResolverEndpointResponseResolverEndpoint.
        :param creator_request_id: The creator_request_id of this CreateResolverEndpointResponseResolverEndpoint.
        :param arn: The arn of this CreateResolverEndpointResponseResolverEndpoint.
        :param name: The name of this CreateResolverEndpointResponseResolverEndpoint.
        :param security_group_ids: The security_group_ids of this CreateResolverEndpointResponseResolverEndpoint.
        :param direction: The direction of this CreateResolverEndpointResponseResolverEndpoint.
        :param ip_address_count: The ip_address_count of this CreateResolverEndpointResponseResolverEndpoint.
        :param host_vpcid: The host_vpcid of this CreateResolverEndpointResponseResolverEndpoint.
        :param status: The status of this CreateResolverEndpointResponseResolverEndpoint.
        :param status_message: The status_message of this CreateResolverEndpointResponseResolverEndpoint.
        :param creation_time: The creation_time of this CreateResolverEndpointResponseResolverEndpoint.
        :param modification_time: The modification_time of this CreateResolverEndpointResponseResolverEndpoint.
        :param resolver_endpoint_type: The resolver_endpoint_type of this CreateResolverEndpointResponseResolverEndpoint.
        :param outpost_arn: The outpost_arn of this CreateResolverEndpointResponseResolverEndpoint.
        :param preferred_instance_type: The preferred_instance_type of this CreateResolverEndpointResponseResolverEndpoint.
        """
        self.openapi_types = {
            'id': str,
            'creator_request_id': str,
            'arn': str,
            'name': str,
            'security_group_ids': List,
            'direction': ResolverEndpointDirection,
            'ip_address_count': int,
            'host_vpcid': str,
            'status': ResolverEndpointStatus,
            'status_message': str,
            'creation_time': str,
            'modification_time': str,
            'resolver_endpoint_type': ResolverEndpointType,
            'outpost_arn': str,
            'preferred_instance_type': str
        }

        self.attribute_map = {
            'id': 'Id',
            'creator_request_id': 'CreatorRequestId',
            'arn': 'Arn',
            'name': 'Name',
            'security_group_ids': 'SecurityGroupIds',
            'direction': 'Direction',
            'ip_address_count': 'IpAddressCount',
            'host_vpcid': 'HostVPCId',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'creation_time': 'CreationTime',
            'modification_time': 'ModificationTime',
            'resolver_endpoint_type': 'ResolverEndpointType',
            'outpost_arn': 'OutpostArn',
            'preferred_instance_type': 'PreferredInstanceType'
        }

        self._id = id
        self._creator_request_id = creator_request_id
        self._arn = arn
        self._name = name
        self._security_group_ids = security_group_ids
        self._direction = direction
        self._ip_address_count = ip_address_count
        self._host_vpcid = host_vpcid
        self._status = status
        self._status_message = status_message
        self._creation_time = creation_time
        self._modification_time = modification_time
        self._resolver_endpoint_type = resolver_endpoint_type
        self._outpost_arn = outpost_arn
        self._preferred_instance_type = preferred_instance_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateResolverEndpointResponseResolverEndpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateResolverEndpointResponse_ResolverEndpoint of this CreateResolverEndpointResponseResolverEndpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The id of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateResolverEndpointResponseResolverEndpoint.


        :param id: The id of this CreateResolverEndpointResponseResolverEndpoint.
        :type id: str
        """

        self._id = id

    @property
    def creator_request_id(self):
        """Gets the creator_request_id of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The creator_request_id of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._creator_request_id

    @creator_request_id.setter
    def creator_request_id(self, creator_request_id):
        """Sets the creator_request_id of this CreateResolverEndpointResponseResolverEndpoint.


        :param creator_request_id: The creator_request_id of this CreateResolverEndpointResponseResolverEndpoint.
        :type creator_request_id: str
        """

        self._creator_request_id = creator_request_id

    @property
    def arn(self):
        """Gets the arn of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The arn of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateResolverEndpointResponseResolverEndpoint.


        :param arn: The arn of this CreateResolverEndpointResponseResolverEndpoint.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The name of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateResolverEndpointResponseResolverEndpoint.


        :param name: The name of this CreateResolverEndpointResponseResolverEndpoint.
        :type name: str
        """

        self._name = name

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The security_group_ids of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: List
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this CreateResolverEndpointResponseResolverEndpoint.


        :param security_group_ids: The security_group_ids of this CreateResolverEndpointResponseResolverEndpoint.
        :type security_group_ids: List
        """

        self._security_group_ids = security_group_ids

    @property
    def direction(self):
        """Gets the direction of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The direction of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: ResolverEndpointDirection
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this CreateResolverEndpointResponseResolverEndpoint.


        :param direction: The direction of this CreateResolverEndpointResponseResolverEndpoint.
        :type direction: ResolverEndpointDirection
        """

        self._direction = direction

    @property
    def ip_address_count(self):
        """Gets the ip_address_count of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The ip_address_count of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: int
        """
        return self._ip_address_count

    @ip_address_count.setter
    def ip_address_count(self, ip_address_count):
        """Sets the ip_address_count of this CreateResolverEndpointResponseResolverEndpoint.


        :param ip_address_count: The ip_address_count of this CreateResolverEndpointResponseResolverEndpoint.
        :type ip_address_count: int
        """

        self._ip_address_count = ip_address_count

    @property
    def host_vpcid(self):
        """Gets the host_vpcid of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The host_vpcid of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._host_vpcid

    @host_vpcid.setter
    def host_vpcid(self, host_vpcid):
        """Sets the host_vpcid of this CreateResolverEndpointResponseResolverEndpoint.


        :param host_vpcid: The host_vpcid of this CreateResolverEndpointResponseResolverEndpoint.
        :type host_vpcid: str
        """

        self._host_vpcid = host_vpcid

    @property
    def status(self):
        """Gets the status of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The status of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: ResolverEndpointStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateResolverEndpointResponseResolverEndpoint.


        :param status: The status of this CreateResolverEndpointResponseResolverEndpoint.
        :type status: ResolverEndpointStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The status_message of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this CreateResolverEndpointResponseResolverEndpoint.


        :param status_message: The status_message of this CreateResolverEndpointResponseResolverEndpoint.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def creation_time(self):
        """Gets the creation_time of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The creation_time of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CreateResolverEndpointResponseResolverEndpoint.


        :param creation_time: The creation_time of this CreateResolverEndpointResponseResolverEndpoint.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def modification_time(self):
        """Gets the modification_time of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The modification_time of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this CreateResolverEndpointResponseResolverEndpoint.


        :param modification_time: The modification_time of this CreateResolverEndpointResponseResolverEndpoint.
        :type modification_time: str
        """

        self._modification_time = modification_time

    @property
    def resolver_endpoint_type(self):
        """Gets the resolver_endpoint_type of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The resolver_endpoint_type of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: ResolverEndpointType
        """
        return self._resolver_endpoint_type

    @resolver_endpoint_type.setter
    def resolver_endpoint_type(self, resolver_endpoint_type):
        """Sets the resolver_endpoint_type of this CreateResolverEndpointResponseResolverEndpoint.


        :param resolver_endpoint_type: The resolver_endpoint_type of this CreateResolverEndpointResponseResolverEndpoint.
        :type resolver_endpoint_type: ResolverEndpointType
        """

        self._resolver_endpoint_type = resolver_endpoint_type

    @property
    def outpost_arn(self):
        """Gets the outpost_arn of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The outpost_arn of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._outpost_arn

    @outpost_arn.setter
    def outpost_arn(self, outpost_arn):
        """Sets the outpost_arn of this CreateResolverEndpointResponseResolverEndpoint.


        :param outpost_arn: The outpost_arn of this CreateResolverEndpointResponseResolverEndpoint.
        :type outpost_arn: str
        """

        self._outpost_arn = outpost_arn

    @property
    def preferred_instance_type(self):
        """Gets the preferred_instance_type of this CreateResolverEndpointResponseResolverEndpoint.


        :return: The preferred_instance_type of this CreateResolverEndpointResponseResolverEndpoint.
        :rtype: str
        """
        return self._preferred_instance_type

    @preferred_instance_type.setter
    def preferred_instance_type(self, preferred_instance_type):
        """Sets the preferred_instance_type of this CreateResolverEndpointResponseResolverEndpoint.


        :param preferred_instance_type: The preferred_instance_type of this CreateResolverEndpointResponseResolverEndpoint.
        :type preferred_instance_type: str
        """

        self._preferred_instance_type = preferred_instance_type
