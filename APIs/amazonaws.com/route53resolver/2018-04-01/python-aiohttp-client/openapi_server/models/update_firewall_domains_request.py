# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.firewall_domain_update_operation import FirewallDomainUpdateOperation
from openapi_server import util


class UpdateFirewallDomainsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firewall_domain_list_id: str=None, operation: FirewallDomainUpdateOperation=None, domains: List=None):
        """UpdateFirewallDomainsRequest - a model defined in OpenAPI

        :param firewall_domain_list_id: The firewall_domain_list_id of this UpdateFirewallDomainsRequest.
        :param operation: The operation of this UpdateFirewallDomainsRequest.
        :param domains: The domains of this UpdateFirewallDomainsRequest.
        """
        self.openapi_types = {
            'firewall_domain_list_id': str,
            'operation': FirewallDomainUpdateOperation,
            'domains': List
        }

        self.attribute_map = {
            'firewall_domain_list_id': 'FirewallDomainListId',
            'operation': 'Operation',
            'domains': 'Domains'
        }

        self._firewall_domain_list_id = firewall_domain_list_id
        self._operation = operation
        self._domains = domains

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFirewallDomainsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFirewallDomainsRequest of this UpdateFirewallDomainsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firewall_domain_list_id(self):
        """Gets the firewall_domain_list_id of this UpdateFirewallDomainsRequest.


        :return: The firewall_domain_list_id of this UpdateFirewallDomainsRequest.
        :rtype: str
        """
        return self._firewall_domain_list_id

    @firewall_domain_list_id.setter
    def firewall_domain_list_id(self, firewall_domain_list_id):
        """Sets the firewall_domain_list_id of this UpdateFirewallDomainsRequest.


        :param firewall_domain_list_id: The firewall_domain_list_id of this UpdateFirewallDomainsRequest.
        :type firewall_domain_list_id: str
        """
        if firewall_domain_list_id is None:
            raise ValueError("Invalid value for `firewall_domain_list_id`, must not be `None`")

        self._firewall_domain_list_id = firewall_domain_list_id

    @property
    def operation(self):
        """Gets the operation of this UpdateFirewallDomainsRequest.


        :return: The operation of this UpdateFirewallDomainsRequest.
        :rtype: FirewallDomainUpdateOperation
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this UpdateFirewallDomainsRequest.


        :param operation: The operation of this UpdateFirewallDomainsRequest.
        :type operation: FirewallDomainUpdateOperation
        """
        if operation is None:
            raise ValueError("Invalid value for `operation`, must not be `None`")

        self._operation = operation

    @property
    def domains(self):
        """Gets the domains of this UpdateFirewallDomainsRequest.


        :return: The domains of this UpdateFirewallDomainsRequest.
        :rtype: List
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this UpdateFirewallDomainsRequest.


        :param domains: The domains of this UpdateFirewallDomainsRequest.
        :type domains: List
        """
        if domains is None:
            raise ValueError("Invalid value for `domains`, must not be `None`")

        self._domains = domains
