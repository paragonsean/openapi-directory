# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mutation_protection_status import MutationProtectionStatus
from openapi_server import util


class UpdateFirewallRuleGroupAssociationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firewall_rule_group_association_id: str=None, priority: int=None, mutation_protection: MutationProtectionStatus=None, name: str=None):
        """UpdateFirewallRuleGroupAssociationRequest - a model defined in OpenAPI

        :param firewall_rule_group_association_id: The firewall_rule_group_association_id of this UpdateFirewallRuleGroupAssociationRequest.
        :param priority: The priority of this UpdateFirewallRuleGroupAssociationRequest.
        :param mutation_protection: The mutation_protection of this UpdateFirewallRuleGroupAssociationRequest.
        :param name: The name of this UpdateFirewallRuleGroupAssociationRequest.
        """
        self.openapi_types = {
            'firewall_rule_group_association_id': str,
            'priority': int,
            'mutation_protection': MutationProtectionStatus,
            'name': str
        }

        self.attribute_map = {
            'firewall_rule_group_association_id': 'FirewallRuleGroupAssociationId',
            'priority': 'Priority',
            'mutation_protection': 'MutationProtection',
            'name': 'Name'
        }

        self._firewall_rule_group_association_id = firewall_rule_group_association_id
        self._priority = priority
        self._mutation_protection = mutation_protection
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFirewallRuleGroupAssociationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFirewallRuleGroupAssociationRequest of this UpdateFirewallRuleGroupAssociationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firewall_rule_group_association_id(self):
        """Gets the firewall_rule_group_association_id of this UpdateFirewallRuleGroupAssociationRequest.


        :return: The firewall_rule_group_association_id of this UpdateFirewallRuleGroupAssociationRequest.
        :rtype: str
        """
        return self._firewall_rule_group_association_id

    @firewall_rule_group_association_id.setter
    def firewall_rule_group_association_id(self, firewall_rule_group_association_id):
        """Sets the firewall_rule_group_association_id of this UpdateFirewallRuleGroupAssociationRequest.


        :param firewall_rule_group_association_id: The firewall_rule_group_association_id of this UpdateFirewallRuleGroupAssociationRequest.
        :type firewall_rule_group_association_id: str
        """
        if firewall_rule_group_association_id is None:
            raise ValueError("Invalid value for `firewall_rule_group_association_id`, must not be `None`")

        self._firewall_rule_group_association_id = firewall_rule_group_association_id

    @property
    def priority(self):
        """Gets the priority of this UpdateFirewallRuleGroupAssociationRequest.


        :return: The priority of this UpdateFirewallRuleGroupAssociationRequest.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this UpdateFirewallRuleGroupAssociationRequest.


        :param priority: The priority of this UpdateFirewallRuleGroupAssociationRequest.
        :type priority: int
        """

        self._priority = priority

    @property
    def mutation_protection(self):
        """Gets the mutation_protection of this UpdateFirewallRuleGroupAssociationRequest.


        :return: The mutation_protection of this UpdateFirewallRuleGroupAssociationRequest.
        :rtype: MutationProtectionStatus
        """
        return self._mutation_protection

    @mutation_protection.setter
    def mutation_protection(self, mutation_protection):
        """Sets the mutation_protection of this UpdateFirewallRuleGroupAssociationRequest.


        :param mutation_protection: The mutation_protection of this UpdateFirewallRuleGroupAssociationRequest.
        :type mutation_protection: MutationProtectionStatus
        """

        self._mutation_protection = mutation_protection

    @property
    def name(self):
        """Gets the name of this UpdateFirewallRuleGroupAssociationRequest.


        :return: The name of this UpdateFirewallRuleGroupAssociationRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateFirewallRuleGroupAssociationRequest.


        :param name: The name of this UpdateFirewallRuleGroupAssociationRequest.
        :type name: str
        """

        self._name = name
