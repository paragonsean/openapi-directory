# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateFirewallDomainListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creator_request_id: str=None, name: str=None, tags: List=None):
        """CreateFirewallDomainListRequest - a model defined in OpenAPI

        :param creator_request_id: The creator_request_id of this CreateFirewallDomainListRequest.
        :param name: The name of this CreateFirewallDomainListRequest.
        :param tags: The tags of this CreateFirewallDomainListRequest.
        """
        self.openapi_types = {
            'creator_request_id': str,
            'name': str,
            'tags': List
        }

        self.attribute_map = {
            'creator_request_id': 'CreatorRequestId',
            'name': 'Name',
            'tags': 'Tags'
        }

        self._creator_request_id = creator_request_id
        self._name = name
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFirewallDomainListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFirewallDomainListRequest of this CreateFirewallDomainListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator_request_id(self):
        """Gets the creator_request_id of this CreateFirewallDomainListRequest.


        :return: The creator_request_id of this CreateFirewallDomainListRequest.
        :rtype: str
        """
        return self._creator_request_id

    @creator_request_id.setter
    def creator_request_id(self, creator_request_id):
        """Sets the creator_request_id of this CreateFirewallDomainListRequest.


        :param creator_request_id: The creator_request_id of this CreateFirewallDomainListRequest.
        :type creator_request_id: str
        """
        if creator_request_id is None:
            raise ValueError("Invalid value for `creator_request_id`, must not be `None`")

        self._creator_request_id = creator_request_id

    @property
    def name(self):
        """Gets the name of this CreateFirewallDomainListRequest.


        :return: The name of this CreateFirewallDomainListRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateFirewallDomainListRequest.


        :param name: The name of this CreateFirewallDomainListRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this CreateFirewallDomainListRequest.


        :return: The tags of this CreateFirewallDomainListRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateFirewallDomainListRequest.


        :param tags: The tags of this CreateFirewallDomainListRequest.
        :type tags: List
        """

        self._tags = tags
