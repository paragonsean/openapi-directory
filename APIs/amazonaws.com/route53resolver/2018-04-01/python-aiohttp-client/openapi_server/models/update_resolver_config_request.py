# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.autodefined_reverse_flag import AutodefinedReverseFlag
from openapi_server import util


class UpdateResolverConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_id: str=None, autodefined_reverse_flag: AutodefinedReverseFlag=None):
        """UpdateResolverConfigRequest - a model defined in OpenAPI

        :param resource_id: The resource_id of this UpdateResolverConfigRequest.
        :param autodefined_reverse_flag: The autodefined_reverse_flag of this UpdateResolverConfigRequest.
        """
        self.openapi_types = {
            'resource_id': str,
            'autodefined_reverse_flag': AutodefinedReverseFlag
        }

        self.attribute_map = {
            'resource_id': 'ResourceId',
            'autodefined_reverse_flag': 'AutodefinedReverseFlag'
        }

        self._resource_id = resource_id
        self._autodefined_reverse_flag = autodefined_reverse_flag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResolverConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResolverConfigRequest of this UpdateResolverConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_id(self):
        """Gets the resource_id of this UpdateResolverConfigRequest.


        :return: The resource_id of this UpdateResolverConfigRequest.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this UpdateResolverConfigRequest.


        :param resource_id: The resource_id of this UpdateResolverConfigRequest.
        :type resource_id: str
        """
        if resource_id is None:
            raise ValueError("Invalid value for `resource_id`, must not be `None`")

        self._resource_id = resource_id

    @property
    def autodefined_reverse_flag(self):
        """Gets the autodefined_reverse_flag of this UpdateResolverConfigRequest.


        :return: The autodefined_reverse_flag of this UpdateResolverConfigRequest.
        :rtype: AutodefinedReverseFlag
        """
        return self._autodefined_reverse_flag

    @autodefined_reverse_flag.setter
    def autodefined_reverse_flag(self, autodefined_reverse_flag):
        """Sets the autodefined_reverse_flag of this UpdateResolverConfigRequest.


        :param autodefined_reverse_flag: The autodefined_reverse_flag of this UpdateResolverConfigRequest.
        :type autodefined_reverse_flag: AutodefinedReverseFlag
        """
        if autodefined_reverse_flag is None:
            raise ValueError("Invalid value for `autodefined_reverse_flag`, must not be `None`")

        self._autodefined_reverse_flag = autodefined_reverse_flag
