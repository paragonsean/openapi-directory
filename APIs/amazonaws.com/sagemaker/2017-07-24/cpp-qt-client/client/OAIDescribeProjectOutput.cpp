/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeProjectOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeProjectOutput::OAIDescribeProjectOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeProjectOutput::OAIDescribeProjectOutput() {
    this->initializeModel();
}

OAIDescribeProjectOutput::~OAIDescribeProjectOutput() {}

void OAIDescribeProjectOutput::initializeModel() {

    m_project_arn_isSet = false;
    m_project_arn_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_description_isSet = false;
    m_project_description_isValid = false;

    m_service_catalog_provisioning_details_isSet = false;
    m_service_catalog_provisioning_details_isValid = false;

    m_service_catalog_provisioned_product_details_isSet = false;
    m_service_catalog_provisioned_product_details_isValid = false;

    m_project_status_isSet = false;
    m_project_status_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;
}

void OAIDescribeProjectOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeProjectOutput::fromJsonObject(QJsonObject json) {

    m_project_arn_isValid = ::OpenAPI::fromJsonValue(m_project_arn, json[QString("ProjectArn")]);
    m_project_arn_isSet = !json[QString("ProjectArn")].isNull() && m_project_arn_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("ProjectName")]);
    m_project_name_isSet = !json[QString("ProjectName")].isNull() && m_project_name_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("ProjectId")]);
    m_project_id_isSet = !json[QString("ProjectId")].isNull() && m_project_id_isValid;

    m_project_description_isValid = ::OpenAPI::fromJsonValue(m_project_description, json[QString("ProjectDescription")]);
    m_project_description_isSet = !json[QString("ProjectDescription")].isNull() && m_project_description_isValid;

    m_service_catalog_provisioning_details_isValid = ::OpenAPI::fromJsonValue(m_service_catalog_provisioning_details, json[QString("ServiceCatalogProvisioningDetails")]);
    m_service_catalog_provisioning_details_isSet = !json[QString("ServiceCatalogProvisioningDetails")].isNull() && m_service_catalog_provisioning_details_isValid;

    m_service_catalog_provisioned_product_details_isValid = ::OpenAPI::fromJsonValue(m_service_catalog_provisioned_product_details, json[QString("ServiceCatalogProvisionedProductDetails")]);
    m_service_catalog_provisioned_product_details_isSet = !json[QString("ServiceCatalogProvisionedProductDetails")].isNull() && m_service_catalog_provisioned_product_details_isValid;

    m_project_status_isValid = ::OpenAPI::fromJsonValue(m_project_status, json[QString("ProjectStatus")]);
    m_project_status_isSet = !json[QString("ProjectStatus")].isNull() && m_project_status_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;
}

QString OAIDescribeProjectOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeProjectOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_project_arn_isSet) {
        obj.insert(QString("ProjectArn"), ::OpenAPI::toJsonValue(m_project_arn));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("ProjectName"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("ProjectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_description_isSet) {
        obj.insert(QString("ProjectDescription"), ::OpenAPI::toJsonValue(m_project_description));
    }
    if (m_service_catalog_provisioning_details.isSet()) {
        obj.insert(QString("ServiceCatalogProvisioningDetails"), ::OpenAPI::toJsonValue(m_service_catalog_provisioning_details));
    }
    if (m_service_catalog_provisioned_product_details.isSet()) {
        obj.insert(QString("ServiceCatalogProvisionedProductDetails"), ::OpenAPI::toJsonValue(m_service_catalog_provisioned_product_details));
    }
    if (m_project_status.isSet()) {
        obj.insert(QString("ProjectStatus"), ::OpenAPI::toJsonValue(m_project_status));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_modified_by.isSet()) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    return obj;
}

QString OAIDescribeProjectOutput::getProjectArn() const {
    return m_project_arn;
}
void OAIDescribeProjectOutput::setProjectArn(const QString &project_arn) {
    m_project_arn = project_arn;
    m_project_arn_isSet = true;
}

bool OAIDescribeProjectOutput::is_project_arn_Set() const{
    return m_project_arn_isSet;
}

bool OAIDescribeProjectOutput::is_project_arn_Valid() const{
    return m_project_arn_isValid;
}

QString OAIDescribeProjectOutput::getProjectName() const {
    return m_project_name;
}
void OAIDescribeProjectOutput::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIDescribeProjectOutput::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIDescribeProjectOutput::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIDescribeProjectOutput::getProjectId() const {
    return m_project_id;
}
void OAIDescribeProjectOutput::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIDescribeProjectOutput::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIDescribeProjectOutput::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIDescribeProjectOutput::getProjectDescription() const {
    return m_project_description;
}
void OAIDescribeProjectOutput::setProjectDescription(const QString &project_description) {
    m_project_description = project_description;
    m_project_description_isSet = true;
}

bool OAIDescribeProjectOutput::is_project_description_Set() const{
    return m_project_description_isSet;
}

bool OAIDescribeProjectOutput::is_project_description_Valid() const{
    return m_project_description_isValid;
}

OAIDescribeProjectOutput_ServiceCatalogProvisioningDetails OAIDescribeProjectOutput::getServiceCatalogProvisioningDetails() const {
    return m_service_catalog_provisioning_details;
}
void OAIDescribeProjectOutput::setServiceCatalogProvisioningDetails(const OAIDescribeProjectOutput_ServiceCatalogProvisioningDetails &service_catalog_provisioning_details) {
    m_service_catalog_provisioning_details = service_catalog_provisioning_details;
    m_service_catalog_provisioning_details_isSet = true;
}

bool OAIDescribeProjectOutput::is_service_catalog_provisioning_details_Set() const{
    return m_service_catalog_provisioning_details_isSet;
}

bool OAIDescribeProjectOutput::is_service_catalog_provisioning_details_Valid() const{
    return m_service_catalog_provisioning_details_isValid;
}

OAIDescribeProjectOutput_ServiceCatalogProvisionedProductDetails OAIDescribeProjectOutput::getServiceCatalogProvisionedProductDetails() const {
    return m_service_catalog_provisioned_product_details;
}
void OAIDescribeProjectOutput::setServiceCatalogProvisionedProductDetails(const OAIDescribeProjectOutput_ServiceCatalogProvisionedProductDetails &service_catalog_provisioned_product_details) {
    m_service_catalog_provisioned_product_details = service_catalog_provisioned_product_details;
    m_service_catalog_provisioned_product_details_isSet = true;
}

bool OAIDescribeProjectOutput::is_service_catalog_provisioned_product_details_Set() const{
    return m_service_catalog_provisioned_product_details_isSet;
}

bool OAIDescribeProjectOutput::is_service_catalog_provisioned_product_details_Valid() const{
    return m_service_catalog_provisioned_product_details_isValid;
}

OAIProjectStatus OAIDescribeProjectOutput::getProjectStatus() const {
    return m_project_status;
}
void OAIDescribeProjectOutput::setProjectStatus(const OAIProjectStatus &project_status) {
    m_project_status = project_status;
    m_project_status_isSet = true;
}

bool OAIDescribeProjectOutput::is_project_status_Set() const{
    return m_project_status_isSet;
}

bool OAIDescribeProjectOutput::is_project_status_Valid() const{
    return m_project_status_isValid;
}

OAIUserContext OAIDescribeProjectOutput::getCreatedBy() const {
    return m_created_by;
}
void OAIDescribeProjectOutput::setCreatedBy(const OAIUserContext &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIDescribeProjectOutput::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIDescribeProjectOutput::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIDescribeProjectOutput::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeProjectOutput::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeProjectOutput::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeProjectOutput::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeProjectOutput::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeProjectOutput::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeProjectOutput::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeProjectOutput::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIUserContext OAIDescribeProjectOutput::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIDescribeProjectOutput::setLastModifiedBy(const OAIUserContext &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIDescribeProjectOutput::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIDescribeProjectOutput::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

bool OAIDescribeProjectOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_catalog_provisioning_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_catalog_provisioned_product_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeProjectOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_arn_isValid && m_project_name_isValid && m_project_id_isValid && m_service_catalog_provisioning_details_isValid && m_project_status_isValid && m_creation_time_isValid && true;
}

} // namespace OpenAPI
