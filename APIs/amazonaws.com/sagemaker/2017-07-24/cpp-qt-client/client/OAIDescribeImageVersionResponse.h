/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeImageVersionResponse.h
 *
 * 
 */

#ifndef OAIDescribeImageVersionResponse_H
#define OAIDescribeImageVersionResponse_H

#include <QJsonObject>

#include "OAIImageVersionStatus.h"
#include "OAIJobType.h"
#include "OAIProcessor.h"
#include "OAIVendorGuidance.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeImageVersionResponse : public OAIObject {
public:
    OAIDescribeImageVersionResponse();
    OAIDescribeImageVersionResponse(QString json);
    ~OAIDescribeImageVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseImage() const;
    void setBaseImage(const QString &base_image);
    bool is_base_image_Set() const;
    bool is_base_image_Valid() const;

    QString getContainerImage() const;
    void setContainerImage(const QString &container_image);
    bool is_container_image_Set() const;
    bool is_container_image_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getImageArn() const;
    void setImageArn(const QString &image_arn);
    bool is_image_arn_Set() const;
    bool is_image_arn_Valid() const;

    QString getImageVersionArn() const;
    void setImageVersionArn(const QString &image_version_arn);
    bool is_image_version_arn_Set() const;
    bool is_image_version_arn_Valid() const;

    OAIImageVersionStatus getImageVersionStatus() const;
    void setImageVersionStatus(const OAIImageVersionStatus &image_version_status);
    bool is_image_version_status_Set() const;
    bool is_image_version_status_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIVendorGuidance getVendorGuidance() const;
    void setVendorGuidance(const OAIVendorGuidance &vendor_guidance);
    bool is_vendor_guidance_Set() const;
    bool is_vendor_guidance_Valid() const;

    OAIJobType getJobType() const;
    void setJobType(const OAIJobType &job_type);
    bool is_job_type_Set() const;
    bool is_job_type_Valid() const;

    QString getMlFramework() const;
    void setMlFramework(const QString &ml_framework);
    bool is_ml_framework_Set() const;
    bool is_ml_framework_Valid() const;

    QString getProgrammingLang() const;
    void setProgrammingLang(const QString &programming_lang);
    bool is_programming_lang_Set() const;
    bool is_programming_lang_Valid() const;

    OAIProcessor getProcessor() const;
    void setProcessor(const OAIProcessor &processor);
    bool is_processor_Set() const;
    bool is_processor_Valid() const;

    bool getHorovod() const;
    void setHorovod(const bool &horovod);
    bool is_horovod_Set() const;
    bool is_horovod_Valid() const;

    QString getReleaseNotes() const;
    void setReleaseNotes(const QString &release_notes);
    bool is_release_notes_Set() const;
    bool is_release_notes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_image;
    bool m_base_image_isSet;
    bool m_base_image_isValid;

    QString m_container_image;
    bool m_container_image_isSet;
    bool m_container_image_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_image_arn;
    bool m_image_arn_isSet;
    bool m_image_arn_isValid;

    QString m_image_version_arn;
    bool m_image_version_arn_isSet;
    bool m_image_version_arn_isValid;

    OAIImageVersionStatus m_image_version_status;
    bool m_image_version_status_isSet;
    bool m_image_version_status_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIVendorGuidance m_vendor_guidance;
    bool m_vendor_guidance_isSet;
    bool m_vendor_guidance_isValid;

    OAIJobType m_job_type;
    bool m_job_type_isSet;
    bool m_job_type_isValid;

    QString m_ml_framework;
    bool m_ml_framework_isSet;
    bool m_ml_framework_isValid;

    QString m_programming_lang;
    bool m_programming_lang_isSet;
    bool m_programming_lang_isValid;

    OAIProcessor m_processor;
    bool m_processor_isSet;
    bool m_processor_isValid;

    bool m_horovod;
    bool m_horovod_isSet;
    bool m_horovod_isValid;

    QString m_release_notes;
    bool m_release_notes_isSet;
    bool m_release_notes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeImageVersionResponse)

#endif // OAIDescribeImageVersionResponse_H
