/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionSummary::OAIActionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionSummary::OAIActionSummary() {
    this->initializeModel();
}

OAIActionSummary::~OAIActionSummary() {}

void OAIActionSummary::initializeModel() {

    m_action_arn_isSet = false;
    m_action_arn_isValid = false;

    m_action_name_isSet = false;
    m_action_name_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAIActionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionSummary::fromJsonObject(QJsonObject json) {

    m_action_arn_isValid = ::OpenAPI::fromJsonValue(m_action_arn, json[QString("ActionArn")]);
    m_action_arn_isSet = !json[QString("ActionArn")].isNull() && m_action_arn_isValid;

    m_action_name_isValid = ::OpenAPI::fromJsonValue(m_action_name, json[QString("ActionName")]);
    m_action_name_isSet = !json[QString("ActionName")].isNull() && m_action_name_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("ActionType")]);
    m_action_type_isSet = !json[QString("ActionType")].isNull() && m_action_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAIActionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_action_arn_isSet) {
        obj.insert(QString("ActionArn"), ::OpenAPI::toJsonValue(m_action_arn));
    }
    if (m_action_name_isSet) {
        obj.insert(QString("ActionName"), ::OpenAPI::toJsonValue(m_action_name));
    }
    if (m_source.isSet()) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_action_type_isSet) {
        obj.insert(QString("ActionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAIActionSummary::getActionArn() const {
    return m_action_arn;
}
void OAIActionSummary::setActionArn(const QString &action_arn) {
    m_action_arn = action_arn;
    m_action_arn_isSet = true;
}

bool OAIActionSummary::is_action_arn_Set() const{
    return m_action_arn_isSet;
}

bool OAIActionSummary::is_action_arn_Valid() const{
    return m_action_arn_isValid;
}

QString OAIActionSummary::getActionName() const {
    return m_action_name;
}
void OAIActionSummary::setActionName(const QString &action_name) {
    m_action_name = action_name;
    m_action_name_isSet = true;
}

bool OAIActionSummary::is_action_name_Set() const{
    return m_action_name_isSet;
}

bool OAIActionSummary::is_action_name_Valid() const{
    return m_action_name_isValid;
}

OAIDescribeActionResponse_Source OAIActionSummary::getSource() const {
    return m_source;
}
void OAIActionSummary::setSource(const OAIDescribeActionResponse_Source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIActionSummary::is_source_Set() const{
    return m_source_isSet;
}

bool OAIActionSummary::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIActionSummary::getActionType() const {
    return m_action_type;
}
void OAIActionSummary::setActionType(const QString &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAIActionSummary::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAIActionSummary::is_action_type_Valid() const{
    return m_action_type_isValid;
}

OAIActionStatus OAIActionSummary::getStatus() const {
    return m_status;
}
void OAIActionSummary::setStatus(const OAIActionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIActionSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIActionSummary::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIActionSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIActionSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIActionSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIActionSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIActionSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIActionSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIActionSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIActionSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAIActionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
