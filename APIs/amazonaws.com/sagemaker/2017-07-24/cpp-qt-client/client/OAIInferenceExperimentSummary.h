/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInferenceExperimentSummary.h
 *
 * Lists a summary of properties of an inference experiment.
 */

#ifndef OAIInferenceExperimentSummary_H
#define OAIInferenceExperimentSummary_H

#include <QJsonObject>

#include "OAIInferenceExperimentStatus.h"
#include "OAIInferenceExperimentSummary_Schedule.h"
#include "OAIInferenceExperimentType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInferenceExperimentSummary_Schedule;

class OAIInferenceExperimentSummary : public OAIObject {
public:
    OAIInferenceExperimentSummary();
    OAIInferenceExperimentSummary(QString json);
    ~OAIInferenceExperimentSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIInferenceExperimentType getType() const;
    void setType(const OAIInferenceExperimentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIInferenceExperimentSummary_Schedule getSchedule() const;
    void setSchedule(const OAIInferenceExperimentSummary_Schedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    OAIInferenceExperimentStatus getStatus() const;
    void setStatus(const OAIInferenceExperimentStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusReason() const;
    void setStatusReason(const QString &status_reason);
    bool is_status_reason_Set() const;
    bool is_status_reason_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getCompletionTime() const;
    void setCompletionTime(const QDateTime &completion_time);
    bool is_completion_time_Set() const;
    bool is_completion_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIInferenceExperimentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIInferenceExperimentSummary_Schedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    OAIInferenceExperimentStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_reason;
    bool m_status_reason_isSet;
    bool m_status_reason_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_completion_time;
    bool m_completion_time_isSet;
    bool m_completion_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInferenceExperimentSummary)

#endif // OAIInferenceExperimentSummary_H
