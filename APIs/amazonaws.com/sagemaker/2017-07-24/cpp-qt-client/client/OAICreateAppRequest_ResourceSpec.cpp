/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppRequest_ResourceSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppRequest_ResourceSpec::OAICreateAppRequest_ResourceSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppRequest_ResourceSpec::OAICreateAppRequest_ResourceSpec() {
    this->initializeModel();
}

OAICreateAppRequest_ResourceSpec::~OAICreateAppRequest_ResourceSpec() {}

void OAICreateAppRequest_ResourceSpec::initializeModel() {

    m_sage_maker_image_arn_isSet = false;
    m_sage_maker_image_arn_isValid = false;

    m_sage_maker_image_version_arn_isSet = false;
    m_sage_maker_image_version_arn_isValid = false;

    m_instance_type_isSet = false;
    m_instance_type_isValid = false;

    m_lifecycle_config_arn_isSet = false;
    m_lifecycle_config_arn_isValid = false;
}

void OAICreateAppRequest_ResourceSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppRequest_ResourceSpec::fromJsonObject(QJsonObject json) {

    m_sage_maker_image_arn_isValid = ::OpenAPI::fromJsonValue(m_sage_maker_image_arn, json[QString("SageMakerImageArn")]);
    m_sage_maker_image_arn_isSet = !json[QString("SageMakerImageArn")].isNull() && m_sage_maker_image_arn_isValid;

    m_sage_maker_image_version_arn_isValid = ::OpenAPI::fromJsonValue(m_sage_maker_image_version_arn, json[QString("SageMakerImageVersionArn")]);
    m_sage_maker_image_version_arn_isSet = !json[QString("SageMakerImageVersionArn")].isNull() && m_sage_maker_image_version_arn_isValid;

    m_instance_type_isValid = ::OpenAPI::fromJsonValue(m_instance_type, json[QString("InstanceType")]);
    m_instance_type_isSet = !json[QString("InstanceType")].isNull() && m_instance_type_isValid;

    m_lifecycle_config_arn_isValid = ::OpenAPI::fromJsonValue(m_lifecycle_config_arn, json[QString("LifecycleConfigArn")]);
    m_lifecycle_config_arn_isSet = !json[QString("LifecycleConfigArn")].isNull() && m_lifecycle_config_arn_isValid;
}

QString OAICreateAppRequest_ResourceSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppRequest_ResourceSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_sage_maker_image_arn_isSet) {
        obj.insert(QString("SageMakerImageArn"), ::OpenAPI::toJsonValue(m_sage_maker_image_arn));
    }
    if (m_sage_maker_image_version_arn_isSet) {
        obj.insert(QString("SageMakerImageVersionArn"), ::OpenAPI::toJsonValue(m_sage_maker_image_version_arn));
    }
    if (m_instance_type.isSet()) {
        obj.insert(QString("InstanceType"), ::OpenAPI::toJsonValue(m_instance_type));
    }
    if (m_lifecycle_config_arn_isSet) {
        obj.insert(QString("LifecycleConfigArn"), ::OpenAPI::toJsonValue(m_lifecycle_config_arn));
    }
    return obj;
}

QString OAICreateAppRequest_ResourceSpec::getSageMakerImageArn() const {
    return m_sage_maker_image_arn;
}
void OAICreateAppRequest_ResourceSpec::setSageMakerImageArn(const QString &sage_maker_image_arn) {
    m_sage_maker_image_arn = sage_maker_image_arn;
    m_sage_maker_image_arn_isSet = true;
}

bool OAICreateAppRequest_ResourceSpec::is_sage_maker_image_arn_Set() const{
    return m_sage_maker_image_arn_isSet;
}

bool OAICreateAppRequest_ResourceSpec::is_sage_maker_image_arn_Valid() const{
    return m_sage_maker_image_arn_isValid;
}

QString OAICreateAppRequest_ResourceSpec::getSageMakerImageVersionArn() const {
    return m_sage_maker_image_version_arn;
}
void OAICreateAppRequest_ResourceSpec::setSageMakerImageVersionArn(const QString &sage_maker_image_version_arn) {
    m_sage_maker_image_version_arn = sage_maker_image_version_arn;
    m_sage_maker_image_version_arn_isSet = true;
}

bool OAICreateAppRequest_ResourceSpec::is_sage_maker_image_version_arn_Set() const{
    return m_sage_maker_image_version_arn_isSet;
}

bool OAICreateAppRequest_ResourceSpec::is_sage_maker_image_version_arn_Valid() const{
    return m_sage_maker_image_version_arn_isValid;
}

OAIAppInstanceType OAICreateAppRequest_ResourceSpec::getInstanceType() const {
    return m_instance_type;
}
void OAICreateAppRequest_ResourceSpec::setInstanceType(const OAIAppInstanceType &instance_type) {
    m_instance_type = instance_type;
    m_instance_type_isSet = true;
}

bool OAICreateAppRequest_ResourceSpec::is_instance_type_Set() const{
    return m_instance_type_isSet;
}

bool OAICreateAppRequest_ResourceSpec::is_instance_type_Valid() const{
    return m_instance_type_isValid;
}

QString OAICreateAppRequest_ResourceSpec::getLifecycleConfigArn() const {
    return m_lifecycle_config_arn;
}
void OAICreateAppRequest_ResourceSpec::setLifecycleConfigArn(const QString &lifecycle_config_arn) {
    m_lifecycle_config_arn = lifecycle_config_arn;
    m_lifecycle_config_arn_isSet = true;
}

bool OAICreateAppRequest_ResourceSpec::is_lifecycle_config_arn_Set() const{
    return m_lifecycle_config_arn_isSet;
}

bool OAICreateAppRequest_ResourceSpec::is_lifecycle_config_arn_Valid() const{
    return m_lifecycle_config_arn_isValid;
}

bool OAICreateAppRequest_ResourceSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sage_maker_image_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sage_maker_image_version_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lifecycle_config_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppRequest_ResourceSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
