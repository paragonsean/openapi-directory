/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAlgorithmOutput_TrainingSpecification.h
 *
 * 
 */

#ifndef OAIDescribeAlgorithmOutput_TrainingSpecification_H
#define OAIDescribeAlgorithmOutput_TrainingSpecification_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeAlgorithmOutput_TrainingSpecification : public OAIObject {
public:
    OAIDescribeAlgorithmOutput_TrainingSpecification();
    OAIDescribeAlgorithmOutput_TrainingSpecification(QString json);
    ~OAIDescribeAlgorithmOutput_TrainingSpecification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTrainingImage() const;
    void setTrainingImage(const QString &training_image);
    bool is_training_image_Set() const;
    bool is_training_image_Valid() const;

    QString getTrainingImageDigest() const;
    void setTrainingImageDigest(const QString &training_image_digest);
    bool is_training_image_digest_Set() const;
    bool is_training_image_digest_Valid() const;

    QList getSupportedHyperParameters() const;
    void setSupportedHyperParameters(const QList &supported_hyper_parameters);
    bool is_supported_hyper_parameters_Set() const;
    bool is_supported_hyper_parameters_Valid() const;

    QList getSupportedTrainingInstanceTypes() const;
    void setSupportedTrainingInstanceTypes(const QList &supported_training_instance_types);
    bool is_supported_training_instance_types_Set() const;
    bool is_supported_training_instance_types_Valid() const;

    bool getSupportsDistributedTraining() const;
    void setSupportsDistributedTraining(const bool &supports_distributed_training);
    bool is_supports_distributed_training_Set() const;
    bool is_supports_distributed_training_Valid() const;

    QList getMetricDefinitions() const;
    void setMetricDefinitions(const QList &metric_definitions);
    bool is_metric_definitions_Set() const;
    bool is_metric_definitions_Valid() const;

    QList getTrainingChannels() const;
    void setTrainingChannels(const QList &training_channels);
    bool is_training_channels_Set() const;
    bool is_training_channels_Valid() const;

    QList getSupportedTuningJobObjectiveMetrics() const;
    void setSupportedTuningJobObjectiveMetrics(const QList &supported_tuning_job_objective_metrics);
    bool is_supported_tuning_job_objective_metrics_Set() const;
    bool is_supported_tuning_job_objective_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_training_image;
    bool m_training_image_isSet;
    bool m_training_image_isValid;

    QString m_training_image_digest;
    bool m_training_image_digest_isSet;
    bool m_training_image_digest_isValid;

    QList m_supported_hyper_parameters;
    bool m_supported_hyper_parameters_isSet;
    bool m_supported_hyper_parameters_isValid;

    QList m_supported_training_instance_types;
    bool m_supported_training_instance_types_isSet;
    bool m_supported_training_instance_types_isValid;

    bool m_supports_distributed_training;
    bool m_supports_distributed_training_isSet;
    bool m_supports_distributed_training_isValid;

    QList m_metric_definitions;
    bool m_metric_definitions_isSet;
    bool m_metric_definitions_isValid;

    QList m_training_channels;
    bool m_training_channels_isSet;
    bool m_training_channels_isValid;

    QList m_supported_tuning_job_objective_metrics;
    bool m_supported_tuning_job_objective_metrics_isSet;
    bool m_supported_tuning_job_objective_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAlgorithmOutput_TrainingSpecification)

#endif // OAIDescribeAlgorithmOutput_TrainingSpecification_H
