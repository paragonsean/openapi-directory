/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateModelPackageInput.h
 *
 * 
 */

#ifndef OAIUpdateModelPackageInput_H
#define OAIUpdateModelPackageInput_H

#include <QJsonObject>

#include "OAIModelApprovalStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateModelPackageInput : public OAIObject {
public:
    OAIUpdateModelPackageInput();
    OAIUpdateModelPackageInput(QString json);
    ~OAIUpdateModelPackageInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelPackageArn() const;
    void setModelPackageArn(const QString &model_package_arn);
    bool is_model_package_arn_Set() const;
    bool is_model_package_arn_Valid() const;

    OAIModelApprovalStatus getModelApprovalStatus() const;
    void setModelApprovalStatus(const OAIModelApprovalStatus &model_approval_status);
    bool is_model_approval_status_Set() const;
    bool is_model_approval_status_Valid() const;

    QString getApprovalDescription() const;
    void setApprovalDescription(const QString &approval_description);
    bool is_approval_description_Set() const;
    bool is_approval_description_Valid() const;

    QMap getCustomerMetadataProperties() const;
    void setCustomerMetadataProperties(const QMap &customer_metadata_properties);
    bool is_customer_metadata_properties_Set() const;
    bool is_customer_metadata_properties_Valid() const;

    QList getCustomerMetadataPropertiesToRemove() const;
    void setCustomerMetadataPropertiesToRemove(const QList &customer_metadata_properties_to_remove);
    bool is_customer_metadata_properties_to_remove_Set() const;
    bool is_customer_metadata_properties_to_remove_Valid() const;

    QList getAdditionalInferenceSpecificationsToAdd() const;
    void setAdditionalInferenceSpecificationsToAdd(const QList &additional_inference_specifications_to_add);
    bool is_additional_inference_specifications_to_add_Set() const;
    bool is_additional_inference_specifications_to_add_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_package_arn;
    bool m_model_package_arn_isSet;
    bool m_model_package_arn_isValid;

    OAIModelApprovalStatus m_model_approval_status;
    bool m_model_approval_status_isSet;
    bool m_model_approval_status_isValid;

    QString m_approval_description;
    bool m_approval_description_isSet;
    bool m_approval_description_isValid;

    QMap m_customer_metadata_properties;
    bool m_customer_metadata_properties_isSet;
    bool m_customer_metadata_properties_isValid;

    QList m_customer_metadata_properties_to_remove;
    bool m_customer_metadata_properties_to_remove_isSet;
    bool m_customer_metadata_properties_to_remove_isValid;

    QList m_additional_inference_specifications_to_add;
    bool m_additional_inference_specifications_to_add_isSet;
    bool m_additional_inference_specifications_to_add_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateModelPackageInput)

#endif // OAIUpdateModelPackageInput_H
