/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelBiasAppSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelBiasAppSpecification::OAIModelBiasAppSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelBiasAppSpecification::OAIModelBiasAppSpecification() {
    this->initializeModel();
}

OAIModelBiasAppSpecification::~OAIModelBiasAppSpecification() {}

void OAIModelBiasAppSpecification::initializeModel() {

    m_image_uri_isSet = false;
    m_image_uri_isValid = false;

    m_config_uri_isSet = false;
    m_config_uri_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;
}

void OAIModelBiasAppSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModelBiasAppSpecification::fromJsonObject(QJsonObject json) {

    m_image_uri_isValid = ::OpenAPI::fromJsonValue(m_image_uri, json[QString("ImageUri")]);
    m_image_uri_isSet = !json[QString("ImageUri")].isNull() && m_image_uri_isValid;

    m_config_uri_isValid = ::OpenAPI::fromJsonValue(m_config_uri, json[QString("ConfigUri")]);
    m_config_uri_isSet = !json[QString("ConfigUri")].isNull() && m_config_uri_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("Environment")]);
    m_environment_isSet = !json[QString("Environment")].isNull() && m_environment_isValid;
}

QString OAIModelBiasAppSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModelBiasAppSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_image_uri_isSet) {
        obj.insert(QString("ImageUri"), ::OpenAPI::toJsonValue(m_image_uri));
    }
    if (m_config_uri_isSet) {
        obj.insert(QString("ConfigUri"), ::OpenAPI::toJsonValue(m_config_uri));
    }
    if (m_environment.isSet()) {
        obj.insert(QString("Environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    return obj;
}

QString OAIModelBiasAppSpecification::getImageUri() const {
    return m_image_uri;
}
void OAIModelBiasAppSpecification::setImageUri(const QString &image_uri) {
    m_image_uri = image_uri;
    m_image_uri_isSet = true;
}

bool OAIModelBiasAppSpecification::is_image_uri_Set() const{
    return m_image_uri_isSet;
}

bool OAIModelBiasAppSpecification::is_image_uri_Valid() const{
    return m_image_uri_isValid;
}

QString OAIModelBiasAppSpecification::getConfigUri() const {
    return m_config_uri;
}
void OAIModelBiasAppSpecification::setConfigUri(const QString &config_uri) {
    m_config_uri = config_uri;
    m_config_uri_isSet = true;
}

bool OAIModelBiasAppSpecification::is_config_uri_Set() const{
    return m_config_uri_isSet;
}

bool OAIModelBiasAppSpecification::is_config_uri_Valid() const{
    return m_config_uri_isValid;
}

QMap OAIModelBiasAppSpecification::getEnvironment() const {
    return m_environment;
}
void OAIModelBiasAppSpecification::setEnvironment(const QMap &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIModelBiasAppSpecification::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIModelBiasAppSpecification::is_environment_Valid() const{
    return m_environment_isValid;
}

bool OAIModelBiasAppSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModelBiasAppSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_image_uri_isValid && m_config_uri_isValid && true;
}

} // namespace OpenAPI
