/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeEdgeDeploymentPlanResponse.h
 *
 * 
 */

#ifndef OAIDescribeEdgeDeploymentPlanResponse_H
#define OAIDescribeEdgeDeploymentPlanResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeEdgeDeploymentPlanResponse : public OAIObject {
public:
    OAIDescribeEdgeDeploymentPlanResponse();
    OAIDescribeEdgeDeploymentPlanResponse(QString json);
    ~OAIDescribeEdgeDeploymentPlanResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEdgeDeploymentPlanArn() const;
    void setEdgeDeploymentPlanArn(const QString &edge_deployment_plan_arn);
    bool is_edge_deployment_plan_arn_Set() const;
    bool is_edge_deployment_plan_arn_Valid() const;

    QString getEdgeDeploymentPlanName() const;
    void setEdgeDeploymentPlanName(const QString &edge_deployment_plan_name);
    bool is_edge_deployment_plan_name_Set() const;
    bool is_edge_deployment_plan_name_Valid() const;

    QList getModelConfigs() const;
    void setModelConfigs(const QList &model_configs);
    bool is_model_configs_Set() const;
    bool is_model_configs_Valid() const;

    QString getDeviceFleetName() const;
    void setDeviceFleetName(const QString &device_fleet_name);
    bool is_device_fleet_name_Set() const;
    bool is_device_fleet_name_Valid() const;

    qint32 getEdgeDeploymentSuccess() const;
    void setEdgeDeploymentSuccess(const qint32 &edge_deployment_success);
    bool is_edge_deployment_success_Set() const;
    bool is_edge_deployment_success_Valid() const;

    qint32 getEdgeDeploymentPending() const;
    void setEdgeDeploymentPending(const qint32 &edge_deployment_pending);
    bool is_edge_deployment_pending_Set() const;
    bool is_edge_deployment_pending_Valid() const;

    qint32 getEdgeDeploymentFailed() const;
    void setEdgeDeploymentFailed(const qint32 &edge_deployment_failed);
    bool is_edge_deployment_failed_Set() const;
    bool is_edge_deployment_failed_Valid() const;

    QList getStages() const;
    void setStages(const QList &stages);
    bool is_stages_Set() const;
    bool is_stages_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_edge_deployment_plan_arn;
    bool m_edge_deployment_plan_arn_isSet;
    bool m_edge_deployment_plan_arn_isValid;

    QString m_edge_deployment_plan_name;
    bool m_edge_deployment_plan_name_isSet;
    bool m_edge_deployment_plan_name_isValid;

    QList m_model_configs;
    bool m_model_configs_isSet;
    bool m_model_configs_isValid;

    QString m_device_fleet_name;
    bool m_device_fleet_name_isSet;
    bool m_device_fleet_name_isValid;

    qint32 m_edge_deployment_success;
    bool m_edge_deployment_success_isSet;
    bool m_edge_deployment_success_isValid;

    qint32 m_edge_deployment_pending;
    bool m_edge_deployment_pending_isSet;
    bool m_edge_deployment_pending_isValid;

    qint32 m_edge_deployment_failed;
    bool m_edge_deployment_failed_isSet;
    bool m_edge_deployment_failed_isValid;

    QList m_stages;
    bool m_stages_isSet;
    bool m_stages_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeEdgeDeploymentPlanResponse)

#endif // OAIDescribeEdgeDeploymentPlanResponse_H
