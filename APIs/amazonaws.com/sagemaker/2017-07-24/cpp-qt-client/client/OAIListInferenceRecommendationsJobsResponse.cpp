/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListInferenceRecommendationsJobsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListInferenceRecommendationsJobsResponse::OAIListInferenceRecommendationsJobsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListInferenceRecommendationsJobsResponse::OAIListInferenceRecommendationsJobsResponse() {
    this->initializeModel();
}

OAIListInferenceRecommendationsJobsResponse::~OAIListInferenceRecommendationsJobsResponse() {}

void OAIListInferenceRecommendationsJobsResponse::initializeModel() {

    m_inference_recommendations_jobs_isSet = false;
    m_inference_recommendations_jobs_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListInferenceRecommendationsJobsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListInferenceRecommendationsJobsResponse::fromJsonObject(QJsonObject json) {

    m_inference_recommendations_jobs_isValid = ::OpenAPI::fromJsonValue(m_inference_recommendations_jobs, json[QString("InferenceRecommendationsJobs")]);
    m_inference_recommendations_jobs_isSet = !json[QString("InferenceRecommendationsJobs")].isNull() && m_inference_recommendations_jobs_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListInferenceRecommendationsJobsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListInferenceRecommendationsJobsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_inference_recommendations_jobs.isSet()) {
        obj.insert(QString("InferenceRecommendationsJobs"), ::OpenAPI::toJsonValue(m_inference_recommendations_jobs));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListInferenceRecommendationsJobsResponse::getInferenceRecommendationsJobs() const {
    return m_inference_recommendations_jobs;
}
void OAIListInferenceRecommendationsJobsResponse::setInferenceRecommendationsJobs(const QList &inference_recommendations_jobs) {
    m_inference_recommendations_jobs = inference_recommendations_jobs;
    m_inference_recommendations_jobs_isSet = true;
}

bool OAIListInferenceRecommendationsJobsResponse::is_inference_recommendations_jobs_Set() const{
    return m_inference_recommendations_jobs_isSet;
}

bool OAIListInferenceRecommendationsJobsResponse::is_inference_recommendations_jobs_Valid() const{
    return m_inference_recommendations_jobs_isValid;
}

QString OAIListInferenceRecommendationsJobsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListInferenceRecommendationsJobsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListInferenceRecommendationsJobsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListInferenceRecommendationsJobsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListInferenceRecommendationsJobsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inference_recommendations_jobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListInferenceRecommendationsJobsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_inference_recommendations_jobs_isValid && true;
}

} // namespace OpenAPI
