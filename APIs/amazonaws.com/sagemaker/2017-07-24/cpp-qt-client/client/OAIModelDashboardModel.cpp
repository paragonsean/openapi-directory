/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelDashboardModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelDashboardModel::OAIModelDashboardModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelDashboardModel::OAIModelDashboardModel() {
    this->initializeModel();
}

OAIModelDashboardModel::~OAIModelDashboardModel() {}

void OAIModelDashboardModel::initializeModel() {

    m_model_isSet = false;
    m_model_isValid = false;

    m_endpoints_isSet = false;
    m_endpoints_isValid = false;

    m_last_batch_transform_job_isSet = false;
    m_last_batch_transform_job_isValid = false;

    m_monitoring_schedules_isSet = false;
    m_monitoring_schedules_isValid = false;

    m_model_card_isSet = false;
    m_model_card_isValid = false;
}

void OAIModelDashboardModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModelDashboardModel::fromJsonObject(QJsonObject json) {

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("Model")]);
    m_model_isSet = !json[QString("Model")].isNull() && m_model_isValid;

    m_endpoints_isValid = ::OpenAPI::fromJsonValue(m_endpoints, json[QString("Endpoints")]);
    m_endpoints_isSet = !json[QString("Endpoints")].isNull() && m_endpoints_isValid;

    m_last_batch_transform_job_isValid = ::OpenAPI::fromJsonValue(m_last_batch_transform_job, json[QString("LastBatchTransformJob")]);
    m_last_batch_transform_job_isSet = !json[QString("LastBatchTransformJob")].isNull() && m_last_batch_transform_job_isValid;

    m_monitoring_schedules_isValid = ::OpenAPI::fromJsonValue(m_monitoring_schedules, json[QString("MonitoringSchedules")]);
    m_monitoring_schedules_isSet = !json[QString("MonitoringSchedules")].isNull() && m_monitoring_schedules_isValid;

    m_model_card_isValid = ::OpenAPI::fromJsonValue(m_model_card, json[QString("ModelCard")]);
    m_model_card_isSet = !json[QString("ModelCard")].isNull() && m_model_card_isValid;
}

QString OAIModelDashboardModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModelDashboardModel::asJsonObject() const {
    QJsonObject obj;
    if (m_model.isSet()) {
        obj.insert(QString("Model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_endpoints.isSet()) {
        obj.insert(QString("Endpoints"), ::OpenAPI::toJsonValue(m_endpoints));
    }
    if (m_last_batch_transform_job.isSet()) {
        obj.insert(QString("LastBatchTransformJob"), ::OpenAPI::toJsonValue(m_last_batch_transform_job));
    }
    if (m_monitoring_schedules.isSet()) {
        obj.insert(QString("MonitoringSchedules"), ::OpenAPI::toJsonValue(m_monitoring_schedules));
    }
    if (m_model_card.isSet()) {
        obj.insert(QString("ModelCard"), ::OpenAPI::toJsonValue(m_model_card));
    }
    return obj;
}

OAIModelDashboardModel_Model OAIModelDashboardModel::getModel() const {
    return m_model;
}
void OAIModelDashboardModel::setModel(const OAIModelDashboardModel_Model &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIModelDashboardModel::is_model_Set() const{
    return m_model_isSet;
}

bool OAIModelDashboardModel::is_model_Valid() const{
    return m_model_isValid;
}

QList OAIModelDashboardModel::getEndpoints() const {
    return m_endpoints;
}
void OAIModelDashboardModel::setEndpoints(const QList &endpoints) {
    m_endpoints = endpoints;
    m_endpoints_isSet = true;
}

bool OAIModelDashboardModel::is_endpoints_Set() const{
    return m_endpoints_isSet;
}

bool OAIModelDashboardModel::is_endpoints_Valid() const{
    return m_endpoints_isValid;
}

OAITransformJob OAIModelDashboardModel::getLastBatchTransformJob() const {
    return m_last_batch_transform_job;
}
void OAIModelDashboardModel::setLastBatchTransformJob(const OAITransformJob &last_batch_transform_job) {
    m_last_batch_transform_job = last_batch_transform_job;
    m_last_batch_transform_job_isSet = true;
}

bool OAIModelDashboardModel::is_last_batch_transform_job_Set() const{
    return m_last_batch_transform_job_isSet;
}

bool OAIModelDashboardModel::is_last_batch_transform_job_Valid() const{
    return m_last_batch_transform_job_isValid;
}

QList OAIModelDashboardModel::getMonitoringSchedules() const {
    return m_monitoring_schedules;
}
void OAIModelDashboardModel::setMonitoringSchedules(const QList &monitoring_schedules) {
    m_monitoring_schedules = monitoring_schedules;
    m_monitoring_schedules_isSet = true;
}

bool OAIModelDashboardModel::is_monitoring_schedules_Set() const{
    return m_monitoring_schedules_isSet;
}

bool OAIModelDashboardModel::is_monitoring_schedules_Valid() const{
    return m_monitoring_schedules_isValid;
}

OAIModelDashboardModel_ModelCard OAIModelDashboardModel::getModelCard() const {
    return m_model_card;
}
void OAIModelDashboardModel::setModelCard(const OAIModelDashboardModel_ModelCard &model_card) {
    m_model_card = model_card;
    m_model_card_isSet = true;
}

bool OAIModelDashboardModel::is_model_card_Set() const{
    return m_model_card_isSet;
}

bool OAIModelDashboardModel::is_model_card_Valid() const{
    return m_model_card_isValid;
}

bool OAIModelDashboardModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_batch_transform_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_schedules.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_card.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModelDashboardModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
