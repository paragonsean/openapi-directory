/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExplainerConfig_ClarifyExplainerConfig.h
 *
 * 
 */

#ifndef OAIExplainerConfig_ClarifyExplainerConfig_H
#define OAIExplainerConfig_ClarifyExplainerConfig_H

#include <QJsonObject>

#include "OAIClarifyExplainerConfig_InferenceConfig.h"
#include "OAIClarifyExplainerConfig_ShapConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClarifyExplainerConfig_InferenceConfig;
class OAIClarifyExplainerConfig_ShapConfig;

class OAIExplainerConfig_ClarifyExplainerConfig : public OAIObject {
public:
    OAIExplainerConfig_ClarifyExplainerConfig();
    OAIExplainerConfig_ClarifyExplainerConfig(QString json);
    ~OAIExplainerConfig_ClarifyExplainerConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnableExplanations() const;
    void setEnableExplanations(const QString &enable_explanations);
    bool is_enable_explanations_Set() const;
    bool is_enable_explanations_Valid() const;

    OAIClarifyExplainerConfig_InferenceConfig getInferenceConfig() const;
    void setInferenceConfig(const OAIClarifyExplainerConfig_InferenceConfig &inference_config);
    bool is_inference_config_Set() const;
    bool is_inference_config_Valid() const;

    OAIClarifyExplainerConfig_ShapConfig getShapConfig() const;
    void setShapConfig(const OAIClarifyExplainerConfig_ShapConfig &shap_config);
    bool is_shap_config_Set() const;
    bool is_shap_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_enable_explanations;
    bool m_enable_explanations_isSet;
    bool m_enable_explanations_isValid;

    OAIClarifyExplainerConfig_InferenceConfig m_inference_config;
    bool m_inference_config_isSet;
    bool m_inference_config_isValid;

    OAIClarifyExplainerConfig_ShapConfig m_shap_config;
    bool m_shap_config_isSet;
    bool m_shap_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExplainerConfig_ClarifyExplainerConfig)

#endif // OAIExplainerConfig_ClarifyExplainerConfig_H
