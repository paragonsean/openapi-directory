/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAlgorithmInput.h
 *
 * 
 */

#ifndef OAICreateAlgorithmInput_H
#define OAICreateAlgorithmInput_H

#include <QJsonObject>

#include "OAICreateAlgorithmInput_InferenceSpecification.h"
#include "OAICreateAlgorithmInput_TrainingSpecification.h"
#include "OAICreateAlgorithmInput_ValidationSpecification.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAlgorithmInput_TrainingSpecification;
class OAICreateAlgorithmInput_InferenceSpecification;
class OAICreateAlgorithmInput_ValidationSpecification;

class OAICreateAlgorithmInput : public OAIObject {
public:
    OAICreateAlgorithmInput();
    OAICreateAlgorithmInput(QString json);
    ~OAICreateAlgorithmInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithmName() const;
    void setAlgorithmName(const QString &algorithm_name);
    bool is_algorithm_name_Set() const;
    bool is_algorithm_name_Valid() const;

    QString getAlgorithmDescription() const;
    void setAlgorithmDescription(const QString &algorithm_description);
    bool is_algorithm_description_Set() const;
    bool is_algorithm_description_Valid() const;

    OAICreateAlgorithmInput_TrainingSpecification getTrainingSpecification() const;
    void setTrainingSpecification(const OAICreateAlgorithmInput_TrainingSpecification &training_specification);
    bool is_training_specification_Set() const;
    bool is_training_specification_Valid() const;

    OAICreateAlgorithmInput_InferenceSpecification getInferenceSpecification() const;
    void setInferenceSpecification(const OAICreateAlgorithmInput_InferenceSpecification &inference_specification);
    bool is_inference_specification_Set() const;
    bool is_inference_specification_Valid() const;

    OAICreateAlgorithmInput_ValidationSpecification getValidationSpecification() const;
    void setValidationSpecification(const OAICreateAlgorithmInput_ValidationSpecification &validation_specification);
    bool is_validation_specification_Set() const;
    bool is_validation_specification_Valid() const;

    bool getCertifyForMarketplace() const;
    void setCertifyForMarketplace(const bool &certify_for_marketplace);
    bool is_certify_for_marketplace_Set() const;
    bool is_certify_for_marketplace_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm_name;
    bool m_algorithm_name_isSet;
    bool m_algorithm_name_isValid;

    QString m_algorithm_description;
    bool m_algorithm_description_isSet;
    bool m_algorithm_description_isValid;

    OAICreateAlgorithmInput_TrainingSpecification m_training_specification;
    bool m_training_specification_isSet;
    bool m_training_specification_isValid;

    OAICreateAlgorithmInput_InferenceSpecification m_inference_specification;
    bool m_inference_specification_isSet;
    bool m_inference_specification_isValid;

    OAICreateAlgorithmInput_ValidationSpecification m_validation_specification;
    bool m_validation_specification_isSet;
    bool m_validation_specification_isValid;

    bool m_certify_for_marketplace;
    bool m_certify_for_marketplace_isSet;
    bool m_certify_for_marketplace_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAlgorithmInput)

#endif // OAICreateAlgorithmInput_H
