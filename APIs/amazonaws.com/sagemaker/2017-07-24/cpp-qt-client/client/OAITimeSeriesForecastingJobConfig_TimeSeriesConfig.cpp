/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeSeriesForecastingJobConfig_TimeSeriesConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::OAITimeSeriesForecastingJobConfig_TimeSeriesConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::OAITimeSeriesForecastingJobConfig_TimeSeriesConfig() {
    this->initializeModel();
}

OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::~OAITimeSeriesForecastingJobConfig_TimeSeriesConfig() {}

void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::initializeModel() {

    m_target_attribute_name_isSet = false;
    m_target_attribute_name_isValid = false;

    m_timestamp_attribute_name_isSet = false;
    m_timestamp_attribute_name_isValid = false;

    m_item_identifier_attribute_name_isSet = false;
    m_item_identifier_attribute_name_isValid = false;

    m_grouping_attribute_names_isSet = false;
    m_grouping_attribute_names_isValid = false;
}

void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::fromJsonObject(QJsonObject json) {

    m_target_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_target_attribute_name, json[QString("TargetAttributeName")]);
    m_target_attribute_name_isSet = !json[QString("TargetAttributeName")].isNull() && m_target_attribute_name_isValid;

    m_timestamp_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_timestamp_attribute_name, json[QString("TimestampAttributeName")]);
    m_timestamp_attribute_name_isSet = !json[QString("TimestampAttributeName")].isNull() && m_timestamp_attribute_name_isValid;

    m_item_identifier_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_item_identifier_attribute_name, json[QString("ItemIdentifierAttributeName")]);
    m_item_identifier_attribute_name_isSet = !json[QString("ItemIdentifierAttributeName")].isNull() && m_item_identifier_attribute_name_isValid;

    m_grouping_attribute_names_isValid = ::OpenAPI::fromJsonValue(m_grouping_attribute_names, json[QString("GroupingAttributeNames")]);
    m_grouping_attribute_names_isSet = !json[QString("GroupingAttributeNames")].isNull() && m_grouping_attribute_names_isValid;
}

QString OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_target_attribute_name_isSet) {
        obj.insert(QString("TargetAttributeName"), ::OpenAPI::toJsonValue(m_target_attribute_name));
    }
    if (m_timestamp_attribute_name_isSet) {
        obj.insert(QString("TimestampAttributeName"), ::OpenAPI::toJsonValue(m_timestamp_attribute_name));
    }
    if (m_item_identifier_attribute_name_isSet) {
        obj.insert(QString("ItemIdentifierAttributeName"), ::OpenAPI::toJsonValue(m_item_identifier_attribute_name));
    }
    if (m_grouping_attribute_names.isSet()) {
        obj.insert(QString("GroupingAttributeNames"), ::OpenAPI::toJsonValue(m_grouping_attribute_names));
    }
    return obj;
}

QString OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::getTargetAttributeName() const {
    return m_target_attribute_name;
}
void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::setTargetAttributeName(const QString &target_attribute_name) {
    m_target_attribute_name = target_attribute_name;
    m_target_attribute_name_isSet = true;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_target_attribute_name_Set() const{
    return m_target_attribute_name_isSet;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_target_attribute_name_Valid() const{
    return m_target_attribute_name_isValid;
}

QString OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::getTimestampAttributeName() const {
    return m_timestamp_attribute_name;
}
void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::setTimestampAttributeName(const QString &timestamp_attribute_name) {
    m_timestamp_attribute_name = timestamp_attribute_name;
    m_timestamp_attribute_name_isSet = true;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_timestamp_attribute_name_Set() const{
    return m_timestamp_attribute_name_isSet;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_timestamp_attribute_name_Valid() const{
    return m_timestamp_attribute_name_isValid;
}

QString OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::getItemIdentifierAttributeName() const {
    return m_item_identifier_attribute_name;
}
void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::setItemIdentifierAttributeName(const QString &item_identifier_attribute_name) {
    m_item_identifier_attribute_name = item_identifier_attribute_name;
    m_item_identifier_attribute_name_isSet = true;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_item_identifier_attribute_name_Set() const{
    return m_item_identifier_attribute_name_isSet;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_item_identifier_attribute_name_Valid() const{
    return m_item_identifier_attribute_name_isValid;
}

QList OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::getGroupingAttributeNames() const {
    return m_grouping_attribute_names;
}
void OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::setGroupingAttributeNames(const QList &grouping_attribute_names) {
    m_grouping_attribute_names = grouping_attribute_names;
    m_grouping_attribute_names_isSet = true;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_grouping_attribute_names_Set() const{
    return m_grouping_attribute_names_isSet;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::is_grouping_attribute_names_Valid() const{
    return m_grouping_attribute_names_isValid;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_identifier_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grouping_attribute_names.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeSeriesForecastingJobConfig_TimeSeriesConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_attribute_name_isValid && m_timestamp_attribute_name_isValid && m_item_identifier_attribute_name_isValid && true;
}

} // namespace OpenAPI
