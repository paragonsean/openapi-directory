/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeHumanTaskUiResponse.h
 *
 * 
 */

#ifndef OAIDescribeHumanTaskUiResponse_H
#define OAIDescribeHumanTaskUiResponse_H

#include <QJsonObject>

#include "OAIHumanTaskUiStatus.h"
#include "OAIUiTemplateInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUiTemplateInfo;

class OAIDescribeHumanTaskUiResponse : public OAIObject {
public:
    OAIDescribeHumanTaskUiResponse();
    OAIDescribeHumanTaskUiResponse(QString json);
    ~OAIDescribeHumanTaskUiResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHumanTaskUiArn() const;
    void setHumanTaskUiArn(const QString &human_task_ui_arn);
    bool is_human_task_ui_arn_Set() const;
    bool is_human_task_ui_arn_Valid() const;

    QString getHumanTaskUiName() const;
    void setHumanTaskUiName(const QString &human_task_ui_name);
    bool is_human_task_ui_name_Set() const;
    bool is_human_task_ui_name_Valid() const;

    OAIHumanTaskUiStatus getHumanTaskUiStatus() const;
    void setHumanTaskUiStatus(const OAIHumanTaskUiStatus &human_task_ui_status);
    bool is_human_task_ui_status_Set() const;
    bool is_human_task_ui_status_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIUiTemplateInfo getUiTemplate() const;
    void setUiTemplate(const OAIUiTemplateInfo &ui_template);
    bool is_ui_template_Set() const;
    bool is_ui_template_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_human_task_ui_arn;
    bool m_human_task_ui_arn_isSet;
    bool m_human_task_ui_arn_isValid;

    QString m_human_task_ui_name;
    bool m_human_task_ui_name_isSet;
    bool m_human_task_ui_name_isValid;

    OAIHumanTaskUiStatus m_human_task_ui_status;
    bool m_human_task_ui_status_isSet;
    bool m_human_task_ui_status_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIUiTemplateInfo m_ui_template;
    bool m_ui_template_isSet;
    bool m_ui_template_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeHumanTaskUiResponse)

#endif // OAIDescribeHumanTaskUiResponse_H
