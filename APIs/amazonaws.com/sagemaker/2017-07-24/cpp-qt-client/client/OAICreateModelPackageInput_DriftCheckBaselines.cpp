/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateModelPackageInput_DriftCheckBaselines.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateModelPackageInput_DriftCheckBaselines::OAICreateModelPackageInput_DriftCheckBaselines(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateModelPackageInput_DriftCheckBaselines::OAICreateModelPackageInput_DriftCheckBaselines() {
    this->initializeModel();
}

OAICreateModelPackageInput_DriftCheckBaselines::~OAICreateModelPackageInput_DriftCheckBaselines() {}

void OAICreateModelPackageInput_DriftCheckBaselines::initializeModel() {

    m_bias_isSet = false;
    m_bias_isValid = false;

    m_explainability_isSet = false;
    m_explainability_isValid = false;

    m_model_quality_isSet = false;
    m_model_quality_isValid = false;

    m_model_data_quality_isSet = false;
    m_model_data_quality_isValid = false;
}

void OAICreateModelPackageInput_DriftCheckBaselines::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateModelPackageInput_DriftCheckBaselines::fromJsonObject(QJsonObject json) {

    m_bias_isValid = ::OpenAPI::fromJsonValue(m_bias, json[QString("Bias")]);
    m_bias_isSet = !json[QString("Bias")].isNull() && m_bias_isValid;

    m_explainability_isValid = ::OpenAPI::fromJsonValue(m_explainability, json[QString("Explainability")]);
    m_explainability_isSet = !json[QString("Explainability")].isNull() && m_explainability_isValid;

    m_model_quality_isValid = ::OpenAPI::fromJsonValue(m_model_quality, json[QString("ModelQuality")]);
    m_model_quality_isSet = !json[QString("ModelQuality")].isNull() && m_model_quality_isValid;

    m_model_data_quality_isValid = ::OpenAPI::fromJsonValue(m_model_data_quality, json[QString("ModelDataQuality")]);
    m_model_data_quality_isSet = !json[QString("ModelDataQuality")].isNull() && m_model_data_quality_isValid;
}

QString OAICreateModelPackageInput_DriftCheckBaselines::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateModelPackageInput_DriftCheckBaselines::asJsonObject() const {
    QJsonObject obj;
    if (m_bias.isSet()) {
        obj.insert(QString("Bias"), ::OpenAPI::toJsonValue(m_bias));
    }
    if (m_explainability.isSet()) {
        obj.insert(QString("Explainability"), ::OpenAPI::toJsonValue(m_explainability));
    }
    if (m_model_quality.isSet()) {
        obj.insert(QString("ModelQuality"), ::OpenAPI::toJsonValue(m_model_quality));
    }
    if (m_model_data_quality.isSet()) {
        obj.insert(QString("ModelDataQuality"), ::OpenAPI::toJsonValue(m_model_data_quality));
    }
    return obj;
}

OAIDriftCheckBaselines_Bias OAICreateModelPackageInput_DriftCheckBaselines::getBias() const {
    return m_bias;
}
void OAICreateModelPackageInput_DriftCheckBaselines::setBias(const OAIDriftCheckBaselines_Bias &bias) {
    m_bias = bias;
    m_bias_isSet = true;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_bias_Set() const{
    return m_bias_isSet;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_bias_Valid() const{
    return m_bias_isValid;
}

OAIDriftCheckBaselines_Explainability OAICreateModelPackageInput_DriftCheckBaselines::getExplainability() const {
    return m_explainability;
}
void OAICreateModelPackageInput_DriftCheckBaselines::setExplainability(const OAIDriftCheckBaselines_Explainability &explainability) {
    m_explainability = explainability;
    m_explainability_isSet = true;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_explainability_Set() const{
    return m_explainability_isSet;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_explainability_Valid() const{
    return m_explainability_isValid;
}

OAIDriftCheckBaselines_ModelQuality OAICreateModelPackageInput_DriftCheckBaselines::getModelQuality() const {
    return m_model_quality;
}
void OAICreateModelPackageInput_DriftCheckBaselines::setModelQuality(const OAIDriftCheckBaselines_ModelQuality &model_quality) {
    m_model_quality = model_quality;
    m_model_quality_isSet = true;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_model_quality_Set() const{
    return m_model_quality_isSet;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_model_quality_Valid() const{
    return m_model_quality_isValid;
}

OAIDriftCheckBaselines_ModelDataQuality OAICreateModelPackageInput_DriftCheckBaselines::getModelDataQuality() const {
    return m_model_data_quality;
}
void OAICreateModelPackageInput_DriftCheckBaselines::setModelDataQuality(const OAIDriftCheckBaselines_ModelDataQuality &model_data_quality) {
    m_model_data_quality = model_data_quality;
    m_model_data_quality_isSet = true;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_model_data_quality_Set() const{
    return m_model_data_quality_isSet;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::is_model_data_quality_Valid() const{
    return m_model_data_quality_isValid;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bias.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_explainability.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_quality.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_data_quality.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateModelPackageInput_DriftCheckBaselines::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
