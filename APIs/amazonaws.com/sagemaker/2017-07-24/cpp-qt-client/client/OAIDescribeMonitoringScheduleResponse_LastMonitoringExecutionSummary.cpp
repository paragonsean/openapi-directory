/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary() {
    this->initializeModel();
}

OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::~OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary() {}

void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::initializeModel() {

    m_monitoring_schedule_name_isSet = false;
    m_monitoring_schedule_name_isValid = false;

    m_scheduled_time_isSet = false;
    m_scheduled_time_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_monitoring_execution_status_isSet = false;
    m_monitoring_execution_status_isValid = false;

    m_processing_job_arn_isSet = false;
    m_processing_job_arn_isValid = false;

    m_endpoint_name_isSet = false;
    m_endpoint_name_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_monitoring_job_definition_name_isSet = false;
    m_monitoring_job_definition_name_isValid = false;

    m_monitoring_type_isSet = false;
    m_monitoring_type_isValid = false;
}

void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::fromJsonObject(QJsonObject json) {

    m_monitoring_schedule_name_isValid = ::OpenAPI::fromJsonValue(m_monitoring_schedule_name, json[QString("MonitoringScheduleName")]);
    m_monitoring_schedule_name_isSet = !json[QString("MonitoringScheduleName")].isNull() && m_monitoring_schedule_name_isValid;

    m_scheduled_time_isValid = ::OpenAPI::fromJsonValue(m_scheduled_time, json[QString("ScheduledTime")]);
    m_scheduled_time_isSet = !json[QString("ScheduledTime")].isNull() && m_scheduled_time_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_monitoring_execution_status_isValid = ::OpenAPI::fromJsonValue(m_monitoring_execution_status, json[QString("MonitoringExecutionStatus")]);
    m_monitoring_execution_status_isSet = !json[QString("MonitoringExecutionStatus")].isNull() && m_monitoring_execution_status_isValid;

    m_processing_job_arn_isValid = ::OpenAPI::fromJsonValue(m_processing_job_arn, json[QString("ProcessingJobArn")]);
    m_processing_job_arn_isSet = !json[QString("ProcessingJobArn")].isNull() && m_processing_job_arn_isValid;

    m_endpoint_name_isValid = ::OpenAPI::fromJsonValue(m_endpoint_name, json[QString("EndpointName")]);
    m_endpoint_name_isSet = !json[QString("EndpointName")].isNull() && m_endpoint_name_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;

    m_monitoring_job_definition_name_isValid = ::OpenAPI::fromJsonValue(m_monitoring_job_definition_name, json[QString("MonitoringJobDefinitionName")]);
    m_monitoring_job_definition_name_isSet = !json[QString("MonitoringJobDefinitionName")].isNull() && m_monitoring_job_definition_name_isValid;

    m_monitoring_type_isValid = ::OpenAPI::fromJsonValue(m_monitoring_type, json[QString("MonitoringType")]);
    m_monitoring_type_isSet = !json[QString("MonitoringType")].isNull() && m_monitoring_type_isValid;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_monitoring_schedule_name_isSet) {
        obj.insert(QString("MonitoringScheduleName"), ::OpenAPI::toJsonValue(m_monitoring_schedule_name));
    }
    if (m_scheduled_time_isSet) {
        obj.insert(QString("ScheduledTime"), ::OpenAPI::toJsonValue(m_scheduled_time));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_monitoring_execution_status.isSet()) {
        obj.insert(QString("MonitoringExecutionStatus"), ::OpenAPI::toJsonValue(m_monitoring_execution_status));
    }
    if (m_processing_job_arn_isSet) {
        obj.insert(QString("ProcessingJobArn"), ::OpenAPI::toJsonValue(m_processing_job_arn));
    }
    if (m_endpoint_name_isSet) {
        obj.insert(QString("EndpointName"), ::OpenAPI::toJsonValue(m_endpoint_name));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_monitoring_job_definition_name_isSet) {
        obj.insert(QString("MonitoringJobDefinitionName"), ::OpenAPI::toJsonValue(m_monitoring_job_definition_name));
    }
    if (m_monitoring_type.isSet()) {
        obj.insert(QString("MonitoringType"), ::OpenAPI::toJsonValue(m_monitoring_type));
    }
    return obj;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getMonitoringScheduleName() const {
    return m_monitoring_schedule_name;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setMonitoringScheduleName(const QString &monitoring_schedule_name) {
    m_monitoring_schedule_name = monitoring_schedule_name;
    m_monitoring_schedule_name_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_schedule_name_Set() const{
    return m_monitoring_schedule_name_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_schedule_name_Valid() const{
    return m_monitoring_schedule_name_isValid;
}

QDateTime OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getScheduledTime() const {
    return m_scheduled_time;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setScheduledTime(const QDateTime &scheduled_time) {
    m_scheduled_time = scheduled_time;
    m_scheduled_time_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_scheduled_time_Set() const{
    return m_scheduled_time_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_scheduled_time_Valid() const{
    return m_scheduled_time_isValid;
}

QDateTime OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIExecutionStatus OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getMonitoringExecutionStatus() const {
    return m_monitoring_execution_status;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setMonitoringExecutionStatus(const OAIExecutionStatus &monitoring_execution_status) {
    m_monitoring_execution_status = monitoring_execution_status;
    m_monitoring_execution_status_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_execution_status_Set() const{
    return m_monitoring_execution_status_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_execution_status_Valid() const{
    return m_monitoring_execution_status_isValid;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getProcessingJobArn() const {
    return m_processing_job_arn;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setProcessingJobArn(const QString &processing_job_arn) {
    m_processing_job_arn = processing_job_arn;
    m_processing_job_arn_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_processing_job_arn_Set() const{
    return m_processing_job_arn_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_processing_job_arn_Valid() const{
    return m_processing_job_arn_isValid;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getEndpointName() const {
    return m_endpoint_name;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setEndpointName(const QString &endpoint_name) {
    m_endpoint_name = endpoint_name;
    m_endpoint_name_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_endpoint_name_Set() const{
    return m_endpoint_name_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_endpoint_name_Valid() const{
    return m_endpoint_name_isValid;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getFailureReason() const {
    return m_failure_reason;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

QString OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getMonitoringJobDefinitionName() const {
    return m_monitoring_job_definition_name;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setMonitoringJobDefinitionName(const QString &monitoring_job_definition_name) {
    m_monitoring_job_definition_name = monitoring_job_definition_name;
    m_monitoring_job_definition_name_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_job_definition_name_Set() const{
    return m_monitoring_job_definition_name_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_job_definition_name_Valid() const{
    return m_monitoring_job_definition_name_isValid;
}

OAIMonitoringType OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::getMonitoringType() const {
    return m_monitoring_type;
}
void OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::setMonitoringType(const OAIMonitoringType &monitoring_type) {
    m_monitoring_type = monitoring_type;
    m_monitoring_type_isSet = true;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_type_Set() const{
    return m_monitoring_type_isSet;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::is_monitoring_type_Valid() const{
    return m_monitoring_type_isValid;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitoring_schedule_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_execution_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_processing_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_job_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeMonitoringScheduleResponse_LastMonitoringExecutionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitoring_schedule_name_isValid && m_scheduled_time_isValid && m_creation_time_isValid && m_last_modified_time_isValid && m_monitoring_execution_status_isValid && true;
}

} // namespace OpenAPI
