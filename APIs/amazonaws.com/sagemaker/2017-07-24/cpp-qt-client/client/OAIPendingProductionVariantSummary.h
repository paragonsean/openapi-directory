/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPendingProductionVariantSummary.h
 *
 * The production variant summary for a deployment when an endpoint is creating or updating with the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html\&quot;&gt;CreateEndpoint&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html\&quot;&gt;UpdateEndpoint&lt;/a&gt; operations. Describes the &lt;code&gt;VariantStatus &lt;/code&gt;, weight and capacity for a production variant associated with an endpoint. 
 */

#ifndef OAIPendingProductionVariantSummary_H
#define OAIPendingProductionVariantSummary_H

#include <QJsonObject>

#include "OAIPendingProductionVariantSummary_CurrentServerlessConfig.h"
#include "OAIPendingProductionVariantSummary_DesiredServerlessConfig.h"
#include "OAIProductionVariantAcceleratorType.h"
#include "OAIProductionVariantInstanceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPendingProductionVariantSummary_CurrentServerlessConfig;
class OAIPendingProductionVariantSummary_DesiredServerlessConfig;

class OAIPendingProductionVariantSummary : public OAIObject {
public:
    OAIPendingProductionVariantSummary();
    OAIPendingProductionVariantSummary(QString json);
    ~OAIPendingProductionVariantSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVariantName() const;
    void setVariantName(const QString &variant_name);
    bool is_variant_name_Set() const;
    bool is_variant_name_Valid() const;

    QList getDeployedImages() const;
    void setDeployedImages(const QList &deployed_images);
    bool is_deployed_images_Set() const;
    bool is_deployed_images_Valid() const;

    float getCurrentWeight() const;
    void setCurrentWeight(const float &current_weight);
    bool is_current_weight_Set() const;
    bool is_current_weight_Valid() const;

    float getDesiredWeight() const;
    void setDesiredWeight(const float &desired_weight);
    bool is_desired_weight_Set() const;
    bool is_desired_weight_Valid() const;

    qint32 getCurrentInstanceCount() const;
    void setCurrentInstanceCount(const qint32 &current_instance_count);
    bool is_current_instance_count_Set() const;
    bool is_current_instance_count_Valid() const;

    qint32 getDesiredInstanceCount() const;
    void setDesiredInstanceCount(const qint32 &desired_instance_count);
    bool is_desired_instance_count_Set() const;
    bool is_desired_instance_count_Valid() const;

    OAIProductionVariantInstanceType getInstanceType() const;
    void setInstanceType(const OAIProductionVariantInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    OAIProductionVariantAcceleratorType getAcceleratorType() const;
    void setAcceleratorType(const OAIProductionVariantAcceleratorType &accelerator_type);
    bool is_accelerator_type_Set() const;
    bool is_accelerator_type_Valid() const;

    QList getVariantStatus() const;
    void setVariantStatus(const QList &variant_status);
    bool is_variant_status_Set() const;
    bool is_variant_status_Valid() const;

    OAIPendingProductionVariantSummary_CurrentServerlessConfig getCurrentServerlessConfig() const;
    void setCurrentServerlessConfig(const OAIPendingProductionVariantSummary_CurrentServerlessConfig &current_serverless_config);
    bool is_current_serverless_config_Set() const;
    bool is_current_serverless_config_Valid() const;

    OAIPendingProductionVariantSummary_DesiredServerlessConfig getDesiredServerlessConfig() const;
    void setDesiredServerlessConfig(const OAIPendingProductionVariantSummary_DesiredServerlessConfig &desired_serverless_config);
    bool is_desired_serverless_config_Set() const;
    bool is_desired_serverless_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_variant_name;
    bool m_variant_name_isSet;
    bool m_variant_name_isValid;

    QList m_deployed_images;
    bool m_deployed_images_isSet;
    bool m_deployed_images_isValid;

    float m_current_weight;
    bool m_current_weight_isSet;
    bool m_current_weight_isValid;

    float m_desired_weight;
    bool m_desired_weight_isSet;
    bool m_desired_weight_isValid;

    qint32 m_current_instance_count;
    bool m_current_instance_count_isSet;
    bool m_current_instance_count_isValid;

    qint32 m_desired_instance_count;
    bool m_desired_instance_count_isSet;
    bool m_desired_instance_count_isValid;

    OAIProductionVariantInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    OAIProductionVariantAcceleratorType m_accelerator_type;
    bool m_accelerator_type_isSet;
    bool m_accelerator_type_isValid;

    QList m_variant_status;
    bool m_variant_status_isSet;
    bool m_variant_status_isValid;

    OAIPendingProductionVariantSummary_CurrentServerlessConfig m_current_serverless_config;
    bool m_current_serverless_config_isSet;
    bool m_current_serverless_config_isValid;

    OAIPendingProductionVariantSummary_DesiredServerlessConfig m_desired_serverless_config;
    bool m_desired_serverless_config_isSet;
    bool m_desired_serverless_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPendingProductionVariantSummary)

#endif // OAIPendingProductionVariantSummary_H
