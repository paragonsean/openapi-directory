/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkforceVpcConfigRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkforceVpcConfigRequest::OAIWorkforceVpcConfigRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkforceVpcConfigRequest::OAIWorkforceVpcConfigRequest() {
    this->initializeModel();
}

OAIWorkforceVpcConfigRequest::~OAIWorkforceVpcConfigRequest() {}

void OAIWorkforceVpcConfigRequest::initializeModel() {

    m_vpc_id_isSet = false;
    m_vpc_id_isValid = false;

    m_security_group_ids_isSet = false;
    m_security_group_ids_isValid = false;

    m_subnets_isSet = false;
    m_subnets_isValid = false;
}

void OAIWorkforceVpcConfigRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkforceVpcConfigRequest::fromJsonObject(QJsonObject json) {

    m_vpc_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_id, json[QString("VpcId")]);
    m_vpc_id_isSet = !json[QString("VpcId")].isNull() && m_vpc_id_isValid;

    m_security_group_ids_isValid = ::OpenAPI::fromJsonValue(m_security_group_ids, json[QString("SecurityGroupIds")]);
    m_security_group_ids_isSet = !json[QString("SecurityGroupIds")].isNull() && m_security_group_ids_isValid;

    m_subnets_isValid = ::OpenAPI::fromJsonValue(m_subnets, json[QString("Subnets")]);
    m_subnets_isSet = !json[QString("Subnets")].isNull() && m_subnets_isValid;
}

QString OAIWorkforceVpcConfigRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkforceVpcConfigRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_id_isSet) {
        obj.insert(QString("VpcId"), ::OpenAPI::toJsonValue(m_vpc_id));
    }
    if (m_security_group_ids.isSet()) {
        obj.insert(QString("SecurityGroupIds"), ::OpenAPI::toJsonValue(m_security_group_ids));
    }
    if (m_subnets.isSet()) {
        obj.insert(QString("Subnets"), ::OpenAPI::toJsonValue(m_subnets));
    }
    return obj;
}

QString OAIWorkforceVpcConfigRequest::getVpcId() const {
    return m_vpc_id;
}
void OAIWorkforceVpcConfigRequest::setVpcId(const QString &vpc_id) {
    m_vpc_id = vpc_id;
    m_vpc_id_isSet = true;
}

bool OAIWorkforceVpcConfigRequest::is_vpc_id_Set() const{
    return m_vpc_id_isSet;
}

bool OAIWorkforceVpcConfigRequest::is_vpc_id_Valid() const{
    return m_vpc_id_isValid;
}

QList OAIWorkforceVpcConfigRequest::getSecurityGroupIds() const {
    return m_security_group_ids;
}
void OAIWorkforceVpcConfigRequest::setSecurityGroupIds(const QList &security_group_ids) {
    m_security_group_ids = security_group_ids;
    m_security_group_ids_isSet = true;
}

bool OAIWorkforceVpcConfigRequest::is_security_group_ids_Set() const{
    return m_security_group_ids_isSet;
}

bool OAIWorkforceVpcConfigRequest::is_security_group_ids_Valid() const{
    return m_security_group_ids_isValid;
}

QList OAIWorkforceVpcConfigRequest::getSubnets() const {
    return m_subnets;
}
void OAIWorkforceVpcConfigRequest::setSubnets(const QList &subnets) {
    m_subnets = subnets;
    m_subnets_isSet = true;
}

bool OAIWorkforceVpcConfigRequest::is_subnets_Set() const{
    return m_subnets_isSet;
}

bool OAIWorkforceVpcConfigRequest::is_subnets_Valid() const{
    return m_subnets_isValid;
}

bool OAIWorkforceVpcConfigRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkforceVpcConfigRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
