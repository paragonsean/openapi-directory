/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrainingJobDefinition.h
 *
 * Defines the input needed to run a training job using the algorithm.
 */

#ifndef OAITrainingJobDefinition_H
#define OAITrainingJobDefinition_H

#include <QJsonObject>

#include "OAITrainingInputMode.h"
#include "OAITrainingJobDefinition_OutputDataConfig.h"
#include "OAITrainingJobDefinition_ResourceConfig.h"
#include "OAITrainingJobDefinition_StoppingCondition.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrainingJobDefinition_OutputDataConfig;
class OAITrainingJobDefinition_ResourceConfig;
class OAITrainingJobDefinition_StoppingCondition;

class OAITrainingJobDefinition : public OAIObject {
public:
    OAITrainingJobDefinition();
    OAITrainingJobDefinition(QString json);
    ~OAITrainingJobDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITrainingInputMode getTrainingInputMode() const;
    void setTrainingInputMode(const OAITrainingInputMode &training_input_mode);
    bool is_training_input_mode_Set() const;
    bool is_training_input_mode_Valid() const;

    QMap getHyperParameters() const;
    void setHyperParameters(const QMap &hyper_parameters);
    bool is_hyper_parameters_Set() const;
    bool is_hyper_parameters_Valid() const;

    QList getInputDataConfig() const;
    void setInputDataConfig(const QList &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAITrainingJobDefinition_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAITrainingJobDefinition_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    OAITrainingJobDefinition_ResourceConfig getResourceConfig() const;
    void setResourceConfig(const OAITrainingJobDefinition_ResourceConfig &resource_config);
    bool is_resource_config_Set() const;
    bool is_resource_config_Valid() const;

    OAITrainingJobDefinition_StoppingCondition getStoppingCondition() const;
    void setStoppingCondition(const OAITrainingJobDefinition_StoppingCondition &stopping_condition);
    bool is_stopping_condition_Set() const;
    bool is_stopping_condition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITrainingInputMode m_training_input_mode;
    bool m_training_input_mode_isSet;
    bool m_training_input_mode_isValid;

    QMap m_hyper_parameters;
    bool m_hyper_parameters_isSet;
    bool m_hyper_parameters_isValid;

    QList m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAITrainingJobDefinition_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    OAITrainingJobDefinition_ResourceConfig m_resource_config;
    bool m_resource_config_isSet;
    bool m_resource_config_isValid;

    OAITrainingJobDefinition_StoppingCondition m_stopping_condition;
    bool m_stopping_condition_isSet;
    bool m_stopping_condition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrainingJobDefinition)

#endif // OAITrainingJobDefinition_H
