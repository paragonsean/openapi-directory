/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSource_FileSystemDataSource.h
 *
 * 
 */

#ifndef OAIDataSource_FileSystemDataSource_H
#define OAIDataSource_FileSystemDataSource_H

#include <QJsonObject>

#include "OAIFileSystemAccessMode.h"
#include "OAIFileSystemType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataSource_FileSystemDataSource : public OAIObject {
public:
    OAIDataSource_FileSystemDataSource();
    OAIDataSource_FileSystemDataSource(QString json);
    ~OAIDataSource_FileSystemDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFileSystemId() const;
    void setFileSystemId(const QString &file_system_id);
    bool is_file_system_id_Set() const;
    bool is_file_system_id_Valid() const;

    OAIFileSystemAccessMode getFileSystemAccessMode() const;
    void setFileSystemAccessMode(const OAIFileSystemAccessMode &file_system_access_mode);
    bool is_file_system_access_mode_Set() const;
    bool is_file_system_access_mode_Valid() const;

    OAIFileSystemType getFileSystemType() const;
    void setFileSystemType(const OAIFileSystemType &file_system_type);
    bool is_file_system_type_Set() const;
    bool is_file_system_type_Valid() const;

    QString getDirectoryPath() const;
    void setDirectoryPath(const QString &directory_path);
    bool is_directory_path_Set() const;
    bool is_directory_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_file_system_id;
    bool m_file_system_id_isSet;
    bool m_file_system_id_isValid;

    OAIFileSystemAccessMode m_file_system_access_mode;
    bool m_file_system_access_mode_isSet;
    bool m_file_system_access_mode_isValid;

    OAIFileSystemType m_file_system_type;
    bool m_file_system_type_isSet;
    bool m_file_system_type_isValid;

    QString m_directory_path;
    bool m_directory_path_isSet;
    bool m_directory_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSource_FileSystemDataSource)

#endif // OAIDataSource_FileSystemDataSource_H
