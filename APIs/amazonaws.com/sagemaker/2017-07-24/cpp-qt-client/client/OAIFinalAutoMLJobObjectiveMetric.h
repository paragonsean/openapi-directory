/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinalAutoMLJobObjectiveMetric.h
 *
 * The best candidate result from an AutoML training job.
 */

#ifndef OAIFinalAutoMLJobObjectiveMetric_H
#define OAIFinalAutoMLJobObjectiveMetric_H

#include <QJsonObject>

#include "OAIAutoMLJobObjectiveType.h"
#include "OAIAutoMLMetricEnum.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFinalAutoMLJobObjectiveMetric : public OAIObject {
public:
    OAIFinalAutoMLJobObjectiveMetric();
    OAIFinalAutoMLJobObjectiveMetric(QString json);
    ~OAIFinalAutoMLJobObjectiveMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoMLJobObjectiveType getType() const;
    void setType(const OAIAutoMLJobObjectiveType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAutoMLMetricEnum getMetricName() const;
    void setMetricName(const OAIAutoMLMetricEnum &metric_name);
    bool is_metric_name_Set() const;
    bool is_metric_name_Valid() const;

    float getValue() const;
    void setValue(const float &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAIAutoMLMetricEnum getStandardMetricName() const;
    void setStandardMetricName(const OAIAutoMLMetricEnum &standard_metric_name);
    bool is_standard_metric_name_Set() const;
    bool is_standard_metric_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoMLJobObjectiveType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAutoMLMetricEnum m_metric_name;
    bool m_metric_name_isSet;
    bool m_metric_name_isValid;

    float m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAIAutoMLMetricEnum m_standard_metric_name;
    bool m_standard_metric_name_isSet;
    bool m_standard_metric_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinalAutoMLJobObjectiveMetric)

#endif // OAIFinalAutoMLJobObjectiveMetric_H
