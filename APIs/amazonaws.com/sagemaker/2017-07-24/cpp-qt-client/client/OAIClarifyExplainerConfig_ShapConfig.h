/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClarifyExplainerConfig_ShapConfig.h
 *
 * 
 */

#ifndef OAIClarifyExplainerConfig_ShapConfig_H
#define OAIClarifyExplainerConfig_ShapConfig_H

#include <QJsonObject>

#include "OAIClarifyShapConfig_ShapBaselineConfig.h"
#include "OAIClarifyShapConfig_TextConfig.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClarifyShapConfig_ShapBaselineConfig;
class OAIClarifyShapConfig_TextConfig;

class OAIClarifyExplainerConfig_ShapConfig : public OAIObject {
public:
    OAIClarifyExplainerConfig_ShapConfig();
    OAIClarifyExplainerConfig_ShapConfig(QString json);
    ~OAIClarifyExplainerConfig_ShapConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClarifyShapConfig_ShapBaselineConfig getShapBaselineConfig() const;
    void setShapBaselineConfig(const OAIClarifyShapConfig_ShapBaselineConfig &shap_baseline_config);
    bool is_shap_baseline_config_Set() const;
    bool is_shap_baseline_config_Valid() const;

    qint32 getNumberOfSamples() const;
    void setNumberOfSamples(const qint32 &number_of_samples);
    bool is_number_of_samples_Set() const;
    bool is_number_of_samples_Valid() const;

    bool getUseLogit() const;
    void setUseLogit(const bool &use_logit);
    bool is_use_logit_Set() const;
    bool is_use_logit_Valid() const;

    qint32 getSeed() const;
    void setSeed(const qint32 &seed);
    bool is_seed_Set() const;
    bool is_seed_Valid() const;

    OAIClarifyShapConfig_TextConfig getTextConfig() const;
    void setTextConfig(const OAIClarifyShapConfig_TextConfig &text_config);
    bool is_text_config_Set() const;
    bool is_text_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClarifyShapConfig_ShapBaselineConfig m_shap_baseline_config;
    bool m_shap_baseline_config_isSet;
    bool m_shap_baseline_config_isValid;

    qint32 m_number_of_samples;
    bool m_number_of_samples_isSet;
    bool m_number_of_samples_isValid;

    bool m_use_logit;
    bool m_use_logit_isSet;
    bool m_use_logit_isValid;

    qint32 m_seed;
    bool m_seed_isSet;
    bool m_seed_isValid;

    OAIClarifyShapConfig_TextConfig m_text_config;
    bool m_text_config_isSet;
    bool m_text_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClarifyExplainerConfig_ShapConfig)

#endif // OAIClarifyExplainerConfig_ShapConfig_H
