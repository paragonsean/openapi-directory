/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateInferenceRecommendationsJobRequest_InputConfig.h
 *
 * 
 */

#ifndef OAICreateInferenceRecommendationsJobRequest_InputConfig_H
#define OAICreateInferenceRecommendationsJobRequest_InputConfig_H

#include <QJsonObject>

#include "OAIRecommendationJobInputConfig_ContainerConfig.h"
#include "OAIRecommendationJobInputConfig_ResourceLimit.h"
#include "OAIRecommendationJobInputConfig_TrafficPattern.h"
#include "OAIRecommendationJobInputConfig_VpcConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecommendationJobInputConfig_TrafficPattern;
class OAIRecommendationJobInputConfig_ResourceLimit;
class OAIRecommendationJobInputConfig_ContainerConfig;
class OAIRecommendationJobInputConfig_VpcConfig;

class OAICreateInferenceRecommendationsJobRequest_InputConfig : public OAIObject {
public:
    OAICreateInferenceRecommendationsJobRequest_InputConfig();
    OAICreateInferenceRecommendationsJobRequest_InputConfig(QString json);
    ~OAICreateInferenceRecommendationsJobRequest_InputConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelPackageVersionArn() const;
    void setModelPackageVersionArn(const QString &model_package_version_arn);
    bool is_model_package_version_arn_Set() const;
    bool is_model_package_version_arn_Valid() const;

    qint32 getJobDurationInSeconds() const;
    void setJobDurationInSeconds(const qint32 &job_duration_in_seconds);
    bool is_job_duration_in_seconds_Set() const;
    bool is_job_duration_in_seconds_Valid() const;

    OAIRecommendationJobInputConfig_TrafficPattern getTrafficPattern() const;
    void setTrafficPattern(const OAIRecommendationJobInputConfig_TrafficPattern &traffic_pattern);
    bool is_traffic_pattern_Set() const;
    bool is_traffic_pattern_Valid() const;

    OAIRecommendationJobInputConfig_ResourceLimit getResourceLimit() const;
    void setResourceLimit(const OAIRecommendationJobInputConfig_ResourceLimit &resource_limit);
    bool is_resource_limit_Set() const;
    bool is_resource_limit_Valid() const;

    QList getEndpointConfigurations() const;
    void setEndpointConfigurations(const QList &endpoint_configurations);
    bool is_endpoint_configurations_Set() const;
    bool is_endpoint_configurations_Valid() const;

    QString getVolumeKmsKeyId() const;
    void setVolumeKmsKeyId(const QString &volume_kms_key_id);
    bool is_volume_kms_key_id_Set() const;
    bool is_volume_kms_key_id_Valid() const;

    OAIRecommendationJobInputConfig_ContainerConfig getContainerConfig() const;
    void setContainerConfig(const OAIRecommendationJobInputConfig_ContainerConfig &container_config);
    bool is_container_config_Set() const;
    bool is_container_config_Valid() const;

    QList getEndpoints() const;
    void setEndpoints(const QList &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    OAIRecommendationJobInputConfig_VpcConfig getVpcConfig() const;
    void setVpcConfig(const OAIRecommendationJobInputConfig_VpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_package_version_arn;
    bool m_model_package_version_arn_isSet;
    bool m_model_package_version_arn_isValid;

    qint32 m_job_duration_in_seconds;
    bool m_job_duration_in_seconds_isSet;
    bool m_job_duration_in_seconds_isValid;

    OAIRecommendationJobInputConfig_TrafficPattern m_traffic_pattern;
    bool m_traffic_pattern_isSet;
    bool m_traffic_pattern_isValid;

    OAIRecommendationJobInputConfig_ResourceLimit m_resource_limit;
    bool m_resource_limit_isSet;
    bool m_resource_limit_isValid;

    QList m_endpoint_configurations;
    bool m_endpoint_configurations_isSet;
    bool m_endpoint_configurations_isValid;

    QString m_volume_kms_key_id;
    bool m_volume_kms_key_id_isSet;
    bool m_volume_kms_key_id_isValid;

    OAIRecommendationJobInputConfig_ContainerConfig m_container_config;
    bool m_container_config_isSet;
    bool m_container_config_isValid;

    QList m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    OAIRecommendationJobInputConfig_VpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateInferenceRecommendationsJobRequest_InputConfig)

#endif // OAICreateInferenceRecommendationsJobRequest_InputConfig_H
