/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAutoMLJobResponse.h
 *
 * 
 */

#ifndef OAIDescribeAutoMLJobResponse_H
#define OAIDescribeAutoMLJobResponse_H

#include <QJsonObject>

#include "OAIAutoMLJobSecondaryStatus.h"
#include "OAIAutoMLJobStatus.h"
#include "OAIDescribeAutoMLJobResponse_AutoMLJobArtifacts.h"
#include "OAIDescribeAutoMLJobResponse_AutoMLJobConfig.h"
#include "OAIDescribeAutoMLJobResponse_AutoMLJobObjective.h"
#include "OAIDescribeAutoMLJobResponse_BestCandidate.h"
#include "OAIDescribeAutoMLJobResponse_ModelDeployConfig.h"
#include "OAIDescribeAutoMLJobResponse_ModelDeployResult.h"
#include "OAIDescribeAutoMLJobResponse_OutputDataConfig.h"
#include "OAIDescribeAutoMLJobResponse_ResolvedAttributes.h"
#include "OAIProblemType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeAutoMLJobResponse_OutputDataConfig;
class OAIDescribeAutoMLJobResponse_AutoMLJobObjective;
class OAIDescribeAutoMLJobResponse_AutoMLJobConfig;
class OAIDescribeAutoMLJobResponse_BestCandidate;
class OAIDescribeAutoMLJobResponse_AutoMLJobArtifacts;
class OAIDescribeAutoMLJobResponse_ResolvedAttributes;
class OAIDescribeAutoMLJobResponse_ModelDeployConfig;
class OAIDescribeAutoMLJobResponse_ModelDeployResult;

class OAIDescribeAutoMLJobResponse : public OAIObject {
public:
    OAIDescribeAutoMLJobResponse();
    OAIDescribeAutoMLJobResponse(QString json);
    ~OAIDescribeAutoMLJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutoMlJobName() const;
    void setAutoMlJobName(const QString &auto_ml_job_name);
    bool is_auto_ml_job_name_Set() const;
    bool is_auto_ml_job_name_Valid() const;

    QString getAutoMlJobArn() const;
    void setAutoMlJobArn(const QString &auto_ml_job_arn);
    bool is_auto_ml_job_arn_Set() const;
    bool is_auto_ml_job_arn_Valid() const;

    QList getInputDataConfig() const;
    void setInputDataConfig(const QList &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAIDescribeAutoMLJobResponse_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAIDescribeAutoMLJobResponse_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIDescribeAutoMLJobResponse_AutoMLJobObjective getAutoMlJobObjective() const;
    void setAutoMlJobObjective(const OAIDescribeAutoMLJobResponse_AutoMLJobObjective &auto_ml_job_objective);
    bool is_auto_ml_job_objective_Set() const;
    bool is_auto_ml_job_objective_Valid() const;

    OAIProblemType getProblemType() const;
    void setProblemType(const OAIProblemType &problem_type);
    bool is_problem_type_Set() const;
    bool is_problem_type_Valid() const;

    OAIDescribeAutoMLJobResponse_AutoMLJobConfig getAutoMlJobConfig() const;
    void setAutoMlJobConfig(const OAIDescribeAutoMLJobResponse_AutoMLJobConfig &auto_ml_job_config);
    bool is_auto_ml_job_config_Set() const;
    bool is_auto_ml_job_config_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QList getPartialFailureReasons() const;
    void setPartialFailureReasons(const QList &partial_failure_reasons);
    bool is_partial_failure_reasons_Set() const;
    bool is_partial_failure_reasons_Valid() const;

    OAIDescribeAutoMLJobResponse_BestCandidate getBestCandidate() const;
    void setBestCandidate(const OAIDescribeAutoMLJobResponse_BestCandidate &best_candidate);
    bool is_best_candidate_Set() const;
    bool is_best_candidate_Valid() const;

    OAIAutoMLJobStatus getAutoMlJobStatus() const;
    void setAutoMlJobStatus(const OAIAutoMLJobStatus &auto_ml_job_status);
    bool is_auto_ml_job_status_Set() const;
    bool is_auto_ml_job_status_Valid() const;

    OAIAutoMLJobSecondaryStatus getAutoMlJobSecondaryStatus() const;
    void setAutoMlJobSecondaryStatus(const OAIAutoMLJobSecondaryStatus &auto_ml_job_secondary_status);
    bool is_auto_ml_job_secondary_status_Set() const;
    bool is_auto_ml_job_secondary_status_Valid() const;

    bool getGenerateCandidateDefinitionsOnly() const;
    void setGenerateCandidateDefinitionsOnly(const bool &generate_candidate_definitions_only);
    bool is_generate_candidate_definitions_only_Set() const;
    bool is_generate_candidate_definitions_only_Valid() const;

    OAIDescribeAutoMLJobResponse_AutoMLJobArtifacts getAutoMlJobArtifacts() const;
    void setAutoMlJobArtifacts(const OAIDescribeAutoMLJobResponse_AutoMLJobArtifacts &auto_ml_job_artifacts);
    bool is_auto_ml_job_artifacts_Set() const;
    bool is_auto_ml_job_artifacts_Valid() const;

    OAIDescribeAutoMLJobResponse_ResolvedAttributes getResolvedAttributes() const;
    void setResolvedAttributes(const OAIDescribeAutoMLJobResponse_ResolvedAttributes &resolved_attributes);
    bool is_resolved_attributes_Set() const;
    bool is_resolved_attributes_Valid() const;

    OAIDescribeAutoMLJobResponse_ModelDeployConfig getModelDeployConfig() const;
    void setModelDeployConfig(const OAIDescribeAutoMLJobResponse_ModelDeployConfig &model_deploy_config);
    bool is_model_deploy_config_Set() const;
    bool is_model_deploy_config_Valid() const;

    OAIDescribeAutoMLJobResponse_ModelDeployResult getModelDeployResult() const;
    void setModelDeployResult(const OAIDescribeAutoMLJobResponse_ModelDeployResult &model_deploy_result);
    bool is_model_deploy_result_Set() const;
    bool is_model_deploy_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auto_ml_job_name;
    bool m_auto_ml_job_name_isSet;
    bool m_auto_ml_job_name_isValid;

    QString m_auto_ml_job_arn;
    bool m_auto_ml_job_arn_isSet;
    bool m_auto_ml_job_arn_isValid;

    QList m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAIDescribeAutoMLJobResponse_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIDescribeAutoMLJobResponse_AutoMLJobObjective m_auto_ml_job_objective;
    bool m_auto_ml_job_objective_isSet;
    bool m_auto_ml_job_objective_isValid;

    OAIProblemType m_problem_type;
    bool m_problem_type_isSet;
    bool m_problem_type_isValid;

    OAIDescribeAutoMLJobResponse_AutoMLJobConfig m_auto_ml_job_config;
    bool m_auto_ml_job_config_isSet;
    bool m_auto_ml_job_config_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QList m_partial_failure_reasons;
    bool m_partial_failure_reasons_isSet;
    bool m_partial_failure_reasons_isValid;

    OAIDescribeAutoMLJobResponse_BestCandidate m_best_candidate;
    bool m_best_candidate_isSet;
    bool m_best_candidate_isValid;

    OAIAutoMLJobStatus m_auto_ml_job_status;
    bool m_auto_ml_job_status_isSet;
    bool m_auto_ml_job_status_isValid;

    OAIAutoMLJobSecondaryStatus m_auto_ml_job_secondary_status;
    bool m_auto_ml_job_secondary_status_isSet;
    bool m_auto_ml_job_secondary_status_isValid;

    bool m_generate_candidate_definitions_only;
    bool m_generate_candidate_definitions_only_isSet;
    bool m_generate_candidate_definitions_only_isValid;

    OAIDescribeAutoMLJobResponse_AutoMLJobArtifacts m_auto_ml_job_artifacts;
    bool m_auto_ml_job_artifacts_isSet;
    bool m_auto_ml_job_artifacts_isValid;

    OAIDescribeAutoMLJobResponse_ResolvedAttributes m_resolved_attributes;
    bool m_resolved_attributes_isSet;
    bool m_resolved_attributes_isValid;

    OAIDescribeAutoMLJobResponse_ModelDeployConfig m_model_deploy_config;
    bool m_model_deploy_config_isSet;
    bool m_model_deploy_config_isValid;

    OAIDescribeAutoMLJobResponse_ModelDeployResult m_model_deploy_result;
    bool m_model_deploy_result_isSet;
    bool m_model_deploy_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAutoMLJobResponse)

#endif // OAIDescribeAutoMLJobResponse_H
