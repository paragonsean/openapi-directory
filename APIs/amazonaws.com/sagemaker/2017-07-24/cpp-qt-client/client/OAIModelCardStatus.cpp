/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelCardStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelCardStatus::OAIModelCardStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelCardStatus::OAIModelCardStatus() {
    this->initializeModel();
}

OAIModelCardStatus::~OAIModelCardStatus() {}

void OAIModelCardStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIModelCardStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIModelCardStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Draft", Qt::CaseInsensitive) == 0) {
        m_value = eOAIModelCardStatus::DRAFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PendingReview", Qt::CaseInsensitive) == 0) {
        m_value = eOAIModelCardStatus::PENDINGREVIEW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Approved", Qt::CaseInsensitive) == 0) {
        m_value = eOAIModelCardStatus::APPROVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Archived", Qt::CaseInsensitive) == 0) {
        m_value = eOAIModelCardStatus::ARCHIVED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIModelCardStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIModelCardStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIModelCardStatus::DRAFT:
            val = "Draft";
            break;
        case eOAIModelCardStatus::PENDINGREVIEW:
            val = "PendingReview";
            break;
        case eOAIModelCardStatus::APPROVED:
            val = "Approved";
            break;
        case eOAIModelCardStatus::ARCHIVED:
            val = "Archived";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIModelCardStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIModelCardStatus::eOAIModelCardStatus OAIModelCardStatus::getValue() const {
    return m_value;
}

void OAIModelCardStatus::setValue(const OAIModelCardStatus::eOAIModelCardStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIModelCardStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIModelCardStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
