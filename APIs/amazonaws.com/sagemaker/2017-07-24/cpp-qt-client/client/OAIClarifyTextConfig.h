/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClarifyTextConfig.h
 *
 * A parameter used to configure the SageMaker Clarify explainer to treat text features as text so that explanations are provided for individual units of text. Required only for natural language processing (NLP) explainability. 
 */

#ifndef OAIClarifyTextConfig_H
#define OAIClarifyTextConfig_H

#include <QJsonObject>

#include "OAIClarifyTextGranularity.h"
#include "OAIClarifyTextLanguage.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClarifyTextConfig : public OAIObject {
public:
    OAIClarifyTextConfig();
    OAIClarifyTextConfig(QString json);
    ~OAIClarifyTextConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClarifyTextLanguage getLanguage() const;
    void setLanguage(const OAIClarifyTextLanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    OAIClarifyTextGranularity getGranularity() const;
    void setGranularity(const OAIClarifyTextGranularity &granularity);
    bool is_granularity_Set() const;
    bool is_granularity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClarifyTextLanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    OAIClarifyTextGranularity m_granularity;
    bool m_granularity_isSet;
    bool m_granularity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClarifyTextConfig)

#endif // OAIClarifyTextConfig_H
