/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDeviceFleetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDeviceFleetResponse::OAIDescribeDeviceFleetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDeviceFleetResponse::OAIDescribeDeviceFleetResponse() {
    this->initializeModel();
}

OAIDescribeDeviceFleetResponse::~OAIDescribeDeviceFleetResponse() {}

void OAIDescribeDeviceFleetResponse::initializeModel() {

    m_device_fleet_name_isSet = false;
    m_device_fleet_name_isValid = false;

    m_device_fleet_arn_isSet = false;
    m_device_fleet_arn_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_iot_role_alias_isSet = false;
    m_iot_role_alias_isValid = false;
}

void OAIDescribeDeviceFleetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDeviceFleetResponse::fromJsonObject(QJsonObject json) {

    m_device_fleet_name_isValid = ::OpenAPI::fromJsonValue(m_device_fleet_name, json[QString("DeviceFleetName")]);
    m_device_fleet_name_isSet = !json[QString("DeviceFleetName")].isNull() && m_device_fleet_name_isValid;

    m_device_fleet_arn_isValid = ::OpenAPI::fromJsonValue(m_device_fleet_arn, json[QString("DeviceFleetArn")]);
    m_device_fleet_arn_isSet = !json[QString("DeviceFleetArn")].isNull() && m_device_fleet_arn_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_iot_role_alias_isValid = ::OpenAPI::fromJsonValue(m_iot_role_alias, json[QString("IotRoleAlias")]);
    m_iot_role_alias_isSet = !json[QString("IotRoleAlias")].isNull() && m_iot_role_alias_isValid;
}

QString OAIDescribeDeviceFleetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDeviceFleetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_device_fleet_name_isSet) {
        obj.insert(QString("DeviceFleetName"), ::OpenAPI::toJsonValue(m_device_fleet_name));
    }
    if (m_device_fleet_arn_isSet) {
        obj.insert(QString("DeviceFleetArn"), ::OpenAPI::toJsonValue(m_device_fleet_arn));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_iot_role_alias_isSet) {
        obj.insert(QString("IotRoleAlias"), ::OpenAPI::toJsonValue(m_iot_role_alias));
    }
    return obj;
}

QString OAIDescribeDeviceFleetResponse::getDeviceFleetName() const {
    return m_device_fleet_name;
}
void OAIDescribeDeviceFleetResponse::setDeviceFleetName(const QString &device_fleet_name) {
    m_device_fleet_name = device_fleet_name;
    m_device_fleet_name_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_device_fleet_name_Set() const{
    return m_device_fleet_name_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_device_fleet_name_Valid() const{
    return m_device_fleet_name_isValid;
}

QString OAIDescribeDeviceFleetResponse::getDeviceFleetArn() const {
    return m_device_fleet_arn;
}
void OAIDescribeDeviceFleetResponse::setDeviceFleetArn(const QString &device_fleet_arn) {
    m_device_fleet_arn = device_fleet_arn;
    m_device_fleet_arn_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_device_fleet_arn_Set() const{
    return m_device_fleet_arn_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_device_fleet_arn_Valid() const{
    return m_device_fleet_arn_isValid;
}

OAIDescribeDeviceFleetResponse_OutputConfig OAIDescribeDeviceFleetResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIDescribeDeviceFleetResponse::setOutputConfig(const OAIDescribeDeviceFleetResponse_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

QString OAIDescribeDeviceFleetResponse::getDescription() const {
    return m_description;
}
void OAIDescribeDeviceFleetResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIDescribeDeviceFleetResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeDeviceFleetResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeDeviceFleetResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeDeviceFleetResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIDescribeDeviceFleetResponse::getRoleArn() const {
    return m_role_arn;
}
void OAIDescribeDeviceFleetResponse::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QString OAIDescribeDeviceFleetResponse::getIotRoleAlias() const {
    return m_iot_role_alias;
}
void OAIDescribeDeviceFleetResponse::setIotRoleAlias(const QString &iot_role_alias) {
    m_iot_role_alias = iot_role_alias;
    m_iot_role_alias_isSet = true;
}

bool OAIDescribeDeviceFleetResponse::is_iot_role_alias_Set() const{
    return m_iot_role_alias_isSet;
}

bool OAIDescribeDeviceFleetResponse::is_iot_role_alias_Valid() const{
    return m_iot_role_alias_isValid;
}

bool OAIDescribeDeviceFleetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_fleet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_fleet_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iot_role_alias_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDeviceFleetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_device_fleet_name_isValid && m_device_fleet_arn_isValid && m_output_config_isValid && m_creation_time_isValid && m_last_modified_time_isValid && true;
}

} // namespace OpenAPI
