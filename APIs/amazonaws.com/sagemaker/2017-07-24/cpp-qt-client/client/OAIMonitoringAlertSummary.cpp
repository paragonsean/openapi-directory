/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonitoringAlertSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonitoringAlertSummary::OAIMonitoringAlertSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonitoringAlertSummary::OAIMonitoringAlertSummary() {
    this->initializeModel();
}

OAIMonitoringAlertSummary::~OAIMonitoringAlertSummary() {}

void OAIMonitoringAlertSummary::initializeModel() {

    m_monitoring_alert_name_isSet = false;
    m_monitoring_alert_name_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_alert_status_isSet = false;
    m_alert_status_isValid = false;

    m_datapoints_to_alert_isSet = false;
    m_datapoints_to_alert_isValid = false;

    m_evaluation_period_isSet = false;
    m_evaluation_period_isValid = false;

    m_actions_isSet = false;
    m_actions_isValid = false;
}

void OAIMonitoringAlertSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonitoringAlertSummary::fromJsonObject(QJsonObject json) {

    m_monitoring_alert_name_isValid = ::OpenAPI::fromJsonValue(m_monitoring_alert_name, json[QString("MonitoringAlertName")]);
    m_monitoring_alert_name_isSet = !json[QString("MonitoringAlertName")].isNull() && m_monitoring_alert_name_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_alert_status_isValid = ::OpenAPI::fromJsonValue(m_alert_status, json[QString("AlertStatus")]);
    m_alert_status_isSet = !json[QString("AlertStatus")].isNull() && m_alert_status_isValid;

    m_datapoints_to_alert_isValid = ::OpenAPI::fromJsonValue(m_datapoints_to_alert, json[QString("DatapointsToAlert")]);
    m_datapoints_to_alert_isSet = !json[QString("DatapointsToAlert")].isNull() && m_datapoints_to_alert_isValid;

    m_evaluation_period_isValid = ::OpenAPI::fromJsonValue(m_evaluation_period, json[QString("EvaluationPeriod")]);
    m_evaluation_period_isSet = !json[QString("EvaluationPeriod")].isNull() && m_evaluation_period_isValid;

    m_actions_isValid = ::OpenAPI::fromJsonValue(m_actions, json[QString("Actions")]);
    m_actions_isSet = !json[QString("Actions")].isNull() && m_actions_isValid;
}

QString OAIMonitoringAlertSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonitoringAlertSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_monitoring_alert_name_isSet) {
        obj.insert(QString("MonitoringAlertName"), ::OpenAPI::toJsonValue(m_monitoring_alert_name));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_alert_status.isSet()) {
        obj.insert(QString("AlertStatus"), ::OpenAPI::toJsonValue(m_alert_status));
    }
    if (m_datapoints_to_alert_isSet) {
        obj.insert(QString("DatapointsToAlert"), ::OpenAPI::toJsonValue(m_datapoints_to_alert));
    }
    if (m_evaluation_period_isSet) {
        obj.insert(QString("EvaluationPeriod"), ::OpenAPI::toJsonValue(m_evaluation_period));
    }
    if (m_actions.isSet()) {
        obj.insert(QString("Actions"), ::OpenAPI::toJsonValue(m_actions));
    }
    return obj;
}

QString OAIMonitoringAlertSummary::getMonitoringAlertName() const {
    return m_monitoring_alert_name;
}
void OAIMonitoringAlertSummary::setMonitoringAlertName(const QString &monitoring_alert_name) {
    m_monitoring_alert_name = monitoring_alert_name;
    m_monitoring_alert_name_isSet = true;
}

bool OAIMonitoringAlertSummary::is_monitoring_alert_name_Set() const{
    return m_monitoring_alert_name_isSet;
}

bool OAIMonitoringAlertSummary::is_monitoring_alert_name_Valid() const{
    return m_monitoring_alert_name_isValid;
}

QDateTime OAIMonitoringAlertSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIMonitoringAlertSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIMonitoringAlertSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIMonitoringAlertSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIMonitoringAlertSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIMonitoringAlertSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIMonitoringAlertSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIMonitoringAlertSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIMonitoringAlertStatus OAIMonitoringAlertSummary::getAlertStatus() const {
    return m_alert_status;
}
void OAIMonitoringAlertSummary::setAlertStatus(const OAIMonitoringAlertStatus &alert_status) {
    m_alert_status = alert_status;
    m_alert_status_isSet = true;
}

bool OAIMonitoringAlertSummary::is_alert_status_Set() const{
    return m_alert_status_isSet;
}

bool OAIMonitoringAlertSummary::is_alert_status_Valid() const{
    return m_alert_status_isValid;
}

qint32 OAIMonitoringAlertSummary::getDatapointsToAlert() const {
    return m_datapoints_to_alert;
}
void OAIMonitoringAlertSummary::setDatapointsToAlert(const qint32 &datapoints_to_alert) {
    m_datapoints_to_alert = datapoints_to_alert;
    m_datapoints_to_alert_isSet = true;
}

bool OAIMonitoringAlertSummary::is_datapoints_to_alert_Set() const{
    return m_datapoints_to_alert_isSet;
}

bool OAIMonitoringAlertSummary::is_datapoints_to_alert_Valid() const{
    return m_datapoints_to_alert_isValid;
}

qint32 OAIMonitoringAlertSummary::getEvaluationPeriod() const {
    return m_evaluation_period;
}
void OAIMonitoringAlertSummary::setEvaluationPeriod(const qint32 &evaluation_period) {
    m_evaluation_period = evaluation_period;
    m_evaluation_period_isSet = true;
}

bool OAIMonitoringAlertSummary::is_evaluation_period_Set() const{
    return m_evaluation_period_isSet;
}

bool OAIMonitoringAlertSummary::is_evaluation_period_Valid() const{
    return m_evaluation_period_isValid;
}

OAIMonitoringAlertSummary_Actions OAIMonitoringAlertSummary::getActions() const {
    return m_actions;
}
void OAIMonitoringAlertSummary::setActions(const OAIMonitoringAlertSummary_Actions &actions) {
    m_actions = actions;
    m_actions_isSet = true;
}

bool OAIMonitoringAlertSummary::is_actions_Set() const{
    return m_actions_isSet;
}

bool OAIMonitoringAlertSummary::is_actions_Valid() const{
    return m_actions_isValid;
}

bool OAIMonitoringAlertSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitoring_alert_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alert_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_datapoints_to_alert_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluation_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonitoringAlertSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitoring_alert_name_isValid && m_creation_time_isValid && m_last_modified_time_isValid && m_alert_status_isValid && m_datapoints_to_alert_isValid && m_evaluation_period_isValid && m_actions_isValid && true;
}

} // namespace OpenAPI
