/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransformJobSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransformJobSummary::OAITransformJobSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransformJobSummary::OAITransformJobSummary() {
    this->initializeModel();
}

OAITransformJobSummary::~OAITransformJobSummary() {}

void OAITransformJobSummary::initializeModel() {

    m_transform_job_name_isSet = false;
    m_transform_job_name_isValid = false;

    m_transform_job_arn_isSet = false;
    m_transform_job_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_transform_end_time_isSet = false;
    m_transform_end_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_transform_job_status_isSet = false;
    m_transform_job_status_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;
}

void OAITransformJobSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransformJobSummary::fromJsonObject(QJsonObject json) {

    m_transform_job_name_isValid = ::OpenAPI::fromJsonValue(m_transform_job_name, json[QString("TransformJobName")]);
    m_transform_job_name_isSet = !json[QString("TransformJobName")].isNull() && m_transform_job_name_isValid;

    m_transform_job_arn_isValid = ::OpenAPI::fromJsonValue(m_transform_job_arn, json[QString("TransformJobArn")]);
    m_transform_job_arn_isSet = !json[QString("TransformJobArn")].isNull() && m_transform_job_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_transform_end_time_isValid = ::OpenAPI::fromJsonValue(m_transform_end_time, json[QString("TransformEndTime")]);
    m_transform_end_time_isSet = !json[QString("TransformEndTime")].isNull() && m_transform_end_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_transform_job_status_isValid = ::OpenAPI::fromJsonValue(m_transform_job_status, json[QString("TransformJobStatus")]);
    m_transform_job_status_isSet = !json[QString("TransformJobStatus")].isNull() && m_transform_job_status_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;
}

QString OAITransformJobSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransformJobSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_transform_job_name_isSet) {
        obj.insert(QString("TransformJobName"), ::OpenAPI::toJsonValue(m_transform_job_name));
    }
    if (m_transform_job_arn_isSet) {
        obj.insert(QString("TransformJobArn"), ::OpenAPI::toJsonValue(m_transform_job_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_transform_end_time_isSet) {
        obj.insert(QString("TransformEndTime"), ::OpenAPI::toJsonValue(m_transform_end_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_transform_job_status.isSet()) {
        obj.insert(QString("TransformJobStatus"), ::OpenAPI::toJsonValue(m_transform_job_status));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    return obj;
}

QString OAITransformJobSummary::getTransformJobName() const {
    return m_transform_job_name;
}
void OAITransformJobSummary::setTransformJobName(const QString &transform_job_name) {
    m_transform_job_name = transform_job_name;
    m_transform_job_name_isSet = true;
}

bool OAITransformJobSummary::is_transform_job_name_Set() const{
    return m_transform_job_name_isSet;
}

bool OAITransformJobSummary::is_transform_job_name_Valid() const{
    return m_transform_job_name_isValid;
}

QString OAITransformJobSummary::getTransformJobArn() const {
    return m_transform_job_arn;
}
void OAITransformJobSummary::setTransformJobArn(const QString &transform_job_arn) {
    m_transform_job_arn = transform_job_arn;
    m_transform_job_arn_isSet = true;
}

bool OAITransformJobSummary::is_transform_job_arn_Set() const{
    return m_transform_job_arn_isSet;
}

bool OAITransformJobSummary::is_transform_job_arn_Valid() const{
    return m_transform_job_arn_isValid;
}

QDateTime OAITransformJobSummary::getCreationTime() const {
    return m_creation_time;
}
void OAITransformJobSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAITransformJobSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAITransformJobSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAITransformJobSummary::getTransformEndTime() const {
    return m_transform_end_time;
}
void OAITransformJobSummary::setTransformEndTime(const QDateTime &transform_end_time) {
    m_transform_end_time = transform_end_time;
    m_transform_end_time_isSet = true;
}

bool OAITransformJobSummary::is_transform_end_time_Set() const{
    return m_transform_end_time_isSet;
}

bool OAITransformJobSummary::is_transform_end_time_Valid() const{
    return m_transform_end_time_isValid;
}

QDateTime OAITransformJobSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAITransformJobSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAITransformJobSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAITransformJobSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAITransformJobStatus OAITransformJobSummary::getTransformJobStatus() const {
    return m_transform_job_status;
}
void OAITransformJobSummary::setTransformJobStatus(const OAITransformJobStatus &transform_job_status) {
    m_transform_job_status = transform_job_status;
    m_transform_job_status_isSet = true;
}

bool OAITransformJobSummary::is_transform_job_status_Set() const{
    return m_transform_job_status_isSet;
}

bool OAITransformJobSummary::is_transform_job_status_Valid() const{
    return m_transform_job_status_isValid;
}

QString OAITransformJobSummary::getFailureReason() const {
    return m_failure_reason;
}
void OAITransformJobSummary::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAITransformJobSummary::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAITransformJobSummary::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

bool OAITransformJobSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transform_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transform_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransformJobSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transform_job_name_isValid && m_transform_job_arn_isValid && m_creation_time_isValid && m_transform_job_status_isValid && true;
}

} // namespace OpenAPI
