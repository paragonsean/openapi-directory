/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrainingJobSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrainingJobSummary::OAITrainingJobSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrainingJobSummary::OAITrainingJobSummary() {
    this->initializeModel();
}

OAITrainingJobSummary::~OAITrainingJobSummary() {}

void OAITrainingJobSummary::initializeModel() {

    m_training_job_name_isSet = false;
    m_training_job_name_isValid = false;

    m_training_job_arn_isSet = false;
    m_training_job_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_training_end_time_isSet = false;
    m_training_end_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_training_job_status_isSet = false;
    m_training_job_status_isValid = false;

    m_warm_pool_status_isSet = false;
    m_warm_pool_status_isValid = false;
}

void OAITrainingJobSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrainingJobSummary::fromJsonObject(QJsonObject json) {

    m_training_job_name_isValid = ::OpenAPI::fromJsonValue(m_training_job_name, json[QString("TrainingJobName")]);
    m_training_job_name_isSet = !json[QString("TrainingJobName")].isNull() && m_training_job_name_isValid;

    m_training_job_arn_isValid = ::OpenAPI::fromJsonValue(m_training_job_arn, json[QString("TrainingJobArn")]);
    m_training_job_arn_isSet = !json[QString("TrainingJobArn")].isNull() && m_training_job_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_training_end_time_isValid = ::OpenAPI::fromJsonValue(m_training_end_time, json[QString("TrainingEndTime")]);
    m_training_end_time_isSet = !json[QString("TrainingEndTime")].isNull() && m_training_end_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_training_job_status_isValid = ::OpenAPI::fromJsonValue(m_training_job_status, json[QString("TrainingJobStatus")]);
    m_training_job_status_isSet = !json[QString("TrainingJobStatus")].isNull() && m_training_job_status_isValid;

    m_warm_pool_status_isValid = ::OpenAPI::fromJsonValue(m_warm_pool_status, json[QString("WarmPoolStatus")]);
    m_warm_pool_status_isSet = !json[QString("WarmPoolStatus")].isNull() && m_warm_pool_status_isValid;
}

QString OAITrainingJobSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrainingJobSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_training_job_name_isSet) {
        obj.insert(QString("TrainingJobName"), ::OpenAPI::toJsonValue(m_training_job_name));
    }
    if (m_training_job_arn_isSet) {
        obj.insert(QString("TrainingJobArn"), ::OpenAPI::toJsonValue(m_training_job_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_training_end_time_isSet) {
        obj.insert(QString("TrainingEndTime"), ::OpenAPI::toJsonValue(m_training_end_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_training_job_status.isSet()) {
        obj.insert(QString("TrainingJobStatus"), ::OpenAPI::toJsonValue(m_training_job_status));
    }
    if (m_warm_pool_status.isSet()) {
        obj.insert(QString("WarmPoolStatus"), ::OpenAPI::toJsonValue(m_warm_pool_status));
    }
    return obj;
}

QString OAITrainingJobSummary::getTrainingJobName() const {
    return m_training_job_name;
}
void OAITrainingJobSummary::setTrainingJobName(const QString &training_job_name) {
    m_training_job_name = training_job_name;
    m_training_job_name_isSet = true;
}

bool OAITrainingJobSummary::is_training_job_name_Set() const{
    return m_training_job_name_isSet;
}

bool OAITrainingJobSummary::is_training_job_name_Valid() const{
    return m_training_job_name_isValid;
}

QString OAITrainingJobSummary::getTrainingJobArn() const {
    return m_training_job_arn;
}
void OAITrainingJobSummary::setTrainingJobArn(const QString &training_job_arn) {
    m_training_job_arn = training_job_arn;
    m_training_job_arn_isSet = true;
}

bool OAITrainingJobSummary::is_training_job_arn_Set() const{
    return m_training_job_arn_isSet;
}

bool OAITrainingJobSummary::is_training_job_arn_Valid() const{
    return m_training_job_arn_isValid;
}

QDateTime OAITrainingJobSummary::getCreationTime() const {
    return m_creation_time;
}
void OAITrainingJobSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAITrainingJobSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAITrainingJobSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAITrainingJobSummary::getTrainingEndTime() const {
    return m_training_end_time;
}
void OAITrainingJobSummary::setTrainingEndTime(const QDateTime &training_end_time) {
    m_training_end_time = training_end_time;
    m_training_end_time_isSet = true;
}

bool OAITrainingJobSummary::is_training_end_time_Set() const{
    return m_training_end_time_isSet;
}

bool OAITrainingJobSummary::is_training_end_time_Valid() const{
    return m_training_end_time_isValid;
}

QDateTime OAITrainingJobSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAITrainingJobSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAITrainingJobSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAITrainingJobSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAITrainingJobStatus OAITrainingJobSummary::getTrainingJobStatus() const {
    return m_training_job_status;
}
void OAITrainingJobSummary::setTrainingJobStatus(const OAITrainingJobStatus &training_job_status) {
    m_training_job_status = training_job_status;
    m_training_job_status_isSet = true;
}

bool OAITrainingJobSummary::is_training_job_status_Set() const{
    return m_training_job_status_isSet;
}

bool OAITrainingJobSummary::is_training_job_status_Valid() const{
    return m_training_job_status_isValid;
}

OAIDescribeTrainingJobResponse_WarmPoolStatus OAITrainingJobSummary::getWarmPoolStatus() const {
    return m_warm_pool_status;
}
void OAITrainingJobSummary::setWarmPoolStatus(const OAIDescribeTrainingJobResponse_WarmPoolStatus &warm_pool_status) {
    m_warm_pool_status = warm_pool_status;
    m_warm_pool_status_isSet = true;
}

bool OAITrainingJobSummary::is_warm_pool_status_Set() const{
    return m_warm_pool_status_isSet;
}

bool OAITrainingJobSummary::is_warm_pool_status_Valid() const{
    return m_warm_pool_status_isValid;
}

bool OAITrainingJobSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_training_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_warm_pool_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrainingJobSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_training_job_name_isValid && m_training_job_arn_isValid && m_creation_time_isValid && m_training_job_status_isValid && true;
}

} // namespace OpenAPI
