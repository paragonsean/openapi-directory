/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeCompilationJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeCompilationJobResponse::OAIDescribeCompilationJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeCompilationJobResponse::OAIDescribeCompilationJobResponse() {
    this->initializeModel();
}

OAIDescribeCompilationJobResponse::~OAIDescribeCompilationJobResponse() {}

void OAIDescribeCompilationJobResponse::initializeModel() {

    m_compilation_job_name_isSet = false;
    m_compilation_job_name_isValid = false;

    m_compilation_job_arn_isSet = false;
    m_compilation_job_arn_isValid = false;

    m_compilation_job_status_isSet = false;
    m_compilation_job_status_isValid = false;

    m_compilation_start_time_isSet = false;
    m_compilation_start_time_isValid = false;

    m_compilation_end_time_isSet = false;
    m_compilation_end_time_isValid = false;

    m_stopping_condition_isSet = false;
    m_stopping_condition_isValid = false;

    m_inference_image_isSet = false;
    m_inference_image_isValid = false;

    m_model_package_version_arn_isSet = false;
    m_model_package_version_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_model_artifacts_isSet = false;
    m_model_artifacts_isValid = false;

    m_model_digests_isSet = false;
    m_model_digests_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_input_config_isSet = false;
    m_input_config_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_vpc_config_isSet = false;
    m_vpc_config_isValid = false;
}

void OAIDescribeCompilationJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeCompilationJobResponse::fromJsonObject(QJsonObject json) {

    m_compilation_job_name_isValid = ::OpenAPI::fromJsonValue(m_compilation_job_name, json[QString("CompilationJobName")]);
    m_compilation_job_name_isSet = !json[QString("CompilationJobName")].isNull() && m_compilation_job_name_isValid;

    m_compilation_job_arn_isValid = ::OpenAPI::fromJsonValue(m_compilation_job_arn, json[QString("CompilationJobArn")]);
    m_compilation_job_arn_isSet = !json[QString("CompilationJobArn")].isNull() && m_compilation_job_arn_isValid;

    m_compilation_job_status_isValid = ::OpenAPI::fromJsonValue(m_compilation_job_status, json[QString("CompilationJobStatus")]);
    m_compilation_job_status_isSet = !json[QString("CompilationJobStatus")].isNull() && m_compilation_job_status_isValid;

    m_compilation_start_time_isValid = ::OpenAPI::fromJsonValue(m_compilation_start_time, json[QString("CompilationStartTime")]);
    m_compilation_start_time_isSet = !json[QString("CompilationStartTime")].isNull() && m_compilation_start_time_isValid;

    m_compilation_end_time_isValid = ::OpenAPI::fromJsonValue(m_compilation_end_time, json[QString("CompilationEndTime")]);
    m_compilation_end_time_isSet = !json[QString("CompilationEndTime")].isNull() && m_compilation_end_time_isValid;

    m_stopping_condition_isValid = ::OpenAPI::fromJsonValue(m_stopping_condition, json[QString("StoppingCondition")]);
    m_stopping_condition_isSet = !json[QString("StoppingCondition")].isNull() && m_stopping_condition_isValid;

    m_inference_image_isValid = ::OpenAPI::fromJsonValue(m_inference_image, json[QString("InferenceImage")]);
    m_inference_image_isSet = !json[QString("InferenceImage")].isNull() && m_inference_image_isValid;

    m_model_package_version_arn_isValid = ::OpenAPI::fromJsonValue(m_model_package_version_arn, json[QString("ModelPackageVersionArn")]);
    m_model_package_version_arn_isSet = !json[QString("ModelPackageVersionArn")].isNull() && m_model_package_version_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;

    m_model_artifacts_isValid = ::OpenAPI::fromJsonValue(m_model_artifacts, json[QString("ModelArtifacts")]);
    m_model_artifacts_isSet = !json[QString("ModelArtifacts")].isNull() && m_model_artifacts_isValid;

    m_model_digests_isValid = ::OpenAPI::fromJsonValue(m_model_digests, json[QString("ModelDigests")]);
    m_model_digests_isSet = !json[QString("ModelDigests")].isNull() && m_model_digests_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_input_config_isValid = ::OpenAPI::fromJsonValue(m_input_config, json[QString("InputConfig")]);
    m_input_config_isSet = !json[QString("InputConfig")].isNull() && m_input_config_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_vpc_config_isValid = ::OpenAPI::fromJsonValue(m_vpc_config, json[QString("VpcConfig")]);
    m_vpc_config_isSet = !json[QString("VpcConfig")].isNull() && m_vpc_config_isValid;
}

QString OAIDescribeCompilationJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeCompilationJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_compilation_job_name_isSet) {
        obj.insert(QString("CompilationJobName"), ::OpenAPI::toJsonValue(m_compilation_job_name));
    }
    if (m_compilation_job_arn_isSet) {
        obj.insert(QString("CompilationJobArn"), ::OpenAPI::toJsonValue(m_compilation_job_arn));
    }
    if (m_compilation_job_status.isSet()) {
        obj.insert(QString("CompilationJobStatus"), ::OpenAPI::toJsonValue(m_compilation_job_status));
    }
    if (m_compilation_start_time_isSet) {
        obj.insert(QString("CompilationStartTime"), ::OpenAPI::toJsonValue(m_compilation_start_time));
    }
    if (m_compilation_end_time_isSet) {
        obj.insert(QString("CompilationEndTime"), ::OpenAPI::toJsonValue(m_compilation_end_time));
    }
    if (m_stopping_condition.isSet()) {
        obj.insert(QString("StoppingCondition"), ::OpenAPI::toJsonValue(m_stopping_condition));
    }
    if (m_inference_image_isSet) {
        obj.insert(QString("InferenceImage"), ::OpenAPI::toJsonValue(m_inference_image));
    }
    if (m_model_package_version_arn_isSet) {
        obj.insert(QString("ModelPackageVersionArn"), ::OpenAPI::toJsonValue(m_model_package_version_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_model_artifacts.isSet()) {
        obj.insert(QString("ModelArtifacts"), ::OpenAPI::toJsonValue(m_model_artifacts));
    }
    if (m_model_digests.isSet()) {
        obj.insert(QString("ModelDigests"), ::OpenAPI::toJsonValue(m_model_digests));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_input_config.isSet()) {
        obj.insert(QString("InputConfig"), ::OpenAPI::toJsonValue(m_input_config));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_vpc_config.isSet()) {
        obj.insert(QString("VpcConfig"), ::OpenAPI::toJsonValue(m_vpc_config));
    }
    return obj;
}

QString OAIDescribeCompilationJobResponse::getCompilationJobName() const {
    return m_compilation_job_name;
}
void OAIDescribeCompilationJobResponse::setCompilationJobName(const QString &compilation_job_name) {
    m_compilation_job_name = compilation_job_name;
    m_compilation_job_name_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_name_Set() const{
    return m_compilation_job_name_isSet;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_name_Valid() const{
    return m_compilation_job_name_isValid;
}

QString OAIDescribeCompilationJobResponse::getCompilationJobArn() const {
    return m_compilation_job_arn;
}
void OAIDescribeCompilationJobResponse::setCompilationJobArn(const QString &compilation_job_arn) {
    m_compilation_job_arn = compilation_job_arn;
    m_compilation_job_arn_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_arn_Set() const{
    return m_compilation_job_arn_isSet;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_arn_Valid() const{
    return m_compilation_job_arn_isValid;
}

OAICompilationJobStatus OAIDescribeCompilationJobResponse::getCompilationJobStatus() const {
    return m_compilation_job_status;
}
void OAIDescribeCompilationJobResponse::setCompilationJobStatus(const OAICompilationJobStatus &compilation_job_status) {
    m_compilation_job_status = compilation_job_status;
    m_compilation_job_status_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_status_Set() const{
    return m_compilation_job_status_isSet;
}

bool OAIDescribeCompilationJobResponse::is_compilation_job_status_Valid() const{
    return m_compilation_job_status_isValid;
}

QDateTime OAIDescribeCompilationJobResponse::getCompilationStartTime() const {
    return m_compilation_start_time;
}
void OAIDescribeCompilationJobResponse::setCompilationStartTime(const QDateTime &compilation_start_time) {
    m_compilation_start_time = compilation_start_time;
    m_compilation_start_time_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_compilation_start_time_Set() const{
    return m_compilation_start_time_isSet;
}

bool OAIDescribeCompilationJobResponse::is_compilation_start_time_Valid() const{
    return m_compilation_start_time_isValid;
}

QDateTime OAIDescribeCompilationJobResponse::getCompilationEndTime() const {
    return m_compilation_end_time;
}
void OAIDescribeCompilationJobResponse::setCompilationEndTime(const QDateTime &compilation_end_time) {
    m_compilation_end_time = compilation_end_time;
    m_compilation_end_time_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_compilation_end_time_Set() const{
    return m_compilation_end_time_isSet;
}

bool OAIDescribeCompilationJobResponse::is_compilation_end_time_Valid() const{
    return m_compilation_end_time_isValid;
}

OAICreateCompilationJobRequest_StoppingCondition OAIDescribeCompilationJobResponse::getStoppingCondition() const {
    return m_stopping_condition;
}
void OAIDescribeCompilationJobResponse::setStoppingCondition(const OAICreateCompilationJobRequest_StoppingCondition &stopping_condition) {
    m_stopping_condition = stopping_condition;
    m_stopping_condition_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_stopping_condition_Set() const{
    return m_stopping_condition_isSet;
}

bool OAIDescribeCompilationJobResponse::is_stopping_condition_Valid() const{
    return m_stopping_condition_isValid;
}

QString OAIDescribeCompilationJobResponse::getInferenceImage() const {
    return m_inference_image;
}
void OAIDescribeCompilationJobResponse::setInferenceImage(const QString &inference_image) {
    m_inference_image = inference_image;
    m_inference_image_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_inference_image_Set() const{
    return m_inference_image_isSet;
}

bool OAIDescribeCompilationJobResponse::is_inference_image_Valid() const{
    return m_inference_image_isValid;
}

QString OAIDescribeCompilationJobResponse::getModelPackageVersionArn() const {
    return m_model_package_version_arn;
}
void OAIDescribeCompilationJobResponse::setModelPackageVersionArn(const QString &model_package_version_arn) {
    m_model_package_version_arn = model_package_version_arn;
    m_model_package_version_arn_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_model_package_version_arn_Set() const{
    return m_model_package_version_arn_isSet;
}

bool OAIDescribeCompilationJobResponse::is_model_package_version_arn_Valid() const{
    return m_model_package_version_arn_isValid;
}

QDateTime OAIDescribeCompilationJobResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeCompilationJobResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeCompilationJobResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeCompilationJobResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeCompilationJobResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeCompilationJobResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIDescribeCompilationJobResponse::getFailureReason() const {
    return m_failure_reason;
}
void OAIDescribeCompilationJobResponse::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIDescribeCompilationJobResponse::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

OAIDescribeCompilationJobResponse_ModelArtifacts OAIDescribeCompilationJobResponse::getModelArtifacts() const {
    return m_model_artifacts;
}
void OAIDescribeCompilationJobResponse::setModelArtifacts(const OAIDescribeCompilationJobResponse_ModelArtifacts &model_artifacts) {
    m_model_artifacts = model_artifacts;
    m_model_artifacts_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_model_artifacts_Set() const{
    return m_model_artifacts_isSet;
}

bool OAIDescribeCompilationJobResponse::is_model_artifacts_Valid() const{
    return m_model_artifacts_isValid;
}

OAIDescribeCompilationJobResponse_ModelDigests OAIDescribeCompilationJobResponse::getModelDigests() const {
    return m_model_digests;
}
void OAIDescribeCompilationJobResponse::setModelDigests(const OAIDescribeCompilationJobResponse_ModelDigests &model_digests) {
    m_model_digests = model_digests;
    m_model_digests_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_model_digests_Set() const{
    return m_model_digests_isSet;
}

bool OAIDescribeCompilationJobResponse::is_model_digests_Valid() const{
    return m_model_digests_isValid;
}

QString OAIDescribeCompilationJobResponse::getRoleArn() const {
    return m_role_arn;
}
void OAIDescribeCompilationJobResponse::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIDescribeCompilationJobResponse::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

OAIDescribeCompilationJobResponse_InputConfig OAIDescribeCompilationJobResponse::getInputConfig() const {
    return m_input_config;
}
void OAIDescribeCompilationJobResponse::setInputConfig(const OAIDescribeCompilationJobResponse_InputConfig &input_config) {
    m_input_config = input_config;
    m_input_config_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_input_config_Set() const{
    return m_input_config_isSet;
}

bool OAIDescribeCompilationJobResponse::is_input_config_Valid() const{
    return m_input_config_isValid;
}

OAIDescribeCompilationJobResponse_OutputConfig OAIDescribeCompilationJobResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIDescribeCompilationJobResponse::setOutputConfig(const OAIDescribeCompilationJobResponse_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIDescribeCompilationJobResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

OAICreateCompilationJobRequest_VpcConfig OAIDescribeCompilationJobResponse::getVpcConfig() const {
    return m_vpc_config;
}
void OAIDescribeCompilationJobResponse::setVpcConfig(const OAICreateCompilationJobRequest_VpcConfig &vpc_config) {
    m_vpc_config = vpc_config;
    m_vpc_config_isSet = true;
}

bool OAIDescribeCompilationJobResponse::is_vpc_config_Set() const{
    return m_vpc_config_isSet;
}

bool OAIDescribeCompilationJobResponse::is_vpc_config_Valid() const{
    return m_vpc_config_isValid;
}

bool OAIDescribeCompilationJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_compilation_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compilation_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compilation_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_compilation_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compilation_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stopping_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inference_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_package_version_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_artifacts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_digests.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeCompilationJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_compilation_job_name_isValid && m_compilation_job_arn_isValid && m_compilation_job_status_isValid && m_stopping_condition_isValid && m_creation_time_isValid && m_last_modified_time_isValid && m_failure_reason_isValid && m_model_artifacts_isValid && m_role_arn_isValid && m_input_config_isValid && m_output_config_isValid && true;
}

} // namespace OpenAPI
