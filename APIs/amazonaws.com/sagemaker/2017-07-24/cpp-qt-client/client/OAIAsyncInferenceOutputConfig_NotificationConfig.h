/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsyncInferenceOutputConfig_NotificationConfig.h
 *
 * 
 */

#ifndef OAIAsyncInferenceOutputConfig_NotificationConfig_H
#define OAIAsyncInferenceOutputConfig_NotificationConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAsyncInferenceOutputConfig_NotificationConfig : public OAIObject {
public:
    OAIAsyncInferenceOutputConfig_NotificationConfig();
    OAIAsyncInferenceOutputConfig_NotificationConfig(QString json);
    ~OAIAsyncInferenceOutputConfig_NotificationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSuccessTopic() const;
    void setSuccessTopic(const QString &success_topic);
    bool is_success_topic_Set() const;
    bool is_success_topic_Valid() const;

    QString getErrorTopic() const;
    void setErrorTopic(const QString &error_topic);
    bool is_error_topic_Set() const;
    bool is_error_topic_Valid() const;

    QList getIncludeInferenceResponseIn() const;
    void setIncludeInferenceResponseIn(const QList &include_inference_response_in);
    bool is_include_inference_response_in_Set() const;
    bool is_include_inference_response_in_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_success_topic;
    bool m_success_topic_isSet;
    bool m_success_topic_isValid;

    QString m_error_topic;
    bool m_error_topic_isSet;
    bool m_error_topic_isValid;

    QList m_include_inference_response_in;
    bool m_include_inference_response_in_isSet;
    bool m_include_inference_response_in_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsyncInferenceOutputConfig_NotificationConfig)

#endif // OAIAsyncInferenceOutputConfig_NotificationConfig_H
