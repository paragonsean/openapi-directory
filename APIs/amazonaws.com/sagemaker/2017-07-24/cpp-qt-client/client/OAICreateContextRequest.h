/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateContextRequest.h
 *
 * 
 */

#ifndef OAICreateContextRequest_H
#define OAICreateContextRequest_H

#include <QJsonObject>

#include "OAICreateContextRequest_Source.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateContextRequest_Source;

class OAICreateContextRequest : public OAIObject {
public:
    OAICreateContextRequest();
    OAICreateContextRequest(QString json);
    ~OAICreateContextRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContextName() const;
    void setContextName(const QString &context_name);
    bool is_context_name_Set() const;
    bool is_context_name_Valid() const;

    OAICreateContextRequest_Source getSource() const;
    void setSource(const OAICreateContextRequest_Source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getContextType() const;
    void setContextType(const QString &context_type);
    bool is_context_type_Set() const;
    bool is_context_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap getProperties() const;
    void setProperties(const QMap &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_context_name;
    bool m_context_name_isSet;
    bool m_context_name_isValid;

    OAICreateContextRequest_Source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_context_type;
    bool m_context_type_isSet;
    bool m_context_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateContextRequest)

#endif // OAICreateContextRequest_H
