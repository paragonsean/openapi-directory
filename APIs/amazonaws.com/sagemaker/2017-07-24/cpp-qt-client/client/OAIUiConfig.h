/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUiConfig.h
 *
 * &lt;p&gt;Provided configuration information for the worker UI for a labeling job. Provide either &lt;code&gt;HumanTaskUiArn&lt;/code&gt; or &lt;code&gt;UiTemplateS3Uri&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For named entity recognition, 3D point cloud and video frame labeling jobs, use &lt;code&gt;HumanTaskUiArn&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For all other Ground Truth built-in task types and custom task types, use &lt;code&gt;UiTemplateS3Uri&lt;/code&gt; to specify the location of a worker task template in Amazon S3.&lt;/p&gt;
 */

#ifndef OAIUiConfig_H
#define OAIUiConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUiConfig : public OAIObject {
public:
    OAIUiConfig();
    OAIUiConfig(QString json);
    ~OAIUiConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUiTemplateS3Uri() const;
    void setUiTemplateS3Uri(const QString &ui_template_s3_uri);
    bool is_ui_template_s3_uri_Set() const;
    bool is_ui_template_s3_uri_Valid() const;

    QString getHumanTaskUiArn() const;
    void setHumanTaskUiArn(const QString &human_task_ui_arn);
    bool is_human_task_ui_arn_Set() const;
    bool is_human_task_ui_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ui_template_s3_uri;
    bool m_ui_template_s3_uri_isSet;
    bool m_ui_template_s3_uri_isValid;

    QString m_human_task_ui_arn;
    bool m_human_task_ui_arn_isSet;
    bool m_human_task_ui_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUiConfig)

#endif // OAIUiConfig_H
