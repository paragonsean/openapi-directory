/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAutoMLJobRequest.h
 *
 * 
 */

#ifndef OAICreateAutoMLJobRequest_H
#define OAICreateAutoMLJobRequest_H

#include <QJsonObject>

#include "OAICreateAutoMLJobRequest_AutoMLJobConfig.h"
#include "OAICreateAutoMLJobRequest_AutoMLJobObjective.h"
#include "OAICreateAutoMLJobRequest_ModelDeployConfig.h"
#include "OAICreateAutoMLJobRequest_OutputDataConfig.h"
#include "OAIProblemType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAutoMLJobRequest_OutputDataConfig;
class OAICreateAutoMLJobRequest_AutoMLJobObjective;
class OAICreateAutoMLJobRequest_AutoMLJobConfig;
class OAICreateAutoMLJobRequest_ModelDeployConfig;

class OAICreateAutoMLJobRequest : public OAIObject {
public:
    OAICreateAutoMLJobRequest();
    OAICreateAutoMLJobRequest(QString json);
    ~OAICreateAutoMLJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutoMlJobName() const;
    void setAutoMlJobName(const QString &auto_ml_job_name);
    bool is_auto_ml_job_name_Set() const;
    bool is_auto_ml_job_name_Valid() const;

    QList getInputDataConfig() const;
    void setInputDataConfig(const QList &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAICreateAutoMLJobRequest_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAICreateAutoMLJobRequest_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    OAIProblemType getProblemType() const;
    void setProblemType(const OAIProblemType &problem_type);
    bool is_problem_type_Set() const;
    bool is_problem_type_Valid() const;

    OAICreateAutoMLJobRequest_AutoMLJobObjective getAutoMlJobObjective() const;
    void setAutoMlJobObjective(const OAICreateAutoMLJobRequest_AutoMLJobObjective &auto_ml_job_objective);
    bool is_auto_ml_job_objective_Set() const;
    bool is_auto_ml_job_objective_Valid() const;

    OAICreateAutoMLJobRequest_AutoMLJobConfig getAutoMlJobConfig() const;
    void setAutoMlJobConfig(const OAICreateAutoMLJobRequest_AutoMLJobConfig &auto_ml_job_config);
    bool is_auto_ml_job_config_Set() const;
    bool is_auto_ml_job_config_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    bool getGenerateCandidateDefinitionsOnly() const;
    void setGenerateCandidateDefinitionsOnly(const bool &generate_candidate_definitions_only);
    bool is_generate_candidate_definitions_only_Set() const;
    bool is_generate_candidate_definitions_only_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateAutoMLJobRequest_ModelDeployConfig getModelDeployConfig() const;
    void setModelDeployConfig(const OAICreateAutoMLJobRequest_ModelDeployConfig &model_deploy_config);
    bool is_model_deploy_config_Set() const;
    bool is_model_deploy_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auto_ml_job_name;
    bool m_auto_ml_job_name_isSet;
    bool m_auto_ml_job_name_isValid;

    QList m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAICreateAutoMLJobRequest_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    OAIProblemType m_problem_type;
    bool m_problem_type_isSet;
    bool m_problem_type_isValid;

    OAICreateAutoMLJobRequest_AutoMLJobObjective m_auto_ml_job_objective;
    bool m_auto_ml_job_objective_isSet;
    bool m_auto_ml_job_objective_isValid;

    OAICreateAutoMLJobRequest_AutoMLJobConfig m_auto_ml_job_config;
    bool m_auto_ml_job_config_isSet;
    bool m_auto_ml_job_config_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    bool m_generate_candidate_definitions_only;
    bool m_generate_candidate_definitions_only_isSet;
    bool m_generate_candidate_definitions_only_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateAutoMLJobRequest_ModelDeployConfig m_model_deploy_config;
    bool m_model_deploy_config_isSet;
    bool m_model_deploy_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAutoMLJobRequest)

#endif // OAICreateAutoMLJobRequest_H
