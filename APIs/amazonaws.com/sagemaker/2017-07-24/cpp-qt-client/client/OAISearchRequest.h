/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchRequest.h
 *
 * 
 */

#ifndef OAISearchRequest_H
#define OAISearchRequest_H

#include <QJsonObject>

#include "OAICrossAccountFilterOption.h"
#include "OAIResourceType.h"
#include "OAISearchRequest_SearchExpression.h"
#include "OAISearchSortOrder.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchRequest_SearchExpression;

class OAISearchRequest : public OAIObject {
public:
    OAISearchRequest();
    OAISearchRequest(QString json);
    ~OAISearchRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceType getResource() const;
    void setResource(const OAIResourceType &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    OAISearchRequest_SearchExpression getSearchExpression() const;
    void setSearchExpression(const OAISearchRequest_SearchExpression &search_expression);
    bool is_search_expression_Set() const;
    bool is_search_expression_Valid() const;

    QString getSortBy() const;
    void setSortBy(const QString &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    OAISearchSortOrder getSortOrder() const;
    void setSortOrder(const OAISearchSortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAICrossAccountFilterOption getCrossAccountFilterOption() const;
    void setCrossAccountFilterOption(const OAICrossAccountFilterOption &cross_account_filter_option);
    bool is_cross_account_filter_option_Set() const;
    bool is_cross_account_filter_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceType m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    OAISearchRequest_SearchExpression m_search_expression;
    bool m_search_expression_isSet;
    bool m_search_expression_isValid;

    QString m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    OAISearchSortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAICrossAccountFilterOption m_cross_account_filter_option;
    bool m_cross_account_filter_option_isSet;
    bool m_cross_account_filter_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchRequest)

#endif // OAISearchRequest_H
