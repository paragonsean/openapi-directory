/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfflineStoreConfig.h
 *
 * &lt;p&gt;The configuration of an &lt;code&gt;OfflineStore&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Provide an &lt;code&gt;OfflineStoreConfig&lt;/code&gt; in a request to &lt;code&gt;CreateFeatureGroup&lt;/code&gt; to create an &lt;code&gt;OfflineStore&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To encrypt an &lt;code&gt;OfflineStore&lt;/code&gt; using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or &lt;code&gt;KMSKeyId&lt;/code&gt;, in &lt;code&gt;S3StorageConfig&lt;/code&gt;.&lt;/p&gt;
 */

#ifndef OAIOfflineStoreConfig_H
#define OAIOfflineStoreConfig_H

#include <QJsonObject>

#include "OAIOfflineStoreConfig_DataCatalogConfig.h"
#include "OAIOfflineStoreConfig_S3StorageConfig.h"
#include "OAITableFormat.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOfflineStoreConfig_S3StorageConfig;
class OAIOfflineStoreConfig_DataCatalogConfig;

class OAIOfflineStoreConfig : public OAIObject {
public:
    OAIOfflineStoreConfig();
    OAIOfflineStoreConfig(QString json);
    ~OAIOfflineStoreConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOfflineStoreConfig_S3StorageConfig getS3StorageConfig() const;
    void setS3StorageConfig(const OAIOfflineStoreConfig_S3StorageConfig &s3_storage_config);
    bool is_s3_storage_config_Set() const;
    bool is_s3_storage_config_Valid() const;

    bool getDisableGlueTableCreation() const;
    void setDisableGlueTableCreation(const bool &disable_glue_table_creation);
    bool is_disable_glue_table_creation_Set() const;
    bool is_disable_glue_table_creation_Valid() const;

    OAIOfflineStoreConfig_DataCatalogConfig getDataCatalogConfig() const;
    void setDataCatalogConfig(const OAIOfflineStoreConfig_DataCatalogConfig &data_catalog_config);
    bool is_data_catalog_config_Set() const;
    bool is_data_catalog_config_Valid() const;

    OAITableFormat getTableFormat() const;
    void setTableFormat(const OAITableFormat &table_format);
    bool is_table_format_Set() const;
    bool is_table_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOfflineStoreConfig_S3StorageConfig m_s3_storage_config;
    bool m_s3_storage_config_isSet;
    bool m_s3_storage_config_isValid;

    bool m_disable_glue_table_creation;
    bool m_disable_glue_table_creation_isSet;
    bool m_disable_glue_table_creation_isValid;

    OAIOfflineStoreConfig_DataCatalogConfig m_data_catalog_config;
    bool m_data_catalog_config_isSet;
    bool m_data_catalog_config_isValid;

    OAITableFormat m_table_format;
    bool m_table_format_isSet;
    bool m_table_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfflineStoreConfig)

#endif // OAIOfflineStoreConfig_H
