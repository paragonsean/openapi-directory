/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransformInstanceType.h
 *
 * 
 */

#ifndef OAITransformInstanceType_H
#define OAITransformInstanceType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransformInstanceType : public OAIEnum {
public:
    OAITransformInstanceType();
    OAITransformInstanceType(QString json);
    ~OAITransformInstanceType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAITransformInstanceType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        M4_XLARGE, 
        M4_2XLARGE, 
        M4_4XLARGE, 
        M4_10XLARGE, 
        M4_16XLARGE, 
        C4_XLARGE, 
        C4_2XLARGE, 
        C4_4XLARGE, 
        C4_8XLARGE, 
        P2_XLARGE, 
        P2_8XLARGE, 
        P2_16XLARGE, 
        P3_2XLARGE, 
        P3_8XLARGE, 
        P3_16XLARGE, 
        C5_XLARGE, 
        C5_2XLARGE, 
        C5_4XLARGE, 
        C5_9XLARGE, 
        C5_18XLARGE, 
        M5_LARGE, 
        M5_XLARGE, 
        M5_2XLARGE, 
        M5_4XLARGE, 
        M5_12XLARGE, 
        M5_24XLARGE, 
        G4DN_XLARGE, 
        G4DN_2XLARGE, 
        G4DN_4XLARGE, 
        G4DN_8XLARGE, 
        G4DN_12XLARGE, 
        G4DN_16XLARGE
    };
    OAITransformInstanceType::eOAITransformInstanceType getValue() const;
    void setValue(const OAITransformInstanceType::eOAITransformInstanceType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAITransformInstanceType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransformInstanceType)

#endif // OAITransformInstanceType_H
