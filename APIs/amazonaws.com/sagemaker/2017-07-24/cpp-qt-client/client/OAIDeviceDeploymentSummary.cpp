/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceDeploymentSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceDeploymentSummary::OAIDeviceDeploymentSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceDeploymentSummary::OAIDeviceDeploymentSummary() {
    this->initializeModel();
}

OAIDeviceDeploymentSummary::~OAIDeviceDeploymentSummary() {}

void OAIDeviceDeploymentSummary::initializeModel() {

    m_edge_deployment_plan_arn_isSet = false;
    m_edge_deployment_plan_arn_isValid = false;

    m_edge_deployment_plan_name_isSet = false;
    m_edge_deployment_plan_name_isValid = false;

    m_stage_name_isSet = false;
    m_stage_name_isValid = false;

    m_deployed_stage_name_isSet = false;
    m_deployed_stage_name_isValid = false;

    m_device_fleet_name_isSet = false;
    m_device_fleet_name_isValid = false;

    m_device_name_isSet = false;
    m_device_name_isValid = false;

    m_device_arn_isSet = false;
    m_device_arn_isValid = false;

    m_device_deployment_status_isSet = false;
    m_device_deployment_status_isValid = false;

    m_device_deployment_status_message_isSet = false;
    m_device_deployment_status_message_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_deployment_start_time_isSet = false;
    m_deployment_start_time_isValid = false;
}

void OAIDeviceDeploymentSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeviceDeploymentSummary::fromJsonObject(QJsonObject json) {

    m_edge_deployment_plan_arn_isValid = ::OpenAPI::fromJsonValue(m_edge_deployment_plan_arn, json[QString("EdgeDeploymentPlanArn")]);
    m_edge_deployment_plan_arn_isSet = !json[QString("EdgeDeploymentPlanArn")].isNull() && m_edge_deployment_plan_arn_isValid;

    m_edge_deployment_plan_name_isValid = ::OpenAPI::fromJsonValue(m_edge_deployment_plan_name, json[QString("EdgeDeploymentPlanName")]);
    m_edge_deployment_plan_name_isSet = !json[QString("EdgeDeploymentPlanName")].isNull() && m_edge_deployment_plan_name_isValid;

    m_stage_name_isValid = ::OpenAPI::fromJsonValue(m_stage_name, json[QString("StageName")]);
    m_stage_name_isSet = !json[QString("StageName")].isNull() && m_stage_name_isValid;

    m_deployed_stage_name_isValid = ::OpenAPI::fromJsonValue(m_deployed_stage_name, json[QString("DeployedStageName")]);
    m_deployed_stage_name_isSet = !json[QString("DeployedStageName")].isNull() && m_deployed_stage_name_isValid;

    m_device_fleet_name_isValid = ::OpenAPI::fromJsonValue(m_device_fleet_name, json[QString("DeviceFleetName")]);
    m_device_fleet_name_isSet = !json[QString("DeviceFleetName")].isNull() && m_device_fleet_name_isValid;

    m_device_name_isValid = ::OpenAPI::fromJsonValue(m_device_name, json[QString("DeviceName")]);
    m_device_name_isSet = !json[QString("DeviceName")].isNull() && m_device_name_isValid;

    m_device_arn_isValid = ::OpenAPI::fromJsonValue(m_device_arn, json[QString("DeviceArn")]);
    m_device_arn_isSet = !json[QString("DeviceArn")].isNull() && m_device_arn_isValid;

    m_device_deployment_status_isValid = ::OpenAPI::fromJsonValue(m_device_deployment_status, json[QString("DeviceDeploymentStatus")]);
    m_device_deployment_status_isSet = !json[QString("DeviceDeploymentStatus")].isNull() && m_device_deployment_status_isValid;

    m_device_deployment_status_message_isValid = ::OpenAPI::fromJsonValue(m_device_deployment_status_message, json[QString("DeviceDeploymentStatusMessage")]);
    m_device_deployment_status_message_isSet = !json[QString("DeviceDeploymentStatusMessage")].isNull() && m_device_deployment_status_message_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_deployment_start_time_isValid = ::OpenAPI::fromJsonValue(m_deployment_start_time, json[QString("DeploymentStartTime")]);
    m_deployment_start_time_isSet = !json[QString("DeploymentStartTime")].isNull() && m_deployment_start_time_isValid;
}

QString OAIDeviceDeploymentSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeviceDeploymentSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_edge_deployment_plan_arn_isSet) {
        obj.insert(QString("EdgeDeploymentPlanArn"), ::OpenAPI::toJsonValue(m_edge_deployment_plan_arn));
    }
    if (m_edge_deployment_plan_name_isSet) {
        obj.insert(QString("EdgeDeploymentPlanName"), ::OpenAPI::toJsonValue(m_edge_deployment_plan_name));
    }
    if (m_stage_name_isSet) {
        obj.insert(QString("StageName"), ::OpenAPI::toJsonValue(m_stage_name));
    }
    if (m_deployed_stage_name_isSet) {
        obj.insert(QString("DeployedStageName"), ::OpenAPI::toJsonValue(m_deployed_stage_name));
    }
    if (m_device_fleet_name_isSet) {
        obj.insert(QString("DeviceFleetName"), ::OpenAPI::toJsonValue(m_device_fleet_name));
    }
    if (m_device_name_isSet) {
        obj.insert(QString("DeviceName"), ::OpenAPI::toJsonValue(m_device_name));
    }
    if (m_device_arn_isSet) {
        obj.insert(QString("DeviceArn"), ::OpenAPI::toJsonValue(m_device_arn));
    }
    if (m_device_deployment_status.isSet()) {
        obj.insert(QString("DeviceDeploymentStatus"), ::OpenAPI::toJsonValue(m_device_deployment_status));
    }
    if (m_device_deployment_status_message_isSet) {
        obj.insert(QString("DeviceDeploymentStatusMessage"), ::OpenAPI::toJsonValue(m_device_deployment_status_message));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_deployment_start_time_isSet) {
        obj.insert(QString("DeploymentStartTime"), ::OpenAPI::toJsonValue(m_deployment_start_time));
    }
    return obj;
}

QString OAIDeviceDeploymentSummary::getEdgeDeploymentPlanArn() const {
    return m_edge_deployment_plan_arn;
}
void OAIDeviceDeploymentSummary::setEdgeDeploymentPlanArn(const QString &edge_deployment_plan_arn) {
    m_edge_deployment_plan_arn = edge_deployment_plan_arn;
    m_edge_deployment_plan_arn_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_edge_deployment_plan_arn_Set() const{
    return m_edge_deployment_plan_arn_isSet;
}

bool OAIDeviceDeploymentSummary::is_edge_deployment_plan_arn_Valid() const{
    return m_edge_deployment_plan_arn_isValid;
}

QString OAIDeviceDeploymentSummary::getEdgeDeploymentPlanName() const {
    return m_edge_deployment_plan_name;
}
void OAIDeviceDeploymentSummary::setEdgeDeploymentPlanName(const QString &edge_deployment_plan_name) {
    m_edge_deployment_plan_name = edge_deployment_plan_name;
    m_edge_deployment_plan_name_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_edge_deployment_plan_name_Set() const{
    return m_edge_deployment_plan_name_isSet;
}

bool OAIDeviceDeploymentSummary::is_edge_deployment_plan_name_Valid() const{
    return m_edge_deployment_plan_name_isValid;
}

QString OAIDeviceDeploymentSummary::getStageName() const {
    return m_stage_name;
}
void OAIDeviceDeploymentSummary::setStageName(const QString &stage_name) {
    m_stage_name = stage_name;
    m_stage_name_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_stage_name_Set() const{
    return m_stage_name_isSet;
}

bool OAIDeviceDeploymentSummary::is_stage_name_Valid() const{
    return m_stage_name_isValid;
}

QString OAIDeviceDeploymentSummary::getDeployedStageName() const {
    return m_deployed_stage_name;
}
void OAIDeviceDeploymentSummary::setDeployedStageName(const QString &deployed_stage_name) {
    m_deployed_stage_name = deployed_stage_name;
    m_deployed_stage_name_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_deployed_stage_name_Set() const{
    return m_deployed_stage_name_isSet;
}

bool OAIDeviceDeploymentSummary::is_deployed_stage_name_Valid() const{
    return m_deployed_stage_name_isValid;
}

QString OAIDeviceDeploymentSummary::getDeviceFleetName() const {
    return m_device_fleet_name;
}
void OAIDeviceDeploymentSummary::setDeviceFleetName(const QString &device_fleet_name) {
    m_device_fleet_name = device_fleet_name;
    m_device_fleet_name_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_device_fleet_name_Set() const{
    return m_device_fleet_name_isSet;
}

bool OAIDeviceDeploymentSummary::is_device_fleet_name_Valid() const{
    return m_device_fleet_name_isValid;
}

QString OAIDeviceDeploymentSummary::getDeviceName() const {
    return m_device_name;
}
void OAIDeviceDeploymentSummary::setDeviceName(const QString &device_name) {
    m_device_name = device_name;
    m_device_name_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_device_name_Set() const{
    return m_device_name_isSet;
}

bool OAIDeviceDeploymentSummary::is_device_name_Valid() const{
    return m_device_name_isValid;
}

QString OAIDeviceDeploymentSummary::getDeviceArn() const {
    return m_device_arn;
}
void OAIDeviceDeploymentSummary::setDeviceArn(const QString &device_arn) {
    m_device_arn = device_arn;
    m_device_arn_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_device_arn_Set() const{
    return m_device_arn_isSet;
}

bool OAIDeviceDeploymentSummary::is_device_arn_Valid() const{
    return m_device_arn_isValid;
}

OAIDeviceDeploymentStatus OAIDeviceDeploymentSummary::getDeviceDeploymentStatus() const {
    return m_device_deployment_status;
}
void OAIDeviceDeploymentSummary::setDeviceDeploymentStatus(const OAIDeviceDeploymentStatus &device_deployment_status) {
    m_device_deployment_status = device_deployment_status;
    m_device_deployment_status_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_device_deployment_status_Set() const{
    return m_device_deployment_status_isSet;
}

bool OAIDeviceDeploymentSummary::is_device_deployment_status_Valid() const{
    return m_device_deployment_status_isValid;
}

QString OAIDeviceDeploymentSummary::getDeviceDeploymentStatusMessage() const {
    return m_device_deployment_status_message;
}
void OAIDeviceDeploymentSummary::setDeviceDeploymentStatusMessage(const QString &device_deployment_status_message) {
    m_device_deployment_status_message = device_deployment_status_message;
    m_device_deployment_status_message_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_device_deployment_status_message_Set() const{
    return m_device_deployment_status_message_isSet;
}

bool OAIDeviceDeploymentSummary::is_device_deployment_status_message_Valid() const{
    return m_device_deployment_status_message_isValid;
}

QString OAIDeviceDeploymentSummary::getDescription() const {
    return m_description;
}
void OAIDeviceDeploymentSummary::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDeviceDeploymentSummary::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIDeviceDeploymentSummary::getDeploymentStartTime() const {
    return m_deployment_start_time;
}
void OAIDeviceDeploymentSummary::setDeploymentStartTime(const QDateTime &deployment_start_time) {
    m_deployment_start_time = deployment_start_time;
    m_deployment_start_time_isSet = true;
}

bool OAIDeviceDeploymentSummary::is_deployment_start_time_Set() const{
    return m_deployment_start_time_isSet;
}

bool OAIDeviceDeploymentSummary::is_deployment_start_time_Valid() const{
    return m_deployment_start_time_isValid;
}

bool OAIDeviceDeploymentSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_edge_deployment_plan_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_deployment_plan_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_stage_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_fleet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_deployment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_deployment_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeviceDeploymentSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_edge_deployment_plan_arn_isValid && m_edge_deployment_plan_name_isValid && m_stage_name_isValid && m_device_name_isValid && m_device_arn_isValid && true;
}

} // namespace OpenAPI
