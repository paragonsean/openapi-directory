/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperParameterTuningResourceConfig.h
 *
 * &lt;p&gt;The configuration of resources, including compute instances and storage volumes for use in training jobs launched by hyperparameter tuning jobs. &lt;code&gt;HyperParameterTuningResourceConfig&lt;/code&gt; is similar to &lt;code&gt;ResourceConfig&lt;/code&gt;, but has the additional &lt;code&gt;InstanceConfigs&lt;/code&gt; and &lt;code&gt;AllocationStrategy&lt;/code&gt; fields to allow for flexible instance management. Specify one or more instance types, count, and the allocation strategy for instance selection.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;HyperParameterTuningResourceConfig&lt;/code&gt; supports the capabilities of &lt;code&gt;ResourceConfig&lt;/code&gt; with the exception of &lt;code&gt;KeepAlivePeriodInSeconds&lt;/code&gt;. Hyperparameter tuning jobs use warm pools by default, which reuse clusters between training jobs.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIHyperParameterTuningResourceConfig_H
#define OAIHyperParameterTuningResourceConfig_H

#include <QJsonObject>

#include "OAIHyperParameterTuningAllocationStrategy.h"
#include "OAITrainingInstanceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperParameterTuningResourceConfig : public OAIObject {
public:
    OAIHyperParameterTuningResourceConfig();
    OAIHyperParameterTuningResourceConfig(QString json);
    ~OAIHyperParameterTuningResourceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITrainingInstanceType getInstanceType() const;
    void setInstanceType(const OAITrainingInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    qint32 getInstanceCount() const;
    void setInstanceCount(const qint32 &instance_count);
    bool is_instance_count_Set() const;
    bool is_instance_count_Valid() const;

    qint32 getVolumeSizeInGb() const;
    void setVolumeSizeInGb(const qint32 &volume_size_in_gb);
    bool is_volume_size_in_gb_Set() const;
    bool is_volume_size_in_gb_Valid() const;

    QString getVolumeKmsKeyId() const;
    void setVolumeKmsKeyId(const QString &volume_kms_key_id);
    bool is_volume_kms_key_id_Set() const;
    bool is_volume_kms_key_id_Valid() const;

    OAIHyperParameterTuningAllocationStrategy getAllocationStrategy() const;
    void setAllocationStrategy(const OAIHyperParameterTuningAllocationStrategy &allocation_strategy);
    bool is_allocation_strategy_Set() const;
    bool is_allocation_strategy_Valid() const;

    QList getInstanceConfigs() const;
    void setInstanceConfigs(const QList &instance_configs);
    bool is_instance_configs_Set() const;
    bool is_instance_configs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITrainingInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    qint32 m_instance_count;
    bool m_instance_count_isSet;
    bool m_instance_count_isValid;

    qint32 m_volume_size_in_gb;
    bool m_volume_size_in_gb_isSet;
    bool m_volume_size_in_gb_isValid;

    QString m_volume_kms_key_id;
    bool m_volume_kms_key_id_isSet;
    bool m_volume_kms_key_id_isValid;

    OAIHyperParameterTuningAllocationStrategy m_allocation_strategy;
    bool m_allocation_strategy_isSet;
    bool m_allocation_strategy_isValid;

    QList m_instance_configs;
    bool m_instance_configs_isSet;
    bool m_instance_configs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperParameterTuningResourceConfig)

#endif // OAIHyperParameterTuningResourceConfig_H
