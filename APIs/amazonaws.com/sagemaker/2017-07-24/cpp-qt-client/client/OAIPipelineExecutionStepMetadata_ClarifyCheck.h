/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipelineExecutionStepMetadata_ClarifyCheck.h
 *
 * 
 */

#ifndef OAIPipelineExecutionStepMetadata_ClarifyCheck_H
#define OAIPipelineExecutionStepMetadata_ClarifyCheck_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPipelineExecutionStepMetadata_ClarifyCheck : public OAIObject {
public:
    OAIPipelineExecutionStepMetadata_ClarifyCheck();
    OAIPipelineExecutionStepMetadata_ClarifyCheck(QString json);
    ~OAIPipelineExecutionStepMetadata_ClarifyCheck() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckType() const;
    void setCheckType(const QString &check_type);
    bool is_check_type_Set() const;
    bool is_check_type_Valid() const;

    QString getBaselineUsedForDriftCheckConstraints() const;
    void setBaselineUsedForDriftCheckConstraints(const QString &baseline_used_for_drift_check_constraints);
    bool is_baseline_used_for_drift_check_constraints_Set() const;
    bool is_baseline_used_for_drift_check_constraints_Valid() const;

    QString getCalculatedBaselineConstraints() const;
    void setCalculatedBaselineConstraints(const QString &calculated_baseline_constraints);
    bool is_calculated_baseline_constraints_Set() const;
    bool is_calculated_baseline_constraints_Valid() const;

    QString getModelPackageGroupName() const;
    void setModelPackageGroupName(const QString &model_package_group_name);
    bool is_model_package_group_name_Set() const;
    bool is_model_package_group_name_Valid() const;

    QString getViolationReport() const;
    void setViolationReport(const QString &violation_report);
    bool is_violation_report_Set() const;
    bool is_violation_report_Valid() const;

    QString getCheckJobArn() const;
    void setCheckJobArn(const QString &check_job_arn);
    bool is_check_job_arn_Set() const;
    bool is_check_job_arn_Valid() const;

    bool getSkipCheck() const;
    void setSkipCheck(const bool &skip_check);
    bool is_skip_check_Set() const;
    bool is_skip_check_Valid() const;

    bool getRegisterNewBaseline() const;
    void setRegisterNewBaseline(const bool &register_new_baseline);
    bool is_register_new_baseline_Set() const;
    bool is_register_new_baseline_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_check_type;
    bool m_check_type_isSet;
    bool m_check_type_isValid;

    QString m_baseline_used_for_drift_check_constraints;
    bool m_baseline_used_for_drift_check_constraints_isSet;
    bool m_baseline_used_for_drift_check_constraints_isValid;

    QString m_calculated_baseline_constraints;
    bool m_calculated_baseline_constraints_isSet;
    bool m_calculated_baseline_constraints_isValid;

    QString m_model_package_group_name;
    bool m_model_package_group_name_isSet;
    bool m_model_package_group_name_isValid;

    QString m_violation_report;
    bool m_violation_report_isSet;
    bool m_violation_report_isValid;

    QString m_check_job_arn;
    bool m_check_job_arn_isSet;
    bool m_check_job_arn_isValid;

    bool m_skip_check;
    bool m_skip_check_isSet;
    bool m_skip_check_isValid;

    bool m_register_new_baseline;
    bool m_register_new_baseline_isSet;
    bool m_register_new_baseline_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipelineExecutionStepMetadata_ClarifyCheck)

#endif // OAIPipelineExecutionStepMetadata_ClarifyCheck_H
