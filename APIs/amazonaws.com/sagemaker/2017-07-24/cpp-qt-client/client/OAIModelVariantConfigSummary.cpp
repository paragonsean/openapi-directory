/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModelVariantConfigSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModelVariantConfigSummary::OAIModelVariantConfigSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModelVariantConfigSummary::OAIModelVariantConfigSummary() {
    this->initializeModel();
}

OAIModelVariantConfigSummary::~OAIModelVariantConfigSummary() {}

void OAIModelVariantConfigSummary::initializeModel() {

    m_model_name_isSet = false;
    m_model_name_isValid = false;

    m_variant_name_isSet = false;
    m_variant_name_isValid = false;

    m_infrastructure_config_isSet = false;
    m_infrastructure_config_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIModelVariantConfigSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModelVariantConfigSummary::fromJsonObject(QJsonObject json) {

    m_model_name_isValid = ::OpenAPI::fromJsonValue(m_model_name, json[QString("ModelName")]);
    m_model_name_isSet = !json[QString("ModelName")].isNull() && m_model_name_isValid;

    m_variant_name_isValid = ::OpenAPI::fromJsonValue(m_variant_name, json[QString("VariantName")]);
    m_variant_name_isSet = !json[QString("VariantName")].isNull() && m_variant_name_isValid;

    m_infrastructure_config_isValid = ::OpenAPI::fromJsonValue(m_infrastructure_config, json[QString("InfrastructureConfig")]);
    m_infrastructure_config_isSet = !json[QString("InfrastructureConfig")].isNull() && m_infrastructure_config_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIModelVariantConfigSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModelVariantConfigSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_model_name_isSet) {
        obj.insert(QString("ModelName"), ::OpenAPI::toJsonValue(m_model_name));
    }
    if (m_variant_name_isSet) {
        obj.insert(QString("VariantName"), ::OpenAPI::toJsonValue(m_variant_name));
    }
    if (m_infrastructure_config.isSet()) {
        obj.insert(QString("InfrastructureConfig"), ::OpenAPI::toJsonValue(m_infrastructure_config));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIModelVariantConfigSummary::getModelName() const {
    return m_model_name;
}
void OAIModelVariantConfigSummary::setModelName(const QString &model_name) {
    m_model_name = model_name;
    m_model_name_isSet = true;
}

bool OAIModelVariantConfigSummary::is_model_name_Set() const{
    return m_model_name_isSet;
}

bool OAIModelVariantConfigSummary::is_model_name_Valid() const{
    return m_model_name_isValid;
}

QString OAIModelVariantConfigSummary::getVariantName() const {
    return m_variant_name;
}
void OAIModelVariantConfigSummary::setVariantName(const QString &variant_name) {
    m_variant_name = variant_name;
    m_variant_name_isSet = true;
}

bool OAIModelVariantConfigSummary::is_variant_name_Set() const{
    return m_variant_name_isSet;
}

bool OAIModelVariantConfigSummary::is_variant_name_Valid() const{
    return m_variant_name_isValid;
}

OAIModelVariantConfigSummary_InfrastructureConfig OAIModelVariantConfigSummary::getInfrastructureConfig() const {
    return m_infrastructure_config;
}
void OAIModelVariantConfigSummary::setInfrastructureConfig(const OAIModelVariantConfigSummary_InfrastructureConfig &infrastructure_config) {
    m_infrastructure_config = infrastructure_config;
    m_infrastructure_config_isSet = true;
}

bool OAIModelVariantConfigSummary::is_infrastructure_config_Set() const{
    return m_infrastructure_config_isSet;
}

bool OAIModelVariantConfigSummary::is_infrastructure_config_Valid() const{
    return m_infrastructure_config_isValid;
}

OAIModelVariantStatus OAIModelVariantConfigSummary::getStatus() const {
    return m_status;
}
void OAIModelVariantConfigSummary::setStatus(const OAIModelVariantStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIModelVariantConfigSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIModelVariantConfigSummary::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIModelVariantConfigSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variant_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_infrastructure_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModelVariantConfigSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_model_name_isValid && m_variant_name_isValid && m_infrastructure_config_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
