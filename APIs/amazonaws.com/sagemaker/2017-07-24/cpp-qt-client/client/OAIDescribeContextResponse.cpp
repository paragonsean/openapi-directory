/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeContextResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeContextResponse::OAIDescribeContextResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeContextResponse::OAIDescribeContextResponse() {
    this->initializeModel();
}

OAIDescribeContextResponse::~OAIDescribeContextResponse() {}

void OAIDescribeContextResponse::initializeModel() {

    m_context_name_isSet = false;
    m_context_name_isValid = false;

    m_context_arn_isSet = false;
    m_context_arn_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_context_type_isSet = false;
    m_context_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_lineage_group_arn_isSet = false;
    m_lineage_group_arn_isValid = false;
}

void OAIDescribeContextResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeContextResponse::fromJsonObject(QJsonObject json) {

    m_context_name_isValid = ::OpenAPI::fromJsonValue(m_context_name, json[QString("ContextName")]);
    m_context_name_isSet = !json[QString("ContextName")].isNull() && m_context_name_isValid;

    m_context_arn_isValid = ::OpenAPI::fromJsonValue(m_context_arn, json[QString("ContextArn")]);
    m_context_arn_isSet = !json[QString("ContextArn")].isNull() && m_context_arn_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_context_type_isValid = ::OpenAPI::fromJsonValue(m_context_type, json[QString("ContextType")]);
    m_context_type_isSet = !json[QString("ContextType")].isNull() && m_context_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("Properties")]);
    m_properties_isSet = !json[QString("Properties")].isNull() && m_properties_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_lineage_group_arn_isValid = ::OpenAPI::fromJsonValue(m_lineage_group_arn, json[QString("LineageGroupArn")]);
    m_lineage_group_arn_isSet = !json[QString("LineageGroupArn")].isNull() && m_lineage_group_arn_isValid;
}

QString OAIDescribeContextResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeContextResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_context_name_isSet) {
        obj.insert(QString("ContextName"), ::OpenAPI::toJsonValue(m_context_name));
    }
    if (m_context_arn_isSet) {
        obj.insert(QString("ContextArn"), ::OpenAPI::toJsonValue(m_context_arn));
    }
    if (m_source.isSet()) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_context_type_isSet) {
        obj.insert(QString("ContextType"), ::OpenAPI::toJsonValue(m_context_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("Properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_modified_by.isSet()) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_lineage_group_arn_isSet) {
        obj.insert(QString("LineageGroupArn"), ::OpenAPI::toJsonValue(m_lineage_group_arn));
    }
    return obj;
}

QString OAIDescribeContextResponse::getContextName() const {
    return m_context_name;
}
void OAIDescribeContextResponse::setContextName(const QString &context_name) {
    m_context_name = context_name;
    m_context_name_isSet = true;
}

bool OAIDescribeContextResponse::is_context_name_Set() const{
    return m_context_name_isSet;
}

bool OAIDescribeContextResponse::is_context_name_Valid() const{
    return m_context_name_isValid;
}

QString OAIDescribeContextResponse::getContextArn() const {
    return m_context_arn;
}
void OAIDescribeContextResponse::setContextArn(const QString &context_arn) {
    m_context_arn = context_arn;
    m_context_arn_isSet = true;
}

bool OAIDescribeContextResponse::is_context_arn_Set() const{
    return m_context_arn_isSet;
}

bool OAIDescribeContextResponse::is_context_arn_Valid() const{
    return m_context_arn_isValid;
}

OAIDescribeContextResponse_Source OAIDescribeContextResponse::getSource() const {
    return m_source;
}
void OAIDescribeContextResponse::setSource(const OAIDescribeContextResponse_Source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIDescribeContextResponse::is_source_Set() const{
    return m_source_isSet;
}

bool OAIDescribeContextResponse::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIDescribeContextResponse::getContextType() const {
    return m_context_type;
}
void OAIDescribeContextResponse::setContextType(const QString &context_type) {
    m_context_type = context_type;
    m_context_type_isSet = true;
}

bool OAIDescribeContextResponse::is_context_type_Set() const{
    return m_context_type_isSet;
}

bool OAIDescribeContextResponse::is_context_type_Valid() const{
    return m_context_type_isValid;
}

QString OAIDescribeContextResponse::getDescription() const {
    return m_description;
}
void OAIDescribeContextResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeContextResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeContextResponse::is_description_Valid() const{
    return m_description_isValid;
}

QMap OAIDescribeContextResponse::getProperties() const {
    return m_properties;
}
void OAIDescribeContextResponse::setProperties(const QMap &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIDescribeContextResponse::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIDescribeContextResponse::is_properties_Valid() const{
    return m_properties_isValid;
}

QDateTime OAIDescribeContextResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeContextResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeContextResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeContextResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIUserContext OAIDescribeContextResponse::getCreatedBy() const {
    return m_created_by;
}
void OAIDescribeContextResponse::setCreatedBy(const OAIUserContext &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIDescribeContextResponse::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIDescribeContextResponse::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIDescribeContextResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeContextResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeContextResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeContextResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIUserContext OAIDescribeContextResponse::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIDescribeContextResponse::setLastModifiedBy(const OAIUserContext &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIDescribeContextResponse::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIDescribeContextResponse::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

QString OAIDescribeContextResponse::getLineageGroupArn() const {
    return m_lineage_group_arn;
}
void OAIDescribeContextResponse::setLineageGroupArn(const QString &lineage_group_arn) {
    m_lineage_group_arn = lineage_group_arn;
    m_lineage_group_arn_isSet = true;
}

bool OAIDescribeContextResponse::is_lineage_group_arn_Set() const{
    return m_lineage_group_arn_isSet;
}

bool OAIDescribeContextResponse::is_lineage_group_arn_Valid() const{
    return m_lineage_group_arn_isValid;
}

bool OAIDescribeContextResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_context_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lineage_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeContextResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
