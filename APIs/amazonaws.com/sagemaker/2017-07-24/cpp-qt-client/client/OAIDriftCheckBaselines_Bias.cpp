/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDriftCheckBaselines_Bias.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDriftCheckBaselines_Bias::OAIDriftCheckBaselines_Bias(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDriftCheckBaselines_Bias::OAIDriftCheckBaselines_Bias() {
    this->initializeModel();
}

OAIDriftCheckBaselines_Bias::~OAIDriftCheckBaselines_Bias() {}

void OAIDriftCheckBaselines_Bias::initializeModel() {

    m_config_file_isSet = false;
    m_config_file_isValid = false;

    m_pre_training_constraints_isSet = false;
    m_pre_training_constraints_isValid = false;

    m_post_training_constraints_isSet = false;
    m_post_training_constraints_isValid = false;
}

void OAIDriftCheckBaselines_Bias::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDriftCheckBaselines_Bias::fromJsonObject(QJsonObject json) {

    m_config_file_isValid = ::OpenAPI::fromJsonValue(m_config_file, json[QString("ConfigFile")]);
    m_config_file_isSet = !json[QString("ConfigFile")].isNull() && m_config_file_isValid;

    m_pre_training_constraints_isValid = ::OpenAPI::fromJsonValue(m_pre_training_constraints, json[QString("PreTrainingConstraints")]);
    m_pre_training_constraints_isSet = !json[QString("PreTrainingConstraints")].isNull() && m_pre_training_constraints_isValid;

    m_post_training_constraints_isValid = ::OpenAPI::fromJsonValue(m_post_training_constraints, json[QString("PostTrainingConstraints")]);
    m_post_training_constraints_isSet = !json[QString("PostTrainingConstraints")].isNull() && m_post_training_constraints_isValid;
}

QString OAIDriftCheckBaselines_Bias::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDriftCheckBaselines_Bias::asJsonObject() const {
    QJsonObject obj;
    if (m_config_file.isSet()) {
        obj.insert(QString("ConfigFile"), ::OpenAPI::toJsonValue(m_config_file));
    }
    if (m_pre_training_constraints.isSet()) {
        obj.insert(QString("PreTrainingConstraints"), ::OpenAPI::toJsonValue(m_pre_training_constraints));
    }
    if (m_post_training_constraints.isSet()) {
        obj.insert(QString("PostTrainingConstraints"), ::OpenAPI::toJsonValue(m_post_training_constraints));
    }
    return obj;
}

OAIDriftCheckBias_ConfigFile OAIDriftCheckBaselines_Bias::getConfigFile() const {
    return m_config_file;
}
void OAIDriftCheckBaselines_Bias::setConfigFile(const OAIDriftCheckBias_ConfigFile &config_file) {
    m_config_file = config_file;
    m_config_file_isSet = true;
}

bool OAIDriftCheckBaselines_Bias::is_config_file_Set() const{
    return m_config_file_isSet;
}

bool OAIDriftCheckBaselines_Bias::is_config_file_Valid() const{
    return m_config_file_isValid;
}

OAIDriftCheckBias_PreTrainingConstraints OAIDriftCheckBaselines_Bias::getPreTrainingConstraints() const {
    return m_pre_training_constraints;
}
void OAIDriftCheckBaselines_Bias::setPreTrainingConstraints(const OAIDriftCheckBias_PreTrainingConstraints &pre_training_constraints) {
    m_pre_training_constraints = pre_training_constraints;
    m_pre_training_constraints_isSet = true;
}

bool OAIDriftCheckBaselines_Bias::is_pre_training_constraints_Set() const{
    return m_pre_training_constraints_isSet;
}

bool OAIDriftCheckBaselines_Bias::is_pre_training_constraints_Valid() const{
    return m_pre_training_constraints_isValid;
}

OAIDriftCheckBias_PostTrainingConstraints OAIDriftCheckBaselines_Bias::getPostTrainingConstraints() const {
    return m_post_training_constraints;
}
void OAIDriftCheckBaselines_Bias::setPostTrainingConstraints(const OAIDriftCheckBias_PostTrainingConstraints &post_training_constraints) {
    m_post_training_constraints = post_training_constraints;
    m_post_training_constraints_isSet = true;
}

bool OAIDriftCheckBaselines_Bias::is_post_training_constraints_Set() const{
    return m_post_training_constraints_isSet;
}

bool OAIDriftCheckBaselines_Bias::is_post_training_constraints_Valid() const{
    return m_post_training_constraints_isValid;
}

bool OAIDriftCheckBaselines_Bias::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_file.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_training_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_training_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDriftCheckBaselines_Bias::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
