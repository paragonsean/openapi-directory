/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICaptureContentTypeHeader.h
 *
 * Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
 */

#ifndef OAICaptureContentTypeHeader_H
#define OAICaptureContentTypeHeader_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICaptureContentTypeHeader : public OAIObject {
public:
    OAICaptureContentTypeHeader();
    OAICaptureContentTypeHeader(QString json);
    ~OAICaptureContentTypeHeader() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCsvContentTypes() const;
    void setCsvContentTypes(const QList &csv_content_types);
    bool is_csv_content_types_Set() const;
    bool is_csv_content_types_Valid() const;

    QList getJsonContentTypes() const;
    void setJsonContentTypes(const QList &json_content_types);
    bool is_json_content_types_Set() const;
    bool is_json_content_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_csv_content_types;
    bool m_csv_content_types_isSet;
    bool m_csv_content_types_isValid;

    QList m_json_content_types;
    bool m_json_content_types_isSet;
    bool m_json_content_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICaptureContentTypeHeader)

#endif // OAICaptureContentTypeHeader_H
