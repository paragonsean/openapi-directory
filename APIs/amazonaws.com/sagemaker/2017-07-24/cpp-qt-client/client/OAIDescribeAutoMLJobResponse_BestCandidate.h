/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAutoMLJobResponse_BestCandidate.h
 *
 * 
 */

#ifndef OAIDescribeAutoMLJobResponse_BestCandidate_H
#define OAIDescribeAutoMLJobResponse_BestCandidate_H

#include <QJsonObject>

#include "OAIAutoMLCandidate_CandidateProperties.h"
#include "OAICandidateStatus.h"
#include "OAIFinalAutoMLJobObjectiveMetric.h"
#include "OAIObjectiveStatus.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFinalAutoMLJobObjectiveMetric;
class OAIAutoMLCandidate_CandidateProperties;

class OAIDescribeAutoMLJobResponse_BestCandidate : public OAIObject {
public:
    OAIDescribeAutoMLJobResponse_BestCandidate();
    OAIDescribeAutoMLJobResponse_BestCandidate(QString json);
    ~OAIDescribeAutoMLJobResponse_BestCandidate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCandidateName() const;
    void setCandidateName(const QString &candidate_name);
    bool is_candidate_name_Set() const;
    bool is_candidate_name_Valid() const;

    OAIFinalAutoMLJobObjectiveMetric getFinalAutoMlJobObjectiveMetric() const;
    void setFinalAutoMlJobObjectiveMetric(const OAIFinalAutoMLJobObjectiveMetric &final_auto_ml_job_objective_metric);
    bool is_final_auto_ml_job_objective_metric_Set() const;
    bool is_final_auto_ml_job_objective_metric_Valid() const;

    OAIObjectiveStatus getObjectiveStatus() const;
    void setObjectiveStatus(const OAIObjectiveStatus &objective_status);
    bool is_objective_status_Set() const;
    bool is_objective_status_Valid() const;

    QList getCandidateSteps() const;
    void setCandidateSteps(const QList &candidate_steps);
    bool is_candidate_steps_Set() const;
    bool is_candidate_steps_Valid() const;

    OAICandidateStatus getCandidateStatus() const;
    void setCandidateStatus(const OAICandidateStatus &candidate_status);
    bool is_candidate_status_Set() const;
    bool is_candidate_status_Valid() const;

    QList getInferenceContainers() const;
    void setInferenceContainers(const QList &inference_containers);
    bool is_inference_containers_Set() const;
    bool is_inference_containers_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAIAutoMLCandidate_CandidateProperties getCandidateProperties() const;
    void setCandidateProperties(const OAIAutoMLCandidate_CandidateProperties &candidate_properties);
    bool is_candidate_properties_Set() const;
    bool is_candidate_properties_Valid() const;

    QMap getInferenceContainerDefinitions() const;
    void setInferenceContainerDefinitions(const QMap &inference_container_definitions);
    bool is_inference_container_definitions_Set() const;
    bool is_inference_container_definitions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_candidate_name;
    bool m_candidate_name_isSet;
    bool m_candidate_name_isValid;

    OAIFinalAutoMLJobObjectiveMetric m_final_auto_ml_job_objective_metric;
    bool m_final_auto_ml_job_objective_metric_isSet;
    bool m_final_auto_ml_job_objective_metric_isValid;

    OAIObjectiveStatus m_objective_status;
    bool m_objective_status_isSet;
    bool m_objective_status_isValid;

    QList m_candidate_steps;
    bool m_candidate_steps_isSet;
    bool m_candidate_steps_isValid;

    OAICandidateStatus m_candidate_status;
    bool m_candidate_status_isSet;
    bool m_candidate_status_isValid;

    QList m_inference_containers;
    bool m_inference_containers_isSet;
    bool m_inference_containers_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAIAutoMLCandidate_CandidateProperties m_candidate_properties;
    bool m_candidate_properties_isSet;
    bool m_candidate_properties_isValid;

    QMap m_inference_container_definitions;
    bool m_inference_container_definitions_isSet;
    bool m_inference_container_definitions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAutoMLJobResponse_BestCandidate)

#endif // OAIDescribeAutoMLJobResponse_BestCandidate_H
