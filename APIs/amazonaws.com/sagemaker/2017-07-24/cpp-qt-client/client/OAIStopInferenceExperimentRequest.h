/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStopInferenceExperimentRequest.h
 *
 * 
 */

#ifndef OAIStopInferenceExperimentRequest_H
#define OAIStopInferenceExperimentRequest_H

#include <QJsonObject>

#include "OAIInferenceExperimentStopDesiredState.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStopInferenceExperimentRequest : public OAIObject {
public:
    OAIStopInferenceExperimentRequest();
    OAIStopInferenceExperimentRequest(QString json);
    ~OAIStopInferenceExperimentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QMap getModelVariantActions() const;
    void setModelVariantActions(const QMap &model_variant_actions);
    bool is_model_variant_actions_Set() const;
    bool is_model_variant_actions_Valid() const;

    QList getDesiredModelVariants() const;
    void setDesiredModelVariants(const QList &desired_model_variants);
    bool is_desired_model_variants_Set() const;
    bool is_desired_model_variants_Valid() const;

    OAIInferenceExperimentStopDesiredState getDesiredState() const;
    void setDesiredState(const OAIInferenceExperimentStopDesiredState &desired_state);
    bool is_desired_state_Set() const;
    bool is_desired_state_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QMap m_model_variant_actions;
    bool m_model_variant_actions_isSet;
    bool m_model_variant_actions_isValid;

    QList m_desired_model_variants;
    bool m_desired_model_variants_isSet;
    bool m_desired_model_variants_isValid;

    OAIInferenceExperimentStopDesiredState m_desired_state;
    bool m_desired_state_isSet;
    bool m_desired_state_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStopInferenceExperimentRequest)

#endif // OAIStopInferenceExperimentRequest_H
