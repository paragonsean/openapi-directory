/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEdgePackagingJobsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEdgePackagingJobsRequest::OAIListEdgePackagingJobsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEdgePackagingJobsRequest::OAIListEdgePackagingJobsRequest() {
    this->initializeModel();
}

OAIListEdgePackagingJobsRequest::~OAIListEdgePackagingJobsRequest() {}

void OAIListEdgePackagingJobsRequest::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_creation_time_after_isSet = false;
    m_creation_time_after_isValid = false;

    m_creation_time_before_isSet = false;
    m_creation_time_before_isValid = false;

    m_last_modified_time_after_isSet = false;
    m_last_modified_time_after_isValid = false;

    m_last_modified_time_before_isSet = false;
    m_last_modified_time_before_isValid = false;

    m_name_contains_isSet = false;
    m_name_contains_isValid = false;

    m_model_name_contains_isSet = false;
    m_model_name_contains_isValid = false;

    m_status_equals_isSet = false;
    m_status_equals_isValid = false;

    m_sort_by_isSet = false;
    m_sort_by_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIListEdgePackagingJobsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListEdgePackagingJobsRequest::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;

    m_creation_time_after_isValid = ::OpenAPI::fromJsonValue(m_creation_time_after, json[QString("CreationTimeAfter")]);
    m_creation_time_after_isSet = !json[QString("CreationTimeAfter")].isNull() && m_creation_time_after_isValid;

    m_creation_time_before_isValid = ::OpenAPI::fromJsonValue(m_creation_time_before, json[QString("CreationTimeBefore")]);
    m_creation_time_before_isSet = !json[QString("CreationTimeBefore")].isNull() && m_creation_time_before_isValid;

    m_last_modified_time_after_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time_after, json[QString("LastModifiedTimeAfter")]);
    m_last_modified_time_after_isSet = !json[QString("LastModifiedTimeAfter")].isNull() && m_last_modified_time_after_isValid;

    m_last_modified_time_before_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time_before, json[QString("LastModifiedTimeBefore")]);
    m_last_modified_time_before_isSet = !json[QString("LastModifiedTimeBefore")].isNull() && m_last_modified_time_before_isValid;

    m_name_contains_isValid = ::OpenAPI::fromJsonValue(m_name_contains, json[QString("NameContains")]);
    m_name_contains_isSet = !json[QString("NameContains")].isNull() && m_name_contains_isValid;

    m_model_name_contains_isValid = ::OpenAPI::fromJsonValue(m_model_name_contains, json[QString("ModelNameContains")]);
    m_model_name_contains_isSet = !json[QString("ModelNameContains")].isNull() && m_model_name_contains_isValid;

    m_status_equals_isValid = ::OpenAPI::fromJsonValue(m_status_equals, json[QString("StatusEquals")]);
    m_status_equals_isSet = !json[QString("StatusEquals")].isNull() && m_status_equals_isValid;

    m_sort_by_isValid = ::OpenAPI::fromJsonValue(m_sort_by, json[QString("SortBy")]);
    m_sort_by_isSet = !json[QString("SortBy")].isNull() && m_sort_by_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("SortOrder")]);
    m_sort_order_isSet = !json[QString("SortOrder")].isNull() && m_sort_order_isValid;
}

QString OAIListEdgePackagingJobsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListEdgePackagingJobsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_creation_time_after_isSet) {
        obj.insert(QString("CreationTimeAfter"), ::OpenAPI::toJsonValue(m_creation_time_after));
    }
    if (m_creation_time_before_isSet) {
        obj.insert(QString("CreationTimeBefore"), ::OpenAPI::toJsonValue(m_creation_time_before));
    }
    if (m_last_modified_time_after_isSet) {
        obj.insert(QString("LastModifiedTimeAfter"), ::OpenAPI::toJsonValue(m_last_modified_time_after));
    }
    if (m_last_modified_time_before_isSet) {
        obj.insert(QString("LastModifiedTimeBefore"), ::OpenAPI::toJsonValue(m_last_modified_time_before));
    }
    if (m_name_contains_isSet) {
        obj.insert(QString("NameContains"), ::OpenAPI::toJsonValue(m_name_contains));
    }
    if (m_model_name_contains_isSet) {
        obj.insert(QString("ModelNameContains"), ::OpenAPI::toJsonValue(m_model_name_contains));
    }
    if (m_status_equals.isSet()) {
        obj.insert(QString("StatusEquals"), ::OpenAPI::toJsonValue(m_status_equals));
    }
    if (m_sort_by.isSet()) {
        obj.insert(QString("SortBy"), ::OpenAPI::toJsonValue(m_sort_by));
    }
    if (m_sort_order.isSet()) {
        obj.insert(QString("SortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAIListEdgePackagingJobsRequest::getNextToken() const {
    return m_next_token;
}
void OAIListEdgePackagingJobsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

qint32 OAIListEdgePackagingJobsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListEdgePackagingJobsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QDateTime OAIListEdgePackagingJobsRequest::getCreationTimeAfter() const {
    return m_creation_time_after;
}
void OAIListEdgePackagingJobsRequest::setCreationTimeAfter(const QDateTime &creation_time_after) {
    m_creation_time_after = creation_time_after;
    m_creation_time_after_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_creation_time_after_Set() const{
    return m_creation_time_after_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_creation_time_after_Valid() const{
    return m_creation_time_after_isValid;
}

QDateTime OAIListEdgePackagingJobsRequest::getCreationTimeBefore() const {
    return m_creation_time_before;
}
void OAIListEdgePackagingJobsRequest::setCreationTimeBefore(const QDateTime &creation_time_before) {
    m_creation_time_before = creation_time_before;
    m_creation_time_before_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_creation_time_before_Set() const{
    return m_creation_time_before_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_creation_time_before_Valid() const{
    return m_creation_time_before_isValid;
}

QDateTime OAIListEdgePackagingJobsRequest::getLastModifiedTimeAfter() const {
    return m_last_modified_time_after;
}
void OAIListEdgePackagingJobsRequest::setLastModifiedTimeAfter(const QDateTime &last_modified_time_after) {
    m_last_modified_time_after = last_modified_time_after;
    m_last_modified_time_after_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_last_modified_time_after_Set() const{
    return m_last_modified_time_after_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_last_modified_time_after_Valid() const{
    return m_last_modified_time_after_isValid;
}

QDateTime OAIListEdgePackagingJobsRequest::getLastModifiedTimeBefore() const {
    return m_last_modified_time_before;
}
void OAIListEdgePackagingJobsRequest::setLastModifiedTimeBefore(const QDateTime &last_modified_time_before) {
    m_last_modified_time_before = last_modified_time_before;
    m_last_modified_time_before_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_last_modified_time_before_Set() const{
    return m_last_modified_time_before_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_last_modified_time_before_Valid() const{
    return m_last_modified_time_before_isValid;
}

QString OAIListEdgePackagingJobsRequest::getNameContains() const {
    return m_name_contains;
}
void OAIListEdgePackagingJobsRequest::setNameContains(const QString &name_contains) {
    m_name_contains = name_contains;
    m_name_contains_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_name_contains_Set() const{
    return m_name_contains_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_name_contains_Valid() const{
    return m_name_contains_isValid;
}

QString OAIListEdgePackagingJobsRequest::getModelNameContains() const {
    return m_model_name_contains;
}
void OAIListEdgePackagingJobsRequest::setModelNameContains(const QString &model_name_contains) {
    m_model_name_contains = model_name_contains;
    m_model_name_contains_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_model_name_contains_Set() const{
    return m_model_name_contains_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_model_name_contains_Valid() const{
    return m_model_name_contains_isValid;
}

OAIEdgePackagingJobStatus OAIListEdgePackagingJobsRequest::getStatusEquals() const {
    return m_status_equals;
}
void OAIListEdgePackagingJobsRequest::setStatusEquals(const OAIEdgePackagingJobStatus &status_equals) {
    m_status_equals = status_equals;
    m_status_equals_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_status_equals_Set() const{
    return m_status_equals_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_status_equals_Valid() const{
    return m_status_equals_isValid;
}

OAIListEdgePackagingJobsSortBy OAIListEdgePackagingJobsRequest::getSortBy() const {
    return m_sort_by;
}
void OAIListEdgePackagingJobsRequest::setSortBy(const OAIListEdgePackagingJobsSortBy &sort_by) {
    m_sort_by = sort_by;
    m_sort_by_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_sort_by_Set() const{
    return m_sort_by_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_sort_by_Valid() const{
    return m_sort_by_isValid;
}

OAISortOrder OAIListEdgePackagingJobsRequest::getSortOrder() const {
    return m_sort_order;
}
void OAIListEdgePackagingJobsRequest::setSortOrder(const OAISortOrder &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIListEdgePackagingJobsRequest::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIListEdgePackagingJobsRequest::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIListEdgePackagingJobsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_contains_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_name_contains_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_equals.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListEdgePackagingJobsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
