/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition.h
 *
 * 
 */

#ifndef OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition_H
#define OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition_H

#include <QJsonObject>

#include "OAICheckpointConfig.h"
#include "OAICreateTrainingJobRequest_RetryStrategy.h"
#include "OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification.h"
#include "OAIHyperParameterTrainingJobDefinition_HyperParameterTuningResourceConfig.h"
#include "OAIHyperParameterTrainingJobDefinition_OutputDataConfig.h"
#include "OAIHyperParameterTrainingJobDefinition_ResourceConfig.h"
#include "OAIHyperParameterTrainingJobDefinition_StoppingCondition.h"
#include "OAIHyperParameterTrainingJobDefinition_VpcConfig.h"
#include "OAIHyperParameterTuningJobObjective.h"
#include "OAIParameterRanges.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHyperParameterTuningJobObjective;
class OAIParameterRanges;
class OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification;
class OAIHyperParameterTrainingJobDefinition_VpcConfig;
class OAIHyperParameterTrainingJobDefinition_OutputDataConfig;
class OAIHyperParameterTrainingJobDefinition_ResourceConfig;
class OAIHyperParameterTrainingJobDefinition_StoppingCondition;
class OAICheckpointConfig;
class OAICreateTrainingJobRequest_RetryStrategy;
class OAIHyperParameterTrainingJobDefinition_HyperParameterTuningResourceConfig;

class OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition : public OAIObject {
public:
    OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition();
    OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition(QString json);
    ~OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDefinitionName() const;
    void setDefinitionName(const QString &definition_name);
    bool is_definition_name_Set() const;
    bool is_definition_name_Valid() const;

    OAIHyperParameterTuningJobObjective getTuningObjective() const;
    void setTuningObjective(const OAIHyperParameterTuningJobObjective &tuning_objective);
    bool is_tuning_objective_Set() const;
    bool is_tuning_objective_Valid() const;

    OAIParameterRanges getHyperParameterRanges() const;
    void setHyperParameterRanges(const OAIParameterRanges &hyper_parameter_ranges);
    bool is_hyper_parameter_ranges_Set() const;
    bool is_hyper_parameter_ranges_Valid() const;

    QMap getStaticHyperParameters() const;
    void setStaticHyperParameters(const QMap &static_hyper_parameters);
    bool is_static_hyper_parameters_Set() const;
    bool is_static_hyper_parameters_Valid() const;

    OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification getAlgorithmSpecification() const;
    void setAlgorithmSpecification(const OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification &algorithm_specification);
    bool is_algorithm_specification_Set() const;
    bool is_algorithm_specification_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList getInputDataConfig() const;
    void setInputDataConfig(const QList &input_data_config);
    bool is_input_data_config_Set() const;
    bool is_input_data_config_Valid() const;

    OAIHyperParameterTrainingJobDefinition_VpcConfig getVpcConfig() const;
    void setVpcConfig(const OAIHyperParameterTrainingJobDefinition_VpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    OAIHyperParameterTrainingJobDefinition_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAIHyperParameterTrainingJobDefinition_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    OAIHyperParameterTrainingJobDefinition_ResourceConfig getResourceConfig() const;
    void setResourceConfig(const OAIHyperParameterTrainingJobDefinition_ResourceConfig &resource_config);
    bool is_resource_config_Set() const;
    bool is_resource_config_Valid() const;

    OAIHyperParameterTrainingJobDefinition_StoppingCondition getStoppingCondition() const;
    void setStoppingCondition(const OAIHyperParameterTrainingJobDefinition_StoppingCondition &stopping_condition);
    bool is_stopping_condition_Set() const;
    bool is_stopping_condition_Valid() const;

    bool getEnableNetworkIsolation() const;
    void setEnableNetworkIsolation(const bool &enable_network_isolation);
    bool is_enable_network_isolation_Set() const;
    bool is_enable_network_isolation_Valid() const;

    bool getEnableInterContainerTrafficEncryption() const;
    void setEnableInterContainerTrafficEncryption(const bool &enable_inter_container_traffic_encryption);
    bool is_enable_inter_container_traffic_encryption_Set() const;
    bool is_enable_inter_container_traffic_encryption_Valid() const;

    bool getEnableManagedSpotTraining() const;
    void setEnableManagedSpotTraining(const bool &enable_managed_spot_training);
    bool is_enable_managed_spot_training_Set() const;
    bool is_enable_managed_spot_training_Valid() const;

    OAICheckpointConfig getCheckpointConfig() const;
    void setCheckpointConfig(const OAICheckpointConfig &checkpoint_config);
    bool is_checkpoint_config_Set() const;
    bool is_checkpoint_config_Valid() const;

    OAICreateTrainingJobRequest_RetryStrategy getRetryStrategy() const;
    void setRetryStrategy(const OAICreateTrainingJobRequest_RetryStrategy &retry_strategy);
    bool is_retry_strategy_Set() const;
    bool is_retry_strategy_Valid() const;

    OAIHyperParameterTrainingJobDefinition_HyperParameterTuningResourceConfig getHyperParameterTuningResourceConfig() const;
    void setHyperParameterTuningResourceConfig(const OAIHyperParameterTrainingJobDefinition_HyperParameterTuningResourceConfig &hyper_parameter_tuning_resource_config);
    bool is_hyper_parameter_tuning_resource_config_Set() const;
    bool is_hyper_parameter_tuning_resource_config_Valid() const;

    QMap getEnvironment() const;
    void setEnvironment(const QMap &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_definition_name;
    bool m_definition_name_isSet;
    bool m_definition_name_isValid;

    OAIHyperParameterTuningJobObjective m_tuning_objective;
    bool m_tuning_objective_isSet;
    bool m_tuning_objective_isValid;

    OAIParameterRanges m_hyper_parameter_ranges;
    bool m_hyper_parameter_ranges_isSet;
    bool m_hyper_parameter_ranges_isValid;

    QMap m_static_hyper_parameters;
    bool m_static_hyper_parameters_isSet;
    bool m_static_hyper_parameters_isValid;

    OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification m_algorithm_specification;
    bool m_algorithm_specification_isSet;
    bool m_algorithm_specification_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList m_input_data_config;
    bool m_input_data_config_isSet;
    bool m_input_data_config_isValid;

    OAIHyperParameterTrainingJobDefinition_VpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    OAIHyperParameterTrainingJobDefinition_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    OAIHyperParameterTrainingJobDefinition_ResourceConfig m_resource_config;
    bool m_resource_config_isSet;
    bool m_resource_config_isValid;

    OAIHyperParameterTrainingJobDefinition_StoppingCondition m_stopping_condition;
    bool m_stopping_condition_isSet;
    bool m_stopping_condition_isValid;

    bool m_enable_network_isolation;
    bool m_enable_network_isolation_isSet;
    bool m_enable_network_isolation_isValid;

    bool m_enable_inter_container_traffic_encryption;
    bool m_enable_inter_container_traffic_encryption_isSet;
    bool m_enable_inter_container_traffic_encryption_isValid;

    bool m_enable_managed_spot_training;
    bool m_enable_managed_spot_training_isSet;
    bool m_enable_managed_spot_training_isValid;

    OAICheckpointConfig m_checkpoint_config;
    bool m_checkpoint_config_isSet;
    bool m_checkpoint_config_isValid;

    OAICreateTrainingJobRequest_RetryStrategy m_retry_strategy;
    bool m_retry_strategy_isSet;
    bool m_retry_strategy_isValid;

    OAIHyperParameterTrainingJobDefinition_HyperParameterTuningResourceConfig m_hyper_parameter_tuning_resource_config;
    bool m_hyper_parameter_tuning_resource_config_isSet;
    bool m_hyper_parameter_tuning_resource_config_isValid;

    QMap m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition)

#endif // OAICreateHyperParameterTuningJobRequest_TrainingJobDefinition_H
