/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPipelineExecutionStep.h
 *
 * An execution of a step in a pipeline.
 */

#ifndef OAIPipelineExecutionStep_H
#define OAIPipelineExecutionStep_H

#include <QJsonObject>

#include "OAIPipelineExecutionStep_CacheHitResult.h"
#include "OAIPipelineExecutionStep_Metadata.h"
#include "OAIPipelineExecutionStep_SelectiveExecutionResult.h"
#include "OAIStepStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPipelineExecutionStep_CacheHitResult;
class OAIPipelineExecutionStep_Metadata;
class OAIPipelineExecutionStep_SelectiveExecutionResult;

class OAIPipelineExecutionStep : public OAIObject {
public:
    OAIPipelineExecutionStep();
    OAIPipelineExecutionStep(QString json);
    ~OAIPipelineExecutionStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStepName() const;
    void setStepName(const QString &step_name);
    bool is_step_name_Set() const;
    bool is_step_name_Valid() const;

    QString getStepDisplayName() const;
    void setStepDisplayName(const QString &step_display_name);
    bool is_step_display_name_Set() const;
    bool is_step_display_name_Valid() const;

    QString getStepDescription() const;
    void setStepDescription(const QString &step_description);
    bool is_step_description_Set() const;
    bool is_step_description_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIStepStatus getStepStatus() const;
    void setStepStatus(const OAIStepStatus &step_status);
    bool is_step_status_Set() const;
    bool is_step_status_Valid() const;

    OAIPipelineExecutionStep_CacheHitResult getCacheHitResult() const;
    void setCacheHitResult(const OAIPipelineExecutionStep_CacheHitResult &cache_hit_result);
    bool is_cache_hit_result_Set() const;
    bool is_cache_hit_result_Valid() const;

    qint32 getAttemptCount() const;
    void setAttemptCount(const qint32 &attempt_count);
    bool is_attempt_count_Set() const;
    bool is_attempt_count_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAIPipelineExecutionStep_Metadata getMetadata() const;
    void setMetadata(const OAIPipelineExecutionStep_Metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIPipelineExecutionStep_SelectiveExecutionResult getSelectiveExecutionResult() const;
    void setSelectiveExecutionResult(const OAIPipelineExecutionStep_SelectiveExecutionResult &selective_execution_result);
    bool is_selective_execution_result_Set() const;
    bool is_selective_execution_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_step_name;
    bool m_step_name_isSet;
    bool m_step_name_isValid;

    QString m_step_display_name;
    bool m_step_display_name_isSet;
    bool m_step_display_name_isValid;

    QString m_step_description;
    bool m_step_description_isSet;
    bool m_step_description_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIStepStatus m_step_status;
    bool m_step_status_isSet;
    bool m_step_status_isValid;

    OAIPipelineExecutionStep_CacheHitResult m_cache_hit_result;
    bool m_cache_hit_result_isSet;
    bool m_cache_hit_result_isValid;

    qint32 m_attempt_count;
    bool m_attempt_count_isSet;
    bool m_attempt_count_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAIPipelineExecutionStep_Metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIPipelineExecutionStep_SelectiveExecutionResult m_selective_execution_result;
    bool m_selective_execution_result_isSet;
    bool m_selective_execution_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPipelineExecutionStep)

#endif // OAIPipelineExecutionStep_H
