/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeEdgePackagingJobResponse_OutputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeEdgePackagingJobResponse_OutputConfig::OAIDescribeEdgePackagingJobResponse_OutputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeEdgePackagingJobResponse_OutputConfig::OAIDescribeEdgePackagingJobResponse_OutputConfig() {
    this->initializeModel();
}

OAIDescribeEdgePackagingJobResponse_OutputConfig::~OAIDescribeEdgePackagingJobResponse_OutputConfig() {}

void OAIDescribeEdgePackagingJobResponse_OutputConfig::initializeModel() {

    m_s3_output_location_isSet = false;
    m_s3_output_location_isValid = false;

    m_kms_key_id_isSet = false;
    m_kms_key_id_isValid = false;

    m_preset_deployment_type_isSet = false;
    m_preset_deployment_type_isValid = false;

    m_preset_deployment_config_isSet = false;
    m_preset_deployment_config_isValid = false;
}

void OAIDescribeEdgePackagingJobResponse_OutputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeEdgePackagingJobResponse_OutputConfig::fromJsonObject(QJsonObject json) {

    m_s3_output_location_isValid = ::OpenAPI::fromJsonValue(m_s3_output_location, json[QString("S3OutputLocation")]);
    m_s3_output_location_isSet = !json[QString("S3OutputLocation")].isNull() && m_s3_output_location_isValid;

    m_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_key_id, json[QString("KmsKeyId")]);
    m_kms_key_id_isSet = !json[QString("KmsKeyId")].isNull() && m_kms_key_id_isValid;

    m_preset_deployment_type_isValid = ::OpenAPI::fromJsonValue(m_preset_deployment_type, json[QString("PresetDeploymentType")]);
    m_preset_deployment_type_isSet = !json[QString("PresetDeploymentType")].isNull() && m_preset_deployment_type_isValid;

    m_preset_deployment_config_isValid = ::OpenAPI::fromJsonValue(m_preset_deployment_config, json[QString("PresetDeploymentConfig")]);
    m_preset_deployment_config_isSet = !json[QString("PresetDeploymentConfig")].isNull() && m_preset_deployment_config_isValid;
}

QString OAIDescribeEdgePackagingJobResponse_OutputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeEdgePackagingJobResponse_OutputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_output_location_isSet) {
        obj.insert(QString("S3OutputLocation"), ::OpenAPI::toJsonValue(m_s3_output_location));
    }
    if (m_kms_key_id_isSet) {
        obj.insert(QString("KmsKeyId"), ::OpenAPI::toJsonValue(m_kms_key_id));
    }
    if (m_preset_deployment_type.isSet()) {
        obj.insert(QString("PresetDeploymentType"), ::OpenAPI::toJsonValue(m_preset_deployment_type));
    }
    if (m_preset_deployment_config_isSet) {
        obj.insert(QString("PresetDeploymentConfig"), ::OpenAPI::toJsonValue(m_preset_deployment_config));
    }
    return obj;
}

QString OAIDescribeEdgePackagingJobResponse_OutputConfig::getS3OutputLocation() const {
    return m_s3_output_location;
}
void OAIDescribeEdgePackagingJobResponse_OutputConfig::setS3OutputLocation(const QString &s3_output_location) {
    m_s3_output_location = s3_output_location;
    m_s3_output_location_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_s3_output_location_Set() const{
    return m_s3_output_location_isSet;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_s3_output_location_Valid() const{
    return m_s3_output_location_isValid;
}

QString OAIDescribeEdgePackagingJobResponse_OutputConfig::getKmsKeyId() const {
    return m_kms_key_id;
}
void OAIDescribeEdgePackagingJobResponse_OutputConfig::setKmsKeyId(const QString &kms_key_id) {
    m_kms_key_id = kms_key_id;
    m_kms_key_id_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_kms_key_id_Set() const{
    return m_kms_key_id_isSet;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_kms_key_id_Valid() const{
    return m_kms_key_id_isValid;
}

OAIEdgePresetDeploymentType OAIDescribeEdgePackagingJobResponse_OutputConfig::getPresetDeploymentType() const {
    return m_preset_deployment_type;
}
void OAIDescribeEdgePackagingJobResponse_OutputConfig::setPresetDeploymentType(const OAIEdgePresetDeploymentType &preset_deployment_type) {
    m_preset_deployment_type = preset_deployment_type;
    m_preset_deployment_type_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_preset_deployment_type_Set() const{
    return m_preset_deployment_type_isSet;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_preset_deployment_type_Valid() const{
    return m_preset_deployment_type_isValid;
}

QString OAIDescribeEdgePackagingJobResponse_OutputConfig::getPresetDeploymentConfig() const {
    return m_preset_deployment_config;
}
void OAIDescribeEdgePackagingJobResponse_OutputConfig::setPresetDeploymentConfig(const QString &preset_deployment_config) {
    m_preset_deployment_config = preset_deployment_config;
    m_preset_deployment_config_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_preset_deployment_config_Set() const{
    return m_preset_deployment_config_isSet;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::is_preset_deployment_config_Valid() const{
    return m_preset_deployment_config_isValid;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_output_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preset_deployment_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_preset_deployment_config_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeEdgePackagingJobResponse_OutputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s3_output_location_isValid && true;
}

} // namespace OpenAPI
