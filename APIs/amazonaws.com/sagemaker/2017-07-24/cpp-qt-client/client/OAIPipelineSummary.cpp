/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPipelineSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPipelineSummary::OAIPipelineSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPipelineSummary::OAIPipelineSummary() {
    this->initializeModel();
}

OAIPipelineSummary::~OAIPipelineSummary() {}

void OAIPipelineSummary::initializeModel() {

    m_pipeline_arn_isSet = false;
    m_pipeline_arn_isValid = false;

    m_pipeline_name_isSet = false;
    m_pipeline_name_isValid = false;

    m_pipeline_display_name_isSet = false;
    m_pipeline_display_name_isValid = false;

    m_pipeline_description_isSet = false;
    m_pipeline_description_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_execution_time_isSet = false;
    m_last_execution_time_isValid = false;
}

void OAIPipelineSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPipelineSummary::fromJsonObject(QJsonObject json) {

    m_pipeline_arn_isValid = ::OpenAPI::fromJsonValue(m_pipeline_arn, json[QString("PipelineArn")]);
    m_pipeline_arn_isSet = !json[QString("PipelineArn")].isNull() && m_pipeline_arn_isValid;

    m_pipeline_name_isValid = ::OpenAPI::fromJsonValue(m_pipeline_name, json[QString("PipelineName")]);
    m_pipeline_name_isSet = !json[QString("PipelineName")].isNull() && m_pipeline_name_isValid;

    m_pipeline_display_name_isValid = ::OpenAPI::fromJsonValue(m_pipeline_display_name, json[QString("PipelineDisplayName")]);
    m_pipeline_display_name_isSet = !json[QString("PipelineDisplayName")].isNull() && m_pipeline_display_name_isValid;

    m_pipeline_description_isValid = ::OpenAPI::fromJsonValue(m_pipeline_description, json[QString("PipelineDescription")]);
    m_pipeline_description_isSet = !json[QString("PipelineDescription")].isNull() && m_pipeline_description_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_execution_time_isValid = ::OpenAPI::fromJsonValue(m_last_execution_time, json[QString("LastExecutionTime")]);
    m_last_execution_time_isSet = !json[QString("LastExecutionTime")].isNull() && m_last_execution_time_isValid;
}

QString OAIPipelineSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPipelineSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_pipeline_arn_isSet) {
        obj.insert(QString("PipelineArn"), ::OpenAPI::toJsonValue(m_pipeline_arn));
    }
    if (m_pipeline_name_isSet) {
        obj.insert(QString("PipelineName"), ::OpenAPI::toJsonValue(m_pipeline_name));
    }
    if (m_pipeline_display_name_isSet) {
        obj.insert(QString("PipelineDisplayName"), ::OpenAPI::toJsonValue(m_pipeline_display_name));
    }
    if (m_pipeline_description_isSet) {
        obj.insert(QString("PipelineDescription"), ::OpenAPI::toJsonValue(m_pipeline_description));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_execution_time_isSet) {
        obj.insert(QString("LastExecutionTime"), ::OpenAPI::toJsonValue(m_last_execution_time));
    }
    return obj;
}

QString OAIPipelineSummary::getPipelineArn() const {
    return m_pipeline_arn;
}
void OAIPipelineSummary::setPipelineArn(const QString &pipeline_arn) {
    m_pipeline_arn = pipeline_arn;
    m_pipeline_arn_isSet = true;
}

bool OAIPipelineSummary::is_pipeline_arn_Set() const{
    return m_pipeline_arn_isSet;
}

bool OAIPipelineSummary::is_pipeline_arn_Valid() const{
    return m_pipeline_arn_isValid;
}

QString OAIPipelineSummary::getPipelineName() const {
    return m_pipeline_name;
}
void OAIPipelineSummary::setPipelineName(const QString &pipeline_name) {
    m_pipeline_name = pipeline_name;
    m_pipeline_name_isSet = true;
}

bool OAIPipelineSummary::is_pipeline_name_Set() const{
    return m_pipeline_name_isSet;
}

bool OAIPipelineSummary::is_pipeline_name_Valid() const{
    return m_pipeline_name_isValid;
}

QString OAIPipelineSummary::getPipelineDisplayName() const {
    return m_pipeline_display_name;
}
void OAIPipelineSummary::setPipelineDisplayName(const QString &pipeline_display_name) {
    m_pipeline_display_name = pipeline_display_name;
    m_pipeline_display_name_isSet = true;
}

bool OAIPipelineSummary::is_pipeline_display_name_Set() const{
    return m_pipeline_display_name_isSet;
}

bool OAIPipelineSummary::is_pipeline_display_name_Valid() const{
    return m_pipeline_display_name_isValid;
}

QString OAIPipelineSummary::getPipelineDescription() const {
    return m_pipeline_description;
}
void OAIPipelineSummary::setPipelineDescription(const QString &pipeline_description) {
    m_pipeline_description = pipeline_description;
    m_pipeline_description_isSet = true;
}

bool OAIPipelineSummary::is_pipeline_description_Set() const{
    return m_pipeline_description_isSet;
}

bool OAIPipelineSummary::is_pipeline_description_Valid() const{
    return m_pipeline_description_isValid;
}

QString OAIPipelineSummary::getRoleArn() const {
    return m_role_arn;
}
void OAIPipelineSummary::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIPipelineSummary::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIPipelineSummary::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QDateTime OAIPipelineSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIPipelineSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIPipelineSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIPipelineSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIPipelineSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIPipelineSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIPipelineSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIPipelineSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QDateTime OAIPipelineSummary::getLastExecutionTime() const {
    return m_last_execution_time;
}
void OAIPipelineSummary::setLastExecutionTime(const QDateTime &last_execution_time) {
    m_last_execution_time = last_execution_time;
    m_last_execution_time_isSet = true;
}

bool OAIPipelineSummary::is_last_execution_time_Set() const{
    return m_last_execution_time_isSet;
}

bool OAIPipelineSummary::is_last_execution_time_Valid() const{
    return m_last_execution_time_isValid;
}

bool OAIPipelineSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pipeline_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_execution_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPipelineSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
