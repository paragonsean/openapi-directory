/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListEdgeDeploymentPlansSortBy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListEdgeDeploymentPlansSortBy::OAIListEdgeDeploymentPlansSortBy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListEdgeDeploymentPlansSortBy::OAIListEdgeDeploymentPlansSortBy() {
    this->initializeModel();
}

OAIListEdgeDeploymentPlansSortBy::~OAIListEdgeDeploymentPlansSortBy() {}

void OAIListEdgeDeploymentPlansSortBy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIListEdgeDeploymentPlansSortBy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIListEdgeDeploymentPlansSortBy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListEdgeDeploymentPlansSortBy::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEVICE_FLEET_NAME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListEdgeDeploymentPlansSortBy::DEVICE_FLEET_NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CREATION_TIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListEdgeDeploymentPlansSortBy::CREATION_TIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAST_MODIFIED_TIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIListEdgeDeploymentPlansSortBy::LAST_MODIFIED_TIME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIListEdgeDeploymentPlansSortBy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIListEdgeDeploymentPlansSortBy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIListEdgeDeploymentPlansSortBy::NAME:
            val = "NAME";
            break;
        case eOAIListEdgeDeploymentPlansSortBy::DEVICE_FLEET_NAME:
            val = "DEVICE_FLEET_NAME";
            break;
        case eOAIListEdgeDeploymentPlansSortBy::CREATION_TIME:
            val = "CREATION_TIME";
            break;
        case eOAIListEdgeDeploymentPlansSortBy::LAST_MODIFIED_TIME:
            val = "LAST_MODIFIED_TIME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIListEdgeDeploymentPlansSortBy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIListEdgeDeploymentPlansSortBy::eOAIListEdgeDeploymentPlansSortBy OAIListEdgeDeploymentPlansSortBy::getValue() const {
    return m_value;
}

void OAIListEdgeDeploymentPlansSortBy::setValue(const OAIListEdgeDeploymentPlansSortBy::eOAIListEdgeDeploymentPlansSortBy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIListEdgeDeploymentPlansSortBy::isSet() const {
    
    return m_value_isSet;
}

bool OAIListEdgeDeploymentPlansSortBy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
