/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeInferenceExperimentResponse_EndpointMetadata.h
 *
 * 
 */

#ifndef OAIDescribeInferenceExperimentResponse_EndpointMetadata_H
#define OAIDescribeInferenceExperimentResponse_EndpointMetadata_H

#include <QJsonObject>

#include "OAIEndpointStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeInferenceExperimentResponse_EndpointMetadata : public OAIObject {
public:
    OAIDescribeInferenceExperimentResponse_EndpointMetadata();
    OAIDescribeInferenceExperimentResponse_EndpointMetadata(QString json);
    ~OAIDescribeInferenceExperimentResponse_EndpointMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointName() const;
    void setEndpointName(const QString &endpoint_name);
    bool is_endpoint_name_Set() const;
    bool is_endpoint_name_Valid() const;

    QString getEndpointConfigName() const;
    void setEndpointConfigName(const QString &endpoint_config_name);
    bool is_endpoint_config_name_Set() const;
    bool is_endpoint_config_name_Valid() const;

    OAIEndpointStatus getEndpointStatus() const;
    void setEndpointStatus(const OAIEndpointStatus &endpoint_status);
    bool is_endpoint_status_Set() const;
    bool is_endpoint_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_name;
    bool m_endpoint_name_isSet;
    bool m_endpoint_name_isValid;

    QString m_endpoint_config_name;
    bool m_endpoint_config_name_isSet;
    bool m_endpoint_config_name_isValid;

    OAIEndpointStatus m_endpoint_status;
    bool m_endpoint_status_isSet;
    bool m_endpoint_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeInferenceExperimentResponse_EndpointMetadata)

#endif // OAIDescribeInferenceExperimentResponse_EndpointMetadata_H
