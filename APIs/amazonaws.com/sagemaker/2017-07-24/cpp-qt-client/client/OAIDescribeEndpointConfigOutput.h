/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeEndpointConfigOutput.h
 *
 * 
 */

#ifndef OAIDescribeEndpointConfigOutput_H
#define OAIDescribeEndpointConfigOutput_H

#include <QJsonObject>

#include "OAIDataCaptureConfig.h"
#include "OAIDescribeEndpointOutput_AsyncInferenceConfig.h"
#include "OAIDescribeEndpointOutput_ExplainerConfig.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataCaptureConfig;
class OAIDescribeEndpointOutput_AsyncInferenceConfig;
class OAIDescribeEndpointOutput_ExplainerConfig;

class OAIDescribeEndpointConfigOutput : public OAIObject {
public:
    OAIDescribeEndpointConfigOutput();
    OAIDescribeEndpointConfigOutput(QString json);
    ~OAIDescribeEndpointConfigOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointConfigName() const;
    void setEndpointConfigName(const QString &endpoint_config_name);
    bool is_endpoint_config_name_Set() const;
    bool is_endpoint_config_name_Valid() const;

    QString getEndpointConfigArn() const;
    void setEndpointConfigArn(const QString &endpoint_config_arn);
    bool is_endpoint_config_arn_Set() const;
    bool is_endpoint_config_arn_Valid() const;

    QList getProductionVariants() const;
    void setProductionVariants(const QList &production_variants);
    bool is_production_variants_Set() const;
    bool is_production_variants_Valid() const;

    OAIDataCaptureConfig getDataCaptureConfig() const;
    void setDataCaptureConfig(const OAIDataCaptureConfig &data_capture_config);
    bool is_data_capture_config_Set() const;
    bool is_data_capture_config_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIDescribeEndpointOutput_AsyncInferenceConfig getAsyncInferenceConfig() const;
    void setAsyncInferenceConfig(const OAIDescribeEndpointOutput_AsyncInferenceConfig &async_inference_config);
    bool is_async_inference_config_Set() const;
    bool is_async_inference_config_Valid() const;

    OAIDescribeEndpointOutput_ExplainerConfig getExplainerConfig() const;
    void setExplainerConfig(const OAIDescribeEndpointOutput_ExplainerConfig &explainer_config);
    bool is_explainer_config_Set() const;
    bool is_explainer_config_Valid() const;

    QList getShadowProductionVariants() const;
    void setShadowProductionVariants(const QList &shadow_production_variants);
    bool is_shadow_production_variants_Set() const;
    bool is_shadow_production_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_config_name;
    bool m_endpoint_config_name_isSet;
    bool m_endpoint_config_name_isValid;

    QString m_endpoint_config_arn;
    bool m_endpoint_config_arn_isSet;
    bool m_endpoint_config_arn_isValid;

    QList m_production_variants;
    bool m_production_variants_isSet;
    bool m_production_variants_isValid;

    OAIDataCaptureConfig m_data_capture_config;
    bool m_data_capture_config_isSet;
    bool m_data_capture_config_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIDescribeEndpointOutput_AsyncInferenceConfig m_async_inference_config;
    bool m_async_inference_config_isSet;
    bool m_async_inference_config_isValid;

    OAIDescribeEndpointOutput_ExplainerConfig m_explainer_config;
    bool m_explainer_config_isSet;
    bool m_explainer_config_isValid;

    QList m_shadow_production_variants;
    bool m_shadow_production_variants_isSet;
    bool m_shadow_production_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeEndpointConfigOutput)

#endif // OAIDescribeEndpointConfigOutput_H
