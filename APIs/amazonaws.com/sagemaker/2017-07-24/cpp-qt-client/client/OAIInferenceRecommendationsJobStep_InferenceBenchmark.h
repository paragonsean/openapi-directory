/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInferenceRecommendationsJobStep_InferenceBenchmark.h
 *
 * 
 */

#ifndef OAIInferenceRecommendationsJobStep_InferenceBenchmark_H
#define OAIInferenceRecommendationsJobStep_InferenceBenchmark_H

#include <QJsonObject>

#include "OAIEndpointOutputConfiguration.h"
#include "OAIInferenceMetrics.h"
#include "OAIModelConfiguration.h"
#include "OAIRecommendationMetrics.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecommendationMetrics;
class OAIEndpointOutputConfiguration;
class OAIModelConfiguration;
class OAIInferenceMetrics;

class OAIInferenceRecommendationsJobStep_InferenceBenchmark : public OAIObject {
public:
    OAIInferenceRecommendationsJobStep_InferenceBenchmark();
    OAIInferenceRecommendationsJobStep_InferenceBenchmark(QString json);
    ~OAIInferenceRecommendationsJobStep_InferenceBenchmark() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecommendationMetrics getMetrics() const;
    void setMetrics(const OAIRecommendationMetrics &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    OAIEndpointOutputConfiguration getEndpointConfiguration() const;
    void setEndpointConfiguration(const OAIEndpointOutputConfiguration &endpoint_configuration);
    bool is_endpoint_configuration_Set() const;
    bool is_endpoint_configuration_Valid() const;

    OAIModelConfiguration getModelConfiguration() const;
    void setModelConfiguration(const OAIModelConfiguration &model_configuration);
    bool is_model_configuration_Set() const;
    bool is_model_configuration_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    OAIInferenceMetrics getEndpointMetrics() const;
    void setEndpointMetrics(const OAIInferenceMetrics &endpoint_metrics);
    bool is_endpoint_metrics_Set() const;
    bool is_endpoint_metrics_Valid() const;

    QDateTime getInvocationEndTime() const;
    void setInvocationEndTime(const QDateTime &invocation_end_time);
    bool is_invocation_end_time_Set() const;
    bool is_invocation_end_time_Valid() const;

    QDateTime getInvocationStartTime() const;
    void setInvocationStartTime(const QDateTime &invocation_start_time);
    bool is_invocation_start_time_Set() const;
    bool is_invocation_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecommendationMetrics m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    OAIEndpointOutputConfiguration m_endpoint_configuration;
    bool m_endpoint_configuration_isSet;
    bool m_endpoint_configuration_isValid;

    OAIModelConfiguration m_model_configuration;
    bool m_model_configuration_isSet;
    bool m_model_configuration_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    OAIInferenceMetrics m_endpoint_metrics;
    bool m_endpoint_metrics_isSet;
    bool m_endpoint_metrics_isValid;

    QDateTime m_invocation_end_time;
    bool m_invocation_end_time_isSet;
    bool m_invocation_end_time_isValid;

    QDateTime m_invocation_start_time;
    bool m_invocation_start_time_isSet;
    bool m_invocation_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInferenceRecommendationsJobStep_InferenceBenchmark)

#endif // OAIInferenceRecommendationsJobStep_InferenceBenchmark_H
