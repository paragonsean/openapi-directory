/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabelingJobStoppingConditions.h
 *
 * &lt;p&gt;A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Labeling jobs fail after 30 days with an appropriate client error message.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAILabelingJobStoppingConditions_H
#define OAILabelingJobStoppingConditions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILabelingJobStoppingConditions : public OAIObject {
public:
    OAILabelingJobStoppingConditions();
    OAILabelingJobStoppingConditions(QString json);
    ~OAILabelingJobStoppingConditions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxHumanLabeledObjectCount() const;
    void setMaxHumanLabeledObjectCount(const qint32 &max_human_labeled_object_count);
    bool is_max_human_labeled_object_count_Set() const;
    bool is_max_human_labeled_object_count_Valid() const;

    qint32 getMaxPercentageOfInputDatasetLabeled() const;
    void setMaxPercentageOfInputDatasetLabeled(const qint32 &max_percentage_of_input_dataset_labeled);
    bool is_max_percentage_of_input_dataset_labeled_Set() const;
    bool is_max_percentage_of_input_dataset_labeled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_human_labeled_object_count;
    bool m_max_human_labeled_object_count_isSet;
    bool m_max_human_labeled_object_count_isValid;

    qint32 m_max_percentage_of_input_dataset_labeled;
    bool m_max_percentage_of_input_dataset_labeled_isSet;
    bool m_max_percentage_of_input_dataset_labeled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabelingJobStoppingConditions)

#endif // OAILabelingJobStoppingConditions_H
