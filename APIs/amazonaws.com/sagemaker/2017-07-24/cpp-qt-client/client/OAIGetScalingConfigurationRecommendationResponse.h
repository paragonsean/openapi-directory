/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetScalingConfigurationRecommendationResponse.h
 *
 * 
 */

#ifndef OAIGetScalingConfigurationRecommendationResponse_H
#define OAIGetScalingConfigurationRecommendationResponse_H

#include <QJsonObject>

#include "OAIGetScalingConfigurationRecommendationResponse_DynamicScalingConfiguration.h"
#include "OAIGetScalingConfigurationRecommendationResponse_Metric.h"
#include "OAIGetScalingConfigurationRecommendationResponse_ScalingPolicyObjective.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetScalingConfigurationRecommendationResponse_ScalingPolicyObjective;
class OAIGetScalingConfigurationRecommendationResponse_Metric;
class OAIGetScalingConfigurationRecommendationResponse_DynamicScalingConfiguration;

class OAIGetScalingConfigurationRecommendationResponse : public OAIObject {
public:
    OAIGetScalingConfigurationRecommendationResponse();
    OAIGetScalingConfigurationRecommendationResponse(QString json);
    ~OAIGetScalingConfigurationRecommendationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInferenceRecommendationsJobName() const;
    void setInferenceRecommendationsJobName(const QString &inference_recommendations_job_name);
    bool is_inference_recommendations_job_name_Set() const;
    bool is_inference_recommendations_job_name_Valid() const;

    QString getRecommendationId() const;
    void setRecommendationId(const QString &recommendation_id);
    bool is_recommendation_id_Set() const;
    bool is_recommendation_id_Valid() const;

    QString getEndpointName() const;
    void setEndpointName(const QString &endpoint_name);
    bool is_endpoint_name_Set() const;
    bool is_endpoint_name_Valid() const;

    qint32 getTargetCpuUtilizationPerCore() const;
    void setTargetCpuUtilizationPerCore(const qint32 &target_cpu_utilization_per_core);
    bool is_target_cpu_utilization_per_core_Set() const;
    bool is_target_cpu_utilization_per_core_Valid() const;

    OAIGetScalingConfigurationRecommendationResponse_ScalingPolicyObjective getScalingPolicyObjective() const;
    void setScalingPolicyObjective(const OAIGetScalingConfigurationRecommendationResponse_ScalingPolicyObjective &scaling_policy_objective);
    bool is_scaling_policy_objective_Set() const;
    bool is_scaling_policy_objective_Valid() const;

    OAIGetScalingConfigurationRecommendationResponse_Metric getMetric() const;
    void setMetric(const OAIGetScalingConfigurationRecommendationResponse_Metric &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    OAIGetScalingConfigurationRecommendationResponse_DynamicScalingConfiguration getDynamicScalingConfiguration() const;
    void setDynamicScalingConfiguration(const OAIGetScalingConfigurationRecommendationResponse_DynamicScalingConfiguration &dynamic_scaling_configuration);
    bool is_dynamic_scaling_configuration_Set() const;
    bool is_dynamic_scaling_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_inference_recommendations_job_name;
    bool m_inference_recommendations_job_name_isSet;
    bool m_inference_recommendations_job_name_isValid;

    QString m_recommendation_id;
    bool m_recommendation_id_isSet;
    bool m_recommendation_id_isValid;

    QString m_endpoint_name;
    bool m_endpoint_name_isSet;
    bool m_endpoint_name_isValid;

    qint32 m_target_cpu_utilization_per_core;
    bool m_target_cpu_utilization_per_core_isSet;
    bool m_target_cpu_utilization_per_core_isValid;

    OAIGetScalingConfigurationRecommendationResponse_ScalingPolicyObjective m_scaling_policy_objective;
    bool m_scaling_policy_objective_isSet;
    bool m_scaling_policy_objective_isValid;

    OAIGetScalingConfigurationRecommendationResponse_Metric m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    OAIGetScalingConfigurationRecommendationResponse_DynamicScalingConfiguration m_dynamic_scaling_configuration;
    bool m_dynamic_scaling_configuration_isSet;
    bool m_dynamic_scaling_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetScalingConfigurationRecommendationResponse)

#endif // OAIGetScalingConfigurationRecommendationResponse_H
