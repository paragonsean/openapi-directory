/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListNotebookInstancesInput.h
 *
 * 
 */

#ifndef OAIListNotebookInstancesInput_H
#define OAIListNotebookInstancesInput_H

#include <QJsonObject>

#include "OAINotebookInstanceSortKey.h"
#include "OAINotebookInstanceSortOrder.h"
#include "OAINotebookInstanceStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListNotebookInstancesInput : public OAIObject {
public:
    OAIListNotebookInstancesInput();
    OAIListNotebookInstancesInput(QString json);
    ~OAIListNotebookInstancesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    OAINotebookInstanceSortKey getSortBy() const;
    void setSortBy(const OAINotebookInstanceSortKey &sort_by);
    bool is_sort_by_Set() const;
    bool is_sort_by_Valid() const;

    OAINotebookInstanceSortOrder getSortOrder() const;
    void setSortOrder(const OAINotebookInstanceSortOrder &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QString getNameContains() const;
    void setNameContains(const QString &name_contains);
    bool is_name_contains_Set() const;
    bool is_name_contains_Valid() const;

    QDateTime getCreationTimeBefore() const;
    void setCreationTimeBefore(const QDateTime &creation_time_before);
    bool is_creation_time_before_Set() const;
    bool is_creation_time_before_Valid() const;

    QDateTime getCreationTimeAfter() const;
    void setCreationTimeAfter(const QDateTime &creation_time_after);
    bool is_creation_time_after_Set() const;
    bool is_creation_time_after_Valid() const;

    QDateTime getLastModifiedTimeBefore() const;
    void setLastModifiedTimeBefore(const QDateTime &last_modified_time_before);
    bool is_last_modified_time_before_Set() const;
    bool is_last_modified_time_before_Valid() const;

    QDateTime getLastModifiedTimeAfter() const;
    void setLastModifiedTimeAfter(const QDateTime &last_modified_time_after);
    bool is_last_modified_time_after_Set() const;
    bool is_last_modified_time_after_Valid() const;

    OAINotebookInstanceStatus getStatusEquals() const;
    void setStatusEquals(const OAINotebookInstanceStatus &status_equals);
    bool is_status_equals_Set() const;
    bool is_status_equals_Valid() const;

    QString getNotebookInstanceLifecycleConfigNameContains() const;
    void setNotebookInstanceLifecycleConfigNameContains(const QString &notebook_instance_lifecycle_config_name_contains);
    bool is_notebook_instance_lifecycle_config_name_contains_Set() const;
    bool is_notebook_instance_lifecycle_config_name_contains_Valid() const;

    QString getDefaultCodeRepositoryContains() const;
    void setDefaultCodeRepositoryContains(const QString &default_code_repository_contains);
    bool is_default_code_repository_contains_Set() const;
    bool is_default_code_repository_contains_Valid() const;

    QString getAdditionalCodeRepositoryEquals() const;
    void setAdditionalCodeRepositoryEquals(const QString &additional_code_repository_equals);
    bool is_additional_code_repository_equals_Set() const;
    bool is_additional_code_repository_equals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    OAINotebookInstanceSortKey m_sort_by;
    bool m_sort_by_isSet;
    bool m_sort_by_isValid;

    OAINotebookInstanceSortOrder m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QString m_name_contains;
    bool m_name_contains_isSet;
    bool m_name_contains_isValid;

    QDateTime m_creation_time_before;
    bool m_creation_time_before_isSet;
    bool m_creation_time_before_isValid;

    QDateTime m_creation_time_after;
    bool m_creation_time_after_isSet;
    bool m_creation_time_after_isValid;

    QDateTime m_last_modified_time_before;
    bool m_last_modified_time_before_isSet;
    bool m_last_modified_time_before_isValid;

    QDateTime m_last_modified_time_after;
    bool m_last_modified_time_after_isSet;
    bool m_last_modified_time_after_isValid;

    OAINotebookInstanceStatus m_status_equals;
    bool m_status_equals_isSet;
    bool m_status_equals_isValid;

    QString m_notebook_instance_lifecycle_config_name_contains;
    bool m_notebook_instance_lifecycle_config_name_contains_isSet;
    bool m_notebook_instance_lifecycle_config_name_contains_isValid;

    QString m_default_code_repository_contains;
    bool m_default_code_repository_contains_isSet;
    bool m_default_code_repository_contains_isValid;

    QString m_additional_code_repository_equals;
    bool m_additional_code_repository_equals_isSet;
    bool m_additional_code_repository_equals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListNotebookInstancesInput)

#endif // OAIListNotebookInstancesInput_H
