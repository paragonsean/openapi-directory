/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlgorithmSummary.h
 *
 * Provides summary information about an algorithm.
 */

#ifndef OAIAlgorithmSummary_H
#define OAIAlgorithmSummary_H

#include <QJsonObject>

#include "OAIAlgorithmStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAlgorithmSummary : public OAIObject {
public:
    OAIAlgorithmSummary();
    OAIAlgorithmSummary(QString json);
    ~OAIAlgorithmSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlgorithmName() const;
    void setAlgorithmName(const QString &algorithm_name);
    bool is_algorithm_name_Set() const;
    bool is_algorithm_name_Valid() const;

    QString getAlgorithmArn() const;
    void setAlgorithmArn(const QString &algorithm_arn);
    bool is_algorithm_arn_Set() const;
    bool is_algorithm_arn_Valid() const;

    QString getAlgorithmDescription() const;
    void setAlgorithmDescription(const QString &algorithm_description);
    bool is_algorithm_description_Set() const;
    bool is_algorithm_description_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIAlgorithmStatus getAlgorithmStatus() const;
    void setAlgorithmStatus(const OAIAlgorithmStatus &algorithm_status);
    bool is_algorithm_status_Set() const;
    bool is_algorithm_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_algorithm_name;
    bool m_algorithm_name_isSet;
    bool m_algorithm_name_isValid;

    QString m_algorithm_arn;
    bool m_algorithm_arn_isSet;
    bool m_algorithm_arn_isValid;

    QString m_algorithm_description;
    bool m_algorithm_description_isSet;
    bool m_algorithm_description_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIAlgorithmStatus m_algorithm_status;
    bool m_algorithm_status_isSet;
    bool m_algorithm_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlgorithmSummary)

#endif // OAIAlgorithmSummary_H
