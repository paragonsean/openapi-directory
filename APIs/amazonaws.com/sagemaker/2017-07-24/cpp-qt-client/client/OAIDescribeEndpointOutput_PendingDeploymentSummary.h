/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeEndpointOutput_PendingDeploymentSummary.h
 *
 * 
 */

#ifndef OAIDescribeEndpointOutput_PendingDeploymentSummary_H
#define OAIDescribeEndpointOutput_PendingDeploymentSummary_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeEndpointOutput_PendingDeploymentSummary : public OAIObject {
public:
    OAIDescribeEndpointOutput_PendingDeploymentSummary();
    OAIDescribeEndpointOutput_PendingDeploymentSummary(QString json);
    ~OAIDescribeEndpointOutput_PendingDeploymentSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointConfigName() const;
    void setEndpointConfigName(const QString &endpoint_config_name);
    bool is_endpoint_config_name_Set() const;
    bool is_endpoint_config_name_Valid() const;

    QList getProductionVariants() const;
    void setProductionVariants(const QList &production_variants);
    bool is_production_variants_Set() const;
    bool is_production_variants_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QList getShadowProductionVariants() const;
    void setShadowProductionVariants(const QList &shadow_production_variants);
    bool is_shadow_production_variants_Set() const;
    bool is_shadow_production_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_config_name;
    bool m_endpoint_config_name_isSet;
    bool m_endpoint_config_name_isValid;

    QList m_production_variants;
    bool m_production_variants_isSet;
    bool m_production_variants_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QList m_shadow_production_variants;
    bool m_shadow_production_variants_isSet;
    bool m_shadow_production_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeEndpointOutput_PendingDeploymentSummary)

#endif // OAIDescribeEndpointOutput_PendingDeploymentSummary_H
