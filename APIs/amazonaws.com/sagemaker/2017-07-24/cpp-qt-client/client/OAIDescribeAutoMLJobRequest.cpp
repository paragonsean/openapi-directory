/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAutoMLJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAutoMLJobRequest::OAIDescribeAutoMLJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAutoMLJobRequest::OAIDescribeAutoMLJobRequest() {
    this->initializeModel();
}

OAIDescribeAutoMLJobRequest::~OAIDescribeAutoMLJobRequest() {}

void OAIDescribeAutoMLJobRequest::initializeModel() {

    m_auto_ml_job_name_isSet = false;
    m_auto_ml_job_name_isValid = false;
}

void OAIDescribeAutoMLJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAutoMLJobRequest::fromJsonObject(QJsonObject json) {

    m_auto_ml_job_name_isValid = ::OpenAPI::fromJsonValue(m_auto_ml_job_name, json[QString("AutoMLJobName")]);
    m_auto_ml_job_name_isSet = !json[QString("AutoMLJobName")].isNull() && m_auto_ml_job_name_isValid;
}

QString OAIDescribeAutoMLJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAutoMLJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_ml_job_name_isSet) {
        obj.insert(QString("AutoMLJobName"), ::OpenAPI::toJsonValue(m_auto_ml_job_name));
    }
    return obj;
}

QString OAIDescribeAutoMLJobRequest::getAutoMlJobName() const {
    return m_auto_ml_job_name;
}
void OAIDescribeAutoMLJobRequest::setAutoMlJobName(const QString &auto_ml_job_name) {
    m_auto_ml_job_name = auto_ml_job_name;
    m_auto_ml_job_name_isSet = true;
}

bool OAIDescribeAutoMLJobRequest::is_auto_ml_job_name_Set() const{
    return m_auto_ml_job_name_isSet;
}

bool OAIDescribeAutoMLJobRequest::is_auto_ml_job_name_Valid() const{
    return m_auto_ml_job_name_isValid;
}

bool OAIDescribeAutoMLJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_ml_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAutoMLJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_auto_ml_job_name_isValid && true;
}

} // namespace OpenAPI
