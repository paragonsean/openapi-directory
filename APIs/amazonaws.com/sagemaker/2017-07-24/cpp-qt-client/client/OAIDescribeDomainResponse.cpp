/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDomainResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDomainResponse::OAIDescribeDomainResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDomainResponse::OAIDescribeDomainResponse() {
    this->initializeModel();
}

OAIDescribeDomainResponse::~OAIDescribeDomainResponse() {}

void OAIDescribeDomainResponse::initializeModel() {

    m_domain_arn_isSet = false;
    m_domain_arn_isValid = false;

    m_domain_id_isSet = false;
    m_domain_id_isValid = false;

    m_domain_name_isSet = false;
    m_domain_name_isValid = false;

    m_home_efs_file_system_id_isSet = false;
    m_home_efs_file_system_id_isValid = false;

    m_single_sign_on_managed_application_instance_id_isSet = false;
    m_single_sign_on_managed_application_instance_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_auth_mode_isSet = false;
    m_auth_mode_isValid = false;

    m_default_user_settings_isSet = false;
    m_default_user_settings_isValid = false;

    m_app_network_access_type_isSet = false;
    m_app_network_access_type_isValid = false;

    m_home_efs_file_system_kms_key_id_isSet = false;
    m_home_efs_file_system_kms_key_id_isValid = false;

    m_subnet_ids_isSet = false;
    m_subnet_ids_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_vpc_id_isSet = false;
    m_vpc_id_isValid = false;

    m_kms_key_id_isSet = false;
    m_kms_key_id_isValid = false;

    m_domain_settings_isSet = false;
    m_domain_settings_isValid = false;

    m_app_security_group_management_isSet = false;
    m_app_security_group_management_isValid = false;

    m_security_group_id_for_domain_boundary_isSet = false;
    m_security_group_id_for_domain_boundary_isValid = false;

    m_default_space_settings_isSet = false;
    m_default_space_settings_isValid = false;
}

void OAIDescribeDomainResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDomainResponse::fromJsonObject(QJsonObject json) {

    m_domain_arn_isValid = ::OpenAPI::fromJsonValue(m_domain_arn, json[QString("DomainArn")]);
    m_domain_arn_isSet = !json[QString("DomainArn")].isNull() && m_domain_arn_isValid;

    m_domain_id_isValid = ::OpenAPI::fromJsonValue(m_domain_id, json[QString("DomainId")]);
    m_domain_id_isSet = !json[QString("DomainId")].isNull() && m_domain_id_isValid;

    m_domain_name_isValid = ::OpenAPI::fromJsonValue(m_domain_name, json[QString("DomainName")]);
    m_domain_name_isSet = !json[QString("DomainName")].isNull() && m_domain_name_isValid;

    m_home_efs_file_system_id_isValid = ::OpenAPI::fromJsonValue(m_home_efs_file_system_id, json[QString("HomeEfsFileSystemId")]);
    m_home_efs_file_system_id_isSet = !json[QString("HomeEfsFileSystemId")].isNull() && m_home_efs_file_system_id_isValid;

    m_single_sign_on_managed_application_instance_id_isValid = ::OpenAPI::fromJsonValue(m_single_sign_on_managed_application_instance_id, json[QString("SingleSignOnManagedApplicationInstanceId")]);
    m_single_sign_on_managed_application_instance_id_isSet = !json[QString("SingleSignOnManagedApplicationInstanceId")].isNull() && m_single_sign_on_managed_application_instance_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;

    m_auth_mode_isValid = ::OpenAPI::fromJsonValue(m_auth_mode, json[QString("AuthMode")]);
    m_auth_mode_isSet = !json[QString("AuthMode")].isNull() && m_auth_mode_isValid;

    m_default_user_settings_isValid = ::OpenAPI::fromJsonValue(m_default_user_settings, json[QString("DefaultUserSettings")]);
    m_default_user_settings_isSet = !json[QString("DefaultUserSettings")].isNull() && m_default_user_settings_isValid;

    m_app_network_access_type_isValid = ::OpenAPI::fromJsonValue(m_app_network_access_type, json[QString("AppNetworkAccessType")]);
    m_app_network_access_type_isSet = !json[QString("AppNetworkAccessType")].isNull() && m_app_network_access_type_isValid;

    m_home_efs_file_system_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_home_efs_file_system_kms_key_id, json[QString("HomeEfsFileSystemKmsKeyId")]);
    m_home_efs_file_system_kms_key_id_isSet = !json[QString("HomeEfsFileSystemKmsKeyId")].isNull() && m_home_efs_file_system_kms_key_id_isValid;

    m_subnet_ids_isValid = ::OpenAPI::fromJsonValue(m_subnet_ids, json[QString("SubnetIds")]);
    m_subnet_ids_isSet = !json[QString("SubnetIds")].isNull() && m_subnet_ids_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("Url")]);
    m_url_isSet = !json[QString("Url")].isNull() && m_url_isValid;

    m_vpc_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_id, json[QString("VpcId")]);
    m_vpc_id_isSet = !json[QString("VpcId")].isNull() && m_vpc_id_isValid;

    m_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_key_id, json[QString("KmsKeyId")]);
    m_kms_key_id_isSet = !json[QString("KmsKeyId")].isNull() && m_kms_key_id_isValid;

    m_domain_settings_isValid = ::OpenAPI::fromJsonValue(m_domain_settings, json[QString("DomainSettings")]);
    m_domain_settings_isSet = !json[QString("DomainSettings")].isNull() && m_domain_settings_isValid;

    m_app_security_group_management_isValid = ::OpenAPI::fromJsonValue(m_app_security_group_management, json[QString("AppSecurityGroupManagement")]);
    m_app_security_group_management_isSet = !json[QString("AppSecurityGroupManagement")].isNull() && m_app_security_group_management_isValid;

    m_security_group_id_for_domain_boundary_isValid = ::OpenAPI::fromJsonValue(m_security_group_id_for_domain_boundary, json[QString("SecurityGroupIdForDomainBoundary")]);
    m_security_group_id_for_domain_boundary_isSet = !json[QString("SecurityGroupIdForDomainBoundary")].isNull() && m_security_group_id_for_domain_boundary_isValid;

    m_default_space_settings_isValid = ::OpenAPI::fromJsonValue(m_default_space_settings, json[QString("DefaultSpaceSettings")]);
    m_default_space_settings_isSet = !json[QString("DefaultSpaceSettings")].isNull() && m_default_space_settings_isValid;
}

QString OAIDescribeDomainResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDomainResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_arn_isSet) {
        obj.insert(QString("DomainArn"), ::OpenAPI::toJsonValue(m_domain_arn));
    }
    if (m_domain_id_isSet) {
        obj.insert(QString("DomainId"), ::OpenAPI::toJsonValue(m_domain_id));
    }
    if (m_domain_name_isSet) {
        obj.insert(QString("DomainName"), ::OpenAPI::toJsonValue(m_domain_name));
    }
    if (m_home_efs_file_system_id_isSet) {
        obj.insert(QString("HomeEfsFileSystemId"), ::OpenAPI::toJsonValue(m_home_efs_file_system_id));
    }
    if (m_single_sign_on_managed_application_instance_id_isSet) {
        obj.insert(QString("SingleSignOnManagedApplicationInstanceId"), ::OpenAPI::toJsonValue(m_single_sign_on_managed_application_instance_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_auth_mode.isSet()) {
        obj.insert(QString("AuthMode"), ::OpenAPI::toJsonValue(m_auth_mode));
    }
    if (m_default_user_settings.isSet()) {
        obj.insert(QString("DefaultUserSettings"), ::OpenAPI::toJsonValue(m_default_user_settings));
    }
    if (m_app_network_access_type.isSet()) {
        obj.insert(QString("AppNetworkAccessType"), ::OpenAPI::toJsonValue(m_app_network_access_type));
    }
    if (m_home_efs_file_system_kms_key_id_isSet) {
        obj.insert(QString("HomeEfsFileSystemKmsKeyId"), ::OpenAPI::toJsonValue(m_home_efs_file_system_kms_key_id));
    }
    if (m_subnet_ids.isSet()) {
        obj.insert(QString("SubnetIds"), ::OpenAPI::toJsonValue(m_subnet_ids));
    }
    if (m_url_isSet) {
        obj.insert(QString("Url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_vpc_id_isSet) {
        obj.insert(QString("VpcId"), ::OpenAPI::toJsonValue(m_vpc_id));
    }
    if (m_kms_key_id_isSet) {
        obj.insert(QString("KmsKeyId"), ::OpenAPI::toJsonValue(m_kms_key_id));
    }
    if (m_domain_settings.isSet()) {
        obj.insert(QString("DomainSettings"), ::OpenAPI::toJsonValue(m_domain_settings));
    }
    if (m_app_security_group_management.isSet()) {
        obj.insert(QString("AppSecurityGroupManagement"), ::OpenAPI::toJsonValue(m_app_security_group_management));
    }
    if (m_security_group_id_for_domain_boundary_isSet) {
        obj.insert(QString("SecurityGroupIdForDomainBoundary"), ::OpenAPI::toJsonValue(m_security_group_id_for_domain_boundary));
    }
    if (m_default_space_settings.isSet()) {
        obj.insert(QString("DefaultSpaceSettings"), ::OpenAPI::toJsonValue(m_default_space_settings));
    }
    return obj;
}

QString OAIDescribeDomainResponse::getDomainArn() const {
    return m_domain_arn;
}
void OAIDescribeDomainResponse::setDomainArn(const QString &domain_arn) {
    m_domain_arn = domain_arn;
    m_domain_arn_isSet = true;
}

bool OAIDescribeDomainResponse::is_domain_arn_Set() const{
    return m_domain_arn_isSet;
}

bool OAIDescribeDomainResponse::is_domain_arn_Valid() const{
    return m_domain_arn_isValid;
}

QString OAIDescribeDomainResponse::getDomainId() const {
    return m_domain_id;
}
void OAIDescribeDomainResponse::setDomainId(const QString &domain_id) {
    m_domain_id = domain_id;
    m_domain_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_domain_id_Set() const{
    return m_domain_id_isSet;
}

bool OAIDescribeDomainResponse::is_domain_id_Valid() const{
    return m_domain_id_isValid;
}

QString OAIDescribeDomainResponse::getDomainName() const {
    return m_domain_name;
}
void OAIDescribeDomainResponse::setDomainName(const QString &domain_name) {
    m_domain_name = domain_name;
    m_domain_name_isSet = true;
}

bool OAIDescribeDomainResponse::is_domain_name_Set() const{
    return m_domain_name_isSet;
}

bool OAIDescribeDomainResponse::is_domain_name_Valid() const{
    return m_domain_name_isValid;
}

QString OAIDescribeDomainResponse::getHomeEfsFileSystemId() const {
    return m_home_efs_file_system_id;
}
void OAIDescribeDomainResponse::setHomeEfsFileSystemId(const QString &home_efs_file_system_id) {
    m_home_efs_file_system_id = home_efs_file_system_id;
    m_home_efs_file_system_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_home_efs_file_system_id_Set() const{
    return m_home_efs_file_system_id_isSet;
}

bool OAIDescribeDomainResponse::is_home_efs_file_system_id_Valid() const{
    return m_home_efs_file_system_id_isValid;
}

QString OAIDescribeDomainResponse::getSingleSignOnManagedApplicationInstanceId() const {
    return m_single_sign_on_managed_application_instance_id;
}
void OAIDescribeDomainResponse::setSingleSignOnManagedApplicationInstanceId(const QString &single_sign_on_managed_application_instance_id) {
    m_single_sign_on_managed_application_instance_id = single_sign_on_managed_application_instance_id;
    m_single_sign_on_managed_application_instance_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_single_sign_on_managed_application_instance_id_Set() const{
    return m_single_sign_on_managed_application_instance_id_isSet;
}

bool OAIDescribeDomainResponse::is_single_sign_on_managed_application_instance_id_Valid() const{
    return m_single_sign_on_managed_application_instance_id_isValid;
}

OAIDomainStatus OAIDescribeDomainResponse::getStatus() const {
    return m_status;
}
void OAIDescribeDomainResponse::setStatus(const OAIDomainStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeDomainResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeDomainResponse::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIDescribeDomainResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeDomainResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeDomainResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeDomainResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeDomainResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeDomainResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeDomainResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeDomainResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIDescribeDomainResponse::getFailureReason() const {
    return m_failure_reason;
}
void OAIDescribeDomainResponse::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIDescribeDomainResponse::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIDescribeDomainResponse::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

OAIAuthMode OAIDescribeDomainResponse::getAuthMode() const {
    return m_auth_mode;
}
void OAIDescribeDomainResponse::setAuthMode(const OAIAuthMode &auth_mode) {
    m_auth_mode = auth_mode;
    m_auth_mode_isSet = true;
}

bool OAIDescribeDomainResponse::is_auth_mode_Set() const{
    return m_auth_mode_isSet;
}

bool OAIDescribeDomainResponse::is_auth_mode_Valid() const{
    return m_auth_mode_isValid;
}

OAIDescribeDomainResponse_DefaultUserSettings OAIDescribeDomainResponse::getDefaultUserSettings() const {
    return m_default_user_settings;
}
void OAIDescribeDomainResponse::setDefaultUserSettings(const OAIDescribeDomainResponse_DefaultUserSettings &default_user_settings) {
    m_default_user_settings = default_user_settings;
    m_default_user_settings_isSet = true;
}

bool OAIDescribeDomainResponse::is_default_user_settings_Set() const{
    return m_default_user_settings_isSet;
}

bool OAIDescribeDomainResponse::is_default_user_settings_Valid() const{
    return m_default_user_settings_isValid;
}

OAIAppNetworkAccessType OAIDescribeDomainResponse::getAppNetworkAccessType() const {
    return m_app_network_access_type;
}
void OAIDescribeDomainResponse::setAppNetworkAccessType(const OAIAppNetworkAccessType &app_network_access_type) {
    m_app_network_access_type = app_network_access_type;
    m_app_network_access_type_isSet = true;
}

bool OAIDescribeDomainResponse::is_app_network_access_type_Set() const{
    return m_app_network_access_type_isSet;
}

bool OAIDescribeDomainResponse::is_app_network_access_type_Valid() const{
    return m_app_network_access_type_isValid;
}

QString OAIDescribeDomainResponse::getHomeEfsFileSystemKmsKeyId() const {
    return m_home_efs_file_system_kms_key_id;
}
void OAIDescribeDomainResponse::setHomeEfsFileSystemKmsKeyId(const QString &home_efs_file_system_kms_key_id) {
    m_home_efs_file_system_kms_key_id = home_efs_file_system_kms_key_id;
    m_home_efs_file_system_kms_key_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_home_efs_file_system_kms_key_id_Set() const{
    return m_home_efs_file_system_kms_key_id_isSet;
}

bool OAIDescribeDomainResponse::is_home_efs_file_system_kms_key_id_Valid() const{
    return m_home_efs_file_system_kms_key_id_isValid;
}

QList OAIDescribeDomainResponse::getSubnetIds() const {
    return m_subnet_ids;
}
void OAIDescribeDomainResponse::setSubnetIds(const QList &subnet_ids) {
    m_subnet_ids = subnet_ids;
    m_subnet_ids_isSet = true;
}

bool OAIDescribeDomainResponse::is_subnet_ids_Set() const{
    return m_subnet_ids_isSet;
}

bool OAIDescribeDomainResponse::is_subnet_ids_Valid() const{
    return m_subnet_ids_isValid;
}

QString OAIDescribeDomainResponse::getUrl() const {
    return m_url;
}
void OAIDescribeDomainResponse::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIDescribeDomainResponse::is_url_Set() const{
    return m_url_isSet;
}

bool OAIDescribeDomainResponse::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIDescribeDomainResponse::getVpcId() const {
    return m_vpc_id;
}
void OAIDescribeDomainResponse::setVpcId(const QString &vpc_id) {
    m_vpc_id = vpc_id;
    m_vpc_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_vpc_id_Set() const{
    return m_vpc_id_isSet;
}

bool OAIDescribeDomainResponse::is_vpc_id_Valid() const{
    return m_vpc_id_isValid;
}

QString OAIDescribeDomainResponse::getKmsKeyId() const {
    return m_kms_key_id;
}
void OAIDescribeDomainResponse::setKmsKeyId(const QString &kms_key_id) {
    m_kms_key_id = kms_key_id;
    m_kms_key_id_isSet = true;
}

bool OAIDescribeDomainResponse::is_kms_key_id_Set() const{
    return m_kms_key_id_isSet;
}

bool OAIDescribeDomainResponse::is_kms_key_id_Valid() const{
    return m_kms_key_id_isValid;
}

OAICreateDomainRequest_DomainSettings OAIDescribeDomainResponse::getDomainSettings() const {
    return m_domain_settings;
}
void OAIDescribeDomainResponse::setDomainSettings(const OAICreateDomainRequest_DomainSettings &domain_settings) {
    m_domain_settings = domain_settings;
    m_domain_settings_isSet = true;
}

bool OAIDescribeDomainResponse::is_domain_settings_Set() const{
    return m_domain_settings_isSet;
}

bool OAIDescribeDomainResponse::is_domain_settings_Valid() const{
    return m_domain_settings_isValid;
}

OAIAppSecurityGroupManagement OAIDescribeDomainResponse::getAppSecurityGroupManagement() const {
    return m_app_security_group_management;
}
void OAIDescribeDomainResponse::setAppSecurityGroupManagement(const OAIAppSecurityGroupManagement &app_security_group_management) {
    m_app_security_group_management = app_security_group_management;
    m_app_security_group_management_isSet = true;
}

bool OAIDescribeDomainResponse::is_app_security_group_management_Set() const{
    return m_app_security_group_management_isSet;
}

bool OAIDescribeDomainResponse::is_app_security_group_management_Valid() const{
    return m_app_security_group_management_isValid;
}

QString OAIDescribeDomainResponse::getSecurityGroupIdForDomainBoundary() const {
    return m_security_group_id_for_domain_boundary;
}
void OAIDescribeDomainResponse::setSecurityGroupIdForDomainBoundary(const QString &security_group_id_for_domain_boundary) {
    m_security_group_id_for_domain_boundary = security_group_id_for_domain_boundary;
    m_security_group_id_for_domain_boundary_isSet = true;
}

bool OAIDescribeDomainResponse::is_security_group_id_for_domain_boundary_Set() const{
    return m_security_group_id_for_domain_boundary_isSet;
}

bool OAIDescribeDomainResponse::is_security_group_id_for_domain_boundary_Valid() const{
    return m_security_group_id_for_domain_boundary_isValid;
}

OAICreateDomainRequest_DefaultSpaceSettings OAIDescribeDomainResponse::getDefaultSpaceSettings() const {
    return m_default_space_settings;
}
void OAIDescribeDomainResponse::setDefaultSpaceSettings(const OAICreateDomainRequest_DefaultSpaceSettings &default_space_settings) {
    m_default_space_settings = default_space_settings;
    m_default_space_settings_isSet = true;
}

bool OAIDescribeDomainResponse::is_default_space_settings_Set() const{
    return m_default_space_settings_isSet;
}

bool OAIDescribeDomainResponse::is_default_space_settings_Valid() const{
    return m_default_space_settings_isValid;
}

bool OAIDescribeDomainResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_efs_file_system_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_single_sign_on_managed_application_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auth_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_user_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_network_access_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_efs_file_system_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_security_group_management.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_id_for_domain_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_space_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDomainResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
