/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabelCounters.h
 *
 * Provides a breakdown of the number of objects labeled.
 */

#ifndef OAILabelCounters_H
#define OAILabelCounters_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILabelCounters : public OAIObject {
public:
    OAILabelCounters();
    OAILabelCounters(QString json);
    ~OAILabelCounters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getTotalLabeled() const;
    void setTotalLabeled(const qint32 &total_labeled);
    bool is_total_labeled_Set() const;
    bool is_total_labeled_Valid() const;

    qint32 getHumanLabeled() const;
    void setHumanLabeled(const qint32 &human_labeled);
    bool is_human_labeled_Set() const;
    bool is_human_labeled_Valid() const;

    qint32 getMachineLabeled() const;
    void setMachineLabeled(const qint32 &machine_labeled);
    bool is_machine_labeled_Set() const;
    bool is_machine_labeled_Valid() const;

    qint32 getFailedNonRetryableError() const;
    void setFailedNonRetryableError(const qint32 &failed_non_retryable_error);
    bool is_failed_non_retryable_error_Set() const;
    bool is_failed_non_retryable_error_Valid() const;

    qint32 getUnlabeled() const;
    void setUnlabeled(const qint32 &unlabeled);
    bool is_unlabeled_Set() const;
    bool is_unlabeled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_total_labeled;
    bool m_total_labeled_isSet;
    bool m_total_labeled_isValid;

    qint32 m_human_labeled;
    bool m_human_labeled_isSet;
    bool m_human_labeled_isValid;

    qint32 m_machine_labeled;
    bool m_machine_labeled_isSet;
    bool m_machine_labeled_isValid;

    qint32 m_failed_non_retryable_error;
    bool m_failed_non_retryable_error_isSet;
    bool m_failed_non_retryable_error_isValid;

    qint32 m_unlabeled;
    bool m_unlabeled_isSet;
    bool m_unlabeled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabelCounters)

#endif // OAILabelCounters_H
