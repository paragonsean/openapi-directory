/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig() {
    this->initializeModel();
}

OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::~OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig() {}

void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::initializeModel() {

    m_schedule_config_isSet = false;
    m_schedule_config_isValid = false;

    m_monitoring_job_definition_isSet = false;
    m_monitoring_job_definition_isValid = false;

    m_monitoring_job_definition_name_isSet = false;
    m_monitoring_job_definition_name_isValid = false;

    m_monitoring_type_isSet = false;
    m_monitoring_type_isValid = false;
}

void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::fromJsonObject(QJsonObject json) {

    m_schedule_config_isValid = ::OpenAPI::fromJsonValue(m_schedule_config, json[QString("ScheduleConfig")]);
    m_schedule_config_isSet = !json[QString("ScheduleConfig")].isNull() && m_schedule_config_isValid;

    m_monitoring_job_definition_isValid = ::OpenAPI::fromJsonValue(m_monitoring_job_definition, json[QString("MonitoringJobDefinition")]);
    m_monitoring_job_definition_isSet = !json[QString("MonitoringJobDefinition")].isNull() && m_monitoring_job_definition_isValid;

    m_monitoring_job_definition_name_isValid = ::OpenAPI::fromJsonValue(m_monitoring_job_definition_name, json[QString("MonitoringJobDefinitionName")]);
    m_monitoring_job_definition_name_isSet = !json[QString("MonitoringJobDefinitionName")].isNull() && m_monitoring_job_definition_name_isValid;

    m_monitoring_type_isValid = ::OpenAPI::fromJsonValue(m_monitoring_type, json[QString("MonitoringType")]);
    m_monitoring_type_isSet = !json[QString("MonitoringType")].isNull() && m_monitoring_type_isValid;
}

QString OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_schedule_config.isSet()) {
        obj.insert(QString("ScheduleConfig"), ::OpenAPI::toJsonValue(m_schedule_config));
    }
    if (m_monitoring_job_definition.isSet()) {
        obj.insert(QString("MonitoringJobDefinition"), ::OpenAPI::toJsonValue(m_monitoring_job_definition));
    }
    if (m_monitoring_job_definition_name_isSet) {
        obj.insert(QString("MonitoringJobDefinitionName"), ::OpenAPI::toJsonValue(m_monitoring_job_definition_name));
    }
    if (m_monitoring_type.isSet()) {
        obj.insert(QString("MonitoringType"), ::OpenAPI::toJsonValue(m_monitoring_type));
    }
    return obj;
}

OAIMonitoringScheduleConfig_ScheduleConfig OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::getScheduleConfig() const {
    return m_schedule_config;
}
void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::setScheduleConfig(const OAIMonitoringScheduleConfig_ScheduleConfig &schedule_config) {
    m_schedule_config = schedule_config;
    m_schedule_config_isSet = true;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_schedule_config_Set() const{
    return m_schedule_config_isSet;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_schedule_config_Valid() const{
    return m_schedule_config_isValid;
}

OAIMonitoringScheduleConfig_MonitoringJobDefinition OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::getMonitoringJobDefinition() const {
    return m_monitoring_job_definition;
}
void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::setMonitoringJobDefinition(const OAIMonitoringScheduleConfig_MonitoringJobDefinition &monitoring_job_definition) {
    m_monitoring_job_definition = monitoring_job_definition;
    m_monitoring_job_definition_isSet = true;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_job_definition_Set() const{
    return m_monitoring_job_definition_isSet;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_job_definition_Valid() const{
    return m_monitoring_job_definition_isValid;
}

QString OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::getMonitoringJobDefinitionName() const {
    return m_monitoring_job_definition_name;
}
void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::setMonitoringJobDefinitionName(const QString &monitoring_job_definition_name) {
    m_monitoring_job_definition_name = monitoring_job_definition_name;
    m_monitoring_job_definition_name_isSet = true;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_job_definition_name_Set() const{
    return m_monitoring_job_definition_name_isSet;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_job_definition_name_Valid() const{
    return m_monitoring_job_definition_name_isValid;
}

OAIMonitoringType OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::getMonitoringType() const {
    return m_monitoring_type;
}
void OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::setMonitoringType(const OAIMonitoringType &monitoring_type) {
    m_monitoring_type = monitoring_type;
    m_monitoring_type_isSet = true;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_type_Set() const{
    return m_monitoring_type_isSet;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::is_monitoring_type_Valid() const{
    return m_monitoring_type_isValid;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schedule_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_job_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_job_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMonitoringScheduleRequest_MonitoringScheduleConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
