/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabelingJobForWorkteamSummary.h
 *
 * Provides summary information for a work team.
 */

#ifndef OAILabelingJobForWorkteamSummary_H
#define OAILabelingJobForWorkteamSummary_H

#include <QJsonObject>

#include "OAILabelingJobForWorkteamSummary_LabelCounters.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabelingJobForWorkteamSummary_LabelCounters;

class OAILabelingJobForWorkteamSummary : public OAIObject {
public:
    OAILabelingJobForWorkteamSummary();
    OAILabelingJobForWorkteamSummary(QString json);
    ~OAILabelingJobForWorkteamSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabelingJobName() const;
    void setLabelingJobName(const QString &labeling_job_name);
    bool is_labeling_job_name_Set() const;
    bool is_labeling_job_name_Valid() const;

    QString getJobReferenceCode() const;
    void setJobReferenceCode(const QString &job_reference_code);
    bool is_job_reference_code_Set() const;
    bool is_job_reference_code_Valid() const;

    QString getWorkRequesterAccountId() const;
    void setWorkRequesterAccountId(const QString &work_requester_account_id);
    bool is_work_requester_account_id_Set() const;
    bool is_work_requester_account_id_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAILabelingJobForWorkteamSummary_LabelCounters getLabelCounters() const;
    void setLabelCounters(const OAILabelingJobForWorkteamSummary_LabelCounters &label_counters);
    bool is_label_counters_Set() const;
    bool is_label_counters_Valid() const;

    qint32 getNumberOfHumanWorkersPerDataObject() const;
    void setNumberOfHumanWorkersPerDataObject(const qint32 &number_of_human_workers_per_data_object);
    bool is_number_of_human_workers_per_data_object_Set() const;
    bool is_number_of_human_workers_per_data_object_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_labeling_job_name;
    bool m_labeling_job_name_isSet;
    bool m_labeling_job_name_isValid;

    QString m_job_reference_code;
    bool m_job_reference_code_isSet;
    bool m_job_reference_code_isValid;

    QString m_work_requester_account_id;
    bool m_work_requester_account_id_isSet;
    bool m_work_requester_account_id_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAILabelingJobForWorkteamSummary_LabelCounters m_label_counters;
    bool m_label_counters_isSet;
    bool m_label_counters_isValid;

    qint32 m_number_of_human_workers_per_data_object;
    bool m_number_of_human_workers_per_data_object_isSet;
    bool m_number_of_human_workers_per_data_object_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabelingJobForWorkteamSummary)

#endif // OAILabelingJobForWorkteamSummary_H
