/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentConfig_BlueGreenUpdatePolicy.h
 *
 * 
 */

#ifndef OAIDeploymentConfig_BlueGreenUpdatePolicy_H
#define OAIDeploymentConfig_BlueGreenUpdatePolicy_H

#include <QJsonObject>

#include "OAIBlueGreenUpdatePolicy_TrafficRoutingConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBlueGreenUpdatePolicy_TrafficRoutingConfiguration;

class OAIDeploymentConfig_BlueGreenUpdatePolicy : public OAIObject {
public:
    OAIDeploymentConfig_BlueGreenUpdatePolicy();
    OAIDeploymentConfig_BlueGreenUpdatePolicy(QString json);
    ~OAIDeploymentConfig_BlueGreenUpdatePolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBlueGreenUpdatePolicy_TrafficRoutingConfiguration getTrafficRoutingConfiguration() const;
    void setTrafficRoutingConfiguration(const OAIBlueGreenUpdatePolicy_TrafficRoutingConfiguration &traffic_routing_configuration);
    bool is_traffic_routing_configuration_Set() const;
    bool is_traffic_routing_configuration_Valid() const;

    qint32 getTerminationWaitInSeconds() const;
    void setTerminationWaitInSeconds(const qint32 &termination_wait_in_seconds);
    bool is_termination_wait_in_seconds_Set() const;
    bool is_termination_wait_in_seconds_Valid() const;

    qint32 getMaximumExecutionTimeoutInSeconds() const;
    void setMaximumExecutionTimeoutInSeconds(const qint32 &maximum_execution_timeout_in_seconds);
    bool is_maximum_execution_timeout_in_seconds_Set() const;
    bool is_maximum_execution_timeout_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBlueGreenUpdatePolicy_TrafficRoutingConfiguration m_traffic_routing_configuration;
    bool m_traffic_routing_configuration_isSet;
    bool m_traffic_routing_configuration_isValid;

    qint32 m_termination_wait_in_seconds;
    bool m_termination_wait_in_seconds_isSet;
    bool m_termination_wait_in_seconds_isValid;

    qint32 m_maximum_execution_timeout_in_seconds;
    bool m_maximum_execution_timeout_in_seconds_isSet;
    bool m_maximum_execution_timeout_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentConfig_BlueGreenUpdatePolicy)

#endif // OAIDeploymentConfig_BlueGreenUpdatePolicy_H
