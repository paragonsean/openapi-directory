/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInferenceRecommendationsJobStep_InferenceBenchmark.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInferenceRecommendationsJobStep_InferenceBenchmark::OAIInferenceRecommendationsJobStep_InferenceBenchmark(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInferenceRecommendationsJobStep_InferenceBenchmark::OAIInferenceRecommendationsJobStep_InferenceBenchmark() {
    this->initializeModel();
}

OAIInferenceRecommendationsJobStep_InferenceBenchmark::~OAIInferenceRecommendationsJobStep_InferenceBenchmark() {}

void OAIInferenceRecommendationsJobStep_InferenceBenchmark::initializeModel() {

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_endpoint_configuration_isSet = false;
    m_endpoint_configuration_isValid = false;

    m_model_configuration_isSet = false;
    m_model_configuration_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_endpoint_metrics_isSet = false;
    m_endpoint_metrics_isValid = false;

    m_invocation_end_time_isSet = false;
    m_invocation_end_time_isValid = false;

    m_invocation_start_time_isSet = false;
    m_invocation_start_time_isValid = false;
}

void OAIInferenceRecommendationsJobStep_InferenceBenchmark::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInferenceRecommendationsJobStep_InferenceBenchmark::fromJsonObject(QJsonObject json) {

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("Metrics")]);
    m_metrics_isSet = !json[QString("Metrics")].isNull() && m_metrics_isValid;

    m_endpoint_configuration_isValid = ::OpenAPI::fromJsonValue(m_endpoint_configuration, json[QString("EndpointConfiguration")]);
    m_endpoint_configuration_isSet = !json[QString("EndpointConfiguration")].isNull() && m_endpoint_configuration_isValid;

    m_model_configuration_isValid = ::OpenAPI::fromJsonValue(m_model_configuration, json[QString("ModelConfiguration")]);
    m_model_configuration_isSet = !json[QString("ModelConfiguration")].isNull() && m_model_configuration_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("FailureReason")]);
    m_failure_reason_isSet = !json[QString("FailureReason")].isNull() && m_failure_reason_isValid;

    m_endpoint_metrics_isValid = ::OpenAPI::fromJsonValue(m_endpoint_metrics, json[QString("EndpointMetrics")]);
    m_endpoint_metrics_isSet = !json[QString("EndpointMetrics")].isNull() && m_endpoint_metrics_isValid;

    m_invocation_end_time_isValid = ::OpenAPI::fromJsonValue(m_invocation_end_time, json[QString("InvocationEndTime")]);
    m_invocation_end_time_isSet = !json[QString("InvocationEndTime")].isNull() && m_invocation_end_time_isValid;

    m_invocation_start_time_isValid = ::OpenAPI::fromJsonValue(m_invocation_start_time, json[QString("InvocationStartTime")]);
    m_invocation_start_time_isSet = !json[QString("InvocationStartTime")].isNull() && m_invocation_start_time_isValid;
}

QString OAIInferenceRecommendationsJobStep_InferenceBenchmark::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInferenceRecommendationsJobStep_InferenceBenchmark::asJsonObject() const {
    QJsonObject obj;
    if (m_metrics.isSet()) {
        obj.insert(QString("Metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_endpoint_configuration.isSet()) {
        obj.insert(QString("EndpointConfiguration"), ::OpenAPI::toJsonValue(m_endpoint_configuration));
    }
    if (m_model_configuration.isSet()) {
        obj.insert(QString("ModelConfiguration"), ::OpenAPI::toJsonValue(m_model_configuration));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("FailureReason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_endpoint_metrics.isSet()) {
        obj.insert(QString("EndpointMetrics"), ::OpenAPI::toJsonValue(m_endpoint_metrics));
    }
    if (m_invocation_end_time_isSet) {
        obj.insert(QString("InvocationEndTime"), ::OpenAPI::toJsonValue(m_invocation_end_time));
    }
    if (m_invocation_start_time_isSet) {
        obj.insert(QString("InvocationStartTime"), ::OpenAPI::toJsonValue(m_invocation_start_time));
    }
    return obj;
}

OAIRecommendationMetrics OAIInferenceRecommendationsJobStep_InferenceBenchmark::getMetrics() const {
    return m_metrics;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setMetrics(const OAIRecommendationMetrics &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_metrics_Valid() const{
    return m_metrics_isValid;
}

OAIEndpointOutputConfiguration OAIInferenceRecommendationsJobStep_InferenceBenchmark::getEndpointConfiguration() const {
    return m_endpoint_configuration;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setEndpointConfiguration(const OAIEndpointOutputConfiguration &endpoint_configuration) {
    m_endpoint_configuration = endpoint_configuration;
    m_endpoint_configuration_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_endpoint_configuration_Set() const{
    return m_endpoint_configuration_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_endpoint_configuration_Valid() const{
    return m_endpoint_configuration_isValid;
}

OAIModelConfiguration OAIInferenceRecommendationsJobStep_InferenceBenchmark::getModelConfiguration() const {
    return m_model_configuration;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setModelConfiguration(const OAIModelConfiguration &model_configuration) {
    m_model_configuration = model_configuration;
    m_model_configuration_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_model_configuration_Set() const{
    return m_model_configuration_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_model_configuration_Valid() const{
    return m_model_configuration_isValid;
}

QString OAIInferenceRecommendationsJobStep_InferenceBenchmark::getFailureReason() const {
    return m_failure_reason;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

OAIInferenceMetrics OAIInferenceRecommendationsJobStep_InferenceBenchmark::getEndpointMetrics() const {
    return m_endpoint_metrics;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setEndpointMetrics(const OAIInferenceMetrics &endpoint_metrics) {
    m_endpoint_metrics = endpoint_metrics;
    m_endpoint_metrics_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_endpoint_metrics_Set() const{
    return m_endpoint_metrics_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_endpoint_metrics_Valid() const{
    return m_endpoint_metrics_isValid;
}

QDateTime OAIInferenceRecommendationsJobStep_InferenceBenchmark::getInvocationEndTime() const {
    return m_invocation_end_time;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setInvocationEndTime(const QDateTime &invocation_end_time) {
    m_invocation_end_time = invocation_end_time;
    m_invocation_end_time_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_invocation_end_time_Set() const{
    return m_invocation_end_time_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_invocation_end_time_Valid() const{
    return m_invocation_end_time_isValid;
}

QDateTime OAIInferenceRecommendationsJobStep_InferenceBenchmark::getInvocationStartTime() const {
    return m_invocation_start_time;
}
void OAIInferenceRecommendationsJobStep_InferenceBenchmark::setInvocationStartTime(const QDateTime &invocation_start_time) {
    m_invocation_start_time = invocation_start_time;
    m_invocation_start_time_isSet = true;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_invocation_start_time_Set() const{
    return m_invocation_start_time_isSet;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::is_invocation_start_time_Valid() const{
    return m_invocation_start_time_isValid;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invocation_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invocation_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInferenceRecommendationsJobStep_InferenceBenchmark::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_model_configuration_isValid && true;
}

} // namespace OpenAPI
