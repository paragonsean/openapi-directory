/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICandidateArtifactLocations.h
 *
 * The location of artifacts for an AutoML candidate job.
 */

#ifndef OAICandidateArtifactLocations_H
#define OAICandidateArtifactLocations_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICandidateArtifactLocations : public OAIObject {
public:
    OAICandidateArtifactLocations();
    OAICandidateArtifactLocations(QString json);
    ~OAICandidateArtifactLocations() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExplainability() const;
    void setExplainability(const QString &explainability);
    bool is_explainability_Set() const;
    bool is_explainability_Valid() const;

    QString getModelInsights() const;
    void setModelInsights(const QString &model_insights);
    bool is_model_insights_Set() const;
    bool is_model_insights_Valid() const;

    QString getBacktestResults() const;
    void setBacktestResults(const QString &backtest_results);
    bool is_backtest_results_Set() const;
    bool is_backtest_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_explainability;
    bool m_explainability_isSet;
    bool m_explainability_isValid;

    QString m_model_insights;
    bool m_model_insights_isSet;
    bool m_model_insights_isValid;

    QString m_backtest_results;
    bool m_backtest_results_isSet;
    bool m_backtest_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICandidateArtifactLocations)

#endif // OAICandidateArtifactLocations_H
