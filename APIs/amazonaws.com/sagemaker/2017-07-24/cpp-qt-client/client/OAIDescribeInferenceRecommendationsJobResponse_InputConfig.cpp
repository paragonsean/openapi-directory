/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeInferenceRecommendationsJobResponse_InputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeInferenceRecommendationsJobResponse_InputConfig::OAIDescribeInferenceRecommendationsJobResponse_InputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeInferenceRecommendationsJobResponse_InputConfig::OAIDescribeInferenceRecommendationsJobResponse_InputConfig() {
    this->initializeModel();
}

OAIDescribeInferenceRecommendationsJobResponse_InputConfig::~OAIDescribeInferenceRecommendationsJobResponse_InputConfig() {}

void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::initializeModel() {

    m_model_package_version_arn_isSet = false;
    m_model_package_version_arn_isValid = false;

    m_job_duration_in_seconds_isSet = false;
    m_job_duration_in_seconds_isValid = false;

    m_traffic_pattern_isSet = false;
    m_traffic_pattern_isValid = false;

    m_resource_limit_isSet = false;
    m_resource_limit_isValid = false;

    m_endpoint_configurations_isSet = false;
    m_endpoint_configurations_isValid = false;

    m_volume_kms_key_id_isSet = false;
    m_volume_kms_key_id_isValid = false;

    m_container_config_isSet = false;
    m_container_config_isValid = false;

    m_endpoints_isSet = false;
    m_endpoints_isValid = false;

    m_vpc_config_isSet = false;
    m_vpc_config_isValid = false;

    m_model_name_isSet = false;
    m_model_name_isValid = false;
}

void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::fromJsonObject(QJsonObject json) {

    m_model_package_version_arn_isValid = ::OpenAPI::fromJsonValue(m_model_package_version_arn, json[QString("ModelPackageVersionArn")]);
    m_model_package_version_arn_isSet = !json[QString("ModelPackageVersionArn")].isNull() && m_model_package_version_arn_isValid;

    m_job_duration_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_job_duration_in_seconds, json[QString("JobDurationInSeconds")]);
    m_job_duration_in_seconds_isSet = !json[QString("JobDurationInSeconds")].isNull() && m_job_duration_in_seconds_isValid;

    m_traffic_pattern_isValid = ::OpenAPI::fromJsonValue(m_traffic_pattern, json[QString("TrafficPattern")]);
    m_traffic_pattern_isSet = !json[QString("TrafficPattern")].isNull() && m_traffic_pattern_isValid;

    m_resource_limit_isValid = ::OpenAPI::fromJsonValue(m_resource_limit, json[QString("ResourceLimit")]);
    m_resource_limit_isSet = !json[QString("ResourceLimit")].isNull() && m_resource_limit_isValid;

    m_endpoint_configurations_isValid = ::OpenAPI::fromJsonValue(m_endpoint_configurations, json[QString("EndpointConfigurations")]);
    m_endpoint_configurations_isSet = !json[QString("EndpointConfigurations")].isNull() && m_endpoint_configurations_isValid;

    m_volume_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_volume_kms_key_id, json[QString("VolumeKmsKeyId")]);
    m_volume_kms_key_id_isSet = !json[QString("VolumeKmsKeyId")].isNull() && m_volume_kms_key_id_isValid;

    m_container_config_isValid = ::OpenAPI::fromJsonValue(m_container_config, json[QString("ContainerConfig")]);
    m_container_config_isSet = !json[QString("ContainerConfig")].isNull() && m_container_config_isValid;

    m_endpoints_isValid = ::OpenAPI::fromJsonValue(m_endpoints, json[QString("Endpoints")]);
    m_endpoints_isSet = !json[QString("Endpoints")].isNull() && m_endpoints_isValid;

    m_vpc_config_isValid = ::OpenAPI::fromJsonValue(m_vpc_config, json[QString("VpcConfig")]);
    m_vpc_config_isSet = !json[QString("VpcConfig")].isNull() && m_vpc_config_isValid;

    m_model_name_isValid = ::OpenAPI::fromJsonValue(m_model_name, json[QString("ModelName")]);
    m_model_name_isSet = !json[QString("ModelName")].isNull() && m_model_name_isValid;
}

QString OAIDescribeInferenceRecommendationsJobResponse_InputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeInferenceRecommendationsJobResponse_InputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_model_package_version_arn_isSet) {
        obj.insert(QString("ModelPackageVersionArn"), ::OpenAPI::toJsonValue(m_model_package_version_arn));
    }
    if (m_job_duration_in_seconds_isSet) {
        obj.insert(QString("JobDurationInSeconds"), ::OpenAPI::toJsonValue(m_job_duration_in_seconds));
    }
    if (m_traffic_pattern.isSet()) {
        obj.insert(QString("TrafficPattern"), ::OpenAPI::toJsonValue(m_traffic_pattern));
    }
    if (m_resource_limit.isSet()) {
        obj.insert(QString("ResourceLimit"), ::OpenAPI::toJsonValue(m_resource_limit));
    }
    if (m_endpoint_configurations.isSet()) {
        obj.insert(QString("EndpointConfigurations"), ::OpenAPI::toJsonValue(m_endpoint_configurations));
    }
    if (m_volume_kms_key_id_isSet) {
        obj.insert(QString("VolumeKmsKeyId"), ::OpenAPI::toJsonValue(m_volume_kms_key_id));
    }
    if (m_container_config.isSet()) {
        obj.insert(QString("ContainerConfig"), ::OpenAPI::toJsonValue(m_container_config));
    }
    if (m_endpoints.isSet()) {
        obj.insert(QString("Endpoints"), ::OpenAPI::toJsonValue(m_endpoints));
    }
    if (m_vpc_config.isSet()) {
        obj.insert(QString("VpcConfig"), ::OpenAPI::toJsonValue(m_vpc_config));
    }
    if (m_model_name_isSet) {
        obj.insert(QString("ModelName"), ::OpenAPI::toJsonValue(m_model_name));
    }
    return obj;
}

QString OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getModelPackageVersionArn() const {
    return m_model_package_version_arn;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setModelPackageVersionArn(const QString &model_package_version_arn) {
    m_model_package_version_arn = model_package_version_arn;
    m_model_package_version_arn_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_model_package_version_arn_Set() const{
    return m_model_package_version_arn_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_model_package_version_arn_Valid() const{
    return m_model_package_version_arn_isValid;
}

qint32 OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getJobDurationInSeconds() const {
    return m_job_duration_in_seconds;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setJobDurationInSeconds(const qint32 &job_duration_in_seconds) {
    m_job_duration_in_seconds = job_duration_in_seconds;
    m_job_duration_in_seconds_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_job_duration_in_seconds_Set() const{
    return m_job_duration_in_seconds_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_job_duration_in_seconds_Valid() const{
    return m_job_duration_in_seconds_isValid;
}

OAIRecommendationJobInputConfig_TrafficPattern OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getTrafficPattern() const {
    return m_traffic_pattern;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setTrafficPattern(const OAIRecommendationJobInputConfig_TrafficPattern &traffic_pattern) {
    m_traffic_pattern = traffic_pattern;
    m_traffic_pattern_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_traffic_pattern_Set() const{
    return m_traffic_pattern_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_traffic_pattern_Valid() const{
    return m_traffic_pattern_isValid;
}

OAIRecommendationJobInputConfig_ResourceLimit OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getResourceLimit() const {
    return m_resource_limit;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setResourceLimit(const OAIRecommendationJobInputConfig_ResourceLimit &resource_limit) {
    m_resource_limit = resource_limit;
    m_resource_limit_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_resource_limit_Set() const{
    return m_resource_limit_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_resource_limit_Valid() const{
    return m_resource_limit_isValid;
}

QList OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getEndpointConfigurations() const {
    return m_endpoint_configurations;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setEndpointConfigurations(const QList &endpoint_configurations) {
    m_endpoint_configurations = endpoint_configurations;
    m_endpoint_configurations_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_endpoint_configurations_Set() const{
    return m_endpoint_configurations_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_endpoint_configurations_Valid() const{
    return m_endpoint_configurations_isValid;
}

QString OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getVolumeKmsKeyId() const {
    return m_volume_kms_key_id;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setVolumeKmsKeyId(const QString &volume_kms_key_id) {
    m_volume_kms_key_id = volume_kms_key_id;
    m_volume_kms_key_id_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_volume_kms_key_id_Set() const{
    return m_volume_kms_key_id_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_volume_kms_key_id_Valid() const{
    return m_volume_kms_key_id_isValid;
}

OAIRecommendationJobInputConfig_ContainerConfig OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getContainerConfig() const {
    return m_container_config;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setContainerConfig(const OAIRecommendationJobInputConfig_ContainerConfig &container_config) {
    m_container_config = container_config;
    m_container_config_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_container_config_Set() const{
    return m_container_config_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_container_config_Valid() const{
    return m_container_config_isValid;
}

QList OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getEndpoints() const {
    return m_endpoints;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setEndpoints(const QList &endpoints) {
    m_endpoints = endpoints;
    m_endpoints_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_endpoints_Set() const{
    return m_endpoints_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_endpoints_Valid() const{
    return m_endpoints_isValid;
}

OAIRecommendationJobInputConfig_VpcConfig OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getVpcConfig() const {
    return m_vpc_config;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setVpcConfig(const OAIRecommendationJobInputConfig_VpcConfig &vpc_config) {
    m_vpc_config = vpc_config;
    m_vpc_config_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_vpc_config_Set() const{
    return m_vpc_config_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_vpc_config_Valid() const{
    return m_vpc_config_isValid;
}

QString OAIDescribeInferenceRecommendationsJobResponse_InputConfig::getModelName() const {
    return m_model_name;
}
void OAIDescribeInferenceRecommendationsJobResponse_InputConfig::setModelName(const QString &model_name) {
    m_model_name = model_name;
    m_model_name_isSet = true;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_model_name_Set() const{
    return m_model_name_isSet;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::is_model_name_Valid() const{
    return m_model_name_isValid;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_package_version_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_duration_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traffic_pattern.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_limit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_configurations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_volume_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeInferenceRecommendationsJobResponse_InputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
