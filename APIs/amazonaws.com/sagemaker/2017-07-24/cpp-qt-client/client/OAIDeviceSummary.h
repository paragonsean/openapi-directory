/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceSummary.h
 *
 * Summary of the device.
 */

#ifndef OAIDeviceSummary_H
#define OAIDeviceSummary_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceSummary : public OAIObject {
public:
    OAIDeviceSummary();
    OAIDeviceSummary(QString json);
    ~OAIDeviceSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    QString getDeviceArn() const;
    void setDeviceArn(const QString &device_arn);
    bool is_device_arn_Set() const;
    bool is_device_arn_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDeviceFleetName() const;
    void setDeviceFleetName(const QString &device_fleet_name);
    bool is_device_fleet_name_Set() const;
    bool is_device_fleet_name_Valid() const;

    QString getIotThingName() const;
    void setIotThingName(const QString &iot_thing_name);
    bool is_iot_thing_name_Set() const;
    bool is_iot_thing_name_Valid() const;

    QDateTime getRegistrationTime() const;
    void setRegistrationTime(const QDateTime &registration_time);
    bool is_registration_time_Set() const;
    bool is_registration_time_Valid() const;

    QDateTime getLatestHeartbeat() const;
    void setLatestHeartbeat(const QDateTime &latest_heartbeat);
    bool is_latest_heartbeat_Set() const;
    bool is_latest_heartbeat_Valid() const;

    QList getModels() const;
    void setModels(const QList &models);
    bool is_models_Set() const;
    bool is_models_Valid() const;

    QString getAgentVersion() const;
    void setAgentVersion(const QString &agent_version);
    bool is_agent_version_Set() const;
    bool is_agent_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    QString m_device_arn;
    bool m_device_arn_isSet;
    bool m_device_arn_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_device_fleet_name;
    bool m_device_fleet_name_isSet;
    bool m_device_fleet_name_isValid;

    QString m_iot_thing_name;
    bool m_iot_thing_name_isSet;
    bool m_iot_thing_name_isValid;

    QDateTime m_registration_time;
    bool m_registration_time_isSet;
    bool m_registration_time_isValid;

    QDateTime m_latest_heartbeat;
    bool m_latest_heartbeat_isSet;
    bool m_latest_heartbeat_isValid;

    QList m_models;
    bool m_models_isSet;
    bool m_models_isValid;

    QString m_agent_version;
    bool m_agent_version_isSet;
    bool m_agent_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceSummary)

#endif // OAIDeviceSummary_H
