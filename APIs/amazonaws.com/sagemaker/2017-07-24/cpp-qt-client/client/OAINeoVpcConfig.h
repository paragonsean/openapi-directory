/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINeoVpcConfig.h
 *
 * The &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VpcConfig.html\&quot;&gt;VpcConfig&lt;/a&gt; configuration object that specifies the VPC that you want the compilation jobs to connect to. For more information on controlling access to your Amazon S3 buckets used for compilation job, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/neo-vpc.html\&quot;&gt;Give Amazon SageMaker Compilation Jobs Access to Resources in Your Amazon VPC&lt;/a&gt;.
 */

#ifndef OAINeoVpcConfig_H
#define OAINeoVpcConfig_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINeoVpcConfig : public OAIObject {
public:
    OAINeoVpcConfig();
    OAINeoVpcConfig(QString json);
    ~OAINeoVpcConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSecurityGroupIds() const;
    void setSecurityGroupIds(const QList &security_group_ids);
    bool is_security_group_ids_Set() const;
    bool is_security_group_ids_Valid() const;

    QList getSubnets() const;
    void setSubnets(const QList &subnets);
    bool is_subnets_Set() const;
    bool is_subnets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_security_group_ids;
    bool m_security_group_ids_isSet;
    bool m_security_group_ids_isValid;

    QList m_subnets;
    bool m_subnets_isSet;
    bool m_subnets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINeoVpcConfig)

#endif // OAINeoVpcConfig_H
