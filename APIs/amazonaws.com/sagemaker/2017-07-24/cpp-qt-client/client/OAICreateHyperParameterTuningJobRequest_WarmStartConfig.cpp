/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHyperParameterTuningJobRequest_WarmStartConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHyperParameterTuningJobRequest_WarmStartConfig::OAICreateHyperParameterTuningJobRequest_WarmStartConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHyperParameterTuningJobRequest_WarmStartConfig::OAICreateHyperParameterTuningJobRequest_WarmStartConfig() {
    this->initializeModel();
}

OAICreateHyperParameterTuningJobRequest_WarmStartConfig::~OAICreateHyperParameterTuningJobRequest_WarmStartConfig() {}

void OAICreateHyperParameterTuningJobRequest_WarmStartConfig::initializeModel() {

    m_parent_hyper_parameter_tuning_jobs_isSet = false;
    m_parent_hyper_parameter_tuning_jobs_isValid = false;

    m_warm_start_type_isSet = false;
    m_warm_start_type_isValid = false;
}

void OAICreateHyperParameterTuningJobRequest_WarmStartConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHyperParameterTuningJobRequest_WarmStartConfig::fromJsonObject(QJsonObject json) {

    m_parent_hyper_parameter_tuning_jobs_isValid = ::OpenAPI::fromJsonValue(m_parent_hyper_parameter_tuning_jobs, json[QString("ParentHyperParameterTuningJobs")]);
    m_parent_hyper_parameter_tuning_jobs_isSet = !json[QString("ParentHyperParameterTuningJobs")].isNull() && m_parent_hyper_parameter_tuning_jobs_isValid;

    m_warm_start_type_isValid = ::OpenAPI::fromJsonValue(m_warm_start_type, json[QString("WarmStartType")]);
    m_warm_start_type_isSet = !json[QString("WarmStartType")].isNull() && m_warm_start_type_isValid;
}

QString OAICreateHyperParameterTuningJobRequest_WarmStartConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHyperParameterTuningJobRequest_WarmStartConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_hyper_parameter_tuning_jobs.isSet()) {
        obj.insert(QString("ParentHyperParameterTuningJobs"), ::OpenAPI::toJsonValue(m_parent_hyper_parameter_tuning_jobs));
    }
    if (m_warm_start_type.isSet()) {
        obj.insert(QString("WarmStartType"), ::OpenAPI::toJsonValue(m_warm_start_type));
    }
    return obj;
}

QList OAICreateHyperParameterTuningJobRequest_WarmStartConfig::getParentHyperParameterTuningJobs() const {
    return m_parent_hyper_parameter_tuning_jobs;
}
void OAICreateHyperParameterTuningJobRequest_WarmStartConfig::setParentHyperParameterTuningJobs(const QList &parent_hyper_parameter_tuning_jobs) {
    m_parent_hyper_parameter_tuning_jobs = parent_hyper_parameter_tuning_jobs;
    m_parent_hyper_parameter_tuning_jobs_isSet = true;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::is_parent_hyper_parameter_tuning_jobs_Set() const{
    return m_parent_hyper_parameter_tuning_jobs_isSet;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::is_parent_hyper_parameter_tuning_jobs_Valid() const{
    return m_parent_hyper_parameter_tuning_jobs_isValid;
}

OAIHyperParameterTuningJobWarmStartType OAICreateHyperParameterTuningJobRequest_WarmStartConfig::getWarmStartType() const {
    return m_warm_start_type;
}
void OAICreateHyperParameterTuningJobRequest_WarmStartConfig::setWarmStartType(const OAIHyperParameterTuningJobWarmStartType &warm_start_type) {
    m_warm_start_type = warm_start_type;
    m_warm_start_type_isSet = true;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::is_warm_start_type_Set() const{
    return m_warm_start_type_isSet;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::is_warm_start_type_Valid() const{
    return m_warm_start_type_isValid;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_hyper_parameter_tuning_jobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_warm_start_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHyperParameterTuningJobRequest_WarmStartConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_parent_hyper_parameter_tuning_jobs_isValid && m_warm_start_type_isValid && true;
}

} // namespace OpenAPI
