/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpointInputConfiguration.h
 *
 * The endpoint configuration for the load test.
 */

#ifndef OAIEndpointInputConfiguration_H
#define OAIEndpointInputConfiguration_H

#include <QJsonObject>

#include "OAIEndpointInputConfiguration_EnvironmentParameterRanges.h"
#include "OAIProductionVariantInstanceType.h"
#include "OAIProductionVariantServerlessConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEndpointInputConfiguration_EnvironmentParameterRanges;
class OAIProductionVariantServerlessConfig;

class OAIEndpointInputConfiguration : public OAIObject {
public:
    OAIEndpointInputConfiguration();
    OAIEndpointInputConfiguration(QString json);
    ~OAIEndpointInputConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProductionVariantInstanceType getInstanceType() const;
    void setInstanceType(const OAIProductionVariantInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getInferenceSpecificationName() const;
    void setInferenceSpecificationName(const QString &inference_specification_name);
    bool is_inference_specification_name_Set() const;
    bool is_inference_specification_name_Valid() const;

    OAIEndpointInputConfiguration_EnvironmentParameterRanges getEnvironmentParameterRanges() const;
    void setEnvironmentParameterRanges(const OAIEndpointInputConfiguration_EnvironmentParameterRanges &environment_parameter_ranges);
    bool is_environment_parameter_ranges_Set() const;
    bool is_environment_parameter_ranges_Valid() const;

    OAIProductionVariantServerlessConfig getServerlessConfig() const;
    void setServerlessConfig(const OAIProductionVariantServerlessConfig &serverless_config);
    bool is_serverless_config_Set() const;
    bool is_serverless_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProductionVariantInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_inference_specification_name;
    bool m_inference_specification_name_isSet;
    bool m_inference_specification_name_isValid;

    OAIEndpointInputConfiguration_EnvironmentParameterRanges m_environment_parameter_ranges;
    bool m_environment_parameter_ranges_isSet;
    bool m_environment_parameter_ranges_isValid;

    OAIProductionVariantServerlessConfig m_serverless_config;
    bool m_serverless_config_isSet;
    bool m_serverless_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpointInputConfiguration)

#endif // OAIEndpointInputConfiguration_H
