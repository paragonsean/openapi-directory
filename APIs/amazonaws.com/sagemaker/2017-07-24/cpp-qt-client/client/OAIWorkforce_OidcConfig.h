/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkforce_OidcConfig.h
 *
 * 
 */

#ifndef OAIWorkforce_OidcConfig_H
#define OAIWorkforce_OidcConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWorkforce_OidcConfig : public OAIObject {
public:
    OAIWorkforce_OidcConfig();
    OAIWorkforce_OidcConfig(QString json);
    ~OAIWorkforce_OidcConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getAuthorizationEndpoint() const;
    void setAuthorizationEndpoint(const QString &authorization_endpoint);
    bool is_authorization_endpoint_Set() const;
    bool is_authorization_endpoint_Valid() const;

    QString getTokenEndpoint() const;
    void setTokenEndpoint(const QString &token_endpoint);
    bool is_token_endpoint_Set() const;
    bool is_token_endpoint_Valid() const;

    QString getUserInfoEndpoint() const;
    void setUserInfoEndpoint(const QString &user_info_endpoint);
    bool is_user_info_endpoint_Set() const;
    bool is_user_info_endpoint_Valid() const;

    QString getLogoutEndpoint() const;
    void setLogoutEndpoint(const QString &logout_endpoint);
    bool is_logout_endpoint_Set() const;
    bool is_logout_endpoint_Valid() const;

    QString getJwksUri() const;
    void setJwksUri(const QString &jwks_uri);
    bool is_jwks_uri_Set() const;
    bool is_jwks_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_authorization_endpoint;
    bool m_authorization_endpoint_isSet;
    bool m_authorization_endpoint_isValid;

    QString m_token_endpoint;
    bool m_token_endpoint_isSet;
    bool m_token_endpoint_isValid;

    QString m_user_info_endpoint;
    bool m_user_info_endpoint_isSet;
    bool m_user_info_endpoint_isValid;

    QString m_logout_endpoint;
    bool m_logout_endpoint_isSet;
    bool m_logout_endpoint_isValid;

    QString m_jwks_uri;
    bool m_jwks_uri_isSet;
    bool m_jwks_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkforce_OidcConfig)

#endif // OAIWorkforce_OidcConfig_H
