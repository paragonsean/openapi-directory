/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHyperParameterTuningJobSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHyperParameterTuningJobSummary::OAIHyperParameterTuningJobSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHyperParameterTuningJobSummary::OAIHyperParameterTuningJobSummary() {
    this->initializeModel();
}

OAIHyperParameterTuningJobSummary::~OAIHyperParameterTuningJobSummary() {}

void OAIHyperParameterTuningJobSummary::initializeModel() {

    m_hyper_parameter_tuning_job_name_isSet = false;
    m_hyper_parameter_tuning_job_name_isValid = false;

    m_hyper_parameter_tuning_job_arn_isSet = false;
    m_hyper_parameter_tuning_job_arn_isValid = false;

    m_hyper_parameter_tuning_job_status_isSet = false;
    m_hyper_parameter_tuning_job_status_isValid = false;

    m_strategy_isSet = false;
    m_strategy_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_hyper_parameter_tuning_end_time_isSet = false;
    m_hyper_parameter_tuning_end_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_training_job_status_counters_isSet = false;
    m_training_job_status_counters_isValid = false;

    m_objective_status_counters_isSet = false;
    m_objective_status_counters_isValid = false;

    m_resource_limits_isSet = false;
    m_resource_limits_isValid = false;
}

void OAIHyperParameterTuningJobSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHyperParameterTuningJobSummary::fromJsonObject(QJsonObject json) {

    m_hyper_parameter_tuning_job_name_isValid = ::OpenAPI::fromJsonValue(m_hyper_parameter_tuning_job_name, json[QString("HyperParameterTuningJobName")]);
    m_hyper_parameter_tuning_job_name_isSet = !json[QString("HyperParameterTuningJobName")].isNull() && m_hyper_parameter_tuning_job_name_isValid;

    m_hyper_parameter_tuning_job_arn_isValid = ::OpenAPI::fromJsonValue(m_hyper_parameter_tuning_job_arn, json[QString("HyperParameterTuningJobArn")]);
    m_hyper_parameter_tuning_job_arn_isSet = !json[QString("HyperParameterTuningJobArn")].isNull() && m_hyper_parameter_tuning_job_arn_isValid;

    m_hyper_parameter_tuning_job_status_isValid = ::OpenAPI::fromJsonValue(m_hyper_parameter_tuning_job_status, json[QString("HyperParameterTuningJobStatus")]);
    m_hyper_parameter_tuning_job_status_isSet = !json[QString("HyperParameterTuningJobStatus")].isNull() && m_hyper_parameter_tuning_job_status_isValid;

    m_strategy_isValid = ::OpenAPI::fromJsonValue(m_strategy, json[QString("Strategy")]);
    m_strategy_isSet = !json[QString("Strategy")].isNull() && m_strategy_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_hyper_parameter_tuning_end_time_isValid = ::OpenAPI::fromJsonValue(m_hyper_parameter_tuning_end_time, json[QString("HyperParameterTuningEndTime")]);
    m_hyper_parameter_tuning_end_time_isSet = !json[QString("HyperParameterTuningEndTime")].isNull() && m_hyper_parameter_tuning_end_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_training_job_status_counters_isValid = ::OpenAPI::fromJsonValue(m_training_job_status_counters, json[QString("TrainingJobStatusCounters")]);
    m_training_job_status_counters_isSet = !json[QString("TrainingJobStatusCounters")].isNull() && m_training_job_status_counters_isValid;

    m_objective_status_counters_isValid = ::OpenAPI::fromJsonValue(m_objective_status_counters, json[QString("ObjectiveStatusCounters")]);
    m_objective_status_counters_isSet = !json[QString("ObjectiveStatusCounters")].isNull() && m_objective_status_counters_isValid;

    m_resource_limits_isValid = ::OpenAPI::fromJsonValue(m_resource_limits, json[QString("ResourceLimits")]);
    m_resource_limits_isSet = !json[QString("ResourceLimits")].isNull() && m_resource_limits_isValid;
}

QString OAIHyperParameterTuningJobSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHyperParameterTuningJobSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_hyper_parameter_tuning_job_name_isSet) {
        obj.insert(QString("HyperParameterTuningJobName"), ::OpenAPI::toJsonValue(m_hyper_parameter_tuning_job_name));
    }
    if (m_hyper_parameter_tuning_job_arn_isSet) {
        obj.insert(QString("HyperParameterTuningJobArn"), ::OpenAPI::toJsonValue(m_hyper_parameter_tuning_job_arn));
    }
    if (m_hyper_parameter_tuning_job_status.isSet()) {
        obj.insert(QString("HyperParameterTuningJobStatus"), ::OpenAPI::toJsonValue(m_hyper_parameter_tuning_job_status));
    }
    if (m_strategy.isSet()) {
        obj.insert(QString("Strategy"), ::OpenAPI::toJsonValue(m_strategy));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_hyper_parameter_tuning_end_time_isSet) {
        obj.insert(QString("HyperParameterTuningEndTime"), ::OpenAPI::toJsonValue(m_hyper_parameter_tuning_end_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_training_job_status_counters.isSet()) {
        obj.insert(QString("TrainingJobStatusCounters"), ::OpenAPI::toJsonValue(m_training_job_status_counters));
    }
    if (m_objective_status_counters.isSet()) {
        obj.insert(QString("ObjectiveStatusCounters"), ::OpenAPI::toJsonValue(m_objective_status_counters));
    }
    if (m_resource_limits.isSet()) {
        obj.insert(QString("ResourceLimits"), ::OpenAPI::toJsonValue(m_resource_limits));
    }
    return obj;
}

QString OAIHyperParameterTuningJobSummary::getHyperParameterTuningJobName() const {
    return m_hyper_parameter_tuning_job_name;
}
void OAIHyperParameterTuningJobSummary::setHyperParameterTuningJobName(const QString &hyper_parameter_tuning_job_name) {
    m_hyper_parameter_tuning_job_name = hyper_parameter_tuning_job_name;
    m_hyper_parameter_tuning_job_name_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_name_Set() const{
    return m_hyper_parameter_tuning_job_name_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_name_Valid() const{
    return m_hyper_parameter_tuning_job_name_isValid;
}

QString OAIHyperParameterTuningJobSummary::getHyperParameterTuningJobArn() const {
    return m_hyper_parameter_tuning_job_arn;
}
void OAIHyperParameterTuningJobSummary::setHyperParameterTuningJobArn(const QString &hyper_parameter_tuning_job_arn) {
    m_hyper_parameter_tuning_job_arn = hyper_parameter_tuning_job_arn;
    m_hyper_parameter_tuning_job_arn_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_arn_Set() const{
    return m_hyper_parameter_tuning_job_arn_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_arn_Valid() const{
    return m_hyper_parameter_tuning_job_arn_isValid;
}

OAIHyperParameterTuningJobStatus OAIHyperParameterTuningJobSummary::getHyperParameterTuningJobStatus() const {
    return m_hyper_parameter_tuning_job_status;
}
void OAIHyperParameterTuningJobSummary::setHyperParameterTuningJobStatus(const OAIHyperParameterTuningJobStatus &hyper_parameter_tuning_job_status) {
    m_hyper_parameter_tuning_job_status = hyper_parameter_tuning_job_status;
    m_hyper_parameter_tuning_job_status_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_status_Set() const{
    return m_hyper_parameter_tuning_job_status_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_job_status_Valid() const{
    return m_hyper_parameter_tuning_job_status_isValid;
}

OAIHyperParameterTuningJobStrategyType OAIHyperParameterTuningJobSummary::getStrategy() const {
    return m_strategy;
}
void OAIHyperParameterTuningJobSummary::setStrategy(const OAIHyperParameterTuningJobStrategyType &strategy) {
    m_strategy = strategy;
    m_strategy_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_strategy_Set() const{
    return m_strategy_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_strategy_Valid() const{
    return m_strategy_isValid;
}

QDateTime OAIHyperParameterTuningJobSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIHyperParameterTuningJobSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIHyperParameterTuningJobSummary::getHyperParameterTuningEndTime() const {
    return m_hyper_parameter_tuning_end_time;
}
void OAIHyperParameterTuningJobSummary::setHyperParameterTuningEndTime(const QDateTime &hyper_parameter_tuning_end_time) {
    m_hyper_parameter_tuning_end_time = hyper_parameter_tuning_end_time;
    m_hyper_parameter_tuning_end_time_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_end_time_Set() const{
    return m_hyper_parameter_tuning_end_time_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_hyper_parameter_tuning_end_time_Valid() const{
    return m_hyper_parameter_tuning_end_time_isValid;
}

QDateTime OAIHyperParameterTuningJobSummary::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIHyperParameterTuningJobSummary::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIHyperParameterTuningJobSummary_TrainingJobStatusCounters OAIHyperParameterTuningJobSummary::getTrainingJobStatusCounters() const {
    return m_training_job_status_counters;
}
void OAIHyperParameterTuningJobSummary::setTrainingJobStatusCounters(const OAIHyperParameterTuningJobSummary_TrainingJobStatusCounters &training_job_status_counters) {
    m_training_job_status_counters = training_job_status_counters;
    m_training_job_status_counters_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_training_job_status_counters_Set() const{
    return m_training_job_status_counters_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_training_job_status_counters_Valid() const{
    return m_training_job_status_counters_isValid;
}

OAIHyperParameterTuningJobSummary_ObjectiveStatusCounters OAIHyperParameterTuningJobSummary::getObjectiveStatusCounters() const {
    return m_objective_status_counters;
}
void OAIHyperParameterTuningJobSummary::setObjectiveStatusCounters(const OAIHyperParameterTuningJobSummary_ObjectiveStatusCounters &objective_status_counters) {
    m_objective_status_counters = objective_status_counters;
    m_objective_status_counters_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_objective_status_counters_Set() const{
    return m_objective_status_counters_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_objective_status_counters_Valid() const{
    return m_objective_status_counters_isValid;
}

OAIHyperParameterTuningJobSummary_ResourceLimits OAIHyperParameterTuningJobSummary::getResourceLimits() const {
    return m_resource_limits;
}
void OAIHyperParameterTuningJobSummary::setResourceLimits(const OAIHyperParameterTuningJobSummary_ResourceLimits &resource_limits) {
    m_resource_limits = resource_limits;
    m_resource_limits_isSet = true;
}

bool OAIHyperParameterTuningJobSummary::is_resource_limits_Set() const{
    return m_resource_limits_isSet;
}

bool OAIHyperParameterTuningJobSummary::is_resource_limits_Valid() const{
    return m_resource_limits_isValid;
}

bool OAIHyperParameterTuningJobSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hyper_parameter_tuning_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hyper_parameter_tuning_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hyper_parameter_tuning_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hyper_parameter_tuning_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_job_status_counters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_objective_status_counters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHyperParameterTuningJobSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hyper_parameter_tuning_job_name_isValid && m_hyper_parameter_tuning_job_arn_isValid && m_hyper_parameter_tuning_job_status_isValid && m_strategy_isValid && m_creation_time_isValid && m_training_job_status_counters_isValid && m_objective_status_counters_isValid && true;
}

} // namespace OpenAPI
