/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeNotebookInstanceOutput.h
 *
 * 
 */

#ifndef OAIDescribeNotebookInstanceOutput_H
#define OAIDescribeNotebookInstanceOutput_H

#include <QJsonObject>

#include "OAICreateNotebookInstanceInput_InstanceMetadataServiceConfiguration.h"
#include "OAIDirectInternetAccess.h"
#include "OAIInstanceType.h"
#include "OAINotebookInstanceStatus.h"
#include "OAIRootAccess.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateNotebookInstanceInput_InstanceMetadataServiceConfiguration;

class OAIDescribeNotebookInstanceOutput : public OAIObject {
public:
    OAIDescribeNotebookInstanceOutput();
    OAIDescribeNotebookInstanceOutput(QString json);
    ~OAIDescribeNotebookInstanceOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNotebookInstanceArn() const;
    void setNotebookInstanceArn(const QString &notebook_instance_arn);
    bool is_notebook_instance_arn_Set() const;
    bool is_notebook_instance_arn_Valid() const;

    QString getNotebookInstanceName() const;
    void setNotebookInstanceName(const QString &notebook_instance_name);
    bool is_notebook_instance_name_Set() const;
    bool is_notebook_instance_name_Valid() const;

    OAINotebookInstanceStatus getNotebookInstanceStatus() const;
    void setNotebookInstanceStatus(const OAINotebookInstanceStatus &notebook_instance_status);
    bool is_notebook_instance_status_Set() const;
    bool is_notebook_instance_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    OAIInstanceType getInstanceType() const;
    void setInstanceType(const OAIInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QList getSecurityGroups() const;
    void setSecurityGroups(const QList &security_groups);
    bool is_security_groups_Set() const;
    bool is_security_groups_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getNetworkInterfaceId() const;
    void setNetworkInterfaceId(const QString &network_interface_id);
    bool is_network_interface_id_Set() const;
    bool is_network_interface_id_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getNotebookInstanceLifecycleConfigName() const;
    void setNotebookInstanceLifecycleConfigName(const QString &notebook_instance_lifecycle_config_name);
    bool is_notebook_instance_lifecycle_config_name_Set() const;
    bool is_notebook_instance_lifecycle_config_name_Valid() const;

    OAIDirectInternetAccess getDirectInternetAccess() const;
    void setDirectInternetAccess(const OAIDirectInternetAccess &direct_internet_access);
    bool is_direct_internet_access_Set() const;
    bool is_direct_internet_access_Valid() const;

    qint32 getVolumeSizeInGb() const;
    void setVolumeSizeInGb(const qint32 &volume_size_in_gb);
    bool is_volume_size_in_gb_Set() const;
    bool is_volume_size_in_gb_Valid() const;

    QList getAcceleratorTypes() const;
    void setAcceleratorTypes(const QList &accelerator_types);
    bool is_accelerator_types_Set() const;
    bool is_accelerator_types_Valid() const;

    QString getDefaultCodeRepository() const;
    void setDefaultCodeRepository(const QString &default_code_repository);
    bool is_default_code_repository_Set() const;
    bool is_default_code_repository_Valid() const;

    QList getAdditionalCodeRepositories() const;
    void setAdditionalCodeRepositories(const QList &additional_code_repositories);
    bool is_additional_code_repositories_Set() const;
    bool is_additional_code_repositories_Valid() const;

    OAIRootAccess getRootAccess() const;
    void setRootAccess(const OAIRootAccess &root_access);
    bool is_root_access_Set() const;
    bool is_root_access_Valid() const;

    QString getPlatformIdentifier() const;
    void setPlatformIdentifier(const QString &platform_identifier);
    bool is_platform_identifier_Set() const;
    bool is_platform_identifier_Valid() const;

    OAICreateNotebookInstanceInput_InstanceMetadataServiceConfiguration getInstanceMetadataServiceConfiguration() const;
    void setInstanceMetadataServiceConfiguration(const OAICreateNotebookInstanceInput_InstanceMetadataServiceConfiguration &instance_metadata_service_configuration);
    bool is_instance_metadata_service_configuration_Set() const;
    bool is_instance_metadata_service_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_notebook_instance_arn;
    bool m_notebook_instance_arn_isSet;
    bool m_notebook_instance_arn_isValid;

    QString m_notebook_instance_name;
    bool m_notebook_instance_name_isSet;
    bool m_notebook_instance_name_isValid;

    OAINotebookInstanceStatus m_notebook_instance_status;
    bool m_notebook_instance_status_isSet;
    bool m_notebook_instance_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    OAIInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QList m_security_groups;
    bool m_security_groups_isSet;
    bool m_security_groups_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_network_interface_id;
    bool m_network_interface_id_isSet;
    bool m_network_interface_id_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_notebook_instance_lifecycle_config_name;
    bool m_notebook_instance_lifecycle_config_name_isSet;
    bool m_notebook_instance_lifecycle_config_name_isValid;

    OAIDirectInternetAccess m_direct_internet_access;
    bool m_direct_internet_access_isSet;
    bool m_direct_internet_access_isValid;

    qint32 m_volume_size_in_gb;
    bool m_volume_size_in_gb_isSet;
    bool m_volume_size_in_gb_isValid;

    QList m_accelerator_types;
    bool m_accelerator_types_isSet;
    bool m_accelerator_types_isValid;

    QString m_default_code_repository;
    bool m_default_code_repository_isSet;
    bool m_default_code_repository_isValid;

    QList m_additional_code_repositories;
    bool m_additional_code_repositories_isSet;
    bool m_additional_code_repositories_isValid;

    OAIRootAccess m_root_access;
    bool m_root_access_isSet;
    bool m_root_access_isValid;

    QString m_platform_identifier;
    bool m_platform_identifier_isSet;
    bool m_platform_identifier_isValid;

    OAICreateNotebookInstanceInput_InstanceMetadataServiceConfiguration m_instance_metadata_service_configuration;
    bool m_instance_metadata_service_configuration_isSet;
    bool m_instance_metadata_service_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeNotebookInstanceOutput)

#endif // OAIDescribeNotebookInstanceOutput_H
