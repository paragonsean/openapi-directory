/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterRanges.h
 *
 * &lt;p&gt;Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The maximum number of items specified for &lt;code&gt;Array Members&lt;/code&gt; refers to the maximum number of hyperparameters for each range and also the maximum for the hyperparameter tuning job itself. That is, the sum of the number of hyperparameters for all the ranges can&#39;t exceed the maximum number specified.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIParameterRanges_H
#define OAIParameterRanges_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParameterRanges : public OAIObject {
public:
    OAIParameterRanges();
    OAIParameterRanges(QString json);
    ~OAIParameterRanges() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getIntegerParameterRanges() const;
    void setIntegerParameterRanges(const QList &integer_parameter_ranges);
    bool is_integer_parameter_ranges_Set() const;
    bool is_integer_parameter_ranges_Valid() const;

    QList getContinuousParameterRanges() const;
    void setContinuousParameterRanges(const QList &continuous_parameter_ranges);
    bool is_continuous_parameter_ranges_Set() const;
    bool is_continuous_parameter_ranges_Valid() const;

    QList getCategoricalParameterRanges() const;
    void setCategoricalParameterRanges(const QList &categorical_parameter_ranges);
    bool is_categorical_parameter_ranges_Set() const;
    bool is_categorical_parameter_ranges_Valid() const;

    QList getAutoParameters() const;
    void setAutoParameters(const QList &auto_parameters);
    bool is_auto_parameters_Set() const;
    bool is_auto_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_integer_parameter_ranges;
    bool m_integer_parameter_ranges_isSet;
    bool m_integer_parameter_ranges_isValid;

    QList m_continuous_parameter_ranges;
    bool m_continuous_parameter_ranges_isSet;
    bool m_continuous_parameter_ranges_isValid;

    QList m_categorical_parameter_ranges;
    bool m_categorical_parameter_ranges_isSet;
    bool m_categorical_parameter_ranges_isValid;

    QList m_auto_parameters;
    bool m_auto_parameters_isSet;
    bool m_auto_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterRanges)

#endif // OAIParameterRanges_H
