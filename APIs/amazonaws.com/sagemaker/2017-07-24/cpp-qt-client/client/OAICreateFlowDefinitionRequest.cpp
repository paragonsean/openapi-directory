/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFlowDefinitionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFlowDefinitionRequest::OAICreateFlowDefinitionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFlowDefinitionRequest::OAICreateFlowDefinitionRequest() {
    this->initializeModel();
}

OAICreateFlowDefinitionRequest::~OAICreateFlowDefinitionRequest() {}

void OAICreateFlowDefinitionRequest::initializeModel() {

    m_flow_definition_name_isSet = false;
    m_flow_definition_name_isValid = false;

    m_human_loop_request_source_isSet = false;
    m_human_loop_request_source_isValid = false;

    m_human_loop_activation_config_isSet = false;
    m_human_loop_activation_config_isValid = false;

    m_human_loop_config_isSet = false;
    m_human_loop_config_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateFlowDefinitionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFlowDefinitionRequest::fromJsonObject(QJsonObject json) {

    m_flow_definition_name_isValid = ::OpenAPI::fromJsonValue(m_flow_definition_name, json[QString("FlowDefinitionName")]);
    m_flow_definition_name_isSet = !json[QString("FlowDefinitionName")].isNull() && m_flow_definition_name_isValid;

    m_human_loop_request_source_isValid = ::OpenAPI::fromJsonValue(m_human_loop_request_source, json[QString("HumanLoopRequestSource")]);
    m_human_loop_request_source_isSet = !json[QString("HumanLoopRequestSource")].isNull() && m_human_loop_request_source_isValid;

    m_human_loop_activation_config_isValid = ::OpenAPI::fromJsonValue(m_human_loop_activation_config, json[QString("HumanLoopActivationConfig")]);
    m_human_loop_activation_config_isSet = !json[QString("HumanLoopActivationConfig")].isNull() && m_human_loop_activation_config_isValid;

    m_human_loop_config_isValid = ::OpenAPI::fromJsonValue(m_human_loop_config, json[QString("HumanLoopConfig")]);
    m_human_loop_config_isSet = !json[QString("HumanLoopConfig")].isNull() && m_human_loop_config_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateFlowDefinitionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFlowDefinitionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_definition_name_isSet) {
        obj.insert(QString("FlowDefinitionName"), ::OpenAPI::toJsonValue(m_flow_definition_name));
    }
    if (m_human_loop_request_source.isSet()) {
        obj.insert(QString("HumanLoopRequestSource"), ::OpenAPI::toJsonValue(m_human_loop_request_source));
    }
    if (m_human_loop_activation_config.isSet()) {
        obj.insert(QString("HumanLoopActivationConfig"), ::OpenAPI::toJsonValue(m_human_loop_activation_config));
    }
    if (m_human_loop_config.isSet()) {
        obj.insert(QString("HumanLoopConfig"), ::OpenAPI::toJsonValue(m_human_loop_config));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateFlowDefinitionRequest::getFlowDefinitionName() const {
    return m_flow_definition_name;
}
void OAICreateFlowDefinitionRequest::setFlowDefinitionName(const QString &flow_definition_name) {
    m_flow_definition_name = flow_definition_name;
    m_flow_definition_name_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_flow_definition_name_Set() const{
    return m_flow_definition_name_isSet;
}

bool OAICreateFlowDefinitionRequest::is_flow_definition_name_Valid() const{
    return m_flow_definition_name_isValid;
}

OAICreateFlowDefinitionRequest_HumanLoopRequestSource OAICreateFlowDefinitionRequest::getHumanLoopRequestSource() const {
    return m_human_loop_request_source;
}
void OAICreateFlowDefinitionRequest::setHumanLoopRequestSource(const OAICreateFlowDefinitionRequest_HumanLoopRequestSource &human_loop_request_source) {
    m_human_loop_request_source = human_loop_request_source;
    m_human_loop_request_source_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_request_source_Set() const{
    return m_human_loop_request_source_isSet;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_request_source_Valid() const{
    return m_human_loop_request_source_isValid;
}

OAICreateFlowDefinitionRequest_HumanLoopActivationConfig OAICreateFlowDefinitionRequest::getHumanLoopActivationConfig() const {
    return m_human_loop_activation_config;
}
void OAICreateFlowDefinitionRequest::setHumanLoopActivationConfig(const OAICreateFlowDefinitionRequest_HumanLoopActivationConfig &human_loop_activation_config) {
    m_human_loop_activation_config = human_loop_activation_config;
    m_human_loop_activation_config_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_activation_config_Set() const{
    return m_human_loop_activation_config_isSet;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_activation_config_Valid() const{
    return m_human_loop_activation_config_isValid;
}

OAICreateFlowDefinitionRequest_HumanLoopConfig OAICreateFlowDefinitionRequest::getHumanLoopConfig() const {
    return m_human_loop_config;
}
void OAICreateFlowDefinitionRequest::setHumanLoopConfig(const OAICreateFlowDefinitionRequest_HumanLoopConfig &human_loop_config) {
    m_human_loop_config = human_loop_config;
    m_human_loop_config_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_config_Set() const{
    return m_human_loop_config_isSet;
}

bool OAICreateFlowDefinitionRequest::is_human_loop_config_Valid() const{
    return m_human_loop_config_isValid;
}

OAICreateFlowDefinitionRequest_OutputConfig OAICreateFlowDefinitionRequest::getOutputConfig() const {
    return m_output_config;
}
void OAICreateFlowDefinitionRequest::setOutputConfig(const OAICreateFlowDefinitionRequest_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAICreateFlowDefinitionRequest::is_output_config_Valid() const{
    return m_output_config_isValid;
}

QString OAICreateFlowDefinitionRequest::getRoleArn() const {
    return m_role_arn;
}
void OAICreateFlowDefinitionRequest::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAICreateFlowDefinitionRequest::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QList OAICreateFlowDefinitionRequest::getTags() const {
    return m_tags;
}
void OAICreateFlowDefinitionRequest::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateFlowDefinitionRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateFlowDefinitionRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateFlowDefinitionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_loop_request_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_loop_activation_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_human_loop_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFlowDefinitionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_flow_definition_name_isValid && m_human_loop_config_isValid && m_output_config_isValid && m_role_arn_isValid && true;
}

} // namespace OpenAPI
