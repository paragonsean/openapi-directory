/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMonitoringJobDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMonitoringJobDefinition::OAIMonitoringJobDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMonitoringJobDefinition::OAIMonitoringJobDefinition() {
    this->initializeModel();
}

OAIMonitoringJobDefinition::~OAIMonitoringJobDefinition() {}

void OAIMonitoringJobDefinition::initializeModel() {

    m_baseline_config_isSet = false;
    m_baseline_config_isValid = false;

    m_monitoring_inputs_isSet = false;
    m_monitoring_inputs_isValid = false;

    m_monitoring_output_config_isSet = false;
    m_monitoring_output_config_isValid = false;

    m_monitoring_resources_isSet = false;
    m_monitoring_resources_isValid = false;

    m_monitoring_app_specification_isSet = false;
    m_monitoring_app_specification_isValid = false;

    m_stopping_condition_isSet = false;
    m_stopping_condition_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_network_config_isSet = false;
    m_network_config_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIMonitoringJobDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMonitoringJobDefinition::fromJsonObject(QJsonObject json) {

    m_baseline_config_isValid = ::OpenAPI::fromJsonValue(m_baseline_config, json[QString("BaselineConfig")]);
    m_baseline_config_isSet = !json[QString("BaselineConfig")].isNull() && m_baseline_config_isValid;

    m_monitoring_inputs_isValid = ::OpenAPI::fromJsonValue(m_monitoring_inputs, json[QString("MonitoringInputs")]);
    m_monitoring_inputs_isSet = !json[QString("MonitoringInputs")].isNull() && m_monitoring_inputs_isValid;

    m_monitoring_output_config_isValid = ::OpenAPI::fromJsonValue(m_monitoring_output_config, json[QString("MonitoringOutputConfig")]);
    m_monitoring_output_config_isSet = !json[QString("MonitoringOutputConfig")].isNull() && m_monitoring_output_config_isValid;

    m_monitoring_resources_isValid = ::OpenAPI::fromJsonValue(m_monitoring_resources, json[QString("MonitoringResources")]);
    m_monitoring_resources_isSet = !json[QString("MonitoringResources")].isNull() && m_monitoring_resources_isValid;

    m_monitoring_app_specification_isValid = ::OpenAPI::fromJsonValue(m_monitoring_app_specification, json[QString("MonitoringAppSpecification")]);
    m_monitoring_app_specification_isSet = !json[QString("MonitoringAppSpecification")].isNull() && m_monitoring_app_specification_isValid;

    m_stopping_condition_isValid = ::OpenAPI::fromJsonValue(m_stopping_condition, json[QString("StoppingCondition")]);
    m_stopping_condition_isSet = !json[QString("StoppingCondition")].isNull() && m_stopping_condition_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("Environment")]);
    m_environment_isSet = !json[QString("Environment")].isNull() && m_environment_isValid;

    m_network_config_isValid = ::OpenAPI::fromJsonValue(m_network_config, json[QString("NetworkConfig")]);
    m_network_config_isSet = !json[QString("NetworkConfig")].isNull() && m_network_config_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAIMonitoringJobDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMonitoringJobDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_baseline_config.isSet()) {
        obj.insert(QString("BaselineConfig"), ::OpenAPI::toJsonValue(m_baseline_config));
    }
    if (m_monitoring_inputs.isSet()) {
        obj.insert(QString("MonitoringInputs"), ::OpenAPI::toJsonValue(m_monitoring_inputs));
    }
    if (m_monitoring_output_config.isSet()) {
        obj.insert(QString("MonitoringOutputConfig"), ::OpenAPI::toJsonValue(m_monitoring_output_config));
    }
    if (m_monitoring_resources.isSet()) {
        obj.insert(QString("MonitoringResources"), ::OpenAPI::toJsonValue(m_monitoring_resources));
    }
    if (m_monitoring_app_specification.isSet()) {
        obj.insert(QString("MonitoringAppSpecification"), ::OpenAPI::toJsonValue(m_monitoring_app_specification));
    }
    if (m_stopping_condition.isSet()) {
        obj.insert(QString("StoppingCondition"), ::OpenAPI::toJsonValue(m_stopping_condition));
    }
    if (m_environment.isSet()) {
        obj.insert(QString("Environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_network_config.isSet()) {
        obj.insert(QString("NetworkConfig"), ::OpenAPI::toJsonValue(m_network_config));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

OAIMonitoringJobDefinition_BaselineConfig OAIMonitoringJobDefinition::getBaselineConfig() const {
    return m_baseline_config;
}
void OAIMonitoringJobDefinition::setBaselineConfig(const OAIMonitoringJobDefinition_BaselineConfig &baseline_config) {
    m_baseline_config = baseline_config;
    m_baseline_config_isSet = true;
}

bool OAIMonitoringJobDefinition::is_baseline_config_Set() const{
    return m_baseline_config_isSet;
}

bool OAIMonitoringJobDefinition::is_baseline_config_Valid() const{
    return m_baseline_config_isValid;
}

QList OAIMonitoringJobDefinition::getMonitoringInputs() const {
    return m_monitoring_inputs;
}
void OAIMonitoringJobDefinition::setMonitoringInputs(const QList &monitoring_inputs) {
    m_monitoring_inputs = monitoring_inputs;
    m_monitoring_inputs_isSet = true;
}

bool OAIMonitoringJobDefinition::is_monitoring_inputs_Set() const{
    return m_monitoring_inputs_isSet;
}

bool OAIMonitoringJobDefinition::is_monitoring_inputs_Valid() const{
    return m_monitoring_inputs_isValid;
}

OAIMonitoringJobDefinition_MonitoringOutputConfig OAIMonitoringJobDefinition::getMonitoringOutputConfig() const {
    return m_monitoring_output_config;
}
void OAIMonitoringJobDefinition::setMonitoringOutputConfig(const OAIMonitoringJobDefinition_MonitoringOutputConfig &monitoring_output_config) {
    m_monitoring_output_config = monitoring_output_config;
    m_monitoring_output_config_isSet = true;
}

bool OAIMonitoringJobDefinition::is_monitoring_output_config_Set() const{
    return m_monitoring_output_config_isSet;
}

bool OAIMonitoringJobDefinition::is_monitoring_output_config_Valid() const{
    return m_monitoring_output_config_isValid;
}

OAIMonitoringJobDefinition_MonitoringResources OAIMonitoringJobDefinition::getMonitoringResources() const {
    return m_monitoring_resources;
}
void OAIMonitoringJobDefinition::setMonitoringResources(const OAIMonitoringJobDefinition_MonitoringResources &monitoring_resources) {
    m_monitoring_resources = monitoring_resources;
    m_monitoring_resources_isSet = true;
}

bool OAIMonitoringJobDefinition::is_monitoring_resources_Set() const{
    return m_monitoring_resources_isSet;
}

bool OAIMonitoringJobDefinition::is_monitoring_resources_Valid() const{
    return m_monitoring_resources_isValid;
}

OAIMonitoringJobDefinition_MonitoringAppSpecification OAIMonitoringJobDefinition::getMonitoringAppSpecification() const {
    return m_monitoring_app_specification;
}
void OAIMonitoringJobDefinition::setMonitoringAppSpecification(const OAIMonitoringJobDefinition_MonitoringAppSpecification &monitoring_app_specification) {
    m_monitoring_app_specification = monitoring_app_specification;
    m_monitoring_app_specification_isSet = true;
}

bool OAIMonitoringJobDefinition::is_monitoring_app_specification_Set() const{
    return m_monitoring_app_specification_isSet;
}

bool OAIMonitoringJobDefinition::is_monitoring_app_specification_Valid() const{
    return m_monitoring_app_specification_isValid;
}

OAIMonitoringJobDefinition_StoppingCondition OAIMonitoringJobDefinition::getStoppingCondition() const {
    return m_stopping_condition;
}
void OAIMonitoringJobDefinition::setStoppingCondition(const OAIMonitoringJobDefinition_StoppingCondition &stopping_condition) {
    m_stopping_condition = stopping_condition;
    m_stopping_condition_isSet = true;
}

bool OAIMonitoringJobDefinition::is_stopping_condition_Set() const{
    return m_stopping_condition_isSet;
}

bool OAIMonitoringJobDefinition::is_stopping_condition_Valid() const{
    return m_stopping_condition_isValid;
}

QMap OAIMonitoringJobDefinition::getEnvironment() const {
    return m_environment;
}
void OAIMonitoringJobDefinition::setEnvironment(const QMap &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIMonitoringJobDefinition::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIMonitoringJobDefinition::is_environment_Valid() const{
    return m_environment_isValid;
}

OAIMonitoringJobDefinition_NetworkConfig OAIMonitoringJobDefinition::getNetworkConfig() const {
    return m_network_config;
}
void OAIMonitoringJobDefinition::setNetworkConfig(const OAIMonitoringJobDefinition_NetworkConfig &network_config) {
    m_network_config = network_config;
    m_network_config_isSet = true;
}

bool OAIMonitoringJobDefinition::is_network_config_Set() const{
    return m_network_config_isSet;
}

bool OAIMonitoringJobDefinition::is_network_config_Valid() const{
    return m_network_config_isValid;
}

QString OAIMonitoringJobDefinition::getRoleArn() const {
    return m_role_arn;
}
void OAIMonitoringJobDefinition::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIMonitoringJobDefinition::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIMonitoringJobDefinition::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIMonitoringJobDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_baseline_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_inputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_app_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stopping_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMonitoringJobDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitoring_inputs_isValid && m_monitoring_output_config_isValid && m_monitoring_resources_isValid && m_monitoring_app_specification_isValid && m_role_arn_isValid && true;
}

} // namespace OpenAPI
