/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICapacitySize.h
 *
 * &lt;p&gt;Specifies the type and size of the endpoint capacity to activate for a blue/green deployment, a rolling deployment, or a rollback strategy. You can specify your batches as either instance count or the overall percentage or your fleet.&lt;/p&gt; &lt;p&gt;For a rollback strategy, if you don&#39;t specify the fields in this object, or if you set the &lt;code&gt;Value&lt;/code&gt; to 100%, then SageMaker uses a blue/green rollback strategy and rolls all traffic back to the blue fleet.&lt;/p&gt;
 */

#ifndef OAICapacitySize_H
#define OAICapacitySize_H

#include <QJsonObject>

#include "OAICapacitySizeType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICapacitySize : public OAIObject {
public:
    OAICapacitySize();
    OAICapacitySize(QString json);
    ~OAICapacitySize() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICapacitySizeType getType() const;
    void setType(const OAICapacitySizeType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICapacitySizeType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICapacitySize)

#endif // OAICapacitySize_H
