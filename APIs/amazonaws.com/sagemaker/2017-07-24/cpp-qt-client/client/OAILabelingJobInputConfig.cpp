/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelingJobInputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelingJobInputConfig::OAILabelingJobInputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelingJobInputConfig::OAILabelingJobInputConfig() {
    this->initializeModel();
}

OAILabelingJobInputConfig::~OAILabelingJobInputConfig() {}

void OAILabelingJobInputConfig::initializeModel() {

    m_data_source_isSet = false;
    m_data_source_isValid = false;

    m_data_attributes_isSet = false;
    m_data_attributes_isValid = false;
}

void OAILabelingJobInputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelingJobInputConfig::fromJsonObject(QJsonObject json) {

    m_data_source_isValid = ::OpenAPI::fromJsonValue(m_data_source, json[QString("DataSource")]);
    m_data_source_isSet = !json[QString("DataSource")].isNull() && m_data_source_isValid;

    m_data_attributes_isValid = ::OpenAPI::fromJsonValue(m_data_attributes, json[QString("DataAttributes")]);
    m_data_attributes_isSet = !json[QString("DataAttributes")].isNull() && m_data_attributes_isValid;
}

QString OAILabelingJobInputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelingJobInputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_data_source.isSet()) {
        obj.insert(QString("DataSource"), ::OpenAPI::toJsonValue(m_data_source));
    }
    if (m_data_attributes.isSet()) {
        obj.insert(QString("DataAttributes"), ::OpenAPI::toJsonValue(m_data_attributes));
    }
    return obj;
}

OAILabelingJobInputConfig_DataSource OAILabelingJobInputConfig::getDataSource() const {
    return m_data_source;
}
void OAILabelingJobInputConfig::setDataSource(const OAILabelingJobInputConfig_DataSource &data_source) {
    m_data_source = data_source;
    m_data_source_isSet = true;
}

bool OAILabelingJobInputConfig::is_data_source_Set() const{
    return m_data_source_isSet;
}

bool OAILabelingJobInputConfig::is_data_source_Valid() const{
    return m_data_source_isValid;
}

OAILabelingJobInputConfig_DataAttributes OAILabelingJobInputConfig::getDataAttributes() const {
    return m_data_attributes;
}
void OAILabelingJobInputConfig::setDataAttributes(const OAILabelingJobInputConfig_DataAttributes &data_attributes) {
    m_data_attributes = data_attributes;
    m_data_attributes_isSet = true;
}

bool OAILabelingJobInputConfig::is_data_attributes_Set() const{
    return m_data_attributes_isSet;
}

bool OAILabelingJobInputConfig::is_data_attributes_Valid() const{
    return m_data_attributes_isValid;
}

bool OAILabelingJobInputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelingJobInputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_source_isValid && true;
}

} // namespace OpenAPI
