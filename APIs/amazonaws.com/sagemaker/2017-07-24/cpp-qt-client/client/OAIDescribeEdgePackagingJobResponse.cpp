/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeEdgePackagingJobResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeEdgePackagingJobResponse::OAIDescribeEdgePackagingJobResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeEdgePackagingJobResponse::OAIDescribeEdgePackagingJobResponse() {
    this->initializeModel();
}

OAIDescribeEdgePackagingJobResponse::~OAIDescribeEdgePackagingJobResponse() {}

void OAIDescribeEdgePackagingJobResponse::initializeModel() {

    m_edge_packaging_job_arn_isSet = false;
    m_edge_packaging_job_arn_isValid = false;

    m_edge_packaging_job_name_isSet = false;
    m_edge_packaging_job_name_isValid = false;

    m_compilation_job_name_isSet = false;
    m_compilation_job_name_isValid = false;

    m_model_name_isSet = false;
    m_model_name_isValid = false;

    m_model_version_isSet = false;
    m_model_version_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_resource_key_isSet = false;
    m_resource_key_isValid = false;

    m_edge_packaging_job_status_isSet = false;
    m_edge_packaging_job_status_isValid = false;

    m_edge_packaging_job_status_message_isSet = false;
    m_edge_packaging_job_status_message_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_model_artifact_isSet = false;
    m_model_artifact_isValid = false;

    m_model_signature_isSet = false;
    m_model_signature_isValid = false;

    m_preset_deployment_output_isSet = false;
    m_preset_deployment_output_isValid = false;
}

void OAIDescribeEdgePackagingJobResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeEdgePackagingJobResponse::fromJsonObject(QJsonObject json) {

    m_edge_packaging_job_arn_isValid = ::OpenAPI::fromJsonValue(m_edge_packaging_job_arn, json[QString("EdgePackagingJobArn")]);
    m_edge_packaging_job_arn_isSet = !json[QString("EdgePackagingJobArn")].isNull() && m_edge_packaging_job_arn_isValid;

    m_edge_packaging_job_name_isValid = ::OpenAPI::fromJsonValue(m_edge_packaging_job_name, json[QString("EdgePackagingJobName")]);
    m_edge_packaging_job_name_isSet = !json[QString("EdgePackagingJobName")].isNull() && m_edge_packaging_job_name_isValid;

    m_compilation_job_name_isValid = ::OpenAPI::fromJsonValue(m_compilation_job_name, json[QString("CompilationJobName")]);
    m_compilation_job_name_isSet = !json[QString("CompilationJobName")].isNull() && m_compilation_job_name_isValid;

    m_model_name_isValid = ::OpenAPI::fromJsonValue(m_model_name, json[QString("ModelName")]);
    m_model_name_isSet = !json[QString("ModelName")].isNull() && m_model_name_isValid;

    m_model_version_isValid = ::OpenAPI::fromJsonValue(m_model_version, json[QString("ModelVersion")]);
    m_model_version_isSet = !json[QString("ModelVersion")].isNull() && m_model_version_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_resource_key_isValid = ::OpenAPI::fromJsonValue(m_resource_key, json[QString("ResourceKey")]);
    m_resource_key_isSet = !json[QString("ResourceKey")].isNull() && m_resource_key_isValid;

    m_edge_packaging_job_status_isValid = ::OpenAPI::fromJsonValue(m_edge_packaging_job_status, json[QString("EdgePackagingJobStatus")]);
    m_edge_packaging_job_status_isSet = !json[QString("EdgePackagingJobStatus")].isNull() && m_edge_packaging_job_status_isValid;

    m_edge_packaging_job_status_message_isValid = ::OpenAPI::fromJsonValue(m_edge_packaging_job_status_message, json[QString("EdgePackagingJobStatusMessage")]);
    m_edge_packaging_job_status_message_isSet = !json[QString("EdgePackagingJobStatusMessage")].isNull() && m_edge_packaging_job_status_message_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_model_artifact_isValid = ::OpenAPI::fromJsonValue(m_model_artifact, json[QString("ModelArtifact")]);
    m_model_artifact_isSet = !json[QString("ModelArtifact")].isNull() && m_model_artifact_isValid;

    m_model_signature_isValid = ::OpenAPI::fromJsonValue(m_model_signature, json[QString("ModelSignature")]);
    m_model_signature_isSet = !json[QString("ModelSignature")].isNull() && m_model_signature_isValid;

    m_preset_deployment_output_isValid = ::OpenAPI::fromJsonValue(m_preset_deployment_output, json[QString("PresetDeploymentOutput")]);
    m_preset_deployment_output_isSet = !json[QString("PresetDeploymentOutput")].isNull() && m_preset_deployment_output_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeEdgePackagingJobResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_edge_packaging_job_arn_isSet) {
        obj.insert(QString("EdgePackagingJobArn"), ::OpenAPI::toJsonValue(m_edge_packaging_job_arn));
    }
    if (m_edge_packaging_job_name_isSet) {
        obj.insert(QString("EdgePackagingJobName"), ::OpenAPI::toJsonValue(m_edge_packaging_job_name));
    }
    if (m_compilation_job_name_isSet) {
        obj.insert(QString("CompilationJobName"), ::OpenAPI::toJsonValue(m_compilation_job_name));
    }
    if (m_model_name_isSet) {
        obj.insert(QString("ModelName"), ::OpenAPI::toJsonValue(m_model_name));
    }
    if (m_model_version_isSet) {
        obj.insert(QString("ModelVersion"), ::OpenAPI::toJsonValue(m_model_version));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_resource_key_isSet) {
        obj.insert(QString("ResourceKey"), ::OpenAPI::toJsonValue(m_resource_key));
    }
    if (m_edge_packaging_job_status.isSet()) {
        obj.insert(QString("EdgePackagingJobStatus"), ::OpenAPI::toJsonValue(m_edge_packaging_job_status));
    }
    if (m_edge_packaging_job_status_message_isSet) {
        obj.insert(QString("EdgePackagingJobStatusMessage"), ::OpenAPI::toJsonValue(m_edge_packaging_job_status_message));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_model_artifact_isSet) {
        obj.insert(QString("ModelArtifact"), ::OpenAPI::toJsonValue(m_model_artifact));
    }
    if (m_model_signature_isSet) {
        obj.insert(QString("ModelSignature"), ::OpenAPI::toJsonValue(m_model_signature));
    }
    if (m_preset_deployment_output.isSet()) {
        obj.insert(QString("PresetDeploymentOutput"), ::OpenAPI::toJsonValue(m_preset_deployment_output));
    }
    return obj;
}

QString OAIDescribeEdgePackagingJobResponse::getEdgePackagingJobArn() const {
    return m_edge_packaging_job_arn;
}
void OAIDescribeEdgePackagingJobResponse::setEdgePackagingJobArn(const QString &edge_packaging_job_arn) {
    m_edge_packaging_job_arn = edge_packaging_job_arn;
    m_edge_packaging_job_arn_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_arn_Set() const{
    return m_edge_packaging_job_arn_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_arn_Valid() const{
    return m_edge_packaging_job_arn_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getEdgePackagingJobName() const {
    return m_edge_packaging_job_name;
}
void OAIDescribeEdgePackagingJobResponse::setEdgePackagingJobName(const QString &edge_packaging_job_name) {
    m_edge_packaging_job_name = edge_packaging_job_name;
    m_edge_packaging_job_name_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_name_Set() const{
    return m_edge_packaging_job_name_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_name_Valid() const{
    return m_edge_packaging_job_name_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getCompilationJobName() const {
    return m_compilation_job_name;
}
void OAIDescribeEdgePackagingJobResponse::setCompilationJobName(const QString &compilation_job_name) {
    m_compilation_job_name = compilation_job_name;
    m_compilation_job_name_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_compilation_job_name_Set() const{
    return m_compilation_job_name_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_compilation_job_name_Valid() const{
    return m_compilation_job_name_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getModelName() const {
    return m_model_name;
}
void OAIDescribeEdgePackagingJobResponse::setModelName(const QString &model_name) {
    m_model_name = model_name;
    m_model_name_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_name_Set() const{
    return m_model_name_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_name_Valid() const{
    return m_model_name_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getModelVersion() const {
    return m_model_version;
}
void OAIDescribeEdgePackagingJobResponse::setModelVersion(const QString &model_version) {
    m_model_version = model_version;
    m_model_version_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_version_Set() const{
    return m_model_version_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_version_Valid() const{
    return m_model_version_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getRoleArn() const {
    return m_role_arn;
}
void OAIDescribeEdgePackagingJobResponse::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

OAIDescribeEdgePackagingJobResponse_OutputConfig OAIDescribeEdgePackagingJobResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIDescribeEdgePackagingJobResponse::setOutputConfig(const OAIDescribeEdgePackagingJobResponse_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getResourceKey() const {
    return m_resource_key;
}
void OAIDescribeEdgePackagingJobResponse::setResourceKey(const QString &resource_key) {
    m_resource_key = resource_key;
    m_resource_key_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_resource_key_Set() const{
    return m_resource_key_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_resource_key_Valid() const{
    return m_resource_key_isValid;
}

OAIEdgePackagingJobStatus OAIDescribeEdgePackagingJobResponse::getEdgePackagingJobStatus() const {
    return m_edge_packaging_job_status;
}
void OAIDescribeEdgePackagingJobResponse::setEdgePackagingJobStatus(const OAIEdgePackagingJobStatus &edge_packaging_job_status) {
    m_edge_packaging_job_status = edge_packaging_job_status;
    m_edge_packaging_job_status_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_status_Set() const{
    return m_edge_packaging_job_status_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_status_Valid() const{
    return m_edge_packaging_job_status_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getEdgePackagingJobStatusMessage() const {
    return m_edge_packaging_job_status_message;
}
void OAIDescribeEdgePackagingJobResponse::setEdgePackagingJobStatusMessage(const QString &edge_packaging_job_status_message) {
    m_edge_packaging_job_status_message = edge_packaging_job_status_message;
    m_edge_packaging_job_status_message_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_status_message_Set() const{
    return m_edge_packaging_job_status_message_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_edge_packaging_job_status_message_Valid() const{
    return m_edge_packaging_job_status_message_isValid;
}

QDateTime OAIDescribeEdgePackagingJobResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeEdgePackagingJobResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeEdgePackagingJobResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeEdgePackagingJobResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getModelArtifact() const {
    return m_model_artifact;
}
void OAIDescribeEdgePackagingJobResponse::setModelArtifact(const QString &model_artifact) {
    m_model_artifact = model_artifact;
    m_model_artifact_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_artifact_Set() const{
    return m_model_artifact_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_artifact_Valid() const{
    return m_model_artifact_isValid;
}

QString OAIDescribeEdgePackagingJobResponse::getModelSignature() const {
    return m_model_signature;
}
void OAIDescribeEdgePackagingJobResponse::setModelSignature(const QString &model_signature) {
    m_model_signature = model_signature;
    m_model_signature_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_signature_Set() const{
    return m_model_signature_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_model_signature_Valid() const{
    return m_model_signature_isValid;
}

OAIDescribeEdgePackagingJobResponse_PresetDeploymentOutput OAIDescribeEdgePackagingJobResponse::getPresetDeploymentOutput() const {
    return m_preset_deployment_output;
}
void OAIDescribeEdgePackagingJobResponse::setPresetDeploymentOutput(const OAIDescribeEdgePackagingJobResponse_PresetDeploymentOutput &preset_deployment_output) {
    m_preset_deployment_output = preset_deployment_output;
    m_preset_deployment_output_isSet = true;
}

bool OAIDescribeEdgePackagingJobResponse::is_preset_deployment_output_Set() const{
    return m_preset_deployment_output_isSet;
}

bool OAIDescribeEdgePackagingJobResponse::is_preset_deployment_output_Valid() const{
    return m_preset_deployment_output_isValid;
}

bool OAIDescribeEdgePackagingJobResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_edge_packaging_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_packaging_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compilation_job_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_packaging_job_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_edge_packaging_job_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_artifact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_signature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preset_deployment_output.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeEdgePackagingJobResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_edge_packaging_job_arn_isValid && m_edge_packaging_job_name_isValid && m_edge_packaging_job_status_isValid && true;
}

} // namespace OpenAPI
