/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification() {
    this->initializeModel();
}

OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::~OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification() {}

void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::initializeModel() {

    m_training_image_isSet = false;
    m_training_image_isValid = false;

    m_training_input_mode_isSet = false;
    m_training_input_mode_isValid = false;

    m_algorithm_name_isSet = false;
    m_algorithm_name_isValid = false;

    m_metric_definitions_isSet = false;
    m_metric_definitions_isValid = false;
}

void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::fromJsonObject(QJsonObject json) {

    m_training_image_isValid = ::OpenAPI::fromJsonValue(m_training_image, json[QString("TrainingImage")]);
    m_training_image_isSet = !json[QString("TrainingImage")].isNull() && m_training_image_isValid;

    m_training_input_mode_isValid = ::OpenAPI::fromJsonValue(m_training_input_mode, json[QString("TrainingInputMode")]);
    m_training_input_mode_isSet = !json[QString("TrainingInputMode")].isNull() && m_training_input_mode_isValid;

    m_algorithm_name_isValid = ::OpenAPI::fromJsonValue(m_algorithm_name, json[QString("AlgorithmName")]);
    m_algorithm_name_isSet = !json[QString("AlgorithmName")].isNull() && m_algorithm_name_isValid;

    m_metric_definitions_isValid = ::OpenAPI::fromJsonValue(m_metric_definitions, json[QString("MetricDefinitions")]);
    m_metric_definitions_isSet = !json[QString("MetricDefinitions")].isNull() && m_metric_definitions_isValid;
}

QString OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_training_image_isSet) {
        obj.insert(QString("TrainingImage"), ::OpenAPI::toJsonValue(m_training_image));
    }
    if (m_training_input_mode.isSet()) {
        obj.insert(QString("TrainingInputMode"), ::OpenAPI::toJsonValue(m_training_input_mode));
    }
    if (m_algorithm_name_isSet) {
        obj.insert(QString("AlgorithmName"), ::OpenAPI::toJsonValue(m_algorithm_name));
    }
    if (m_metric_definitions.isSet()) {
        obj.insert(QString("MetricDefinitions"), ::OpenAPI::toJsonValue(m_metric_definitions));
    }
    return obj;
}

QString OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::getTrainingImage() const {
    return m_training_image;
}
void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::setTrainingImage(const QString &training_image) {
    m_training_image = training_image;
    m_training_image_isSet = true;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_training_image_Set() const{
    return m_training_image_isSet;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_training_image_Valid() const{
    return m_training_image_isValid;
}

OAITrainingInputMode OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::getTrainingInputMode() const {
    return m_training_input_mode;
}
void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::setTrainingInputMode(const OAITrainingInputMode &training_input_mode) {
    m_training_input_mode = training_input_mode;
    m_training_input_mode_isSet = true;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_training_input_mode_Set() const{
    return m_training_input_mode_isSet;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_training_input_mode_Valid() const{
    return m_training_input_mode_isValid;
}

QString OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::getAlgorithmName() const {
    return m_algorithm_name;
}
void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::setAlgorithmName(const QString &algorithm_name) {
    m_algorithm_name = algorithm_name;
    m_algorithm_name_isSet = true;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_algorithm_name_Set() const{
    return m_algorithm_name_isSet;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_algorithm_name_Valid() const{
    return m_algorithm_name_isValid;
}

QList OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::getMetricDefinitions() const {
    return m_metric_definitions;
}
void OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::setMetricDefinitions(const QList &metric_definitions) {
    m_metric_definitions = metric_definitions;
    m_metric_definitions_isSet = true;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_metric_definitions_Set() const{
    return m_metric_definitions_isSet;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::is_metric_definitions_Valid() const{
    return m_metric_definitions_isValid;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_training_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_input_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_algorithm_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_definitions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHyperParameterTrainingJobDefinition_AlgorithmSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_training_input_mode_isValid && true;
}

} // namespace OpenAPI
