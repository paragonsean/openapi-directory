/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAutoMLJobV2Request.h
 *
 * 
 */

#ifndef OAICreateAutoMLJobV2Request_H
#define OAICreateAutoMLJobV2Request_H

#include <QJsonObject>

#include "OAICreateAutoMLJobRequest_ModelDeployConfig.h"
#include "OAICreateAutoMLJobV2Request_AutoMLJobObjective.h"
#include "OAICreateAutoMLJobV2Request_AutoMLProblemTypeConfig.h"
#include "OAICreateAutoMLJobV2Request_DataSplitConfig.h"
#include "OAICreateAutoMLJobV2Request_OutputDataConfig.h"
#include "OAICreateAutoMLJobV2Request_SecurityConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateAutoMLJobV2Request_OutputDataConfig;
class OAICreateAutoMLJobV2Request_AutoMLProblemTypeConfig;
class OAICreateAutoMLJobV2Request_SecurityConfig;
class OAICreateAutoMLJobV2Request_AutoMLJobObjective;
class OAICreateAutoMLJobRequest_ModelDeployConfig;
class OAICreateAutoMLJobV2Request_DataSplitConfig;

class OAICreateAutoMLJobV2Request : public OAIObject {
public:
    OAICreateAutoMLJobV2Request();
    OAICreateAutoMLJobV2Request(QString json);
    ~OAICreateAutoMLJobV2Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutoMlJobName() const;
    void setAutoMlJobName(const QString &auto_ml_job_name);
    bool is_auto_ml_job_name_Set() const;
    bool is_auto_ml_job_name_Valid() const;

    QList getAutoMlJobInputDataConfig() const;
    void setAutoMlJobInputDataConfig(const QList &auto_ml_job_input_data_config);
    bool is_auto_ml_job_input_data_config_Set() const;
    bool is_auto_ml_job_input_data_config_Valid() const;

    OAICreateAutoMLJobV2Request_OutputDataConfig getOutputDataConfig() const;
    void setOutputDataConfig(const OAICreateAutoMLJobV2Request_OutputDataConfig &output_data_config);
    bool is_output_data_config_Set() const;
    bool is_output_data_config_Valid() const;

    OAICreateAutoMLJobV2Request_AutoMLProblemTypeConfig getAutoMlProblemTypeConfig() const;
    void setAutoMlProblemTypeConfig(const OAICreateAutoMLJobV2Request_AutoMLProblemTypeConfig &auto_ml_problem_type_config);
    bool is_auto_ml_problem_type_config_Set() const;
    bool is_auto_ml_problem_type_config_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICreateAutoMLJobV2Request_SecurityConfig getSecurityConfig() const;
    void setSecurityConfig(const OAICreateAutoMLJobV2Request_SecurityConfig &security_config);
    bool is_security_config_Set() const;
    bool is_security_config_Valid() const;

    OAICreateAutoMLJobV2Request_AutoMLJobObjective getAutoMlJobObjective() const;
    void setAutoMlJobObjective(const OAICreateAutoMLJobV2Request_AutoMLJobObjective &auto_ml_job_objective);
    bool is_auto_ml_job_objective_Set() const;
    bool is_auto_ml_job_objective_Valid() const;

    OAICreateAutoMLJobRequest_ModelDeployConfig getModelDeployConfig() const;
    void setModelDeployConfig(const OAICreateAutoMLJobRequest_ModelDeployConfig &model_deploy_config);
    bool is_model_deploy_config_Set() const;
    bool is_model_deploy_config_Valid() const;

    OAICreateAutoMLJobV2Request_DataSplitConfig getDataSplitConfig() const;
    void setDataSplitConfig(const OAICreateAutoMLJobV2Request_DataSplitConfig &data_split_config);
    bool is_data_split_config_Set() const;
    bool is_data_split_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auto_ml_job_name;
    bool m_auto_ml_job_name_isSet;
    bool m_auto_ml_job_name_isValid;

    QList m_auto_ml_job_input_data_config;
    bool m_auto_ml_job_input_data_config_isSet;
    bool m_auto_ml_job_input_data_config_isValid;

    OAICreateAutoMLJobV2Request_OutputDataConfig m_output_data_config;
    bool m_output_data_config_isSet;
    bool m_output_data_config_isValid;

    OAICreateAutoMLJobV2Request_AutoMLProblemTypeConfig m_auto_ml_problem_type_config;
    bool m_auto_ml_problem_type_config_isSet;
    bool m_auto_ml_problem_type_config_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICreateAutoMLJobV2Request_SecurityConfig m_security_config;
    bool m_security_config_isSet;
    bool m_security_config_isValid;

    OAICreateAutoMLJobV2Request_AutoMLJobObjective m_auto_ml_job_objective;
    bool m_auto_ml_job_objective_isSet;
    bool m_auto_ml_job_objective_isValid;

    OAICreateAutoMLJobRequest_ModelDeployConfig m_model_deploy_config;
    bool m_model_deploy_config_isSet;
    bool m_model_deploy_config_isValid;

    OAICreateAutoMLJobV2Request_DataSplitConfig m_data_split_config;
    bool m_data_split_config_isSet;
    bool m_data_split_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAutoMLJobV2Request)

#endif // OAICreateAutoMLJobV2Request_H
