/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeEndpointOutput_LastDeploymentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeEndpointOutput_LastDeploymentConfig::OAIDescribeEndpointOutput_LastDeploymentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeEndpointOutput_LastDeploymentConfig::OAIDescribeEndpointOutput_LastDeploymentConfig() {
    this->initializeModel();
}

OAIDescribeEndpointOutput_LastDeploymentConfig::~OAIDescribeEndpointOutput_LastDeploymentConfig() {}

void OAIDescribeEndpointOutput_LastDeploymentConfig::initializeModel() {

    m_blue_green_update_policy_isSet = false;
    m_blue_green_update_policy_isValid = false;

    m_auto_rollback_configuration_isSet = false;
    m_auto_rollback_configuration_isValid = false;

    m_rolling_update_policy_isSet = false;
    m_rolling_update_policy_isValid = false;
}

void OAIDescribeEndpointOutput_LastDeploymentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeEndpointOutput_LastDeploymentConfig::fromJsonObject(QJsonObject json) {

    m_blue_green_update_policy_isValid = ::OpenAPI::fromJsonValue(m_blue_green_update_policy, json[QString("BlueGreenUpdatePolicy")]);
    m_blue_green_update_policy_isSet = !json[QString("BlueGreenUpdatePolicy")].isNull() && m_blue_green_update_policy_isValid;

    m_auto_rollback_configuration_isValid = ::OpenAPI::fromJsonValue(m_auto_rollback_configuration, json[QString("AutoRollbackConfiguration")]);
    m_auto_rollback_configuration_isSet = !json[QString("AutoRollbackConfiguration")].isNull() && m_auto_rollback_configuration_isValid;

    m_rolling_update_policy_isValid = ::OpenAPI::fromJsonValue(m_rolling_update_policy, json[QString("RollingUpdatePolicy")]);
    m_rolling_update_policy_isSet = !json[QString("RollingUpdatePolicy")].isNull() && m_rolling_update_policy_isValid;
}

QString OAIDescribeEndpointOutput_LastDeploymentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeEndpointOutput_LastDeploymentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_blue_green_update_policy.isSet()) {
        obj.insert(QString("BlueGreenUpdatePolicy"), ::OpenAPI::toJsonValue(m_blue_green_update_policy));
    }
    if (m_auto_rollback_configuration.isSet()) {
        obj.insert(QString("AutoRollbackConfiguration"), ::OpenAPI::toJsonValue(m_auto_rollback_configuration));
    }
    if (m_rolling_update_policy.isSet()) {
        obj.insert(QString("RollingUpdatePolicy"), ::OpenAPI::toJsonValue(m_rolling_update_policy));
    }
    return obj;
}

OAIDeploymentConfig_BlueGreenUpdatePolicy OAIDescribeEndpointOutput_LastDeploymentConfig::getBlueGreenUpdatePolicy() const {
    return m_blue_green_update_policy;
}
void OAIDescribeEndpointOutput_LastDeploymentConfig::setBlueGreenUpdatePolicy(const OAIDeploymentConfig_BlueGreenUpdatePolicy &blue_green_update_policy) {
    m_blue_green_update_policy = blue_green_update_policy;
    m_blue_green_update_policy_isSet = true;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_blue_green_update_policy_Set() const{
    return m_blue_green_update_policy_isSet;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_blue_green_update_policy_Valid() const{
    return m_blue_green_update_policy_isValid;
}

OAIDeploymentConfig_AutoRollbackConfiguration OAIDescribeEndpointOutput_LastDeploymentConfig::getAutoRollbackConfiguration() const {
    return m_auto_rollback_configuration;
}
void OAIDescribeEndpointOutput_LastDeploymentConfig::setAutoRollbackConfiguration(const OAIDeploymentConfig_AutoRollbackConfiguration &auto_rollback_configuration) {
    m_auto_rollback_configuration = auto_rollback_configuration;
    m_auto_rollback_configuration_isSet = true;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_auto_rollback_configuration_Set() const{
    return m_auto_rollback_configuration_isSet;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_auto_rollback_configuration_Valid() const{
    return m_auto_rollback_configuration_isValid;
}

OAIDeploymentConfig_RollingUpdatePolicy OAIDescribeEndpointOutput_LastDeploymentConfig::getRollingUpdatePolicy() const {
    return m_rolling_update_policy;
}
void OAIDescribeEndpointOutput_LastDeploymentConfig::setRollingUpdatePolicy(const OAIDeploymentConfig_RollingUpdatePolicy &rolling_update_policy) {
    m_rolling_update_policy = rolling_update_policy;
    m_rolling_update_policy_isSet = true;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_rolling_update_policy_Set() const{
    return m_rolling_update_policy_isSet;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::is_rolling_update_policy_Valid() const{
    return m_rolling_update_policy_isValid;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blue_green_update_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_rollback_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rolling_update_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeEndpointOutput_LastDeploymentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
