/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeFeatureGroupResponse_OnlineStoreConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeFeatureGroupResponse_OnlineStoreConfig::OAIDescribeFeatureGroupResponse_OnlineStoreConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeFeatureGroupResponse_OnlineStoreConfig::OAIDescribeFeatureGroupResponse_OnlineStoreConfig() {
    this->initializeModel();
}

OAIDescribeFeatureGroupResponse_OnlineStoreConfig::~OAIDescribeFeatureGroupResponse_OnlineStoreConfig() {}

void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::initializeModel() {

    m_security_config_isSet = false;
    m_security_config_isValid = false;

    m_enable_online_store_isSet = false;
    m_enable_online_store_isValid = false;

    m_ttl_duration_isSet = false;
    m_ttl_duration_isValid = false;
}

void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::fromJsonObject(QJsonObject json) {

    m_security_config_isValid = ::OpenAPI::fromJsonValue(m_security_config, json[QString("SecurityConfig")]);
    m_security_config_isSet = !json[QString("SecurityConfig")].isNull() && m_security_config_isValid;

    m_enable_online_store_isValid = ::OpenAPI::fromJsonValue(m_enable_online_store, json[QString("EnableOnlineStore")]);
    m_enable_online_store_isSet = !json[QString("EnableOnlineStore")].isNull() && m_enable_online_store_isValid;

    m_ttl_duration_isValid = ::OpenAPI::fromJsonValue(m_ttl_duration, json[QString("TtlDuration")]);
    m_ttl_duration_isSet = !json[QString("TtlDuration")].isNull() && m_ttl_duration_isValid;
}

QString OAIDescribeFeatureGroupResponse_OnlineStoreConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeFeatureGroupResponse_OnlineStoreConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_security_config.isSet()) {
        obj.insert(QString("SecurityConfig"), ::OpenAPI::toJsonValue(m_security_config));
    }
    if (m_enable_online_store_isSet) {
        obj.insert(QString("EnableOnlineStore"), ::OpenAPI::toJsonValue(m_enable_online_store));
    }
    if (m_ttl_duration.isSet()) {
        obj.insert(QString("TtlDuration"), ::OpenAPI::toJsonValue(m_ttl_duration));
    }
    return obj;
}

OAIOnlineStoreConfig_SecurityConfig OAIDescribeFeatureGroupResponse_OnlineStoreConfig::getSecurityConfig() const {
    return m_security_config;
}
void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::setSecurityConfig(const OAIOnlineStoreConfig_SecurityConfig &security_config) {
    m_security_config = security_config;
    m_security_config_isSet = true;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_security_config_Set() const{
    return m_security_config_isSet;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_security_config_Valid() const{
    return m_security_config_isValid;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::getEnableOnlineStore() const {
    return m_enable_online_store;
}
void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::setEnableOnlineStore(const bool &enable_online_store) {
    m_enable_online_store = enable_online_store;
    m_enable_online_store_isSet = true;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_enable_online_store_Set() const{
    return m_enable_online_store_isSet;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_enable_online_store_Valid() const{
    return m_enable_online_store_isValid;
}

OAIOnlineStoreConfig_TtlDuration OAIDescribeFeatureGroupResponse_OnlineStoreConfig::getTtlDuration() const {
    return m_ttl_duration;
}
void OAIDescribeFeatureGroupResponse_OnlineStoreConfig::setTtlDuration(const OAIOnlineStoreConfig_TtlDuration &ttl_duration) {
    m_ttl_duration = ttl_duration;
    m_ttl_duration_isSet = true;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_ttl_duration_Set() const{
    return m_ttl_duration_isSet;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::is_ttl_duration_Valid() const{
    return m_ttl_duration_isValid;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_security_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_online_store_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ttl_duration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeFeatureGroupResponse_OnlineStoreConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
