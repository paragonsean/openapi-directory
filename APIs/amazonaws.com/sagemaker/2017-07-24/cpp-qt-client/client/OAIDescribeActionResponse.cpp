/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeActionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeActionResponse::OAIDescribeActionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeActionResponse::OAIDescribeActionResponse() {
    this->initializeModel();
}

OAIDescribeActionResponse::~OAIDescribeActionResponse() {}

void OAIDescribeActionResponse::initializeModel() {

    m_action_name_isSet = false;
    m_action_name_isValid = false;

    m_action_arn_isSet = false;
    m_action_arn_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_action_type_isSet = false;
    m_action_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_metadata_properties_isSet = false;
    m_metadata_properties_isValid = false;

    m_lineage_group_arn_isSet = false;
    m_lineage_group_arn_isValid = false;
}

void OAIDescribeActionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeActionResponse::fromJsonObject(QJsonObject json) {

    m_action_name_isValid = ::OpenAPI::fromJsonValue(m_action_name, json[QString("ActionName")]);
    m_action_name_isSet = !json[QString("ActionName")].isNull() && m_action_name_isValid;

    m_action_arn_isValid = ::OpenAPI::fromJsonValue(m_action_arn, json[QString("ActionArn")]);
    m_action_arn_isSet = !json[QString("ActionArn")].isNull() && m_action_arn_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_action_type_isValid = ::OpenAPI::fromJsonValue(m_action_type, json[QString("ActionType")]);
    m_action_type_isSet = !json[QString("ActionType")].isNull() && m_action_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("Properties")]);
    m_properties_isSet = !json[QString("Properties")].isNull() && m_properties_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_metadata_properties_isValid = ::OpenAPI::fromJsonValue(m_metadata_properties, json[QString("MetadataProperties")]);
    m_metadata_properties_isSet = !json[QString("MetadataProperties")].isNull() && m_metadata_properties_isValid;

    m_lineage_group_arn_isValid = ::OpenAPI::fromJsonValue(m_lineage_group_arn, json[QString("LineageGroupArn")]);
    m_lineage_group_arn_isSet = !json[QString("LineageGroupArn")].isNull() && m_lineage_group_arn_isValid;
}

QString OAIDescribeActionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeActionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_action_name_isSet) {
        obj.insert(QString("ActionName"), ::OpenAPI::toJsonValue(m_action_name));
    }
    if (m_action_arn_isSet) {
        obj.insert(QString("ActionArn"), ::OpenAPI::toJsonValue(m_action_arn));
    }
    if (m_source.isSet()) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_action_type_isSet) {
        obj.insert(QString("ActionType"), ::OpenAPI::toJsonValue(m_action_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_properties.isSet()) {
        obj.insert(QString("Properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_modified_by.isSet()) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_metadata_properties.isSet()) {
        obj.insert(QString("MetadataProperties"), ::OpenAPI::toJsonValue(m_metadata_properties));
    }
    if (m_lineage_group_arn_isSet) {
        obj.insert(QString("LineageGroupArn"), ::OpenAPI::toJsonValue(m_lineage_group_arn));
    }
    return obj;
}

QString OAIDescribeActionResponse::getActionName() const {
    return m_action_name;
}
void OAIDescribeActionResponse::setActionName(const QString &action_name) {
    m_action_name = action_name;
    m_action_name_isSet = true;
}

bool OAIDescribeActionResponse::is_action_name_Set() const{
    return m_action_name_isSet;
}

bool OAIDescribeActionResponse::is_action_name_Valid() const{
    return m_action_name_isValid;
}

QString OAIDescribeActionResponse::getActionArn() const {
    return m_action_arn;
}
void OAIDescribeActionResponse::setActionArn(const QString &action_arn) {
    m_action_arn = action_arn;
    m_action_arn_isSet = true;
}

bool OAIDescribeActionResponse::is_action_arn_Set() const{
    return m_action_arn_isSet;
}

bool OAIDescribeActionResponse::is_action_arn_Valid() const{
    return m_action_arn_isValid;
}

OAIDescribeActionResponse_Source OAIDescribeActionResponse::getSource() const {
    return m_source;
}
void OAIDescribeActionResponse::setSource(const OAIDescribeActionResponse_Source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIDescribeActionResponse::is_source_Set() const{
    return m_source_isSet;
}

bool OAIDescribeActionResponse::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIDescribeActionResponse::getActionType() const {
    return m_action_type;
}
void OAIDescribeActionResponse::setActionType(const QString &action_type) {
    m_action_type = action_type;
    m_action_type_isSet = true;
}

bool OAIDescribeActionResponse::is_action_type_Set() const{
    return m_action_type_isSet;
}

bool OAIDescribeActionResponse::is_action_type_Valid() const{
    return m_action_type_isValid;
}

QString OAIDescribeActionResponse::getDescription() const {
    return m_description;
}
void OAIDescribeActionResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDescribeActionResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDescribeActionResponse::is_description_Valid() const{
    return m_description_isValid;
}

OAIActionStatus OAIDescribeActionResponse::getStatus() const {
    return m_status;
}
void OAIDescribeActionResponse::setStatus(const OAIActionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeActionResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeActionResponse::is_status_Valid() const{
    return m_status_isValid;
}

QMap OAIDescribeActionResponse::getProperties() const {
    return m_properties;
}
void OAIDescribeActionResponse::setProperties(const QMap &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIDescribeActionResponse::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIDescribeActionResponse::is_properties_Valid() const{
    return m_properties_isValid;
}

QDateTime OAIDescribeActionResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeActionResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeActionResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeActionResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIUserContext OAIDescribeActionResponse::getCreatedBy() const {
    return m_created_by;
}
void OAIDescribeActionResponse::setCreatedBy(const OAIUserContext &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIDescribeActionResponse::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIDescribeActionResponse::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIDescribeActionResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeActionResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeActionResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeActionResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIUserContext OAIDescribeActionResponse::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIDescribeActionResponse::setLastModifiedBy(const OAIUserContext &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIDescribeActionResponse::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIDescribeActionResponse::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

OAIMetadataProperties OAIDescribeActionResponse::getMetadataProperties() const {
    return m_metadata_properties;
}
void OAIDescribeActionResponse::setMetadataProperties(const OAIMetadataProperties &metadata_properties) {
    m_metadata_properties = metadata_properties;
    m_metadata_properties_isSet = true;
}

bool OAIDescribeActionResponse::is_metadata_properties_Set() const{
    return m_metadata_properties_isSet;
}

bool OAIDescribeActionResponse::is_metadata_properties_Valid() const{
    return m_metadata_properties_isValid;
}

QString OAIDescribeActionResponse::getLineageGroupArn() const {
    return m_lineage_group_arn;
}
void OAIDescribeActionResponse::setLineageGroupArn(const QString &lineage_group_arn) {
    m_lineage_group_arn = lineage_group_arn;
    m_lineage_group_arn_isSet = true;
}

bool OAIDescribeActionResponse::is_lineage_group_arn_Set() const{
    return m_lineage_group_arn_isSet;
}

bool OAIDescribeActionResponse::is_lineage_group_arn_Valid() const{
    return m_lineage_group_arn_isValid;
}

bool OAIDescribeActionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lineage_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeActionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
