/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransformJobDefinition.h
 *
 * Defines the input needed to run a transform job using the inference specification specified in the algorithm.
 */

#ifndef OAITransformJobDefinition_H
#define OAITransformJobDefinition_H

#include <QJsonObject>

#include "OAIBatchStrategy.h"
#include "OAIDescribeTransformJobResponse_TransformOutput.h"
#include "OAITransformJobDefinition_TransformInput.h"
#include "OAITransformJobDefinition_TransformResources.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransformJobDefinition_TransformInput;
class OAIDescribeTransformJobResponse_TransformOutput;
class OAITransformJobDefinition_TransformResources;

class OAITransformJobDefinition : public OAIObject {
public:
    OAITransformJobDefinition();
    OAITransformJobDefinition(QString json);
    ~OAITransformJobDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxConcurrentTransforms() const;
    void setMaxConcurrentTransforms(const qint32 &max_concurrent_transforms);
    bool is_max_concurrent_transforms_Set() const;
    bool is_max_concurrent_transforms_Valid() const;

    qint32 getMaxPayloadInMb() const;
    void setMaxPayloadInMb(const qint32 &max_payload_in_mb);
    bool is_max_payload_in_mb_Set() const;
    bool is_max_payload_in_mb_Valid() const;

    OAIBatchStrategy getBatchStrategy() const;
    void setBatchStrategy(const OAIBatchStrategy &batch_strategy);
    bool is_batch_strategy_Set() const;
    bool is_batch_strategy_Valid() const;

    QMap getEnvironment() const;
    void setEnvironment(const QMap &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    OAITransformJobDefinition_TransformInput getTransformInput() const;
    void setTransformInput(const OAITransformJobDefinition_TransformInput &transform_input);
    bool is_transform_input_Set() const;
    bool is_transform_input_Valid() const;

    OAIDescribeTransformJobResponse_TransformOutput getTransformOutput() const;
    void setTransformOutput(const OAIDescribeTransformJobResponse_TransformOutput &transform_output);
    bool is_transform_output_Set() const;
    bool is_transform_output_Valid() const;

    OAITransformJobDefinition_TransformResources getTransformResources() const;
    void setTransformResources(const OAITransformJobDefinition_TransformResources &transform_resources);
    bool is_transform_resources_Set() const;
    bool is_transform_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_concurrent_transforms;
    bool m_max_concurrent_transforms_isSet;
    bool m_max_concurrent_transforms_isValid;

    qint32 m_max_payload_in_mb;
    bool m_max_payload_in_mb_isSet;
    bool m_max_payload_in_mb_isValid;

    OAIBatchStrategy m_batch_strategy;
    bool m_batch_strategy_isSet;
    bool m_batch_strategy_isValid;

    QMap m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    OAITransformJobDefinition_TransformInput m_transform_input;
    bool m_transform_input_isSet;
    bool m_transform_input_isValid;

    OAIDescribeTransformJobResponse_TransformOutput m_transform_output;
    bool m_transform_output_isSet;
    bool m_transform_output_isValid;

    OAITransformJobDefinition_TransformResources m_transform_resources;
    bool m_transform_resources_isSet;
    bool m_transform_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransformJobDefinition)

#endif // OAITransformJobDefinition_H
