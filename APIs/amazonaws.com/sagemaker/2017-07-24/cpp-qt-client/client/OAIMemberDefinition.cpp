/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMemberDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMemberDefinition::OAIMemberDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMemberDefinition::OAIMemberDefinition() {
    this->initializeModel();
}

OAIMemberDefinition::~OAIMemberDefinition() {}

void OAIMemberDefinition::initializeModel() {

    m_cognito_member_definition_isSet = false;
    m_cognito_member_definition_isValid = false;

    m_oidc_member_definition_isSet = false;
    m_oidc_member_definition_isValid = false;
}

void OAIMemberDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMemberDefinition::fromJsonObject(QJsonObject json) {

    m_cognito_member_definition_isValid = ::OpenAPI::fromJsonValue(m_cognito_member_definition, json[QString("CognitoMemberDefinition")]);
    m_cognito_member_definition_isSet = !json[QString("CognitoMemberDefinition")].isNull() && m_cognito_member_definition_isValid;

    m_oidc_member_definition_isValid = ::OpenAPI::fromJsonValue(m_oidc_member_definition, json[QString("OidcMemberDefinition")]);
    m_oidc_member_definition_isSet = !json[QString("OidcMemberDefinition")].isNull() && m_oidc_member_definition_isValid;
}

QString OAIMemberDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMemberDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_cognito_member_definition.isSet()) {
        obj.insert(QString("CognitoMemberDefinition"), ::OpenAPI::toJsonValue(m_cognito_member_definition));
    }
    if (m_oidc_member_definition.isSet()) {
        obj.insert(QString("OidcMemberDefinition"), ::OpenAPI::toJsonValue(m_oidc_member_definition));
    }
    return obj;
}

OAIMemberDefinition_CognitoMemberDefinition OAIMemberDefinition::getCognitoMemberDefinition() const {
    return m_cognito_member_definition;
}
void OAIMemberDefinition::setCognitoMemberDefinition(const OAIMemberDefinition_CognitoMemberDefinition &cognito_member_definition) {
    m_cognito_member_definition = cognito_member_definition;
    m_cognito_member_definition_isSet = true;
}

bool OAIMemberDefinition::is_cognito_member_definition_Set() const{
    return m_cognito_member_definition_isSet;
}

bool OAIMemberDefinition::is_cognito_member_definition_Valid() const{
    return m_cognito_member_definition_isValid;
}

OAIMemberDefinition_OidcMemberDefinition OAIMemberDefinition::getOidcMemberDefinition() const {
    return m_oidc_member_definition;
}
void OAIMemberDefinition::setOidcMemberDefinition(const OAIMemberDefinition_OidcMemberDefinition &oidc_member_definition) {
    m_oidc_member_definition = oidc_member_definition;
    m_oidc_member_definition_isSet = true;
}

bool OAIMemberDefinition::is_oidc_member_definition_Set() const{
    return m_oidc_member_definition_isSet;
}

bool OAIMemberDefinition::is_oidc_member_definition_Valid() const{
    return m_oidc_member_definition_isValid;
}

bool OAIMemberDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cognito_member_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_oidc_member_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMemberDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
