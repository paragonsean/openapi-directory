/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentStage_DeviceSelectionConfig.h
 *
 * 
 */

#ifndef OAIDeploymentStage_DeviceSelectionConfig_H
#define OAIDeploymentStage_DeviceSelectionConfig_H

#include <QJsonObject>

#include "OAIDeviceSubsetType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeploymentStage_DeviceSelectionConfig : public OAIObject {
public:
    OAIDeploymentStage_DeviceSelectionConfig();
    OAIDeploymentStage_DeviceSelectionConfig(QString json);
    ~OAIDeploymentStage_DeviceSelectionConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeviceSubsetType getDeviceSubsetType() const;
    void setDeviceSubsetType(const OAIDeviceSubsetType &device_subset_type);
    bool is_device_subset_type_Set() const;
    bool is_device_subset_type_Valid() const;

    qint32 getPercentage() const;
    void setPercentage(const qint32 &percentage);
    bool is_percentage_Set() const;
    bool is_percentage_Valid() const;

    QList getDeviceNames() const;
    void setDeviceNames(const QList &device_names);
    bool is_device_names_Set() const;
    bool is_device_names_Valid() const;

    QString getDeviceNameContains() const;
    void setDeviceNameContains(const QString &device_name_contains);
    bool is_device_name_contains_Set() const;
    bool is_device_name_contains_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeviceSubsetType m_device_subset_type;
    bool m_device_subset_type_isSet;
    bool m_device_subset_type_isValid;

    qint32 m_percentage;
    bool m_percentage_isSet;
    bool m_percentage_isValid;

    QList m_device_names;
    bool m_device_names_isSet;
    bool m_device_names_isValid;

    QString m_device_name_contains;
    bool m_device_name_contains_isSet;
    bool m_device_name_contains_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentStage_DeviceSelectionConfig)

#endif // OAIDeploymentStage_DeviceSelectionConfig_H
