/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryLineageRequest.h
 *
 * 
 */

#ifndef OAIQueryLineageRequest_H
#define OAIQueryLineageRequest_H

#include <QJsonObject>

#include "OAIDirection.h"
#include "OAIQueryLineageRequest_Filters.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQueryLineageRequest_Filters;

class OAIQueryLineageRequest : public OAIObject {
public:
    OAIQueryLineageRequest();
    OAIQueryLineageRequest(QString json);
    ~OAIQueryLineageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getStartArns() const;
    void setStartArns(const QList &start_arns);
    bool is_start_arns_Set() const;
    bool is_start_arns_Valid() const;

    OAIDirection getDirection() const;
    void setDirection(const OAIDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    bool getIncludeEdges() const;
    void setIncludeEdges(const bool &include_edges);
    bool is_include_edges_Set() const;
    bool is_include_edges_Valid() const;

    OAIQueryLineageRequest_Filters getFilters() const;
    void setFilters(const OAIQueryLineageRequest_Filters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    qint32 getMaxDepth() const;
    void setMaxDepth(const qint32 &max_depth);
    bool is_max_depth_Set() const;
    bool is_max_depth_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_start_arns;
    bool m_start_arns_isSet;
    bool m_start_arns_isValid;

    OAIDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    bool m_include_edges;
    bool m_include_edges_isSet;
    bool m_include_edges_isValid;

    OAIQueryLineageRequest_Filters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    qint32 m_max_depth;
    bool m_max_depth_isSet;
    bool m_max_depth_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryLineageRequest)

#endif // OAIQueryLineageRequest_H
