/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProfilerConfigForUpdate.h
 *
 * Configuration information for updating the Amazon SageMaker Debugger profile parameters, system and framework metrics configurations, and storage paths.
 */

#ifndef OAIProfilerConfigForUpdate_H
#define OAIProfilerConfigForUpdate_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProfilerConfigForUpdate : public OAIObject {
public:
    OAIProfilerConfigForUpdate();
    OAIProfilerConfigForUpdate(QString json);
    ~OAIProfilerConfigForUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3OutputPath() const;
    void setS3OutputPath(const QString &s3_output_path);
    bool is_s3_output_path_Set() const;
    bool is_s3_output_path_Valid() const;

    qint32 getProfilingIntervalInMilliseconds() const;
    void setProfilingIntervalInMilliseconds(const qint32 &profiling_interval_in_milliseconds);
    bool is_profiling_interval_in_milliseconds_Set() const;
    bool is_profiling_interval_in_milliseconds_Valid() const;

    QMap getProfilingParameters() const;
    void setProfilingParameters(const QMap &profiling_parameters);
    bool is_profiling_parameters_Set() const;
    bool is_profiling_parameters_Valid() const;

    bool getDisableProfiler() const;
    void setDisableProfiler(const bool &disable_profiler);
    bool is_disable_profiler_Set() const;
    bool is_disable_profiler_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_output_path;
    bool m_s3_output_path_isSet;
    bool m_s3_output_path_isValid;

    qint32 m_profiling_interval_in_milliseconds;
    bool m_profiling_interval_in_milliseconds_isSet;
    bool m_profiling_interval_in_milliseconds_isValid;

    QMap m_profiling_parameters;
    bool m_profiling_parameters_isSet;
    bool m_profiling_parameters_isValid;

    bool m_disable_profiler;
    bool m_disable_profiler_isSet;
    bool m_disable_profiler_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProfilerConfigForUpdate)

#endif // OAIProfilerConfigForUpdate_H
