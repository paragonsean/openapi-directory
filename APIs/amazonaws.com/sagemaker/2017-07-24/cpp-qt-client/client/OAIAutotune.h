/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAutotune.h
 *
 * &lt;p&gt;A flag to indicate if you want to use Autotune to automatically find optimal values for the following fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-ParameterRanges\&quot;&gt;ParameterRanges&lt;/a&gt;: The names and ranges of parameters that a hyperparameter tuning job can optimize.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html\&quot;&gt;ResourceLimits&lt;/a&gt;: The maximum resources that can be used for a training job. These resources include the maximum number of training jobs, the maximum runtime of a tuning job, and the maximum number of training jobs to run at the same time.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html#sagemaker-Type-HyperParameterTuningJobConfig-TrainingJobEarlyStoppingType\&quot;&gt;TrainingJobEarlyStoppingType&lt;/a&gt;: A flag that specifies whether or not to use early stopping for training jobs launched by a hyperparameter tuning job.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-RetryStrategy\&quot;&gt;RetryStrategy&lt;/a&gt;: The number of times to retry a training job.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTuningJobConfig.html\&quot;&gt;Strategy&lt;/a&gt;: Specifies how hyperparameter tuning chooses the combinations of hyperparameter values to use for the training jobs that it launches.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ConvergenceDetected.html\&quot;&gt;ConvergenceDetected&lt;/a&gt;: A flag to indicate that Automatic model tuning (AMT) has detected model convergence.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIAutotune_H
#define OAIAutotune_H

#include <QJsonObject>

#include "OAIAutotuneMode.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAutotune : public OAIObject {
public:
    OAIAutotune();
    OAIAutotune(QString json);
    ~OAIAutotune() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutotuneMode getMode() const;
    void setMode(const OAIAutotuneMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutotuneMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAutotune)

#endif // OAIAutotune_H
