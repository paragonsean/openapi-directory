/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpoint.h
 *
 * A hosted endpoint for real-time inference.
 */

#ifndef OAIEndpoint_H
#define OAIEndpoint_H

#include <QJsonObject>

#include "OAIDataCaptureConfigSummary.h"
#include "OAIEndpointStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataCaptureConfigSummary;

class OAIEndpoint : public OAIObject {
public:
    OAIEndpoint();
    OAIEndpoint(QString json);
    ~OAIEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointName() const;
    void setEndpointName(const QString &endpoint_name);
    bool is_endpoint_name_Set() const;
    bool is_endpoint_name_Valid() const;

    QString getEndpointArn() const;
    void setEndpointArn(const QString &endpoint_arn);
    bool is_endpoint_arn_Set() const;
    bool is_endpoint_arn_Valid() const;

    QString getEndpointConfigName() const;
    void setEndpointConfigName(const QString &endpoint_config_name);
    bool is_endpoint_config_name_Set() const;
    bool is_endpoint_config_name_Valid() const;

    QList getProductionVariants() const;
    void setProductionVariants(const QList &production_variants);
    bool is_production_variants_Set() const;
    bool is_production_variants_Valid() const;

    OAIDataCaptureConfigSummary getDataCaptureConfig() const;
    void setDataCaptureConfig(const OAIDataCaptureConfigSummary &data_capture_config);
    bool is_data_capture_config_Set() const;
    bool is_data_capture_config_Valid() const;

    OAIEndpointStatus getEndpointStatus() const;
    void setEndpointStatus(const OAIEndpointStatus &endpoint_status);
    bool is_endpoint_status_Set() const;
    bool is_endpoint_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QList getMonitoringSchedules() const;
    void setMonitoringSchedules(const QList &monitoring_schedules);
    bool is_monitoring_schedules_Set() const;
    bool is_monitoring_schedules_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList getShadowProductionVariants() const;
    void setShadowProductionVariants(const QList &shadow_production_variants);
    bool is_shadow_production_variants_Set() const;
    bool is_shadow_production_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_name;
    bool m_endpoint_name_isSet;
    bool m_endpoint_name_isValid;

    QString m_endpoint_arn;
    bool m_endpoint_arn_isSet;
    bool m_endpoint_arn_isValid;

    QString m_endpoint_config_name;
    bool m_endpoint_config_name_isSet;
    bool m_endpoint_config_name_isValid;

    QList m_production_variants;
    bool m_production_variants_isSet;
    bool m_production_variants_isValid;

    OAIDataCaptureConfigSummary m_data_capture_config;
    bool m_data_capture_config_isSet;
    bool m_data_capture_config_isValid;

    OAIEndpointStatus m_endpoint_status;
    bool m_endpoint_status_isSet;
    bool m_endpoint_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QList m_monitoring_schedules;
    bool m_monitoring_schedules_isSet;
    bool m_monitoring_schedules_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList m_shadow_production_variants;
    bool m_shadow_production_variants_isSet;
    bool m_shadow_production_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpoint)

#endif // OAIEndpoint_H
