/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAutoMLJobResponse_ResolvedAttributes.h
 *
 * 
 */

#ifndef OAIDescribeAutoMLJobResponse_ResolvedAttributes_H
#define OAIDescribeAutoMLJobResponse_ResolvedAttributes_H

#include <QJsonObject>

#include "OAIAutoMLJobCompletionCriteria.h"
#include "OAIAutoMLJobObjective.h"
#include "OAIProblemType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoMLJobObjective;
class OAIAutoMLJobCompletionCriteria;

class OAIDescribeAutoMLJobResponse_ResolvedAttributes : public OAIObject {
public:
    OAIDescribeAutoMLJobResponse_ResolvedAttributes();
    OAIDescribeAutoMLJobResponse_ResolvedAttributes(QString json);
    ~OAIDescribeAutoMLJobResponse_ResolvedAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAutoMLJobObjective getAutoMlJobObjective() const;
    void setAutoMlJobObjective(const OAIAutoMLJobObjective &auto_ml_job_objective);
    bool is_auto_ml_job_objective_Set() const;
    bool is_auto_ml_job_objective_Valid() const;

    OAIProblemType getProblemType() const;
    void setProblemType(const OAIProblemType &problem_type);
    bool is_problem_type_Set() const;
    bool is_problem_type_Valid() const;

    OAIAutoMLJobCompletionCriteria getCompletionCriteria() const;
    void setCompletionCriteria(const OAIAutoMLJobCompletionCriteria &completion_criteria);
    bool is_completion_criteria_Set() const;
    bool is_completion_criteria_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAutoMLJobObjective m_auto_ml_job_objective;
    bool m_auto_ml_job_objective_isSet;
    bool m_auto_ml_job_objective_isValid;

    OAIProblemType m_problem_type;
    bool m_problem_type_isSet;
    bool m_problem_type_isValid;

    OAIAutoMLJobCompletionCriteria m_completion_criteria;
    bool m_completion_criteria_isSet;
    bool m_completion_criteria_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAutoMLJobResponse_ResolvedAttributes)

#endif // OAIDescribeAutoMLJobResponse_ResolvedAttributes_H
