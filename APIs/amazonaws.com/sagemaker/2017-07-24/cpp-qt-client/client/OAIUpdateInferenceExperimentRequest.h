/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateInferenceExperimentRequest.h
 *
 * 
 */

#ifndef OAIUpdateInferenceExperimentRequest_H
#define OAIUpdateInferenceExperimentRequest_H

#include <QJsonObject>

#include "OAICreateInferenceExperimentRequest_ShadowModeConfig.h"
#include "OAIDescribeInferenceExperimentResponse_DataStorageConfig.h"
#include "OAIUpdateInferenceExperimentRequest_Schedule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateInferenceExperimentRequest_Schedule;
class OAIDescribeInferenceExperimentResponse_DataStorageConfig;
class OAICreateInferenceExperimentRequest_ShadowModeConfig;

class OAIUpdateInferenceExperimentRequest : public OAIObject {
public:
    OAIUpdateInferenceExperimentRequest();
    OAIUpdateInferenceExperimentRequest(QString json);
    ~OAIUpdateInferenceExperimentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIUpdateInferenceExperimentRequest_Schedule getSchedule() const;
    void setSchedule(const OAIUpdateInferenceExperimentRequest_Schedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getModelVariants() const;
    void setModelVariants(const QList &model_variants);
    bool is_model_variants_Set() const;
    bool is_model_variants_Valid() const;

    OAIDescribeInferenceExperimentResponse_DataStorageConfig getDataStorageConfig() const;
    void setDataStorageConfig(const OAIDescribeInferenceExperimentResponse_DataStorageConfig &data_storage_config);
    bool is_data_storage_config_Set() const;
    bool is_data_storage_config_Valid() const;

    OAICreateInferenceExperimentRequest_ShadowModeConfig getShadowModeConfig() const;
    void setShadowModeConfig(const OAICreateInferenceExperimentRequest_ShadowModeConfig &shadow_mode_config);
    bool is_shadow_mode_config_Set() const;
    bool is_shadow_mode_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIUpdateInferenceExperimentRequest_Schedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_model_variants;
    bool m_model_variants_isSet;
    bool m_model_variants_isValid;

    OAIDescribeInferenceExperimentResponse_DataStorageConfig m_data_storage_config;
    bool m_data_storage_config_isSet;
    bool m_data_storage_config_isValid;

    OAICreateInferenceExperimentRequest_ShadowModeConfig m_shadow_mode_config;
    bool m_shadow_mode_config_isSet;
    bool m_shadow_mode_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateInferenceExperimentRequest)

#endif // OAIUpdateInferenceExperimentRequest_H
