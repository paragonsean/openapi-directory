/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILabelingJobDataSource.h
 *
 * &lt;p&gt;Provides information about the location of input data.&lt;/p&gt; &lt;p&gt;You must specify at least one of the following: &lt;code&gt;S3DataSource&lt;/code&gt; or &lt;code&gt;SnsDataSource&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;SnsDataSource&lt;/code&gt; to specify an SNS input topic for a streaming labeling job. If you do not specify and SNS input topic ARN, Ground Truth will create a one-time labeling job.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;S3DataSource&lt;/code&gt; to specify an input manifest file for both streaming and one-time labeling jobs. Adding an &lt;code&gt;S3DataSource&lt;/code&gt; is optional if you use &lt;code&gt;SnsDataSource&lt;/code&gt; to create a streaming labeling job.&lt;/p&gt;
 */

#ifndef OAILabelingJobDataSource_H
#define OAILabelingJobDataSource_H

#include <QJsonObject>

#include "OAILabelingJobDataSource_S3DataSource.h"
#include "OAILabelingJobDataSource_SnsDataSource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabelingJobDataSource_S3DataSource;
class OAILabelingJobDataSource_SnsDataSource;

class OAILabelingJobDataSource : public OAIObject {
public:
    OAILabelingJobDataSource();
    OAILabelingJobDataSource(QString json);
    ~OAILabelingJobDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILabelingJobDataSource_S3DataSource getS3DataSource() const;
    void setS3DataSource(const OAILabelingJobDataSource_S3DataSource &s3_data_source);
    bool is_s3_data_source_Set() const;
    bool is_s3_data_source_Valid() const;

    OAILabelingJobDataSource_SnsDataSource getSnsDataSource() const;
    void setSnsDataSource(const OAILabelingJobDataSource_SnsDataSource &sns_data_source);
    bool is_sns_data_source_Set() const;
    bool is_sns_data_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILabelingJobDataSource_S3DataSource m_s3_data_source;
    bool m_s3_data_source_isSet;
    bool m_s3_data_source_isValid;

    OAILabelingJobDataSource_SnsDataSource m_sns_data_source;
    bool m_sns_data_source_isSet;
    bool m_sns_data_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILabelingJobDataSource)

#endif // OAILabelingJobDataSource_H
