/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHubContentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHubContentInfo::OAIHubContentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHubContentInfo::OAIHubContentInfo() {
    this->initializeModel();
}

OAIHubContentInfo::~OAIHubContentInfo() {}

void OAIHubContentInfo::initializeModel() {

    m_hub_content_name_isSet = false;
    m_hub_content_name_isValid = false;

    m_hub_content_arn_isSet = false;
    m_hub_content_arn_isValid = false;

    m_hub_content_version_isSet = false;
    m_hub_content_version_isValid = false;

    m_hub_content_type_isSet = false;
    m_hub_content_type_isValid = false;

    m_document_schema_version_isSet = false;
    m_document_schema_version_isValid = false;

    m_hub_content_display_name_isSet = false;
    m_hub_content_display_name_isValid = false;

    m_hub_content_description_isSet = false;
    m_hub_content_description_isValid = false;

    m_hub_content_search_keywords_isSet = false;
    m_hub_content_search_keywords_isValid = false;

    m_hub_content_status_isSet = false;
    m_hub_content_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;
}

void OAIHubContentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHubContentInfo::fromJsonObject(QJsonObject json) {

    m_hub_content_name_isValid = ::OpenAPI::fromJsonValue(m_hub_content_name, json[QString("HubContentName")]);
    m_hub_content_name_isSet = !json[QString("HubContentName")].isNull() && m_hub_content_name_isValid;

    m_hub_content_arn_isValid = ::OpenAPI::fromJsonValue(m_hub_content_arn, json[QString("HubContentArn")]);
    m_hub_content_arn_isSet = !json[QString("HubContentArn")].isNull() && m_hub_content_arn_isValid;

    m_hub_content_version_isValid = ::OpenAPI::fromJsonValue(m_hub_content_version, json[QString("HubContentVersion")]);
    m_hub_content_version_isSet = !json[QString("HubContentVersion")].isNull() && m_hub_content_version_isValid;

    m_hub_content_type_isValid = ::OpenAPI::fromJsonValue(m_hub_content_type, json[QString("HubContentType")]);
    m_hub_content_type_isSet = !json[QString("HubContentType")].isNull() && m_hub_content_type_isValid;

    m_document_schema_version_isValid = ::OpenAPI::fromJsonValue(m_document_schema_version, json[QString("DocumentSchemaVersion")]);
    m_document_schema_version_isSet = !json[QString("DocumentSchemaVersion")].isNull() && m_document_schema_version_isValid;

    m_hub_content_display_name_isValid = ::OpenAPI::fromJsonValue(m_hub_content_display_name, json[QString("HubContentDisplayName")]);
    m_hub_content_display_name_isSet = !json[QString("HubContentDisplayName")].isNull() && m_hub_content_display_name_isValid;

    m_hub_content_description_isValid = ::OpenAPI::fromJsonValue(m_hub_content_description, json[QString("HubContentDescription")]);
    m_hub_content_description_isSet = !json[QString("HubContentDescription")].isNull() && m_hub_content_description_isValid;

    m_hub_content_search_keywords_isValid = ::OpenAPI::fromJsonValue(m_hub_content_search_keywords, json[QString("HubContentSearchKeywords")]);
    m_hub_content_search_keywords_isSet = !json[QString("HubContentSearchKeywords")].isNull() && m_hub_content_search_keywords_isValid;

    m_hub_content_status_isValid = ::OpenAPI::fromJsonValue(m_hub_content_status, json[QString("HubContentStatus")]);
    m_hub_content_status_isSet = !json[QString("HubContentStatus")].isNull() && m_hub_content_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;
}

QString OAIHubContentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHubContentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_hub_content_name_isSet) {
        obj.insert(QString("HubContentName"), ::OpenAPI::toJsonValue(m_hub_content_name));
    }
    if (m_hub_content_arn_isSet) {
        obj.insert(QString("HubContentArn"), ::OpenAPI::toJsonValue(m_hub_content_arn));
    }
    if (m_hub_content_version_isSet) {
        obj.insert(QString("HubContentVersion"), ::OpenAPI::toJsonValue(m_hub_content_version));
    }
    if (m_hub_content_type.isSet()) {
        obj.insert(QString("HubContentType"), ::OpenAPI::toJsonValue(m_hub_content_type));
    }
    if (m_document_schema_version_isSet) {
        obj.insert(QString("DocumentSchemaVersion"), ::OpenAPI::toJsonValue(m_document_schema_version));
    }
    if (m_hub_content_display_name_isSet) {
        obj.insert(QString("HubContentDisplayName"), ::OpenAPI::toJsonValue(m_hub_content_display_name));
    }
    if (m_hub_content_description_isSet) {
        obj.insert(QString("HubContentDescription"), ::OpenAPI::toJsonValue(m_hub_content_description));
    }
    if (m_hub_content_search_keywords.isSet()) {
        obj.insert(QString("HubContentSearchKeywords"), ::OpenAPI::toJsonValue(m_hub_content_search_keywords));
    }
    if (m_hub_content_status.isSet()) {
        obj.insert(QString("HubContentStatus"), ::OpenAPI::toJsonValue(m_hub_content_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    return obj;
}

QString OAIHubContentInfo::getHubContentName() const {
    return m_hub_content_name;
}
void OAIHubContentInfo::setHubContentName(const QString &hub_content_name) {
    m_hub_content_name = hub_content_name;
    m_hub_content_name_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_name_Set() const{
    return m_hub_content_name_isSet;
}

bool OAIHubContentInfo::is_hub_content_name_Valid() const{
    return m_hub_content_name_isValid;
}

QString OAIHubContentInfo::getHubContentArn() const {
    return m_hub_content_arn;
}
void OAIHubContentInfo::setHubContentArn(const QString &hub_content_arn) {
    m_hub_content_arn = hub_content_arn;
    m_hub_content_arn_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_arn_Set() const{
    return m_hub_content_arn_isSet;
}

bool OAIHubContentInfo::is_hub_content_arn_Valid() const{
    return m_hub_content_arn_isValid;
}

QString OAIHubContentInfo::getHubContentVersion() const {
    return m_hub_content_version;
}
void OAIHubContentInfo::setHubContentVersion(const QString &hub_content_version) {
    m_hub_content_version = hub_content_version;
    m_hub_content_version_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_version_Set() const{
    return m_hub_content_version_isSet;
}

bool OAIHubContentInfo::is_hub_content_version_Valid() const{
    return m_hub_content_version_isValid;
}

OAIHubContentType OAIHubContentInfo::getHubContentType() const {
    return m_hub_content_type;
}
void OAIHubContentInfo::setHubContentType(const OAIHubContentType &hub_content_type) {
    m_hub_content_type = hub_content_type;
    m_hub_content_type_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_type_Set() const{
    return m_hub_content_type_isSet;
}

bool OAIHubContentInfo::is_hub_content_type_Valid() const{
    return m_hub_content_type_isValid;
}

QString OAIHubContentInfo::getDocumentSchemaVersion() const {
    return m_document_schema_version;
}
void OAIHubContentInfo::setDocumentSchemaVersion(const QString &document_schema_version) {
    m_document_schema_version = document_schema_version;
    m_document_schema_version_isSet = true;
}

bool OAIHubContentInfo::is_document_schema_version_Set() const{
    return m_document_schema_version_isSet;
}

bool OAIHubContentInfo::is_document_schema_version_Valid() const{
    return m_document_schema_version_isValid;
}

QString OAIHubContentInfo::getHubContentDisplayName() const {
    return m_hub_content_display_name;
}
void OAIHubContentInfo::setHubContentDisplayName(const QString &hub_content_display_name) {
    m_hub_content_display_name = hub_content_display_name;
    m_hub_content_display_name_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_display_name_Set() const{
    return m_hub_content_display_name_isSet;
}

bool OAIHubContentInfo::is_hub_content_display_name_Valid() const{
    return m_hub_content_display_name_isValid;
}

QString OAIHubContentInfo::getHubContentDescription() const {
    return m_hub_content_description;
}
void OAIHubContentInfo::setHubContentDescription(const QString &hub_content_description) {
    m_hub_content_description = hub_content_description;
    m_hub_content_description_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_description_Set() const{
    return m_hub_content_description_isSet;
}

bool OAIHubContentInfo::is_hub_content_description_Valid() const{
    return m_hub_content_description_isValid;
}

QList OAIHubContentInfo::getHubContentSearchKeywords() const {
    return m_hub_content_search_keywords;
}
void OAIHubContentInfo::setHubContentSearchKeywords(const QList &hub_content_search_keywords) {
    m_hub_content_search_keywords = hub_content_search_keywords;
    m_hub_content_search_keywords_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_search_keywords_Set() const{
    return m_hub_content_search_keywords_isSet;
}

bool OAIHubContentInfo::is_hub_content_search_keywords_Valid() const{
    return m_hub_content_search_keywords_isValid;
}

OAIHubContentStatus OAIHubContentInfo::getHubContentStatus() const {
    return m_hub_content_status;
}
void OAIHubContentInfo::setHubContentStatus(const OAIHubContentStatus &hub_content_status) {
    m_hub_content_status = hub_content_status;
    m_hub_content_status_isSet = true;
}

bool OAIHubContentInfo::is_hub_content_status_Set() const{
    return m_hub_content_status_isSet;
}

bool OAIHubContentInfo::is_hub_content_status_Valid() const{
    return m_hub_content_status_isValid;
}

QDateTime OAIHubContentInfo::getCreationTime() const {
    return m_creation_time;
}
void OAIHubContentInfo::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIHubContentInfo::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIHubContentInfo::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

bool OAIHubContentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hub_content_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_schema_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_search_keywords.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_content_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHubContentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hub_content_name_isValid && m_hub_content_arn_isValid && m_hub_content_version_isValid && m_hub_content_type_isValid && m_document_schema_version_isValid && m_hub_content_status_isValid && m_creation_time_isValid && true;
}

} // namespace OpenAPI
