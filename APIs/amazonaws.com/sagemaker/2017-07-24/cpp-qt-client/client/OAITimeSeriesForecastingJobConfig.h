/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeriesForecastingJobConfig.h
 *
 * &lt;p&gt;The collection of settings used by an AutoML job V2 for the time-series forecasting problem type.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The &lt;code&gt;TimeSeriesForecastingJobConfig&lt;/code&gt; problem type is only available in private beta. Contact Amazon Web Services Support or your account manager to learn more about access privileges.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAITimeSeriesForecastingJobConfig_H
#define OAITimeSeriesForecastingJobConfig_H

#include <QJsonObject>

#include "OAIAutoMLJobCompletionCriteria.h"
#include "OAITimeSeriesForecastingJobConfig_TimeSeriesConfig.h"
#include "OAITimeSeriesForecastingJobConfig_Transformations.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAutoMLJobCompletionCriteria;
class OAITimeSeriesForecastingJobConfig_Transformations;
class OAITimeSeriesForecastingJobConfig_TimeSeriesConfig;

class OAITimeSeriesForecastingJobConfig : public OAIObject {
public:
    OAITimeSeriesForecastingJobConfig();
    OAITimeSeriesForecastingJobConfig(QString json);
    ~OAITimeSeriesForecastingJobConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFeatureSpecificationS3Uri() const;
    void setFeatureSpecificationS3Uri(const QString &feature_specification_s3_uri);
    bool is_feature_specification_s3_uri_Set() const;
    bool is_feature_specification_s3_uri_Valid() const;

    OAIAutoMLJobCompletionCriteria getCompletionCriteria() const;
    void setCompletionCriteria(const OAIAutoMLJobCompletionCriteria &completion_criteria);
    bool is_completion_criteria_Set() const;
    bool is_completion_criteria_Valid() const;

    QString getForecastFrequency() const;
    void setForecastFrequency(const QString &forecast_frequency);
    bool is_forecast_frequency_Set() const;
    bool is_forecast_frequency_Valid() const;

    qint32 getForecastHorizon() const;
    void setForecastHorizon(const qint32 &forecast_horizon);
    bool is_forecast_horizon_Set() const;
    bool is_forecast_horizon_Valid() const;

    QList getForecastQuantiles() const;
    void setForecastQuantiles(const QList &forecast_quantiles);
    bool is_forecast_quantiles_Set() const;
    bool is_forecast_quantiles_Valid() const;

    OAITimeSeriesForecastingJobConfig_Transformations getTransformations() const;
    void setTransformations(const OAITimeSeriesForecastingJobConfig_Transformations &transformations);
    bool is_transformations_Set() const;
    bool is_transformations_Valid() const;

    OAITimeSeriesForecastingJobConfig_TimeSeriesConfig getTimeSeriesConfig() const;
    void setTimeSeriesConfig(const OAITimeSeriesForecastingJobConfig_TimeSeriesConfig &time_series_config);
    bool is_time_series_config_Set() const;
    bool is_time_series_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_feature_specification_s3_uri;
    bool m_feature_specification_s3_uri_isSet;
    bool m_feature_specification_s3_uri_isValid;

    OAIAutoMLJobCompletionCriteria m_completion_criteria;
    bool m_completion_criteria_isSet;
    bool m_completion_criteria_isValid;

    QString m_forecast_frequency;
    bool m_forecast_frequency_isSet;
    bool m_forecast_frequency_isValid;

    qint32 m_forecast_horizon;
    bool m_forecast_horizon_isSet;
    bool m_forecast_horizon_isValid;

    QList m_forecast_quantiles;
    bool m_forecast_quantiles_isSet;
    bool m_forecast_quantiles_isValid;

    OAITimeSeriesForecastingJobConfig_Transformations m_transformations;
    bool m_transformations_isSet;
    bool m_transformations_isValid;

    OAITimeSeriesForecastingJobConfig_TimeSeriesConfig m_time_series_config;
    bool m_time_series_config_isSet;
    bool m_time_series_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeriesForecastingJobConfig)

#endif // OAITimeSeriesForecastingJobConfig_H
