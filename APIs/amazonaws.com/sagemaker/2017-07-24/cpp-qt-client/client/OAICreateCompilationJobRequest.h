/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCompilationJobRequest.h
 *
 * 
 */

#ifndef OAICreateCompilationJobRequest_H
#define OAICreateCompilationJobRequest_H

#include <QJsonObject>

#include "OAICreateCompilationJobRequest_InputConfig.h"
#include "OAICreateCompilationJobRequest_OutputConfig.h"
#include "OAICreateCompilationJobRequest_StoppingCondition.h"
#include "OAICreateCompilationJobRequest_VpcConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCompilationJobRequest_InputConfig;
class OAICreateCompilationJobRequest_OutputConfig;
class OAICreateCompilationJobRequest_VpcConfig;
class OAICreateCompilationJobRequest_StoppingCondition;

class OAICreateCompilationJobRequest : public OAIObject {
public:
    OAICreateCompilationJobRequest();
    OAICreateCompilationJobRequest(QString json);
    ~OAICreateCompilationJobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompilationJobName() const;
    void setCompilationJobName(const QString &compilation_job_name);
    bool is_compilation_job_name_Set() const;
    bool is_compilation_job_name_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getModelPackageVersionArn() const;
    void setModelPackageVersionArn(const QString &model_package_version_arn);
    bool is_model_package_version_arn_Set() const;
    bool is_model_package_version_arn_Valid() const;

    OAICreateCompilationJobRequest_InputConfig getInputConfig() const;
    void setInputConfig(const OAICreateCompilationJobRequest_InputConfig &input_config);
    bool is_input_config_Set() const;
    bool is_input_config_Valid() const;

    OAICreateCompilationJobRequest_OutputConfig getOutputConfig() const;
    void setOutputConfig(const OAICreateCompilationJobRequest_OutputConfig &output_config);
    bool is_output_config_Set() const;
    bool is_output_config_Valid() const;

    OAICreateCompilationJobRequest_VpcConfig getVpcConfig() const;
    void setVpcConfig(const OAICreateCompilationJobRequest_VpcConfig &vpc_config);
    bool is_vpc_config_Set() const;
    bool is_vpc_config_Valid() const;

    OAICreateCompilationJobRequest_StoppingCondition getStoppingCondition() const;
    void setStoppingCondition(const OAICreateCompilationJobRequest_StoppingCondition &stopping_condition);
    bool is_stopping_condition_Set() const;
    bool is_stopping_condition_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_compilation_job_name;
    bool m_compilation_job_name_isSet;
    bool m_compilation_job_name_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_model_package_version_arn;
    bool m_model_package_version_arn_isSet;
    bool m_model_package_version_arn_isValid;

    OAICreateCompilationJobRequest_InputConfig m_input_config;
    bool m_input_config_isSet;
    bool m_input_config_isValid;

    OAICreateCompilationJobRequest_OutputConfig m_output_config;
    bool m_output_config_isSet;
    bool m_output_config_isValid;

    OAICreateCompilationJobRequest_VpcConfig m_vpc_config;
    bool m_vpc_config_isSet;
    bool m_vpc_config_isValid;

    OAICreateCompilationJobRequest_StoppingCondition m_stopping_condition;
    bool m_stopping_condition_isSet;
    bool m_stopping_condition_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCompilationJobRequest)

#endif // OAICreateCompilationJobRequest_H
