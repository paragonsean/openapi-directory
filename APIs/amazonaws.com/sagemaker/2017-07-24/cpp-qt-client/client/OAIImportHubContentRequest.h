/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportHubContentRequest.h
 *
 * 
 */

#ifndef OAIImportHubContentRequest_H
#define OAIImportHubContentRequest_H

#include <QJsonObject>

#include "OAIHubContentType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportHubContentRequest : public OAIObject {
public:
    OAIImportHubContentRequest();
    OAIImportHubContentRequest(QString json);
    ~OAIImportHubContentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHubContentName() const;
    void setHubContentName(const QString &hub_content_name);
    bool is_hub_content_name_Set() const;
    bool is_hub_content_name_Valid() const;

    QString getHubContentVersion() const;
    void setHubContentVersion(const QString &hub_content_version);
    bool is_hub_content_version_Set() const;
    bool is_hub_content_version_Valid() const;

    OAIHubContentType getHubContentType() const;
    void setHubContentType(const OAIHubContentType &hub_content_type);
    bool is_hub_content_type_Set() const;
    bool is_hub_content_type_Valid() const;

    QString getDocumentSchemaVersion() const;
    void setDocumentSchemaVersion(const QString &document_schema_version);
    bool is_document_schema_version_Set() const;
    bool is_document_schema_version_Valid() const;

    QString getHubName() const;
    void setHubName(const QString &hub_name);
    bool is_hub_name_Set() const;
    bool is_hub_name_Valid() const;

    QString getHubContentDisplayName() const;
    void setHubContentDisplayName(const QString &hub_content_display_name);
    bool is_hub_content_display_name_Set() const;
    bool is_hub_content_display_name_Valid() const;

    QString getHubContentDescription() const;
    void setHubContentDescription(const QString &hub_content_description);
    bool is_hub_content_description_Set() const;
    bool is_hub_content_description_Valid() const;

    QString getHubContentMarkdown() const;
    void setHubContentMarkdown(const QString &hub_content_markdown);
    bool is_hub_content_markdown_Set() const;
    bool is_hub_content_markdown_Valid() const;

    QString getHubContentDocument() const;
    void setHubContentDocument(const QString &hub_content_document);
    bool is_hub_content_document_Set() const;
    bool is_hub_content_document_Valid() const;

    QList getHubContentSearchKeywords() const;
    void setHubContentSearchKeywords(const QList &hub_content_search_keywords);
    bool is_hub_content_search_keywords_Set() const;
    bool is_hub_content_search_keywords_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hub_content_name;
    bool m_hub_content_name_isSet;
    bool m_hub_content_name_isValid;

    QString m_hub_content_version;
    bool m_hub_content_version_isSet;
    bool m_hub_content_version_isValid;

    OAIHubContentType m_hub_content_type;
    bool m_hub_content_type_isSet;
    bool m_hub_content_type_isValid;

    QString m_document_schema_version;
    bool m_document_schema_version_isSet;
    bool m_document_schema_version_isValid;

    QString m_hub_name;
    bool m_hub_name_isSet;
    bool m_hub_name_isValid;

    QString m_hub_content_display_name;
    bool m_hub_content_display_name_isSet;
    bool m_hub_content_display_name_isValid;

    QString m_hub_content_description;
    bool m_hub_content_description_isSet;
    bool m_hub_content_description_isValid;

    QString m_hub_content_markdown;
    bool m_hub_content_markdown_isSet;
    bool m_hub_content_markdown_isValid;

    QString m_hub_content_document;
    bool m_hub_content_document_isSet;
    bool m_hub_content_document_isValid;

    QList m_hub_content_search_keywords;
    bool m_hub_content_search_keywords_isSet;
    bool m_hub_content_search_keywords_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportHubContentRequest)

#endif // OAIImportHubContentRequest_H
