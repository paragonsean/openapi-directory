/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeHubResponse.h
 *
 * 
 */

#ifndef OAIDescribeHubResponse_H
#define OAIDescribeHubResponse_H

#include <QJsonObject>

#include "OAICreateHubRequest_S3StorageConfig.h"
#include "OAIHubStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateHubRequest_S3StorageConfig;

class OAIDescribeHubResponse : public OAIObject {
public:
    OAIDescribeHubResponse();
    OAIDescribeHubResponse(QString json);
    ~OAIDescribeHubResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHubName() const;
    void setHubName(const QString &hub_name);
    bool is_hub_name_Set() const;
    bool is_hub_name_Valid() const;

    QString getHubArn() const;
    void setHubArn(const QString &hub_arn);
    bool is_hub_arn_Set() const;
    bool is_hub_arn_Valid() const;

    QString getHubDisplayName() const;
    void setHubDisplayName(const QString &hub_display_name);
    bool is_hub_display_name_Set() const;
    bool is_hub_display_name_Valid() const;

    QString getHubDescription() const;
    void setHubDescription(const QString &hub_description);
    bool is_hub_description_Set() const;
    bool is_hub_description_Valid() const;

    QList getHubSearchKeywords() const;
    void setHubSearchKeywords(const QList &hub_search_keywords);
    bool is_hub_search_keywords_Set() const;
    bool is_hub_search_keywords_Valid() const;

    OAICreateHubRequest_S3StorageConfig getS3StorageConfig() const;
    void setS3StorageConfig(const OAICreateHubRequest_S3StorageConfig &s3_storage_config);
    bool is_s3_storage_config_Set() const;
    bool is_s3_storage_config_Valid() const;

    OAIHubStatus getHubStatus() const;
    void setHubStatus(const OAIHubStatus &hub_status);
    bool is_hub_status_Set() const;
    bool is_hub_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hub_name;
    bool m_hub_name_isSet;
    bool m_hub_name_isValid;

    QString m_hub_arn;
    bool m_hub_arn_isSet;
    bool m_hub_arn_isValid;

    QString m_hub_display_name;
    bool m_hub_display_name_isSet;
    bool m_hub_display_name_isValid;

    QString m_hub_description;
    bool m_hub_description_isSet;
    bool m_hub_description_isValid;

    QList m_hub_search_keywords;
    bool m_hub_search_keywords_isSet;
    bool m_hub_search_keywords_isValid;

    OAICreateHubRequest_S3StorageConfig m_s3_storage_config;
    bool m_s3_storage_config_isSet;
    bool m_s3_storage_config_isValid;

    OAIHubStatus m_hub_status;
    bool m_hub_status_isSet;
    bool m_hub_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeHubResponse)

#endif // OAIDescribeHubResponse_H
