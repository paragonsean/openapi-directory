/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3DataSource.h
 *
 * &lt;p&gt;Describes the S3 data source.&lt;/p&gt; &lt;p&gt;Your input bucket must be in the same Amazon Web Services region as your training job.&lt;/p&gt;
 */

#ifndef OAIS3DataSource_H
#define OAIS3DataSource_H

#include <QJsonObject>

#include "OAIS3DataDistribution.h"
#include "OAIS3DataType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIS3DataSource : public OAIObject {
public:
    OAIS3DataSource();
    OAIS3DataSource(QString json);
    ~OAIS3DataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIS3DataType getS3DataType() const;
    void setS3DataType(const OAIS3DataType &s3_data_type);
    bool is_s3_data_type_Set() const;
    bool is_s3_data_type_Valid() const;

    QString getS3Uri() const;
    void setS3Uri(const QString &s3_uri);
    bool is_s3_uri_Set() const;
    bool is_s3_uri_Valid() const;

    OAIS3DataDistribution getS3DataDistributionType() const;
    void setS3DataDistributionType(const OAIS3DataDistribution &s3_data_distribution_type);
    bool is_s3_data_distribution_type_Set() const;
    bool is_s3_data_distribution_type_Valid() const;

    QList getAttributeNames() const;
    void setAttributeNames(const QList &attribute_names);
    bool is_attribute_names_Set() const;
    bool is_attribute_names_Valid() const;

    QList getInstanceGroupNames() const;
    void setInstanceGroupNames(const QList &instance_group_names);
    bool is_instance_group_names_Set() const;
    bool is_instance_group_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIS3DataType m_s3_data_type;
    bool m_s3_data_type_isSet;
    bool m_s3_data_type_isValid;

    QString m_s3_uri;
    bool m_s3_uri_isSet;
    bool m_s3_uri_isValid;

    OAIS3DataDistribution m_s3_data_distribution_type;
    bool m_s3_data_distribution_type_isSet;
    bool m_s3_data_distribution_type_isValid;

    QList m_attribute_names;
    bool m_attribute_names_isSet;
    bool m_attribute_names_isValid;

    QList m_instance_group_names;
    bool m_instance_group_names_isSet;
    bool m_instance_group_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3DataSource)

#endif // OAIS3DataSource_H
