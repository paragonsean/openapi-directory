/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperParameterTuningInstanceConfig.h
 *
 * The configuration for hyperparameter tuning resources for use in training jobs launched by the tuning job. These resources include compute instances and storage volumes. Specify one or more compute instance configurations and allocation strategies to select resources (optional).
 */

#ifndef OAIHyperParameterTuningInstanceConfig_H
#define OAIHyperParameterTuningInstanceConfig_H

#include <QJsonObject>

#include "OAITrainingInstanceType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperParameterTuningInstanceConfig : public OAIObject {
public:
    OAIHyperParameterTuningInstanceConfig();
    OAIHyperParameterTuningInstanceConfig(QString json);
    ~OAIHyperParameterTuningInstanceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITrainingInstanceType getInstanceType() const;
    void setInstanceType(const OAITrainingInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    qint32 getInstanceCount() const;
    void setInstanceCount(const qint32 &instance_count);
    bool is_instance_count_Set() const;
    bool is_instance_count_Valid() const;

    qint32 getVolumeSizeInGb() const;
    void setVolumeSizeInGb(const qint32 &volume_size_in_gb);
    bool is_volume_size_in_gb_Set() const;
    bool is_volume_size_in_gb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITrainingInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    qint32 m_instance_count;
    bool m_instance_count_isSet;
    bool m_instance_count_isValid;

    qint32 m_volume_size_in_gb;
    bool m_volume_size_in_gb_isSet;
    bool m_volume_size_in_gb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperParameterTuningInstanceConfig)

#endif // OAIHyperParameterTuningInstanceConfig_H
