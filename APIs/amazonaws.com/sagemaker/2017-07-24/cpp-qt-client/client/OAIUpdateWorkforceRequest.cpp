/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateWorkforceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateWorkforceRequest::OAIUpdateWorkforceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateWorkforceRequest::OAIUpdateWorkforceRequest() {
    this->initializeModel();
}

OAIUpdateWorkforceRequest::~OAIUpdateWorkforceRequest() {}

void OAIUpdateWorkforceRequest::initializeModel() {

    m_workforce_name_isSet = false;
    m_workforce_name_isValid = false;

    m_source_ip_config_isSet = false;
    m_source_ip_config_isValid = false;

    m_oidc_config_isSet = false;
    m_oidc_config_isValid = false;

    m_workforce_vpc_config_isSet = false;
    m_workforce_vpc_config_isValid = false;
}

void OAIUpdateWorkforceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateWorkforceRequest::fromJsonObject(QJsonObject json) {

    m_workforce_name_isValid = ::OpenAPI::fromJsonValue(m_workforce_name, json[QString("WorkforceName")]);
    m_workforce_name_isSet = !json[QString("WorkforceName")].isNull() && m_workforce_name_isValid;

    m_source_ip_config_isValid = ::OpenAPI::fromJsonValue(m_source_ip_config, json[QString("SourceIpConfig")]);
    m_source_ip_config_isSet = !json[QString("SourceIpConfig")].isNull() && m_source_ip_config_isValid;

    m_oidc_config_isValid = ::OpenAPI::fromJsonValue(m_oidc_config, json[QString("OidcConfig")]);
    m_oidc_config_isSet = !json[QString("OidcConfig")].isNull() && m_oidc_config_isValid;

    m_workforce_vpc_config_isValid = ::OpenAPI::fromJsonValue(m_workforce_vpc_config, json[QString("WorkforceVpcConfig")]);
    m_workforce_vpc_config_isSet = !json[QString("WorkforceVpcConfig")].isNull() && m_workforce_vpc_config_isValid;
}

QString OAIUpdateWorkforceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateWorkforceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_workforce_name_isSet) {
        obj.insert(QString("WorkforceName"), ::OpenAPI::toJsonValue(m_workforce_name));
    }
    if (m_source_ip_config.isSet()) {
        obj.insert(QString("SourceIpConfig"), ::OpenAPI::toJsonValue(m_source_ip_config));
    }
    if (m_oidc_config.isSet()) {
        obj.insert(QString("OidcConfig"), ::OpenAPI::toJsonValue(m_oidc_config));
    }
    if (m_workforce_vpc_config.isSet()) {
        obj.insert(QString("WorkforceVpcConfig"), ::OpenAPI::toJsonValue(m_workforce_vpc_config));
    }
    return obj;
}

QString OAIUpdateWorkforceRequest::getWorkforceName() const {
    return m_workforce_name;
}
void OAIUpdateWorkforceRequest::setWorkforceName(const QString &workforce_name) {
    m_workforce_name = workforce_name;
    m_workforce_name_isSet = true;
}

bool OAIUpdateWorkforceRequest::is_workforce_name_Set() const{
    return m_workforce_name_isSet;
}

bool OAIUpdateWorkforceRequest::is_workforce_name_Valid() const{
    return m_workforce_name_isValid;
}

OAIUpdateWorkforceRequest_SourceIpConfig OAIUpdateWorkforceRequest::getSourceIpConfig() const {
    return m_source_ip_config;
}
void OAIUpdateWorkforceRequest::setSourceIpConfig(const OAIUpdateWorkforceRequest_SourceIpConfig &source_ip_config) {
    m_source_ip_config = source_ip_config;
    m_source_ip_config_isSet = true;
}

bool OAIUpdateWorkforceRequest::is_source_ip_config_Set() const{
    return m_source_ip_config_isSet;
}

bool OAIUpdateWorkforceRequest::is_source_ip_config_Valid() const{
    return m_source_ip_config_isValid;
}

OAIUpdateWorkforceRequest_OidcConfig OAIUpdateWorkforceRequest::getOidcConfig() const {
    return m_oidc_config;
}
void OAIUpdateWorkforceRequest::setOidcConfig(const OAIUpdateWorkforceRequest_OidcConfig &oidc_config) {
    m_oidc_config = oidc_config;
    m_oidc_config_isSet = true;
}

bool OAIUpdateWorkforceRequest::is_oidc_config_Set() const{
    return m_oidc_config_isSet;
}

bool OAIUpdateWorkforceRequest::is_oidc_config_Valid() const{
    return m_oidc_config_isValid;
}

OAIUpdateWorkforceRequest_WorkforceVpcConfig OAIUpdateWorkforceRequest::getWorkforceVpcConfig() const {
    return m_workforce_vpc_config;
}
void OAIUpdateWorkforceRequest::setWorkforceVpcConfig(const OAIUpdateWorkforceRequest_WorkforceVpcConfig &workforce_vpc_config) {
    m_workforce_vpc_config = workforce_vpc_config;
    m_workforce_vpc_config_isSet = true;
}

bool OAIUpdateWorkforceRequest::is_workforce_vpc_config_Set() const{
    return m_workforce_vpc_config_isSet;
}

bool OAIUpdateWorkforceRequest::is_workforce_vpc_config_Valid() const{
    return m_workforce_vpc_config_isValid;
}

bool OAIUpdateWorkforceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_workforce_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_ip_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_oidc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_workforce_vpc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateWorkforceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_workforce_name_isValid && true;
}

} // namespace OpenAPI
