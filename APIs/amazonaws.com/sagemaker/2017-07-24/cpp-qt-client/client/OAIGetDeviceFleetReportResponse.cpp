/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDeviceFleetReportResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDeviceFleetReportResponse::OAIGetDeviceFleetReportResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDeviceFleetReportResponse::OAIGetDeviceFleetReportResponse() {
    this->initializeModel();
}

OAIGetDeviceFleetReportResponse::~OAIGetDeviceFleetReportResponse() {}

void OAIGetDeviceFleetReportResponse::initializeModel() {

    m_device_fleet_arn_isSet = false;
    m_device_fleet_arn_isValid = false;

    m_device_fleet_name_isSet = false;
    m_device_fleet_name_isValid = false;

    m_output_config_isSet = false;
    m_output_config_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_report_generated_isSet = false;
    m_report_generated_isValid = false;

    m_device_stats_isSet = false;
    m_device_stats_isValid = false;

    m_agent_versions_isSet = false;
    m_agent_versions_isValid = false;

    m_model_stats_isSet = false;
    m_model_stats_isValid = false;
}

void OAIGetDeviceFleetReportResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDeviceFleetReportResponse::fromJsonObject(QJsonObject json) {

    m_device_fleet_arn_isValid = ::OpenAPI::fromJsonValue(m_device_fleet_arn, json[QString("DeviceFleetArn")]);
    m_device_fleet_arn_isSet = !json[QString("DeviceFleetArn")].isNull() && m_device_fleet_arn_isValid;

    m_device_fleet_name_isValid = ::OpenAPI::fromJsonValue(m_device_fleet_name, json[QString("DeviceFleetName")]);
    m_device_fleet_name_isSet = !json[QString("DeviceFleetName")].isNull() && m_device_fleet_name_isValid;

    m_output_config_isValid = ::OpenAPI::fromJsonValue(m_output_config, json[QString("OutputConfig")]);
    m_output_config_isSet = !json[QString("OutputConfig")].isNull() && m_output_config_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_report_generated_isValid = ::OpenAPI::fromJsonValue(m_report_generated, json[QString("ReportGenerated")]);
    m_report_generated_isSet = !json[QString("ReportGenerated")].isNull() && m_report_generated_isValid;

    m_device_stats_isValid = ::OpenAPI::fromJsonValue(m_device_stats, json[QString("DeviceStats")]);
    m_device_stats_isSet = !json[QString("DeviceStats")].isNull() && m_device_stats_isValid;

    m_agent_versions_isValid = ::OpenAPI::fromJsonValue(m_agent_versions, json[QString("AgentVersions")]);
    m_agent_versions_isSet = !json[QString("AgentVersions")].isNull() && m_agent_versions_isValid;

    m_model_stats_isValid = ::OpenAPI::fromJsonValue(m_model_stats, json[QString("ModelStats")]);
    m_model_stats_isSet = !json[QString("ModelStats")].isNull() && m_model_stats_isValid;
}

QString OAIGetDeviceFleetReportResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDeviceFleetReportResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_device_fleet_arn_isSet) {
        obj.insert(QString("DeviceFleetArn"), ::OpenAPI::toJsonValue(m_device_fleet_arn));
    }
    if (m_device_fleet_name_isSet) {
        obj.insert(QString("DeviceFleetName"), ::OpenAPI::toJsonValue(m_device_fleet_name));
    }
    if (m_output_config.isSet()) {
        obj.insert(QString("OutputConfig"), ::OpenAPI::toJsonValue(m_output_config));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_report_generated_isSet) {
        obj.insert(QString("ReportGenerated"), ::OpenAPI::toJsonValue(m_report_generated));
    }
    if (m_device_stats.isSet()) {
        obj.insert(QString("DeviceStats"), ::OpenAPI::toJsonValue(m_device_stats));
    }
    if (m_agent_versions.isSet()) {
        obj.insert(QString("AgentVersions"), ::OpenAPI::toJsonValue(m_agent_versions));
    }
    if (m_model_stats.isSet()) {
        obj.insert(QString("ModelStats"), ::OpenAPI::toJsonValue(m_model_stats));
    }
    return obj;
}

QString OAIGetDeviceFleetReportResponse::getDeviceFleetArn() const {
    return m_device_fleet_arn;
}
void OAIGetDeviceFleetReportResponse::setDeviceFleetArn(const QString &device_fleet_arn) {
    m_device_fleet_arn = device_fleet_arn;
    m_device_fleet_arn_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_device_fleet_arn_Set() const{
    return m_device_fleet_arn_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_device_fleet_arn_Valid() const{
    return m_device_fleet_arn_isValid;
}

QString OAIGetDeviceFleetReportResponse::getDeviceFleetName() const {
    return m_device_fleet_name;
}
void OAIGetDeviceFleetReportResponse::setDeviceFleetName(const QString &device_fleet_name) {
    m_device_fleet_name = device_fleet_name;
    m_device_fleet_name_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_device_fleet_name_Set() const{
    return m_device_fleet_name_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_device_fleet_name_Valid() const{
    return m_device_fleet_name_isValid;
}

OAICreateDeviceFleetRequest_OutputConfig OAIGetDeviceFleetReportResponse::getOutputConfig() const {
    return m_output_config;
}
void OAIGetDeviceFleetReportResponse::setOutputConfig(const OAICreateDeviceFleetRequest_OutputConfig &output_config) {
    m_output_config = output_config;
    m_output_config_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_output_config_Set() const{
    return m_output_config_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_output_config_Valid() const{
    return m_output_config_isValid;
}

QString OAIGetDeviceFleetReportResponse::getDescription() const {
    return m_description;
}
void OAIGetDeviceFleetReportResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIGetDeviceFleetReportResponse::getReportGenerated() const {
    return m_report_generated;
}
void OAIGetDeviceFleetReportResponse::setReportGenerated(const QDateTime &report_generated) {
    m_report_generated = report_generated;
    m_report_generated_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_report_generated_Set() const{
    return m_report_generated_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_report_generated_Valid() const{
    return m_report_generated_isValid;
}

OAIGetDeviceFleetReportResponse_DeviceStats OAIGetDeviceFleetReportResponse::getDeviceStats() const {
    return m_device_stats;
}
void OAIGetDeviceFleetReportResponse::setDeviceStats(const OAIGetDeviceFleetReportResponse_DeviceStats &device_stats) {
    m_device_stats = device_stats;
    m_device_stats_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_device_stats_Set() const{
    return m_device_stats_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_device_stats_Valid() const{
    return m_device_stats_isValid;
}

QList OAIGetDeviceFleetReportResponse::getAgentVersions() const {
    return m_agent_versions;
}
void OAIGetDeviceFleetReportResponse::setAgentVersions(const QList &agent_versions) {
    m_agent_versions = agent_versions;
    m_agent_versions_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_agent_versions_Set() const{
    return m_agent_versions_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_agent_versions_Valid() const{
    return m_agent_versions_isValid;
}

QList OAIGetDeviceFleetReportResponse::getModelStats() const {
    return m_model_stats;
}
void OAIGetDeviceFleetReportResponse::setModelStats(const QList &model_stats) {
    m_model_stats = model_stats;
    m_model_stats_isSet = true;
}

bool OAIGetDeviceFleetReportResponse::is_model_stats_Set() const{
    return m_model_stats_isSet;
}

bool OAIGetDeviceFleetReportResponse::is_model_stats_Valid() const{
    return m_model_stats_isValid;
}

bool OAIGetDeviceFleetReportResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_fleet_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_fleet_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_generated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_versions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDeviceFleetReportResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_device_fleet_arn_isValid && m_device_fleet_name_isValid && true;
}

} // namespace OpenAPI
