/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendPipelineExecutionStepSuccessRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendPipelineExecutionStepSuccessRequest::OAISendPipelineExecutionStepSuccessRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendPipelineExecutionStepSuccessRequest::OAISendPipelineExecutionStepSuccessRequest() {
    this->initializeModel();
}

OAISendPipelineExecutionStepSuccessRequest::~OAISendPipelineExecutionStepSuccessRequest() {}

void OAISendPipelineExecutionStepSuccessRequest::initializeModel() {

    m_callback_token_isSet = false;
    m_callback_token_isValid = false;

    m_output_parameters_isSet = false;
    m_output_parameters_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;
}

void OAISendPipelineExecutionStepSuccessRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendPipelineExecutionStepSuccessRequest::fromJsonObject(QJsonObject json) {

    m_callback_token_isValid = ::OpenAPI::fromJsonValue(m_callback_token, json[QString("CallbackToken")]);
    m_callback_token_isSet = !json[QString("CallbackToken")].isNull() && m_callback_token_isValid;

    m_output_parameters_isValid = ::OpenAPI::fromJsonValue(m_output_parameters, json[QString("OutputParameters")]);
    m_output_parameters_isSet = !json[QString("OutputParameters")].isNull() && m_output_parameters_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;
}

QString OAISendPipelineExecutionStepSuccessRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendPipelineExecutionStepSuccessRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_token_isSet) {
        obj.insert(QString("CallbackToken"), ::OpenAPI::toJsonValue(m_callback_token));
    }
    if (m_output_parameters.isSet()) {
        obj.insert(QString("OutputParameters"), ::OpenAPI::toJsonValue(m_output_parameters));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    return obj;
}

QString OAISendPipelineExecutionStepSuccessRequest::getCallbackToken() const {
    return m_callback_token;
}
void OAISendPipelineExecutionStepSuccessRequest::setCallbackToken(const QString &callback_token) {
    m_callback_token = callback_token;
    m_callback_token_isSet = true;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_callback_token_Set() const{
    return m_callback_token_isSet;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_callback_token_Valid() const{
    return m_callback_token_isValid;
}

QList OAISendPipelineExecutionStepSuccessRequest::getOutputParameters() const {
    return m_output_parameters;
}
void OAISendPipelineExecutionStepSuccessRequest::setOutputParameters(const QList &output_parameters) {
    m_output_parameters = output_parameters;
    m_output_parameters_isSet = true;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_output_parameters_Set() const{
    return m_output_parameters_isSet;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_output_parameters_Valid() const{
    return m_output_parameters_isValid;
}

QString OAISendPipelineExecutionStepSuccessRequest::getClientRequestToken() const {
    return m_client_request_token;
}
void OAISendPipelineExecutionStepSuccessRequest::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAISendPipelineExecutionStepSuccessRequest::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

bool OAISendPipelineExecutionStepSuccessRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendPipelineExecutionStepSuccessRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_callback_token_isValid && true;
}

} // namespace OpenAPI
