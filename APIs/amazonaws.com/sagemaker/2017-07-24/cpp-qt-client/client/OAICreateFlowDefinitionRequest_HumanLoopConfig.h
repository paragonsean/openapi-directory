/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateFlowDefinitionRequest_HumanLoopConfig.h
 *
 * 
 */

#ifndef OAICreateFlowDefinitionRequest_HumanLoopConfig_H
#define OAICreateFlowDefinitionRequest_HumanLoopConfig_H

#include <QJsonObject>

#include "OAIPublicWorkforceTaskPrice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPublicWorkforceTaskPrice;

class OAICreateFlowDefinitionRequest_HumanLoopConfig : public OAIObject {
public:
    OAICreateFlowDefinitionRequest_HumanLoopConfig();
    OAICreateFlowDefinitionRequest_HumanLoopConfig(QString json);
    ~OAICreateFlowDefinitionRequest_HumanLoopConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkteamArn() const;
    void setWorkteamArn(const QString &workteam_arn);
    bool is_workteam_arn_Set() const;
    bool is_workteam_arn_Valid() const;

    QString getHumanTaskUiArn() const;
    void setHumanTaskUiArn(const QString &human_task_ui_arn);
    bool is_human_task_ui_arn_Set() const;
    bool is_human_task_ui_arn_Valid() const;

    QString getTaskTitle() const;
    void setTaskTitle(const QString &task_title);
    bool is_task_title_Set() const;
    bool is_task_title_Valid() const;

    QString getTaskDescription() const;
    void setTaskDescription(const QString &task_description);
    bool is_task_description_Set() const;
    bool is_task_description_Valid() const;

    qint32 getTaskCount() const;
    void setTaskCount(const qint32 &task_count);
    bool is_task_count_Set() const;
    bool is_task_count_Valid() const;

    qint32 getTaskAvailabilityLifetimeInSeconds() const;
    void setTaskAvailabilityLifetimeInSeconds(const qint32 &task_availability_lifetime_in_seconds);
    bool is_task_availability_lifetime_in_seconds_Set() const;
    bool is_task_availability_lifetime_in_seconds_Valid() const;

    qint32 getTaskTimeLimitInSeconds() const;
    void setTaskTimeLimitInSeconds(const qint32 &task_time_limit_in_seconds);
    bool is_task_time_limit_in_seconds_Set() const;
    bool is_task_time_limit_in_seconds_Valid() const;

    QList getTaskKeywords() const;
    void setTaskKeywords(const QList &task_keywords);
    bool is_task_keywords_Set() const;
    bool is_task_keywords_Valid() const;

    OAIPublicWorkforceTaskPrice getPublicWorkforceTaskPrice() const;
    void setPublicWorkforceTaskPrice(const OAIPublicWorkforceTaskPrice &public_workforce_task_price);
    bool is_public_workforce_task_price_Set() const;
    bool is_public_workforce_task_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workteam_arn;
    bool m_workteam_arn_isSet;
    bool m_workteam_arn_isValid;

    QString m_human_task_ui_arn;
    bool m_human_task_ui_arn_isSet;
    bool m_human_task_ui_arn_isValid;

    QString m_task_title;
    bool m_task_title_isSet;
    bool m_task_title_isValid;

    QString m_task_description;
    bool m_task_description_isSet;
    bool m_task_description_isValid;

    qint32 m_task_count;
    bool m_task_count_isSet;
    bool m_task_count_isValid;

    qint32 m_task_availability_lifetime_in_seconds;
    bool m_task_availability_lifetime_in_seconds_isSet;
    bool m_task_availability_lifetime_in_seconds_isValid;

    qint32 m_task_time_limit_in_seconds;
    bool m_task_time_limit_in_seconds_isSet;
    bool m_task_time_limit_in_seconds_isValid;

    QList m_task_keywords;
    bool m_task_keywords_isSet;
    bool m_task_keywords_isValid;

    OAIPublicWorkforceTaskPrice m_public_workforce_task_price;
    bool m_public_workforce_task_price_isSet;
    bool m_public_workforce_task_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateFlowDefinitionRequest_HumanLoopConfig)

#endif // OAICreateFlowDefinitionRequest_HumanLoopConfig_H
