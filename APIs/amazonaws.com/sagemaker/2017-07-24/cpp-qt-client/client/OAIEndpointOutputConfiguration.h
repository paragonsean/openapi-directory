/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndpointOutputConfiguration.h
 *
 * The endpoint configuration made by Inference Recommender during a recommendation job.
 */

#ifndef OAIEndpointOutputConfiguration_H
#define OAIEndpointOutputConfiguration_H

#include <QJsonObject>

#include "OAIProductionVariantInstanceType.h"
#include "OAIProductionVariantServerlessConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProductionVariantServerlessConfig;

class OAIEndpointOutputConfiguration : public OAIObject {
public:
    OAIEndpointOutputConfiguration();
    OAIEndpointOutputConfiguration(QString json);
    ~OAIEndpointOutputConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndpointName() const;
    void setEndpointName(const QString &endpoint_name);
    bool is_endpoint_name_Set() const;
    bool is_endpoint_name_Valid() const;

    QString getVariantName() const;
    void setVariantName(const QString &variant_name);
    bool is_variant_name_Set() const;
    bool is_variant_name_Valid() const;

    OAIProductionVariantInstanceType getInstanceType() const;
    void setInstanceType(const OAIProductionVariantInstanceType &instance_type);
    bool is_instance_type_Set() const;
    bool is_instance_type_Valid() const;

    qint32 getInitialInstanceCount() const;
    void setInitialInstanceCount(const qint32 &initial_instance_count);
    bool is_initial_instance_count_Set() const;
    bool is_initial_instance_count_Valid() const;

    OAIProductionVariantServerlessConfig getServerlessConfig() const;
    void setServerlessConfig(const OAIProductionVariantServerlessConfig &serverless_config);
    bool is_serverless_config_Set() const;
    bool is_serverless_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_endpoint_name;
    bool m_endpoint_name_isSet;
    bool m_endpoint_name_isValid;

    QString m_variant_name;
    bool m_variant_name_isSet;
    bool m_variant_name_isValid;

    OAIProductionVariantInstanceType m_instance_type;
    bool m_instance_type_isSet;
    bool m_instance_type_isValid;

    qint32 m_initial_instance_count;
    bool m_initial_instance_count_isSet;
    bool m_initial_instance_count_isValid;

    OAIProductionVariantServerlessConfig m_serverless_config;
    bool m_serverless_config_isSet;
    bool m_serverless_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndpointOutputConfiguration)

#endif // OAIEndpointOutputConfiguration_H
