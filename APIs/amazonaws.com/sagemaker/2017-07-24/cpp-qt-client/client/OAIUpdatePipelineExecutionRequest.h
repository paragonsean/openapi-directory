/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdatePipelineExecutionRequest.h
 *
 * 
 */

#ifndef OAIUpdatePipelineExecutionRequest_H
#define OAIUpdatePipelineExecutionRequest_H

#include <QJsonObject>

#include "OAIStartPipelineExecutionRequest_ParallelismConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartPipelineExecutionRequest_ParallelismConfiguration;

class OAIUpdatePipelineExecutionRequest : public OAIObject {
public:
    OAIUpdatePipelineExecutionRequest();
    OAIUpdatePipelineExecutionRequest(QString json);
    ~OAIUpdatePipelineExecutionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPipelineExecutionArn() const;
    void setPipelineExecutionArn(const QString &pipeline_execution_arn);
    bool is_pipeline_execution_arn_Set() const;
    bool is_pipeline_execution_arn_Valid() const;

    QString getPipelineExecutionDescription() const;
    void setPipelineExecutionDescription(const QString &pipeline_execution_description);
    bool is_pipeline_execution_description_Set() const;
    bool is_pipeline_execution_description_Valid() const;

    QString getPipelineExecutionDisplayName() const;
    void setPipelineExecutionDisplayName(const QString &pipeline_execution_display_name);
    bool is_pipeline_execution_display_name_Set() const;
    bool is_pipeline_execution_display_name_Valid() const;

    OAIStartPipelineExecutionRequest_ParallelismConfiguration getParallelismConfiguration() const;
    void setParallelismConfiguration(const OAIStartPipelineExecutionRequest_ParallelismConfiguration &parallelism_configuration);
    bool is_parallelism_configuration_Set() const;
    bool is_parallelism_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_pipeline_execution_arn;
    bool m_pipeline_execution_arn_isSet;
    bool m_pipeline_execution_arn_isValid;

    QString m_pipeline_execution_description;
    bool m_pipeline_execution_description_isSet;
    bool m_pipeline_execution_description_isValid;

    QString m_pipeline_execution_display_name;
    bool m_pipeline_execution_display_name_isSet;
    bool m_pipeline_execution_display_name_isValid;

    OAIStartPipelineExecutionRequest_ParallelismConfiguration m_parallelism_configuration;
    bool m_parallelism_configuration_isSet;
    bool m_parallelism_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdatePipelineExecutionRequest)

#endif // OAIUpdatePipelineExecutionRequest_H
