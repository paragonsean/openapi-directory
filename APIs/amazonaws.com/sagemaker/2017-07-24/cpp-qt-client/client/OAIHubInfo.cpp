/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHubInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHubInfo::OAIHubInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHubInfo::OAIHubInfo() {
    this->initializeModel();
}

OAIHubInfo::~OAIHubInfo() {}

void OAIHubInfo::initializeModel() {

    m_hub_name_isSet = false;
    m_hub_name_isValid = false;

    m_hub_arn_isSet = false;
    m_hub_arn_isValid = false;

    m_hub_display_name_isSet = false;
    m_hub_display_name_isValid = false;

    m_hub_description_isSet = false;
    m_hub_description_isValid = false;

    m_hub_search_keywords_isSet = false;
    m_hub_search_keywords_isValid = false;

    m_hub_status_isSet = false;
    m_hub_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAIHubInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHubInfo::fromJsonObject(QJsonObject json) {

    m_hub_name_isValid = ::OpenAPI::fromJsonValue(m_hub_name, json[QString("HubName")]);
    m_hub_name_isSet = !json[QString("HubName")].isNull() && m_hub_name_isValid;

    m_hub_arn_isValid = ::OpenAPI::fromJsonValue(m_hub_arn, json[QString("HubArn")]);
    m_hub_arn_isSet = !json[QString("HubArn")].isNull() && m_hub_arn_isValid;

    m_hub_display_name_isValid = ::OpenAPI::fromJsonValue(m_hub_display_name, json[QString("HubDisplayName")]);
    m_hub_display_name_isSet = !json[QString("HubDisplayName")].isNull() && m_hub_display_name_isValid;

    m_hub_description_isValid = ::OpenAPI::fromJsonValue(m_hub_description, json[QString("HubDescription")]);
    m_hub_description_isSet = !json[QString("HubDescription")].isNull() && m_hub_description_isValid;

    m_hub_search_keywords_isValid = ::OpenAPI::fromJsonValue(m_hub_search_keywords, json[QString("HubSearchKeywords")]);
    m_hub_search_keywords_isSet = !json[QString("HubSearchKeywords")].isNull() && m_hub_search_keywords_isValid;

    m_hub_status_isValid = ::OpenAPI::fromJsonValue(m_hub_status, json[QString("HubStatus")]);
    m_hub_status_isSet = !json[QString("HubStatus")].isNull() && m_hub_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAIHubInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHubInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_hub_name_isSet) {
        obj.insert(QString("HubName"), ::OpenAPI::toJsonValue(m_hub_name));
    }
    if (m_hub_arn_isSet) {
        obj.insert(QString("HubArn"), ::OpenAPI::toJsonValue(m_hub_arn));
    }
    if (m_hub_display_name_isSet) {
        obj.insert(QString("HubDisplayName"), ::OpenAPI::toJsonValue(m_hub_display_name));
    }
    if (m_hub_description_isSet) {
        obj.insert(QString("HubDescription"), ::OpenAPI::toJsonValue(m_hub_description));
    }
    if (m_hub_search_keywords.isSet()) {
        obj.insert(QString("HubSearchKeywords"), ::OpenAPI::toJsonValue(m_hub_search_keywords));
    }
    if (m_hub_status.isSet()) {
        obj.insert(QString("HubStatus"), ::OpenAPI::toJsonValue(m_hub_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAIHubInfo::getHubName() const {
    return m_hub_name;
}
void OAIHubInfo::setHubName(const QString &hub_name) {
    m_hub_name = hub_name;
    m_hub_name_isSet = true;
}

bool OAIHubInfo::is_hub_name_Set() const{
    return m_hub_name_isSet;
}

bool OAIHubInfo::is_hub_name_Valid() const{
    return m_hub_name_isValid;
}

QString OAIHubInfo::getHubArn() const {
    return m_hub_arn;
}
void OAIHubInfo::setHubArn(const QString &hub_arn) {
    m_hub_arn = hub_arn;
    m_hub_arn_isSet = true;
}

bool OAIHubInfo::is_hub_arn_Set() const{
    return m_hub_arn_isSet;
}

bool OAIHubInfo::is_hub_arn_Valid() const{
    return m_hub_arn_isValid;
}

QString OAIHubInfo::getHubDisplayName() const {
    return m_hub_display_name;
}
void OAIHubInfo::setHubDisplayName(const QString &hub_display_name) {
    m_hub_display_name = hub_display_name;
    m_hub_display_name_isSet = true;
}

bool OAIHubInfo::is_hub_display_name_Set() const{
    return m_hub_display_name_isSet;
}

bool OAIHubInfo::is_hub_display_name_Valid() const{
    return m_hub_display_name_isValid;
}

QString OAIHubInfo::getHubDescription() const {
    return m_hub_description;
}
void OAIHubInfo::setHubDescription(const QString &hub_description) {
    m_hub_description = hub_description;
    m_hub_description_isSet = true;
}

bool OAIHubInfo::is_hub_description_Set() const{
    return m_hub_description_isSet;
}

bool OAIHubInfo::is_hub_description_Valid() const{
    return m_hub_description_isValid;
}

QList OAIHubInfo::getHubSearchKeywords() const {
    return m_hub_search_keywords;
}
void OAIHubInfo::setHubSearchKeywords(const QList &hub_search_keywords) {
    m_hub_search_keywords = hub_search_keywords;
    m_hub_search_keywords_isSet = true;
}

bool OAIHubInfo::is_hub_search_keywords_Set() const{
    return m_hub_search_keywords_isSet;
}

bool OAIHubInfo::is_hub_search_keywords_Valid() const{
    return m_hub_search_keywords_isValid;
}

OAIHubStatus OAIHubInfo::getHubStatus() const {
    return m_hub_status;
}
void OAIHubInfo::setHubStatus(const OAIHubStatus &hub_status) {
    m_hub_status = hub_status;
    m_hub_status_isSet = true;
}

bool OAIHubInfo::is_hub_status_Set() const{
    return m_hub_status_isSet;
}

bool OAIHubInfo::is_hub_status_Valid() const{
    return m_hub_status_isValid;
}

QDateTime OAIHubInfo::getCreationTime() const {
    return m_creation_time;
}
void OAIHubInfo::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIHubInfo::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIHubInfo::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIHubInfo::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIHubInfo::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIHubInfo::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIHubInfo::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAIHubInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hub_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_search_keywords.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hub_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHubInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hub_name_isValid && m_hub_arn_isValid && m_hub_status_isValid && m_creation_time_isValid && m_last_modified_time_isValid && true;
}

} // namespace OpenAPI
