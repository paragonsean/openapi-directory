/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelPackageContainerDefinition.h
 *
 * Describes the Docker container for the model package.
 */

#ifndef OAIModelPackageContainerDefinition_H
#define OAIModelPackageContainerDefinition_H

#include <QJsonObject>

#include "OAIModelPackageContainerDefinition_ModelInput.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModelPackageContainerDefinition_ModelInput;

class OAIModelPackageContainerDefinition : public OAIObject {
public:
    OAIModelPackageContainerDefinition();
    OAIModelPackageContainerDefinition(QString json);
    ~OAIModelPackageContainerDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerHostname() const;
    void setContainerHostname(const QString &container_hostname);
    bool is_container_hostname_Set() const;
    bool is_container_hostname_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QString getModelDataUrl() const;
    void setModelDataUrl(const QString &model_data_url);
    bool is_model_data_url_Set() const;
    bool is_model_data_url_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QMap getEnvironment() const;
    void setEnvironment(const QMap &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    OAIModelPackageContainerDefinition_ModelInput getModelInput() const;
    void setModelInput(const OAIModelPackageContainerDefinition_ModelInput &model_input);
    bool is_model_input_Set() const;
    bool is_model_input_Valid() const;

    QString getFramework() const;
    void setFramework(const QString &framework);
    bool is_framework_Set() const;
    bool is_framework_Valid() const;

    QString getFrameworkVersion() const;
    void setFrameworkVersion(const QString &framework_version);
    bool is_framework_version_Set() const;
    bool is_framework_version_Valid() const;

    QString getNearestModelName() const;
    void setNearestModelName(const QString &nearest_model_name);
    bool is_nearest_model_name_Set() const;
    bool is_nearest_model_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_hostname;
    bool m_container_hostname_isSet;
    bool m_container_hostname_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QString m_model_data_url;
    bool m_model_data_url_isSet;
    bool m_model_data_url_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QMap m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    OAIModelPackageContainerDefinition_ModelInput m_model_input;
    bool m_model_input_isSet;
    bool m_model_input_isValid;

    QString m_framework;
    bool m_framework_isSet;
    bool m_framework_isValid;

    QString m_framework_version;
    bool m_framework_version_isSet;
    bool m_framework_version_isValid;

    QString m_nearest_model_name;
    bool m_nearest_model_name_isSet;
    bool m_nearest_model_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelPackageContainerDefinition)

#endif // OAIModelPackageContainerDefinition_H
