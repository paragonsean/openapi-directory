/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig.h
 *
 * 
 */

#ifndef OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig_H
#define OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig_H

#include <QJsonObject>

#include "OAIHyperParameterTuningJobConfig_HyperParameterTuningJobObjective.h"
#include "OAIHyperParameterTuningJobConfig_ParameterRanges.h"
#include "OAIHyperParameterTuningJobConfig_ResourceLimits.h"
#include "OAIHyperParameterTuningJobConfig_StrategyConfig.h"
#include "OAIHyperParameterTuningJobConfig_TuningJobCompletionCriteria.h"
#include "OAIHyperParameterTuningJobStrategyType.h"
#include "OAITrainingJobEarlyStoppingType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHyperParameterTuningJobConfig_StrategyConfig;
class OAIHyperParameterTuningJobConfig_HyperParameterTuningJobObjective;
class OAIHyperParameterTuningJobConfig_ResourceLimits;
class OAIHyperParameterTuningJobConfig_ParameterRanges;
class OAIHyperParameterTuningJobConfig_TuningJobCompletionCriteria;

class OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig : public OAIObject {
public:
    OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig();
    OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig(QString json);
    ~OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHyperParameterTuningJobStrategyType getStrategy() const;
    void setStrategy(const OAIHyperParameterTuningJobStrategyType &strategy);
    bool is_strategy_Set() const;
    bool is_strategy_Valid() const;

    OAIHyperParameterTuningJobConfig_StrategyConfig getStrategyConfig() const;
    void setStrategyConfig(const OAIHyperParameterTuningJobConfig_StrategyConfig &strategy_config);
    bool is_strategy_config_Set() const;
    bool is_strategy_config_Valid() const;

    OAIHyperParameterTuningJobConfig_HyperParameterTuningJobObjective getHyperParameterTuningJobObjective() const;
    void setHyperParameterTuningJobObjective(const OAIHyperParameterTuningJobConfig_HyperParameterTuningJobObjective &hyper_parameter_tuning_job_objective);
    bool is_hyper_parameter_tuning_job_objective_Set() const;
    bool is_hyper_parameter_tuning_job_objective_Valid() const;

    OAIHyperParameterTuningJobConfig_ResourceLimits getResourceLimits() const;
    void setResourceLimits(const OAIHyperParameterTuningJobConfig_ResourceLimits &resource_limits);
    bool is_resource_limits_Set() const;
    bool is_resource_limits_Valid() const;

    OAIHyperParameterTuningJobConfig_ParameterRanges getParameterRanges() const;
    void setParameterRanges(const OAIHyperParameterTuningJobConfig_ParameterRanges &parameter_ranges);
    bool is_parameter_ranges_Set() const;
    bool is_parameter_ranges_Valid() const;

    OAITrainingJobEarlyStoppingType getTrainingJobEarlyStoppingType() const;
    void setTrainingJobEarlyStoppingType(const OAITrainingJobEarlyStoppingType &training_job_early_stopping_type);
    bool is_training_job_early_stopping_type_Set() const;
    bool is_training_job_early_stopping_type_Valid() const;

    OAIHyperParameterTuningJobConfig_TuningJobCompletionCriteria getTuningJobCompletionCriteria() const;
    void setTuningJobCompletionCriteria(const OAIHyperParameterTuningJobConfig_TuningJobCompletionCriteria &tuning_job_completion_criteria);
    bool is_tuning_job_completion_criteria_Set() const;
    bool is_tuning_job_completion_criteria_Valid() const;

    qint32 getRandomSeed() const;
    void setRandomSeed(const qint32 &random_seed);
    bool is_random_seed_Set() const;
    bool is_random_seed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHyperParameterTuningJobStrategyType m_strategy;
    bool m_strategy_isSet;
    bool m_strategy_isValid;

    OAIHyperParameterTuningJobConfig_StrategyConfig m_strategy_config;
    bool m_strategy_config_isSet;
    bool m_strategy_config_isValid;

    OAIHyperParameterTuningJobConfig_HyperParameterTuningJobObjective m_hyper_parameter_tuning_job_objective;
    bool m_hyper_parameter_tuning_job_objective_isSet;
    bool m_hyper_parameter_tuning_job_objective_isValid;

    OAIHyperParameterTuningJobConfig_ResourceLimits m_resource_limits;
    bool m_resource_limits_isSet;
    bool m_resource_limits_isValid;

    OAIHyperParameterTuningJobConfig_ParameterRanges m_parameter_ranges;
    bool m_parameter_ranges_isSet;
    bool m_parameter_ranges_isValid;

    OAITrainingJobEarlyStoppingType m_training_job_early_stopping_type;
    bool m_training_job_early_stopping_type_isSet;
    bool m_training_job_early_stopping_type_isValid;

    OAIHyperParameterTuningJobConfig_TuningJobCompletionCriteria m_tuning_job_completion_criteria;
    bool m_tuning_job_completion_criteria_isSet;
    bool m_tuning_job_completion_criteria_isValid;

    qint32 m_random_seed;
    bool m_random_seed_isSet;
    bool m_random_seed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig)

#endif // OAIDescribeHyperParameterTuningJobResponse_HyperParameterTuningJobConfig_H
