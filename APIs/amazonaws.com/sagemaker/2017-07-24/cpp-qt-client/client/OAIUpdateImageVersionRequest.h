/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateImageVersionRequest.h
 *
 * 
 */

#ifndef OAIUpdateImageVersionRequest_H
#define OAIUpdateImageVersionRequest_H

#include <QJsonObject>

#include "OAIJobType.h"
#include "OAIProcessor.h"
#include "OAIVendorGuidance.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateImageVersionRequest : public OAIObject {
public:
    OAIUpdateImageVersionRequest();
    OAIUpdateImageVersionRequest(QString json);
    ~OAIUpdateImageVersionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageName() const;
    void setImageName(const QString &image_name);
    bool is_image_name_Set() const;
    bool is_image_name_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList getAliasesToAdd() const;
    void setAliasesToAdd(const QList &aliases_to_add);
    bool is_aliases_to_add_Set() const;
    bool is_aliases_to_add_Valid() const;

    QList getAliasesToDelete() const;
    void setAliasesToDelete(const QList &aliases_to_delete);
    bool is_aliases_to_delete_Set() const;
    bool is_aliases_to_delete_Valid() const;

    OAIVendorGuidance getVendorGuidance() const;
    void setVendorGuidance(const OAIVendorGuidance &vendor_guidance);
    bool is_vendor_guidance_Set() const;
    bool is_vendor_guidance_Valid() const;

    OAIJobType getJobType() const;
    void setJobType(const OAIJobType &job_type);
    bool is_job_type_Set() const;
    bool is_job_type_Valid() const;

    QString getMlFramework() const;
    void setMlFramework(const QString &ml_framework);
    bool is_ml_framework_Set() const;
    bool is_ml_framework_Valid() const;

    QString getProgrammingLang() const;
    void setProgrammingLang(const QString &programming_lang);
    bool is_programming_lang_Set() const;
    bool is_programming_lang_Valid() const;

    OAIProcessor getProcessor() const;
    void setProcessor(const OAIProcessor &processor);
    bool is_processor_Set() const;
    bool is_processor_Valid() const;

    bool getHorovod() const;
    void setHorovod(const bool &horovod);
    bool is_horovod_Set() const;
    bool is_horovod_Valid() const;

    QString getReleaseNotes() const;
    void setReleaseNotes(const QString &release_notes);
    bool is_release_notes_Set() const;
    bool is_release_notes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_name;
    bool m_image_name_isSet;
    bool m_image_name_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList m_aliases_to_add;
    bool m_aliases_to_add_isSet;
    bool m_aliases_to_add_isValid;

    QList m_aliases_to_delete;
    bool m_aliases_to_delete_isSet;
    bool m_aliases_to_delete_isValid;

    OAIVendorGuidance m_vendor_guidance;
    bool m_vendor_guidance_isSet;
    bool m_vendor_guidance_isValid;

    OAIJobType m_job_type;
    bool m_job_type_isSet;
    bool m_job_type_isValid;

    QString m_ml_framework;
    bool m_ml_framework_isSet;
    bool m_ml_framework_isValid;

    QString m_programming_lang;
    bool m_programming_lang_isSet;
    bool m_programming_lang_isValid;

    OAIProcessor m_processor;
    bool m_processor_isSet;
    bool m_processor_isValid;

    bool m_horovod;
    bool m_horovod_isSet;
    bool m_horovod_isValid;

    QString m_release_notes;
    bool m_release_notes_isSet;
    bool m_release_notes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateImageVersionRequest)

#endif // OAIUpdateImageVersionRequest_H
