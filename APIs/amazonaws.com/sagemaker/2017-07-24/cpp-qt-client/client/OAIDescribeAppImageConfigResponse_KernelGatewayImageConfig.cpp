/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig() {
    this->initializeModel();
}

OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::~OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig() {}

void OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::initializeModel() {

    m_kernel_specs_isSet = false;
    m_kernel_specs_isValid = false;

    m_file_system_config_isSet = false;
    m_file_system_config_isValid = false;
}

void OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::fromJsonObject(QJsonObject json) {

    m_kernel_specs_isValid = ::OpenAPI::fromJsonValue(m_kernel_specs, json[QString("KernelSpecs")]);
    m_kernel_specs_isSet = !json[QString("KernelSpecs")].isNull() && m_kernel_specs_isValid;

    m_file_system_config_isValid = ::OpenAPI::fromJsonValue(m_file_system_config, json[QString("FileSystemConfig")]);
    m_file_system_config_isSet = !json[QString("FileSystemConfig")].isNull() && m_file_system_config_isValid;
}

QString OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_kernel_specs.isSet()) {
        obj.insert(QString("KernelSpecs"), ::OpenAPI::toJsonValue(m_kernel_specs));
    }
    if (m_file_system_config.isSet()) {
        obj.insert(QString("FileSystemConfig"), ::OpenAPI::toJsonValue(m_file_system_config));
    }
    return obj;
}

QList OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::getKernelSpecs() const {
    return m_kernel_specs;
}
void OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::setKernelSpecs(const QList &kernel_specs) {
    m_kernel_specs = kernel_specs;
    m_kernel_specs_isSet = true;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::is_kernel_specs_Set() const{
    return m_kernel_specs_isSet;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::is_kernel_specs_Valid() const{
    return m_kernel_specs_isValid;
}

OAIKernelGatewayImageConfig_FileSystemConfig OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::getFileSystemConfig() const {
    return m_file_system_config;
}
void OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::setFileSystemConfig(const OAIKernelGatewayImageConfig_FileSystemConfig &file_system_config) {
    m_file_system_config = file_system_config;
    m_file_system_config_isSet = true;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::is_file_system_config_Set() const{
    return m_file_system_config_isSet;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::is_file_system_config_Valid() const{
    return m_file_system_config_isValid;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kernel_specs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_system_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppImageConfigResponse_KernelGatewayImageConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_kernel_specs_isValid && true;
}

} // namespace OpenAPI
