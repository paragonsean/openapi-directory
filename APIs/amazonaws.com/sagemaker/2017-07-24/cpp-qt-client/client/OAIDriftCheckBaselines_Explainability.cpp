/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDriftCheckBaselines_Explainability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDriftCheckBaselines_Explainability::OAIDriftCheckBaselines_Explainability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDriftCheckBaselines_Explainability::OAIDriftCheckBaselines_Explainability() {
    this->initializeModel();
}

OAIDriftCheckBaselines_Explainability::~OAIDriftCheckBaselines_Explainability() {}

void OAIDriftCheckBaselines_Explainability::initializeModel() {

    m_constraints_isSet = false;
    m_constraints_isValid = false;

    m_config_file_isSet = false;
    m_config_file_isValid = false;
}

void OAIDriftCheckBaselines_Explainability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDriftCheckBaselines_Explainability::fromJsonObject(QJsonObject json) {

    m_constraints_isValid = ::OpenAPI::fromJsonValue(m_constraints, json[QString("Constraints")]);
    m_constraints_isSet = !json[QString("Constraints")].isNull() && m_constraints_isValid;

    m_config_file_isValid = ::OpenAPI::fromJsonValue(m_config_file, json[QString("ConfigFile")]);
    m_config_file_isSet = !json[QString("ConfigFile")].isNull() && m_config_file_isValid;
}

QString OAIDriftCheckBaselines_Explainability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDriftCheckBaselines_Explainability::asJsonObject() const {
    QJsonObject obj;
    if (m_constraints.isSet()) {
        obj.insert(QString("Constraints"), ::OpenAPI::toJsonValue(m_constraints));
    }
    if (m_config_file.isSet()) {
        obj.insert(QString("ConfigFile"), ::OpenAPI::toJsonValue(m_config_file));
    }
    return obj;
}

OAIDriftCheckExplainability_Constraints OAIDriftCheckBaselines_Explainability::getConstraints() const {
    return m_constraints;
}
void OAIDriftCheckBaselines_Explainability::setConstraints(const OAIDriftCheckExplainability_Constraints &constraints) {
    m_constraints = constraints;
    m_constraints_isSet = true;
}

bool OAIDriftCheckBaselines_Explainability::is_constraints_Set() const{
    return m_constraints_isSet;
}

bool OAIDriftCheckBaselines_Explainability::is_constraints_Valid() const{
    return m_constraints_isValid;
}

OAIDriftCheckExplainability_ConfigFile OAIDriftCheckBaselines_Explainability::getConfigFile() const {
    return m_config_file;
}
void OAIDriftCheckBaselines_Explainability::setConfigFile(const OAIDriftCheckExplainability_ConfigFile &config_file) {
    m_config_file = config_file;
    m_config_file_isSet = true;
}

bool OAIDriftCheckBaselines_Explainability::is_config_file_Set() const{
    return m_config_file_isSet;
}

bool OAIDriftCheckBaselines_Explainability::is_config_file_Valid() const{
    return m_config_file_isValid;
}

bool OAIDriftCheckBaselines_Explainability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_file.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDriftCheckBaselines_Explainability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
