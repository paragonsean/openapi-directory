/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchDescribeModelPackageSummary.h
 *
 * Provides summary information about the model package.
 */

#ifndef OAIBatchDescribeModelPackageSummary_H
#define OAIBatchDescribeModelPackageSummary_H

#include <QJsonObject>

#include "OAIInferenceSpecification.h"
#include "OAIModelApprovalStatus.h"
#include "OAIModelPackageStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInferenceSpecification;

class OAIBatchDescribeModelPackageSummary : public OAIObject {
public:
    OAIBatchDescribeModelPackageSummary();
    OAIBatchDescribeModelPackageSummary(QString json);
    ~OAIBatchDescribeModelPackageSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelPackageGroupName() const;
    void setModelPackageGroupName(const QString &model_package_group_name);
    bool is_model_package_group_name_Set() const;
    bool is_model_package_group_name_Valid() const;

    qint32 getModelPackageVersion() const;
    void setModelPackageVersion(const qint32 &model_package_version);
    bool is_model_package_version_Set() const;
    bool is_model_package_version_Valid() const;

    QString getModelPackageArn() const;
    void setModelPackageArn(const QString &model_package_arn);
    bool is_model_package_arn_Set() const;
    bool is_model_package_arn_Valid() const;

    QString getModelPackageDescription() const;
    void setModelPackageDescription(const QString &model_package_description);
    bool is_model_package_description_Set() const;
    bool is_model_package_description_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIInferenceSpecification getInferenceSpecification() const;
    void setInferenceSpecification(const OAIInferenceSpecification &inference_specification);
    bool is_inference_specification_Set() const;
    bool is_inference_specification_Valid() const;

    OAIModelPackageStatus getModelPackageStatus() const;
    void setModelPackageStatus(const OAIModelPackageStatus &model_package_status);
    bool is_model_package_status_Set() const;
    bool is_model_package_status_Valid() const;

    OAIModelApprovalStatus getModelApprovalStatus() const;
    void setModelApprovalStatus(const OAIModelApprovalStatus &model_approval_status);
    bool is_model_approval_status_Set() const;
    bool is_model_approval_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_package_group_name;
    bool m_model_package_group_name_isSet;
    bool m_model_package_group_name_isValid;

    qint32 m_model_package_version;
    bool m_model_package_version_isSet;
    bool m_model_package_version_isValid;

    QString m_model_package_arn;
    bool m_model_package_arn_isSet;
    bool m_model_package_arn_isValid;

    QString m_model_package_description;
    bool m_model_package_description_isSet;
    bool m_model_package_description_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIInferenceSpecification m_inference_specification;
    bool m_inference_specification_isSet;
    bool m_inference_specification_isValid;

    OAIModelPackageStatus m_model_package_status;
    bool m_model_package_status_isSet;
    bool m_model_package_status_isValid;

    OAIModelApprovalStatus m_model_approval_status;
    bool m_model_approval_status_isSet;
    bool m_model_approval_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchDescribeModelPackageSummary)

#endif // OAIBatchDescribeModelPackageSummary_H
