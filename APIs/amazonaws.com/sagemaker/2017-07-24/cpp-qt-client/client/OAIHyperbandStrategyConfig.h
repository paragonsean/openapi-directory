/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHyperbandStrategyConfig.h
 *
 * The configuration for &lt;code&gt;Hyperband&lt;/code&gt;, a multi-fidelity based hyperparameter tuning strategy. &lt;code&gt;Hyperband&lt;/code&gt; uses the final and intermediate results of a training job to dynamically allocate resources to utilized hyperparameter configurations while automatically stopping under-performing configurations. This parameter should be provided only if &lt;code&gt;Hyperband&lt;/code&gt; is selected as the &lt;code&gt;StrategyConfig&lt;/code&gt; under the &lt;code&gt;HyperParameterTuningJobConfig&lt;/code&gt; API.
 */

#ifndef OAIHyperbandStrategyConfig_H
#define OAIHyperbandStrategyConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHyperbandStrategyConfig : public OAIObject {
public:
    OAIHyperbandStrategyConfig();
    OAIHyperbandStrategyConfig(QString json);
    ~OAIHyperbandStrategyConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMinResource() const;
    void setMinResource(const qint32 &min_resource);
    bool is_min_resource_Set() const;
    bool is_min_resource_Valid() const;

    qint32 getMaxResource() const;
    void setMaxResource(const qint32 &max_resource);
    bool is_max_resource_Set() const;
    bool is_max_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_min_resource;
    bool m_min_resource_isSet;
    bool m_min_resource_isValid;

    qint32 m_max_resource;
    bool m_max_resource_isSet;
    bool m_max_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHyperbandStrategyConfig)

#endif // OAIHyperbandStrategyConfig_H
