/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfilerConfigForUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfilerConfigForUpdate::OAIProfilerConfigForUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfilerConfigForUpdate::OAIProfilerConfigForUpdate() {
    this->initializeModel();
}

OAIProfilerConfigForUpdate::~OAIProfilerConfigForUpdate() {}

void OAIProfilerConfigForUpdate::initializeModel() {

    m_s3_output_path_isSet = false;
    m_s3_output_path_isValid = false;

    m_profiling_interval_in_milliseconds_isSet = false;
    m_profiling_interval_in_milliseconds_isValid = false;

    m_profiling_parameters_isSet = false;
    m_profiling_parameters_isValid = false;

    m_disable_profiler_isSet = false;
    m_disable_profiler_isValid = false;
}

void OAIProfilerConfigForUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfilerConfigForUpdate::fromJsonObject(QJsonObject json) {

    m_s3_output_path_isValid = ::OpenAPI::fromJsonValue(m_s3_output_path, json[QString("S3OutputPath")]);
    m_s3_output_path_isSet = !json[QString("S3OutputPath")].isNull() && m_s3_output_path_isValid;

    m_profiling_interval_in_milliseconds_isValid = ::OpenAPI::fromJsonValue(m_profiling_interval_in_milliseconds, json[QString("ProfilingIntervalInMilliseconds")]);
    m_profiling_interval_in_milliseconds_isSet = !json[QString("ProfilingIntervalInMilliseconds")].isNull() && m_profiling_interval_in_milliseconds_isValid;

    m_profiling_parameters_isValid = ::OpenAPI::fromJsonValue(m_profiling_parameters, json[QString("ProfilingParameters")]);
    m_profiling_parameters_isSet = !json[QString("ProfilingParameters")].isNull() && m_profiling_parameters_isValid;

    m_disable_profiler_isValid = ::OpenAPI::fromJsonValue(m_disable_profiler, json[QString("DisableProfiler")]);
    m_disable_profiler_isSet = !json[QString("DisableProfiler")].isNull() && m_disable_profiler_isValid;
}

QString OAIProfilerConfigForUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfilerConfigForUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_output_path_isSet) {
        obj.insert(QString("S3OutputPath"), ::OpenAPI::toJsonValue(m_s3_output_path));
    }
    if (m_profiling_interval_in_milliseconds_isSet) {
        obj.insert(QString("ProfilingIntervalInMilliseconds"), ::OpenAPI::toJsonValue(m_profiling_interval_in_milliseconds));
    }
    if (m_profiling_parameters.isSet()) {
        obj.insert(QString("ProfilingParameters"), ::OpenAPI::toJsonValue(m_profiling_parameters));
    }
    if (m_disable_profiler_isSet) {
        obj.insert(QString("DisableProfiler"), ::OpenAPI::toJsonValue(m_disable_profiler));
    }
    return obj;
}

QString OAIProfilerConfigForUpdate::getS3OutputPath() const {
    return m_s3_output_path;
}
void OAIProfilerConfigForUpdate::setS3OutputPath(const QString &s3_output_path) {
    m_s3_output_path = s3_output_path;
    m_s3_output_path_isSet = true;
}

bool OAIProfilerConfigForUpdate::is_s3_output_path_Set() const{
    return m_s3_output_path_isSet;
}

bool OAIProfilerConfigForUpdate::is_s3_output_path_Valid() const{
    return m_s3_output_path_isValid;
}

qint32 OAIProfilerConfigForUpdate::getProfilingIntervalInMilliseconds() const {
    return m_profiling_interval_in_milliseconds;
}
void OAIProfilerConfigForUpdate::setProfilingIntervalInMilliseconds(const qint32 &profiling_interval_in_milliseconds) {
    m_profiling_interval_in_milliseconds = profiling_interval_in_milliseconds;
    m_profiling_interval_in_milliseconds_isSet = true;
}

bool OAIProfilerConfigForUpdate::is_profiling_interval_in_milliseconds_Set() const{
    return m_profiling_interval_in_milliseconds_isSet;
}

bool OAIProfilerConfigForUpdate::is_profiling_interval_in_milliseconds_Valid() const{
    return m_profiling_interval_in_milliseconds_isValid;
}

QMap OAIProfilerConfigForUpdate::getProfilingParameters() const {
    return m_profiling_parameters;
}
void OAIProfilerConfigForUpdate::setProfilingParameters(const QMap &profiling_parameters) {
    m_profiling_parameters = profiling_parameters;
    m_profiling_parameters_isSet = true;
}

bool OAIProfilerConfigForUpdate::is_profiling_parameters_Set() const{
    return m_profiling_parameters_isSet;
}

bool OAIProfilerConfigForUpdate::is_profiling_parameters_Valid() const{
    return m_profiling_parameters_isValid;
}

bool OAIProfilerConfigForUpdate::getDisableProfiler() const {
    return m_disable_profiler;
}
void OAIProfilerConfigForUpdate::setDisableProfiler(const bool &disable_profiler) {
    m_disable_profiler = disable_profiler;
    m_disable_profiler_isSet = true;
}

bool OAIProfilerConfigForUpdate::is_disable_profiler_Set() const{
    return m_disable_profiler_isSet;
}

bool OAIProfilerConfigForUpdate::is_disable_profiler_Valid() const{
    return m_disable_profiler_isValid;
}

bool OAIProfilerConfigForUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_output_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profiling_interval_in_milliseconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profiling_parameters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_profiler_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfilerConfigForUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
