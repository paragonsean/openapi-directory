/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShadowModeConfig.h
 *
 *  The configuration of &lt;code&gt;ShadowMode&lt;/code&gt; inference experiment type, which specifies a production variant to take all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant it also specifies the percentage of requests that Amazon SageMaker replicates. 
 */

#ifndef OAIShadowModeConfig_H
#define OAIShadowModeConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIShadowModeConfig : public OAIObject {
public:
    OAIShadowModeConfig();
    OAIShadowModeConfig(QString json);
    ~OAIShadowModeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceModelVariantName() const;
    void setSourceModelVariantName(const QString &source_model_variant_name);
    bool is_source_model_variant_name_Set() const;
    bool is_source_model_variant_name_Valid() const;

    QList getShadowModelVariants() const;
    void setShadowModelVariants(const QList &shadow_model_variants);
    bool is_shadow_model_variants_Set() const;
    bool is_shadow_model_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_model_variant_name;
    bool m_source_model_variant_name_isSet;
    bool m_source_model_variant_name_isValid;

    QList m_shadow_model_variants;
    bool m_shadow_model_variants_isSet;
    bool m_shadow_model_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShadowModeConfig)

#endif // OAIShadowModeConfig_H
