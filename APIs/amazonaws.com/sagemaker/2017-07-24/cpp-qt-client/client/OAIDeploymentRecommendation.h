/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentRecommendation.h
 *
 * A set of recommended deployment configurations for the model. To get more advanced recommendations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateInferenceRecommendationsJob.html\&quot;&gt;CreateInferenceRecommendationsJob&lt;/a&gt; to create an inference recommendation job.
 */

#ifndef OAIDeploymentRecommendation_H
#define OAIDeploymentRecommendation_H

#include <QJsonObject>

#include "OAIRecommendationStatus.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeploymentRecommendation : public OAIObject {
public:
    OAIDeploymentRecommendation();
    OAIDeploymentRecommendation(QString json);
    ~OAIDeploymentRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecommendationStatus getRecommendationStatus() const;
    void setRecommendationStatus(const OAIRecommendationStatus &recommendation_status);
    bool is_recommendation_status_Set() const;
    bool is_recommendation_status_Valid() const;

    QList getRealTimeInferenceRecommendations() const;
    void setRealTimeInferenceRecommendations(const QList &real_time_inference_recommendations);
    bool is_real_time_inference_recommendations_Set() const;
    bool is_real_time_inference_recommendations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecommendationStatus m_recommendation_status;
    bool m_recommendation_status_isSet;
    bool m_recommendation_status_isValid;

    QList m_real_time_inference_recommendations;
    bool m_real_time_inference_recommendations_isSet;
    bool m_real_time_inference_recommendations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentRecommendation)

#endif // OAIDeploymentRecommendation_H
