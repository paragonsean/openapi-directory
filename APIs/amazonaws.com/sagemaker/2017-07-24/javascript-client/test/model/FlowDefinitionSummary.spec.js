/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSageMakerService);
  }
}(this, function(expect, AmazonSageMakerService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSageMakerService.FlowDefinitionSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FlowDefinitionSummary', function() {
    it('should create an instance of FlowDefinitionSummary', function() {
      // uncomment below and update the code to test FlowDefinitionSummary
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be.a(AmazonSageMakerService.FlowDefinitionSummary);
    });

    it('should have the property flowDefinitionName (base name: "FlowDefinitionName")', function() {
      // uncomment below and update the code to test the property flowDefinitionName
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be();
    });

    it('should have the property flowDefinitionArn (base name: "FlowDefinitionArn")', function() {
      // uncomment below and update the code to test the property flowDefinitionArn
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be();
    });

    it('should have the property flowDefinitionStatus (base name: "FlowDefinitionStatus")', function() {
      // uncomment below and update the code to test the property flowDefinitionStatus
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "CreationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be();
    });

    it('should have the property failureReason (base name: "FailureReason")', function() {
      // uncomment below and update the code to test the property failureReason
      //var instance = new AmazonSageMakerService.FlowDefinitionSummary();
      //expect(instance).to.be();
    });

  });

}));
