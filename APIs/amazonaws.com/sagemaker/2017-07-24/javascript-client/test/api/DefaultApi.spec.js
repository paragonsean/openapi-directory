/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSageMakerService);
  }
}(this, function(expect, AmazonSageMakerService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSageMakerService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addAssociation', function() {
      it('should call addAssociation successfully', function(done) {
        //uncomment below and update the code to test addAssociation
        //instance.addAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addTags', function() {
      it('should call addTags successfully', function(done) {
        //uncomment below and update the code to test addTags
        //instance.addTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateTrialComponent', function() {
      it('should call associateTrialComponent successfully', function(done) {
        //uncomment below and update the code to test associateTrialComponent
        //instance.associateTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchDescribeModelPackage', function() {
      it('should call batchDescribeModelPackage successfully', function(done) {
        //uncomment below and update the code to test batchDescribeModelPackage
        //instance.batchDescribeModelPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAction', function() {
      it('should call createAction successfully', function(done) {
        //uncomment below and update the code to test createAction
        //instance.createAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAlgorithm', function() {
      it('should call createAlgorithm successfully', function(done) {
        //uncomment below and update the code to test createAlgorithm
        //instance.createAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createApp', function() {
      it('should call createApp successfully', function(done) {
        //uncomment below and update the code to test createApp
        //instance.createApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppImageConfig', function() {
      it('should call createAppImageConfig successfully', function(done) {
        //uncomment below and update the code to test createAppImageConfig
        //instance.createAppImageConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createArtifact', function() {
      it('should call createArtifact successfully', function(done) {
        //uncomment below and update the code to test createArtifact
        //instance.createArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAutoMLJob', function() {
      it('should call createAutoMLJob successfully', function(done) {
        //uncomment below and update the code to test createAutoMLJob
        //instance.createAutoMLJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAutoMLJobV2', function() {
      it('should call createAutoMLJobV2 successfully', function(done) {
        //uncomment below and update the code to test createAutoMLJobV2
        //instance.createAutoMLJobV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCodeRepository', function() {
      it('should call createCodeRepository successfully', function(done) {
        //uncomment below and update the code to test createCodeRepository
        //instance.createCodeRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCompilationJob', function() {
      it('should call createCompilationJob successfully', function(done) {
        //uncomment below and update the code to test createCompilationJob
        //instance.createCompilationJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContext', function() {
      it('should call createContext successfully', function(done) {
        //uncomment below and update the code to test createContext
        //instance.createContext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataQualityJobDefinition', function() {
      it('should call createDataQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test createDataQualityJobDefinition
        //instance.createDataQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDeviceFleet', function() {
      it('should call createDeviceFleet successfully', function(done) {
        //uncomment below and update the code to test createDeviceFleet
        //instance.createDeviceFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDomain', function() {
      it('should call createDomain successfully', function(done) {
        //uncomment below and update the code to test createDomain
        //instance.createDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEdgeDeploymentPlan', function() {
      it('should call createEdgeDeploymentPlan successfully', function(done) {
        //uncomment below and update the code to test createEdgeDeploymentPlan
        //instance.createEdgeDeploymentPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEdgeDeploymentStage', function() {
      it('should call createEdgeDeploymentStage successfully', function(done) {
        //uncomment below and update the code to test createEdgeDeploymentStage
        //instance.createEdgeDeploymentStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEdgePackagingJob', function() {
      it('should call createEdgePackagingJob successfully', function(done) {
        //uncomment below and update the code to test createEdgePackagingJob
        //instance.createEdgePackagingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEndpoint', function() {
      it('should call createEndpoint successfully', function(done) {
        //uncomment below and update the code to test createEndpoint
        //instance.createEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEndpointConfig', function() {
      it('should call createEndpointConfig successfully', function(done) {
        //uncomment below and update the code to test createEndpointConfig
        //instance.createEndpointConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExperiment', function() {
      it('should call createExperiment successfully', function(done) {
        //uncomment below and update the code to test createExperiment
        //instance.createExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFeatureGroup', function() {
      it('should call createFeatureGroup successfully', function(done) {
        //uncomment below and update the code to test createFeatureGroup
        //instance.createFeatureGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFlowDefinition', function() {
      it('should call createFlowDefinition successfully', function(done) {
        //uncomment below and update the code to test createFlowDefinition
        //instance.createFlowDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHub', function() {
      it('should call createHub successfully', function(done) {
        //uncomment below and update the code to test createHub
        //instance.createHub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHumanTaskUi', function() {
      it('should call createHumanTaskUi successfully', function(done) {
        //uncomment below and update the code to test createHumanTaskUi
        //instance.createHumanTaskUi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHyperParameterTuningJob', function() {
      it('should call createHyperParameterTuningJob successfully', function(done) {
        //uncomment below and update the code to test createHyperParameterTuningJob
        //instance.createHyperParameterTuningJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImage', function() {
      it('should call createImage successfully', function(done) {
        //uncomment below and update the code to test createImage
        //instance.createImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImageVersion', function() {
      it('should call createImageVersion successfully', function(done) {
        //uncomment below and update the code to test createImageVersion
        //instance.createImageVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInferenceExperiment', function() {
      it('should call createInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test createInferenceExperiment
        //instance.createInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInferenceRecommendationsJob', function() {
      it('should call createInferenceRecommendationsJob successfully', function(done) {
        //uncomment below and update the code to test createInferenceRecommendationsJob
        //instance.createInferenceRecommendationsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLabelingJob', function() {
      it('should call createLabelingJob successfully', function(done) {
        //uncomment below and update the code to test createLabelingJob
        //instance.createLabelingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModel', function() {
      it('should call createModel successfully', function(done) {
        //uncomment below and update the code to test createModel
        //instance.createModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelBiasJobDefinition', function() {
      it('should call createModelBiasJobDefinition successfully', function(done) {
        //uncomment below and update the code to test createModelBiasJobDefinition
        //instance.createModelBiasJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelCard', function() {
      it('should call createModelCard successfully', function(done) {
        //uncomment below and update the code to test createModelCard
        //instance.createModelCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelCardExportJob', function() {
      it('should call createModelCardExportJob successfully', function(done) {
        //uncomment below and update the code to test createModelCardExportJob
        //instance.createModelCardExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelExplainabilityJobDefinition', function() {
      it('should call createModelExplainabilityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test createModelExplainabilityJobDefinition
        //instance.createModelExplainabilityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelPackage', function() {
      it('should call createModelPackage successfully', function(done) {
        //uncomment below and update the code to test createModelPackage
        //instance.createModelPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelPackageGroup', function() {
      it('should call createModelPackageGroup successfully', function(done) {
        //uncomment below and update the code to test createModelPackageGroup
        //instance.createModelPackageGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModelQualityJobDefinition', function() {
      it('should call createModelQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test createModelQualityJobDefinition
        //instance.createModelQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMonitoringSchedule', function() {
      it('should call createMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test createMonitoringSchedule
        //instance.createMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotebookInstance', function() {
      it('should call createNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test createNotebookInstance
        //instance.createNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotebookInstanceLifecycleConfig', function() {
      it('should call createNotebookInstanceLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test createNotebookInstanceLifecycleConfig
        //instance.createNotebookInstanceLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPipeline', function() {
      it('should call createPipeline successfully', function(done) {
        //uncomment below and update the code to test createPipeline
        //instance.createPipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPresignedDomainUrl', function() {
      it('should call createPresignedDomainUrl successfully', function(done) {
        //uncomment below and update the code to test createPresignedDomainUrl
        //instance.createPresignedDomainUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPresignedNotebookInstanceUrl', function() {
      it('should call createPresignedNotebookInstanceUrl successfully', function(done) {
        //uncomment below and update the code to test createPresignedNotebookInstanceUrl
        //instance.createPresignedNotebookInstanceUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProcessingJob', function() {
      it('should call createProcessingJob successfully', function(done) {
        //uncomment below and update the code to test createProcessingJob
        //instance.createProcessingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProject', function() {
      it('should call createProject successfully', function(done) {
        //uncomment below and update the code to test createProject
        //instance.createProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSpace', function() {
      it('should call createSpace successfully', function(done) {
        //uncomment below and update the code to test createSpace
        //instance.createSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStudioLifecycleConfig', function() {
      it('should call createStudioLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test createStudioLifecycleConfig
        //instance.createStudioLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTrainingJob', function() {
      it('should call createTrainingJob successfully', function(done) {
        //uncomment below and update the code to test createTrainingJob
        //instance.createTrainingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTransformJob', function() {
      it('should call createTransformJob successfully', function(done) {
        //uncomment below and update the code to test createTransformJob
        //instance.createTransformJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTrial', function() {
      it('should call createTrial successfully', function(done) {
        //uncomment below and update the code to test createTrial
        //instance.createTrial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTrialComponent', function() {
      it('should call createTrialComponent successfully', function(done) {
        //uncomment below and update the code to test createTrialComponent
        //instance.createTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserProfile', function() {
      it('should call createUserProfile successfully', function(done) {
        //uncomment below and update the code to test createUserProfile
        //instance.createUserProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWorkforce', function() {
      it('should call createWorkforce successfully', function(done) {
        //uncomment below and update the code to test createWorkforce
        //instance.createWorkforce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWorkteam', function() {
      it('should call createWorkteam successfully', function(done) {
        //uncomment below and update the code to test createWorkteam
        //instance.createWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAction', function() {
      it('should call deleteAction successfully', function(done) {
        //uncomment below and update the code to test deleteAction
        //instance.deleteAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAlgorithm', function() {
      it('should call deleteAlgorithm successfully', function(done) {
        //uncomment below and update the code to test deleteAlgorithm
        //instance.deleteAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApp', function() {
      it('should call deleteApp successfully', function(done) {
        //uncomment below and update the code to test deleteApp
        //instance.deleteApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppImageConfig', function() {
      it('should call deleteAppImageConfig successfully', function(done) {
        //uncomment below and update the code to test deleteAppImageConfig
        //instance.deleteAppImageConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteArtifact', function() {
      it('should call deleteArtifact successfully', function(done) {
        //uncomment below and update the code to test deleteArtifact
        //instance.deleteArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAssociation', function() {
      it('should call deleteAssociation successfully', function(done) {
        //uncomment below and update the code to test deleteAssociation
        //instance.deleteAssociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCodeRepository', function() {
      it('should call deleteCodeRepository successfully', function(done) {
        //uncomment below and update the code to test deleteCodeRepository
        //instance.deleteCodeRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContext', function() {
      it('should call deleteContext successfully', function(done) {
        //uncomment below and update the code to test deleteContext
        //instance.deleteContext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataQualityJobDefinition', function() {
      it('should call deleteDataQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteDataQualityJobDefinition
        //instance.deleteDataQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDeviceFleet', function() {
      it('should call deleteDeviceFleet successfully', function(done) {
        //uncomment below and update the code to test deleteDeviceFleet
        //instance.deleteDeviceFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDomain', function() {
      it('should call deleteDomain successfully', function(done) {
        //uncomment below and update the code to test deleteDomain
        //instance.deleteDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEdgeDeploymentPlan', function() {
      it('should call deleteEdgeDeploymentPlan successfully', function(done) {
        //uncomment below and update the code to test deleteEdgeDeploymentPlan
        //instance.deleteEdgeDeploymentPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEdgeDeploymentStage', function() {
      it('should call deleteEdgeDeploymentStage successfully', function(done) {
        //uncomment below and update the code to test deleteEdgeDeploymentStage
        //instance.deleteEdgeDeploymentStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEndpoint', function() {
      it('should call deleteEndpoint successfully', function(done) {
        //uncomment below and update the code to test deleteEndpoint
        //instance.deleteEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEndpointConfig', function() {
      it('should call deleteEndpointConfig successfully', function(done) {
        //uncomment below and update the code to test deleteEndpointConfig
        //instance.deleteEndpointConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExperiment', function() {
      it('should call deleteExperiment successfully', function(done) {
        //uncomment below and update the code to test deleteExperiment
        //instance.deleteExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFeatureGroup', function() {
      it('should call deleteFeatureGroup successfully', function(done) {
        //uncomment below and update the code to test deleteFeatureGroup
        //instance.deleteFeatureGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlowDefinition', function() {
      it('should call deleteFlowDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteFlowDefinition
        //instance.deleteFlowDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHub', function() {
      it('should call deleteHub successfully', function(done) {
        //uncomment below and update the code to test deleteHub
        //instance.deleteHub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHubContent', function() {
      it('should call deleteHubContent successfully', function(done) {
        //uncomment below and update the code to test deleteHubContent
        //instance.deleteHubContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHumanTaskUi', function() {
      it('should call deleteHumanTaskUi successfully', function(done) {
        //uncomment below and update the code to test deleteHumanTaskUi
        //instance.deleteHumanTaskUi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImage', function() {
      it('should call deleteImage successfully', function(done) {
        //uncomment below and update the code to test deleteImage
        //instance.deleteImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImageVersion', function() {
      it('should call deleteImageVersion successfully', function(done) {
        //uncomment below and update the code to test deleteImageVersion
        //instance.deleteImageVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInferenceExperiment', function() {
      it('should call deleteInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test deleteInferenceExperiment
        //instance.deleteInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel', function() {
      it('should call deleteModel successfully', function(done) {
        //uncomment below and update the code to test deleteModel
        //instance.deleteModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelBiasJobDefinition', function() {
      it('should call deleteModelBiasJobDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteModelBiasJobDefinition
        //instance.deleteModelBiasJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelCard', function() {
      it('should call deleteModelCard successfully', function(done) {
        //uncomment below and update the code to test deleteModelCard
        //instance.deleteModelCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelExplainabilityJobDefinition', function() {
      it('should call deleteModelExplainabilityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteModelExplainabilityJobDefinition
        //instance.deleteModelExplainabilityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelPackage', function() {
      it('should call deleteModelPackage successfully', function(done) {
        //uncomment below and update the code to test deleteModelPackage
        //instance.deleteModelPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelPackageGroup', function() {
      it('should call deleteModelPackageGroup successfully', function(done) {
        //uncomment below and update the code to test deleteModelPackageGroup
        //instance.deleteModelPackageGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelPackageGroupPolicy', function() {
      it('should call deleteModelPackageGroupPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteModelPackageGroupPolicy
        //instance.deleteModelPackageGroupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelQualityJobDefinition', function() {
      it('should call deleteModelQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test deleteModelQualityJobDefinition
        //instance.deleteModelQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMonitoringSchedule', function() {
      it('should call deleteMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test deleteMonitoringSchedule
        //instance.deleteMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotebookInstance', function() {
      it('should call deleteNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test deleteNotebookInstance
        //instance.deleteNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotebookInstanceLifecycleConfig', function() {
      it('should call deleteNotebookInstanceLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test deleteNotebookInstanceLifecycleConfig
        //instance.deleteNotebookInstanceLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePipeline', function() {
      it('should call deletePipeline successfully', function(done) {
        //uncomment below and update the code to test deletePipeline
        //instance.deletePipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProject', function() {
      it('should call deleteProject successfully', function(done) {
        //uncomment below and update the code to test deleteProject
        //instance.deleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSpace', function() {
      it('should call deleteSpace successfully', function(done) {
        //uncomment below and update the code to test deleteSpace
        //instance.deleteSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStudioLifecycleConfig', function() {
      it('should call deleteStudioLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test deleteStudioLifecycleConfig
        //instance.deleteStudioLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTags', function() {
      it('should call deleteTags successfully', function(done) {
        //uncomment below and update the code to test deleteTags
        //instance.deleteTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTrial', function() {
      it('should call deleteTrial successfully', function(done) {
        //uncomment below and update the code to test deleteTrial
        //instance.deleteTrial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTrialComponent', function() {
      it('should call deleteTrialComponent successfully', function(done) {
        //uncomment below and update the code to test deleteTrialComponent
        //instance.deleteTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserProfile', function() {
      it('should call deleteUserProfile successfully', function(done) {
        //uncomment below and update the code to test deleteUserProfile
        //instance.deleteUserProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWorkforce', function() {
      it('should call deleteWorkforce successfully', function(done) {
        //uncomment below and update the code to test deleteWorkforce
        //instance.deleteWorkforce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWorkteam', function() {
      it('should call deleteWorkteam successfully', function(done) {
        //uncomment below and update the code to test deleteWorkteam
        //instance.deleteWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deregisterDevices', function() {
      it('should call deregisterDevices successfully', function(done) {
        //uncomment below and update the code to test deregisterDevices
        //instance.deregisterDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAction', function() {
      it('should call describeAction successfully', function(done) {
        //uncomment below and update the code to test describeAction
        //instance.describeAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAlgorithm', function() {
      it('should call describeAlgorithm successfully', function(done) {
        //uncomment below and update the code to test describeAlgorithm
        //instance.describeAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeApp', function() {
      it('should call describeApp successfully', function(done) {
        //uncomment below and update the code to test describeApp
        //instance.describeApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAppImageConfig', function() {
      it('should call describeAppImageConfig successfully', function(done) {
        //uncomment below and update the code to test describeAppImageConfig
        //instance.describeAppImageConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeArtifact', function() {
      it('should call describeArtifact successfully', function(done) {
        //uncomment below and update the code to test describeArtifact
        //instance.describeArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAutoMLJob', function() {
      it('should call describeAutoMLJob successfully', function(done) {
        //uncomment below and update the code to test describeAutoMLJob
        //instance.describeAutoMLJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAutoMLJobV2', function() {
      it('should call describeAutoMLJobV2 successfully', function(done) {
        //uncomment below and update the code to test describeAutoMLJobV2
        //instance.describeAutoMLJobV2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCodeRepository', function() {
      it('should call describeCodeRepository successfully', function(done) {
        //uncomment below and update the code to test describeCodeRepository
        //instance.describeCodeRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCompilationJob', function() {
      it('should call describeCompilationJob successfully', function(done) {
        //uncomment below and update the code to test describeCompilationJob
        //instance.describeCompilationJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeContext', function() {
      it('should call describeContext successfully', function(done) {
        //uncomment below and update the code to test describeContext
        //instance.describeContext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDataQualityJobDefinition', function() {
      it('should call describeDataQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test describeDataQualityJobDefinition
        //instance.describeDataQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDevice', function() {
      it('should call describeDevice successfully', function(done) {
        //uncomment below and update the code to test describeDevice
        //instance.describeDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDeviceFleet', function() {
      it('should call describeDeviceFleet successfully', function(done) {
        //uncomment below and update the code to test describeDeviceFleet
        //instance.describeDeviceFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDomain', function() {
      it('should call describeDomain successfully', function(done) {
        //uncomment below and update the code to test describeDomain
        //instance.describeDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEdgeDeploymentPlan', function() {
      it('should call describeEdgeDeploymentPlan successfully', function(done) {
        //uncomment below and update the code to test describeEdgeDeploymentPlan
        //instance.describeEdgeDeploymentPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEdgePackagingJob', function() {
      it('should call describeEdgePackagingJob successfully', function(done) {
        //uncomment below and update the code to test describeEdgePackagingJob
        //instance.describeEdgePackagingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEndpoint', function() {
      it('should call describeEndpoint successfully', function(done) {
        //uncomment below and update the code to test describeEndpoint
        //instance.describeEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeEndpointConfig', function() {
      it('should call describeEndpointConfig successfully', function(done) {
        //uncomment below and update the code to test describeEndpointConfig
        //instance.describeEndpointConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeExperiment', function() {
      it('should call describeExperiment successfully', function(done) {
        //uncomment below and update the code to test describeExperiment
        //instance.describeExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFeatureGroup', function() {
      it('should call describeFeatureGroup successfully', function(done) {
        //uncomment below and update the code to test describeFeatureGroup
        //instance.describeFeatureGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFeatureMetadata', function() {
      it('should call describeFeatureMetadata successfully', function(done) {
        //uncomment below and update the code to test describeFeatureMetadata
        //instance.describeFeatureMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFlowDefinition', function() {
      it('should call describeFlowDefinition successfully', function(done) {
        //uncomment below and update the code to test describeFlowDefinition
        //instance.describeFlowDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeHub', function() {
      it('should call describeHub successfully', function(done) {
        //uncomment below and update the code to test describeHub
        //instance.describeHub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeHubContent', function() {
      it('should call describeHubContent successfully', function(done) {
        //uncomment below and update the code to test describeHubContent
        //instance.describeHubContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeHumanTaskUi', function() {
      it('should call describeHumanTaskUi successfully', function(done) {
        //uncomment below and update the code to test describeHumanTaskUi
        //instance.describeHumanTaskUi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeHyperParameterTuningJob', function() {
      it('should call describeHyperParameterTuningJob successfully', function(done) {
        //uncomment below and update the code to test describeHyperParameterTuningJob
        //instance.describeHyperParameterTuningJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImage', function() {
      it('should call describeImage successfully', function(done) {
        //uncomment below and update the code to test describeImage
        //instance.describeImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeImageVersion', function() {
      it('should call describeImageVersion successfully', function(done) {
        //uncomment below and update the code to test describeImageVersion
        //instance.describeImageVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeInferenceExperiment', function() {
      it('should call describeInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test describeInferenceExperiment
        //instance.describeInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeInferenceRecommendationsJob', function() {
      it('should call describeInferenceRecommendationsJob successfully', function(done) {
        //uncomment below and update the code to test describeInferenceRecommendationsJob
        //instance.describeInferenceRecommendationsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLabelingJob', function() {
      it('should call describeLabelingJob successfully', function(done) {
        //uncomment below and update the code to test describeLabelingJob
        //instance.describeLabelingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLineageGroup', function() {
      it('should call describeLineageGroup successfully', function(done) {
        //uncomment below and update the code to test describeLineageGroup
        //instance.describeLineageGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModel', function() {
      it('should call describeModel successfully', function(done) {
        //uncomment below and update the code to test describeModel
        //instance.describeModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelBiasJobDefinition', function() {
      it('should call describeModelBiasJobDefinition successfully', function(done) {
        //uncomment below and update the code to test describeModelBiasJobDefinition
        //instance.describeModelBiasJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelCard', function() {
      it('should call describeModelCard successfully', function(done) {
        //uncomment below and update the code to test describeModelCard
        //instance.describeModelCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelCardExportJob', function() {
      it('should call describeModelCardExportJob successfully', function(done) {
        //uncomment below and update the code to test describeModelCardExportJob
        //instance.describeModelCardExportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelExplainabilityJobDefinition', function() {
      it('should call describeModelExplainabilityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test describeModelExplainabilityJobDefinition
        //instance.describeModelExplainabilityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelPackage', function() {
      it('should call describeModelPackage successfully', function(done) {
        //uncomment below and update the code to test describeModelPackage
        //instance.describeModelPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelPackageGroup', function() {
      it('should call describeModelPackageGroup successfully', function(done) {
        //uncomment below and update the code to test describeModelPackageGroup
        //instance.describeModelPackageGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeModelQualityJobDefinition', function() {
      it('should call describeModelQualityJobDefinition successfully', function(done) {
        //uncomment below and update the code to test describeModelQualityJobDefinition
        //instance.describeModelQualityJobDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeMonitoringSchedule', function() {
      it('should call describeMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test describeMonitoringSchedule
        //instance.describeMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeNotebookInstance', function() {
      it('should call describeNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test describeNotebookInstance
        //instance.describeNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeNotebookInstanceLifecycleConfig', function() {
      it('should call describeNotebookInstanceLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test describeNotebookInstanceLifecycleConfig
        //instance.describeNotebookInstanceLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePipeline', function() {
      it('should call describePipeline successfully', function(done) {
        //uncomment below and update the code to test describePipeline
        //instance.describePipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePipelineDefinitionForExecution', function() {
      it('should call describePipelineDefinitionForExecution successfully', function(done) {
        //uncomment below and update the code to test describePipelineDefinitionForExecution
        //instance.describePipelineDefinitionForExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describePipelineExecution', function() {
      it('should call describePipelineExecution successfully', function(done) {
        //uncomment below and update the code to test describePipelineExecution
        //instance.describePipelineExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProcessingJob', function() {
      it('should call describeProcessingJob successfully', function(done) {
        //uncomment below and update the code to test describeProcessingJob
        //instance.describeProcessingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProject', function() {
      it('should call describeProject successfully', function(done) {
        //uncomment below and update the code to test describeProject
        //instance.describeProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSpace', function() {
      it('should call describeSpace successfully', function(done) {
        //uncomment below and update the code to test describeSpace
        //instance.describeSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStudioLifecycleConfig', function() {
      it('should call describeStudioLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test describeStudioLifecycleConfig
        //instance.describeStudioLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeSubscribedWorkteam', function() {
      it('should call describeSubscribedWorkteam successfully', function(done) {
        //uncomment below and update the code to test describeSubscribedWorkteam
        //instance.describeSubscribedWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTrainingJob', function() {
      it('should call describeTrainingJob successfully', function(done) {
        //uncomment below and update the code to test describeTrainingJob
        //instance.describeTrainingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTransformJob', function() {
      it('should call describeTransformJob successfully', function(done) {
        //uncomment below and update the code to test describeTransformJob
        //instance.describeTransformJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTrial', function() {
      it('should call describeTrial successfully', function(done) {
        //uncomment below and update the code to test describeTrial
        //instance.describeTrial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTrialComponent', function() {
      it('should call describeTrialComponent successfully', function(done) {
        //uncomment below and update the code to test describeTrialComponent
        //instance.describeTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeUserProfile', function() {
      it('should call describeUserProfile successfully', function(done) {
        //uncomment below and update the code to test describeUserProfile
        //instance.describeUserProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeWorkforce', function() {
      it('should call describeWorkforce successfully', function(done) {
        //uncomment below and update the code to test describeWorkforce
        //instance.describeWorkforce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeWorkteam', function() {
      it('should call describeWorkteam successfully', function(done) {
        //uncomment below and update the code to test describeWorkteam
        //instance.describeWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableSagemakerServicecatalogPortfolio', function() {
      it('should call disableSagemakerServicecatalogPortfolio successfully', function(done) {
        //uncomment below and update the code to test disableSagemakerServicecatalogPortfolio
        //instance.disableSagemakerServicecatalogPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateTrialComponent', function() {
      it('should call disassociateTrialComponent successfully', function(done) {
        //uncomment below and update the code to test disassociateTrialComponent
        //instance.disassociateTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableSagemakerServicecatalogPortfolio', function() {
      it('should call enableSagemakerServicecatalogPortfolio successfully', function(done) {
        //uncomment below and update the code to test enableSagemakerServicecatalogPortfolio
        //instance.enableSagemakerServicecatalogPortfolio(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeviceFleetReport', function() {
      it('should call getDeviceFleetReport successfully', function(done) {
        //uncomment below and update the code to test getDeviceFleetReport
        //instance.getDeviceFleetReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLineageGroupPolicy', function() {
      it('should call getLineageGroupPolicy successfully', function(done) {
        //uncomment below and update the code to test getLineageGroupPolicy
        //instance.getLineageGroupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModelPackageGroupPolicy', function() {
      it('should call getModelPackageGroupPolicy successfully', function(done) {
        //uncomment below and update the code to test getModelPackageGroupPolicy
        //instance.getModelPackageGroupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSagemakerServicecatalogPortfolioStatus', function() {
      it('should call getSagemakerServicecatalogPortfolioStatus successfully', function(done) {
        //uncomment below and update the code to test getSagemakerServicecatalogPortfolioStatus
        //instance.getSagemakerServicecatalogPortfolioStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScalingConfigurationRecommendation', function() {
      it('should call getScalingConfigurationRecommendation successfully', function(done) {
        //uncomment below and update the code to test getScalingConfigurationRecommendation
        //instance.getScalingConfigurationRecommendation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSearchSuggestions', function() {
      it('should call getSearchSuggestions successfully', function(done) {
        //uncomment below and update the code to test getSearchSuggestions
        //instance.getSearchSuggestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importHubContent', function() {
      it('should call importHubContent successfully', function(done) {
        //uncomment below and update the code to test importHubContent
        //instance.importHubContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listActions', function() {
      it('should call listActions successfully', function(done) {
        //uncomment below and update the code to test listActions
        //instance.listActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAlgorithms', function() {
      it('should call listAlgorithms successfully', function(done) {
        //uncomment below and update the code to test listAlgorithms
        //instance.listAlgorithms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAliases', function() {
      it('should call listAliases successfully', function(done) {
        //uncomment below and update the code to test listAliases
        //instance.listAliases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppImageConfigs', function() {
      it('should call listAppImageConfigs successfully', function(done) {
        //uncomment below and update the code to test listAppImageConfigs
        //instance.listAppImageConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApps', function() {
      it('should call listApps successfully', function(done) {
        //uncomment below and update the code to test listApps
        //instance.listApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listArtifacts', function() {
      it('should call listArtifacts successfully', function(done) {
        //uncomment below and update the code to test listArtifacts
        //instance.listArtifacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssociations', function() {
      it('should call listAssociations successfully', function(done) {
        //uncomment below and update the code to test listAssociations
        //instance.listAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAutoMLJobs', function() {
      it('should call listAutoMLJobs successfully', function(done) {
        //uncomment below and update the code to test listAutoMLJobs
        //instance.listAutoMLJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCandidatesForAutoMLJob', function() {
      it('should call listCandidatesForAutoMLJob successfully', function(done) {
        //uncomment below and update the code to test listCandidatesForAutoMLJob
        //instance.listCandidatesForAutoMLJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCodeRepositories', function() {
      it('should call listCodeRepositories successfully', function(done) {
        //uncomment below and update the code to test listCodeRepositories
        //instance.listCodeRepositories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCompilationJobs', function() {
      it('should call listCompilationJobs successfully', function(done) {
        //uncomment below and update the code to test listCompilationJobs
        //instance.listCompilationJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContexts', function() {
      it('should call listContexts successfully', function(done) {
        //uncomment below and update the code to test listContexts
        //instance.listContexts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataQualityJobDefinitions', function() {
      it('should call listDataQualityJobDefinitions successfully', function(done) {
        //uncomment below and update the code to test listDataQualityJobDefinitions
        //instance.listDataQualityJobDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeviceFleets', function() {
      it('should call listDeviceFleets successfully', function(done) {
        //uncomment below and update the code to test listDeviceFleets
        //instance.listDeviceFleets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDevices', function() {
      it('should call listDevices successfully', function(done) {
        //uncomment below and update the code to test listDevices
        //instance.listDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDomains', function() {
      it('should call listDomains successfully', function(done) {
        //uncomment below and update the code to test listDomains
        //instance.listDomains(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEdgeDeploymentPlans', function() {
      it('should call listEdgeDeploymentPlans successfully', function(done) {
        //uncomment below and update the code to test listEdgeDeploymentPlans
        //instance.listEdgeDeploymentPlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEdgePackagingJobs', function() {
      it('should call listEdgePackagingJobs successfully', function(done) {
        //uncomment below and update the code to test listEdgePackagingJobs
        //instance.listEdgePackagingJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEndpointConfigs', function() {
      it('should call listEndpointConfigs successfully', function(done) {
        //uncomment below and update the code to test listEndpointConfigs
        //instance.listEndpointConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEndpoints', function() {
      it('should call listEndpoints successfully', function(done) {
        //uncomment below and update the code to test listEndpoints
        //instance.listEndpoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExperiments', function() {
      it('should call listExperiments successfully', function(done) {
        //uncomment below and update the code to test listExperiments
        //instance.listExperiments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFeatureGroups', function() {
      it('should call listFeatureGroups successfully', function(done) {
        //uncomment below and update the code to test listFeatureGroups
        //instance.listFeatureGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFlowDefinitions', function() {
      it('should call listFlowDefinitions successfully', function(done) {
        //uncomment below and update the code to test listFlowDefinitions
        //instance.listFlowDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHubContentVersions', function() {
      it('should call listHubContentVersions successfully', function(done) {
        //uncomment below and update the code to test listHubContentVersions
        //instance.listHubContentVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHubContents', function() {
      it('should call listHubContents successfully', function(done) {
        //uncomment below and update the code to test listHubContents
        //instance.listHubContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHubs', function() {
      it('should call listHubs successfully', function(done) {
        //uncomment below and update the code to test listHubs
        //instance.listHubs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHumanTaskUis', function() {
      it('should call listHumanTaskUis successfully', function(done) {
        //uncomment below and update the code to test listHumanTaskUis
        //instance.listHumanTaskUis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHyperParameterTuningJobs', function() {
      it('should call listHyperParameterTuningJobs successfully', function(done) {
        //uncomment below and update the code to test listHyperParameterTuningJobs
        //instance.listHyperParameterTuningJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listImageVersions', function() {
      it('should call listImageVersions successfully', function(done) {
        //uncomment below and update the code to test listImageVersions
        //instance.listImageVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listImages', function() {
      it('should call listImages successfully', function(done) {
        //uncomment below and update the code to test listImages
        //instance.listImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInferenceExperiments', function() {
      it('should call listInferenceExperiments successfully', function(done) {
        //uncomment below and update the code to test listInferenceExperiments
        //instance.listInferenceExperiments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInferenceRecommendationsJobSteps', function() {
      it('should call listInferenceRecommendationsJobSteps successfully', function(done) {
        //uncomment below and update the code to test listInferenceRecommendationsJobSteps
        //instance.listInferenceRecommendationsJobSteps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInferenceRecommendationsJobs', function() {
      it('should call listInferenceRecommendationsJobs successfully', function(done) {
        //uncomment below and update the code to test listInferenceRecommendationsJobs
        //instance.listInferenceRecommendationsJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLabelingJobs', function() {
      it('should call listLabelingJobs successfully', function(done) {
        //uncomment below and update the code to test listLabelingJobs
        //instance.listLabelingJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLabelingJobsForWorkteam', function() {
      it('should call listLabelingJobsForWorkteam successfully', function(done) {
        //uncomment below and update the code to test listLabelingJobsForWorkteam
        //instance.listLabelingJobsForWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLineageGroups', function() {
      it('should call listLineageGroups successfully', function(done) {
        //uncomment below and update the code to test listLineageGroups
        //instance.listLineageGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelBiasJobDefinitions', function() {
      it('should call listModelBiasJobDefinitions successfully', function(done) {
        //uncomment below and update the code to test listModelBiasJobDefinitions
        //instance.listModelBiasJobDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelCardExportJobs', function() {
      it('should call listModelCardExportJobs successfully', function(done) {
        //uncomment below and update the code to test listModelCardExportJobs
        //instance.listModelCardExportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelCardVersions', function() {
      it('should call listModelCardVersions successfully', function(done) {
        //uncomment below and update the code to test listModelCardVersions
        //instance.listModelCardVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelCards', function() {
      it('should call listModelCards successfully', function(done) {
        //uncomment below and update the code to test listModelCards
        //instance.listModelCards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelExplainabilityJobDefinitions', function() {
      it('should call listModelExplainabilityJobDefinitions successfully', function(done) {
        //uncomment below and update the code to test listModelExplainabilityJobDefinitions
        //instance.listModelExplainabilityJobDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelMetadata', function() {
      it('should call listModelMetadata successfully', function(done) {
        //uncomment below and update the code to test listModelMetadata
        //instance.listModelMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelPackageGroups', function() {
      it('should call listModelPackageGroups successfully', function(done) {
        //uncomment below and update the code to test listModelPackageGroups
        //instance.listModelPackageGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelPackages', function() {
      it('should call listModelPackages successfully', function(done) {
        //uncomment below and update the code to test listModelPackages
        //instance.listModelPackages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelQualityJobDefinitions', function() {
      it('should call listModelQualityJobDefinitions successfully', function(done) {
        //uncomment below and update the code to test listModelQualityJobDefinitions
        //instance.listModelQualityJobDefinitions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModels', function() {
      it('should call listModels successfully', function(done) {
        //uncomment below and update the code to test listModels
        //instance.listModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitoringAlertHistory', function() {
      it('should call listMonitoringAlertHistory successfully', function(done) {
        //uncomment below and update the code to test listMonitoringAlertHistory
        //instance.listMonitoringAlertHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitoringAlerts', function() {
      it('should call listMonitoringAlerts successfully', function(done) {
        //uncomment below and update the code to test listMonitoringAlerts
        //instance.listMonitoringAlerts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitoringExecutions', function() {
      it('should call listMonitoringExecutions successfully', function(done) {
        //uncomment below and update the code to test listMonitoringExecutions
        //instance.listMonitoringExecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMonitoringSchedules', function() {
      it('should call listMonitoringSchedules successfully', function(done) {
        //uncomment below and update the code to test listMonitoringSchedules
        //instance.listMonitoringSchedules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNotebookInstanceLifecycleConfigs', function() {
      it('should call listNotebookInstanceLifecycleConfigs successfully', function(done) {
        //uncomment below and update the code to test listNotebookInstanceLifecycleConfigs
        //instance.listNotebookInstanceLifecycleConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNotebookInstances', function() {
      it('should call listNotebookInstances successfully', function(done) {
        //uncomment below and update the code to test listNotebookInstances
        //instance.listNotebookInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPipelineExecutionSteps', function() {
      it('should call listPipelineExecutionSteps successfully', function(done) {
        //uncomment below and update the code to test listPipelineExecutionSteps
        //instance.listPipelineExecutionSteps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPipelineExecutions', function() {
      it('should call listPipelineExecutions successfully', function(done) {
        //uncomment below and update the code to test listPipelineExecutions
        //instance.listPipelineExecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPipelineParametersForExecution', function() {
      it('should call listPipelineParametersForExecution successfully', function(done) {
        //uncomment below and update the code to test listPipelineParametersForExecution
        //instance.listPipelineParametersForExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPipelines', function() {
      it('should call listPipelines successfully', function(done) {
        //uncomment below and update the code to test listPipelines
        //instance.listPipelines(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProcessingJobs', function() {
      it('should call listProcessingJobs successfully', function(done) {
        //uncomment below and update the code to test listProcessingJobs
        //instance.listProcessingJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProjects', function() {
      it('should call listProjects successfully', function(done) {
        //uncomment below and update the code to test listProjects
        //instance.listProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourceCatalogs', function() {
      it('should call listResourceCatalogs successfully', function(done) {
        //uncomment below and update the code to test listResourceCatalogs
        //instance.listResourceCatalogs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSpaces', function() {
      it('should call listSpaces successfully', function(done) {
        //uncomment below and update the code to test listSpaces
        //instance.listSpaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStageDevices', function() {
      it('should call listStageDevices successfully', function(done) {
        //uncomment below and update the code to test listStageDevices
        //instance.listStageDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStudioLifecycleConfigs', function() {
      it('should call listStudioLifecycleConfigs successfully', function(done) {
        //uncomment below and update the code to test listStudioLifecycleConfigs
        //instance.listStudioLifecycleConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSubscribedWorkteams', function() {
      it('should call listSubscribedWorkteams successfully', function(done) {
        //uncomment below and update the code to test listSubscribedWorkteams
        //instance.listSubscribedWorkteams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTags', function() {
      it('should call listTags successfully', function(done) {
        //uncomment below and update the code to test listTags
        //instance.listTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTrainingJobs', function() {
      it('should call listTrainingJobs successfully', function(done) {
        //uncomment below and update the code to test listTrainingJobs
        //instance.listTrainingJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTrainingJobsForHyperParameterTuningJob', function() {
      it('should call listTrainingJobsForHyperParameterTuningJob successfully', function(done) {
        //uncomment below and update the code to test listTrainingJobsForHyperParameterTuningJob
        //instance.listTrainingJobsForHyperParameterTuningJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTransformJobs', function() {
      it('should call listTransformJobs successfully', function(done) {
        //uncomment below and update the code to test listTransformJobs
        //instance.listTransformJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTrialComponents', function() {
      it('should call listTrialComponents successfully', function(done) {
        //uncomment below and update the code to test listTrialComponents
        //instance.listTrialComponents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTrials', function() {
      it('should call listTrials successfully', function(done) {
        //uncomment below and update the code to test listTrials
        //instance.listTrials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUserProfiles', function() {
      it('should call listUserProfiles successfully', function(done) {
        //uncomment below and update the code to test listUserProfiles
        //instance.listUserProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWorkforces', function() {
      it('should call listWorkforces successfully', function(done) {
        //uncomment below and update the code to test listWorkforces
        //instance.listWorkforces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWorkteams', function() {
      it('should call listWorkteams successfully', function(done) {
        //uncomment below and update the code to test listWorkteams
        //instance.listWorkteams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putModelPackageGroupPolicy', function() {
      it('should call putModelPackageGroupPolicy successfully', function(done) {
        //uncomment below and update the code to test putModelPackageGroupPolicy
        //instance.putModelPackageGroupPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryLineage', function() {
      it('should call queryLineage successfully', function(done) {
        //uncomment below and update the code to test queryLineage
        //instance.queryLineage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerDevices', function() {
      it('should call registerDevices successfully', function(done) {
        //uncomment below and update the code to test registerDevices
        //instance.registerDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renderUiTemplate', function() {
      it('should call renderUiTemplate successfully', function(done) {
        //uncomment below and update the code to test renderUiTemplate
        //instance.renderUiTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retryPipelineExecution', function() {
      it('should call retryPipelineExecution successfully', function(done) {
        //uncomment below and update the code to test retryPipelineExecution
        //instance.retryPipelineExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('search', function() {
      it('should call search successfully', function(done) {
        //uncomment below and update the code to test search
        //instance.search(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPipelineExecutionStepFailure', function() {
      it('should call sendPipelineExecutionStepFailure successfully', function(done) {
        //uncomment below and update the code to test sendPipelineExecutionStepFailure
        //instance.sendPipelineExecutionStepFailure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPipelineExecutionStepSuccess', function() {
      it('should call sendPipelineExecutionStepSuccess successfully', function(done) {
        //uncomment below and update the code to test sendPipelineExecutionStepSuccess
        //instance.sendPipelineExecutionStepSuccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startEdgeDeploymentStage', function() {
      it('should call startEdgeDeploymentStage successfully', function(done) {
        //uncomment below and update the code to test startEdgeDeploymentStage
        //instance.startEdgeDeploymentStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startInferenceExperiment', function() {
      it('should call startInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test startInferenceExperiment
        //instance.startInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startMonitoringSchedule', function() {
      it('should call startMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test startMonitoringSchedule
        //instance.startMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startNotebookInstance', function() {
      it('should call startNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test startNotebookInstance
        //instance.startNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startPipelineExecution', function() {
      it('should call startPipelineExecution successfully', function(done) {
        //uncomment below and update the code to test startPipelineExecution
        //instance.startPipelineExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopAutoMLJob', function() {
      it('should call stopAutoMLJob successfully', function(done) {
        //uncomment below and update the code to test stopAutoMLJob
        //instance.stopAutoMLJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopCompilationJob', function() {
      it('should call stopCompilationJob successfully', function(done) {
        //uncomment below and update the code to test stopCompilationJob
        //instance.stopCompilationJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopEdgeDeploymentStage', function() {
      it('should call stopEdgeDeploymentStage successfully', function(done) {
        //uncomment below and update the code to test stopEdgeDeploymentStage
        //instance.stopEdgeDeploymentStage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopEdgePackagingJob', function() {
      it('should call stopEdgePackagingJob successfully', function(done) {
        //uncomment below and update the code to test stopEdgePackagingJob
        //instance.stopEdgePackagingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopHyperParameterTuningJob', function() {
      it('should call stopHyperParameterTuningJob successfully', function(done) {
        //uncomment below and update the code to test stopHyperParameterTuningJob
        //instance.stopHyperParameterTuningJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopInferenceExperiment', function() {
      it('should call stopInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test stopInferenceExperiment
        //instance.stopInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopInferenceRecommendationsJob', function() {
      it('should call stopInferenceRecommendationsJob successfully', function(done) {
        //uncomment below and update the code to test stopInferenceRecommendationsJob
        //instance.stopInferenceRecommendationsJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopLabelingJob', function() {
      it('should call stopLabelingJob successfully', function(done) {
        //uncomment below and update the code to test stopLabelingJob
        //instance.stopLabelingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopMonitoringSchedule', function() {
      it('should call stopMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test stopMonitoringSchedule
        //instance.stopMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopNotebookInstance', function() {
      it('should call stopNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test stopNotebookInstance
        //instance.stopNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopPipelineExecution', function() {
      it('should call stopPipelineExecution successfully', function(done) {
        //uncomment below and update the code to test stopPipelineExecution
        //instance.stopPipelineExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopProcessingJob', function() {
      it('should call stopProcessingJob successfully', function(done) {
        //uncomment below and update the code to test stopProcessingJob
        //instance.stopProcessingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopTrainingJob', function() {
      it('should call stopTrainingJob successfully', function(done) {
        //uncomment below and update the code to test stopTrainingJob
        //instance.stopTrainingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopTransformJob', function() {
      it('should call stopTransformJob successfully', function(done) {
        //uncomment below and update the code to test stopTransformJob
        //instance.stopTransformJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAction', function() {
      it('should call updateAction successfully', function(done) {
        //uncomment below and update the code to test updateAction
        //instance.updateAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAppImageConfig', function() {
      it('should call updateAppImageConfig successfully', function(done) {
        //uncomment below and update the code to test updateAppImageConfig
        //instance.updateAppImageConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateArtifact', function() {
      it('should call updateArtifact successfully', function(done) {
        //uncomment below and update the code to test updateArtifact
        //instance.updateArtifact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCodeRepository', function() {
      it('should call updateCodeRepository successfully', function(done) {
        //uncomment below and update the code to test updateCodeRepository
        //instance.updateCodeRepository(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContext', function() {
      it('should call updateContext successfully', function(done) {
        //uncomment below and update the code to test updateContext
        //instance.updateContext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDeviceFleet', function() {
      it('should call updateDeviceFleet successfully', function(done) {
        //uncomment below and update the code to test updateDeviceFleet
        //instance.updateDeviceFleet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDevices', function() {
      it('should call updateDevices successfully', function(done) {
        //uncomment below and update the code to test updateDevices
        //instance.updateDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDomain', function() {
      it('should call updateDomain successfully', function(done) {
        //uncomment below and update the code to test updateDomain
        //instance.updateDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEndpoint', function() {
      it('should call updateEndpoint successfully', function(done) {
        //uncomment below and update the code to test updateEndpoint
        //instance.updateEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEndpointWeightsAndCapacities', function() {
      it('should call updateEndpointWeightsAndCapacities successfully', function(done) {
        //uncomment below and update the code to test updateEndpointWeightsAndCapacities
        //instance.updateEndpointWeightsAndCapacities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExperiment', function() {
      it('should call updateExperiment successfully', function(done) {
        //uncomment below and update the code to test updateExperiment
        //instance.updateExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFeatureGroup', function() {
      it('should call updateFeatureGroup successfully', function(done) {
        //uncomment below and update the code to test updateFeatureGroup
        //instance.updateFeatureGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFeatureMetadata', function() {
      it('should call updateFeatureMetadata successfully', function(done) {
        //uncomment below and update the code to test updateFeatureMetadata
        //instance.updateFeatureMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHub', function() {
      it('should call updateHub successfully', function(done) {
        //uncomment below and update the code to test updateHub
        //instance.updateHub(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateImage', function() {
      it('should call updateImage successfully', function(done) {
        //uncomment below and update the code to test updateImage
        //instance.updateImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateImageVersion', function() {
      it('should call updateImageVersion successfully', function(done) {
        //uncomment below and update the code to test updateImageVersion
        //instance.updateImageVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInferenceExperiment', function() {
      it('should call updateInferenceExperiment successfully', function(done) {
        //uncomment below and update the code to test updateInferenceExperiment
        //instance.updateInferenceExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelCard', function() {
      it('should call updateModelCard successfully', function(done) {
        //uncomment below and update the code to test updateModelCard
        //instance.updateModelCard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateModelPackage', function() {
      it('should call updateModelPackage successfully', function(done) {
        //uncomment below and update the code to test updateModelPackage
        //instance.updateModelPackage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMonitoringAlert', function() {
      it('should call updateMonitoringAlert successfully', function(done) {
        //uncomment below and update the code to test updateMonitoringAlert
        //instance.updateMonitoringAlert(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMonitoringSchedule', function() {
      it('should call updateMonitoringSchedule successfully', function(done) {
        //uncomment below and update the code to test updateMonitoringSchedule
        //instance.updateMonitoringSchedule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotebookInstance', function() {
      it('should call updateNotebookInstance successfully', function(done) {
        //uncomment below and update the code to test updateNotebookInstance
        //instance.updateNotebookInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotebookInstanceLifecycleConfig', function() {
      it('should call updateNotebookInstanceLifecycleConfig successfully', function(done) {
        //uncomment below and update the code to test updateNotebookInstanceLifecycleConfig
        //instance.updateNotebookInstanceLifecycleConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePipeline', function() {
      it('should call updatePipeline successfully', function(done) {
        //uncomment below and update the code to test updatePipeline
        //instance.updatePipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePipelineExecution', function() {
      it('should call updatePipelineExecution successfully', function(done) {
        //uncomment below and update the code to test updatePipelineExecution
        //instance.updatePipelineExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProject', function() {
      it('should call updateProject successfully', function(done) {
        //uncomment below and update the code to test updateProject
        //instance.updateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpace', function() {
      it('should call updateSpace successfully', function(done) {
        //uncomment below and update the code to test updateSpace
        //instance.updateSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTrainingJob', function() {
      it('should call updateTrainingJob successfully', function(done) {
        //uncomment below and update the code to test updateTrainingJob
        //instance.updateTrainingJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTrial', function() {
      it('should call updateTrial successfully', function(done) {
        //uncomment below and update the code to test updateTrial
        //instance.updateTrial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTrialComponent', function() {
      it('should call updateTrialComponent successfully', function(done) {
        //uncomment below and update the code to test updateTrialComponent
        //instance.updateTrialComponent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserProfile', function() {
      it('should call updateUserProfile successfully', function(done) {
        //uncomment below and update the code to test updateUserProfile
        //instance.updateUserProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWorkforce', function() {
      it('should call updateWorkforce successfully', function(done) {
        //uncomment below and update the code to test updateWorkforce
        //instance.updateWorkforce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWorkteam', function() {
      it('should call updateWorkteam successfully', function(done) {
        //uncomment below and update the code to test updateWorkteam
        //instance.updateWorkteam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
