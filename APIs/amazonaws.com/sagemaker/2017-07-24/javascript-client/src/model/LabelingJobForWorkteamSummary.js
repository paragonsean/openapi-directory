/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LabelingJobForWorkteamSummaryLabelCounters from './LabelingJobForWorkteamSummaryLabelCounters';

/**
 * The LabelingJobForWorkteamSummary model module.
 * @module model/LabelingJobForWorkteamSummary
 * @version 2017-07-24
 */
class LabelingJobForWorkteamSummary {
    /**
     * Constructs a new <code>LabelingJobForWorkteamSummary</code>.
     * Provides summary information for a work team.
     * @alias module:model/LabelingJobForWorkteamSummary
     * @param jobReferenceCode {String} 
     * @param workRequesterAccountId {String} 
     * @param creationTime {Date} 
     */
    constructor(jobReferenceCode, workRequesterAccountId, creationTime) { 
        
        LabelingJobForWorkteamSummary.initialize(this, jobReferenceCode, workRequesterAccountId, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobReferenceCode, workRequesterAccountId, creationTime) { 
        obj['JobReferenceCode'] = jobReferenceCode;
        obj['WorkRequesterAccountId'] = workRequesterAccountId;
        obj['CreationTime'] = creationTime;
    }

    /**
     * Constructs a <code>LabelingJobForWorkteamSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LabelingJobForWorkteamSummary} obj Optional instance to populate.
     * @return {module:model/LabelingJobForWorkteamSummary} The populated <code>LabelingJobForWorkteamSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LabelingJobForWorkteamSummary();

            if (data.hasOwnProperty('LabelingJobName')) {
                obj['LabelingJobName'] = ApiClient.convertToType(data['LabelingJobName'], 'String');
            }
            if (data.hasOwnProperty('JobReferenceCode')) {
                obj['JobReferenceCode'] = ApiClient.convertToType(data['JobReferenceCode'], 'String');
            }
            if (data.hasOwnProperty('WorkRequesterAccountId')) {
                obj['WorkRequesterAccountId'] = ApiClient.convertToType(data['WorkRequesterAccountId'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LabelCounters')) {
                obj['LabelCounters'] = LabelingJobForWorkteamSummaryLabelCounters.constructFromObject(data['LabelCounters']);
            }
            if (data.hasOwnProperty('NumberOfHumanWorkersPerDataObject')) {
                obj['NumberOfHumanWorkersPerDataObject'] = ApiClient.convertToType(data['NumberOfHumanWorkersPerDataObject'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LabelingJobForWorkteamSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LabelingJobForWorkteamSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LabelingJobForWorkteamSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LabelingJobName`
        if (data['LabelingJobName']) { // data not null
          String.validateJSON(data['LabelingJobName']);
        }
        // validate the optional field `JobReferenceCode`
        if (data['JobReferenceCode']) { // data not null
          String.validateJSON(data['JobReferenceCode']);
        }
        // validate the optional field `WorkRequesterAccountId`
        if (data['WorkRequesterAccountId']) { // data not null
          String.validateJSON(data['WorkRequesterAccountId']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LabelCounters`
        if (data['LabelCounters']) { // data not null
          LabelingJobForWorkteamSummaryLabelCounters.validateJSON(data['LabelCounters']);
        }
        // validate the optional field `NumberOfHumanWorkersPerDataObject`
        if (data['NumberOfHumanWorkersPerDataObject']) { // data not null
          Number.validateJSON(data['NumberOfHumanWorkersPerDataObject']);
        }

        return true;
    }


}

LabelingJobForWorkteamSummary.RequiredProperties = ["JobReferenceCode", "WorkRequesterAccountId", "CreationTime"];

/**
 * @member {String} LabelingJobName
 */
LabelingJobForWorkteamSummary.prototype['LabelingJobName'] = undefined;

/**
 * @member {String} JobReferenceCode
 */
LabelingJobForWorkteamSummary.prototype['JobReferenceCode'] = undefined;

/**
 * @member {String} WorkRequesterAccountId
 */
LabelingJobForWorkteamSummary.prototype['WorkRequesterAccountId'] = undefined;

/**
 * @member {Date} CreationTime
 */
LabelingJobForWorkteamSummary.prototype['CreationTime'] = undefined;

/**
 * @member {module:model/LabelingJobForWorkteamSummaryLabelCounters} LabelCounters
 */
LabelingJobForWorkteamSummary.prototype['LabelCounters'] = undefined;

/**
 * @member {Number} NumberOfHumanWorkersPerDataObject
 */
LabelingJobForWorkteamSummary.prototype['NumberOfHumanWorkersPerDataObject'] = undefined;






export default LabelingJobForWorkteamSummary;

