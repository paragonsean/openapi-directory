/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransformJobStatus from './TransformJobStatus';

/**
 * The TransformJobSummary model module.
 * @module model/TransformJobSummary
 * @version 2017-07-24
 */
class TransformJobSummary {
    /**
     * Constructs a new <code>TransformJobSummary</code>.
     * Provides a summary of a transform job. Multiple &lt;code&gt;TransformJobSummary&lt;/code&gt; objects are returned as a list after in response to a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListTransformJobs.html\&quot;&gt;ListTransformJobs&lt;/a&gt; call.
     * @alias module:model/TransformJobSummary
     * @param transformJobName {String} 
     * @param transformJobArn {String} 
     * @param creationTime {Date} 
     * @param transformJobStatus {module:model/TransformJobStatus} 
     */
    constructor(transformJobName, transformJobArn, creationTime, transformJobStatus) { 
        
        TransformJobSummary.initialize(this, transformJobName, transformJobArn, creationTime, transformJobStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transformJobName, transformJobArn, creationTime, transformJobStatus) { 
        obj['TransformJobName'] = transformJobName;
        obj['TransformJobArn'] = transformJobArn;
        obj['CreationTime'] = creationTime;
        obj['TransformJobStatus'] = transformJobStatus;
    }

    /**
     * Constructs a <code>TransformJobSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransformJobSummary} obj Optional instance to populate.
     * @return {module:model/TransformJobSummary} The populated <code>TransformJobSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransformJobSummary();

            if (data.hasOwnProperty('TransformJobName')) {
                obj['TransformJobName'] = ApiClient.convertToType(data['TransformJobName'], 'String');
            }
            if (data.hasOwnProperty('TransformJobArn')) {
                obj['TransformJobArn'] = ApiClient.convertToType(data['TransformJobArn'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('TransformEndTime')) {
                obj['TransformEndTime'] = ApiClient.convertToType(data['TransformEndTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('TransformJobStatus')) {
                obj['TransformJobStatus'] = ApiClient.convertToType(data['TransformJobStatus'], TransformJobStatus);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransformJobSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransformJobSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransformJobSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TransformJobName`
        if (data['TransformJobName']) { // data not null
          String.validateJSON(data['TransformJobName']);
        }
        // validate the optional field `TransformJobArn`
        if (data['TransformJobArn']) { // data not null
          String.validateJSON(data['TransformJobArn']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `TransformEndTime`
        if (data['TransformEndTime']) { // data not null
          Date.validateJSON(data['TransformEndTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `TransformJobStatus`
        if (data['TransformJobStatus']) { // data not null
          TransformJobStatus.validateJSON(data['TransformJobStatus']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }

        return true;
    }


}

TransformJobSummary.RequiredProperties = ["TransformJobName", "TransformJobArn", "CreationTime", "TransformJobStatus"];

/**
 * @member {String} TransformJobName
 */
TransformJobSummary.prototype['TransformJobName'] = undefined;

/**
 * @member {String} TransformJobArn
 */
TransformJobSummary.prototype['TransformJobArn'] = undefined;

/**
 * @member {Date} CreationTime
 */
TransformJobSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} TransformEndTime
 */
TransformJobSummary.prototype['TransformEndTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
TransformJobSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/TransformJobStatus} TransformJobStatus
 */
TransformJobSummary.prototype['TransformJobStatus'] = undefined;

/**
 * @member {String} FailureReason
 */
TransformJobSummary.prototype['FailureReason'] = undefined;






export default TransformJobSummary;

