/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrialComponentMetricSummary model module.
 * @module model/TrialComponentMetricSummary
 * @version 2017-07-24
 */
class TrialComponentMetricSummary {
    /**
     * Constructs a new <code>TrialComponentMetricSummary</code>.
     * A summary of the metrics of a trial component.
     * @alias module:model/TrialComponentMetricSummary
     */
    constructor() { 
        
        TrialComponentMetricSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrialComponentMetricSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrialComponentMetricSummary} obj Optional instance to populate.
     * @return {module:model/TrialComponentMetricSummary} The populated <code>TrialComponentMetricSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrialComponentMetricSummary();

            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], 'String');
            }
            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
            if (data.hasOwnProperty('TimeStamp')) {
                obj['TimeStamp'] = ApiClient.convertToType(data['TimeStamp'], 'Date');
            }
            if (data.hasOwnProperty('Max')) {
                obj['Max'] = ApiClient.convertToType(data['Max'], 'Number');
            }
            if (data.hasOwnProperty('Min')) {
                obj['Min'] = ApiClient.convertToType(data['Min'], 'Number');
            }
            if (data.hasOwnProperty('Last')) {
                obj['Last'] = ApiClient.convertToType(data['Last'], 'Number');
            }
            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('Avg')) {
                obj['Avg'] = ApiClient.convertToType(data['Avg'], 'Number');
            }
            if (data.hasOwnProperty('StdDev')) {
                obj['StdDev'] = ApiClient.convertToType(data['StdDev'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrialComponentMetricSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrialComponentMetricSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          String.validateJSON(data['MetricName']);
        }
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }
        // validate the optional field `TimeStamp`
        if (data['TimeStamp']) { // data not null
          Date.validateJSON(data['TimeStamp']);
        }
        // validate the optional field `Max`
        if (data['Max']) { // data not null
          Number.validateJSON(data['Max']);
        }
        // validate the optional field `Min`
        if (data['Min']) { // data not null
          Number.validateJSON(data['Min']);
        }
        // validate the optional field `Last`
        if (data['Last']) { // data not null
          Number.validateJSON(data['Last']);
        }
        // validate the optional field `Count`
        if (data['Count']) { // data not null
          Number.validateJSON(data['Count']);
        }
        // validate the optional field `Avg`
        if (data['Avg']) { // data not null
          Number.validateJSON(data['Avg']);
        }
        // validate the optional field `StdDev`
        if (data['StdDev']) { // data not null
          Number.validateJSON(data['StdDev']);
        }

        return true;
    }


}



/**
 * @member {String} MetricName
 */
TrialComponentMetricSummary.prototype['MetricName'] = undefined;

/**
 * @member {String} SourceArn
 */
TrialComponentMetricSummary.prototype['SourceArn'] = undefined;

/**
 * @member {Date} TimeStamp
 */
TrialComponentMetricSummary.prototype['TimeStamp'] = undefined;

/**
 * @member {Number} Max
 */
TrialComponentMetricSummary.prototype['Max'] = undefined;

/**
 * @member {Number} Min
 */
TrialComponentMetricSummary.prototype['Min'] = undefined;

/**
 * @member {Number} Last
 */
TrialComponentMetricSummary.prototype['Last'] = undefined;

/**
 * @member {Number} Count
 */
TrialComponentMetricSummary.prototype['Count'] = undefined;

/**
 * @member {Number} Avg
 */
TrialComponentMetricSummary.prototype['Avg'] = undefined;

/**
 * @member {Number} StdDev
 */
TrialComponentMetricSummary.prototype['StdDev'] = undefined;






export default TrialComponentMetricSummary;

