/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DebugHookConfig model module.
 * @module model/DebugHookConfig
 * @version 2017-07-24
 */
class DebugHookConfig {
    /**
     * Constructs a new <code>DebugHookConfig</code>.
     * Configuration information for the Amazon SageMaker Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the &lt;code&gt;DebugHookConfig&lt;/code&gt; parameter, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html\&quot;&gt;Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job&lt;/a&gt;.
     * @alias module:model/DebugHookConfig
     * @param s3OutputPath {String} 
     */
    constructor(s3OutputPath) { 
        
        DebugHookConfig.initialize(this, s3OutputPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3OutputPath) { 
        obj['S3OutputPath'] = s3OutputPath;
    }

    /**
     * Constructs a <code>DebugHookConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DebugHookConfig} obj Optional instance to populate.
     * @return {module:model/DebugHookConfig} The populated <code>DebugHookConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DebugHookConfig();

            if (data.hasOwnProperty('LocalPath')) {
                obj['LocalPath'] = ApiClient.convertToType(data['LocalPath'], 'String');
            }
            if (data.hasOwnProperty('S3OutputPath')) {
                obj['S3OutputPath'] = ApiClient.convertToType(data['S3OutputPath'], 'String');
            }
            if (data.hasOwnProperty('HookParameters')) {
                obj['HookParameters'] = ApiClient.convertToType(data['HookParameters'], Object);
            }
            if (data.hasOwnProperty('CollectionConfigurations')) {
                obj['CollectionConfigurations'] = ApiClient.convertToType(data['CollectionConfigurations'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DebugHookConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DebugHookConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DebugHookConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `LocalPath`
        if (data['LocalPath']) { // data not null
          String.validateJSON(data['LocalPath']);
        }
        // validate the optional field `S3OutputPath`
        if (data['S3OutputPath']) { // data not null
          String.validateJSON(data['S3OutputPath']);
        }
        // validate the optional field `HookParameters`
        if (data['HookParameters']) { // data not null
          Object.validateJSON(data['HookParameters']);
        }
        // validate the optional field `CollectionConfigurations`
        if (data['CollectionConfigurations']) { // data not null
          Array.validateJSON(data['CollectionConfigurations']);
        }

        return true;
    }


}

DebugHookConfig.RequiredProperties = ["S3OutputPath"];

/**
 * @member {String} LocalPath
 */
DebugHookConfig.prototype['LocalPath'] = undefined;

/**
 * @member {String} S3OutputPath
 */
DebugHookConfig.prototype['S3OutputPath'] = undefined;

/**
 * @member {Object} HookParameters
 */
DebugHookConfig.prototype['HookParameters'] = undefined;

/**
 * @member {Array} CollectionConfigurations
 */
DebugHookConfig.prototype['CollectionConfigurations'] = undefined;






export default DebugHookConfig;

