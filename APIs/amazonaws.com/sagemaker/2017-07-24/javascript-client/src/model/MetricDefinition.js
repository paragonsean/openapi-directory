/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricDefinition model module.
 * @module model/MetricDefinition
 * @version 2017-07-24
 */
class MetricDefinition {
    /**
     * Constructs a new <code>MetricDefinition</code>.
     * Specifies a metric that the training algorithm writes to &lt;code&gt;stderr&lt;/code&gt; or &lt;code&gt;stdout&lt;/code&gt;. You can view these logs to understand how your training job performs and check for any errors encountered during training. SageMaker hyperparameter tuning captures all defined metrics. Specify one of the defined metrics to use as an objective metric using the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html#sagemaker-Type-HyperParameterTrainingJobDefinition-TuningObjective\&quot;&gt;TuningObjective&lt;/a&gt; parameter in the &lt;code&gt;HyperParameterTrainingJobDefinition&lt;/code&gt; API to evaluate job performance during hyperparameter tuning.
     * @alias module:model/MetricDefinition
     * @param name {String} 
     * @param regex {String} 
     */
    constructor(name, regex) { 
        
        MetricDefinition.initialize(this, name, regex);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, regex) { 
        obj['Name'] = name;
        obj['Regex'] = regex;
    }

    /**
     * Constructs a <code>MetricDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricDefinition} obj Optional instance to populate.
     * @return {module:model/MetricDefinition} The populated <code>MetricDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricDefinition();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Regex')) {
                obj['Regex'] = ApiClient.convertToType(data['Regex'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetricDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Regex`
        if (data['Regex']) { // data not null
          String.validateJSON(data['Regex']);
        }

        return true;
    }


}

MetricDefinition.RequiredProperties = ["Name", "Regex"];

/**
 * @member {String} Name
 */
MetricDefinition.prototype['Name'] = undefined;

/**
 * @member {String} Regex
 */
MetricDefinition.prototype['Regex'] = undefined;






export default MetricDefinition;

