/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceCatalogProvisioningDetails from './ServiceCatalogProvisioningDetails';

/**
 * The CreateProjectInputServiceCatalogProvisioningDetails model module.
 * @module model/CreateProjectInputServiceCatalogProvisioningDetails
 * @version 2017-07-24
 */
class CreateProjectInputServiceCatalogProvisioningDetails {
    /**
     * Constructs a new <code>CreateProjectInputServiceCatalogProvisioningDetails</code>.
     * @alias module:model/CreateProjectInputServiceCatalogProvisioningDetails
     * @implements module:model/ServiceCatalogProvisioningDetails
     * @param productId {String} 
     */
    constructor(productId) { 
        ServiceCatalogProvisioningDetails.initialize(this, productId);
        CreateProjectInputServiceCatalogProvisioningDetails.initialize(this, productId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productId) { 
        obj['ProductId'] = productId;
    }

    /**
     * Constructs a <code>CreateProjectInputServiceCatalogProvisioningDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateProjectInputServiceCatalogProvisioningDetails} obj Optional instance to populate.
     * @return {module:model/CreateProjectInputServiceCatalogProvisioningDetails} The populated <code>CreateProjectInputServiceCatalogProvisioningDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateProjectInputServiceCatalogProvisioningDetails();
            ServiceCatalogProvisioningDetails.constructFromObject(data, obj);

            if (data.hasOwnProperty('ProductId')) {
                obj['ProductId'] = ApiClient.convertToType(data['ProductId'], 'String');
            }
            if (data.hasOwnProperty('ProvisioningArtifactId')) {
                obj['ProvisioningArtifactId'] = ApiClient.convertToType(data['ProvisioningArtifactId'], 'String');
            }
            if (data.hasOwnProperty('PathId')) {
                obj['PathId'] = ApiClient.convertToType(data['PathId'], 'String');
            }
            if (data.hasOwnProperty('ProvisioningParameters')) {
                obj['ProvisioningParameters'] = ApiClient.convertToType(data['ProvisioningParameters'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateProjectInputServiceCatalogProvisioningDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateProjectInputServiceCatalogProvisioningDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateProjectInputServiceCatalogProvisioningDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProductId`
        if (data['ProductId']) { // data not null
          String.validateJSON(data['ProductId']);
        }
        // validate the optional field `ProvisioningArtifactId`
        if (data['ProvisioningArtifactId']) { // data not null
          String.validateJSON(data['ProvisioningArtifactId']);
        }
        // validate the optional field `PathId`
        if (data['PathId']) { // data not null
          String.validateJSON(data['PathId']);
        }
        // validate the optional field `ProvisioningParameters`
        if (data['ProvisioningParameters']) { // data not null
          Array.validateJSON(data['ProvisioningParameters']);
        }

        return true;
    }


}

CreateProjectInputServiceCatalogProvisioningDetails.RequiredProperties = ["ProductId"];

/**
 * @member {String} ProductId
 */
CreateProjectInputServiceCatalogProvisioningDetails.prototype['ProductId'] = undefined;

/**
 * @member {String} ProvisioningArtifactId
 */
CreateProjectInputServiceCatalogProvisioningDetails.prototype['ProvisioningArtifactId'] = undefined;

/**
 * @member {String} PathId
 */
CreateProjectInputServiceCatalogProvisioningDetails.prototype['PathId'] = undefined;

/**
 * @member {Array} ProvisioningParameters
 */
CreateProjectInputServiceCatalogProvisioningDetails.prototype['ProvisioningParameters'] = undefined;


// Implement ServiceCatalogProvisioningDetails interface:
/**
 * @member {String} ProductId
 */
ServiceCatalogProvisioningDetails.prototype['ProductId'] = undefined;
/**
 * @member {String} ProvisioningArtifactId
 */
ServiceCatalogProvisioningDetails.prototype['ProvisioningArtifactId'] = undefined;
/**
 * @member {String} PathId
 */
ServiceCatalogProvisioningDetails.prototype['PathId'] = undefined;
/**
 * @member {Array} ProvisioningParameters
 */
ServiceCatalogProvisioningDetails.prototype['ProvisioningParameters'] = undefined;




export default CreateProjectInputServiceCatalogProvisioningDetails;

