/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeProjectOutputServiceCatalogProvisionedProductDetails from './DescribeProjectOutputServiceCatalogProvisionedProductDetails';
import DescribeProjectOutputServiceCatalogProvisioningDetails from './DescribeProjectOutputServiceCatalogProvisioningDetails';
import ProjectStatus from './ProjectStatus';
import UserContext from './UserContext';

/**
 * The DescribeProjectOutput model module.
 * @module model/DescribeProjectOutput
 * @version 2017-07-24
 */
class DescribeProjectOutput {
    /**
     * Constructs a new <code>DescribeProjectOutput</code>.
     * @alias module:model/DescribeProjectOutput
     * @param projectArn {String} 
     * @param projectName {String} 
     * @param projectId {String} 
     * @param serviceCatalogProvisioningDetails {module:model/DescribeProjectOutputServiceCatalogProvisioningDetails} 
     * @param projectStatus {module:model/ProjectStatus} 
     * @param creationTime {Date} 
     */
    constructor(projectArn, projectName, projectId, serviceCatalogProvisioningDetails, projectStatus, creationTime) { 
        
        DescribeProjectOutput.initialize(this, projectArn, projectName, projectId, serviceCatalogProvisioningDetails, projectStatus, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectArn, projectName, projectId, serviceCatalogProvisioningDetails, projectStatus, creationTime) { 
        obj['ProjectArn'] = projectArn;
        obj['ProjectName'] = projectName;
        obj['ProjectId'] = projectId;
        obj['ServiceCatalogProvisioningDetails'] = serviceCatalogProvisioningDetails;
        obj['ProjectStatus'] = projectStatus;
        obj['CreationTime'] = creationTime;
    }

    /**
     * Constructs a <code>DescribeProjectOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeProjectOutput} obj Optional instance to populate.
     * @return {module:model/DescribeProjectOutput} The populated <code>DescribeProjectOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeProjectOutput();

            if (data.hasOwnProperty('ProjectArn')) {
                obj['ProjectArn'] = ApiClient.convertToType(data['ProjectArn'], 'String');
            }
            if (data.hasOwnProperty('ProjectName')) {
                obj['ProjectName'] = ApiClient.convertToType(data['ProjectName'], 'String');
            }
            if (data.hasOwnProperty('ProjectId')) {
                obj['ProjectId'] = ApiClient.convertToType(data['ProjectId'], 'String');
            }
            if (data.hasOwnProperty('ProjectDescription')) {
                obj['ProjectDescription'] = ApiClient.convertToType(data['ProjectDescription'], 'String');
            }
            if (data.hasOwnProperty('ServiceCatalogProvisioningDetails')) {
                obj['ServiceCatalogProvisioningDetails'] = DescribeProjectOutputServiceCatalogProvisioningDetails.constructFromObject(data['ServiceCatalogProvisioningDetails']);
            }
            if (data.hasOwnProperty('ServiceCatalogProvisionedProductDetails')) {
                obj['ServiceCatalogProvisionedProductDetails'] = DescribeProjectOutputServiceCatalogProvisionedProductDetails.constructFromObject(data['ServiceCatalogProvisionedProductDetails']);
            }
            if (data.hasOwnProperty('ProjectStatus')) {
                obj['ProjectStatus'] = ApiClient.convertToType(data['ProjectStatus'], ProjectStatus);
            }
            if (data.hasOwnProperty('CreatedBy')) {
                obj['CreatedBy'] = UserContext.constructFromObject(data['CreatedBy']);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedBy')) {
                obj['LastModifiedBy'] = UserContext.constructFromObject(data['LastModifiedBy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeProjectOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeProjectOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeProjectOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ProjectArn`
        if (data['ProjectArn']) { // data not null
          String.validateJSON(data['ProjectArn']);
        }
        // validate the optional field `ProjectName`
        if (data['ProjectName']) { // data not null
          String.validateJSON(data['ProjectName']);
        }
        // validate the optional field `ProjectId`
        if (data['ProjectId']) { // data not null
          String.validateJSON(data['ProjectId']);
        }
        // validate the optional field `ProjectDescription`
        if (data['ProjectDescription']) { // data not null
          String.validateJSON(data['ProjectDescription']);
        }
        // validate the optional field `ServiceCatalogProvisioningDetails`
        if (data['ServiceCatalogProvisioningDetails']) { // data not null
          DescribeProjectOutputServiceCatalogProvisioningDetails.validateJSON(data['ServiceCatalogProvisioningDetails']);
        }
        // validate the optional field `ServiceCatalogProvisionedProductDetails`
        if (data['ServiceCatalogProvisionedProductDetails']) { // data not null
          DescribeProjectOutputServiceCatalogProvisionedProductDetails.validateJSON(data['ServiceCatalogProvisionedProductDetails']);
        }
        // validate the optional field `ProjectStatus`
        if (data['ProjectStatus']) { // data not null
          ProjectStatus.validateJSON(data['ProjectStatus']);
        }
        // validate the optional field `CreatedBy`
        if (data['CreatedBy']) { // data not null
          UserContext.validateJSON(data['CreatedBy']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `LastModifiedBy`
        if (data['LastModifiedBy']) { // data not null
          UserContext.validateJSON(data['LastModifiedBy']);
        }

        return true;
    }


}

DescribeProjectOutput.RequiredProperties = ["ProjectArn", "ProjectName", "ProjectId", "ServiceCatalogProvisioningDetails", "ProjectStatus", "CreationTime"];

/**
 * @member {String} ProjectArn
 */
DescribeProjectOutput.prototype['ProjectArn'] = undefined;

/**
 * @member {String} ProjectName
 */
DescribeProjectOutput.prototype['ProjectName'] = undefined;

/**
 * @member {String} ProjectId
 */
DescribeProjectOutput.prototype['ProjectId'] = undefined;

/**
 * @member {String} ProjectDescription
 */
DescribeProjectOutput.prototype['ProjectDescription'] = undefined;

/**
 * @member {module:model/DescribeProjectOutputServiceCatalogProvisioningDetails} ServiceCatalogProvisioningDetails
 */
DescribeProjectOutput.prototype['ServiceCatalogProvisioningDetails'] = undefined;

/**
 * @member {module:model/DescribeProjectOutputServiceCatalogProvisionedProductDetails} ServiceCatalogProvisionedProductDetails
 */
DescribeProjectOutput.prototype['ServiceCatalogProvisionedProductDetails'] = undefined;

/**
 * @member {module:model/ProjectStatus} ProjectStatus
 */
DescribeProjectOutput.prototype['ProjectStatus'] = undefined;

/**
 * @member {module:model/UserContext} CreatedBy
 */
DescribeProjectOutput.prototype['CreatedBy'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeProjectOutput.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
DescribeProjectOutput.prototype['LastModifiedTime'] = undefined;

/**
 * @member {module:model/UserContext} LastModifiedBy
 */
DescribeProjectOutput.prototype['LastModifiedBy'] = undefined;






export default DescribeProjectOutput;

