/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoMLMetricEnum from './AutoMLMetricEnum';
import AutoMLMetricExtendedEnum from './AutoMLMetricExtendedEnum';
import MetricSetSource from './MetricSetSource';

/**
 * The MetricDatum model module.
 * @module model/MetricDatum
 * @version 2017-07-24
 */
class MetricDatum {
    /**
     * Constructs a new <code>MetricDatum</code>.
     * Information about the metric for a candidate produced by an AutoML job.
     * @alias module:model/MetricDatum
     */
    constructor() { 
        
        MetricDatum.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetricDatum</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricDatum} obj Optional instance to populate.
     * @return {module:model/MetricDatum} The populated <code>MetricDatum</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricDatum();

            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], AutoMLMetricEnum);
            }
            if (data.hasOwnProperty('Value')) {
                obj['Value'] = ApiClient.convertToType(data['Value'], 'Number');
            }
            if (data.hasOwnProperty('Set')) {
                obj['Set'] = ApiClient.convertToType(data['Set'], MetricSetSource);
            }
            if (data.hasOwnProperty('StandardMetricName')) {
                obj['StandardMetricName'] = ApiClient.convertToType(data['StandardMetricName'], AutoMLMetricExtendedEnum);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricDatum</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricDatum</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          AutoMLMetricEnum.validateJSON(data['MetricName']);
        }
        // validate the optional field `Value`
        if (data['Value']) { // data not null
          Number.validateJSON(data['Value']);
        }
        // validate the optional field `Set`
        if (data['Set']) { // data not null
          MetricSetSource.validateJSON(data['Set']);
        }
        // validate the optional field `StandardMetricName`
        if (data['StandardMetricName']) { // data not null
          AutoMLMetricExtendedEnum.validateJSON(data['StandardMetricName']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoMLMetricEnum} MetricName
 */
MetricDatum.prototype['MetricName'] = undefined;

/**
 * @member {Number} Value
 */
MetricDatum.prototype['Value'] = undefined;

/**
 * @member {module:model/MetricSetSource} Set
 */
MetricDatum.prototype['Set'] = undefined;

/**
 * @member {module:model/AutoMLMetricExtendedEnum} StandardMetricName
 */
MetricDatum.prototype['StandardMetricName'] = undefined;






export default MetricDatum;

