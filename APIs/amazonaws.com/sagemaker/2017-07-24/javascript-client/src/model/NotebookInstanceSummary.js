/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceType from './InstanceType';
import NotebookInstanceStatus from './NotebookInstanceStatus';

/**
 * The NotebookInstanceSummary model module.
 * @module model/NotebookInstanceSummary
 * @version 2017-07-24
 */
class NotebookInstanceSummary {
    /**
     * Constructs a new <code>NotebookInstanceSummary</code>.
     * Provides summary information for an SageMaker notebook instance.
     * @alias module:model/NotebookInstanceSummary
     * @param notebookInstanceName {String} 
     * @param notebookInstanceArn {String} 
     */
    constructor(notebookInstanceName, notebookInstanceArn) { 
        
        NotebookInstanceSummary.initialize(this, notebookInstanceName, notebookInstanceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, notebookInstanceName, notebookInstanceArn) { 
        obj['NotebookInstanceName'] = notebookInstanceName;
        obj['NotebookInstanceArn'] = notebookInstanceArn;
    }

    /**
     * Constructs a <code>NotebookInstanceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotebookInstanceSummary} obj Optional instance to populate.
     * @return {module:model/NotebookInstanceSummary} The populated <code>NotebookInstanceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotebookInstanceSummary();

            if (data.hasOwnProperty('NotebookInstanceName')) {
                obj['NotebookInstanceName'] = ApiClient.convertToType(data['NotebookInstanceName'], 'String');
            }
            if (data.hasOwnProperty('NotebookInstanceArn')) {
                obj['NotebookInstanceArn'] = ApiClient.convertToType(data['NotebookInstanceArn'], 'String');
            }
            if (data.hasOwnProperty('NotebookInstanceStatus')) {
                obj['NotebookInstanceStatus'] = ApiClient.convertToType(data['NotebookInstanceStatus'], NotebookInstanceStatus);
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], InstanceType);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('NotebookInstanceLifecycleConfigName')) {
                obj['NotebookInstanceLifecycleConfigName'] = ApiClient.convertToType(data['NotebookInstanceLifecycleConfigName'], 'String');
            }
            if (data.hasOwnProperty('DefaultCodeRepository')) {
                obj['DefaultCodeRepository'] = ApiClient.convertToType(data['DefaultCodeRepository'], 'String');
            }
            if (data.hasOwnProperty('AdditionalCodeRepositories')) {
                obj['AdditionalCodeRepositories'] = ApiClient.convertToType(data['AdditionalCodeRepositories'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotebookInstanceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotebookInstanceSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotebookInstanceSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `NotebookInstanceName`
        if (data['NotebookInstanceName']) { // data not null
          String.validateJSON(data['NotebookInstanceName']);
        }
        // validate the optional field `NotebookInstanceArn`
        if (data['NotebookInstanceArn']) { // data not null
          String.validateJSON(data['NotebookInstanceArn']);
        }
        // validate the optional field `NotebookInstanceStatus`
        if (data['NotebookInstanceStatus']) { // data not null
          NotebookInstanceStatus.validateJSON(data['NotebookInstanceStatus']);
        }
        // validate the optional field `Url`
        if (data['Url']) { // data not null
          String.validateJSON(data['Url']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          InstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `NotebookInstanceLifecycleConfigName`
        if (data['NotebookInstanceLifecycleConfigName']) { // data not null
          String.validateJSON(data['NotebookInstanceLifecycleConfigName']);
        }
        // validate the optional field `DefaultCodeRepository`
        if (data['DefaultCodeRepository']) { // data not null
          String.validateJSON(data['DefaultCodeRepository']);
        }
        // validate the optional field `AdditionalCodeRepositories`
        if (data['AdditionalCodeRepositories']) { // data not null
          Array.validateJSON(data['AdditionalCodeRepositories']);
        }

        return true;
    }


}

NotebookInstanceSummary.RequiredProperties = ["NotebookInstanceName", "NotebookInstanceArn"];

/**
 * @member {String} NotebookInstanceName
 */
NotebookInstanceSummary.prototype['NotebookInstanceName'] = undefined;

/**
 * @member {String} NotebookInstanceArn
 */
NotebookInstanceSummary.prototype['NotebookInstanceArn'] = undefined;

/**
 * @member {module:model/NotebookInstanceStatus} NotebookInstanceStatus
 */
NotebookInstanceSummary.prototype['NotebookInstanceStatus'] = undefined;

/**
 * @member {String} Url
 */
NotebookInstanceSummary.prototype['Url'] = undefined;

/**
 * @member {module:model/InstanceType} InstanceType
 */
NotebookInstanceSummary.prototype['InstanceType'] = undefined;

/**
 * @member {Date} CreationTime
 */
NotebookInstanceSummary.prototype['CreationTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
NotebookInstanceSummary.prototype['LastModifiedTime'] = undefined;

/**
 * @member {String} NotebookInstanceLifecycleConfigName
 */
NotebookInstanceSummary.prototype['NotebookInstanceLifecycleConfigName'] = undefined;

/**
 * @member {String} DefaultCodeRepository
 */
NotebookInstanceSummary.prototype['DefaultCodeRepository'] = undefined;

/**
 * @member {Array} AdditionalCodeRepositories
 */
NotebookInstanceSummary.prototype['AdditionalCodeRepositories'] = undefined;






export default NotebookInstanceSummary;

