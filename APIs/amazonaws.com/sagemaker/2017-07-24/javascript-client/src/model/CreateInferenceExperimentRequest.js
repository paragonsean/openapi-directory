/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateInferenceExperimentRequestDataStorageConfig from './CreateInferenceExperimentRequestDataStorageConfig';
import CreateInferenceExperimentRequestSchedule from './CreateInferenceExperimentRequestSchedule';
import CreateInferenceExperimentRequestShadowModeConfig from './CreateInferenceExperimentRequestShadowModeConfig';
import InferenceExperimentType from './InferenceExperimentType';

/**
 * The CreateInferenceExperimentRequest model module.
 * @module model/CreateInferenceExperimentRequest
 * @version 2017-07-24
 */
class CreateInferenceExperimentRequest {
    /**
     * Constructs a new <code>CreateInferenceExperimentRequest</code>.
     * @alias module:model/CreateInferenceExperimentRequest
     * @param name {String} 
     * @param type {module:model/InferenceExperimentType} 
     * @param roleArn {String} 
     * @param endpointName {String} 
     * @param modelVariants {Array} 
     * @param shadowModeConfig {module:model/CreateInferenceExperimentRequestShadowModeConfig} 
     */
    constructor(name, type, roleArn, endpointName, modelVariants, shadowModeConfig) { 
        
        CreateInferenceExperimentRequest.initialize(this, name, type, roleArn, endpointName, modelVariants, shadowModeConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type, roleArn, endpointName, modelVariants, shadowModeConfig) { 
        obj['Name'] = name;
        obj['Type'] = type;
        obj['RoleArn'] = roleArn;
        obj['EndpointName'] = endpointName;
        obj['ModelVariants'] = modelVariants;
        obj['ShadowModeConfig'] = shadowModeConfig;
    }

    /**
     * Constructs a <code>CreateInferenceExperimentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateInferenceExperimentRequest} obj Optional instance to populate.
     * @return {module:model/CreateInferenceExperimentRequest} The populated <code>CreateInferenceExperimentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateInferenceExperimentRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], InferenceExperimentType);
            }
            if (data.hasOwnProperty('Schedule')) {
                obj['Schedule'] = CreateInferenceExperimentRequestSchedule.constructFromObject(data['Schedule']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('EndpointName')) {
                obj['EndpointName'] = ApiClient.convertToType(data['EndpointName'], 'String');
            }
            if (data.hasOwnProperty('ModelVariants')) {
                obj['ModelVariants'] = ApiClient.convertToType(data['ModelVariants'], Array);
            }
            if (data.hasOwnProperty('DataStorageConfig')) {
                obj['DataStorageConfig'] = CreateInferenceExperimentRequestDataStorageConfig.constructFromObject(data['DataStorageConfig']);
            }
            if (data.hasOwnProperty('ShadowModeConfig')) {
                obj['ShadowModeConfig'] = CreateInferenceExperimentRequestShadowModeConfig.constructFromObject(data['ShadowModeConfig']);
            }
            if (data.hasOwnProperty('KmsKey')) {
                obj['KmsKey'] = ApiClient.convertToType(data['KmsKey'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateInferenceExperimentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateInferenceExperimentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateInferenceExperimentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          InferenceExperimentType.validateJSON(data['Type']);
        }
        // validate the optional field `Schedule`
        if (data['Schedule']) { // data not null
          CreateInferenceExperimentRequestSchedule.validateJSON(data['Schedule']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `EndpointName`
        if (data['EndpointName']) { // data not null
          String.validateJSON(data['EndpointName']);
        }
        // validate the optional field `ModelVariants`
        if (data['ModelVariants']) { // data not null
          Array.validateJSON(data['ModelVariants']);
        }
        // validate the optional field `DataStorageConfig`
        if (data['DataStorageConfig']) { // data not null
          CreateInferenceExperimentRequestDataStorageConfig.validateJSON(data['DataStorageConfig']);
        }
        // validate the optional field `ShadowModeConfig`
        if (data['ShadowModeConfig']) { // data not null
          CreateInferenceExperimentRequestShadowModeConfig.validateJSON(data['ShadowModeConfig']);
        }
        // validate the optional field `KmsKey`
        if (data['KmsKey']) { // data not null
          String.validateJSON(data['KmsKey']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateInferenceExperimentRequest.RequiredProperties = ["Name", "Type", "RoleArn", "EndpointName", "ModelVariants", "ShadowModeConfig"];

/**
 * @member {String} Name
 */
CreateInferenceExperimentRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/InferenceExperimentType} Type
 */
CreateInferenceExperimentRequest.prototype['Type'] = undefined;

/**
 * @member {module:model/CreateInferenceExperimentRequestSchedule} Schedule
 */
CreateInferenceExperimentRequest.prototype['Schedule'] = undefined;

/**
 * @member {String} Description
 */
CreateInferenceExperimentRequest.prototype['Description'] = undefined;

/**
 * @member {String} RoleArn
 */
CreateInferenceExperimentRequest.prototype['RoleArn'] = undefined;

/**
 * @member {String} EndpointName
 */
CreateInferenceExperimentRequest.prototype['EndpointName'] = undefined;

/**
 * @member {Array} ModelVariants
 */
CreateInferenceExperimentRequest.prototype['ModelVariants'] = undefined;

/**
 * @member {module:model/CreateInferenceExperimentRequestDataStorageConfig} DataStorageConfig
 */
CreateInferenceExperimentRequest.prototype['DataStorageConfig'] = undefined;

/**
 * @member {module:model/CreateInferenceExperimentRequestShadowModeConfig} ShadowModeConfig
 */
CreateInferenceExperimentRequest.prototype['ShadowModeConfig'] = undefined;

/**
 * @member {String} KmsKey
 */
CreateInferenceExperimentRequest.prototype['KmsKey'] = undefined;

/**
 * @member {Array} Tags
 */
CreateInferenceExperimentRequest.prototype['Tags'] = undefined;






export default CreateInferenceExperimentRequest;

