/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeInferenceRecommendationsJobResponseInputConfig from './DescribeInferenceRecommendationsJobResponseInputConfig';
import DescribeInferenceRecommendationsJobResponseStoppingConditions from './DescribeInferenceRecommendationsJobResponseStoppingConditions';
import RecommendationJobStatus from './RecommendationJobStatus';
import RecommendationJobType from './RecommendationJobType';

/**
 * The DescribeInferenceRecommendationsJobResponse model module.
 * @module model/DescribeInferenceRecommendationsJobResponse
 * @version 2017-07-24
 */
class DescribeInferenceRecommendationsJobResponse {
    /**
     * Constructs a new <code>DescribeInferenceRecommendationsJobResponse</code>.
     * @alias module:model/DescribeInferenceRecommendationsJobResponse
     * @param jobName {String} 
     * @param jobType {module:model/RecommendationJobType} 
     * @param jobArn {String} 
     * @param roleArn {String} 
     * @param status {module:model/RecommendationJobStatus} 
     * @param creationTime {Date} 
     * @param lastModifiedTime {Date} 
     * @param inputConfig {module:model/DescribeInferenceRecommendationsJobResponseInputConfig} 
     */
    constructor(jobName, jobType, jobArn, roleArn, status, creationTime, lastModifiedTime, inputConfig) { 
        
        DescribeInferenceRecommendationsJobResponse.initialize(this, jobName, jobType, jobArn, roleArn, status, creationTime, lastModifiedTime, inputConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobName, jobType, jobArn, roleArn, status, creationTime, lastModifiedTime, inputConfig) { 
        obj['JobName'] = jobName;
        obj['JobType'] = jobType;
        obj['JobArn'] = jobArn;
        obj['RoleArn'] = roleArn;
        obj['Status'] = status;
        obj['CreationTime'] = creationTime;
        obj['LastModifiedTime'] = lastModifiedTime;
        obj['InputConfig'] = inputConfig;
    }

    /**
     * Constructs a <code>DescribeInferenceRecommendationsJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeInferenceRecommendationsJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeInferenceRecommendationsJobResponse} The populated <code>DescribeInferenceRecommendationsJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeInferenceRecommendationsJobResponse();

            if (data.hasOwnProperty('JobName')) {
                obj['JobName'] = ApiClient.convertToType(data['JobName'], 'String');
            }
            if (data.hasOwnProperty('JobDescription')) {
                obj['JobDescription'] = ApiClient.convertToType(data['JobDescription'], 'String');
            }
            if (data.hasOwnProperty('JobType')) {
                obj['JobType'] = ApiClient.convertToType(data['JobType'], RecommendationJobType);
            }
            if (data.hasOwnProperty('JobArn')) {
                obj['JobArn'] = ApiClient.convertToType(data['JobArn'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], RecommendationJobStatus);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('CompletionTime')) {
                obj['CompletionTime'] = ApiClient.convertToType(data['CompletionTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('InputConfig')) {
                obj['InputConfig'] = DescribeInferenceRecommendationsJobResponseInputConfig.constructFromObject(data['InputConfig']);
            }
            if (data.hasOwnProperty('StoppingConditions')) {
                obj['StoppingConditions'] = DescribeInferenceRecommendationsJobResponseStoppingConditions.constructFromObject(data['StoppingConditions']);
            }
            if (data.hasOwnProperty('InferenceRecommendations')) {
                obj['InferenceRecommendations'] = ApiClient.convertToType(data['InferenceRecommendations'], Array);
            }
            if (data.hasOwnProperty('EndpointPerformances')) {
                obj['EndpointPerformances'] = ApiClient.convertToType(data['EndpointPerformances'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeInferenceRecommendationsJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeInferenceRecommendationsJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeInferenceRecommendationsJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `JobName`
        if (data['JobName']) { // data not null
          String.validateJSON(data['JobName']);
        }
        // validate the optional field `JobDescription`
        if (data['JobDescription']) { // data not null
          String.validateJSON(data['JobDescription']);
        }
        // validate the optional field `JobType`
        if (data['JobType']) { // data not null
          RecommendationJobType.validateJSON(data['JobType']);
        }
        // validate the optional field `JobArn`
        if (data['JobArn']) { // data not null
          String.validateJSON(data['JobArn']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          RecommendationJobStatus.validateJSON(data['Status']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `CompletionTime`
        if (data['CompletionTime']) { // data not null
          Date.validateJSON(data['CompletionTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `InputConfig`
        if (data['InputConfig']) { // data not null
          DescribeInferenceRecommendationsJobResponseInputConfig.validateJSON(data['InputConfig']);
        }
        // validate the optional field `StoppingConditions`
        if (data['StoppingConditions']) { // data not null
          DescribeInferenceRecommendationsJobResponseStoppingConditions.validateJSON(data['StoppingConditions']);
        }
        // validate the optional field `InferenceRecommendations`
        if (data['InferenceRecommendations']) { // data not null
          Array.validateJSON(data['InferenceRecommendations']);
        }
        // validate the optional field `EndpointPerformances`
        if (data['EndpointPerformances']) { // data not null
          Array.validateJSON(data['EndpointPerformances']);
        }

        return true;
    }


}

DescribeInferenceRecommendationsJobResponse.RequiredProperties = ["JobName", "JobType", "JobArn", "RoleArn", "Status", "CreationTime", "LastModifiedTime", "InputConfig"];

/**
 * @member {String} JobName
 */
DescribeInferenceRecommendationsJobResponse.prototype['JobName'] = undefined;

/**
 * @member {String} JobDescription
 */
DescribeInferenceRecommendationsJobResponse.prototype['JobDescription'] = undefined;

/**
 * @member {module:model/RecommendationJobType} JobType
 */
DescribeInferenceRecommendationsJobResponse.prototype['JobType'] = undefined;

/**
 * @member {String} JobArn
 */
DescribeInferenceRecommendationsJobResponse.prototype['JobArn'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeInferenceRecommendationsJobResponse.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/RecommendationJobStatus} Status
 */
DescribeInferenceRecommendationsJobResponse.prototype['Status'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeInferenceRecommendationsJobResponse.prototype['CreationTime'] = undefined;

/**
 * @member {Date} CompletionTime
 */
DescribeInferenceRecommendationsJobResponse.prototype['CompletionTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
DescribeInferenceRecommendationsJobResponse.prototype['LastModifiedTime'] = undefined;

/**
 * @member {String} FailureReason
 */
DescribeInferenceRecommendationsJobResponse.prototype['FailureReason'] = undefined;

/**
 * @member {module:model/DescribeInferenceRecommendationsJobResponseInputConfig} InputConfig
 */
DescribeInferenceRecommendationsJobResponse.prototype['InputConfig'] = undefined;

/**
 * @member {module:model/DescribeInferenceRecommendationsJobResponseStoppingConditions} StoppingConditions
 */
DescribeInferenceRecommendationsJobResponse.prototype['StoppingConditions'] = undefined;

/**
 * @member {Array} InferenceRecommendations
 */
DescribeInferenceRecommendationsJobResponse.prototype['InferenceRecommendations'] = undefined;

/**
 * @member {Array} EndpointPerformances
 */
DescribeInferenceRecommendationsJobResponse.prototype['EndpointPerformances'] = undefined;






export default DescribeInferenceRecommendationsJobResponse;

