/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceDeploymentStatus from './DeviceDeploymentStatus';

/**
 * The DeviceDeploymentSummary model module.
 * @module model/DeviceDeploymentSummary
 * @version 2017-07-24
 */
class DeviceDeploymentSummary {
    /**
     * Constructs a new <code>DeviceDeploymentSummary</code>.
     * Contains information summarizing device details and deployment status.
     * @alias module:model/DeviceDeploymentSummary
     * @param edgeDeploymentPlanArn {String} 
     * @param edgeDeploymentPlanName {String} 
     * @param stageName {String} 
     * @param deviceName {String} 
     * @param deviceArn {String} 
     */
    constructor(edgeDeploymentPlanArn, edgeDeploymentPlanName, stageName, deviceName, deviceArn) { 
        
        DeviceDeploymentSummary.initialize(this, edgeDeploymentPlanArn, edgeDeploymentPlanName, stageName, deviceName, deviceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, edgeDeploymentPlanArn, edgeDeploymentPlanName, stageName, deviceName, deviceArn) { 
        obj['EdgeDeploymentPlanArn'] = edgeDeploymentPlanArn;
        obj['EdgeDeploymentPlanName'] = edgeDeploymentPlanName;
        obj['StageName'] = stageName;
        obj['DeviceName'] = deviceName;
        obj['DeviceArn'] = deviceArn;
    }

    /**
     * Constructs a <code>DeviceDeploymentSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceDeploymentSummary} obj Optional instance to populate.
     * @return {module:model/DeviceDeploymentSummary} The populated <code>DeviceDeploymentSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceDeploymentSummary();

            if (data.hasOwnProperty('EdgeDeploymentPlanArn')) {
                obj['EdgeDeploymentPlanArn'] = ApiClient.convertToType(data['EdgeDeploymentPlanArn'], 'String');
            }
            if (data.hasOwnProperty('EdgeDeploymentPlanName')) {
                obj['EdgeDeploymentPlanName'] = ApiClient.convertToType(data['EdgeDeploymentPlanName'], 'String');
            }
            if (data.hasOwnProperty('StageName')) {
                obj['StageName'] = ApiClient.convertToType(data['StageName'], 'String');
            }
            if (data.hasOwnProperty('DeployedStageName')) {
                obj['DeployedStageName'] = ApiClient.convertToType(data['DeployedStageName'], 'String');
            }
            if (data.hasOwnProperty('DeviceFleetName')) {
                obj['DeviceFleetName'] = ApiClient.convertToType(data['DeviceFleetName'], 'String');
            }
            if (data.hasOwnProperty('DeviceName')) {
                obj['DeviceName'] = ApiClient.convertToType(data['DeviceName'], 'String');
            }
            if (data.hasOwnProperty('DeviceArn')) {
                obj['DeviceArn'] = ApiClient.convertToType(data['DeviceArn'], 'String');
            }
            if (data.hasOwnProperty('DeviceDeploymentStatus')) {
                obj['DeviceDeploymentStatus'] = ApiClient.convertToType(data['DeviceDeploymentStatus'], DeviceDeploymentStatus);
            }
            if (data.hasOwnProperty('DeviceDeploymentStatusMessage')) {
                obj['DeviceDeploymentStatusMessage'] = ApiClient.convertToType(data['DeviceDeploymentStatusMessage'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DeploymentStartTime')) {
                obj['DeploymentStartTime'] = ApiClient.convertToType(data['DeploymentStartTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceDeploymentSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceDeploymentSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeviceDeploymentSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EdgeDeploymentPlanArn`
        if (data['EdgeDeploymentPlanArn']) { // data not null
          String.validateJSON(data['EdgeDeploymentPlanArn']);
        }
        // validate the optional field `EdgeDeploymentPlanName`
        if (data['EdgeDeploymentPlanName']) { // data not null
          String.validateJSON(data['EdgeDeploymentPlanName']);
        }
        // validate the optional field `StageName`
        if (data['StageName']) { // data not null
          String.validateJSON(data['StageName']);
        }
        // validate the optional field `DeployedStageName`
        if (data['DeployedStageName']) { // data not null
          String.validateJSON(data['DeployedStageName']);
        }
        // validate the optional field `DeviceFleetName`
        if (data['DeviceFleetName']) { // data not null
          String.validateJSON(data['DeviceFleetName']);
        }
        // validate the optional field `DeviceName`
        if (data['DeviceName']) { // data not null
          String.validateJSON(data['DeviceName']);
        }
        // validate the optional field `DeviceArn`
        if (data['DeviceArn']) { // data not null
          String.validateJSON(data['DeviceArn']);
        }
        // validate the optional field `DeviceDeploymentStatus`
        if (data['DeviceDeploymentStatus']) { // data not null
          DeviceDeploymentStatus.validateJSON(data['DeviceDeploymentStatus']);
        }
        // validate the optional field `DeviceDeploymentStatusMessage`
        if (data['DeviceDeploymentStatusMessage']) { // data not null
          String.validateJSON(data['DeviceDeploymentStatusMessage']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `DeploymentStartTime`
        if (data['DeploymentStartTime']) { // data not null
          Date.validateJSON(data['DeploymentStartTime']);
        }

        return true;
    }


}

DeviceDeploymentSummary.RequiredProperties = ["EdgeDeploymentPlanArn", "EdgeDeploymentPlanName", "StageName", "DeviceName", "DeviceArn"];

/**
 * @member {String} EdgeDeploymentPlanArn
 */
DeviceDeploymentSummary.prototype['EdgeDeploymentPlanArn'] = undefined;

/**
 * @member {String} EdgeDeploymentPlanName
 */
DeviceDeploymentSummary.prototype['EdgeDeploymentPlanName'] = undefined;

/**
 * @member {String} StageName
 */
DeviceDeploymentSummary.prototype['StageName'] = undefined;

/**
 * @member {String} DeployedStageName
 */
DeviceDeploymentSummary.prototype['DeployedStageName'] = undefined;

/**
 * @member {String} DeviceFleetName
 */
DeviceDeploymentSummary.prototype['DeviceFleetName'] = undefined;

/**
 * @member {String} DeviceName
 */
DeviceDeploymentSummary.prototype['DeviceName'] = undefined;

/**
 * @member {String} DeviceArn
 */
DeviceDeploymentSummary.prototype['DeviceArn'] = undefined;

/**
 * @member {module:model/DeviceDeploymentStatus} DeviceDeploymentStatus
 */
DeviceDeploymentSummary.prototype['DeviceDeploymentStatus'] = undefined;

/**
 * @member {String} DeviceDeploymentStatusMessage
 */
DeviceDeploymentSummary.prototype['DeviceDeploymentStatusMessage'] = undefined;

/**
 * @member {String} Description
 */
DeviceDeploymentSummary.prototype['Description'] = undefined;

/**
 * @member {Date} DeploymentStartTime
 */
DeviceDeploymentSummary.prototype['DeploymentStartTime'] = undefined;






export default DeviceDeploymentSummary;

