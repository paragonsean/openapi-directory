/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HumanTaskConfig from './HumanTaskConfig';
import HumanTaskConfigAnnotationConsolidationConfig from './HumanTaskConfigAnnotationConsolidationConfig';
import HumanTaskConfigPublicWorkforceTaskPrice from './HumanTaskConfigPublicWorkforceTaskPrice';
import HumanTaskConfigUiConfig from './HumanTaskConfigUiConfig';

/**
 * The CreateLabelingJobRequestHumanTaskConfig model module.
 * @module model/CreateLabelingJobRequestHumanTaskConfig
 * @version 2017-07-24
 */
class CreateLabelingJobRequestHumanTaskConfig {
    /**
     * Constructs a new <code>CreateLabelingJobRequestHumanTaskConfig</code>.
     * @alias module:model/CreateLabelingJobRequestHumanTaskConfig
     * @implements module:model/HumanTaskConfig
     * @param workteamArn {String} 
     * @param uiConfig {module:model/HumanTaskConfigUiConfig} 
     * @param preHumanTaskLambdaArn {String} 
     * @param taskTitle {String} 
     * @param taskDescription {String} 
     * @param numberOfHumanWorkersPerDataObject {Number} 
     * @param taskTimeLimitInSeconds {Number} 
     * @param annotationConsolidationConfig {module:model/HumanTaskConfigAnnotationConsolidationConfig} 
     */
    constructor(workteamArn, uiConfig, preHumanTaskLambdaArn, taskTitle, taskDescription, numberOfHumanWorkersPerDataObject, taskTimeLimitInSeconds, annotationConsolidationConfig) { 
        HumanTaskConfig.initialize(this, workteamArn, uiConfig, preHumanTaskLambdaArn, taskTitle, taskDescription, numberOfHumanWorkersPerDataObject, taskTimeLimitInSeconds, annotationConsolidationConfig);
        CreateLabelingJobRequestHumanTaskConfig.initialize(this, workteamArn, uiConfig, preHumanTaskLambdaArn, taskTitle, taskDescription, numberOfHumanWorkersPerDataObject, taskTimeLimitInSeconds, annotationConsolidationConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workteamArn, uiConfig, preHumanTaskLambdaArn, taskTitle, taskDescription, numberOfHumanWorkersPerDataObject, taskTimeLimitInSeconds, annotationConsolidationConfig) { 
        obj['WorkteamArn'] = workteamArn;
        obj['UiConfig'] = uiConfig;
        obj['PreHumanTaskLambdaArn'] = preHumanTaskLambdaArn;
        obj['TaskTitle'] = taskTitle;
        obj['TaskDescription'] = taskDescription;
        obj['NumberOfHumanWorkersPerDataObject'] = numberOfHumanWorkersPerDataObject;
        obj['TaskTimeLimitInSeconds'] = taskTimeLimitInSeconds;
        obj['AnnotationConsolidationConfig'] = annotationConsolidationConfig;
    }

    /**
     * Constructs a <code>CreateLabelingJobRequestHumanTaskConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateLabelingJobRequestHumanTaskConfig} obj Optional instance to populate.
     * @return {module:model/CreateLabelingJobRequestHumanTaskConfig} The populated <code>CreateLabelingJobRequestHumanTaskConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateLabelingJobRequestHumanTaskConfig();
            HumanTaskConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('WorkteamArn')) {
                obj['WorkteamArn'] = ApiClient.convertToType(data['WorkteamArn'], 'String');
            }
            if (data.hasOwnProperty('UiConfig')) {
                obj['UiConfig'] = HumanTaskConfigUiConfig.constructFromObject(data['UiConfig']);
            }
            if (data.hasOwnProperty('PreHumanTaskLambdaArn')) {
                obj['PreHumanTaskLambdaArn'] = ApiClient.convertToType(data['PreHumanTaskLambdaArn'], 'String');
            }
            if (data.hasOwnProperty('TaskKeywords')) {
                obj['TaskKeywords'] = ApiClient.convertToType(data['TaskKeywords'], Array);
            }
            if (data.hasOwnProperty('TaskTitle')) {
                obj['TaskTitle'] = ApiClient.convertToType(data['TaskTitle'], 'String');
            }
            if (data.hasOwnProperty('TaskDescription')) {
                obj['TaskDescription'] = ApiClient.convertToType(data['TaskDescription'], 'String');
            }
            if (data.hasOwnProperty('NumberOfHumanWorkersPerDataObject')) {
                obj['NumberOfHumanWorkersPerDataObject'] = ApiClient.convertToType(data['NumberOfHumanWorkersPerDataObject'], 'Number');
            }
            if (data.hasOwnProperty('TaskTimeLimitInSeconds')) {
                obj['TaskTimeLimitInSeconds'] = ApiClient.convertToType(data['TaskTimeLimitInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('TaskAvailabilityLifetimeInSeconds')) {
                obj['TaskAvailabilityLifetimeInSeconds'] = ApiClient.convertToType(data['TaskAvailabilityLifetimeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('MaxConcurrentTaskCount')) {
                obj['MaxConcurrentTaskCount'] = ApiClient.convertToType(data['MaxConcurrentTaskCount'], 'Number');
            }
            if (data.hasOwnProperty('AnnotationConsolidationConfig')) {
                obj['AnnotationConsolidationConfig'] = HumanTaskConfigAnnotationConsolidationConfig.constructFromObject(data['AnnotationConsolidationConfig']);
            }
            if (data.hasOwnProperty('PublicWorkforceTaskPrice')) {
                obj['PublicWorkforceTaskPrice'] = HumanTaskConfigPublicWorkforceTaskPrice.constructFromObject(data['PublicWorkforceTaskPrice']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateLabelingJobRequestHumanTaskConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateLabelingJobRequestHumanTaskConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateLabelingJobRequestHumanTaskConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `WorkteamArn`
        if (data['WorkteamArn']) { // data not null
          String.validateJSON(data['WorkteamArn']);
        }
        // validate the optional field `UiConfig`
        if (data['UiConfig']) { // data not null
          HumanTaskConfigUiConfig.validateJSON(data['UiConfig']);
        }
        // validate the optional field `PreHumanTaskLambdaArn`
        if (data['PreHumanTaskLambdaArn']) { // data not null
          String.validateJSON(data['PreHumanTaskLambdaArn']);
        }
        // validate the optional field `TaskKeywords`
        if (data['TaskKeywords']) { // data not null
          Array.validateJSON(data['TaskKeywords']);
        }
        // validate the optional field `TaskTitle`
        if (data['TaskTitle']) { // data not null
          String.validateJSON(data['TaskTitle']);
        }
        // validate the optional field `TaskDescription`
        if (data['TaskDescription']) { // data not null
          String.validateJSON(data['TaskDescription']);
        }
        // validate the optional field `NumberOfHumanWorkersPerDataObject`
        if (data['NumberOfHumanWorkersPerDataObject']) { // data not null
          Number.validateJSON(data['NumberOfHumanWorkersPerDataObject']);
        }
        // validate the optional field `TaskTimeLimitInSeconds`
        if (data['TaskTimeLimitInSeconds']) { // data not null
          Number.validateJSON(data['TaskTimeLimitInSeconds']);
        }
        // validate the optional field `TaskAvailabilityLifetimeInSeconds`
        if (data['TaskAvailabilityLifetimeInSeconds']) { // data not null
          Number.validateJSON(data['TaskAvailabilityLifetimeInSeconds']);
        }
        // validate the optional field `MaxConcurrentTaskCount`
        if (data['MaxConcurrentTaskCount']) { // data not null
          Number.validateJSON(data['MaxConcurrentTaskCount']);
        }
        // validate the optional field `AnnotationConsolidationConfig`
        if (data['AnnotationConsolidationConfig']) { // data not null
          HumanTaskConfigAnnotationConsolidationConfig.validateJSON(data['AnnotationConsolidationConfig']);
        }
        // validate the optional field `PublicWorkforceTaskPrice`
        if (data['PublicWorkforceTaskPrice']) { // data not null
          HumanTaskConfigPublicWorkforceTaskPrice.validateJSON(data['PublicWorkforceTaskPrice']);
        }

        return true;
    }


}

CreateLabelingJobRequestHumanTaskConfig.RequiredProperties = ["WorkteamArn", "UiConfig", "PreHumanTaskLambdaArn", "TaskTitle", "TaskDescription", "NumberOfHumanWorkersPerDataObject", "TaskTimeLimitInSeconds", "AnnotationConsolidationConfig"];

/**
 * @member {String} WorkteamArn
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['WorkteamArn'] = undefined;

/**
 * @member {module:model/HumanTaskConfigUiConfig} UiConfig
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['UiConfig'] = undefined;

/**
 * @member {String} PreHumanTaskLambdaArn
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['PreHumanTaskLambdaArn'] = undefined;

/**
 * @member {Array} TaskKeywords
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['TaskKeywords'] = undefined;

/**
 * @member {String} TaskTitle
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['TaskTitle'] = undefined;

/**
 * @member {String} TaskDescription
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['TaskDescription'] = undefined;

/**
 * @member {Number} NumberOfHumanWorkersPerDataObject
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['NumberOfHumanWorkersPerDataObject'] = undefined;

/**
 * @member {Number} TaskTimeLimitInSeconds
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['TaskTimeLimitInSeconds'] = undefined;

/**
 * @member {Number} TaskAvailabilityLifetimeInSeconds
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['TaskAvailabilityLifetimeInSeconds'] = undefined;

/**
 * @member {Number} MaxConcurrentTaskCount
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['MaxConcurrentTaskCount'] = undefined;

/**
 * @member {module:model/HumanTaskConfigAnnotationConsolidationConfig} AnnotationConsolidationConfig
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['AnnotationConsolidationConfig'] = undefined;

/**
 * @member {module:model/HumanTaskConfigPublicWorkforceTaskPrice} PublicWorkforceTaskPrice
 */
CreateLabelingJobRequestHumanTaskConfig.prototype['PublicWorkforceTaskPrice'] = undefined;


// Implement HumanTaskConfig interface:
/**
 * @member {String} WorkteamArn
 */
HumanTaskConfig.prototype['WorkteamArn'] = undefined;
/**
 * @member {module:model/HumanTaskConfigUiConfig} UiConfig
 */
HumanTaskConfig.prototype['UiConfig'] = undefined;
/**
 * @member {String} PreHumanTaskLambdaArn
 */
HumanTaskConfig.prototype['PreHumanTaskLambdaArn'] = undefined;
/**
 * @member {Array} TaskKeywords
 */
HumanTaskConfig.prototype['TaskKeywords'] = undefined;
/**
 * @member {String} TaskTitle
 */
HumanTaskConfig.prototype['TaskTitle'] = undefined;
/**
 * @member {String} TaskDescription
 */
HumanTaskConfig.prototype['TaskDescription'] = undefined;
/**
 * @member {Number} NumberOfHumanWorkersPerDataObject
 */
HumanTaskConfig.prototype['NumberOfHumanWorkersPerDataObject'] = undefined;
/**
 * @member {Number} TaskTimeLimitInSeconds
 */
HumanTaskConfig.prototype['TaskTimeLimitInSeconds'] = undefined;
/**
 * @member {Number} TaskAvailabilityLifetimeInSeconds
 */
HumanTaskConfig.prototype['TaskAvailabilityLifetimeInSeconds'] = undefined;
/**
 * @member {Number} MaxConcurrentTaskCount
 */
HumanTaskConfig.prototype['MaxConcurrentTaskCount'] = undefined;
/**
 * @member {module:model/HumanTaskConfigAnnotationConsolidationConfig} AnnotationConsolidationConfig
 */
HumanTaskConfig.prototype['AnnotationConsolidationConfig'] = undefined;
/**
 * @member {module:model/HumanTaskConfigPublicWorkforceTaskPrice} PublicWorkforceTaskPrice
 */
HumanTaskConfig.prototype['PublicWorkforceTaskPrice'] = undefined;




export default CreateLabelingJobRequestHumanTaskConfig;

