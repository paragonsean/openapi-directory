/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoMLChannelType from './AutoMLChannelType';
import AutoMLJobChannelDataSource from './AutoMLJobChannelDataSource';
import CompressionType from './CompressionType';

/**
 * The AutoMLJobChannel model module.
 * @module model/AutoMLJobChannel
 * @version 2017-07-24
 */
class AutoMLJobChannel {
    /**
     * Constructs a new <code>AutoMLJobChannel</code>.
     * A channel is a named input source that training algorithms can consume. This channel is used for AutoML jobs V2 (jobs created by calling &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateAutoMLJobV2.html\&quot;&gt;CreateAutoMLJobV2&lt;/a&gt;).
     * @alias module:model/AutoMLJobChannel
     */
    constructor() { 
        
        AutoMLJobChannel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoMLJobChannel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoMLJobChannel} obj Optional instance to populate.
     * @return {module:model/AutoMLJobChannel} The populated <code>AutoMLJobChannel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoMLJobChannel();

            if (data.hasOwnProperty('ChannelType')) {
                obj['ChannelType'] = ApiClient.convertToType(data['ChannelType'], AutoMLChannelType);
            }
            if (data.hasOwnProperty('ContentType')) {
                obj['ContentType'] = ApiClient.convertToType(data['ContentType'], 'String');
            }
            if (data.hasOwnProperty('CompressionType')) {
                obj['CompressionType'] = ApiClient.convertToType(data['CompressionType'], CompressionType);
            }
            if (data.hasOwnProperty('DataSource')) {
                obj['DataSource'] = AutoMLJobChannelDataSource.constructFromObject(data['DataSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoMLJobChannel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoMLJobChannel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ChannelType`
        if (data['ChannelType']) { // data not null
          AutoMLChannelType.validateJSON(data['ChannelType']);
        }
        // validate the optional field `ContentType`
        if (data['ContentType']) { // data not null
          String.validateJSON(data['ContentType']);
        }
        // validate the optional field `CompressionType`
        if (data['CompressionType']) { // data not null
          CompressionType.validateJSON(data['CompressionType']);
        }
        // validate the optional field `DataSource`
        if (data['DataSource']) { // data not null
          AutoMLJobChannelDataSource.validateJSON(data['DataSource']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoMLChannelType} ChannelType
 */
AutoMLJobChannel.prototype['ChannelType'] = undefined;

/**
 * @member {String} ContentType
 */
AutoMLJobChannel.prototype['ContentType'] = undefined;

/**
 * @member {module:model/CompressionType} CompressionType
 */
AutoMLJobChannel.prototype['CompressionType'] = undefined;

/**
 * @member {module:model/AutoMLJobChannelDataSource} DataSource
 */
AutoMLJobChannel.prototype['DataSource'] = undefined;






export default AutoMLJobChannel;

