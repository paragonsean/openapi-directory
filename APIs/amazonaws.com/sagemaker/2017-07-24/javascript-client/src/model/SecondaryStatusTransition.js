/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecondaryStatus from './SecondaryStatus';

/**
 * The SecondaryStatusTransition model module.
 * @module model/SecondaryStatusTransition
 * @version 2017-07-24
 */
class SecondaryStatusTransition {
    /**
     * Constructs a new <code>SecondaryStatusTransition</code>.
     * &lt;p&gt;An array element of &lt;code&gt;SecondaryStatusTransitions&lt;/code&gt; for &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeTrainingJob.html\&quot;&gt;DescribeTrainingJob&lt;/a&gt;. It provides additional details about a status that the training job has transitioned through. A training job can be in one of several states, for example, starting, downloading, training, or uploading. Within each state, there are a number of intermediate states. For example, within the starting state, SageMaker could be starting the training job or launching the ML instances. These transitional states are referred to as the job&#39;s secondary status. &lt;/p&gt; &lt;p/&gt;
     * @alias module:model/SecondaryStatusTransition
     * @param status {module:model/SecondaryStatus} 
     * @param startTime {Date} 
     */
    constructor(status, startTime) { 
        
        SecondaryStatusTransition.initialize(this, status, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, startTime) { 
        obj['Status'] = status;
        obj['StartTime'] = startTime;
    }

    /**
     * Constructs a <code>SecondaryStatusTransition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecondaryStatusTransition} obj Optional instance to populate.
     * @return {module:model/SecondaryStatusTransition} The populated <code>SecondaryStatusTransition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecondaryStatusTransition();

            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], SecondaryStatus);
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('StatusMessage')) {
                obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecondaryStatusTransition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecondaryStatusTransition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecondaryStatusTransition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          SecondaryStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `EndTime`
        if (data['EndTime']) { // data not null
          Date.validateJSON(data['EndTime']);
        }
        // validate the optional field `StatusMessage`
        if (data['StatusMessage']) { // data not null
          String.validateJSON(data['StatusMessage']);
        }

        return true;
    }


}

SecondaryStatusTransition.RequiredProperties = ["Status", "StartTime"];

/**
 * @member {module:model/SecondaryStatus} Status
 */
SecondaryStatusTransition.prototype['Status'] = undefined;

/**
 * @member {Date} StartTime
 */
SecondaryStatusTransition.prototype['StartTime'] = undefined;

/**
 * @member {Date} EndTime
 */
SecondaryStatusTransition.prototype['EndTime'] = undefined;

/**
 * @member {String} StatusMessage
 */
SecondaryStatusTransition.prototype['StatusMessage'] = undefined;






export default SecondaryStatusTransition;

