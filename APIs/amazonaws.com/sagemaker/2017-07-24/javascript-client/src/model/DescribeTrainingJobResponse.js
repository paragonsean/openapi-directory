/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CheckpointConfig from './CheckpointConfig';
import CreateTrainingJobRequestRetryStrategy from './CreateTrainingJobRequestRetryStrategy';
import CreateTrainingJobRequestStoppingCondition from './CreateTrainingJobRequestStoppingCondition';
import DebugHookConfig from './DebugHookConfig';
import DescribeTrainingJobResponseAlgorithmSpecification from './DescribeTrainingJobResponseAlgorithmSpecification';
import DescribeTrainingJobResponseModelArtifacts from './DescribeTrainingJobResponseModelArtifacts';
import DescribeTrainingJobResponseOutputDataConfig from './DescribeTrainingJobResponseOutputDataConfig';
import DescribeTrainingJobResponseResourceConfig from './DescribeTrainingJobResponseResourceConfig';
import DescribeTrainingJobResponseVpcConfig from './DescribeTrainingJobResponseVpcConfig';
import DescribeTrainingJobResponseWarmPoolStatus from './DescribeTrainingJobResponseWarmPoolStatus';
import ExperimentConfig from './ExperimentConfig';
import ProfilerConfig from './ProfilerConfig';
import ProfilingStatus from './ProfilingStatus';
import SecondaryStatus from './SecondaryStatus';
import TensorBoardOutputConfig from './TensorBoardOutputConfig';
import TrainingJobStatus from './TrainingJobStatus';

/**
 * The DescribeTrainingJobResponse model module.
 * @module model/DescribeTrainingJobResponse
 * @version 2017-07-24
 */
class DescribeTrainingJobResponse {
    /**
     * Constructs a new <code>DescribeTrainingJobResponse</code>.
     * @alias module:model/DescribeTrainingJobResponse
     * @param trainingJobName {String} 
     * @param trainingJobArn {String} 
     * @param modelArtifacts {module:model/DescribeTrainingJobResponseModelArtifacts} 
     * @param trainingJobStatus {module:model/TrainingJobStatus} 
     * @param secondaryStatus {module:model/SecondaryStatus} 
     * @param algorithmSpecification {module:model/DescribeTrainingJobResponseAlgorithmSpecification} 
     * @param resourceConfig {module:model/DescribeTrainingJobResponseResourceConfig} 
     * @param stoppingCondition {module:model/CreateTrainingJobRequestStoppingCondition} 
     * @param creationTime {Date} 
     */
    constructor(trainingJobName, trainingJobArn, modelArtifacts, trainingJobStatus, secondaryStatus, algorithmSpecification, resourceConfig, stoppingCondition, creationTime) { 
        
        DescribeTrainingJobResponse.initialize(this, trainingJobName, trainingJobArn, modelArtifacts, trainingJobStatus, secondaryStatus, algorithmSpecification, resourceConfig, stoppingCondition, creationTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, trainingJobName, trainingJobArn, modelArtifacts, trainingJobStatus, secondaryStatus, algorithmSpecification, resourceConfig, stoppingCondition, creationTime) { 
        obj['TrainingJobName'] = trainingJobName;
        obj['TrainingJobArn'] = trainingJobArn;
        obj['ModelArtifacts'] = modelArtifacts;
        obj['TrainingJobStatus'] = trainingJobStatus;
        obj['SecondaryStatus'] = secondaryStatus;
        obj['AlgorithmSpecification'] = algorithmSpecification;
        obj['ResourceConfig'] = resourceConfig;
        obj['StoppingCondition'] = stoppingCondition;
        obj['CreationTime'] = creationTime;
    }

    /**
     * Constructs a <code>DescribeTrainingJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeTrainingJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeTrainingJobResponse} The populated <code>DescribeTrainingJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeTrainingJobResponse();

            if (data.hasOwnProperty('TrainingJobName')) {
                obj['TrainingJobName'] = ApiClient.convertToType(data['TrainingJobName'], 'String');
            }
            if (data.hasOwnProperty('TrainingJobArn')) {
                obj['TrainingJobArn'] = ApiClient.convertToType(data['TrainingJobArn'], 'String');
            }
            if (data.hasOwnProperty('TuningJobArn')) {
                obj['TuningJobArn'] = ApiClient.convertToType(data['TuningJobArn'], 'String');
            }
            if (data.hasOwnProperty('LabelingJobArn')) {
                obj['LabelingJobArn'] = ApiClient.convertToType(data['LabelingJobArn'], 'String');
            }
            if (data.hasOwnProperty('AutoMLJobArn')) {
                obj['AutoMLJobArn'] = ApiClient.convertToType(data['AutoMLJobArn'], 'String');
            }
            if (data.hasOwnProperty('ModelArtifacts')) {
                obj['ModelArtifacts'] = DescribeTrainingJobResponseModelArtifacts.constructFromObject(data['ModelArtifacts']);
            }
            if (data.hasOwnProperty('TrainingJobStatus')) {
                obj['TrainingJobStatus'] = ApiClient.convertToType(data['TrainingJobStatus'], TrainingJobStatus);
            }
            if (data.hasOwnProperty('SecondaryStatus')) {
                obj['SecondaryStatus'] = ApiClient.convertToType(data['SecondaryStatus'], SecondaryStatus);
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('HyperParameters')) {
                obj['HyperParameters'] = ApiClient.convertToType(data['HyperParameters'], Object);
            }
            if (data.hasOwnProperty('AlgorithmSpecification')) {
                obj['AlgorithmSpecification'] = DescribeTrainingJobResponseAlgorithmSpecification.constructFromObject(data['AlgorithmSpecification']);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('InputDataConfig')) {
                obj['InputDataConfig'] = ApiClient.convertToType(data['InputDataConfig'], Array);
            }
            if (data.hasOwnProperty('OutputDataConfig')) {
                obj['OutputDataConfig'] = DescribeTrainingJobResponseOutputDataConfig.constructFromObject(data['OutputDataConfig']);
            }
            if (data.hasOwnProperty('ResourceConfig')) {
                obj['ResourceConfig'] = DescribeTrainingJobResponseResourceConfig.constructFromObject(data['ResourceConfig']);
            }
            if (data.hasOwnProperty('VpcConfig')) {
                obj['VpcConfig'] = DescribeTrainingJobResponseVpcConfig.constructFromObject(data['VpcConfig']);
            }
            if (data.hasOwnProperty('StoppingCondition')) {
                obj['StoppingCondition'] = CreateTrainingJobRequestStoppingCondition.constructFromObject(data['StoppingCondition']);
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('TrainingStartTime')) {
                obj['TrainingStartTime'] = ApiClient.convertToType(data['TrainingStartTime'], 'Date');
            }
            if (data.hasOwnProperty('TrainingEndTime')) {
                obj['TrainingEndTime'] = ApiClient.convertToType(data['TrainingEndTime'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
            if (data.hasOwnProperty('SecondaryStatusTransitions')) {
                obj['SecondaryStatusTransitions'] = ApiClient.convertToType(data['SecondaryStatusTransitions'], Array);
            }
            if (data.hasOwnProperty('FinalMetricDataList')) {
                obj['FinalMetricDataList'] = ApiClient.convertToType(data['FinalMetricDataList'], Array);
            }
            if (data.hasOwnProperty('EnableNetworkIsolation')) {
                obj['EnableNetworkIsolation'] = ApiClient.convertToType(data['EnableNetworkIsolation'], 'Boolean');
            }
            if (data.hasOwnProperty('EnableInterContainerTrafficEncryption')) {
                obj['EnableInterContainerTrafficEncryption'] = ApiClient.convertToType(data['EnableInterContainerTrafficEncryption'], 'Boolean');
            }
            if (data.hasOwnProperty('EnableManagedSpotTraining')) {
                obj['EnableManagedSpotTraining'] = ApiClient.convertToType(data['EnableManagedSpotTraining'], 'Boolean');
            }
            if (data.hasOwnProperty('CheckpointConfig')) {
                obj['CheckpointConfig'] = CheckpointConfig.constructFromObject(data['CheckpointConfig']);
            }
            if (data.hasOwnProperty('TrainingTimeInSeconds')) {
                obj['TrainingTimeInSeconds'] = ApiClient.convertToType(data['TrainingTimeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('BillableTimeInSeconds')) {
                obj['BillableTimeInSeconds'] = ApiClient.convertToType(data['BillableTimeInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('DebugHookConfig')) {
                obj['DebugHookConfig'] = DebugHookConfig.constructFromObject(data['DebugHookConfig']);
            }
            if (data.hasOwnProperty('ExperimentConfig')) {
                obj['ExperimentConfig'] = ExperimentConfig.constructFromObject(data['ExperimentConfig']);
            }
            if (data.hasOwnProperty('DebugRuleConfigurations')) {
                obj['DebugRuleConfigurations'] = ApiClient.convertToType(data['DebugRuleConfigurations'], Array);
            }
            if (data.hasOwnProperty('TensorBoardOutputConfig')) {
                obj['TensorBoardOutputConfig'] = TensorBoardOutputConfig.constructFromObject(data['TensorBoardOutputConfig']);
            }
            if (data.hasOwnProperty('DebugRuleEvaluationStatuses')) {
                obj['DebugRuleEvaluationStatuses'] = ApiClient.convertToType(data['DebugRuleEvaluationStatuses'], Array);
            }
            if (data.hasOwnProperty('ProfilerConfig')) {
                obj['ProfilerConfig'] = ProfilerConfig.constructFromObject(data['ProfilerConfig']);
            }
            if (data.hasOwnProperty('ProfilerRuleConfigurations')) {
                obj['ProfilerRuleConfigurations'] = ApiClient.convertToType(data['ProfilerRuleConfigurations'], Array);
            }
            if (data.hasOwnProperty('ProfilerRuleEvaluationStatuses')) {
                obj['ProfilerRuleEvaluationStatuses'] = ApiClient.convertToType(data['ProfilerRuleEvaluationStatuses'], Array);
            }
            if (data.hasOwnProperty('ProfilingStatus')) {
                obj['ProfilingStatus'] = ApiClient.convertToType(data['ProfilingStatus'], ProfilingStatus);
            }
            if (data.hasOwnProperty('RetryStrategy')) {
                obj['RetryStrategy'] = CreateTrainingJobRequestRetryStrategy.constructFromObject(data['RetryStrategy']);
            }
            if (data.hasOwnProperty('Environment')) {
                obj['Environment'] = ApiClient.convertToType(data['Environment'], Object);
            }
            if (data.hasOwnProperty('WarmPoolStatus')) {
                obj['WarmPoolStatus'] = DescribeTrainingJobResponseWarmPoolStatus.constructFromObject(data['WarmPoolStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeTrainingJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeTrainingJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeTrainingJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `TrainingJobName`
        if (data['TrainingJobName']) { // data not null
          String.validateJSON(data['TrainingJobName']);
        }
        // validate the optional field `TrainingJobArn`
        if (data['TrainingJobArn']) { // data not null
          String.validateJSON(data['TrainingJobArn']);
        }
        // validate the optional field `TuningJobArn`
        if (data['TuningJobArn']) { // data not null
          String.validateJSON(data['TuningJobArn']);
        }
        // validate the optional field `LabelingJobArn`
        if (data['LabelingJobArn']) { // data not null
          String.validateJSON(data['LabelingJobArn']);
        }
        // validate the optional field `AutoMLJobArn`
        if (data['AutoMLJobArn']) { // data not null
          String.validateJSON(data['AutoMLJobArn']);
        }
        // validate the optional field `ModelArtifacts`
        if (data['ModelArtifacts']) { // data not null
          DescribeTrainingJobResponseModelArtifacts.validateJSON(data['ModelArtifacts']);
        }
        // validate the optional field `TrainingJobStatus`
        if (data['TrainingJobStatus']) { // data not null
          TrainingJobStatus.validateJSON(data['TrainingJobStatus']);
        }
        // validate the optional field `SecondaryStatus`
        if (data['SecondaryStatus']) { // data not null
          SecondaryStatus.validateJSON(data['SecondaryStatus']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `HyperParameters`
        if (data['HyperParameters']) { // data not null
          Object.validateJSON(data['HyperParameters']);
        }
        // validate the optional field `AlgorithmSpecification`
        if (data['AlgorithmSpecification']) { // data not null
          DescribeTrainingJobResponseAlgorithmSpecification.validateJSON(data['AlgorithmSpecification']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `InputDataConfig`
        if (data['InputDataConfig']) { // data not null
          Array.validateJSON(data['InputDataConfig']);
        }
        // validate the optional field `OutputDataConfig`
        if (data['OutputDataConfig']) { // data not null
          DescribeTrainingJobResponseOutputDataConfig.validateJSON(data['OutputDataConfig']);
        }
        // validate the optional field `ResourceConfig`
        if (data['ResourceConfig']) { // data not null
          DescribeTrainingJobResponseResourceConfig.validateJSON(data['ResourceConfig']);
        }
        // validate the optional field `VpcConfig`
        if (data['VpcConfig']) { // data not null
          DescribeTrainingJobResponseVpcConfig.validateJSON(data['VpcConfig']);
        }
        // validate the optional field `StoppingCondition`
        if (data['StoppingCondition']) { // data not null
          CreateTrainingJobRequestStoppingCondition.validateJSON(data['StoppingCondition']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `TrainingStartTime`
        if (data['TrainingStartTime']) { // data not null
          Date.validateJSON(data['TrainingStartTime']);
        }
        // validate the optional field `TrainingEndTime`
        if (data['TrainingEndTime']) { // data not null
          Date.validateJSON(data['TrainingEndTime']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }
        // validate the optional field `SecondaryStatusTransitions`
        if (data['SecondaryStatusTransitions']) { // data not null
          Array.validateJSON(data['SecondaryStatusTransitions']);
        }
        // validate the optional field `FinalMetricDataList`
        if (data['FinalMetricDataList']) { // data not null
          Array.validateJSON(data['FinalMetricDataList']);
        }
        // validate the optional field `EnableNetworkIsolation`
        if (data['EnableNetworkIsolation']) { // data not null
          Boolean.validateJSON(data['EnableNetworkIsolation']);
        }
        // validate the optional field `EnableInterContainerTrafficEncryption`
        if (data['EnableInterContainerTrafficEncryption']) { // data not null
          Boolean.validateJSON(data['EnableInterContainerTrafficEncryption']);
        }
        // validate the optional field `EnableManagedSpotTraining`
        if (data['EnableManagedSpotTraining']) { // data not null
          Boolean.validateJSON(data['EnableManagedSpotTraining']);
        }
        // validate the optional field `CheckpointConfig`
        if (data['CheckpointConfig']) { // data not null
          CheckpointConfig.validateJSON(data['CheckpointConfig']);
        }
        // validate the optional field `TrainingTimeInSeconds`
        if (data['TrainingTimeInSeconds']) { // data not null
          Number.validateJSON(data['TrainingTimeInSeconds']);
        }
        // validate the optional field `BillableTimeInSeconds`
        if (data['BillableTimeInSeconds']) { // data not null
          Number.validateJSON(data['BillableTimeInSeconds']);
        }
        // validate the optional field `DebugHookConfig`
        if (data['DebugHookConfig']) { // data not null
          DebugHookConfig.validateJSON(data['DebugHookConfig']);
        }
        // validate the optional field `ExperimentConfig`
        if (data['ExperimentConfig']) { // data not null
          ExperimentConfig.validateJSON(data['ExperimentConfig']);
        }
        // validate the optional field `DebugRuleConfigurations`
        if (data['DebugRuleConfigurations']) { // data not null
          Array.validateJSON(data['DebugRuleConfigurations']);
        }
        // validate the optional field `TensorBoardOutputConfig`
        if (data['TensorBoardOutputConfig']) { // data not null
          TensorBoardOutputConfig.validateJSON(data['TensorBoardOutputConfig']);
        }
        // validate the optional field `DebugRuleEvaluationStatuses`
        if (data['DebugRuleEvaluationStatuses']) { // data not null
          Array.validateJSON(data['DebugRuleEvaluationStatuses']);
        }
        // validate the optional field `ProfilerConfig`
        if (data['ProfilerConfig']) { // data not null
          ProfilerConfig.validateJSON(data['ProfilerConfig']);
        }
        // validate the optional field `ProfilerRuleConfigurations`
        if (data['ProfilerRuleConfigurations']) { // data not null
          Array.validateJSON(data['ProfilerRuleConfigurations']);
        }
        // validate the optional field `ProfilerRuleEvaluationStatuses`
        if (data['ProfilerRuleEvaluationStatuses']) { // data not null
          Array.validateJSON(data['ProfilerRuleEvaluationStatuses']);
        }
        // validate the optional field `ProfilingStatus`
        if (data['ProfilingStatus']) { // data not null
          ProfilingStatus.validateJSON(data['ProfilingStatus']);
        }
        // validate the optional field `RetryStrategy`
        if (data['RetryStrategy']) { // data not null
          CreateTrainingJobRequestRetryStrategy.validateJSON(data['RetryStrategy']);
        }
        // validate the optional field `Environment`
        if (data['Environment']) { // data not null
          Object.validateJSON(data['Environment']);
        }
        // validate the optional field `WarmPoolStatus`
        if (data['WarmPoolStatus']) { // data not null
          DescribeTrainingJobResponseWarmPoolStatus.validateJSON(data['WarmPoolStatus']);
        }

        return true;
    }


}

DescribeTrainingJobResponse.RequiredProperties = ["TrainingJobName", "TrainingJobArn", "ModelArtifacts", "TrainingJobStatus", "SecondaryStatus", "AlgorithmSpecification", "ResourceConfig", "StoppingCondition", "CreationTime"];

/**
 * @member {String} TrainingJobName
 */
DescribeTrainingJobResponse.prototype['TrainingJobName'] = undefined;

/**
 * @member {String} TrainingJobArn
 */
DescribeTrainingJobResponse.prototype['TrainingJobArn'] = undefined;

/**
 * @member {String} TuningJobArn
 */
DescribeTrainingJobResponse.prototype['TuningJobArn'] = undefined;

/**
 * @member {String} LabelingJobArn
 */
DescribeTrainingJobResponse.prototype['LabelingJobArn'] = undefined;

/**
 * @member {String} AutoMLJobArn
 */
DescribeTrainingJobResponse.prototype['AutoMLJobArn'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseModelArtifacts} ModelArtifacts
 */
DescribeTrainingJobResponse.prototype['ModelArtifacts'] = undefined;

/**
 * @member {module:model/TrainingJobStatus} TrainingJobStatus
 */
DescribeTrainingJobResponse.prototype['TrainingJobStatus'] = undefined;

/**
 * @member {module:model/SecondaryStatus} SecondaryStatus
 */
DescribeTrainingJobResponse.prototype['SecondaryStatus'] = undefined;

/**
 * @member {String} FailureReason
 */
DescribeTrainingJobResponse.prototype['FailureReason'] = undefined;

/**
 * @member {Object} HyperParameters
 */
DescribeTrainingJobResponse.prototype['HyperParameters'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseAlgorithmSpecification} AlgorithmSpecification
 */
DescribeTrainingJobResponse.prototype['AlgorithmSpecification'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeTrainingJobResponse.prototype['RoleArn'] = undefined;

/**
 * @member {Array} InputDataConfig
 */
DescribeTrainingJobResponse.prototype['InputDataConfig'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseOutputDataConfig} OutputDataConfig
 */
DescribeTrainingJobResponse.prototype['OutputDataConfig'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseResourceConfig} ResourceConfig
 */
DescribeTrainingJobResponse.prototype['ResourceConfig'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseVpcConfig} VpcConfig
 */
DescribeTrainingJobResponse.prototype['VpcConfig'] = undefined;

/**
 * @member {module:model/CreateTrainingJobRequestStoppingCondition} StoppingCondition
 */
DescribeTrainingJobResponse.prototype['StoppingCondition'] = undefined;

/**
 * @member {Date} CreationTime
 */
DescribeTrainingJobResponse.prototype['CreationTime'] = undefined;

/**
 * @member {Date} TrainingStartTime
 */
DescribeTrainingJobResponse.prototype['TrainingStartTime'] = undefined;

/**
 * @member {Date} TrainingEndTime
 */
DescribeTrainingJobResponse.prototype['TrainingEndTime'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
DescribeTrainingJobResponse.prototype['LastModifiedTime'] = undefined;

/**
 * @member {Array} SecondaryStatusTransitions
 */
DescribeTrainingJobResponse.prototype['SecondaryStatusTransitions'] = undefined;

/**
 * @member {Array} FinalMetricDataList
 */
DescribeTrainingJobResponse.prototype['FinalMetricDataList'] = undefined;

/**
 * @member {Boolean} EnableNetworkIsolation
 */
DescribeTrainingJobResponse.prototype['EnableNetworkIsolation'] = undefined;

/**
 * @member {Boolean} EnableInterContainerTrafficEncryption
 */
DescribeTrainingJobResponse.prototype['EnableInterContainerTrafficEncryption'] = undefined;

/**
 * @member {Boolean} EnableManagedSpotTraining
 */
DescribeTrainingJobResponse.prototype['EnableManagedSpotTraining'] = undefined;

/**
 * @member {module:model/CheckpointConfig} CheckpointConfig
 */
DescribeTrainingJobResponse.prototype['CheckpointConfig'] = undefined;

/**
 * @member {Number} TrainingTimeInSeconds
 */
DescribeTrainingJobResponse.prototype['TrainingTimeInSeconds'] = undefined;

/**
 * @member {Number} BillableTimeInSeconds
 */
DescribeTrainingJobResponse.prototype['BillableTimeInSeconds'] = undefined;

/**
 * @member {module:model/DebugHookConfig} DebugHookConfig
 */
DescribeTrainingJobResponse.prototype['DebugHookConfig'] = undefined;

/**
 * @member {module:model/ExperimentConfig} ExperimentConfig
 */
DescribeTrainingJobResponse.prototype['ExperimentConfig'] = undefined;

/**
 * @member {Array} DebugRuleConfigurations
 */
DescribeTrainingJobResponse.prototype['DebugRuleConfigurations'] = undefined;

/**
 * @member {module:model/TensorBoardOutputConfig} TensorBoardOutputConfig
 */
DescribeTrainingJobResponse.prototype['TensorBoardOutputConfig'] = undefined;

/**
 * @member {Array} DebugRuleEvaluationStatuses
 */
DescribeTrainingJobResponse.prototype['DebugRuleEvaluationStatuses'] = undefined;

/**
 * @member {module:model/ProfilerConfig} ProfilerConfig
 */
DescribeTrainingJobResponse.prototype['ProfilerConfig'] = undefined;

/**
 * @member {Array} ProfilerRuleConfigurations
 */
DescribeTrainingJobResponse.prototype['ProfilerRuleConfigurations'] = undefined;

/**
 * @member {Array} ProfilerRuleEvaluationStatuses
 */
DescribeTrainingJobResponse.prototype['ProfilerRuleEvaluationStatuses'] = undefined;

/**
 * @member {module:model/ProfilingStatus} ProfilingStatus
 */
DescribeTrainingJobResponse.prototype['ProfilingStatus'] = undefined;

/**
 * @member {module:model/CreateTrainingJobRequestRetryStrategy} RetryStrategy
 */
DescribeTrainingJobResponse.prototype['RetryStrategy'] = undefined;

/**
 * @member {Object} Environment
 */
DescribeTrainingJobResponse.prototype['Environment'] = undefined;

/**
 * @member {module:model/DescribeTrainingJobResponseWarmPoolStatus} WarmPoolStatus
 */
DescribeTrainingJobResponse.prototype['WarmPoolStatus'] = undefined;






export default DescribeTrainingJobResponse;

