/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatePipelineRequestPipelineDefinitionS3Location from './CreatePipelineRequestPipelineDefinitionS3Location';
import UpdatePipelineRequestParallelismConfiguration from './UpdatePipelineRequestParallelismConfiguration';

/**
 * The UpdatePipelineRequest model module.
 * @module model/UpdatePipelineRequest
 * @version 2017-07-24
 */
class UpdatePipelineRequest {
    /**
     * Constructs a new <code>UpdatePipelineRequest</code>.
     * @alias module:model/UpdatePipelineRequest
     * @param pipelineName {String} 
     */
    constructor(pipelineName) { 
        
        UpdatePipelineRequest.initialize(this, pipelineName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pipelineName) { 
        obj['PipelineName'] = pipelineName;
    }

    /**
     * Constructs a <code>UpdatePipelineRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePipelineRequest} obj Optional instance to populate.
     * @return {module:model/UpdatePipelineRequest} The populated <code>UpdatePipelineRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePipelineRequest();

            if (data.hasOwnProperty('PipelineName')) {
                obj['PipelineName'] = ApiClient.convertToType(data['PipelineName'], 'String');
            }
            if (data.hasOwnProperty('PipelineDisplayName')) {
                obj['PipelineDisplayName'] = ApiClient.convertToType(data['PipelineDisplayName'], 'String');
            }
            if (data.hasOwnProperty('PipelineDefinition')) {
                obj['PipelineDefinition'] = ApiClient.convertToType(data['PipelineDefinition'], 'String');
            }
            if (data.hasOwnProperty('PipelineDefinitionS3Location')) {
                obj['PipelineDefinitionS3Location'] = CreatePipelineRequestPipelineDefinitionS3Location.constructFromObject(data['PipelineDefinitionS3Location']);
            }
            if (data.hasOwnProperty('PipelineDescription')) {
                obj['PipelineDescription'] = ApiClient.convertToType(data['PipelineDescription'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('ParallelismConfiguration')) {
                obj['ParallelismConfiguration'] = UpdatePipelineRequestParallelismConfiguration.constructFromObject(data['ParallelismConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePipelineRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePipelineRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdatePipelineRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PipelineName`
        if (data['PipelineName']) { // data not null
          String.validateJSON(data['PipelineName']);
        }
        // validate the optional field `PipelineDisplayName`
        if (data['PipelineDisplayName']) { // data not null
          String.validateJSON(data['PipelineDisplayName']);
        }
        // validate the optional field `PipelineDefinition`
        if (data['PipelineDefinition']) { // data not null
          String.validateJSON(data['PipelineDefinition']);
        }
        // validate the optional field `PipelineDefinitionS3Location`
        if (data['PipelineDefinitionS3Location']) { // data not null
          CreatePipelineRequestPipelineDefinitionS3Location.validateJSON(data['PipelineDefinitionS3Location']);
        }
        // validate the optional field `PipelineDescription`
        if (data['PipelineDescription']) { // data not null
          String.validateJSON(data['PipelineDescription']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `ParallelismConfiguration`
        if (data['ParallelismConfiguration']) { // data not null
          UpdatePipelineRequestParallelismConfiguration.validateJSON(data['ParallelismConfiguration']);
        }

        return true;
    }


}

UpdatePipelineRequest.RequiredProperties = ["PipelineName"];

/**
 * @member {String} PipelineName
 */
UpdatePipelineRequest.prototype['PipelineName'] = undefined;

/**
 * @member {String} PipelineDisplayName
 */
UpdatePipelineRequest.prototype['PipelineDisplayName'] = undefined;

/**
 * @member {String} PipelineDefinition
 */
UpdatePipelineRequest.prototype['PipelineDefinition'] = undefined;

/**
 * @member {module:model/CreatePipelineRequestPipelineDefinitionS3Location} PipelineDefinitionS3Location
 */
UpdatePipelineRequest.prototype['PipelineDefinitionS3Location'] = undefined;

/**
 * @member {String} PipelineDescription
 */
UpdatePipelineRequest.prototype['PipelineDescription'] = undefined;

/**
 * @member {String} RoleArn
 */
UpdatePipelineRequest.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/UpdatePipelineRequestParallelismConfiguration} ParallelismConfiguration
 */
UpdatePipelineRequest.prototype['ParallelismConfiguration'] = undefined;






export default UpdatePipelineRequest;

