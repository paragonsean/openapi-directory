/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CaptureStatus from './CaptureStatus';

/**
 * The DataCaptureConfigSummary model module.
 * @module model/DataCaptureConfigSummary
 * @version 2017-07-24
 */
class DataCaptureConfigSummary {
    /**
     * Constructs a new <code>DataCaptureConfigSummary</code>.
     * The currently active data capture configuration used by your Endpoint.
     * @alias module:model/DataCaptureConfigSummary
     * @param enableCapture {Boolean} 
     * @param captureStatus {module:model/CaptureStatus} 
     * @param currentSamplingPercentage {Number} 
     * @param destinationS3Uri {String} 
     * @param kmsKeyId {String} 
     */
    constructor(enableCapture, captureStatus, currentSamplingPercentage, destinationS3Uri, kmsKeyId) { 
        
        DataCaptureConfigSummary.initialize(this, enableCapture, captureStatus, currentSamplingPercentage, destinationS3Uri, kmsKeyId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enableCapture, captureStatus, currentSamplingPercentage, destinationS3Uri, kmsKeyId) { 
        obj['EnableCapture'] = enableCapture;
        obj['CaptureStatus'] = captureStatus;
        obj['CurrentSamplingPercentage'] = currentSamplingPercentage;
        obj['DestinationS3Uri'] = destinationS3Uri;
        obj['KmsKeyId'] = kmsKeyId;
    }

    /**
     * Constructs a <code>DataCaptureConfigSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataCaptureConfigSummary} obj Optional instance to populate.
     * @return {module:model/DataCaptureConfigSummary} The populated <code>DataCaptureConfigSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataCaptureConfigSummary();

            if (data.hasOwnProperty('EnableCapture')) {
                obj['EnableCapture'] = ApiClient.convertToType(data['EnableCapture'], 'Boolean');
            }
            if (data.hasOwnProperty('CaptureStatus')) {
                obj['CaptureStatus'] = ApiClient.convertToType(data['CaptureStatus'], CaptureStatus);
            }
            if (data.hasOwnProperty('CurrentSamplingPercentage')) {
                obj['CurrentSamplingPercentage'] = ApiClient.convertToType(data['CurrentSamplingPercentage'], 'Number');
            }
            if (data.hasOwnProperty('DestinationS3Uri')) {
                obj['DestinationS3Uri'] = ApiClient.convertToType(data['DestinationS3Uri'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataCaptureConfigSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataCaptureConfigSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataCaptureConfigSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EnableCapture`
        if (data['EnableCapture']) { // data not null
          Boolean.validateJSON(data['EnableCapture']);
        }
        // validate the optional field `CaptureStatus`
        if (data['CaptureStatus']) { // data not null
          CaptureStatus.validateJSON(data['CaptureStatus']);
        }
        // validate the optional field `CurrentSamplingPercentage`
        if (data['CurrentSamplingPercentage']) { // data not null
          Number.validateJSON(data['CurrentSamplingPercentage']);
        }
        // validate the optional field `DestinationS3Uri`
        if (data['DestinationS3Uri']) { // data not null
          String.validateJSON(data['DestinationS3Uri']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }

        return true;
    }


}

DataCaptureConfigSummary.RequiredProperties = ["EnableCapture", "CaptureStatus", "CurrentSamplingPercentage", "DestinationS3Uri", "KmsKeyId"];

/**
 * @member {Boolean} EnableCapture
 */
DataCaptureConfigSummary.prototype['EnableCapture'] = undefined;

/**
 * @member {module:model/CaptureStatus} CaptureStatus
 */
DataCaptureConfigSummary.prototype['CaptureStatus'] = undefined;

/**
 * @member {Number} CurrentSamplingPercentage
 */
DataCaptureConfigSummary.prototype['CurrentSamplingPercentage'] = undefined;

/**
 * @member {String} DestinationS3Uri
 */
DataCaptureConfigSummary.prototype['DestinationS3Uri'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DataCaptureConfigSummary.prototype['KmsKeyId'] = undefined;






export default DataCaptureConfigSummary;

