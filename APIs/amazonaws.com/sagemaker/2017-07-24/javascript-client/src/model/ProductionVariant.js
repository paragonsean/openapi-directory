/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductionVariantAcceleratorType from './ProductionVariantAcceleratorType';
import ProductionVariantCoreDumpConfig from './ProductionVariantCoreDumpConfig';
import ProductionVariantInstanceType from './ProductionVariantInstanceType';
import ProductionVariantServerlessConfig from './ProductionVariantServerlessConfig';

/**
 * The ProductionVariant model module.
 * @module model/ProductionVariant
 * @version 2017-07-24
 */
class ProductionVariant {
    /**
     * Constructs a new <code>ProductionVariant</code>.
     *  Identifies a model that you want to host and the resources chosen to deploy for hosting it. If you are deploying multiple models, tell SageMaker how to distribute traffic among the models by specifying variant weights. For more information on production variants, check &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/sagemaker/latest/dg/model-ab-testing.html\&quot;&gt; Production variants&lt;/a&gt;. 
     * @alias module:model/ProductionVariant
     * @param variantName {String} 
     * @param modelName {String} 
     */
    constructor(variantName, modelName) { 
        
        ProductionVariant.initialize(this, variantName, modelName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, variantName, modelName) { 
        obj['VariantName'] = variantName;
        obj['ModelName'] = modelName;
    }

    /**
     * Constructs a <code>ProductionVariant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductionVariant} obj Optional instance to populate.
     * @return {module:model/ProductionVariant} The populated <code>ProductionVariant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductionVariant();

            if (data.hasOwnProperty('VariantName')) {
                obj['VariantName'] = ApiClient.convertToType(data['VariantName'], 'String');
            }
            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('InitialInstanceCount')) {
                obj['InitialInstanceCount'] = ApiClient.convertToType(data['InitialInstanceCount'], 'Number');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], ProductionVariantInstanceType);
            }
            if (data.hasOwnProperty('InitialVariantWeight')) {
                obj['InitialVariantWeight'] = ApiClient.convertToType(data['InitialVariantWeight'], 'Number');
            }
            if (data.hasOwnProperty('AcceleratorType')) {
                obj['AcceleratorType'] = ApiClient.convertToType(data['AcceleratorType'], ProductionVariantAcceleratorType);
            }
            if (data.hasOwnProperty('CoreDumpConfig')) {
                obj['CoreDumpConfig'] = ProductionVariantCoreDumpConfig.constructFromObject(data['CoreDumpConfig']);
            }
            if (data.hasOwnProperty('ServerlessConfig')) {
                obj['ServerlessConfig'] = ProductionVariantServerlessConfig.constructFromObject(data['ServerlessConfig']);
            }
            if (data.hasOwnProperty('VolumeSizeInGB')) {
                obj['VolumeSizeInGB'] = ApiClient.convertToType(data['VolumeSizeInGB'], 'Number');
            }
            if (data.hasOwnProperty('ModelDataDownloadTimeoutInSeconds')) {
                obj['ModelDataDownloadTimeoutInSeconds'] = ApiClient.convertToType(data['ModelDataDownloadTimeoutInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('ContainerStartupHealthCheckTimeoutInSeconds')) {
                obj['ContainerStartupHealthCheckTimeoutInSeconds'] = ApiClient.convertToType(data['ContainerStartupHealthCheckTimeoutInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('EnableSSMAccess')) {
                obj['EnableSSMAccess'] = ApiClient.convertToType(data['EnableSSMAccess'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductionVariant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductionVariant</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductionVariant.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `VariantName`
        if (data['VariantName']) { // data not null
          String.validateJSON(data['VariantName']);
        }
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `InitialInstanceCount`
        if (data['InitialInstanceCount']) { // data not null
          Number.validateJSON(data['InitialInstanceCount']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          ProductionVariantInstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `InitialVariantWeight`
        if (data['InitialVariantWeight']) { // data not null
          Number.validateJSON(data['InitialVariantWeight']);
        }
        // validate the optional field `AcceleratorType`
        if (data['AcceleratorType']) { // data not null
          ProductionVariantAcceleratorType.validateJSON(data['AcceleratorType']);
        }
        // validate the optional field `CoreDumpConfig`
        if (data['CoreDumpConfig']) { // data not null
          ProductionVariantCoreDumpConfig.validateJSON(data['CoreDumpConfig']);
        }
        // validate the optional field `ServerlessConfig`
        if (data['ServerlessConfig']) { // data not null
          ProductionVariantServerlessConfig.validateJSON(data['ServerlessConfig']);
        }
        // validate the optional field `VolumeSizeInGB`
        if (data['VolumeSizeInGB']) { // data not null
          Number.validateJSON(data['VolumeSizeInGB']);
        }
        // validate the optional field `ModelDataDownloadTimeoutInSeconds`
        if (data['ModelDataDownloadTimeoutInSeconds']) { // data not null
          Number.validateJSON(data['ModelDataDownloadTimeoutInSeconds']);
        }
        // validate the optional field `ContainerStartupHealthCheckTimeoutInSeconds`
        if (data['ContainerStartupHealthCheckTimeoutInSeconds']) { // data not null
          Number.validateJSON(data['ContainerStartupHealthCheckTimeoutInSeconds']);
        }
        // validate the optional field `EnableSSMAccess`
        if (data['EnableSSMAccess']) { // data not null
          Boolean.validateJSON(data['EnableSSMAccess']);
        }

        return true;
    }


}

ProductionVariant.RequiredProperties = ["VariantName", "ModelName"];

/**
 * @member {String} VariantName
 */
ProductionVariant.prototype['VariantName'] = undefined;

/**
 * @member {String} ModelName
 */
ProductionVariant.prototype['ModelName'] = undefined;

/**
 * @member {Number} InitialInstanceCount
 */
ProductionVariant.prototype['InitialInstanceCount'] = undefined;

/**
 * @member {module:model/ProductionVariantInstanceType} InstanceType
 */
ProductionVariant.prototype['InstanceType'] = undefined;

/**
 * @member {Number} InitialVariantWeight
 */
ProductionVariant.prototype['InitialVariantWeight'] = undefined;

/**
 * @member {module:model/ProductionVariantAcceleratorType} AcceleratorType
 */
ProductionVariant.prototype['AcceleratorType'] = undefined;

/**
 * @member {module:model/ProductionVariantCoreDumpConfig} CoreDumpConfig
 */
ProductionVariant.prototype['CoreDumpConfig'] = undefined;

/**
 * @member {module:model/ProductionVariantServerlessConfig} ServerlessConfig
 */
ProductionVariant.prototype['ServerlessConfig'] = undefined;

/**
 * @member {Number} VolumeSizeInGB
 */
ProductionVariant.prototype['VolumeSizeInGB'] = undefined;

/**
 * @member {Number} ModelDataDownloadTimeoutInSeconds
 */
ProductionVariant.prototype['ModelDataDownloadTimeoutInSeconds'] = undefined;

/**
 * @member {Number} ContainerStartupHealthCheckTimeoutInSeconds
 */
ProductionVariant.prototype['ContainerStartupHealthCheckTimeoutInSeconds'] = undefined;

/**
 * @member {Boolean} EnableSSMAccess
 */
ProductionVariant.prototype['EnableSSMAccess'] = undefined;






export default ProductionVariant;

