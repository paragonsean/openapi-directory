/**
 * Amazon SageMaker Service
 * <p>Provides APIs for creating and managing SageMaker resources. </p> <p>Other Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html#first-time-user\">SageMaker Developer Guide</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/augmented-ai/2019-11-07/APIReference/Welcome.html\">Amazon Augmented AI Runtime API Reference</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-07-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageStatus from './ImageStatus';

/**
 * The Image model module.
 * @module model/Image
 * @version 2017-07-24
 */
class Image {
    /**
     * Constructs a new <code>Image</code>.
     * A SageMaker image. A SageMaker image represents a set of container images that are derived from a common base container image. Each of these container images is represented by a SageMaker &lt;code&gt;ImageVersion&lt;/code&gt;.
     * @alias module:model/Image
     * @param creationTime {Date} 
     * @param imageArn {String} 
     * @param imageName {String} 
     * @param imageStatus {module:model/ImageStatus} 
     * @param lastModifiedTime {Date} 
     */
    constructor(creationTime, imageArn, imageName, imageStatus, lastModifiedTime) { 
        
        Image.initialize(this, creationTime, imageArn, imageName, imageStatus, lastModifiedTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, creationTime, imageArn, imageName, imageStatus, lastModifiedTime) { 
        obj['CreationTime'] = creationTime;
        obj['ImageArn'] = imageArn;
        obj['ImageName'] = imageName;
        obj['ImageStatus'] = imageStatus;
        obj['LastModifiedTime'] = lastModifiedTime;
    }

    /**
     * Constructs a <code>Image</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Image} obj Optional instance to populate.
     * @return {module:model/Image} The populated <code>Image</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Image();

            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DisplayName')) {
                obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
            }
            if (data.hasOwnProperty('FailureReason')) {
                obj['FailureReason'] = ApiClient.convertToType(data['FailureReason'], 'String');
            }
            if (data.hasOwnProperty('ImageArn')) {
                obj['ImageArn'] = ApiClient.convertToType(data['ImageArn'], 'String');
            }
            if (data.hasOwnProperty('ImageName')) {
                obj['ImageName'] = ApiClient.convertToType(data['ImageName'], 'String');
            }
            if (data.hasOwnProperty('ImageStatus')) {
                obj['ImageStatus'] = ApiClient.convertToType(data['ImageStatus'], ImageStatus);
            }
            if (data.hasOwnProperty('LastModifiedTime')) {
                obj['LastModifiedTime'] = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Image</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Image</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Image.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `DisplayName`
        if (data['DisplayName']) { // data not null
          String.validateJSON(data['DisplayName']);
        }
        // validate the optional field `FailureReason`
        if (data['FailureReason']) { // data not null
          String.validateJSON(data['FailureReason']);
        }
        // validate the optional field `ImageArn`
        if (data['ImageArn']) { // data not null
          String.validateJSON(data['ImageArn']);
        }
        // validate the optional field `ImageName`
        if (data['ImageName']) { // data not null
          String.validateJSON(data['ImageName']);
        }
        // validate the optional field `ImageStatus`
        if (data['ImageStatus']) { // data not null
          ImageStatus.validateJSON(data['ImageStatus']);
        }
        // validate the optional field `LastModifiedTime`
        if (data['LastModifiedTime']) { // data not null
          Date.validateJSON(data['LastModifiedTime']);
        }

        return true;
    }


}

Image.RequiredProperties = ["CreationTime", "ImageArn", "ImageName", "ImageStatus", "LastModifiedTime"];

/**
 * @member {Date} CreationTime
 */
Image.prototype['CreationTime'] = undefined;

/**
 * @member {String} Description
 */
Image.prototype['Description'] = undefined;

/**
 * @member {String} DisplayName
 */
Image.prototype['DisplayName'] = undefined;

/**
 * @member {String} FailureReason
 */
Image.prototype['FailureReason'] = undefined;

/**
 * @member {String} ImageArn
 */
Image.prototype['ImageArn'] = undefined;

/**
 * @member {String} ImageName
 */
Image.prototype['ImageName'] = undefined;

/**
 * @member {module:model/ImageStatus} ImageStatus
 */
Image.prototype['ImageStatus'] = undefined;

/**
 * @member {Date} LastModifiedTime
 */
Image.prototype['LastModifiedTime'] = undefined;






export default Image;

